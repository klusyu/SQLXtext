/**
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl_sql.sQL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl_sql.sQL.Model;
import org.xtext.example.mydsl_sql.sQL.SQLPackage;
import org.xtext.example.mydsl_sql.sQL.SimpleStatement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl_sql.sQL.impl.ModelImpl#getSimpleStatement <em>Simple Statement</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getSimpleStatement() <em>Simple Statement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleStatement()
   * @generated
   * @ordered
   */
  protected SimpleStatement simpleStatement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SQLPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimpleStatement getSimpleStatement()
  {
    return simpleStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimpleStatement(SimpleStatement newSimpleStatement, NotificationChain msgs)
  {
    SimpleStatement oldSimpleStatement = simpleStatement;
    simpleStatement = newSimpleStatement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SQLPackage.MODEL__SIMPLE_STATEMENT, oldSimpleStatement, newSimpleStatement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSimpleStatement(SimpleStatement newSimpleStatement)
  {
    if (newSimpleStatement != simpleStatement)
    {
      NotificationChain msgs = null;
      if (simpleStatement != null)
        msgs = ((InternalEObject)simpleStatement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SQLPackage.MODEL__SIMPLE_STATEMENT, null, msgs);
      if (newSimpleStatement != null)
        msgs = ((InternalEObject)newSimpleStatement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SQLPackage.MODEL__SIMPLE_STATEMENT, null, msgs);
      msgs = basicSetSimpleStatement(newSimpleStatement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SQLPackage.MODEL__SIMPLE_STATEMENT, newSimpleStatement, newSimpleStatement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SQLPackage.MODEL__SIMPLE_STATEMENT:
        return basicSetSimpleStatement(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SQLPackage.MODEL__SIMPLE_STATEMENT:
        return getSimpleStatement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SQLPackage.MODEL__SIMPLE_STATEMENT:
        setSimpleStatement((SimpleStatement)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SQLPackage.MODEL__SIMPLE_STATEMENT:
        setSimpleStatement((SimpleStatement)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SQLPackage.MODEL__SIMPLE_STATEMENT:
        return simpleStatement != null;
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
