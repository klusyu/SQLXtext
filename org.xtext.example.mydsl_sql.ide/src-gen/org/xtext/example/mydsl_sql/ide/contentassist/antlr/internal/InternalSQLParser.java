package org.xtext.example.mydsl_sql.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl_sql.services.SQLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSQLParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "MINUTE_MICROSECOND", "SECOND_MICROSECOND", "HOUR_MICROSECOND", "DAY_MICROSECOND", "AUTO_INCREMENT", "MINUTE_SECOND", "STRAIGHT_JOIN", "HOUR_MINUTE", "HOUR_SECOND", "MICROSECOND", "DAY_MINUTE", "DAY_SECOND", "REFERENCES", "YEAR_MONTH", "BETWEEN_4", "KW_FOLLOWING", "INTERSECT", "MEDIUMINT", "PARTITION", "PRECEDING", "TIMESTAMP", "UNBOUNDED", "VARBINARY", "BETWEEN_2", "NOTEQUAL", "BETWEEN_3", "GREATER_1", "DATETIME", "DAY_HOUR", "DISTINCT", "SIBLINGS", "SMALLINT", "UNSIGNED", "ZEROFILL", "BETWEEN_1", "GREATER", "BETWEEN", "BOOLEAN", "COMMENT", "CURRENT", "DECIMAL", "DEFAULT", "EXCLUDE", "EXTRACT", "FOREIGN", "INCLUDE", "NATURAL", "NUMERIC", "PERCENT", "PRIMARY", "QUARTER", "TINYINT", "UNPIVOT", "VARCHAR", "BIGINT", "BINARY", "CREATE", "DOUBLE", "EXCEPT", "EXISTS", "HAVING", "INSERT", "MINUTE", "OFFSET", "SECOND", "SELECT", "SIGNED", "UNIQUE", "VALUES", "EQUAL", "LESS_1", "NOTIN", "CAST", "CROSS", "FALSE", "FETCH", "FIRST", "FLOAT", "GROUP", "INNER", "LIMIT", "MINUS", "MONTH", "NOW", "NULLS", "ORDER", "OUTER", "PIVOT", "RANGE", "RIGHT", "TABLE", "UNION", "USING", "WHERE", "LESS", "BLOB", "BOOL", "CASE", "CHAR", "DATE", "DESC", "ELSE", "FROM", "FULL", "HOUR", "INTO", "JOIN", "LAST", "LEFT", "LIKE", "NOT_1", "NULL", "ONLY", "OVER", "REAL", "ROWS", "SOME", "TEXT", "THEN", "TIES", "TIME", "TRUE", "WEEK", "WHEN", "WITH", "YEAR", "LeftParenthesisPlusSignRightParenthesis", "ALL", "AND", "ANY", "ASC", "BIT", "DAY", "END", "FOR", "INT", "KEY", "NOT", "ROW", "TOP", "XML", "IN_1", "ExclamationMarkEqualsSign", "X", "AmpersandAmpersand", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AS", "BY", "IN", "IS", "ON", "OR", "CircumflexAccentEqualsSign", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "VerticalLine", "RightCurlyBracket", "RULE_JRPARAM", "RULE_JRNPARAM", "RULE_STAR", "RULE_UNSIGNED", "RULE_INT", "RULE_SIGNED_DOUBLE", "RULE_DATE", "RULE_TIME", "RULE_TIMESTAMP", "RULE_STRING_CORE", "RULE_STRING_", "RULE_STRING", "RULE_DBNAME", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int MONTH=86;
    public static final int CREATE=60;
    public static final int BETWEEN=40;
    public static final int LessThanSign=168;
    public static final int MINUS=85;
    public static final int YEAR=129;
    public static final int HOUR_MINUTE=11;
    public static final int PARTITION=22;
    public static final int INCLUDE=49;
    public static final int INNER=83;
    public static final int GreaterThanSign=170;
    public static final int LEFT=112;
    public static final int RULE_ID=186;
    public static final int BIGINT=58;
    public static final int WHERE=97;
    public static final int GreaterThanSignEqualsSign=151;
    public static final int AS=152;
    public static final int RULE_DATE=179;
    public static final int RULE_INT=177;
    public static final int VARCHAR=57;
    public static final int THEN=122;
    public static final int KEY=140;
    public static final int INTO=109;
    public static final int MICROSECOND=13;
    public static final int RULE_DBNAME=185;
    public static final int GROUP=82;
    public static final int ASC=134;
    public static final int STRAIGHT_JOIN=10;
    public static final int BY=153;
    public static final int X=147;
    public static final int OFFSET=67;
    public static final int Solidus=166;
    public static final int RightCurlyBracket=172;
    public static final int TINYINT=55;
    public static final int RULE_SIGNED_DOUBLE=178;
    public static final int FullStop=165;
    public static final int RULE_UNSIGNED=176;
    public static final int GREATER=39;
    public static final int SECOND_MICROSECOND=5;
    public static final int RULE_STRING_=183;
    public static final int Semicolon=167;
    public static final int PERCENT=52;
    public static final int VARBINARY=26;
    public static final int UNION=95;
    public static final int DESC=104;
    public static final int KW_FOLLOWING=19;
    public static final int RULE_STAR=175;
    public static final int EXTRACT=47;
    public static final int UNIQUE=71;
    public static final int LESS_1=74;
    public static final int FOR=138;
    public static final int RightParenthesis=161;
    public static final int PIVOT=91;
    public static final int BOOLEAN=41;
    public static final int CURRENT=43;
    public static final int FULL=107;
    public static final int NOTEQUAL=28;
    public static final int USING=96;
    public static final int NOT=141;
    public static final int LAST=111;
    public static final int NOW=87;
    public static final int CircumflexAccentEqualsSign=158;
    public static final int MINUTE_SECOND=9;
    public static final int END=137;
    public static final int HAVING=64;
    public static final int BINARY=59;
    public static final int RULE_SL_COMMENT=188;
    public static final int SOME=120;
    public static final int FOREIGN=48;
    public static final int SIGNED=70;
    public static final int AmpersandAmpersand=148;
    public static final int BETWEEN_2=27;
    public static final int BETWEEN_1=38;
    public static final int OUTER=90;
    public static final int EOF=-1;
    public static final int BETWEEN_4=18;
    public static final int BETWEEN_3=29;
    public static final int EXISTS=63;
    public static final int EQUAL=73;
    public static final int TIME=124;
    public static final int MEDIUMINT=21;
    public static final int INTERSECT=20;
    public static final int BIT=135;
    public static final int WITH=128;
    public static final int OVER=117;
    public static final int DATETIME=31;
    public static final int BOOL=100;
    public static final int FALSE=78;
    public static final int RULE_STRING_CORE=182;
    public static final int RULE_TIMESTAMP=181;
    public static final int DEFAULT=45;
    public static final int LessThanSignGreaterThanSign=150;
    public static final int JOIN=110;
    public static final int TEXT=121;
    public static final int LeftParenthesisPlusSignRightParenthesis=130;
    public static final int TABLE=94;
    public static final int WHEN=127;
    public static final int QUARTER=54;
    public static final int LeftParenthesis=160;
    public static final int ELSE=105;
    public static final int RULE_TIME=180;
    public static final int DAY_MINUTE=14;
    public static final int CAST=76;
    public static final int IN=154;
    public static final int DISTINCT=33;
    public static final int IS=155;
    public static final int CASE=101;
    public static final int TOP=143;
    public static final int VerticalLine=171;
    public static final int PlusSign=162;
    public static final int RULE_ML_COMMENT=187;
    public static final int UNPIVOT=56;
    public static final int RULE_JRPARAM=173;
    public static final int VerticalLineVerticalLine=159;
    public static final int DAY_HOUR=32;
    public static final int UNSIGNED=36;
    public static final int CHAR=102;
    public static final int COMMENT=42;
    public static final int ORDER=89;
    public static final int Comma=163;
    public static final int HyphenMinus=164;
    public static final int RIGHT=93;
    public static final int VALUES=72;
    public static final int DOUBLE=61;
    public static final int LessThanSignEqualsSign=149;
    public static final int FETCH=79;
    public static final int NUMERIC=51;
    public static final int SIBLINGS=34;
    public static final int NOTIN=75;
    public static final int FIRST=80;
    public static final int SELECT=69;
    public static final int PRECEDING=23;
    public static final int RULE_JRNPARAM=174;
    public static final int ExclamationMarkEqualsSign=146;
    public static final int DAY=136;
    public static final int ALL=131;
    public static final int BLOB=99;
    public static final int DECIMAL=44;
    public static final int ONLY=116;
    public static final int FROM=106;
    public static final int AUTO_INCREMENT=8;
    public static final int MINUTE_MICROSECOND=4;
    public static final int UNBOUNDED=25;
    public static final int TIMESTAMP=24;
    public static final int MINUTE=66;
    public static final int HOUR_MICROSECOND=6;
    public static final int NULL=115;
    public static final int DAY_MICROSECOND=7;
    public static final int TRUE=125;
    public static final int EXCEPT=62;
    public static final int DATE=103;
    public static final int ZEROFILL=37;
    public static final int LIKE=113;
    public static final int IN_1=145;
    public static final int EXCLUDE=46;
    public static final int AND=132;
    public static final int REAL=118;
    public static final int YEAR_MONTH=17;
    public static final int INSERT=65;
    public static final int LESS=98;
    public static final int ROW=142;
    public static final int DAY_SECOND=15;
    public static final int RANGE=92;
    public static final int FLOAT=81;
    public static final int TIES=123;
    public static final int HOUR=108;
    public static final int LIMIT=84;
    public static final int RULE_STRING=184;
    public static final int ANY=133;
    public static final int INT=139;
    public static final int NATURAL=50;
    public static final int EqualsSign=169;
    public static final int NOT_1=114;
    public static final int GREATER_1=30;
    public static final int WEEK=126;
    public static final int NULLS=88;
    public static final int ON=156;
    public static final int OR=157;
    public static final int RULE_WS=189;
    public static final int PRIMARY=53;
    public static final int RULE_ANY_OTHER=190;
    public static final int CROSS=77;
    public static final int XML=144;
    public static final int SMALLINT=35;
    public static final int SECOND=68;
    public static final int HOUR_SECOND=12;
    public static final int REFERENCES=16;
    public static final int ROWS=119;

    // delegates
    // delegators


        public InternalSQLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSQLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSQLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSQLParser.g"; }


    	private SQLGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("VerticalLine", "'|'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
    		tokenNameToValue.put("X", "'\\u0024X'");
    		tokenNameToValue.put("AmpersandAmpersand", "'&&'");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AS", "'AS'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("IN", "'IN'");
    		tokenNameToValue.put("IS", "'IS'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("CircumflexAccentEqualsSign", "'^='");
    		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
    		tokenNameToValue.put("LeftParenthesisPlusSignRightParenthesis", "'(+)'");
    		tokenNameToValue.put("ALL", "'ALL'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("ANY", "'ANY'");
    		tokenNameToValue.put("ASC", "'ASC'");
    		tokenNameToValue.put("BIT", "'BIT'");
    		tokenNameToValue.put("DAY", "'DAY'");
    		tokenNameToValue.put("END", "'END'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("INT", "'INT'");
    		tokenNameToValue.put("KEY", "'KEY'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("ROW", "'ROW'");
    		tokenNameToValue.put("TOP", "'TOP'");
    		tokenNameToValue.put("XML", "'XML'");
    		tokenNameToValue.put("IN_1", "'{IN'");
    		tokenNameToValue.put("BLOB", "'BLOB'");
    		tokenNameToValue.put("BOOL", "'BOOL'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("CHAR", "'CHAR'");
    		tokenNameToValue.put("DATE", "'DATE'");
    		tokenNameToValue.put("DESC", "'DESC'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("FULL", "'FULL'");
    		tokenNameToValue.put("HOUR", "'HOUR'");
    		tokenNameToValue.put("INTO", "'INTO'");
    		tokenNameToValue.put("JOIN", "'JOIN'");
    		tokenNameToValue.put("LAST", "'LAST'");
    		tokenNameToValue.put("LEFT", "'LEFT'");
    		tokenNameToValue.put("LIKE", "'LIKE'");
    		tokenNameToValue.put("NOT_1", "'NOT\n'");
    		tokenNameToValue.put("NULL", "'NULL'");
    		tokenNameToValue.put("ONLY", "'ONLY'");
    		tokenNameToValue.put("OVER", "'OVER'");
    		tokenNameToValue.put("REAL", "'REAL'");
    		tokenNameToValue.put("ROWS", "'ROWS'");
    		tokenNameToValue.put("SOME", "'SOME'");
    		tokenNameToValue.put("TEXT", "'TEXT'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TIES", "'TIES'");
    		tokenNameToValue.put("TIME", "'TIME'");
    		tokenNameToValue.put("TRUE", "'TRUE'");
    		tokenNameToValue.put("WEEK", "'WEEK'");
    		tokenNameToValue.put("WHEN", "'WHEN'");
    		tokenNameToValue.put("WITH", "'WITH'");
    		tokenNameToValue.put("YEAR", "'YEAR'");
    		tokenNameToValue.put("CAST", "'CAST('");
    		tokenNameToValue.put("CROSS", "'CROSS'");
    		tokenNameToValue.put("FALSE", "'FALSE'");
    		tokenNameToValue.put("FETCH", "'FETCH'");
    		tokenNameToValue.put("FIRST", "'FIRST'");
    		tokenNameToValue.put("FLOAT", "'FLOAT'");
    		tokenNameToValue.put("GROUP", "'GROUP'");
    		tokenNameToValue.put("INNER", "'INNER'");
    		tokenNameToValue.put("LIMIT", "'LIMIT'");
    		tokenNameToValue.put("MINUS", "'MINUS'");
    		tokenNameToValue.put("MONTH", "'MONTH'");
    		tokenNameToValue.put("NOW", "'NOW()'");
    		tokenNameToValue.put("NULLS", "'NULLS'");
    		tokenNameToValue.put("ORDER", "'ORDER'");
    		tokenNameToValue.put("OUTER", "'OUTER'");
    		tokenNameToValue.put("PIVOT", "'PIVOT'");
    		tokenNameToValue.put("RANGE", "'RANGE'");
    		tokenNameToValue.put("RIGHT", "'RIGHT'");
    		tokenNameToValue.put("TABLE", "'TABLE'");
    		tokenNameToValue.put("UNION", "'UNION'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("WHERE", "'WHERE'");
    		tokenNameToValue.put("LESS", "'{LESS'");
    		tokenNameToValue.put("BIGINT", "'BIGINT'");
    		tokenNameToValue.put("BINARY", "'BINARY'");
    		tokenNameToValue.put("CREATE", "'CREATE'");
    		tokenNameToValue.put("DOUBLE", "'DOUBLE'");
    		tokenNameToValue.put("EXCEPT", "'EXCEPT'");
    		tokenNameToValue.put("EXISTS", "'EXISTS'");
    		tokenNameToValue.put("HAVING", "'HAVING'");
    		tokenNameToValue.put("INSERT", "'INSERT'");
    		tokenNameToValue.put("MINUTE", "'MINUTE'");
    		tokenNameToValue.put("OFFSET", "'OFFSET'");
    		tokenNameToValue.put("SECOND", "'SECOND'");
    		tokenNameToValue.put("SELECT", "'SELECT'");
    		tokenNameToValue.put("SIGNED", "'SIGNED'");
    		tokenNameToValue.put("UNIQUE", "'UNIQUE'");
    		tokenNameToValue.put("VALUES", "'VALUES'");
    		tokenNameToValue.put("EQUAL", "'{EQUAL'");
    		tokenNameToValue.put("LESS_1", "'{LESS]'");
    		tokenNameToValue.put("NOTIN", "'{NOTIN'");
    		tokenNameToValue.put("BETWEEN", "'BETWEEN'");
    		tokenNameToValue.put("BOOLEAN", "'BOOLEAN'");
    		tokenNameToValue.put("COMMENT", "'COMMENT'");
    		tokenNameToValue.put("CURRENT", "'CURRENT'");
    		tokenNameToValue.put("DECIMAL", "'DECIMAL'");
    		tokenNameToValue.put("DEFAULT", "'DEFAULT'");
    		tokenNameToValue.put("EXCLUDE", "'EXCLUDE'");
    		tokenNameToValue.put("EXTRACT", "'EXTRACT'");
    		tokenNameToValue.put("FOREIGN", "'FOREIGN'");
    		tokenNameToValue.put("INCLUDE", "'INCLUDE'");
    		tokenNameToValue.put("NATURAL", "'NATURAL'");
    		tokenNameToValue.put("NUMERIC", "'NUMERIC'");
    		tokenNameToValue.put("PERCENT", "'PERCENT'");
    		tokenNameToValue.put("PRIMARY", "'PRIMARY'");
    		tokenNameToValue.put("QUARTER", "'QUARTER'");
    		tokenNameToValue.put("TINYINT", "'TINYINT'");
    		tokenNameToValue.put("UNPIVOT", "'UNPIVOT'");
    		tokenNameToValue.put("VARCHAR", "'VARCHAR'");
    		tokenNameToValue.put("DATETIME", "'DATETIME'");
    		tokenNameToValue.put("DAY_HOUR", "'DAY_HOUR'");
    		tokenNameToValue.put("DISTINCT", "'DISTINCT'");
    		tokenNameToValue.put("SIBLINGS", "'SIBLINGS'");
    		tokenNameToValue.put("SMALLINT", "'SMALLINT'");
    		tokenNameToValue.put("UNSIGNED", "'UNSIGNED'");
    		tokenNameToValue.put("ZEROFILL", "'ZEROFILL'");
    		tokenNameToValue.put("BETWEEN_1", "'{BETWEEN'");
    		tokenNameToValue.put("GREATER", "'{GREATER'");
    		tokenNameToValue.put("KW_FOLLOWING", "'FOLLOWING'");
    		tokenNameToValue.put("INTERSECT", "'INTERSECT'");
    		tokenNameToValue.put("MEDIUMINT", "'MEDIUMINT'");
    		tokenNameToValue.put("PARTITION", "'PARTITION'");
    		tokenNameToValue.put("PRECEDING", "'PRECEDING'");
    		tokenNameToValue.put("TIMESTAMP", "'TIMESTAMP'");
    		tokenNameToValue.put("UNBOUNDED", "'UNBOUNDED'");
    		tokenNameToValue.put("VARBINARY", "'VARBINARY'");
    		tokenNameToValue.put("BETWEEN_2", "'{BETWEEN]'");
    		tokenNameToValue.put("NOTEQUAL", "'{NOTEQUAL'");
    		tokenNameToValue.put("BETWEEN_3", "'{[BETWEEN'");
    		tokenNameToValue.put("GREATER_1", "'{[GREATER'");
    		tokenNameToValue.put("DAY_MINUTE", "'DAY_MINUTE'");
    		tokenNameToValue.put("DAY_SECOND", "'DAY_SECOND'");
    		tokenNameToValue.put("REFERENCES", "'REFERENCES'");
    		tokenNameToValue.put("YEAR_MONTH", "'YEAR_MONTH'");
    		tokenNameToValue.put("BETWEEN_4", "'{[BETWEEN]'");
    		tokenNameToValue.put("HOUR_MINUTE", "'HOUR_MINUTE'");
    		tokenNameToValue.put("HOUR_SECOND", "'HOUR_SECOND'");
    		tokenNameToValue.put("MICROSECOND", "'MICROSECOND'");
    		tokenNameToValue.put("MINUTE_SECOND", "'MINUTE_SECOND'");
    		tokenNameToValue.put("STRAIGHT_JOIN", "'STRAIGHT_JOIN'");
    		tokenNameToValue.put("AUTO_INCREMENT", "'AUTO_INCREMENT'");
    		tokenNameToValue.put("DAY_MICROSECOND", "'DAY_MICROSECOND'");
    		tokenNameToValue.put("HOUR_MICROSECOND", "'HOUR_MICROSECOND'");
    		tokenNameToValue.put("MINUTE_MICROSECOND", "'MINUTE_MICROSECOND'");
    		tokenNameToValue.put("SECOND_MICROSECOND", "'SECOND_MICROSECOND'");
    	}

    	public void setGrammarAccess(SQLGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalSQLParser.g:225:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalSQLParser.g:226:1: ( ruleModel EOF )
            // InternalSQLParser.g:227:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalSQLParser.g:234:1: ruleModel : ( ( rule__Model__SimpleStatementAssignment ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:238:2: ( ( ( rule__Model__SimpleStatementAssignment ) ) )
            // InternalSQLParser.g:239:2: ( ( rule__Model__SimpleStatementAssignment ) )
            {
            // InternalSQLParser.g:239:2: ( ( rule__Model__SimpleStatementAssignment ) )
            // InternalSQLParser.g:240:3: ( rule__Model__SimpleStatementAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getSimpleStatementAssignment()); 
            }
            // InternalSQLParser.g:241:3: ( rule__Model__SimpleStatementAssignment )
            // InternalSQLParser.g:241:4: rule__Model__SimpleStatementAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Model__SimpleStatementAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getSimpleStatementAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleSimpleStatement"
    // InternalSQLParser.g:250:1: entryRuleSimpleStatement : ruleSimpleStatement EOF ;
    public final void entryRuleSimpleStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:251:1: ( ruleSimpleStatement EOF )
            // InternalSQLParser.g:252:1: ruleSimpleStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleStatement"


    // $ANTLR start "ruleSimpleStatement"
    // InternalSQLParser.g:259:1: ruleSimpleStatement : ( ( rule__SimpleStatement__Alternatives ) ) ;
    public final void ruleSimpleStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:263:2: ( ( ( rule__SimpleStatement__Alternatives ) ) )
            // InternalSQLParser.g:264:2: ( ( rule__SimpleStatement__Alternatives ) )
            {
            // InternalSQLParser.g:264:2: ( ( rule__SimpleStatement__Alternatives ) )
            // InternalSQLParser.g:265:3: ( rule__SimpleStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:266:3: ( rule__SimpleStatement__Alternatives )
            // InternalSQLParser.g:266:4: rule__SimpleStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleStatement"


    // $ANTLR start "entryRuleSelectStatement"
    // InternalSQLParser.g:275:1: entryRuleSelectStatement : ruleSelectStatement EOF ;
    public final void entryRuleSelectStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:276:1: ( ruleSelectStatement EOF )
            // InternalSQLParser.g:277:1: ruleSelectStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectStatement"


    // $ANTLR start "ruleSelectStatement"
    // InternalSQLParser.g:284:1: ruleSelectStatement : ( ( rule__SelectStatement__Group__0 ) ) ;
    public final void ruleSelectStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:288:2: ( ( ( rule__SelectStatement__Group__0 ) ) )
            // InternalSQLParser.g:289:2: ( ( rule__SelectStatement__Group__0 ) )
            {
            // InternalSQLParser.g:289:2: ( ( rule__SelectStatement__Group__0 ) )
            // InternalSQLParser.g:290:3: ( rule__SelectStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getGroup()); 
            }
            // InternalSQLParser.g:291:3: ( rule__SelectStatement__Group__0 )
            // InternalSQLParser.g:291:4: rule__SelectStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectStatement"


    // $ANTLR start "entryRuleInsertStatement"
    // InternalSQLParser.g:300:1: entryRuleInsertStatement : ruleInsertStatement EOF ;
    public final void entryRuleInsertStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:301:1: ( ruleInsertStatement EOF )
            // InternalSQLParser.g:302:1: ruleInsertStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInsertStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInsertStatement"


    // $ANTLR start "ruleInsertStatement"
    // InternalSQLParser.g:309:1: ruleInsertStatement : ( ( rule__InsertStatement__Group__0 ) ) ;
    public final void ruleInsertStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:313:2: ( ( ( rule__InsertStatement__Group__0 ) ) )
            // InternalSQLParser.g:314:2: ( ( rule__InsertStatement__Group__0 ) )
            {
            // InternalSQLParser.g:314:2: ( ( rule__InsertStatement__Group__0 ) )
            // InternalSQLParser.g:315:3: ( rule__InsertStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getGroup()); 
            }
            // InternalSQLParser.g:316:3: ( rule__InsertStatement__Group__0 )
            // InternalSQLParser.g:316:4: rule__InsertStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInsertStatement"


    // $ANTLR start "entryRuleInsertFromConstructor"
    // InternalSQLParser.g:325:1: entryRuleInsertFromConstructor : ruleInsertFromConstructor EOF ;
    public final void entryRuleInsertFromConstructor() throws RecognitionException {
        try {
            // InternalSQLParser.g:326:1: ( ruleInsertFromConstructor EOF )
            // InternalSQLParser.g:327:1: ruleInsertFromConstructor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertFromConstructorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInsertFromConstructor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertFromConstructorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInsertFromConstructor"


    // $ANTLR start "ruleInsertFromConstructor"
    // InternalSQLParser.g:334:1: ruleInsertFromConstructor : ( ( rule__InsertFromConstructor__Group__0 ) ) ;
    public final void ruleInsertFromConstructor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:338:2: ( ( ( rule__InsertFromConstructor__Group__0 ) ) )
            // InternalSQLParser.g:339:2: ( ( rule__InsertFromConstructor__Group__0 ) )
            {
            // InternalSQLParser.g:339:2: ( ( rule__InsertFromConstructor__Group__0 ) )
            // InternalSQLParser.g:340:3: ( rule__InsertFromConstructor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertFromConstructorAccess().getGroup()); 
            }
            // InternalSQLParser.g:341:3: ( rule__InsertFromConstructor__Group__0 )
            // InternalSQLParser.g:341:4: rule__InsertFromConstructor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InsertFromConstructor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertFromConstructorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInsertFromConstructor"


    // $ANTLR start "entryRuleFields"
    // InternalSQLParser.g:350:1: entryRuleFields : ruleFields EOF ;
    public final void entryRuleFields() throws RecognitionException {
        try {
            // InternalSQLParser.g:351:1: ( ruleFields EOF )
            // InternalSQLParser.g:352:1: ruleFields EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFields();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFields"


    // $ANTLR start "ruleFields"
    // InternalSQLParser.g:359:1: ruleFields : ( ( rule__Fields__Group__0 ) ) ;
    public final void ruleFields() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:363:2: ( ( ( rule__Fields__Group__0 ) ) )
            // InternalSQLParser.g:364:2: ( ( rule__Fields__Group__0 ) )
            {
            // InternalSQLParser.g:364:2: ( ( rule__Fields__Group__0 ) )
            // InternalSQLParser.g:365:3: ( rule__Fields__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldsAccess().getGroup()); 
            }
            // InternalSQLParser.g:366:3: ( rule__Fields__Group__0 )
            // InternalSQLParser.g:366:4: rule__Fields__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Fields__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFields"


    // $ANTLR start "entryRuleInsertValueList"
    // InternalSQLParser.g:375:1: entryRuleInsertValueList : ruleInsertValueList EOF ;
    public final void entryRuleInsertValueList() throws RecognitionException {
        try {
            // InternalSQLParser.g:376:1: ( ruleInsertValueList EOF )
            // InternalSQLParser.g:377:1: ruleInsertValueList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInsertValueList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInsertValueList"


    // $ANTLR start "ruleInsertValueList"
    // InternalSQLParser.g:384:1: ruleInsertValueList : ( ( rule__InsertValueList__Group__0 ) ) ;
    public final void ruleInsertValueList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:388:2: ( ( ( rule__InsertValueList__Group__0 ) ) )
            // InternalSQLParser.g:389:2: ( ( rule__InsertValueList__Group__0 ) )
            {
            // InternalSQLParser.g:389:2: ( ( rule__InsertValueList__Group__0 ) )
            // InternalSQLParser.g:390:3: ( rule__InsertValueList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getGroup()); 
            }
            // InternalSQLParser.g:391:3: ( rule__InsertValueList__Group__0 )
            // InternalSQLParser.g:391:4: rule__InsertValueList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InsertValueList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInsertValueList"


    // $ANTLR start "entryRuleInsertValues"
    // InternalSQLParser.g:400:1: entryRuleInsertValues : ruleInsertValues EOF ;
    public final void entryRuleInsertValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:401:1: ( ruleInsertValues EOF )
            // InternalSQLParser.g:402:1: ruleInsertValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInsertValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInsertValues"


    // $ANTLR start "ruleInsertValues"
    // InternalSQLParser.g:409:1: ruleInsertValues : ( ( rule__InsertValues__Group__0 ) ) ;
    public final void ruleInsertValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:413:2: ( ( ( rule__InsertValues__Group__0 ) ) )
            // InternalSQLParser.g:414:2: ( ( rule__InsertValues__Group__0 ) )
            {
            // InternalSQLParser.g:414:2: ( ( rule__InsertValues__Group__0 ) )
            // InternalSQLParser.g:415:3: ( rule__InsertValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:416:3: ( rule__InsertValues__Group__0 )
            // InternalSQLParser.g:416:4: rule__InsertValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InsertValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInsertValues"


    // $ANTLR start "entryRuleExpr"
    // InternalSQLParser.g:425:1: entryRuleExpr : ruleExpr EOF ;
    public final void entryRuleExpr() throws RecognitionException {
        try {
            // InternalSQLParser.g:426:1: ( ruleExpr EOF )
            // InternalSQLParser.g:427:1: ruleExpr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpr"


    // $ANTLR start "ruleExpr"
    // InternalSQLParser.g:434:1: ruleExpr : ( ruleBoolExpr ) ;
    public final void ruleExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:438:2: ( ( ruleBoolExpr ) )
            // InternalSQLParser.g:439:2: ( ruleBoolExpr )
            {
            // InternalSQLParser.g:439:2: ( ruleBoolExpr )
            // InternalSQLParser.g:440:3: ruleBoolExpr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExprAccess().getBoolExprParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleBoolExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExprAccess().getBoolExprParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpr"


    // $ANTLR start "entryRuleBoolExpr"
    // InternalSQLParser.g:450:1: entryRuleBoolExpr : ruleBoolExpr EOF ;
    public final void entryRuleBoolExpr() throws RecognitionException {
        try {
            // InternalSQLParser.g:451:1: ( ruleBoolExpr EOF )
            // InternalSQLParser.g:452:1: ruleBoolExpr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolExprRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolExprRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolExpr"


    // $ANTLR start "ruleBoolExpr"
    // InternalSQLParser.g:459:1: ruleBoolExpr : ( ( rule__BoolExpr__Group__0 ) ) ;
    public final void ruleBoolExpr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:463:2: ( ( ( rule__BoolExpr__Group__0 ) ) )
            // InternalSQLParser.g:464:2: ( ( rule__BoolExpr__Group__0 ) )
            {
            // InternalSQLParser.g:464:2: ( ( rule__BoolExpr__Group__0 ) )
            // InternalSQLParser.g:465:3: ( rule__BoolExpr__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolExprAccess().getGroup()); 
            }
            // InternalSQLParser.g:466:3: ( rule__BoolExpr__Group__0 )
            // InternalSQLParser.g:466:4: rule__BoolExpr__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BoolExpr__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolExprAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolExpr"


    // $ANTLR start "entryRuleBoolTerm"
    // InternalSQLParser.g:475:1: entryRuleBoolTerm : ruleBoolTerm EOF ;
    public final void entryRuleBoolTerm() throws RecognitionException {
        try {
            // InternalSQLParser.g:476:1: ( ruleBoolTerm EOF )
            // InternalSQLParser.g:477:1: ruleBoolTerm EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolTermRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolTermRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolTerm"


    // $ANTLR start "ruleBoolTerm"
    // InternalSQLParser.g:484:1: ruleBoolTerm : ( ( rule__BoolTerm__Group__0 ) ) ;
    public final void ruleBoolTerm() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:488:2: ( ( ( rule__BoolTerm__Group__0 ) ) )
            // InternalSQLParser.g:489:2: ( ( rule__BoolTerm__Group__0 ) )
            {
            // InternalSQLParser.g:489:2: ( ( rule__BoolTerm__Group__0 ) )
            // InternalSQLParser.g:490:3: ( rule__BoolTerm__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolTermAccess().getGroup()); 
            }
            // InternalSQLParser.g:491:3: ( rule__BoolTerm__Group__0 )
            // InternalSQLParser.g:491:4: rule__BoolTerm__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BoolTerm__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolTermAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolTerm"


    // $ANTLR start "entryRuleBoolFactor"
    // InternalSQLParser.g:500:1: entryRuleBoolFactor : ruleBoolFactor EOF ;
    public final void entryRuleBoolFactor() throws RecognitionException {
        try {
            // InternalSQLParser.g:501:1: ( ruleBoolFactor EOF )
            // InternalSQLParser.g:502:1: ruleBoolFactor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolFactor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolFactorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolFactor"


    // $ANTLR start "ruleBoolFactor"
    // InternalSQLParser.g:509:1: ruleBoolFactor : ( ( rule__BoolFactor__Group__0 ) ) ;
    public final void ruleBoolFactor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:513:2: ( ( ( rule__BoolFactor__Group__0 ) ) )
            // InternalSQLParser.g:514:2: ( ( rule__BoolFactor__Group__0 ) )
            {
            // InternalSQLParser.g:514:2: ( ( rule__BoolFactor__Group__0 ) )
            // InternalSQLParser.g:515:3: ( rule__BoolFactor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolFactorAccess().getGroup()); 
            }
            // InternalSQLParser.g:516:3: ( rule__BoolFactor__Group__0 )
            // InternalSQLParser.g:516:4: rule__BoolFactor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BoolFactor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolFactorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolFactor"


    // $ANTLR start "entryRuleBoolPri"
    // InternalSQLParser.g:525:1: entryRuleBoolPri : ruleBoolPri EOF ;
    public final void entryRuleBoolPri() throws RecognitionException {
        try {
            // InternalSQLParser.g:526:1: ( ruleBoolPri EOF )
            // InternalSQLParser.g:527:1: ruleBoolPri EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolPriRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolPri();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolPriRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolPri"


    // $ANTLR start "ruleBoolPri"
    // InternalSQLParser.g:534:1: ruleBoolPri : ( ( rule__BoolPri__Alternatives ) ) ;
    public final void ruleBoolPri() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:538:2: ( ( ( rule__BoolPri__Alternatives ) ) )
            // InternalSQLParser.g:539:2: ( ( rule__BoolPri__Alternatives ) )
            {
            // InternalSQLParser.g:539:2: ( ( rule__BoolPri__Alternatives ) )
            // InternalSQLParser.g:540:3: ( rule__BoolPri__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolPriAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:541:3: ( rule__BoolPri__Alternatives )
            // InternalSQLParser.g:541:4: rule__BoolPri__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BoolPri__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolPriAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolPri"


    // $ANTLR start "entryRuleCreateStatement"
    // InternalSQLParser.g:550:1: entryRuleCreateStatement : ruleCreateStatement EOF ;
    public final void entryRuleCreateStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:551:1: ( ruleCreateStatement EOF )
            // InternalSQLParser.g:552:1: ruleCreateStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCreateStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCreateStatement"


    // $ANTLR start "ruleCreateStatement"
    // InternalSQLParser.g:559:1: ruleCreateStatement : ( ( rule__CreateStatement__Group__0 ) ) ;
    public final void ruleCreateStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:563:2: ( ( ( rule__CreateStatement__Group__0 ) ) )
            // InternalSQLParser.g:564:2: ( ( rule__CreateStatement__Group__0 ) )
            {
            // InternalSQLParser.g:564:2: ( ( rule__CreateStatement__Group__0 ) )
            // InternalSQLParser.g:565:3: ( rule__CreateStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementAccess().getGroup()); 
            }
            // InternalSQLParser.g:566:3: ( rule__CreateStatement__Group__0 )
            // InternalSQLParser.g:566:4: rule__CreateStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CreateStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCreateStatement"


    // $ANTLR start "entryRuleCreateTable"
    // InternalSQLParser.g:575:1: entryRuleCreateTable : ruleCreateTable EOF ;
    public final void entryRuleCreateTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:576:1: ( ruleCreateTable EOF )
            // InternalSQLParser.g:577:1: ruleCreateTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCreateTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCreateTable"


    // $ANTLR start "ruleCreateTable"
    // InternalSQLParser.g:584:1: ruleCreateTable : ( ( rule__CreateTable__Group__0 ) ) ;
    public final void ruleCreateTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:588:2: ( ( ( rule__CreateTable__Group__0 ) ) )
            // InternalSQLParser.g:589:2: ( ( rule__CreateTable__Group__0 ) )
            {
            // InternalSQLParser.g:589:2: ( ( rule__CreateTable__Group__0 ) )
            // InternalSQLParser.g:590:3: ( rule__CreateTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:591:3: ( rule__CreateTable__Group__0 )
            // InternalSQLParser.g:591:4: rule__CreateTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCreateTable"


    // $ANTLR start "entryRuleTableElementList"
    // InternalSQLParser.g:600:1: entryRuleTableElementList : ruleTableElementList EOF ;
    public final void entryRuleTableElementList() throws RecognitionException {
        try {
            // InternalSQLParser.g:601:1: ( ruleTableElementList EOF )
            // InternalSQLParser.g:602:1: ruleTableElementList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableElementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableElementList"


    // $ANTLR start "ruleTableElementList"
    // InternalSQLParser.g:609:1: ruleTableElementList : ( ( rule__TableElementList__Group__0 ) ) ;
    public final void ruleTableElementList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:613:2: ( ( ( rule__TableElementList__Group__0 ) ) )
            // InternalSQLParser.g:614:2: ( ( rule__TableElementList__Group__0 ) )
            {
            // InternalSQLParser.g:614:2: ( ( rule__TableElementList__Group__0 ) )
            // InternalSQLParser.g:615:3: ( rule__TableElementList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getGroup()); 
            }
            // InternalSQLParser.g:616:3: ( rule__TableElementList__Group__0 )
            // InternalSQLParser.g:616:4: rule__TableElementList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableElementList"


    // $ANTLR start "entryRuleTableElement"
    // InternalSQLParser.g:625:1: entryRuleTableElement : ruleTableElement EOF ;
    public final void entryRuleTableElement() throws RecognitionException {
        try {
            // InternalSQLParser.g:626:1: ( ruleTableElement EOF )
            // InternalSQLParser.g:627:1: ruleTableElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableElement"


    // $ANTLR start "ruleTableElement"
    // InternalSQLParser.g:634:1: ruleTableElement : ( ( rule__TableElement__Alternatives ) ) ;
    public final void ruleTableElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:638:2: ( ( ( rule__TableElement__Alternatives ) ) )
            // InternalSQLParser.g:639:2: ( ( rule__TableElement__Alternatives ) )
            {
            // InternalSQLParser.g:639:2: ( ( rule__TableElement__Alternatives ) )
            // InternalSQLParser.g:640:3: ( rule__TableElement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:641:3: ( rule__TableElement__Alternatives )
            // InternalSQLParser.g:641:4: rule__TableElement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TableElement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableElement"


    // $ANTLR start "entryRuleColumnDefinition"
    // InternalSQLParser.g:650:1: entryRuleColumnDefinition : ruleColumnDefinition EOF ;
    public final void entryRuleColumnDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:651:1: ( ruleColumnDefinition EOF )
            // InternalSQLParser.g:652:1: ruleColumnDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnDefinition"


    // $ANTLR start "ruleColumnDefinition"
    // InternalSQLParser.g:659:1: ruleColumnDefinition : ( ( rule__ColumnDefinition__Group__0 ) ) ;
    public final void ruleColumnDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:663:2: ( ( ( rule__ColumnDefinition__Group__0 ) ) )
            // InternalSQLParser.g:664:2: ( ( rule__ColumnDefinition__Group__0 ) )
            {
            // InternalSQLParser.g:664:2: ( ( rule__ColumnDefinition__Group__0 ) )
            // InternalSQLParser.g:665:3: ( rule__ColumnDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getGroup()); 
            }
            // InternalSQLParser.g:666:3: ( rule__ColumnDefinition__Group__0 )
            // InternalSQLParser.g:666:4: rule__ColumnDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnDefinition"


    // $ANTLR start "entryRuleTableConstraintDef"
    // InternalSQLParser.g:675:1: entryRuleTableConstraintDef : ruleTableConstraintDef EOF ;
    public final void entryRuleTableConstraintDef() throws RecognitionException {
        try {
            // InternalSQLParser.g:676:1: ( ruleTableConstraintDef EOF )
            // InternalSQLParser.g:677:1: ruleTableConstraintDef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableConstraintDef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableConstraintDef"


    // $ANTLR start "ruleTableConstraintDef"
    // InternalSQLParser.g:684:1: ruleTableConstraintDef : ( ( rule__TableConstraintDef__Alternatives ) ) ;
    public final void ruleTableConstraintDef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:688:2: ( ( ( rule__TableConstraintDef__Alternatives ) ) )
            // InternalSQLParser.g:689:2: ( ( rule__TableConstraintDef__Alternatives ) )
            {
            // InternalSQLParser.g:689:2: ( ( rule__TableConstraintDef__Alternatives ) )
            // InternalSQLParser.g:690:3: ( rule__TableConstraintDef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:691:3: ( rule__TableConstraintDef__Alternatives )
            // InternalSQLParser.g:691:4: rule__TableConstraintDef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableConstraintDef"


    // $ANTLR start "entryRuleColumnNameList"
    // InternalSQLParser.g:700:1: entryRuleColumnNameList : ruleColumnNameList EOF ;
    public final void entryRuleColumnNameList() throws RecognitionException {
        try {
            // InternalSQLParser.g:701:1: ( ruleColumnNameList EOF )
            // InternalSQLParser.g:702:1: ruleColumnNameList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnNameList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnNameList"


    // $ANTLR start "ruleColumnNameList"
    // InternalSQLParser.g:709:1: ruleColumnNameList : ( ( rule__ColumnNameList__Group__0 ) ) ;
    public final void ruleColumnNameList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:713:2: ( ( ( rule__ColumnNameList__Group__0 ) ) )
            // InternalSQLParser.g:714:2: ( ( rule__ColumnNameList__Group__0 ) )
            {
            // InternalSQLParser.g:714:2: ( ( rule__ColumnNameList__Group__0 ) )
            // InternalSQLParser.g:715:3: ( rule__ColumnNameList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getGroup()); 
            }
            // InternalSQLParser.g:716:3: ( rule__ColumnNameList__Group__0 )
            // InternalSQLParser.g:716:4: rule__ColumnNameList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnNameList"


    // $ANTLR start "entryRuleFieldDefinition"
    // InternalSQLParser.g:725:1: entryRuleFieldDefinition : ruleFieldDefinition EOF ;
    public final void entryRuleFieldDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:726:1: ( ruleFieldDefinition EOF )
            // InternalSQLParser.g:727:1: ruleFieldDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFieldDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldDefinition"


    // $ANTLR start "ruleFieldDefinition"
    // InternalSQLParser.g:734:1: ruleFieldDefinition : ( ( rule__FieldDefinition__Group__0 ) ) ;
    public final void ruleFieldDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:738:2: ( ( ( rule__FieldDefinition__Group__0 ) ) )
            // InternalSQLParser.g:739:2: ( ( rule__FieldDefinition__Group__0 ) )
            {
            // InternalSQLParser.g:739:2: ( ( rule__FieldDefinition__Group__0 ) )
            // InternalSQLParser.g:740:3: ( rule__FieldDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDefinitionAccess().getGroup()); 
            }
            // InternalSQLParser.g:741:3: ( rule__FieldDefinition__Group__0 )
            // InternalSQLParser.g:741:4: rule__FieldDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FieldDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldDefinition"


    // $ANTLR start "entryRuleDataType"
    // InternalSQLParser.g:750:1: entryRuleDataType : ruleDataType EOF ;
    public final void entryRuleDataType() throws RecognitionException {
        try {
            // InternalSQLParser.g:751:1: ( ruleDataType EOF )
            // InternalSQLParser.g:752:1: ruleDataType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDataType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataType"


    // $ANTLR start "ruleDataType"
    // InternalSQLParser.g:759:1: ruleDataType : ( ( rule__DataType__Group__0 ) ) ;
    public final void ruleDataType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:763:2: ( ( ( rule__DataType__Group__0 ) ) )
            // InternalSQLParser.g:764:2: ( ( rule__DataType__Group__0 ) )
            {
            // InternalSQLParser.g:764:2: ( ( rule__DataType__Group__0 ) )
            // InternalSQLParser.g:765:3: ( rule__DataType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup()); 
            }
            // InternalSQLParser.g:766:3: ( rule__DataType__Group__0 )
            // InternalSQLParser.g:766:4: rule__DataType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "entryRuleSimpleType"
    // InternalSQLParser.g:775:1: entryRuleSimpleType : ruleSimpleType EOF ;
    public final void entryRuleSimpleType() throws RecognitionException {
        try {
            // InternalSQLParser.g:776:1: ( ruleSimpleType EOF )
            // InternalSQLParser.g:777:1: ruleSimpleType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleType"


    // $ANTLR start "ruleSimpleType"
    // InternalSQLParser.g:784:1: ruleSimpleType : ( ( rule__SimpleType__Alternatives ) ) ;
    public final void ruleSimpleType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:788:2: ( ( ( rule__SimpleType__Alternatives ) ) )
            // InternalSQLParser.g:789:2: ( ( rule__SimpleType__Alternatives ) )
            {
            // InternalSQLParser.g:789:2: ( ( rule__SimpleType__Alternatives ) )
            // InternalSQLParser.g:790:3: ( rule__SimpleType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:791:3: ( rule__SimpleType__Alternatives )
            // InternalSQLParser.g:791:4: rule__SimpleType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleType"


    // $ANTLR start "entryRuleFieldLength"
    // InternalSQLParser.g:800:1: entryRuleFieldLength : ruleFieldLength EOF ;
    public final void entryRuleFieldLength() throws RecognitionException {
        try {
            // InternalSQLParser.g:801:1: ( ruleFieldLength EOF )
            // InternalSQLParser.g:802:1: ruleFieldLength EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFieldLength();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldLength"


    // $ANTLR start "ruleFieldLength"
    // InternalSQLParser.g:809:1: ruleFieldLength : ( ( rule__FieldLength__Group__0 ) ) ;
    public final void ruleFieldLength() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:813:2: ( ( ( rule__FieldLength__Group__0 ) ) )
            // InternalSQLParser.g:814:2: ( ( rule__FieldLength__Group__0 ) )
            {
            // InternalSQLParser.g:814:2: ( ( rule__FieldLength__Group__0 ) )
            // InternalSQLParser.g:815:3: ( rule__FieldLength__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthAccess().getGroup()); 
            }
            // InternalSQLParser.g:816:3: ( rule__FieldLength__Group__0 )
            // InternalSQLParser.g:816:4: rule__FieldLength__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FieldLength__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldLength"


    // $ANTLR start "entryRuleFieldOptions"
    // InternalSQLParser.g:825:1: entryRuleFieldOptions : ruleFieldOptions EOF ;
    public final void entryRuleFieldOptions() throws RecognitionException {
        try {
            // InternalSQLParser.g:826:1: ( ruleFieldOptions EOF )
            // InternalSQLParser.g:827:1: ruleFieldOptions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldOptionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFieldOptions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldOptionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldOptions"


    // $ANTLR start "ruleFieldOptions"
    // InternalSQLParser.g:834:1: ruleFieldOptions : ( ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* ) ) ;
    public final void ruleFieldOptions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:838:2: ( ( ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* ) ) )
            // InternalSQLParser.g:839:2: ( ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* ) )
            {
            // InternalSQLParser.g:839:2: ( ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* ) )
            // InternalSQLParser.g:840:3: ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* )
            {
            // InternalSQLParser.g:840:3: ( ( rule__FieldOptions__Alternatives ) )
            // InternalSQLParser.g:841:4: ( rule__FieldOptions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldOptionsAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:842:4: ( rule__FieldOptions__Alternatives )
            // InternalSQLParser.g:842:5: rule__FieldOptions__Alternatives
            {
            pushFollow(FOLLOW_3);
            rule__FieldOptions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldOptionsAccess().getAlternatives()); 
            }

            }

            // InternalSQLParser.g:845:3: ( ( rule__FieldOptions__Alternatives )* )
            // InternalSQLParser.g:846:4: ( rule__FieldOptions__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldOptionsAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:847:4: ( rule__FieldOptions__Alternatives )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( ((LA1_0>=UNSIGNED && LA1_0<=ZEROFILL)||LA1_0==SIGNED) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSQLParser.g:847:5: rule__FieldOptions__Alternatives
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__FieldOptions__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldOptionsAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldOptions"


    // $ANTLR start "entryRuleColumnAttribute"
    // InternalSQLParser.g:857:1: entryRuleColumnAttribute : ruleColumnAttribute EOF ;
    public final void entryRuleColumnAttribute() throws RecognitionException {
        try {
            // InternalSQLParser.g:858:1: ( ruleColumnAttribute EOF )
            // InternalSQLParser.g:859:1: ruleColumnAttribute EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnAttributeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnAttribute"


    // $ANTLR start "ruleColumnAttribute"
    // InternalSQLParser.g:866:1: ruleColumnAttribute : ( ( rule__ColumnAttribute__Alternatives ) ) ;
    public final void ruleColumnAttribute() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:870:2: ( ( ( rule__ColumnAttribute__Alternatives ) ) )
            // InternalSQLParser.g:871:2: ( ( rule__ColumnAttribute__Alternatives ) )
            {
            // InternalSQLParser.g:871:2: ( ( rule__ColumnAttribute__Alternatives ) )
            // InternalSQLParser.g:872:3: ( rule__ColumnAttribute__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnAttributeAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:873:3: ( rule__ColumnAttribute__Alternatives )
            // InternalSQLParser.g:873:4: rule__ColumnAttribute__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ColumnAttribute__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnAttributeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnAttribute"


    // $ANTLR start "entryRuleNullAttribute"
    // InternalSQLParser.g:882:1: entryRuleNullAttribute : ruleNullAttribute EOF ;
    public final void entryRuleNullAttribute() throws RecognitionException {
        try {
            // InternalSQLParser.g:883:1: ( ruleNullAttribute EOF )
            // InternalSQLParser.g:884:1: ruleNullAttribute EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNullAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullAttributeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNullAttribute"


    // $ANTLR start "ruleNullAttribute"
    // InternalSQLParser.g:891:1: ruleNullAttribute : ( ( rule__NullAttribute__Group__0 ) ) ;
    public final void ruleNullAttribute() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:895:2: ( ( ( rule__NullAttribute__Group__0 ) ) )
            // InternalSQLParser.g:896:2: ( ( rule__NullAttribute__Group__0 ) )
            {
            // InternalSQLParser.g:896:2: ( ( rule__NullAttribute__Group__0 ) )
            // InternalSQLParser.g:897:3: ( rule__NullAttribute__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullAttributeAccess().getGroup()); 
            }
            // InternalSQLParser.g:898:3: ( rule__NullAttribute__Group__0 )
            // InternalSQLParser.g:898:4: rule__NullAttribute__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NullAttribute__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullAttributeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNullAttribute"


    // $ANTLR start "entryRuleDefaultValue"
    // InternalSQLParser.g:907:1: entryRuleDefaultValue : ruleDefaultValue EOF ;
    public final void entryRuleDefaultValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:908:1: ( ruleDefaultValue EOF )
            // InternalSQLParser.g:909:1: ruleDefaultValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefaultValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDefaultValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefaultValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDefaultValue"


    // $ANTLR start "ruleDefaultValue"
    // InternalSQLParser.g:916:1: ruleDefaultValue : ( ( rule__DefaultValue__Group__0 ) ) ;
    public final void ruleDefaultValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:920:2: ( ( ( rule__DefaultValue__Group__0 ) ) )
            // InternalSQLParser.g:921:2: ( ( rule__DefaultValue__Group__0 ) )
            {
            // InternalSQLParser.g:921:2: ( ( rule__DefaultValue__Group__0 ) )
            // InternalSQLParser.g:922:3: ( rule__DefaultValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefaultValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:923:3: ( rule__DefaultValue__Group__0 )
            // InternalSQLParser.g:923:4: rule__DefaultValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DefaultValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefaultValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDefaultValue"


    // $ANTLR start "entryRuleAutoIncrement"
    // InternalSQLParser.g:932:1: entryRuleAutoIncrement : ruleAutoIncrement EOF ;
    public final void entryRuleAutoIncrement() throws RecognitionException {
        try {
            // InternalSQLParser.g:933:1: ( ruleAutoIncrement EOF )
            // InternalSQLParser.g:934:1: ruleAutoIncrement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAutoIncrementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAutoIncrement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAutoIncrementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAutoIncrement"


    // $ANTLR start "ruleAutoIncrement"
    // InternalSQLParser.g:941:1: ruleAutoIncrement : ( AUTO_INCREMENT ) ;
    public final void ruleAutoIncrement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:945:2: ( ( AUTO_INCREMENT ) )
            // InternalSQLParser.g:946:2: ( AUTO_INCREMENT )
            {
            // InternalSQLParser.g:946:2: ( AUTO_INCREMENT )
            // InternalSQLParser.g:947:3: AUTO_INCREMENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAutoIncrementAccess().getAUTO_INCREMENTKeyword()); 
            }
            match(input,AUTO_INCREMENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAutoIncrementAccess().getAUTO_INCREMENTKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAutoIncrement"


    // $ANTLR start "entryRulePrimaryKey"
    // InternalSQLParser.g:957:1: entryRulePrimaryKey : rulePrimaryKey EOF ;
    public final void entryRulePrimaryKey() throws RecognitionException {
        try {
            // InternalSQLParser.g:958:1: ( rulePrimaryKey EOF )
            // InternalSQLParser.g:959:1: rulePrimaryKey EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePrimaryKey();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryKeyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryKey"


    // $ANTLR start "rulePrimaryKey"
    // InternalSQLParser.g:966:1: rulePrimaryKey : ( ( rule__PrimaryKey__Group__0 ) ) ;
    public final void rulePrimaryKey() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:970:2: ( ( ( rule__PrimaryKey__Group__0 ) ) )
            // InternalSQLParser.g:971:2: ( ( rule__PrimaryKey__Group__0 ) )
            {
            // InternalSQLParser.g:971:2: ( ( rule__PrimaryKey__Group__0 ) )
            // InternalSQLParser.g:972:3: ( rule__PrimaryKey__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryKeyAccess().getGroup()); 
            }
            // InternalSQLParser.g:973:3: ( rule__PrimaryKey__Group__0 )
            // InternalSQLParser.g:973:4: rule__PrimaryKey__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryKey__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryKeyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryKey"


    // $ANTLR start "entryRuleUniqueKey"
    // InternalSQLParser.g:982:1: entryRuleUniqueKey : ruleUniqueKey EOF ;
    public final void entryRuleUniqueKey() throws RecognitionException {
        try {
            // InternalSQLParser.g:983:1: ( ruleUniqueKey EOF )
            // InternalSQLParser.g:984:1: ruleUniqueKey EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUniqueKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUniqueKey();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUniqueKeyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUniqueKey"


    // $ANTLR start "ruleUniqueKey"
    // InternalSQLParser.g:991:1: ruleUniqueKey : ( UNIQUE ) ;
    public final void ruleUniqueKey() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:995:2: ( ( UNIQUE ) )
            // InternalSQLParser.g:996:2: ( UNIQUE )
            {
            // InternalSQLParser.g:996:2: ( UNIQUE )
            // InternalSQLParser.g:997:3: UNIQUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUniqueKeyAccess().getUNIQUEKeyword()); 
            }
            match(input,UNIQUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUniqueKeyAccess().getUNIQUEKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUniqueKey"


    // $ANTLR start "entryRuleComment"
    // InternalSQLParser.g:1007:1: entryRuleComment : ruleComment EOF ;
    public final void entryRuleComment() throws RecognitionException {
        try {
            // InternalSQLParser.g:1008:1: ( ruleComment EOF )
            // InternalSQLParser.g:1009:1: ruleComment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // InternalSQLParser.g:1016:1: ruleComment : ( ( rule__Comment__Group__0 ) ) ;
    public final void ruleComment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1020:2: ( ( ( rule__Comment__Group__0 ) ) )
            // InternalSQLParser.g:1021:2: ( ( rule__Comment__Group__0 ) )
            {
            // InternalSQLParser.g:1021:2: ( ( rule__Comment__Group__0 ) )
            // InternalSQLParser.g:1022:3: ( rule__Comment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentAccess().getGroup()); 
            }
            // InternalSQLParser.g:1023:3: ( rule__Comment__Group__0 )
            // InternalSQLParser.g:1023:4: rule__Comment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRuleTableName"
    // InternalSQLParser.g:1032:1: entryRuleTableName : ruleTableName EOF ;
    public final void entryRuleTableName() throws RecognitionException {
        try {
            // InternalSQLParser.g:1033:1: ( ruleTableName EOF )
            // InternalSQLParser.g:1034:1: ruleTableName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableName"


    // $ANTLR start "ruleTableName"
    // InternalSQLParser.g:1041:1: ruleTableName : ( RULE_ID ) ;
    public final void ruleTableName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1045:2: ( ( RULE_ID ) )
            // InternalSQLParser.g:1046:2: ( RULE_ID )
            {
            // InternalSQLParser.g:1046:2: ( RULE_ID )
            // InternalSQLParser.g:1047:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableNameAccess().getIDTerminalRuleCall()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableNameAccess().getIDTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableName"


    // $ANTLR start "entryRuleWithQuery"
    // InternalSQLParser.g:1057:1: entryRuleWithQuery : ruleWithQuery EOF ;
    public final void entryRuleWithQuery() throws RecognitionException {
        try {
            // InternalSQLParser.g:1058:1: ( ruleWithQuery EOF )
            // InternalSQLParser.g:1059:1: ruleWithQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithQuery"


    // $ANTLR start "ruleWithQuery"
    // InternalSQLParser.g:1066:1: ruleWithQuery : ( ( rule__WithQuery__Group__0 ) ) ;
    public final void ruleWithQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1070:2: ( ( ( rule__WithQuery__Group__0 ) ) )
            // InternalSQLParser.g:1071:2: ( ( rule__WithQuery__Group__0 ) )
            {
            // InternalSQLParser.g:1071:2: ( ( rule__WithQuery__Group__0 ) )
            // InternalSQLParser.g:1072:3: ( rule__WithQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup()); 
            }
            // InternalSQLParser.g:1073:3: ( rule__WithQuery__Group__0 )
            // InternalSQLParser.g:1073:4: rule__WithQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithQuery"


    // $ANTLR start "entryRuleWithColumns"
    // InternalSQLParser.g:1082:1: entryRuleWithColumns : ruleWithColumns EOF ;
    public final void entryRuleWithColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1083:1: ( ruleWithColumns EOF )
            // InternalSQLParser.g:1084:1: ruleWithColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithColumns"


    // $ANTLR start "ruleWithColumns"
    // InternalSQLParser.g:1091:1: ruleWithColumns : ( ( rule__WithColumns__Group__0 ) ) ;
    public final void ruleWithColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1095:2: ( ( ( rule__WithColumns__Group__0 ) ) )
            // InternalSQLParser.g:1096:2: ( ( rule__WithColumns__Group__0 ) )
            {
            // InternalSQLParser.g:1096:2: ( ( rule__WithColumns__Group__0 ) )
            // InternalSQLParser.g:1097:3: ( rule__WithColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1098:3: ( rule__WithColumns__Group__0 )
            // InternalSQLParser.g:1098:4: rule__WithColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithColumns"


    // $ANTLR start "entryRuleFetchFirst"
    // InternalSQLParser.g:1107:1: entryRuleFetchFirst : ruleFetchFirst EOF ;
    public final void entryRuleFetchFirst() throws RecognitionException {
        try {
            // InternalSQLParser.g:1108:1: ( ruleFetchFirst EOF )
            // InternalSQLParser.g:1109:1: ruleFetchFirst EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFetchFirst"


    // $ANTLR start "ruleFetchFirst"
    // InternalSQLParser.g:1116:1: ruleFetchFirst : ( ( rule__FetchFirst__Group__0 ) ) ;
    public final void ruleFetchFirst() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1120:2: ( ( ( rule__FetchFirst__Group__0 ) ) )
            // InternalSQLParser.g:1121:2: ( ( rule__FetchFirst__Group__0 ) )
            {
            // InternalSQLParser.g:1121:2: ( ( rule__FetchFirst__Group__0 ) )
            // InternalSQLParser.g:1122:3: ( rule__FetchFirst__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getGroup()); 
            }
            // InternalSQLParser.g:1123:3: ( rule__FetchFirst__Group__0 )
            // InternalSQLParser.g:1123:4: rule__FetchFirst__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFetchFirst"


    // $ANTLR start "entryRuleOffset"
    // InternalSQLParser.g:1132:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // InternalSQLParser.g:1133:1: ( ruleOffset EOF )
            // InternalSQLParser.g:1134:1: ruleOffset EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // InternalSQLParser.g:1141:1: ruleOffset : ( ( rule__Offset__OffsetAssignment ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1145:2: ( ( ( rule__Offset__OffsetAssignment ) ) )
            // InternalSQLParser.g:1146:2: ( ( rule__Offset__OffsetAssignment ) )
            {
            // InternalSQLParser.g:1146:2: ( ( rule__Offset__OffsetAssignment ) )
            // InternalSQLParser.g:1147:3: ( rule__Offset__OffsetAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }
            // InternalSQLParser.g:1148:3: ( rule__Offset__OffsetAssignment )
            // InternalSQLParser.g:1148:4: rule__Offset__OffsetAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Offset__OffsetAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleLimit"
    // InternalSQLParser.g:1157:1: entryRuleLimit : ruleLimit EOF ;
    public final void entryRuleLimit() throws RecognitionException {
        try {
            // InternalSQLParser.g:1158:1: ( ruleLimit EOF )
            // InternalSQLParser.g:1159:1: ruleLimit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLimit"


    // $ANTLR start "ruleLimit"
    // InternalSQLParser.g:1166:1: ruleLimit : ( ( rule__Limit__Alternatives ) ) ;
    public final void ruleLimit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1170:2: ( ( ( rule__Limit__Alternatives ) ) )
            // InternalSQLParser.g:1171:2: ( ( rule__Limit__Alternatives ) )
            {
            // InternalSQLParser.g:1171:2: ( ( rule__Limit__Alternatives ) )
            // InternalSQLParser.g:1172:3: ( rule__Limit__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1173:3: ( rule__Limit__Alternatives )
            // InternalSQLParser.g:1173:4: rule__Limit__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLimit"


    // $ANTLR start "entryRuleSelectQuery"
    // InternalSQLParser.g:1182:1: entryRuleSelectQuery : ruleSelectQuery EOF ;
    public final void entryRuleSelectQuery() throws RecognitionException {
        try {
            // InternalSQLParser.g:1183:1: ( ruleSelectQuery EOF )
            // InternalSQLParser.g:1184:1: ruleSelectQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectQuery"


    // $ANTLR start "ruleSelectQuery"
    // InternalSQLParser.g:1191:1: ruleSelectQuery : ( ( rule__SelectQuery__Group__0 ) ) ;
    public final void ruleSelectQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1195:2: ( ( ( rule__SelectQuery__Group__0 ) ) )
            // InternalSQLParser.g:1196:2: ( ( rule__SelectQuery__Group__0 ) )
            {
            // InternalSQLParser.g:1196:2: ( ( rule__SelectQuery__Group__0 ) )
            // InternalSQLParser.g:1197:3: ( rule__SelectQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getGroup()); 
            }
            // InternalSQLParser.g:1198:3: ( rule__SelectQuery__Group__0 )
            // InternalSQLParser.g:1198:4: rule__SelectQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectQuery"


    // $ANTLR start "entryRuleSelectSubSet"
    // InternalSQLParser.g:1207:1: entryRuleSelectSubSet : ruleSelectSubSet EOF ;
    public final void entryRuleSelectSubSet() throws RecognitionException {
        try {
            // InternalSQLParser.g:1208:1: ( ruleSelectSubSet EOF )
            // InternalSQLParser.g:1209:1: ruleSelectSubSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectSubSet"


    // $ANTLR start "ruleSelectSubSet"
    // InternalSQLParser.g:1216:1: ruleSelectSubSet : ( ( rule__SelectSubSet__Group__0 ) ) ;
    public final void ruleSelectSubSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1220:2: ( ( ( rule__SelectSubSet__Group__0 ) ) )
            // InternalSQLParser.g:1221:2: ( ( rule__SelectSubSet__Group__0 ) )
            {
            // InternalSQLParser.g:1221:2: ( ( rule__SelectSubSet__Group__0 ) )
            // InternalSQLParser.g:1222:3: ( rule__SelectSubSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }
            // InternalSQLParser.g:1223:3: ( rule__SelectSubSet__Group__0 )
            // InternalSQLParser.g:1223:4: rule__SelectSubSet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectSubSet"


    // $ANTLR start "entryRuleSelect"
    // InternalSQLParser.g:1232:1: entryRuleSelect : ruleSelect EOF ;
    public final void entryRuleSelect() throws RecognitionException {
        try {
            // InternalSQLParser.g:1233:1: ( ruleSelect EOF )
            // InternalSQLParser.g:1234:1: ruleSelect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelect"


    // $ANTLR start "ruleSelect"
    // InternalSQLParser.g:1241:1: ruleSelect : ( ( rule__Select__Group__0 ) ) ;
    public final void ruleSelect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1245:2: ( ( ( rule__Select__Group__0 ) ) )
            // InternalSQLParser.g:1246:2: ( ( rule__Select__Group__0 ) )
            {
            // InternalSQLParser.g:1246:2: ( ( rule__Select__Group__0 ) )
            // InternalSQLParser.g:1247:3: ( rule__Select__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup()); 
            }
            // InternalSQLParser.g:1248:3: ( rule__Select__Group__0 )
            // InternalSQLParser.g:1248:4: rule__Select__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelect"


    // $ANTLR start "entryRuleColumns"
    // InternalSQLParser.g:1257:1: entryRuleColumns : ruleColumns EOF ;
    public final void entryRuleColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1258:1: ( ruleColumns EOF )
            // InternalSQLParser.g:1259:1: ruleColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumns"


    // $ANTLR start "ruleColumns"
    // InternalSQLParser.g:1266:1: ruleColumns : ( ( rule__Columns__Group__0 ) ) ;
    public final void ruleColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1270:2: ( ( ( rule__Columns__Group__0 ) ) )
            // InternalSQLParser.g:1271:2: ( ( rule__Columns__Group__0 ) )
            {
            // InternalSQLParser.g:1271:2: ( ( rule__Columns__Group__0 ) )
            // InternalSQLParser.g:1272:3: ( rule__Columns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1273:3: ( rule__Columns__Group__0 )
            // InternalSQLParser.g:1273:4: rule__Columns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumns"


    // $ANTLR start "entryRuleColumnOrAlias"
    // InternalSQLParser.g:1282:1: entryRuleColumnOrAlias : ruleColumnOrAlias EOF ;
    public final void entryRuleColumnOrAlias() throws RecognitionException {
        try {
            // InternalSQLParser.g:1283:1: ( ruleColumnOrAlias EOF )
            // InternalSQLParser.g:1284:1: ruleColumnOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOrAlias"


    // $ANTLR start "ruleColumnOrAlias"
    // InternalSQLParser.g:1291:1: ruleColumnOrAlias : ( ( rule__ColumnOrAlias__Alternatives ) ) ;
    public final void ruleColumnOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1295:2: ( ( ( rule__ColumnOrAlias__Alternatives ) ) )
            // InternalSQLParser.g:1296:2: ( ( rule__ColumnOrAlias__Alternatives ) )
            {
            // InternalSQLParser.g:1296:2: ( ( rule__ColumnOrAlias__Alternatives ) )
            // InternalSQLParser.g:1297:3: ( rule__ColumnOrAlias__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1298:3: ( rule__ColumnOrAlias__Alternatives )
            // InternalSQLParser.g:1298:4: rule__ColumnOrAlias__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOrAlias"


    // $ANTLR start "entryRuleColumnFull"
    // InternalSQLParser.g:1307:1: entryRuleColumnFull : ruleColumnFull EOF ;
    public final void entryRuleColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1308:1: ( ruleColumnFull EOF )
            // InternalSQLParser.g:1309:1: ruleColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnFull"


    // $ANTLR start "ruleColumnFull"
    // InternalSQLParser.g:1316:1: ruleColumnFull : ( ( rule__ColumnFull__Group__0 ) ) ;
    public final void ruleColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1320:2: ( ( ( rule__ColumnFull__Group__0 ) ) )
            // InternalSQLParser.g:1321:2: ( ( rule__ColumnFull__Group__0 ) )
            {
            // InternalSQLParser.g:1321:2: ( ( rule__ColumnFull__Group__0 ) )
            // InternalSQLParser.g:1322:3: ( rule__ColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:1323:3: ( rule__ColumnFull__Group__0 )
            // InternalSQLParser.g:1323:4: rule__ColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnFull"


    // $ANTLR start "entryRuleTables"
    // InternalSQLParser.g:1332:1: entryRuleTables : ruleTables EOF ;
    public final void entryRuleTables() throws RecognitionException {
        try {
            // InternalSQLParser.g:1333:1: ( ruleTables EOF )
            // InternalSQLParser.g:1334:1: ruleTables EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTables"


    // $ANTLR start "ruleTables"
    // InternalSQLParser.g:1341:1: ruleTables : ( ( rule__Tables__Group__0 ) ) ;
    public final void ruleTables() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1345:2: ( ( ( rule__Tables__Group__0 ) ) )
            // InternalSQLParser.g:1346:2: ( ( rule__Tables__Group__0 ) )
            {
            // InternalSQLParser.g:1346:2: ( ( rule__Tables__Group__0 ) )
            // InternalSQLParser.g:1347:3: ( rule__Tables__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1348:3: ( rule__Tables__Group__0 )
            // InternalSQLParser.g:1348:4: rule__Tables__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTables"


    // $ANTLR start "entryRuleFromTable"
    // InternalSQLParser.g:1357:1: entryRuleFromTable : ruleFromTable EOF ;
    public final void entryRuleFromTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:1358:1: ( ruleFromTable EOF )
            // InternalSQLParser.g:1359:1: ruleFromTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTable"


    // $ANTLR start "ruleFromTable"
    // InternalSQLParser.g:1366:1: ruleFromTable : ( ( rule__FromTable__Group__0 ) ) ;
    public final void ruleFromTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1370:2: ( ( ( rule__FromTable__Group__0 ) ) )
            // InternalSQLParser.g:1371:2: ( ( rule__FromTable__Group__0 ) )
            {
            // InternalSQLParser.g:1371:2: ( ( rule__FromTable__Group__0 ) )
            // InternalSQLParser.g:1372:3: ( rule__FromTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:1373:3: ( rule__FromTable__Group__0 )
            // InternalSQLParser.g:1373:4: rule__FromTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTable"


    // $ANTLR start "entryRuleFromTableJoin"
    // InternalSQLParser.g:1382:1: entryRuleFromTableJoin : ruleFromTableJoin EOF ;
    public final void entryRuleFromTableJoin() throws RecognitionException {
        try {
            // InternalSQLParser.g:1383:1: ( ruleFromTableJoin EOF )
            // InternalSQLParser.g:1384:1: ruleFromTableJoin EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTableJoin"


    // $ANTLR start "ruleFromTableJoin"
    // InternalSQLParser.g:1391:1: ruleFromTableJoin : ( ( rule__FromTableJoin__Group__0 ) ) ;
    public final void ruleFromTableJoin() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1395:2: ( ( ( rule__FromTableJoin__Group__0 ) ) )
            // InternalSQLParser.g:1396:2: ( ( rule__FromTableJoin__Group__0 ) )
            {
            // InternalSQLParser.g:1396:2: ( ( rule__FromTableJoin__Group__0 ) )
            // InternalSQLParser.g:1397:3: ( rule__FromTableJoin__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }
            // InternalSQLParser.g:1398:3: ( rule__FromTableJoin__Group__0 )
            // InternalSQLParser.g:1398:4: rule__FromTableJoin__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTableJoin"


    // $ANTLR start "entryRuleJoinCondition"
    // InternalSQLParser.g:1407:1: entryRuleJoinCondition : ruleJoinCondition EOF ;
    public final void entryRuleJoinCondition() throws RecognitionException {
        try {
            // InternalSQLParser.g:1408:1: ( ruleJoinCondition EOF )
            // InternalSQLParser.g:1409:1: ruleJoinCondition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinCondition"


    // $ANTLR start "ruleJoinCondition"
    // InternalSQLParser.g:1416:1: ruleJoinCondition : ( ( rule__JoinCondition__Group__0 ) ) ;
    public final void ruleJoinCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1420:2: ( ( ( rule__JoinCondition__Group__0 ) ) )
            // InternalSQLParser.g:1421:2: ( ( rule__JoinCondition__Group__0 ) )
            {
            // InternalSQLParser.g:1421:2: ( ( rule__JoinCondition__Group__0 ) )
            // InternalSQLParser.g:1422:3: ( rule__JoinCondition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1423:3: ( rule__JoinCondition__Group__0 )
            // InternalSQLParser.g:1423:4: rule__JoinCondition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinCondition"


    // $ANTLR start "entryRuleUsingCols"
    // InternalSQLParser.g:1432:1: entryRuleUsingCols : ruleUsingCols EOF ;
    public final void entryRuleUsingCols() throws RecognitionException {
        try {
            // InternalSQLParser.g:1433:1: ( ruleUsingCols EOF )
            // InternalSQLParser.g:1434:1: ruleUsingCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUsingCols"


    // $ANTLR start "ruleUsingCols"
    // InternalSQLParser.g:1441:1: ruleUsingCols : ( ( rule__UsingCols__Group__0 ) ) ;
    public final void ruleUsingCols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1445:2: ( ( ( rule__UsingCols__Group__0 ) ) )
            // InternalSQLParser.g:1446:2: ( ( rule__UsingCols__Group__0 ) )
            {
            // InternalSQLParser.g:1446:2: ( ( rule__UsingCols__Group__0 ) )
            // InternalSQLParser.g:1447:3: ( rule__UsingCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1448:3: ( rule__UsingCols__Group__0 )
            // InternalSQLParser.g:1448:4: rule__UsingCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUsingCols"


    // $ANTLR start "entryRuleTableOrAlias"
    // InternalSQLParser.g:1457:1: entryRuleTableOrAlias : ruleTableOrAlias EOF ;
    public final void entryRuleTableOrAlias() throws RecognitionException {
        try {
            // InternalSQLParser.g:1458:1: ( ruleTableOrAlias EOF )
            // InternalSQLParser.g:1459:1: ruleTableOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableOrAlias"


    // $ANTLR start "ruleTableOrAlias"
    // InternalSQLParser.g:1466:1: ruleTableOrAlias : ( ( rule__TableOrAlias__Group__0 ) ) ;
    public final void ruleTableOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1470:2: ( ( ( rule__TableOrAlias__Group__0 ) ) )
            // InternalSQLParser.g:1471:2: ( ( rule__TableOrAlias__Group__0 ) )
            {
            // InternalSQLParser.g:1471:2: ( ( rule__TableOrAlias__Group__0 ) )
            // InternalSQLParser.g:1472:3: ( rule__TableOrAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }
            // InternalSQLParser.g:1473:3: ( rule__TableOrAlias__Group__0 )
            // InternalSQLParser.g:1473:4: rule__TableOrAlias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableOrAlias"


    // $ANTLR start "entryRuleFromValues"
    // InternalSQLParser.g:1482:1: entryRuleFromValues : ruleFromValues EOF ;
    public final void entryRuleFromValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:1483:1: ( ruleFromValues EOF )
            // InternalSQLParser.g:1484:1: ruleFromValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValues"


    // $ANTLR start "ruleFromValues"
    // InternalSQLParser.g:1491:1: ruleFromValues : ( ( rule__FromValues__Group__0 ) ) ;
    public final void ruleFromValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1495:2: ( ( ( rule__FromValues__Group__0 ) ) )
            // InternalSQLParser.g:1496:2: ( ( rule__FromValues__Group__0 ) )
            {
            // InternalSQLParser.g:1496:2: ( ( rule__FromValues__Group__0 ) )
            // InternalSQLParser.g:1497:3: ( rule__FromValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1498:3: ( rule__FromValues__Group__0 )
            // InternalSQLParser.g:1498:4: rule__FromValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValues"


    // $ANTLR start "entryRuleFromValuesColumns"
    // InternalSQLParser.g:1507:1: entryRuleFromValuesColumns : ruleFromValuesColumns EOF ;
    public final void entryRuleFromValuesColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1508:1: ( ruleFromValuesColumns EOF )
            // InternalSQLParser.g:1509:1: ruleFromValuesColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumns"


    // $ANTLR start "ruleFromValuesColumns"
    // InternalSQLParser.g:1516:1: ruleFromValuesColumns : ( ( rule__FromValuesColumns__Group__0 ) ) ;
    public final void ruleFromValuesColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1520:2: ( ( ( rule__FromValuesColumns__Group__0 ) ) )
            // InternalSQLParser.g:1521:2: ( ( rule__FromValuesColumns__Group__0 ) )
            {
            // InternalSQLParser.g:1521:2: ( ( rule__FromValuesColumns__Group__0 ) )
            // InternalSQLParser.g:1522:3: ( rule__FromValuesColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1523:3: ( rule__FromValuesColumns__Group__0 )
            // InternalSQLParser.g:1523:4: rule__FromValuesColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumns"


    // $ANTLR start "entryRuleFromValuesColumnNames"
    // InternalSQLParser.g:1532:1: entryRuleFromValuesColumnNames : ruleFromValuesColumnNames EOF ;
    public final void entryRuleFromValuesColumnNames() throws RecognitionException {
        try {
            // InternalSQLParser.g:1533:1: ( ruleFromValuesColumnNames EOF )
            // InternalSQLParser.g:1534:1: ruleFromValuesColumnNames EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumnNames"


    // $ANTLR start "ruleFromValuesColumnNames"
    // InternalSQLParser.g:1541:1: ruleFromValuesColumnNames : ( ( rule__FromValuesColumnNames__Group__0 ) ) ;
    public final void ruleFromValuesColumnNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1545:2: ( ( ( rule__FromValuesColumnNames__Group__0 ) ) )
            // InternalSQLParser.g:1546:2: ( ( rule__FromValuesColumnNames__Group__0 ) )
            {
            // InternalSQLParser.g:1546:2: ( ( rule__FromValuesColumnNames__Group__0 ) )
            // InternalSQLParser.g:1547:3: ( rule__FromValuesColumnNames__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1548:3: ( rule__FromValuesColumnNames__Group__0 )
            // InternalSQLParser.g:1548:4: rule__FromValuesColumnNames__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumnNames"


    // $ANTLR start "entryRuleColumnName"
    // InternalSQLParser.g:1557:1: entryRuleColumnName : ruleColumnName EOF ;
    public final void entryRuleColumnName() throws RecognitionException {
        try {
            // InternalSQLParser.g:1558:1: ( ruleColumnName EOF )
            // InternalSQLParser.g:1559:1: ruleColumnName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnName"


    // $ANTLR start "ruleColumnName"
    // InternalSQLParser.g:1566:1: ruleColumnName : ( ( rule__ColumnName__ColNameAssignment ) ) ;
    public final void ruleColumnName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1570:2: ( ( ( rule__ColumnName__ColNameAssignment ) ) )
            // InternalSQLParser.g:1571:2: ( ( rule__ColumnName__ColNameAssignment ) )
            {
            // InternalSQLParser.g:1571:2: ( ( rule__ColumnName__ColNameAssignment ) )
            // InternalSQLParser.g:1572:3: ( rule__ColumnName__ColNameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }
            // InternalSQLParser.g:1573:3: ( rule__ColumnName__ColNameAssignment )
            // InternalSQLParser.g:1573:4: rule__ColumnName__ColNameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ColumnName__ColNameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnName"


    // $ANTLR start "entryRuleValues"
    // InternalSQLParser.g:1582:1: entryRuleValues : ruleValues EOF ;
    public final void entryRuleValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:1583:1: ( ruleValues EOF )
            // InternalSQLParser.g:1584:1: ruleValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValues"


    // $ANTLR start "ruleValues"
    // InternalSQLParser.g:1591:1: ruleValues : ( ( rule__Values__Group__0 ) ) ;
    public final void ruleValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1595:2: ( ( ( rule__Values__Group__0 ) ) )
            // InternalSQLParser.g:1596:2: ( ( rule__Values__Group__0 ) )
            {
            // InternalSQLParser.g:1596:2: ( ( rule__Values__Group__0 ) )
            // InternalSQLParser.g:1597:3: ( rule__Values__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1598:3: ( rule__Values__Group__0 )
            // InternalSQLParser.g:1598:4: rule__Values__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValues"


    // $ANTLR start "entryRuleRows"
    // InternalSQLParser.g:1607:1: entryRuleRows : ruleRows EOF ;
    public final void entryRuleRows() throws RecognitionException {
        try {
            // InternalSQLParser.g:1608:1: ( ruleRows EOF )
            // InternalSQLParser.g:1609:1: ruleRows EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRows"


    // $ANTLR start "ruleRows"
    // InternalSQLParser.g:1616:1: ruleRows : ( ( rule__Rows__Group__0 ) ) ;
    public final void ruleRows() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1620:2: ( ( ( rule__Rows__Group__0 ) ) )
            // InternalSQLParser.g:1621:2: ( ( rule__Rows__Group__0 ) )
            {
            // InternalSQLParser.g:1621:2: ( ( rule__Rows__Group__0 ) )
            // InternalSQLParser.g:1622:3: ( rule__Rows__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1623:3: ( rule__Rows__Group__0 )
            // InternalSQLParser.g:1623:4: rule__Rows__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRows"


    // $ANTLR start "entryRuleRow"
    // InternalSQLParser.g:1632:1: entryRuleRow : ruleRow EOF ;
    public final void entryRuleRow() throws RecognitionException {
        try {
            // InternalSQLParser.g:1633:1: ( ruleRow EOF )
            // InternalSQLParser.g:1634:1: ruleRow EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRow"


    // $ANTLR start "ruleRow"
    // InternalSQLParser.g:1641:1: ruleRow : ( ( rule__Row__Group__0 ) ) ;
    public final void ruleRow() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1645:2: ( ( ( rule__Row__Group__0 ) ) )
            // InternalSQLParser.g:1646:2: ( ( rule__Row__Group__0 ) )
            {
            // InternalSQLParser.g:1646:2: ( ( rule__Row__Group__0 ) )
            // InternalSQLParser.g:1647:3: ( rule__Row__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getGroup()); 
            }
            // InternalSQLParser.g:1648:3: ( rule__Row__Group__0 )
            // InternalSQLParser.g:1648:4: rule__Row__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRow"


    // $ANTLR start "entryRuleRowValues"
    // InternalSQLParser.g:1657:1: entryRuleRowValues : ruleRowValues EOF ;
    public final void entryRuleRowValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:1658:1: ( ruleRowValues EOF )
            // InternalSQLParser.g:1659:1: ruleRowValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValues"


    // $ANTLR start "ruleRowValues"
    // InternalSQLParser.g:1666:1: ruleRowValues : ( ( rule__RowValues__Group__0 ) ) ;
    public final void ruleRowValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1670:2: ( ( ( rule__RowValues__Group__0 ) ) )
            // InternalSQLParser.g:1671:2: ( ( rule__RowValues__Group__0 ) )
            {
            // InternalSQLParser.g:1671:2: ( ( rule__RowValues__Group__0 ) )
            // InternalSQLParser.g:1672:3: ( rule__RowValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1673:3: ( rule__RowValues__Group__0 )
            // InternalSQLParser.g:1673:4: rule__RowValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValues"


    // $ANTLR start "entryRuleRowValue"
    // InternalSQLParser.g:1682:1: entryRuleRowValue : ruleRowValue EOF ;
    public final void entryRuleRowValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1683:1: ( ruleRowValue EOF )
            // InternalSQLParser.g:1684:1: ruleRowValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValue"


    // $ANTLR start "ruleRowValue"
    // InternalSQLParser.g:1691:1: ruleRowValue : ( ( rule__RowValue__Alternatives ) ) ;
    public final void ruleRowValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1695:2: ( ( ( rule__RowValue__Alternatives ) ) )
            // InternalSQLParser.g:1696:2: ( ( rule__RowValue__Alternatives ) )
            {
            // InternalSQLParser.g:1696:2: ( ( rule__RowValue__Alternatives ) )
            // InternalSQLParser.g:1697:3: ( rule__RowValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1698:3: ( rule__RowValue__Alternatives )
            // InternalSQLParser.g:1698:4: rule__RowValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RowValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValue"


    // $ANTLR start "entryRulePivotTable"
    // InternalSQLParser.g:1707:1: entryRulePivotTable : rulePivotTable EOF ;
    public final void entryRulePivotTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:1708:1: ( rulePivotTable EOF )
            // InternalSQLParser.g:1709:1: rulePivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotTable"


    // $ANTLR start "rulePivotTable"
    // InternalSQLParser.g:1716:1: rulePivotTable : ( ( rule__PivotTable__Group__0 ) ) ;
    public final void rulePivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1720:2: ( ( ( rule__PivotTable__Group__0 ) ) )
            // InternalSQLParser.g:1721:2: ( ( rule__PivotTable__Group__0 ) )
            {
            // InternalSQLParser.g:1721:2: ( ( rule__PivotTable__Group__0 ) )
            // InternalSQLParser.g:1722:3: ( rule__PivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:1723:3: ( rule__PivotTable__Group__0 )
            // InternalSQLParser.g:1723:4: rule__PivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotTable"


    // $ANTLR start "entryRulePivotFunctions"
    // InternalSQLParser.g:1732:1: entryRulePivotFunctions : rulePivotFunctions EOF ;
    public final void entryRulePivotFunctions() throws RecognitionException {
        try {
            // InternalSQLParser.g:1733:1: ( rulePivotFunctions EOF )
            // InternalSQLParser.g:1734:1: rulePivotFunctions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotFunctions"


    // $ANTLR start "rulePivotFunctions"
    // InternalSQLParser.g:1741:1: rulePivotFunctions : ( ( rule__PivotFunctions__AbcAssignment ) ) ;
    public final void rulePivotFunctions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1745:2: ( ( ( rule__PivotFunctions__AbcAssignment ) ) )
            // InternalSQLParser.g:1746:2: ( ( rule__PivotFunctions__AbcAssignment ) )
            {
            // InternalSQLParser.g:1746:2: ( ( rule__PivotFunctions__AbcAssignment ) )
            // InternalSQLParser.g:1747:3: ( rule__PivotFunctions__AbcAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }
            // InternalSQLParser.g:1748:3: ( rule__PivotFunctions__AbcAssignment )
            // InternalSQLParser.g:1748:4: rule__PivotFunctions__AbcAssignment
            {
            pushFollow(FOLLOW_2);
            rule__PivotFunctions__AbcAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotFunctions"


    // $ANTLR start "entryRulePivotInClause"
    // InternalSQLParser.g:1757:1: entryRulePivotInClause : rulePivotInClause EOF ;
    public final void entryRulePivotInClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1758:1: ( rulePivotInClause EOF )
            // InternalSQLParser.g:1759:1: rulePivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClause"


    // $ANTLR start "rulePivotInClause"
    // InternalSQLParser.g:1766:1: rulePivotInClause : ( ( rule__PivotInClause__Group__0 ) ) ;
    public final void rulePivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1770:2: ( ( ( rule__PivotInClause__Group__0 ) ) )
            // InternalSQLParser.g:1771:2: ( ( rule__PivotInClause__Group__0 ) )
            {
            // InternalSQLParser.g:1771:2: ( ( rule__PivotInClause__Group__0 ) )
            // InternalSQLParser.g:1772:3: ( rule__PivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1773:3: ( rule__PivotInClause__Group__0 )
            // InternalSQLParser.g:1773:4: rule__PivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClause"


    // $ANTLR start "entryRulePivotInClauseAny"
    // InternalSQLParser.g:1782:1: entryRulePivotInClauseAny : rulePivotInClauseAny EOF ;
    public final void entryRulePivotInClauseAny() throws RecognitionException {
        try {
            // InternalSQLParser.g:1783:1: ( rulePivotInClauseAny EOF )
            // InternalSQLParser.g:1784:1: rulePivotInClauseAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClauseAny"


    // $ANTLR start "rulePivotInClauseAny"
    // InternalSQLParser.g:1791:1: rulePivotInClauseAny : ( ( rule__PivotInClauseAny__Group__0 ) ) ;
    public final void rulePivotInClauseAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1795:2: ( ( ( rule__PivotInClauseAny__Group__0 ) ) )
            // InternalSQLParser.g:1796:2: ( ( rule__PivotInClauseAny__Group__0 ) )
            {
            // InternalSQLParser.g:1796:2: ( ( rule__PivotInClauseAny__Group__0 ) )
            // InternalSQLParser.g:1797:3: ( rule__PivotInClauseAny__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }
            // InternalSQLParser.g:1798:3: ( rule__PivotInClauseAny__Group__0 )
            // InternalSQLParser.g:1798:4: rule__PivotInClauseAny__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClauseAny"


    // $ANTLR start "entryRuleUnpivotTable"
    // InternalSQLParser.g:1807:1: entryRuleUnpivotTable : ruleUnpivotTable EOF ;
    public final void entryRuleUnpivotTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:1808:1: ( ruleUnpivotTable EOF )
            // InternalSQLParser.g:1809:1: ruleUnpivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotTable"


    // $ANTLR start "ruleUnpivotTable"
    // InternalSQLParser.g:1816:1: ruleUnpivotTable : ( ( rule__UnpivotTable__Group__0 ) ) ;
    public final void ruleUnpivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1820:2: ( ( ( rule__UnpivotTable__Group__0 ) ) )
            // InternalSQLParser.g:1821:2: ( ( rule__UnpivotTable__Group__0 ) )
            {
            // InternalSQLParser.g:1821:2: ( ( rule__UnpivotTable__Group__0 ) )
            // InternalSQLParser.g:1822:3: ( rule__UnpivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:1823:3: ( rule__UnpivotTable__Group__0 )
            // InternalSQLParser.g:1823:4: rule__UnpivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotTable"


    // $ANTLR start "entryRuleUnpivotInClause"
    // InternalSQLParser.g:1832:1: entryRuleUnpivotInClause : ruleUnpivotInClause EOF ;
    public final void entryRuleUnpivotInClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1833:1: ( ruleUnpivotInClause EOF )
            // InternalSQLParser.g:1834:1: ruleUnpivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClause"


    // $ANTLR start "ruleUnpivotInClause"
    // InternalSQLParser.g:1841:1: ruleUnpivotInClause : ( ( rule__UnpivotInClause__Group__0 ) ) ;
    public final void ruleUnpivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1845:2: ( ( ( rule__UnpivotInClause__Group__0 ) ) )
            // InternalSQLParser.g:1846:2: ( ( rule__UnpivotInClause__Group__0 ) )
            {
            // InternalSQLParser.g:1846:2: ( ( rule__UnpivotInClause__Group__0 ) )
            // InternalSQLParser.g:1847:3: ( rule__UnpivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1848:3: ( rule__UnpivotInClause__Group__0 )
            // InternalSQLParser.g:1848:4: rule__UnpivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClause"


    // $ANTLR start "entryRuleUnpivotInClauseArgs"
    // InternalSQLParser.g:1857:1: entryRuleUnpivotInClauseArgs : ruleUnpivotInClauseArgs EOF ;
    public final void entryRuleUnpivotInClauseArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:1858:1: ( ruleUnpivotInClauseArgs EOF )
            // InternalSQLParser.g:1859:1: ruleUnpivotInClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArgs"


    // $ANTLR start "ruleUnpivotInClauseArgs"
    // InternalSQLParser.g:1866:1: ruleUnpivotInClauseArgs : ( ( rule__UnpivotInClauseArgs__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1870:2: ( ( ( rule__UnpivotInClauseArgs__Group__0 ) ) )
            // InternalSQLParser.g:1871:2: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            {
            // InternalSQLParser.g:1871:2: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            // InternalSQLParser.g:1872:3: ( rule__UnpivotInClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1873:3: ( rule__UnpivotInClauseArgs__Group__0 )
            // InternalSQLParser.g:1873:4: rule__UnpivotInClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArgs"


    // $ANTLR start "entryRuleUnpivotInClauseArg"
    // InternalSQLParser.g:1882:1: entryRuleUnpivotInClauseArg : ruleUnpivotInClauseArg EOF ;
    public final void entryRuleUnpivotInClauseArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:1883:1: ( ruleUnpivotInClauseArg EOF )
            // InternalSQLParser.g:1884:1: ruleUnpivotInClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArg"


    // $ANTLR start "ruleUnpivotInClauseArg"
    // InternalSQLParser.g:1891:1: ruleUnpivotInClauseArg : ( ( rule__UnpivotInClauseArg__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1895:2: ( ( ( rule__UnpivotInClauseArg__Group__0 ) ) )
            // InternalSQLParser.g:1896:2: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            {
            // InternalSQLParser.g:1896:2: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            // InternalSQLParser.g:1897:3: ( rule__UnpivotInClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:1898:3: ( rule__UnpivotInClauseArg__Group__0 )
            // InternalSQLParser.g:1898:4: rule__UnpivotInClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArg"


    // $ANTLR start "entryRulePivotForClause"
    // InternalSQLParser.g:1907:1: entryRulePivotForClause : rulePivotForClause EOF ;
    public final void entryRulePivotForClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1908:1: ( rulePivotForClause EOF )
            // InternalSQLParser.g:1909:1: rulePivotForClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotForClause"


    // $ANTLR start "rulePivotForClause"
    // InternalSQLParser.g:1916:1: rulePivotForClause : ( ( rule__PivotForClause__Group__0 ) ) ;
    public final void rulePivotForClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1920:2: ( ( ( rule__PivotForClause__Group__0 ) ) )
            // InternalSQLParser.g:1921:2: ( ( rule__PivotForClause__Group__0 ) )
            {
            // InternalSQLParser.g:1921:2: ( ( rule__PivotForClause__Group__0 ) )
            // InternalSQLParser.g:1922:3: ( rule__PivotForClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1923:3: ( rule__PivotForClause__Group__0 )
            // InternalSQLParser.g:1923:4: rule__PivotForClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotForClause"


    // $ANTLR start "entryRulePivotColumns"
    // InternalSQLParser.g:1932:1: entryRulePivotColumns : rulePivotColumns EOF ;
    public final void entryRulePivotColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1933:1: ( rulePivotColumns EOF )
            // InternalSQLParser.g:1934:1: rulePivotColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotColumns"


    // $ANTLR start "rulePivotColumns"
    // InternalSQLParser.g:1941:1: rulePivotColumns : ( ( rule__PivotColumns__Alternatives ) ) ;
    public final void rulePivotColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1945:2: ( ( ( rule__PivotColumns__Alternatives ) ) )
            // InternalSQLParser.g:1946:2: ( ( rule__PivotColumns__Alternatives ) )
            {
            // InternalSQLParser.g:1946:2: ( ( rule__PivotColumns__Alternatives ) )
            // InternalSQLParser.g:1947:3: ( rule__PivotColumns__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1948:3: ( rule__PivotColumns__Alternatives )
            // InternalSQLParser.g:1948:4: rule__PivotColumns__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotColumns"


    // $ANTLR start "entryRulePivotCols"
    // InternalSQLParser.g:1957:1: entryRulePivotCols : rulePivotCols EOF ;
    public final void entryRulePivotCols() throws RecognitionException {
        try {
            // InternalSQLParser.g:1958:1: ( rulePivotCols EOF )
            // InternalSQLParser.g:1959:1: rulePivotCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCols"


    // $ANTLR start "rulePivotCols"
    // InternalSQLParser.g:1966:1: rulePivotCols : ( ( rule__PivotCols__Group__0 ) ) ;
    public final void rulePivotCols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1970:2: ( ( ( rule__PivotCols__Group__0 ) ) )
            // InternalSQLParser.g:1971:2: ( ( rule__PivotCols__Group__0 ) )
            {
            // InternalSQLParser.g:1971:2: ( ( rule__PivotCols__Group__0 ) )
            // InternalSQLParser.g:1972:3: ( rule__PivotCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1973:3: ( rule__PivotCols__Group__0 )
            // InternalSQLParser.g:1973:4: rule__PivotCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCols"


    // $ANTLR start "entryRulePivotCol"
    // InternalSQLParser.g:1982:1: entryRulePivotCol : rulePivotCol EOF ;
    public final void entryRulePivotCol() throws RecognitionException {
        try {
            // InternalSQLParser.g:1983:1: ( rulePivotCol EOF )
            // InternalSQLParser.g:1984:1: rulePivotCol EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCol"


    // $ANTLR start "rulePivotCol"
    // InternalSQLParser.g:1991:1: rulePivotCol : ( ( rule__PivotCol__Group__0 ) ) ;
    public final void rulePivotCol() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1995:2: ( ( ( rule__PivotCol__Group__0 ) ) )
            // InternalSQLParser.g:1996:2: ( ( rule__PivotCol__Group__0 ) )
            {
            // InternalSQLParser.g:1996:2: ( ( rule__PivotCol__Group__0 ) )
            // InternalSQLParser.g:1997:3: ( rule__PivotCol__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup()); 
            }
            // InternalSQLParser.g:1998:3: ( rule__PivotCol__Group__0 )
            // InternalSQLParser.g:1998:4: rule__PivotCol__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCol"


    // $ANTLR start "entryRuleTableFull"
    // InternalSQLParser.g:2007:1: entryRuleTableFull : ruleTableFull EOF ;
    public final void entryRuleTableFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:2008:1: ( ruleTableFull EOF )
            // InternalSQLParser.g:2009:1: ruleTableFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableFull"


    // $ANTLR start "ruleTableFull"
    // InternalSQLParser.g:2016:1: ruleTableFull : ( ( rule__TableFull__Group__0 ) ) ;
    public final void ruleTableFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2020:2: ( ( ( rule__TableFull__Group__0 ) ) )
            // InternalSQLParser.g:2021:2: ( ( rule__TableFull__Group__0 ) )
            {
            // InternalSQLParser.g:2021:2: ( ( rule__TableFull__Group__0 ) )
            // InternalSQLParser.g:2022:3: ( rule__TableFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:2023:3: ( rule__TableFull__Group__0 )
            // InternalSQLParser.g:2023:4: rule__TableFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableFull"


    // $ANTLR start "entryRuleDbObjectNameAll"
    // InternalSQLParser.g:2032:1: entryRuleDbObjectNameAll : ruleDbObjectNameAll EOF ;
    public final void entryRuleDbObjectNameAll() throws RecognitionException {
        try {
            // InternalSQLParser.g:2033:1: ( ruleDbObjectNameAll EOF )
            // InternalSQLParser.g:2034:1: ruleDbObjectNameAll EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectNameAll"


    // $ANTLR start "ruleDbObjectNameAll"
    // InternalSQLParser.g:2041:1: ruleDbObjectNameAll : ( ( rule__DbObjectNameAll__Group__0 ) ) ;
    public final void ruleDbObjectNameAll() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2045:2: ( ( ( rule__DbObjectNameAll__Group__0 ) ) )
            // InternalSQLParser.g:2046:2: ( ( rule__DbObjectNameAll__Group__0 ) )
            {
            // InternalSQLParser.g:2046:2: ( ( rule__DbObjectNameAll__Group__0 ) )
            // InternalSQLParser.g:2047:3: ( rule__DbObjectNameAll__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }
            // InternalSQLParser.g:2048:3: ( rule__DbObjectNameAll__Group__0 )
            // InternalSQLParser.g:2048:4: rule__DbObjectNameAll__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectNameAll"


    // $ANTLR start "entryRuleDbObjectName"
    // InternalSQLParser.g:2057:1: entryRuleDbObjectName : ruleDbObjectName EOF ;
    public final void entryRuleDbObjectName() throws RecognitionException {
        try {
            // InternalSQLParser.g:2058:1: ( ruleDbObjectName EOF )
            // InternalSQLParser.g:2059:1: ruleDbObjectName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectName"


    // $ANTLR start "ruleDbObjectName"
    // InternalSQLParser.g:2066:1: ruleDbObjectName : ( ( rule__DbObjectName__DbnameAssignment ) ) ;
    public final void ruleDbObjectName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2070:2: ( ( ( rule__DbObjectName__DbnameAssignment ) ) )
            // InternalSQLParser.g:2071:2: ( ( rule__DbObjectName__DbnameAssignment ) )
            {
            // InternalSQLParser.g:2071:2: ( ( rule__DbObjectName__DbnameAssignment ) )
            // InternalSQLParser.g:2072:3: ( rule__DbObjectName__DbnameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }
            // InternalSQLParser.g:2073:3: ( rule__DbObjectName__DbnameAssignment )
            // InternalSQLParser.g:2073:4: rule__DbObjectName__DbnameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectName__DbnameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectName"


    // $ANTLR start "entryRuleOrderByColumns"
    // InternalSQLParser.g:2082:1: entryRuleOrderByColumns : ruleOrderByColumns EOF ;
    public final void entryRuleOrderByColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:2083:1: ( ruleOrderByColumns EOF )
            // InternalSQLParser.g:2084:1: ruleOrderByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumns"


    // $ANTLR start "ruleOrderByColumns"
    // InternalSQLParser.g:2091:1: ruleOrderByColumns : ( ( rule__OrderByColumns__Group__0 ) ) ;
    public final void ruleOrderByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2095:2: ( ( ( rule__OrderByColumns__Group__0 ) ) )
            // InternalSQLParser.g:2096:2: ( ( rule__OrderByColumns__Group__0 ) )
            {
            // InternalSQLParser.g:2096:2: ( ( rule__OrderByColumns__Group__0 ) )
            // InternalSQLParser.g:2097:3: ( rule__OrderByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2098:3: ( rule__OrderByColumns__Group__0 )
            // InternalSQLParser.g:2098:4: rule__OrderByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumns"


    // $ANTLR start "entryRuleOrderByColumnFull"
    // InternalSQLParser.g:2107:1: entryRuleOrderByColumnFull : ruleOrderByColumnFull EOF ;
    public final void entryRuleOrderByColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:2108:1: ( ruleOrderByColumnFull EOF )
            // InternalSQLParser.g:2109:1: ruleOrderByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumnFull"


    // $ANTLR start "ruleOrderByColumnFull"
    // InternalSQLParser.g:2116:1: ruleOrderByColumnFull : ( ( rule__OrderByColumnFull__Group__0 ) ) ;
    public final void ruleOrderByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2120:2: ( ( ( rule__OrderByColumnFull__Group__0 ) ) )
            // InternalSQLParser.g:2121:2: ( ( rule__OrderByColumnFull__Group__0 ) )
            {
            // InternalSQLParser.g:2121:2: ( ( rule__OrderByColumnFull__Group__0 ) )
            // InternalSQLParser.g:2122:3: ( rule__OrderByColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:2123:3: ( rule__OrderByColumnFull__Group__0 )
            // InternalSQLParser.g:2123:4: rule__OrderByColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumnFull"


    // $ANTLR start "entryRuleGroupByColumns"
    // InternalSQLParser.g:2132:1: entryRuleGroupByColumns : ruleGroupByColumns EOF ;
    public final void entryRuleGroupByColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:2133:1: ( ruleGroupByColumns EOF )
            // InternalSQLParser.g:2134:1: ruleGroupByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumns"


    // $ANTLR start "ruleGroupByColumns"
    // InternalSQLParser.g:2141:1: ruleGroupByColumns : ( ( rule__GroupByColumns__Group__0 ) ) ;
    public final void ruleGroupByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2145:2: ( ( ( rule__GroupByColumns__Group__0 ) ) )
            // InternalSQLParser.g:2146:2: ( ( rule__GroupByColumns__Group__0 ) )
            {
            // InternalSQLParser.g:2146:2: ( ( rule__GroupByColumns__Group__0 ) )
            // InternalSQLParser.g:2147:3: ( rule__GroupByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2148:3: ( rule__GroupByColumns__Group__0 )
            // InternalSQLParser.g:2148:4: rule__GroupByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumns"


    // $ANTLR start "entryRuleGroupByColumnFull"
    // InternalSQLParser.g:2157:1: entryRuleGroupByColumnFull : ruleGroupByColumnFull EOF ;
    public final void entryRuleGroupByColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:2158:1: ( ruleGroupByColumnFull EOF )
            // InternalSQLParser.g:2159:1: ruleGroupByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumnFull"


    // $ANTLR start "ruleGroupByColumnFull"
    // InternalSQLParser.g:2166:1: ruleGroupByColumnFull : ( ( rule__GroupByColumnFull__Alternatives ) ) ;
    public final void ruleGroupByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2170:2: ( ( ( rule__GroupByColumnFull__Alternatives ) ) )
            // InternalSQLParser.g:2171:2: ( ( rule__GroupByColumnFull__Alternatives ) )
            {
            // InternalSQLParser.g:2171:2: ( ( rule__GroupByColumnFull__Alternatives ) )
            // InternalSQLParser.g:2172:3: ( rule__GroupByColumnFull__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2173:3: ( rule__GroupByColumnFull__Alternatives )
            // InternalSQLParser.g:2173:4: rule__GroupByColumnFull__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumnFull__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumnFull"


    // $ANTLR start "entryRuleFullExpression"
    // InternalSQLParser.g:2182:1: entryRuleFullExpression : ruleFullExpression EOF ;
    public final void entryRuleFullExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:2183:1: ( ruleFullExpression EOF )
            // InternalSQLParser.g:2184:1: ruleFullExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFullExpression"


    // $ANTLR start "ruleFullExpression"
    // InternalSQLParser.g:2191:1: ruleFullExpression : ( ( rule__FullExpression__Group__0 ) ) ;
    public final void ruleFullExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2195:2: ( ( ( rule__FullExpression__Group__0 ) ) )
            // InternalSQLParser.g:2196:2: ( ( rule__FullExpression__Group__0 ) )
            {
            // InternalSQLParser.g:2196:2: ( ( rule__FullExpression__Group__0 ) )
            // InternalSQLParser.g:2197:3: ( rule__FullExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:2198:3: ( rule__FullExpression__Group__0 )
            // InternalSQLParser.g:2198:4: rule__FullExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFullExpression"


    // $ANTLR start "entryRuleExpressionFragmentSecond"
    // InternalSQLParser.g:2207:1: entryRuleExpressionFragmentSecond : ruleExpressionFragmentSecond EOF ;
    public final void entryRuleExpressionFragmentSecond() throws RecognitionException {
        try {
            // InternalSQLParser.g:2208:1: ( ruleExpressionFragmentSecond EOF )
            // InternalSQLParser.g:2209:1: ruleExpressionFragmentSecond EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragmentSecond"


    // $ANTLR start "ruleExpressionFragmentSecond"
    // InternalSQLParser.g:2216:1: ruleExpressionFragmentSecond : ( ( rule__ExpressionFragmentSecond__Alternatives ) ) ;
    public final void ruleExpressionFragmentSecond() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2220:2: ( ( ( rule__ExpressionFragmentSecond__Alternatives ) ) )
            // InternalSQLParser.g:2221:2: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            {
            // InternalSQLParser.g:2221:2: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            // InternalSQLParser.g:2222:3: ( rule__ExpressionFragmentSecond__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2223:3: ( rule__ExpressionFragmentSecond__Alternatives )
            // InternalSQLParser.g:2223:4: rule__ExpressionFragmentSecond__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragmentSecond"


    // $ANTLR start "entryRuleExpressionFragment"
    // InternalSQLParser.g:2232:1: entryRuleExpressionFragment : ruleExpressionFragment EOF ;
    public final void entryRuleExpressionFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:2233:1: ( ruleExpressionFragment EOF )
            // InternalSQLParser.g:2234:1: ruleExpressionFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragment"


    // $ANTLR start "ruleExpressionFragment"
    // InternalSQLParser.g:2241:1: ruleExpressionFragment : ( ( rule__ExpressionFragment__Alternatives ) ) ;
    public final void ruleExpressionFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2245:2: ( ( ( rule__ExpressionFragment__Alternatives ) ) )
            // InternalSQLParser.g:2246:2: ( ( rule__ExpressionFragment__Alternatives ) )
            {
            // InternalSQLParser.g:2246:2: ( ( rule__ExpressionFragment__Alternatives ) )
            // InternalSQLParser.g:2247:3: ( rule__ExpressionFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2248:3: ( rule__ExpressionFragment__Alternatives )
            // InternalSQLParser.g:2248:4: rule__ExpressionFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragment"


    // $ANTLR start "entryRuleExpressionGroup"
    // InternalSQLParser.g:2257:1: entryRuleExpressionGroup : ruleExpressionGroup EOF ;
    public final void entryRuleExpressionGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:2258:1: ( ruleExpressionGroup EOF )
            // InternalSQLParser.g:2259:1: ruleExpressionGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionGroup"


    // $ANTLR start "ruleExpressionGroup"
    // InternalSQLParser.g:2266:1: ruleExpressionGroup : ( ( rule__ExpressionGroup__Group__0 ) ) ;
    public final void ruleExpressionGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2270:2: ( ( ( rule__ExpressionGroup__Group__0 ) ) )
            // InternalSQLParser.g:2271:2: ( ( rule__ExpressionGroup__Group__0 ) )
            {
            // InternalSQLParser.g:2271:2: ( ( rule__ExpressionGroup__Group__0 ) )
            // InternalSQLParser.g:2272:3: ( rule__ExpressionGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }
            // InternalSQLParser.g:2273:3: ( rule__ExpressionGroup__Group__0 )
            // InternalSQLParser.g:2273:4: rule__ExpressionGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionGroup"


    // $ANTLR start "entryRuleXExpression"
    // InternalSQLParser.g:2282:1: entryRuleXExpression : ruleXExpression EOF ;
    public final void entryRuleXExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:2283:1: ( ruleXExpression EOF )
            // InternalSQLParser.g:2284:1: ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalSQLParser.g:2291:1: ruleXExpression : ( ( rule__XExpression__Group__0 ) ) ;
    public final void ruleXExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2295:2: ( ( ( rule__XExpression__Group__0 ) ) )
            // InternalSQLParser.g:2296:2: ( ( rule__XExpression__Group__0 ) )
            {
            // InternalSQLParser.g:2296:2: ( ( rule__XExpression__Group__0 ) )
            // InternalSQLParser.g:2297:3: ( rule__XExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:2298:3: ( rule__XExpression__Group__0 )
            // InternalSQLParser.g:2298:4: rule__XExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXExpression_"
    // InternalSQLParser.g:2307:1: entryRuleXExpression_ : ruleXExpression_ EOF ;
    public final void entryRuleXExpression_() throws RecognitionException {
        try {
            // InternalSQLParser.g:2308:1: ( ruleXExpression_ EOF )
            // InternalSQLParser.g:2309:1: ruleXExpression_ EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Rule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Rule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression_"


    // $ANTLR start "ruleXExpression_"
    // InternalSQLParser.g:2316:1: ruleXExpression_ : ( ( rule__XExpression___Group__0 ) ) ;
    public final void ruleXExpression_() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2320:2: ( ( ( rule__XExpression___Group__0 ) ) )
            // InternalSQLParser.g:2321:2: ( ( rule__XExpression___Group__0 ) )
            {
            // InternalSQLParser.g:2321:2: ( ( rule__XExpression___Group__0 ) )
            // InternalSQLParser.g:2322:3: ( rule__XExpression___Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup()); 
            }
            // InternalSQLParser.g:2323:3: ( rule__XExpression___Group__0 )
            // InternalSQLParser.g:2323:4: rule__XExpression___Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression_"


    // $ANTLR start "entryRuleXExpressionParams"
    // InternalSQLParser.g:2332:1: entryRuleXExpressionParams : ruleXExpressionParams EOF ;
    public final void entryRuleXExpressionParams() throws RecognitionException {
        try {
            // InternalSQLParser.g:2333:1: ( ruleXExpressionParams EOF )
            // InternalSQLParser.g:2334:1: ruleXExpressionParams EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionParams"


    // $ANTLR start "ruleXExpressionParams"
    // InternalSQLParser.g:2341:1: ruleXExpressionParams : ( ( rule__XExpressionParams__Group__0 ) ) ;
    public final void ruleXExpressionParams() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2345:2: ( ( ( rule__XExpressionParams__Group__0 ) ) )
            // InternalSQLParser.g:2346:2: ( ( rule__XExpressionParams__Group__0 ) )
            {
            // InternalSQLParser.g:2346:2: ( ( rule__XExpressionParams__Group__0 ) )
            // InternalSQLParser.g:2347:3: ( rule__XExpressionParams__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2348:3: ( rule__XExpressionParams__Group__0 )
            // InternalSQLParser.g:2348:4: rule__XExpressionParams__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpressionParams"


    // $ANTLR start "entryRuleJRParameter"
    // InternalSQLParser.g:2357:1: entryRuleJRParameter : ruleJRParameter EOF ;
    public final void entryRuleJRParameter() throws RecognitionException {
        try {
            // InternalSQLParser.g:2358:1: ( ruleJRParameter EOF )
            // InternalSQLParser.g:2359:1: ruleJRParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJRParameter"


    // $ANTLR start "ruleJRParameter"
    // InternalSQLParser.g:2366:1: ruleJRParameter : ( ( rule__JRParameter__JrprmAssignment ) ) ;
    public final void ruleJRParameter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2370:2: ( ( ( rule__JRParameter__JrprmAssignment ) ) )
            // InternalSQLParser.g:2371:2: ( ( rule__JRParameter__JrprmAssignment ) )
            {
            // InternalSQLParser.g:2371:2: ( ( rule__JRParameter__JrprmAssignment ) )
            // InternalSQLParser.g:2372:3: ( rule__JRParameter__JrprmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }
            // InternalSQLParser.g:2373:3: ( rule__JRParameter__JrprmAssignment )
            // InternalSQLParser.g:2373:4: rule__JRParameter__JrprmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__JRParameter__JrprmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJRParameter"


    // $ANTLR start "entryRuleExpression"
    // InternalSQLParser.g:2382:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:2383:1: ( ruleExpression EOF )
            // InternalSQLParser.g:2384:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSQLParser.g:2391:1: ruleExpression : ( ( rule__Expression__Group__0 ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2395:2: ( ( ( rule__Expression__Group__0 ) ) )
            // InternalSQLParser.g:2396:2: ( ( rule__Expression__Group__0 ) )
            {
            // InternalSQLParser.g:2396:2: ( ( rule__Expression__Group__0 ) )
            // InternalSQLParser.g:2397:3: ( rule__Expression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:2398:3: ( rule__Expression__Group__0 )
            // InternalSQLParser.g:2398:4: rule__Expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleIsNullValue"
    // InternalSQLParser.g:2407:1: entryRuleIsNullValue : ruleIsNullValue EOF ;
    public final void entryRuleIsNullValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2408:1: ( ruleIsNullValue EOF )
            // InternalSQLParser.g:2409:1: ruleIsNullValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsNullValue"


    // $ANTLR start "ruleIsNullValue"
    // InternalSQLParser.g:2416:1: ruleIsNullValue : ( ( rule__IsNullValue__Group__0 ) ) ;
    public final void ruleIsNullValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2420:2: ( ( ( rule__IsNullValue__Group__0 ) ) )
            // InternalSQLParser.g:2421:2: ( ( rule__IsNullValue__Group__0 ) )
            {
            // InternalSQLParser.g:2421:2: ( ( rule__IsNullValue__Group__0 ) )
            // InternalSQLParser.g:2422:3: ( rule__IsNullValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2423:3: ( rule__IsNullValue__Group__0 )
            // InternalSQLParser.g:2423:4: rule__IsNullValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsNullValue"


    // $ANTLR start "entryRuleComparison"
    // InternalSQLParser.g:2432:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalSQLParser.g:2433:1: ( ruleComparison EOF )
            // InternalSQLParser.g:2434:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalSQLParser.g:2441:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2445:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalSQLParser.g:2446:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalSQLParser.g:2446:2: ( ( rule__Comparison__Group__0 ) )
            // InternalSQLParser.g:2447:3: ( rule__Comparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup()); 
            }
            // InternalSQLParser.g:2448:3: ( rule__Comparison__Group__0 )
            // InternalSQLParser.g:2448:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleLike"
    // InternalSQLParser.g:2457:1: entryRuleLike : ruleLike EOF ;
    public final void entryRuleLike() throws RecognitionException {
        try {
            // InternalSQLParser.g:2458:1: ( ruleLike EOF )
            // InternalSQLParser.g:2459:1: ruleLike EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLike"


    // $ANTLR start "ruleLike"
    // InternalSQLParser.g:2466:1: ruleLike : ( ( rule__Like__Group__0 ) ) ;
    public final void ruleLike() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2470:2: ( ( ( rule__Like__Group__0 ) ) )
            // InternalSQLParser.g:2471:2: ( ( rule__Like__Group__0 ) )
            {
            // InternalSQLParser.g:2471:2: ( ( rule__Like__Group__0 ) )
            // InternalSQLParser.g:2472:3: ( rule__Like__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getGroup()); 
            }
            // InternalSQLParser.g:2473:3: ( rule__Like__Group__0 )
            // InternalSQLParser.g:2473:4: rule__Like__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLike"


    // $ANTLR start "entryRuleLikeValue"
    // InternalSQLParser.g:2482:1: entryRuleLikeValue : ruleLikeValue EOF ;
    public final void entryRuleLikeValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2483:1: ( ruleLikeValue EOF )
            // InternalSQLParser.g:2484:1: ruleLikeValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeValue"


    // $ANTLR start "ruleLikeValue"
    // InternalSQLParser.g:2491:1: ruleLikeValue : ( ( rule__LikeValue__Group__0 ) ) ;
    public final void ruleLikeValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2495:2: ( ( ( rule__LikeValue__Group__0 ) ) )
            // InternalSQLParser.g:2496:2: ( ( rule__LikeValue__Group__0 ) )
            {
            // InternalSQLParser.g:2496:2: ( ( rule__LikeValue__Group__0 ) )
            // InternalSQLParser.g:2497:3: ( rule__LikeValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2498:3: ( rule__LikeValue__Group__0 )
            // InternalSQLParser.g:2498:4: rule__LikeValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeValue"


    // $ANTLR start "entryRuleLikeOperand"
    // InternalSQLParser.g:2507:1: entryRuleLikeOperand : ruleLikeOperand EOF ;
    public final void entryRuleLikeOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2508:1: ( ruleLikeOperand EOF )
            // InternalSQLParser.g:2509:1: ruleLikeOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeOperand"


    // $ANTLR start "ruleLikeOperand"
    // InternalSQLParser.g:2516:1: ruleLikeOperand : ( ( rule__LikeOperand__Alternatives ) ) ;
    public final void ruleLikeOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2520:2: ( ( ( rule__LikeOperand__Alternatives ) ) )
            // InternalSQLParser.g:2521:2: ( ( rule__LikeOperand__Alternatives ) )
            {
            // InternalSQLParser.g:2521:2: ( ( rule__LikeOperand__Alternatives ) )
            // InternalSQLParser.g:2522:3: ( rule__LikeOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2523:3: ( rule__LikeOperand__Alternatives )
            // InternalSQLParser.g:2523:4: rule__LikeOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LikeOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeOperand"


    // $ANTLR start "entryRuleBetween"
    // InternalSQLParser.g:2532:1: entryRuleBetween : ruleBetween EOF ;
    public final void entryRuleBetween() throws RecognitionException {
        try {
            // InternalSQLParser.g:2533:1: ( ruleBetween EOF )
            // InternalSQLParser.g:2534:1: ruleBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetween"


    // $ANTLR start "ruleBetween"
    // InternalSQLParser.g:2541:1: ruleBetween : ( ( rule__Between__Group__0 ) ) ;
    public final void ruleBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2545:2: ( ( ( rule__Between__Group__0 ) ) )
            // InternalSQLParser.g:2546:2: ( ( rule__Between__Group__0 ) )
            {
            // InternalSQLParser.g:2546:2: ( ( rule__Between__Group__0 ) )
            // InternalSQLParser.g:2547:3: ( rule__Between__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getGroup()); 
            }
            // InternalSQLParser.g:2548:3: ( rule__Between__Group__0 )
            // InternalSQLParser.g:2548:4: rule__Between__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetween"


    // $ANTLR start "entryRuleBetweenValue"
    // InternalSQLParser.g:2557:1: entryRuleBetweenValue : ruleBetweenValue EOF ;
    public final void entryRuleBetweenValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2558:1: ( ruleBetweenValue EOF )
            // InternalSQLParser.g:2559:1: ruleBetweenValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetweenValue"


    // $ANTLR start "ruleBetweenValue"
    // InternalSQLParser.g:2566:1: ruleBetweenValue : ( ( rule__BetweenValue__Group__0 ) ) ;
    public final void ruleBetweenValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2570:2: ( ( ( rule__BetweenValue__Group__0 ) ) )
            // InternalSQLParser.g:2571:2: ( ( rule__BetweenValue__Group__0 ) )
            {
            // InternalSQLParser.g:2571:2: ( ( rule__BetweenValue__Group__0 ) )
            // InternalSQLParser.g:2572:3: ( rule__BetweenValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2573:3: ( rule__BetweenValue__Group__0 )
            // InternalSQLParser.g:2573:4: rule__BetweenValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetweenValue"


    // $ANTLR start "entryRuleInOperator"
    // InternalSQLParser.g:2582:1: entryRuleInOperator : ruleInOperator EOF ;
    public final void entryRuleInOperator() throws RecognitionException {
        try {
            // InternalSQLParser.g:2583:1: ( ruleInOperator EOF )
            // InternalSQLParser.g:2584:1: ruleInOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInOperator"


    // $ANTLR start "ruleInOperator"
    // InternalSQLParser.g:2591:1: ruleInOperator : ( ( rule__InOperator__Group__0 ) ) ;
    public final void ruleInOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2595:2: ( ( ( rule__InOperator__Group__0 ) ) )
            // InternalSQLParser.g:2596:2: ( ( rule__InOperator__Group__0 ) )
            {
            // InternalSQLParser.g:2596:2: ( ( rule__InOperator__Group__0 ) )
            // InternalSQLParser.g:2597:3: ( rule__InOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getGroup()); 
            }
            // InternalSQLParser.g:2598:3: ( rule__InOperator__Group__0 )
            // InternalSQLParser.g:2598:4: rule__InOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInOperator"


    // $ANTLR start "entryRuleInValue"
    // InternalSQLParser.g:2607:1: entryRuleInValue : ruleInValue EOF ;
    public final void entryRuleInValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2608:1: ( ruleInValue EOF )
            // InternalSQLParser.g:2609:1: ruleInValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInValue"


    // $ANTLR start "ruleInValue"
    // InternalSQLParser.g:2616:1: ruleInValue : ( ( rule__InValue__Group__0 ) ) ;
    public final void ruleInValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2620:2: ( ( ( rule__InValue__Group__0 ) ) )
            // InternalSQLParser.g:2621:2: ( ( rule__InValue__Group__0 ) )
            {
            // InternalSQLParser.g:2621:2: ( ( rule__InValue__Group__0 ) )
            // InternalSQLParser.g:2622:3: ( rule__InValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2623:3: ( rule__InValue__Group__0 )
            // InternalSQLParser.g:2623:4: rule__InValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInValue"


    // $ANTLR start "entryRuleExistsOperator"
    // InternalSQLParser.g:2632:1: entryRuleExistsOperator : ruleExistsOperator EOF ;
    public final void entryRuleExistsOperator() throws RecognitionException {
        try {
            // InternalSQLParser.g:2633:1: ( ruleExistsOperator EOF )
            // InternalSQLParser.g:2634:1: ruleExistsOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsOperator"


    // $ANTLR start "ruleExistsOperator"
    // InternalSQLParser.g:2641:1: ruleExistsOperator : ( ( rule__ExistsOperator__Group__0 ) ) ;
    public final void ruleExistsOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2645:2: ( ( ( rule__ExistsOperator__Group__0 ) ) )
            // InternalSQLParser.g:2646:2: ( ( rule__ExistsOperator__Group__0 ) )
            {
            // InternalSQLParser.g:2646:2: ( ( rule__ExistsOperator__Group__0 ) )
            // InternalSQLParser.g:2647:3: ( rule__ExistsOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }
            // InternalSQLParser.g:2648:3: ( rule__ExistsOperator__Group__0 )
            // InternalSQLParser.g:2648:4: rule__ExistsOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsOperator"


    // $ANTLR start "entryRuleExistsValue"
    // InternalSQLParser.g:2657:1: entryRuleExistsValue : ruleExistsValue EOF ;
    public final void entryRuleExistsValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2658:1: ( ruleExistsValue EOF )
            // InternalSQLParser.g:2659:1: ruleExistsValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsValue"


    // $ANTLR start "ruleExistsValue"
    // InternalSQLParser.g:2666:1: ruleExistsValue : ( ( rule__ExistsValue__Group__0 ) ) ;
    public final void ruleExistsValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2670:2: ( ( ( rule__ExistsValue__Group__0 ) ) )
            // InternalSQLParser.g:2671:2: ( ( rule__ExistsValue__Group__0 ) )
            {
            // InternalSQLParser.g:2671:2: ( ( rule__ExistsValue__Group__0 ) )
            // InternalSQLParser.g:2672:3: ( rule__ExistsValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2673:3: ( rule__ExistsValue__Group__0 )
            // InternalSQLParser.g:2673:4: rule__ExistsValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsValue"


    // $ANTLR start "entryRuleOperandListGroup"
    // InternalSQLParser.g:2682:1: entryRuleOperandListGroup : ruleOperandListGroup EOF ;
    public final void entryRuleOperandListGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:2683:1: ( ruleOperandListGroup EOF )
            // InternalSQLParser.g:2684:1: ruleOperandListGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandListGroup"


    // $ANTLR start "ruleOperandListGroup"
    // InternalSQLParser.g:2691:1: ruleOperandListGroup : ( ( rule__OperandListGroup__Group__0 ) ) ;
    public final void ruleOperandListGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2695:2: ( ( ( rule__OperandListGroup__Group__0 ) ) )
            // InternalSQLParser.g:2696:2: ( ( rule__OperandListGroup__Group__0 ) )
            {
            // InternalSQLParser.g:2696:2: ( ( rule__OperandListGroup__Group__0 ) )
            // InternalSQLParser.g:2697:3: ( rule__OperandListGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }
            // InternalSQLParser.g:2698:3: ( rule__OperandListGroup__Group__0 )
            // InternalSQLParser.g:2698:4: rule__OperandListGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandListGroup"


    // $ANTLR start "entryRuleOperandList"
    // InternalSQLParser.g:2707:1: entryRuleOperandList : ruleOperandList EOF ;
    public final void entryRuleOperandList() throws RecognitionException {
        try {
            // InternalSQLParser.g:2708:1: ( ruleOperandList EOF )
            // InternalSQLParser.g:2709:1: ruleOperandList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandList"


    // $ANTLR start "ruleOperandList"
    // InternalSQLParser.g:2716:1: ruleOperandList : ( ( rule__OperandList__Group__0 ) ) ;
    public final void ruleOperandList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2720:2: ( ( ( rule__OperandList__Group__0 ) ) )
            // InternalSQLParser.g:2721:2: ( ( rule__OperandList__Group__0 ) )
            {
            // InternalSQLParser.g:2721:2: ( ( rule__OperandList__Group__0 ) )
            // InternalSQLParser.g:2722:3: ( rule__OperandList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup()); 
            }
            // InternalSQLParser.g:2723:3: ( rule__OperandList__Group__0 )
            // InternalSQLParser.g:2723:4: rule__OperandList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandList"


    // $ANTLR start "entryRuleOperandGroup"
    // InternalSQLParser.g:2732:1: entryRuleOperandGroup : ruleOperandGroup EOF ;
    public final void entryRuleOperandGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:2733:1: ( ruleOperandGroup EOF )
            // InternalSQLParser.g:2734:1: ruleOperandGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandGroup"


    // $ANTLR start "ruleOperandGroup"
    // InternalSQLParser.g:2741:1: ruleOperandGroup : ( ( rule__OperandGroup__Alternatives ) ) ;
    public final void ruleOperandGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2745:2: ( ( ( rule__OperandGroup__Alternatives ) ) )
            // InternalSQLParser.g:2746:2: ( ( rule__OperandGroup__Alternatives ) )
            {
            // InternalSQLParser.g:2746:2: ( ( rule__OperandGroup__Alternatives ) )
            // InternalSQLParser.g:2747:3: ( rule__OperandGroup__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2748:3: ( rule__OperandGroup__Alternatives )
            // InternalSQLParser.g:2748:4: rule__OperandGroup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandGroup"


    // $ANTLR start "entryRuleOperand"
    // InternalSQLParser.g:2757:1: entryRuleOperand : ruleOperand EOF ;
    public final void entryRuleOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2758:1: ( ruleOperand EOF )
            // InternalSQLParser.g:2759:1: ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalSQLParser.g:2766:1: ruleOperand : ( ( rule__Operand__Group__0 ) ) ;
    public final void ruleOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2770:2: ( ( ( rule__Operand__Group__0 ) ) )
            // InternalSQLParser.g:2771:2: ( ( rule__Operand__Group__0 ) )
            {
            // InternalSQLParser.g:2771:2: ( ( rule__Operand__Group__0 ) )
            // InternalSQLParser.g:2772:3: ( rule__Operand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:2773:3: ( rule__Operand__Group__0 )
            // InternalSQLParser.g:2773:4: rule__Operand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleOperandFragment"
    // InternalSQLParser.g:2782:1: entryRuleOperandFragment : ruleOperandFragment EOF ;
    public final void entryRuleOperandFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:2783:1: ( ruleOperandFragment EOF )
            // InternalSQLParser.g:2784:1: ruleOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFragment"


    // $ANTLR start "ruleOperandFragment"
    // InternalSQLParser.g:2791:1: ruleOperandFragment : ( ( rule__OperandFragment__Alternatives ) ) ;
    public final void ruleOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2795:2: ( ( ( rule__OperandFragment__Alternatives ) ) )
            // InternalSQLParser.g:2796:2: ( ( rule__OperandFragment__Alternatives ) )
            {
            // InternalSQLParser.g:2796:2: ( ( rule__OperandFragment__Alternatives ) )
            // InternalSQLParser.g:2797:3: ( rule__OperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2798:3: ( rule__OperandFragment__Alternatives )
            // InternalSQLParser.g:2798:4: rule__OperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFragment"


    // $ANTLR start "entryRuleOperandFunction"
    // InternalSQLParser.g:2807:1: entryRuleOperandFunction : ruleOperandFunction EOF ;
    public final void entryRuleOperandFunction() throws RecognitionException {
        try {
            // InternalSQLParser.g:2808:1: ( ruleOperandFunction EOF )
            // InternalSQLParser.g:2809:1: ruleOperandFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFunction"


    // $ANTLR start "ruleOperandFunction"
    // InternalSQLParser.g:2816:1: ruleOperandFunction : ( ( rule__OperandFunction__Group__0 ) ) ;
    public final void ruleOperandFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2820:2: ( ( ( rule__OperandFunction__Group__0 ) ) )
            // InternalSQLParser.g:2821:2: ( ( rule__OperandFunction__Group__0 ) )
            {
            // InternalSQLParser.g:2821:2: ( ( rule__OperandFunction__Group__0 ) )
            // InternalSQLParser.g:2822:3: ( rule__OperandFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }
            // InternalSQLParser.g:2823:3: ( rule__OperandFunction__Group__0 )
            // InternalSQLParser.g:2823:4: rule__OperandFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFunction"


    // $ANTLR start "entryRuleFunctionExtract"
    // InternalSQLParser.g:2832:1: entryRuleFunctionExtract : ruleFunctionExtract EOF ;
    public final void entryRuleFunctionExtract() throws RecognitionException {
        try {
            // InternalSQLParser.g:2833:1: ( ruleFunctionExtract EOF )
            // InternalSQLParser.g:2834:1: ruleFunctionExtract EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionExtract"


    // $ANTLR start "ruleFunctionExtract"
    // InternalSQLParser.g:2841:1: ruleFunctionExtract : ( ( rule__FunctionExtract__Group__0 ) ) ;
    public final void ruleFunctionExtract() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2845:2: ( ( ( rule__FunctionExtract__Group__0 ) ) )
            // InternalSQLParser.g:2846:2: ( ( rule__FunctionExtract__Group__0 ) )
            {
            // InternalSQLParser.g:2846:2: ( ( rule__FunctionExtract__Group__0 ) )
            // InternalSQLParser.g:2847:3: ( rule__FunctionExtract__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }
            // InternalSQLParser.g:2848:3: ( rule__FunctionExtract__Group__0 )
            // InternalSQLParser.g:2848:4: rule__FunctionExtract__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionExtract"


    // $ANTLR start "entryRuleFunctionAnalytical"
    // InternalSQLParser.g:2857:1: entryRuleFunctionAnalytical : ruleFunctionAnalytical EOF ;
    public final void entryRuleFunctionAnalytical() throws RecognitionException {
        try {
            // InternalSQLParser.g:2858:1: ( ruleFunctionAnalytical EOF )
            // InternalSQLParser.g:2859:1: ruleFunctionAnalytical EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionAnalytical"


    // $ANTLR start "ruleFunctionAnalytical"
    // InternalSQLParser.g:2866:1: ruleFunctionAnalytical : ( ( rule__FunctionAnalytical__Group__0 ) ) ;
    public final void ruleFunctionAnalytical() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2870:2: ( ( ( rule__FunctionAnalytical__Group__0 ) ) )
            // InternalSQLParser.g:2871:2: ( ( rule__FunctionAnalytical__Group__0 ) )
            {
            // InternalSQLParser.g:2871:2: ( ( rule__FunctionAnalytical__Group__0 ) )
            // InternalSQLParser.g:2872:3: ( rule__FunctionAnalytical__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }
            // InternalSQLParser.g:2873:3: ( rule__FunctionAnalytical__Group__0 )
            // InternalSQLParser.g:2873:4: rule__FunctionAnalytical__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionAnalytical"


    // $ANTLR start "entryRuleAnalyticClause"
    // InternalSQLParser.g:2882:1: entryRuleAnalyticClause : ruleAnalyticClause EOF ;
    public final void entryRuleAnalyticClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2883:1: ( ruleAnalyticClause EOF )
            // InternalSQLParser.g:2884:1: ruleAnalyticClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticClause"


    // $ANTLR start "ruleAnalyticClause"
    // InternalSQLParser.g:2891:1: ruleAnalyticClause : ( ( rule__AnalyticClause__Group__0 ) ) ;
    public final void ruleAnalyticClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2895:2: ( ( ( rule__AnalyticClause__Group__0 ) ) )
            // InternalSQLParser.g:2896:2: ( ( rule__AnalyticClause__Group__0 ) )
            {
            // InternalSQLParser.g:2896:2: ( ( rule__AnalyticClause__Group__0 ) )
            // InternalSQLParser.g:2897:3: ( rule__AnalyticClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2898:3: ( rule__AnalyticClause__Group__0 )
            // InternalSQLParser.g:2898:4: rule__AnalyticClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticClause"


    // $ANTLR start "entryRuleWindowingClause"
    // InternalSQLParser.g:2907:1: entryRuleWindowingClause : ruleWindowingClause EOF ;
    public final void entryRuleWindowingClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2908:1: ( ruleWindowingClause EOF )
            // InternalSQLParser.g:2909:1: ruleWindowingClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClause"


    // $ANTLR start "ruleWindowingClause"
    // InternalSQLParser.g:2916:1: ruleWindowingClause : ( ( rule__WindowingClause__Group__0 ) ) ;
    public final void ruleWindowingClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2920:2: ( ( ( rule__WindowingClause__Group__0 ) ) )
            // InternalSQLParser.g:2921:2: ( ( rule__WindowingClause__Group__0 ) )
            {
            // InternalSQLParser.g:2921:2: ( ( rule__WindowingClause__Group__0 ) )
            // InternalSQLParser.g:2922:3: ( rule__WindowingClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2923:3: ( rule__WindowingClause__Group__0 )
            // InternalSQLParser.g:2923:4: rule__WindowingClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClause"


    // $ANTLR start "entryRuleWindowingClauseBetween"
    // InternalSQLParser.g:2932:1: entryRuleWindowingClauseBetween : ruleWindowingClauseBetween EOF ;
    public final void entryRuleWindowingClauseBetween() throws RecognitionException {
        try {
            // InternalSQLParser.g:2933:1: ( ruleWindowingClauseBetween EOF )
            // InternalSQLParser.g:2934:1: ruleWindowingClauseBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseBetween"


    // $ANTLR start "ruleWindowingClauseBetween"
    // InternalSQLParser.g:2941:1: ruleWindowingClauseBetween : ( ( rule__WindowingClauseBetween__Group__0 ) ) ;
    public final void ruleWindowingClauseBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2945:2: ( ( ( rule__WindowingClauseBetween__Group__0 ) ) )
            // InternalSQLParser.g:2946:2: ( ( rule__WindowingClauseBetween__Group__0 ) )
            {
            // InternalSQLParser.g:2946:2: ( ( rule__WindowingClauseBetween__Group__0 ) )
            // InternalSQLParser.g:2947:3: ( rule__WindowingClauseBetween__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }
            // InternalSQLParser.g:2948:3: ( rule__WindowingClauseBetween__Group__0 )
            // InternalSQLParser.g:2948:4: rule__WindowingClauseBetween__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseBetween"


    // $ANTLR start "entryRuleWindowingClauseOperandFollowing"
    // InternalSQLParser.g:2957:1: entryRuleWindowingClauseOperandFollowing : ruleWindowingClauseOperandFollowing EOF ;
    public final void entryRuleWindowingClauseOperandFollowing() throws RecognitionException {
        try {
            // InternalSQLParser.g:2958:1: ( ruleWindowingClauseOperandFollowing EOF )
            // InternalSQLParser.g:2959:1: ruleWindowingClauseOperandFollowing EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandFollowing"


    // $ANTLR start "ruleWindowingClauseOperandFollowing"
    // InternalSQLParser.g:2966:1: ruleWindowingClauseOperandFollowing : ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandFollowing() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2970:2: ( ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) )
            // InternalSQLParser.g:2971:2: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            {
            // InternalSQLParser.g:2971:2: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            // InternalSQLParser.g:2972:3: ( rule__WindowingClauseOperandFollowing__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }
            // InternalSQLParser.g:2973:3: ( rule__WindowingClauseOperandFollowing__Group__0 )
            // InternalSQLParser.g:2973:4: rule__WindowingClauseOperandFollowing__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandFollowing"


    // $ANTLR start "entryRuleWindowingClauseOperandPreceding"
    // InternalSQLParser.g:2982:1: entryRuleWindowingClauseOperandPreceding : ruleWindowingClauseOperandPreceding EOF ;
    public final void entryRuleWindowingClauseOperandPreceding() throws RecognitionException {
        try {
            // InternalSQLParser.g:2983:1: ( ruleWindowingClauseOperandPreceding EOF )
            // InternalSQLParser.g:2984:1: ruleWindowingClauseOperandPreceding EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandPreceding"


    // $ANTLR start "ruleWindowingClauseOperandPreceding"
    // InternalSQLParser.g:2991:1: ruleWindowingClauseOperandPreceding : ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandPreceding() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2995:2: ( ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) )
            // InternalSQLParser.g:2996:2: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            {
            // InternalSQLParser.g:2996:2: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            // InternalSQLParser.g:2997:3: ( rule__WindowingClauseOperandPreceding__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }
            // InternalSQLParser.g:2998:3: ( rule__WindowingClauseOperandPreceding__Group__0 )
            // InternalSQLParser.g:2998:4: rule__WindowingClauseOperandPreceding__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandPreceding"


    // $ANTLR start "entryRuleOrderByClause"
    // InternalSQLParser.g:3007:1: entryRuleOrderByClause : ruleOrderByClause EOF ;
    public final void entryRuleOrderByClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:3008:1: ( ruleOrderByClause EOF )
            // InternalSQLParser.g:3009:1: ruleOrderByClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClause"


    // $ANTLR start "ruleOrderByClause"
    // InternalSQLParser.g:3016:1: ruleOrderByClause : ( ( rule__OrderByClause__Group__0 ) ) ;
    public final void ruleOrderByClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3020:2: ( ( ( rule__OrderByClause__Group__0 ) ) )
            // InternalSQLParser.g:3021:2: ( ( rule__OrderByClause__Group__0 ) )
            {
            // InternalSQLParser.g:3021:2: ( ( rule__OrderByClause__Group__0 ) )
            // InternalSQLParser.g:3022:3: ( rule__OrderByClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:3023:3: ( rule__OrderByClause__Group__0 )
            // InternalSQLParser.g:3023:4: rule__OrderByClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClause"


    // $ANTLR start "entryRuleOrderByClauseArgs"
    // InternalSQLParser.g:3032:1: entryRuleOrderByClauseArgs : ruleOrderByClauseArgs EOF ;
    public final void entryRuleOrderByClauseArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:3033:1: ( ruleOrderByClauseArgs EOF )
            // InternalSQLParser.g:3034:1: ruleOrderByClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArgs"


    // $ANTLR start "ruleOrderByClauseArgs"
    // InternalSQLParser.g:3041:1: ruleOrderByClauseArgs : ( ( rule__OrderByClauseArgs__Group__0 ) ) ;
    public final void ruleOrderByClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3045:2: ( ( ( rule__OrderByClauseArgs__Group__0 ) ) )
            // InternalSQLParser.g:3046:2: ( ( rule__OrderByClauseArgs__Group__0 ) )
            {
            // InternalSQLParser.g:3046:2: ( ( rule__OrderByClauseArgs__Group__0 ) )
            // InternalSQLParser.g:3047:3: ( rule__OrderByClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:3048:3: ( rule__OrderByClauseArgs__Group__0 )
            // InternalSQLParser.g:3048:4: rule__OrderByClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArgs"


    // $ANTLR start "entryRuleOrderByClauseArg"
    // InternalSQLParser.g:3057:1: entryRuleOrderByClauseArg : ruleOrderByClauseArg EOF ;
    public final void entryRuleOrderByClauseArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:3058:1: ( ruleOrderByClauseArg EOF )
            // InternalSQLParser.g:3059:1: ruleOrderByClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArg"


    // $ANTLR start "ruleOrderByClauseArg"
    // InternalSQLParser.g:3066:1: ruleOrderByClauseArg : ( ( rule__OrderByClauseArg__Group__0 ) ) ;
    public final void ruleOrderByClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3070:2: ( ( ( rule__OrderByClauseArg__Group__0 ) ) )
            // InternalSQLParser.g:3071:2: ( ( rule__OrderByClauseArg__Group__0 ) )
            {
            // InternalSQLParser.g:3071:2: ( ( rule__OrderByClauseArg__Group__0 ) )
            // InternalSQLParser.g:3072:3: ( rule__OrderByClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:3073:3: ( rule__OrderByClauseArg__Group__0 )
            // InternalSQLParser.g:3073:4: rule__OrderByClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArg"


    // $ANTLR start "entryRuleQueryPartitionClause"
    // InternalSQLParser.g:3082:1: entryRuleQueryPartitionClause : ruleQueryPartitionClause EOF ;
    public final void entryRuleQueryPartitionClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:3083:1: ( ruleQueryPartitionClause EOF )
            // InternalSQLParser.g:3084:1: ruleQueryPartitionClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQueryPartitionClause"


    // $ANTLR start "ruleQueryPartitionClause"
    // InternalSQLParser.g:3091:1: ruleQueryPartitionClause : ( ( rule__QueryPartitionClause__Group__0 ) ) ;
    public final void ruleQueryPartitionClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3095:2: ( ( ( rule__QueryPartitionClause__Group__0 ) ) )
            // InternalSQLParser.g:3096:2: ( ( rule__QueryPartitionClause__Group__0 ) )
            {
            // InternalSQLParser.g:3096:2: ( ( rule__QueryPartitionClause__Group__0 ) )
            // InternalSQLParser.g:3097:3: ( rule__QueryPartitionClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:3098:3: ( rule__QueryPartitionClause__Group__0 )
            // InternalSQLParser.g:3098:4: rule__QueryPartitionClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQueryPartitionClause"


    // $ANTLR start "entryRuleAnalyticExprArgs"
    // InternalSQLParser.g:3107:1: entryRuleAnalyticExprArgs : ruleAnalyticExprArgs EOF ;
    public final void entryRuleAnalyticExprArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:3108:1: ( ruleAnalyticExprArgs EOF )
            // InternalSQLParser.g:3109:1: ruleAnalyticExprArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArgs"


    // $ANTLR start "ruleAnalyticExprArgs"
    // InternalSQLParser.g:3116:1: ruleAnalyticExprArgs : ( ( rule__AnalyticExprArgs__Group__0 ) ) ;
    public final void ruleAnalyticExprArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3120:2: ( ( ( rule__AnalyticExprArgs__Group__0 ) ) )
            // InternalSQLParser.g:3121:2: ( ( rule__AnalyticExprArgs__Group__0 ) )
            {
            // InternalSQLParser.g:3121:2: ( ( rule__AnalyticExprArgs__Group__0 ) )
            // InternalSQLParser.g:3122:3: ( rule__AnalyticExprArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:3123:3: ( rule__AnalyticExprArgs__Group__0 )
            // InternalSQLParser.g:3123:4: rule__AnalyticExprArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArgs"


    // $ANTLR start "entryRuleAnalyticExprArg"
    // InternalSQLParser.g:3132:1: entryRuleAnalyticExprArg : ruleAnalyticExprArg EOF ;
    public final void entryRuleAnalyticExprArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:3133:1: ( ruleAnalyticExprArg EOF )
            // InternalSQLParser.g:3134:1: ruleAnalyticExprArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArg"


    // $ANTLR start "ruleAnalyticExprArg"
    // InternalSQLParser.g:3141:1: ruleAnalyticExprArg : ( ( rule__AnalyticExprArg__Group__0 ) ) ;
    public final void ruleAnalyticExprArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3145:2: ( ( ( rule__AnalyticExprArg__Group__0 ) ) )
            // InternalSQLParser.g:3146:2: ( ( rule__AnalyticExprArg__Group__0 ) )
            {
            // InternalSQLParser.g:3146:2: ( ( rule__AnalyticExprArg__Group__0 ) )
            // InternalSQLParser.g:3147:3: ( rule__AnalyticExprArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:3148:3: ( rule__AnalyticExprArg__Group__0 )
            // InternalSQLParser.g:3148:4: rule__AnalyticExprArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArg"


    // $ANTLR start "entryRuleOpFunctionArg"
    // InternalSQLParser.g:3157:1: entryRuleOpFunctionArg : ruleOpFunctionArg EOF ;
    public final void entryRuleOpFunctionArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:3158:1: ( ruleOpFunctionArg EOF )
            // InternalSQLParser.g:3159:1: ruleOpFunctionArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArg"


    // $ANTLR start "ruleOpFunctionArg"
    // InternalSQLParser.g:3166:1: ruleOpFunctionArg : ( ( rule__OpFunctionArg__Group__0 ) ) ;
    public final void ruleOpFunctionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3170:2: ( ( ( rule__OpFunctionArg__Group__0 ) ) )
            // InternalSQLParser.g:3171:2: ( ( rule__OpFunctionArg__Group__0 ) )
            {
            // InternalSQLParser.g:3171:2: ( ( rule__OpFunctionArg__Group__0 ) )
            // InternalSQLParser.g:3172:3: ( rule__OpFunctionArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:3173:3: ( rule__OpFunctionArg__Group__0 )
            // InternalSQLParser.g:3173:4: rule__OpFunctionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArg"


    // $ANTLR start "entryRuleOpFunctionArgOperand"
    // InternalSQLParser.g:3182:1: entryRuleOpFunctionArgOperand : ruleOpFunctionArgOperand EOF ;
    public final void entryRuleOpFunctionArgOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3183:1: ( ruleOpFunctionArgOperand EOF )
            // InternalSQLParser.g:3184:1: ruleOpFunctionArgOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgOperand"


    // $ANTLR start "ruleOpFunctionArgOperand"
    // InternalSQLParser.g:3191:1: ruleOpFunctionArgOperand : ( ( rule__OpFunctionArgOperand__OpAssignment ) ) ;
    public final void ruleOpFunctionArgOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3195:2: ( ( ( rule__OpFunctionArgOperand__OpAssignment ) ) )
            // InternalSQLParser.g:3196:2: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            {
            // InternalSQLParser.g:3196:2: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            // InternalSQLParser.g:3197:3: ( rule__OpFunctionArgOperand__OpAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }
            // InternalSQLParser.g:3198:3: ( rule__OpFunctionArgOperand__OpAssignment )
            // InternalSQLParser.g:3198:4: rule__OpFunctionArgOperand__OpAssignment
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgOperand"


    // $ANTLR start "entryRuleOpFunctionCast"
    // InternalSQLParser.g:3207:1: entryRuleOpFunctionCast : ruleOpFunctionCast EOF ;
    public final void entryRuleOpFunctionCast() throws RecognitionException {
        try {
            // InternalSQLParser.g:3208:1: ( ruleOpFunctionCast EOF )
            // InternalSQLParser.g:3209:1: ruleOpFunctionCast EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionCast"


    // $ANTLR start "ruleOpFunctionCast"
    // InternalSQLParser.g:3216:1: ruleOpFunctionCast : ( ( rule__OpFunctionCast__Group__0 ) ) ;
    public final void ruleOpFunctionCast() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3220:2: ( ( ( rule__OpFunctionCast__Group__0 ) ) )
            // InternalSQLParser.g:3221:2: ( ( rule__OpFunctionCast__Group__0 ) )
            {
            // InternalSQLParser.g:3221:2: ( ( rule__OpFunctionCast__Group__0 ) )
            // InternalSQLParser.g:3222:3: ( rule__OpFunctionCast__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }
            // InternalSQLParser.g:3223:3: ( rule__OpFunctionCast__Group__0 )
            // InternalSQLParser.g:3223:4: rule__OpFunctionCast__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionCast"


    // $ANTLR start "entryRuleOpFunctionArgAgregate"
    // InternalSQLParser.g:3232:1: entryRuleOpFunctionArgAgregate : ruleOpFunctionArgAgregate EOF ;
    public final void entryRuleOpFunctionArgAgregate() throws RecognitionException {
        try {
            // InternalSQLParser.g:3233:1: ( ruleOpFunctionArgAgregate EOF )
            // InternalSQLParser.g:3234:1: ruleOpFunctionArgAgregate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgAgregate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgAgregate"


    // $ANTLR start "ruleOpFunctionArgAgregate"
    // InternalSQLParser.g:3241:1: ruleOpFunctionArgAgregate : ( ( rule__OpFunctionArgAgregate__Group__0 ) ) ;
    public final void ruleOpFunctionArgAgregate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3245:2: ( ( ( rule__OpFunctionArgAgregate__Group__0 ) ) )
            // InternalSQLParser.g:3246:2: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            {
            // InternalSQLParser.g:3246:2: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            // InternalSQLParser.g:3247:3: ( rule__OpFunctionArgAgregate__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }
            // InternalSQLParser.g:3248:3: ( rule__OpFunctionArgAgregate__Group__0 )
            // InternalSQLParser.g:3248:4: rule__OpFunctionArgAgregate__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgAgregate"


    // $ANTLR start "entryRuleXOperandFragment"
    // InternalSQLParser.g:3257:1: entryRuleXOperandFragment : ruleXOperandFragment EOF ;
    public final void entryRuleXOperandFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:3258:1: ( ruleXOperandFragment EOF )
            // InternalSQLParser.g:3259:1: ruleXOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXOperandFragment"


    // $ANTLR start "ruleXOperandFragment"
    // InternalSQLParser.g:3266:1: ruleXOperandFragment : ( ( rule__XOperandFragment__Alternatives ) ) ;
    public final void ruleXOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3270:2: ( ( ( rule__XOperandFragment__Alternatives ) ) )
            // InternalSQLParser.g:3271:2: ( ( rule__XOperandFragment__Alternatives ) )
            {
            // InternalSQLParser.g:3271:2: ( ( rule__XOperandFragment__Alternatives ) )
            // InternalSQLParser.g:3272:3: ( rule__XOperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3273:3: ( rule__XOperandFragment__Alternatives )
            // InternalSQLParser.g:3273:4: rule__XOperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XOperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXOperandFragment"


    // $ANTLR start "entryRuleParameterOperand"
    // InternalSQLParser.g:3282:1: entryRuleParameterOperand : ruleParameterOperand EOF ;
    public final void entryRuleParameterOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3283:1: ( ruleParameterOperand EOF )
            // InternalSQLParser.g:3284:1: ruleParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterOperand"


    // $ANTLR start "ruleParameterOperand"
    // InternalSQLParser.g:3291:1: ruleParameterOperand : ( ( rule__ParameterOperand__PrmAssignment ) ) ;
    public final void ruleParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3295:2: ( ( ( rule__ParameterOperand__PrmAssignment ) ) )
            // InternalSQLParser.g:3296:2: ( ( rule__ParameterOperand__PrmAssignment ) )
            {
            // InternalSQLParser.g:3296:2: ( ( rule__ParameterOperand__PrmAssignment ) )
            // InternalSQLParser.g:3297:3: ( rule__ParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSQLParser.g:3298:3: ( rule__ParameterOperand__PrmAssignment )
            // InternalSQLParser.g:3298:4: rule__ParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterOperand"


    // $ANTLR start "entryRuleExclamationParameterOperand"
    // InternalSQLParser.g:3307:1: entryRuleExclamationParameterOperand : ruleExclamationParameterOperand EOF ;
    public final void entryRuleExclamationParameterOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3308:1: ( ruleExclamationParameterOperand EOF )
            // InternalSQLParser.g:3309:1: ruleExclamationParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclamationParameterOperand"


    // $ANTLR start "ruleExclamationParameterOperand"
    // InternalSQLParser.g:3316:1: ruleExclamationParameterOperand : ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) ;
    public final void ruleExclamationParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3320:2: ( ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) )
            // InternalSQLParser.g:3321:2: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            {
            // InternalSQLParser.g:3321:2: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            // InternalSQLParser.g:3322:3: ( rule__ExclamationParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSQLParser.g:3323:3: ( rule__ExclamationParameterOperand__PrmAssignment )
            // InternalSQLParser.g:3323:4: rule__ExclamationParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExclamationParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclamationParameterOperand"


    // $ANTLR start "entryRuleColumnOperand"
    // InternalSQLParser.g:3332:1: entryRuleColumnOperand : ruleColumnOperand EOF ;
    public final void entryRuleColumnOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3333:1: ( ruleColumnOperand EOF )
            // InternalSQLParser.g:3334:1: ruleColumnOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOperand"


    // $ANTLR start "ruleColumnOperand"
    // InternalSQLParser.g:3341:1: ruleColumnOperand : ( ( rule__ColumnOperand__Group__0 ) ) ;
    public final void ruleColumnOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3345:2: ( ( ( rule__ColumnOperand__Group__0 ) ) )
            // InternalSQLParser.g:3346:2: ( ( rule__ColumnOperand__Group__0 ) )
            {
            // InternalSQLParser.g:3346:2: ( ( rule__ColumnOperand__Group__0 ) )
            // InternalSQLParser.g:3347:3: ( rule__ColumnOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:3348:3: ( rule__ColumnOperand__Group__0 )
            // InternalSQLParser.g:3348:4: rule__ColumnOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOperand"


    // $ANTLR start "entryRuleSubQueryOperand"
    // InternalSQLParser.g:3357:1: entryRuleSubQueryOperand : ruleSubQueryOperand EOF ;
    public final void entryRuleSubQueryOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3358:1: ( ruleSubQueryOperand EOF )
            // InternalSQLParser.g:3359:1: ruleSubQueryOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubQueryOperand"


    // $ANTLR start "ruleSubQueryOperand"
    // InternalSQLParser.g:3366:1: ruleSubQueryOperand : ( ( rule__SubQueryOperand__Group__0 ) ) ;
    public final void ruleSubQueryOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3370:2: ( ( ( rule__SubQueryOperand__Group__0 ) ) )
            // InternalSQLParser.g:3371:2: ( ( rule__SubQueryOperand__Group__0 ) )
            {
            // InternalSQLParser.g:3371:2: ( ( rule__SubQueryOperand__Group__0 ) )
            // InternalSQLParser.g:3372:3: ( rule__SubQueryOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:3373:3: ( rule__SubQueryOperand__Group__0 )
            // InternalSQLParser.g:3373:4: rule__SubQueryOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubQueryOperand"


    // $ANTLR start "entryRuleScalarOperand"
    // InternalSQLParser.g:3382:1: entryRuleScalarOperand : ruleScalarOperand EOF ;
    public final void entryRuleScalarOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3383:1: ( ruleScalarOperand EOF )
            // InternalSQLParser.g:3384:1: ruleScalarOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarOperand"


    // $ANTLR start "ruleScalarOperand"
    // InternalSQLParser.g:3391:1: ruleScalarOperand : ( ( rule__ScalarOperand__Alternatives ) ) ;
    public final void ruleScalarOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3395:2: ( ( ( rule__ScalarOperand__Alternatives ) ) )
            // InternalSQLParser.g:3396:2: ( ( rule__ScalarOperand__Alternatives ) )
            {
            // InternalSQLParser.g:3396:2: ( ( rule__ScalarOperand__Alternatives ) )
            // InternalSQLParser.g:3397:3: ( rule__ScalarOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3398:3: ( rule__ScalarOperand__Alternatives )
            // InternalSQLParser.g:3398:4: rule__ScalarOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarOperand"


    // $ANTLR start "entryRuleScalarNumberOperand"
    // InternalSQLParser.g:3407:1: entryRuleScalarNumberOperand : ruleScalarNumberOperand EOF ;
    public final void entryRuleScalarNumberOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3408:1: ( ruleScalarNumberOperand EOF )
            // InternalSQLParser.g:3409:1: ruleScalarNumberOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarNumberOperand"


    // $ANTLR start "ruleScalarNumberOperand"
    // InternalSQLParser.g:3416:1: ruleScalarNumberOperand : ( ( rule__ScalarNumberOperand__Alternatives ) ) ;
    public final void ruleScalarNumberOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3420:2: ( ( ( rule__ScalarNumberOperand__Alternatives ) ) )
            // InternalSQLParser.g:3421:2: ( ( rule__ScalarNumberOperand__Alternatives ) )
            {
            // InternalSQLParser.g:3421:2: ( ( rule__ScalarNumberOperand__Alternatives ) )
            // InternalSQLParser.g:3422:3: ( rule__ScalarNumberOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3423:3: ( rule__ScalarNumberOperand__Alternatives )
            // InternalSQLParser.g:3423:4: rule__ScalarNumberOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarNumberOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarNumberOperand"


    // $ANTLR start "entryRuleSQLCASE"
    // InternalSQLParser.g:3432:1: entryRuleSQLCASE : ruleSQLCASE EOF ;
    public final void entryRuleSQLCASE() throws RecognitionException {
        try {
            // InternalSQLParser.g:3433:1: ( ruleSQLCASE EOF )
            // InternalSQLParser.g:3434:1: ruleSQLCASE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCASE"


    // $ANTLR start "ruleSQLCASE"
    // InternalSQLParser.g:3441:1: ruleSQLCASE : ( ( rule__SQLCASE__Group__0 ) ) ;
    public final void ruleSQLCASE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3445:2: ( ( ( rule__SQLCASE__Group__0 ) ) )
            // InternalSQLParser.g:3446:2: ( ( rule__SQLCASE__Group__0 ) )
            {
            // InternalSQLParser.g:3446:2: ( ( rule__SQLCASE__Group__0 ) )
            // InternalSQLParser.g:3447:3: ( rule__SQLCASE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getGroup()); 
            }
            // InternalSQLParser.g:3448:3: ( rule__SQLCASE__Group__0 )
            // InternalSQLParser.g:3448:4: rule__SQLCASE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCASE"


    // $ANTLR start "entryRuleSQLCaseWhens"
    // InternalSQLParser.g:3457:1: entryRuleSQLCaseWhens : ruleSQLCaseWhens EOF ;
    public final void entryRuleSQLCaseWhens() throws RecognitionException {
        try {
            // InternalSQLParser.g:3458:1: ( ruleSQLCaseWhens EOF )
            // InternalSQLParser.g:3459:1: ruleSQLCaseWhens EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCaseWhens"


    // $ANTLR start "ruleSQLCaseWhens"
    // InternalSQLParser.g:3466:1: ruleSQLCaseWhens : ( ( rule__SQLCaseWhens__Group__0 ) ) ;
    public final void ruleSQLCaseWhens() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3470:2: ( ( ( rule__SQLCaseWhens__Group__0 ) ) )
            // InternalSQLParser.g:3471:2: ( ( rule__SQLCaseWhens__Group__0 ) )
            {
            // InternalSQLParser.g:3471:2: ( ( rule__SQLCaseWhens__Group__0 ) )
            // InternalSQLParser.g:3472:3: ( rule__SQLCaseWhens__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }
            // InternalSQLParser.g:3473:3: ( rule__SQLCaseWhens__Group__0 )
            // InternalSQLParser.g:3473:4: rule__SQLCaseWhens__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCaseWhens"


    // $ANTLR start "entryRuleSqlCaseWhen"
    // InternalSQLParser.g:3482:1: entryRuleSqlCaseWhen : ruleSqlCaseWhen EOF ;
    public final void entryRuleSqlCaseWhen() throws RecognitionException {
        try {
            // InternalSQLParser.g:3483:1: ( ruleSqlCaseWhen EOF )
            // InternalSQLParser.g:3484:1: ruleSqlCaseWhen EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSqlCaseWhen"


    // $ANTLR start "ruleSqlCaseWhen"
    // InternalSQLParser.g:3491:1: ruleSqlCaseWhen : ( ( rule__SqlCaseWhen__Group__0 ) ) ;
    public final void ruleSqlCaseWhen() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3495:2: ( ( ( rule__SqlCaseWhen__Group__0 ) ) )
            // InternalSQLParser.g:3496:2: ( ( rule__SqlCaseWhen__Group__0 ) )
            {
            // InternalSQLParser.g:3496:2: ( ( rule__SqlCaseWhen__Group__0 ) )
            // InternalSQLParser.g:3497:3: ( rule__SqlCaseWhen__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }
            // InternalSQLParser.g:3498:3: ( rule__SqlCaseWhen__Group__0 )
            // InternalSQLParser.g:3498:4: rule__SqlCaseWhen__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSqlCaseWhen"


    // $ANTLR start "entryRuleJoinType"
    // InternalSQLParser.g:3507:1: entryRuleJoinType : ruleJoinType EOF ;
    public final void entryRuleJoinType() throws RecognitionException {
        try {
            // InternalSQLParser.g:3508:1: ( ruleJoinType EOF )
            // InternalSQLParser.g:3509:1: ruleJoinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinType"


    // $ANTLR start "ruleJoinType"
    // InternalSQLParser.g:3516:1: ruleJoinType : ( ( rule__JoinType__Group__0 ) ) ;
    public final void ruleJoinType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3520:2: ( ( ( rule__JoinType__Group__0 ) ) )
            // InternalSQLParser.g:3521:2: ( ( rule__JoinType__Group__0 ) )
            {
            // InternalSQLParser.g:3521:2: ( ( rule__JoinType__Group__0 ) )
            // InternalSQLParser.g:3522:3: ( rule__JoinType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getGroup()); 
            }
            // InternalSQLParser.g:3523:3: ( rule__JoinType__Group__0 )
            // InternalSQLParser.g:3523:4: rule__JoinType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinType"


    // $ANTLR start "entryRuleDBID"
    // InternalSQLParser.g:3532:1: entryRuleDBID : ruleDBID EOF ;
    public final void entryRuleDBID() throws RecognitionException {
        try {
            // InternalSQLParser.g:3533:1: ( ruleDBID EOF )
            // InternalSQLParser.g:3534:1: ruleDBID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDBID"


    // $ANTLR start "ruleDBID"
    // InternalSQLParser.g:3541:1: ruleDBID : ( ( rule__DBID__Alternatives ) ) ;
    public final void ruleDBID() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3545:2: ( ( ( rule__DBID__Alternatives ) ) )
            // InternalSQLParser.g:3546:2: ( ( rule__DBID__Alternatives ) )
            {
            // InternalSQLParser.g:3546:2: ( ( rule__DBID__Alternatives ) )
            // InternalSQLParser.g:3547:3: ( rule__DBID__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3548:3: ( rule__DBID__Alternatives )
            // InternalSQLParser.g:3548:4: rule__DBID__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DBID__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDBID"


    // $ANTLR start "entryRuleSignedLiteral"
    // InternalSQLParser.g:3557:1: entryRuleSignedLiteral : ruleSignedLiteral EOF ;
    public final void entryRuleSignedLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3558:1: ( ruleSignedLiteral EOF )
            // InternalSQLParser.g:3559:1: ruleSignedLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSignedLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSignedLiteral"


    // $ANTLR start "ruleSignedLiteral"
    // InternalSQLParser.g:3566:1: ruleSignedLiteral : ( ( rule__SignedLiteral__Alternatives ) ) ;
    public final void ruleSignedLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3570:2: ( ( ( rule__SignedLiteral__Alternatives ) ) )
            // InternalSQLParser.g:3571:2: ( ( rule__SignedLiteral__Alternatives ) )
            {
            // InternalSQLParser.g:3571:2: ( ( rule__SignedLiteral__Alternatives ) )
            // InternalSQLParser.g:3572:3: ( rule__SignedLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3573:3: ( rule__SignedLiteral__Alternatives )
            // InternalSQLParser.g:3573:4: rule__SignedLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSignedLiteral"


    // $ANTLR start "entryRuleLiteral"
    // InternalSQLParser.g:3582:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3583:1: ( ruleLiteral EOF )
            // InternalSQLParser.g:3584:1: ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalSQLParser.g:3591:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3595:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalSQLParser.g:3596:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalSQLParser.g:3596:2: ( ( rule__Literal__Alternatives ) )
            // InternalSQLParser.g:3597:3: ( rule__Literal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3598:3: ( rule__Literal__Alternatives )
            // InternalSQLParser.g:3598:4: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleTextLiteral"
    // InternalSQLParser.g:3607:1: entryRuleTextLiteral : ruleTextLiteral EOF ;
    public final void entryRuleTextLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3608:1: ( ruleTextLiteral EOF )
            // InternalSQLParser.g:3609:1: ruleTextLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTextLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTextLiteral"


    // $ANTLR start "ruleTextLiteral"
    // InternalSQLParser.g:3616:1: ruleTextLiteral : ( RULE_STRING_ ) ;
    public final void ruleTextLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3620:2: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:3621:2: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:3621:2: ( RULE_STRING_ )
            // InternalSQLParser.g:3622:3: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextLiteralAccess().getSTRING_TerminalRuleCall()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextLiteralAccess().getSTRING_TerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTextLiteral"


    // $ANTLR start "entryRuleNumLiteral"
    // InternalSQLParser.g:3632:1: entryRuleNumLiteral : ruleNumLiteral EOF ;
    public final void entryRuleNumLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3633:1: ( ruleNumLiteral EOF )
            // InternalSQLParser.g:3634:1: ruleNumLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumLiteral"


    // $ANTLR start "ruleNumLiteral"
    // InternalSQLParser.g:3641:1: ruleNumLiteral : ( ( rule__NumLiteral__Alternatives ) ) ;
    public final void ruleNumLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3645:2: ( ( ( rule__NumLiteral__Alternatives ) ) )
            // InternalSQLParser.g:3646:2: ( ( rule__NumLiteral__Alternatives ) )
            {
            // InternalSQLParser.g:3646:2: ( ( rule__NumLiteral__Alternatives ) )
            // InternalSQLParser.g:3647:3: ( rule__NumLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumLiteralAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3648:3: ( rule__NumLiteral__Alternatives )
            // InternalSQLParser.g:3648:4: rule__NumLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__NumLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumLiteral"


    // $ANTLR start "entryRuleTemporalLiteral"
    // InternalSQLParser.g:3657:1: entryRuleTemporalLiteral : ruleTemporalLiteral EOF ;
    public final void entryRuleTemporalLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3658:1: ( ruleTemporalLiteral EOF )
            // InternalSQLParser.g:3659:1: ruleTemporalLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTemporalLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTemporalLiteral"


    // $ANTLR start "ruleTemporalLiteral"
    // InternalSQLParser.g:3666:1: ruleTemporalLiteral : ( ( rule__TemporalLiteral__Alternatives ) ) ;
    public final void ruleTemporalLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3670:2: ( ( ( rule__TemporalLiteral__Alternatives ) ) )
            // InternalSQLParser.g:3671:2: ( ( rule__TemporalLiteral__Alternatives ) )
            {
            // InternalSQLParser.g:3671:2: ( ( rule__TemporalLiteral__Alternatives ) )
            // InternalSQLParser.g:3672:3: ( rule__TemporalLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3673:3: ( rule__TemporalLiteral__Alternatives )
            // InternalSQLParser.g:3673:4: rule__TemporalLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemporalLiteral"


    // $ANTLR start "entryRuleBoolLiteral"
    // InternalSQLParser.g:3682:1: entryRuleBoolLiteral : ruleBoolLiteral EOF ;
    public final void entryRuleBoolLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3683:1: ( ruleBoolLiteral EOF )
            // InternalSQLParser.g:3684:1: ruleBoolLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolLiteral"


    // $ANTLR start "ruleBoolLiteral"
    // InternalSQLParser.g:3691:1: ruleBoolLiteral : ( ( rule__BoolLiteral__Alternatives ) ) ;
    public final void ruleBoolLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3695:2: ( ( ( rule__BoolLiteral__Alternatives ) ) )
            // InternalSQLParser.g:3696:2: ( ( rule__BoolLiteral__Alternatives ) )
            {
            // InternalSQLParser.g:3696:2: ( ( rule__BoolLiteral__Alternatives ) )
            // InternalSQLParser.g:3697:3: ( rule__BoolLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3698:3: ( rule__BoolLiteral__Alternatives )
            // InternalSQLParser.g:3698:4: rule__BoolLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BoolLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolLiteral"


    // $ANTLR start "entryRuleStringOperand"
    // InternalSQLParser.g:3707:1: entryRuleStringOperand : ruleStringOperand EOF ;
    public final void entryRuleStringOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3708:1: ( ruleStringOperand EOF )
            // InternalSQLParser.g:3709:1: ruleStringOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringOperand"


    // $ANTLR start "ruleStringOperand"
    // InternalSQLParser.g:3716:1: ruleStringOperand : ( RULE_STRING_ ) ;
    public final void ruleStringOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3720:2: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:3721:2: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:3721:2: ( RULE_STRING_ )
            // InternalSQLParser.g:3722:3: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringOperand"


    // $ANTLR start "entryRuleFNAME"
    // InternalSQLParser.g:3732:1: entryRuleFNAME : ruleFNAME EOF ;
    public final void entryRuleFNAME() throws RecognitionException {
        try {
            // InternalSQLParser.g:3733:1: ( ruleFNAME EOF )
            // InternalSQLParser.g:3734:1: ruleFNAME EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFNAME"


    // $ANTLR start "ruleFNAME"
    // InternalSQLParser.g:3741:1: ruleFNAME : ( ( rule__FNAME__Group__0 ) ) ;
    public final void ruleFNAME() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3745:2: ( ( ( rule__FNAME__Group__0 ) ) )
            // InternalSQLParser.g:3746:2: ( ( rule__FNAME__Group__0 ) )
            {
            // InternalSQLParser.g:3746:2: ( ( rule__FNAME__Group__0 ) )
            // InternalSQLParser.g:3747:3: ( rule__FNAME__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getGroup()); 
            }
            // InternalSQLParser.g:3748:3: ( rule__FNAME__Group__0 )
            // InternalSQLParser.g:3748:4: rule__FNAME__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFNAME"


    // $ANTLR start "entryRuleUnsignedValue"
    // InternalSQLParser.g:3757:1: entryRuleUnsignedValue : ruleUnsignedValue EOF ;
    public final void entryRuleUnsignedValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:3758:1: ( ruleUnsignedValue EOF )
            // InternalSQLParser.g:3759:1: ruleUnsignedValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnsignedValue"


    // $ANTLR start "ruleUnsignedValue"
    // InternalSQLParser.g:3766:1: ruleUnsignedValue : ( ( rule__UnsignedValue__IntegerAssignment ) ) ;
    public final void ruleUnsignedValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3770:2: ( ( ( rule__UnsignedValue__IntegerAssignment ) ) )
            // InternalSQLParser.g:3771:2: ( ( rule__UnsignedValue__IntegerAssignment ) )
            {
            // InternalSQLParser.g:3771:2: ( ( rule__UnsignedValue__IntegerAssignment ) )
            // InternalSQLParser.g:3772:3: ( rule__UnsignedValue__IntegerAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }
            // InternalSQLParser.g:3773:3: ( rule__UnsignedValue__IntegerAssignment )
            // InternalSQLParser.g:3773:4: rule__UnsignedValue__IntegerAssignment
            {
            pushFollow(FOLLOW_2);
            rule__UnsignedValue__IntegerAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnsignedValue"


    // $ANTLR start "ruleXFunction"
    // InternalSQLParser.g:3782:1: ruleXFunction : ( ( rule__XFunction__Alternatives ) ) ;
    public final void ruleXFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3786:1: ( ( ( rule__XFunction__Alternatives ) ) )
            // InternalSQLParser.g:3787:2: ( ( rule__XFunction__Alternatives ) )
            {
            // InternalSQLParser.g:3787:2: ( ( rule__XFunction__Alternatives ) )
            // InternalSQLParser.g:3788:3: ( rule__XFunction__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3789:3: ( rule__XFunction__Alternatives )
            // InternalSQLParser.g:3789:4: rule__XFunction__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XFunction__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXFunction"


    // $ANTLR start "ruleEXTRACT_VALUES"
    // InternalSQLParser.g:3798:1: ruleEXTRACT_VALUES : ( ( rule__EXTRACT_VALUES__Alternatives ) ) ;
    public final void ruleEXTRACT_VALUES() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3802:1: ( ( ( rule__EXTRACT_VALUES__Alternatives ) ) )
            // InternalSQLParser.g:3803:2: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            {
            // InternalSQLParser.g:3803:2: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            // InternalSQLParser.g:3804:3: ( rule__EXTRACT_VALUES__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3805:3: ( rule__EXTRACT_VALUES__Alternatives )
            // InternalSQLParser.g:3805:4: rule__EXTRACT_VALUES__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EXTRACT_VALUES__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEXTRACT_VALUES"


    // $ANTLR start "rule__SimpleStatement__Alternatives"
    // InternalSQLParser.g:3813:1: rule__SimpleStatement__Alternatives : ( ( ( rule__SimpleStatement__SelectAssignment_0 ) ) | ( ( rule__SimpleStatement__InsertAssignment_1 ) ) | ( ( rule__SimpleStatement__CreateAssignment_2 ) ) );
    public final void rule__SimpleStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3817:1: ( ( ( rule__SimpleStatement__SelectAssignment_0 ) ) | ( ( rule__SimpleStatement__InsertAssignment_1 ) ) | ( ( rule__SimpleStatement__CreateAssignment_2 ) ) )
            int alt2=3;
            switch ( input.LA(1) ) {
            case SELECT:
            case WITH:
            case RULE_JRNPARAM:
                {
                alt2=1;
                }
                break;
            case INSERT:
                {
                alt2=2;
                }
                break;
            case CREATE:
                {
                alt2=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalSQLParser.g:3818:2: ( ( rule__SimpleStatement__SelectAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3818:2: ( ( rule__SimpleStatement__SelectAssignment_0 ) )
                    // InternalSQLParser.g:3819:3: ( rule__SimpleStatement__SelectAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStatementAccess().getSelectAssignment_0()); 
                    }
                    // InternalSQLParser.g:3820:3: ( rule__SimpleStatement__SelectAssignment_0 )
                    // InternalSQLParser.g:3820:4: rule__SimpleStatement__SelectAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStatement__SelectAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStatementAccess().getSelectAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3824:2: ( ( rule__SimpleStatement__InsertAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3824:2: ( ( rule__SimpleStatement__InsertAssignment_1 ) )
                    // InternalSQLParser.g:3825:3: ( rule__SimpleStatement__InsertAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStatementAccess().getInsertAssignment_1()); 
                    }
                    // InternalSQLParser.g:3826:3: ( rule__SimpleStatement__InsertAssignment_1 )
                    // InternalSQLParser.g:3826:4: rule__SimpleStatement__InsertAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStatement__InsertAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStatementAccess().getInsertAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3830:2: ( ( rule__SimpleStatement__CreateAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3830:2: ( ( rule__SimpleStatement__CreateAssignment_2 ) )
                    // InternalSQLParser.g:3831:3: ( rule__SimpleStatement__CreateAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStatementAccess().getCreateAssignment_2()); 
                    }
                    // InternalSQLParser.g:3832:3: ( rule__SimpleStatement__CreateAssignment_2 )
                    // InternalSQLParser.g:3832:4: rule__SimpleStatement__CreateAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStatement__CreateAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStatementAccess().getCreateAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStatement__Alternatives"


    // $ANTLR start "rule__InsertStatement__Alternatives_3"
    // InternalSQLParser.g:3840:1: rule__InsertStatement__Alternatives_3 : ( ( ( rule__InsertStatement__IfcAssignment_3_0 ) ) | ( ( rule__InsertStatement__SelectAssignment_3_1 ) ) );
    public final void rule__InsertStatement__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3844:1: ( ( ( rule__InsertStatement__IfcAssignment_3_0 ) ) | ( ( rule__InsertStatement__SelectAssignment_3_1 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==LeftParenthesis) ) {
                alt3=1;
            }
            else if ( (LA3_0==SELECT) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSQLParser.g:3845:2: ( ( rule__InsertStatement__IfcAssignment_3_0 ) )
                    {
                    // InternalSQLParser.g:3845:2: ( ( rule__InsertStatement__IfcAssignment_3_0 ) )
                    // InternalSQLParser.g:3846:3: ( rule__InsertStatement__IfcAssignment_3_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInsertStatementAccess().getIfcAssignment_3_0()); 
                    }
                    // InternalSQLParser.g:3847:3: ( rule__InsertStatement__IfcAssignment_3_0 )
                    // InternalSQLParser.g:3847:4: rule__InsertStatement__IfcAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InsertStatement__IfcAssignment_3_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInsertStatementAccess().getIfcAssignment_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3851:2: ( ( rule__InsertStatement__SelectAssignment_3_1 ) )
                    {
                    // InternalSQLParser.g:3851:2: ( ( rule__InsertStatement__SelectAssignment_3_1 ) )
                    // InternalSQLParser.g:3852:3: ( rule__InsertStatement__SelectAssignment_3_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInsertStatementAccess().getSelectAssignment_3_1()); 
                    }
                    // InternalSQLParser.g:3853:3: ( rule__InsertStatement__SelectAssignment_3_1 )
                    // InternalSQLParser.g:3853:4: rule__InsertStatement__SelectAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__InsertStatement__SelectAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInsertStatementAccess().getSelectAssignment_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Alternatives_3"


    // $ANTLR start "rule__BoolExpr__Alternatives_1_0"
    // InternalSQLParser.g:3861:1: rule__BoolExpr__Alternatives_1_0 : ( ( OR ) | ( VerticalLineVerticalLine ) );
    public final void rule__BoolExpr__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3865:1: ( ( OR ) | ( VerticalLineVerticalLine ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==OR) ) {
                alt4=1;
            }
            else if ( (LA4_0==VerticalLineVerticalLine) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSQLParser.g:3866:2: ( OR )
                    {
                    // InternalSQLParser.g:3866:2: ( OR )
                    // InternalSQLParser.g:3867:3: OR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolExprAccess().getORKeyword_1_0_0()); 
                    }
                    match(input,OR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolExprAccess().getORKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3872:2: ( VerticalLineVerticalLine )
                    {
                    // InternalSQLParser.g:3872:2: ( VerticalLineVerticalLine )
                    // InternalSQLParser.g:3873:3: VerticalLineVerticalLine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolExprAccess().getVerticalLineVerticalLineKeyword_1_0_1()); 
                    }
                    match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolExprAccess().getVerticalLineVerticalLineKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolExpr__Alternatives_1_0"


    // $ANTLR start "rule__BoolTerm__Alternatives_1_0"
    // InternalSQLParser.g:3882:1: rule__BoolTerm__Alternatives_1_0 : ( ( AND ) | ( AmpersandAmpersand ) );
    public final void rule__BoolTerm__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3886:1: ( ( AND ) | ( AmpersandAmpersand ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==AND) ) {
                alt5=1;
            }
            else if ( (LA5_0==AmpersandAmpersand) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalSQLParser.g:3887:2: ( AND )
                    {
                    // InternalSQLParser.g:3887:2: ( AND )
                    // InternalSQLParser.g:3888:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolTermAccess().getANDKeyword_1_0_0()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolTermAccess().getANDKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3893:2: ( AmpersandAmpersand )
                    {
                    // InternalSQLParser.g:3893:2: ( AmpersandAmpersand )
                    // InternalSQLParser.g:3894:3: AmpersandAmpersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolTermAccess().getAmpersandAmpersandKeyword_1_0_1()); 
                    }
                    match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolTermAccess().getAmpersandAmpersandKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolTerm__Alternatives_1_0"


    // $ANTLR start "rule__BoolPri__Alternatives"
    // InternalSQLParser.g:3903:1: rule__BoolPri__Alternatives : ( ( ruleLiteral ) | ( ( rule__BoolPri__Group_1__0 ) ) );
    public final void rule__BoolPri__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3907:1: ( ( ruleLiteral ) | ( ( rule__BoolPri__Group_1__0 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==TIMESTAMP||LA6_0==FALSE||LA6_0==DATE||LA6_0==NULL||(LA6_0>=TIME && LA6_0<=TRUE)||(LA6_0>=RULE_UNSIGNED && LA6_0<=RULE_INT)||LA6_0==RULE_STRING_) ) {
                alt6=1;
            }
            else if ( (LA6_0==LeftParenthesis) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSQLParser.g:3908:2: ( ruleLiteral )
                    {
                    // InternalSQLParser.g:3908:2: ( ruleLiteral )
                    // InternalSQLParser.g:3909:3: ruleLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolPriAccess().getLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolPriAccess().getLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3914:2: ( ( rule__BoolPri__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:3914:2: ( ( rule__BoolPri__Group_1__0 ) )
                    // InternalSQLParser.g:3915:3: ( rule__BoolPri__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolPriAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:3916:3: ( rule__BoolPri__Group_1__0 )
                    // InternalSQLParser.g:3916:4: rule__BoolPri__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__BoolPri__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolPriAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolPri__Alternatives"


    // $ANTLR start "rule__TableElement__Alternatives"
    // InternalSQLParser.g:3924:1: rule__TableElement__Alternatives : ( ( ( rule__TableElement__ColumnDefinitionAssignment_0 ) ) | ( ( rule__TableElement__TableConstraintDefAssignment_1 ) ) );
    public final void rule__TableElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3928:1: ( ( ( rule__TableElement__ColumnDefinitionAssignment_0 ) ) | ( ( rule__TableElement__TableConstraintDefAssignment_1 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_ID) ) {
                alt7=1;
            }
            else if ( (LA7_0==FOREIGN||LA7_0==PRIMARY) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSQLParser.g:3929:2: ( ( rule__TableElement__ColumnDefinitionAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3929:2: ( ( rule__TableElement__ColumnDefinitionAssignment_0 ) )
                    // InternalSQLParser.g:3930:3: ( rule__TableElement__ColumnDefinitionAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableElementAccess().getColumnDefinitionAssignment_0()); 
                    }
                    // InternalSQLParser.g:3931:3: ( rule__TableElement__ColumnDefinitionAssignment_0 )
                    // InternalSQLParser.g:3931:4: rule__TableElement__ColumnDefinitionAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableElement__ColumnDefinitionAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableElementAccess().getColumnDefinitionAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3935:2: ( ( rule__TableElement__TableConstraintDefAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3935:2: ( ( rule__TableElement__TableConstraintDefAssignment_1 ) )
                    // InternalSQLParser.g:3936:3: ( rule__TableElement__TableConstraintDefAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableElementAccess().getTableConstraintDefAssignment_1()); 
                    }
                    // InternalSQLParser.g:3937:3: ( rule__TableElement__TableConstraintDefAssignment_1 )
                    // InternalSQLParser.g:3937:4: rule__TableElement__TableConstraintDefAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableElement__TableConstraintDefAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableElementAccess().getTableConstraintDefAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElement__Alternatives"


    // $ANTLR start "rule__TableConstraintDef__Alternatives"
    // InternalSQLParser.g:3945:1: rule__TableConstraintDef__Alternatives : ( ( ( rule__TableConstraintDef__Group_0__0 ) ) | ( ( rule__TableConstraintDef__Group_1__0 ) ) );
    public final void rule__TableConstraintDef__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3949:1: ( ( ( rule__TableConstraintDef__Group_0__0 ) ) | ( ( rule__TableConstraintDef__Group_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==PRIMARY) ) {
                alt8=1;
            }
            else if ( (LA8_0==FOREIGN) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSQLParser.g:3950:2: ( ( rule__TableConstraintDef__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:3950:2: ( ( rule__TableConstraintDef__Group_0__0 ) )
                    // InternalSQLParser.g:3951:3: ( rule__TableConstraintDef__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableConstraintDefAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:3952:3: ( rule__TableConstraintDef__Group_0__0 )
                    // InternalSQLParser.g:3952:4: rule__TableConstraintDef__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableConstraintDef__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableConstraintDefAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3956:2: ( ( rule__TableConstraintDef__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:3956:2: ( ( rule__TableConstraintDef__Group_1__0 ) )
                    // InternalSQLParser.g:3957:3: ( rule__TableConstraintDef__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableConstraintDefAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:3958:3: ( rule__TableConstraintDef__Group_1__0 )
                    // InternalSQLParser.g:3958:4: rule__TableConstraintDef__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableConstraintDef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableConstraintDefAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Alternatives"


    // $ANTLR start "rule__SimpleType__Alternatives"
    // InternalSQLParser.g:3966:1: rule__SimpleType__Alternatives : ( ( INT ) | ( TINYINT ) | ( SMALLINT ) | ( MEDIUMINT ) | ( BIGINT ) | ( REAL ) | ( DOUBLE ) | ( FLOAT ) | ( DECIMAL ) | ( NUMERIC ) | ( BIT ) | ( BOOL ) | ( BOOLEAN ) | ( CHAR ) | ( VARCHAR ) | ( BINARY ) | ( VARBINARY ) | ( DATE ) | ( TIME ) | ( TIMESTAMP ) | ( DATETIME ) | ( BLOB ) | ( TEXT ) );
    public final void rule__SimpleType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3970:1: ( ( INT ) | ( TINYINT ) | ( SMALLINT ) | ( MEDIUMINT ) | ( BIGINT ) | ( REAL ) | ( DOUBLE ) | ( FLOAT ) | ( DECIMAL ) | ( NUMERIC ) | ( BIT ) | ( BOOL ) | ( BOOLEAN ) | ( CHAR ) | ( VARCHAR ) | ( BINARY ) | ( VARBINARY ) | ( DATE ) | ( TIME ) | ( TIMESTAMP ) | ( DATETIME ) | ( BLOB ) | ( TEXT ) )
            int alt9=23;
            switch ( input.LA(1) ) {
            case INT:
                {
                alt9=1;
                }
                break;
            case TINYINT:
                {
                alt9=2;
                }
                break;
            case SMALLINT:
                {
                alt9=3;
                }
                break;
            case MEDIUMINT:
                {
                alt9=4;
                }
                break;
            case BIGINT:
                {
                alt9=5;
                }
                break;
            case REAL:
                {
                alt9=6;
                }
                break;
            case DOUBLE:
                {
                alt9=7;
                }
                break;
            case FLOAT:
                {
                alt9=8;
                }
                break;
            case DECIMAL:
                {
                alt9=9;
                }
                break;
            case NUMERIC:
                {
                alt9=10;
                }
                break;
            case BIT:
                {
                alt9=11;
                }
                break;
            case BOOL:
                {
                alt9=12;
                }
                break;
            case BOOLEAN:
                {
                alt9=13;
                }
                break;
            case CHAR:
                {
                alt9=14;
                }
                break;
            case VARCHAR:
                {
                alt9=15;
                }
                break;
            case BINARY:
                {
                alt9=16;
                }
                break;
            case VARBINARY:
                {
                alt9=17;
                }
                break;
            case DATE:
                {
                alt9=18;
                }
                break;
            case TIME:
                {
                alt9=19;
                }
                break;
            case TIMESTAMP:
                {
                alt9=20;
                }
                break;
            case DATETIME:
                {
                alt9=21;
                }
                break;
            case BLOB:
                {
                alt9=22;
                }
                break;
            case TEXT:
                {
                alt9=23;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalSQLParser.g:3971:2: ( INT )
                    {
                    // InternalSQLParser.g:3971:2: ( INT )
                    // InternalSQLParser.g:3972:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getINTKeyword_0()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getINTKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3977:2: ( TINYINT )
                    {
                    // InternalSQLParser.g:3977:2: ( TINYINT )
                    // InternalSQLParser.g:3978:3: TINYINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getTINYINTKeyword_1()); 
                    }
                    match(input,TINYINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getTINYINTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3983:2: ( SMALLINT )
                    {
                    // InternalSQLParser.g:3983:2: ( SMALLINT )
                    // InternalSQLParser.g:3984:3: SMALLINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getSMALLINTKeyword_2()); 
                    }
                    match(input,SMALLINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getSMALLINTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3989:2: ( MEDIUMINT )
                    {
                    // InternalSQLParser.g:3989:2: ( MEDIUMINT )
                    // InternalSQLParser.g:3990:3: MEDIUMINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getMEDIUMINTKeyword_3()); 
                    }
                    match(input,MEDIUMINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getMEDIUMINTKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3995:2: ( BIGINT )
                    {
                    // InternalSQLParser.g:3995:2: ( BIGINT )
                    // InternalSQLParser.g:3996:3: BIGINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBIGINTKeyword_4()); 
                    }
                    match(input,BIGINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBIGINTKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4001:2: ( REAL )
                    {
                    // InternalSQLParser.g:4001:2: ( REAL )
                    // InternalSQLParser.g:4002:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getREALKeyword_5()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getREALKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:4007:2: ( DOUBLE )
                    {
                    // InternalSQLParser.g:4007:2: ( DOUBLE )
                    // InternalSQLParser.g:4008:3: DOUBLE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getDOUBLEKeyword_6()); 
                    }
                    match(input,DOUBLE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getDOUBLEKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:4013:2: ( FLOAT )
                    {
                    // InternalSQLParser.g:4013:2: ( FLOAT )
                    // InternalSQLParser.g:4014:3: FLOAT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getFLOATKeyword_7()); 
                    }
                    match(input,FLOAT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getFLOATKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:4019:2: ( DECIMAL )
                    {
                    // InternalSQLParser.g:4019:2: ( DECIMAL )
                    // InternalSQLParser.g:4020:3: DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getDECIMALKeyword_8()); 
                    }
                    match(input,DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getDECIMALKeyword_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:4025:2: ( NUMERIC )
                    {
                    // InternalSQLParser.g:4025:2: ( NUMERIC )
                    // InternalSQLParser.g:4026:3: NUMERIC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getNUMERICKeyword_9()); 
                    }
                    match(input,NUMERIC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getNUMERICKeyword_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:4031:2: ( BIT )
                    {
                    // InternalSQLParser.g:4031:2: ( BIT )
                    // InternalSQLParser.g:4032:3: BIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBITKeyword_10()); 
                    }
                    match(input,BIT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBITKeyword_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:4037:2: ( BOOL )
                    {
                    // InternalSQLParser.g:4037:2: ( BOOL )
                    // InternalSQLParser.g:4038:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBOOLKeyword_11()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBOOLKeyword_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSQLParser.g:4043:2: ( BOOLEAN )
                    {
                    // InternalSQLParser.g:4043:2: ( BOOLEAN )
                    // InternalSQLParser.g:4044:3: BOOLEAN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBOOLEANKeyword_12()); 
                    }
                    match(input,BOOLEAN,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBOOLEANKeyword_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSQLParser.g:4049:2: ( CHAR )
                    {
                    // InternalSQLParser.g:4049:2: ( CHAR )
                    // InternalSQLParser.g:4050:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getCHARKeyword_13()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getCHARKeyword_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSQLParser.g:4055:2: ( VARCHAR )
                    {
                    // InternalSQLParser.g:4055:2: ( VARCHAR )
                    // InternalSQLParser.g:4056:3: VARCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getVARCHARKeyword_14()); 
                    }
                    match(input,VARCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getVARCHARKeyword_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalSQLParser.g:4061:2: ( BINARY )
                    {
                    // InternalSQLParser.g:4061:2: ( BINARY )
                    // InternalSQLParser.g:4062:3: BINARY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBINARYKeyword_15()); 
                    }
                    match(input,BINARY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBINARYKeyword_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalSQLParser.g:4067:2: ( VARBINARY )
                    {
                    // InternalSQLParser.g:4067:2: ( VARBINARY )
                    // InternalSQLParser.g:4068:3: VARBINARY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getVARBINARYKeyword_16()); 
                    }
                    match(input,VARBINARY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getVARBINARYKeyword_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalSQLParser.g:4073:2: ( DATE )
                    {
                    // InternalSQLParser.g:4073:2: ( DATE )
                    // InternalSQLParser.g:4074:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getDATEKeyword_17()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getDATEKeyword_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalSQLParser.g:4079:2: ( TIME )
                    {
                    // InternalSQLParser.g:4079:2: ( TIME )
                    // InternalSQLParser.g:4080:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getTIMEKeyword_18()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getTIMEKeyword_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalSQLParser.g:4085:2: ( TIMESTAMP )
                    {
                    // InternalSQLParser.g:4085:2: ( TIMESTAMP )
                    // InternalSQLParser.g:4086:3: TIMESTAMP
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getTIMESTAMPKeyword_19()); 
                    }
                    match(input,TIMESTAMP,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getTIMESTAMPKeyword_19()); 
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalSQLParser.g:4091:2: ( DATETIME )
                    {
                    // InternalSQLParser.g:4091:2: ( DATETIME )
                    // InternalSQLParser.g:4092:3: DATETIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getDATETIMEKeyword_20()); 
                    }
                    match(input,DATETIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getDATETIMEKeyword_20()); 
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalSQLParser.g:4097:2: ( BLOB )
                    {
                    // InternalSQLParser.g:4097:2: ( BLOB )
                    // InternalSQLParser.g:4098:3: BLOB
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBLOBKeyword_21()); 
                    }
                    match(input,BLOB,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBLOBKeyword_21()); 
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalSQLParser.g:4103:2: ( TEXT )
                    {
                    // InternalSQLParser.g:4103:2: ( TEXT )
                    // InternalSQLParser.g:4104:3: TEXT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getTEXTKeyword_22()); 
                    }
                    match(input,TEXT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getTEXTKeyword_22()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleType__Alternatives"


    // $ANTLR start "rule__FieldOptions__Alternatives"
    // InternalSQLParser.g:4113:1: rule__FieldOptions__Alternatives : ( ( SIGNED ) | ( UNSIGNED ) | ( ZEROFILL ) );
    public final void rule__FieldOptions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4117:1: ( ( SIGNED ) | ( UNSIGNED ) | ( ZEROFILL ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case SIGNED:
                {
                alt10=1;
                }
                break;
            case UNSIGNED:
                {
                alt10=2;
                }
                break;
            case ZEROFILL:
                {
                alt10=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalSQLParser.g:4118:2: ( SIGNED )
                    {
                    // InternalSQLParser.g:4118:2: ( SIGNED )
                    // InternalSQLParser.g:4119:3: SIGNED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFieldOptionsAccess().getSIGNEDKeyword_0()); 
                    }
                    match(input,SIGNED,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFieldOptionsAccess().getSIGNEDKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4124:2: ( UNSIGNED )
                    {
                    // InternalSQLParser.g:4124:2: ( UNSIGNED )
                    // InternalSQLParser.g:4125:3: UNSIGNED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFieldOptionsAccess().getUNSIGNEDKeyword_1()); 
                    }
                    match(input,UNSIGNED,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFieldOptionsAccess().getUNSIGNEDKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4130:2: ( ZEROFILL )
                    {
                    // InternalSQLParser.g:4130:2: ( ZEROFILL )
                    // InternalSQLParser.g:4131:3: ZEROFILL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFieldOptionsAccess().getZEROFILLKeyword_2()); 
                    }
                    match(input,ZEROFILL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFieldOptionsAccess().getZEROFILLKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldOptions__Alternatives"


    // $ANTLR start "rule__ColumnAttribute__Alternatives"
    // InternalSQLParser.g:4140:1: rule__ColumnAttribute__Alternatives : ( ( ruleNullAttribute ) | ( ruleDefaultValue ) | ( ruleAutoIncrement ) | ( rulePrimaryKey ) | ( ruleUniqueKey ) | ( ruleComment ) );
    public final void rule__ColumnAttribute__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4144:1: ( ( ruleNullAttribute ) | ( ruleDefaultValue ) | ( ruleAutoIncrement ) | ( rulePrimaryKey ) | ( ruleUniqueKey ) | ( ruleComment ) )
            int alt11=6;
            switch ( input.LA(1) ) {
            case NULL:
            case NOT:
                {
                alt11=1;
                }
                break;
            case DEFAULT:
                {
                alt11=2;
                }
                break;
            case AUTO_INCREMENT:
                {
                alt11=3;
                }
                break;
            case PRIMARY:
                {
                alt11=4;
                }
                break;
            case UNIQUE:
                {
                alt11=5;
                }
                break;
            case COMMENT:
                {
                alt11=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalSQLParser.g:4145:2: ( ruleNullAttribute )
                    {
                    // InternalSQLParser.g:4145:2: ( ruleNullAttribute )
                    // InternalSQLParser.g:4146:3: ruleNullAttribute
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getNullAttributeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNullAttribute();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getNullAttributeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4151:2: ( ruleDefaultValue )
                    {
                    // InternalSQLParser.g:4151:2: ( ruleDefaultValue )
                    // InternalSQLParser.g:4152:3: ruleDefaultValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getDefaultValueParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDefaultValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getDefaultValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4157:2: ( ruleAutoIncrement )
                    {
                    // InternalSQLParser.g:4157:2: ( ruleAutoIncrement )
                    // InternalSQLParser.g:4158:3: ruleAutoIncrement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getAutoIncrementParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAutoIncrement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getAutoIncrementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4163:2: ( rulePrimaryKey )
                    {
                    // InternalSQLParser.g:4163:2: ( rulePrimaryKey )
                    // InternalSQLParser.g:4164:3: rulePrimaryKey
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getPrimaryKeyParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePrimaryKey();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getPrimaryKeyParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4169:2: ( ruleUniqueKey )
                    {
                    // InternalSQLParser.g:4169:2: ( ruleUniqueKey )
                    // InternalSQLParser.g:4170:3: ruleUniqueKey
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getUniqueKeyParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUniqueKey();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getUniqueKeyParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4175:2: ( ruleComment )
                    {
                    // InternalSQLParser.g:4175:2: ( ruleComment )
                    // InternalSQLParser.g:4176:3: ruleComment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getCommentParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getCommentParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnAttribute__Alternatives"


    // $ANTLR start "rule__DefaultValue__Alternatives_1"
    // InternalSQLParser.g:4185:1: rule__DefaultValue__Alternatives_1 : ( ( ruleSignedLiteral ) | ( NOW ) );
    public final void rule__DefaultValue__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4189:1: ( ( ruleSignedLiteral ) | ( NOW ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==TIMESTAMP||LA12_0==FALSE||LA12_0==DATE||LA12_0==NULL||(LA12_0>=TIME && LA12_0<=TRUE)||LA12_0==PlusSign||LA12_0==HyphenMinus||(LA12_0>=RULE_UNSIGNED && LA12_0<=RULE_INT)||LA12_0==RULE_STRING_) ) {
                alt12=1;
            }
            else if ( (LA12_0==NOW) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalSQLParser.g:4190:2: ( ruleSignedLiteral )
                    {
                    // InternalSQLParser.g:4190:2: ( ruleSignedLiteral )
                    // InternalSQLParser.g:4191:3: ruleSignedLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefaultValueAccess().getSignedLiteralParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSignedLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefaultValueAccess().getSignedLiteralParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4196:2: ( NOW )
                    {
                    // InternalSQLParser.g:4196:2: ( NOW )
                    // InternalSQLParser.g:4197:3: NOW
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefaultValueAccess().getNOWKeyword_1_1()); 
                    }
                    match(input,NOW,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefaultValueAccess().getNOWKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Alternatives_1"


    // $ANTLR start "rule__FetchFirst__RowAlternatives_1_0"
    // InternalSQLParser.g:4206:1: rule__FetchFirst__RowAlternatives_1_0 : ( ( ROW ) | ( ROWS ) );
    public final void rule__FetchFirst__RowAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4210:1: ( ( ROW ) | ( ROWS ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==ROW) ) {
                alt13=1;
            }
            else if ( (LA13_0==ROWS) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalSQLParser.g:4211:2: ( ROW )
                    {
                    // InternalSQLParser.g:4211:2: ( ROW )
                    // InternalSQLParser.g:4212:3: ROW
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }
                    match(input,ROW,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4217:2: ( ROWS )
                    {
                    // InternalSQLParser.g:4217:2: ( ROWS )
                    // InternalSQLParser.g:4218:3: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAlternatives_1_0"


    // $ANTLR start "rule__Limit__Alternatives"
    // InternalSQLParser.g:4227:1: rule__Limit__Alternatives : ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) );
    public final void rule__Limit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4231:1: ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==ALL) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_UNSIGNED) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSQLParser.g:4232:2: ( ( rule__Limit__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:4232:2: ( ( rule__Limit__Group_0__0 ) )
                    // InternalSQLParser.g:4233:3: ( rule__Limit__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:4234:3: ( rule__Limit__Group_0__0 )
                    // InternalSQLParser.g:4234:4: rule__Limit__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4238:2: ( ( rule__Limit__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:4238:2: ( ( rule__Limit__Group_1__0 ) )
                    // InternalSQLParser.g:4239:3: ( rule__Limit__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:4240:3: ( rule__Limit__Group_1__0 )
                    // InternalSQLParser.g:4240:4: rule__Limit__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Alternatives"


    // $ANTLR start "rule__SelectSubSet__OpAlternatives_0_0"
    // InternalSQLParser.g:4248:1: rule__SelectSubSet__OpAlternatives_0_0 : ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) );
    public final void rule__SelectSubSet__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4252:1: ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) )
            int alt15=4;
            switch ( input.LA(1) ) {
            case UNION:
                {
                alt15=1;
                }
                break;
            case INTERSECT:
                {
                alt15=2;
                }
                break;
            case MINUS:
                {
                alt15=3;
                }
                break;
            case EXCEPT:
                {
                alt15=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSQLParser.g:4253:2: ( UNION )
                    {
                    // InternalSQLParser.g:4253:2: ( UNION )
                    // InternalSQLParser.g:4254:3: UNION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }
                    match(input,UNION,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4259:2: ( INTERSECT )
                    {
                    // InternalSQLParser.g:4259:2: ( INTERSECT )
                    // InternalSQLParser.g:4260:3: INTERSECT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }
                    match(input,INTERSECT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4265:2: ( MINUS )
                    {
                    // InternalSQLParser.g:4265:2: ( MINUS )
                    // InternalSQLParser.g:4266:3: MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }
                    match(input,MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4271:2: ( EXCEPT )
                    {
                    // InternalSQLParser.g:4271:2: ( EXCEPT )
                    // InternalSQLParser.g:4272:3: EXCEPT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }
                    match(input,EXCEPT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAlternatives_0_0"


    // $ANTLR start "rule__Select__Alternatives_2_1"
    // InternalSQLParser.g:4281:1: rule__Select__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) );
    public final void rule__Select__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4285:1: ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_INT) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_SIGNED_DOUBLE) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSQLParser.g:4286:2: ( RULE_INT )
                    {
                    // InternalSQLParser.g:4286:2: ( RULE_INT )
                    // InternalSQLParser.g:4287:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4292:2: ( RULE_SIGNED_DOUBLE )
                    {
                    // InternalSQLParser.g:4292:2: ( RULE_SIGNED_DOUBLE )
                    // InternalSQLParser.g:4293:3: RULE_SIGNED_DOUBLE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Alternatives_2_1"


    // $ANTLR start "rule__ColumnOrAlias__Alternatives"
    // InternalSQLParser.g:4302:1: rule__ColumnOrAlias__Alternatives : ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) );
    public final void rule__ColumnOrAlias__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4306:1: ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) )
            int alt17=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA17_1 = input.LA(2);

                if ( (LA17_1==EOF||LA17_1==FROM||LA17_1==LeftParenthesisPlusSignRightParenthesis||LA17_1==AS||(LA17_1>=VerticalLineVerticalLine && LA17_1<=HyphenMinus)||LA17_1==Solidus||LA17_1==RULE_STAR||(LA17_1>=RULE_STRING && LA17_1<=RULE_ID)) ) {
                    alt17=1;
                }
                else if ( (LA17_1==FullStop) ) {
                    int LA17_6 = input.LA(3);

                    if ( (LA17_6==RULE_STAR) ) {
                        alt17=3;
                    }
                    else if ( ((LA17_6>=RULE_STRING && LA17_6<=RULE_ID)) ) {
                        alt17=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 17, 6, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DBNAME:
                {
                int LA17_2 = input.LA(2);

                if ( (LA17_2==FullStop) ) {
                    int LA17_6 = input.LA(3);

                    if ( (LA17_6==RULE_STAR) ) {
                        alt17=3;
                    }
                    else if ( ((LA17_6>=RULE_STRING && LA17_6<=RULE_ID)) ) {
                        alt17=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 17, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA17_2==EOF||LA17_2==FROM||LA17_2==LeftParenthesisPlusSignRightParenthesis||LA17_2==AS||LA17_2==VerticalLineVerticalLine||(LA17_2>=RightParenthesis && LA17_2<=HyphenMinus)||LA17_2==Solidus||LA17_2==RULE_STAR||(LA17_2>=RULE_STRING && LA17_2<=RULE_ID)) ) {
                    alt17=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
                {
                int LA17_3 = input.LA(2);

                if ( (LA17_3==FullStop) ) {
                    int LA17_6 = input.LA(3);

                    if ( (LA17_6==RULE_STAR) ) {
                        alt17=3;
                    }
                    else if ( ((LA17_6>=RULE_STRING && LA17_6<=RULE_ID)) ) {
                        alt17=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 17, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA17_3==EOF||LA17_3==FROM||LA17_3==LeftParenthesisPlusSignRightParenthesis||LA17_3==AS||LA17_3==VerticalLineVerticalLine||(LA17_3>=RightParenthesis && LA17_3<=HyphenMinus)||LA17_3==Solidus||LA17_3==RULE_STAR||(LA17_3>=RULE_STRING && LA17_3<=RULE_ID)) ) {
                    alt17=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 3, input);

                    throw nvae;
                }
                }
                break;
            case EXTRACT:
            case CAST:
            case FALSE:
            case CASE:
            case TRUE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt17=1;
                }
                break;
            case RULE_STAR:
                {
                alt17=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalSQLParser.g:4307:2: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:4307:2: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    // InternalSQLParser.g:4308:3: ( rule__ColumnOrAlias__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:4309:3: ( rule__ColumnOrAlias__Group_0__0 )
                    // InternalSQLParser.g:4309:4: rule__ColumnOrAlias__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4313:2: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4313:2: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    // InternalSQLParser.g:4314:3: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }
                    // InternalSQLParser.g:4315:3: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    // InternalSQLParser.g:4315:4: rule__ColumnOrAlias__AllColsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AllColsAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4319:2: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4319:2: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    // InternalSQLParser.g:4320:3: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }
                    // InternalSQLParser.g:4321:3: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    // InternalSQLParser.g:4321:4: rule__ColumnOrAlias__DbAllColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__DbAllColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Alternatives"


    // $ANTLR start "rule__FromTableJoin__Alternatives_2"
    // InternalSQLParser.g:4329:1: rule__FromTableJoin__Alternatives_2 : ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) );
    public final void rule__FromTableJoin__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4333:1: ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==ON) ) {
                alt18=1;
            }
            else if ( (LA18_0==USING) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSQLParser.g:4334:2: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    {
                    // InternalSQLParser.g:4334:2: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    // InternalSQLParser.g:4335:3: ( rule__FromTableJoin__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }
                    // InternalSQLParser.g:4336:3: ( rule__FromTableJoin__Group_2_0__0 )
                    // InternalSQLParser.g:4336:4: rule__FromTableJoin__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4340:2: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4340:2: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    // InternalSQLParser.g:4341:3: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4342:3: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    // InternalSQLParser.g:4342:4: rule__FromTableJoin__JoinCondAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__JoinCondAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Alternatives_2"


    // $ANTLR start "rule__TableOrAlias__Alternatives_0"
    // InternalSQLParser.g:4350:1: rule__TableOrAlias__Alternatives_0 : ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) );
    public final void rule__TableOrAlias__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4354:1: ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) )
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( ((LA19_0>=RULE_STRING && LA19_0<=RULE_ID)) ) {
                alt19=1;
            }
            else if ( (LA19_0==LeftParenthesis) ) {
                int LA19_2 = input.LA(2);

                if ( (LA19_2==SELECT) ) {
                    alt19=2;
                }
                else if ( (LA19_2==VALUES) ) {
                    alt19=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSQLParser.g:4355:2: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    {
                    // InternalSQLParser.g:4355:2: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    // InternalSQLParser.g:4356:3: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }
                    // InternalSQLParser.g:4357:3: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    // InternalSQLParser.g:4357:4: rule__TableOrAlias__TfullAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TfullAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4361:2: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    {
                    // InternalSQLParser.g:4361:2: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    // InternalSQLParser.g:4362:3: ( rule__TableOrAlias__SqAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }
                    // InternalSQLParser.g:4363:3: ( rule__TableOrAlias__SqAssignment_0_1 )
                    // InternalSQLParser.g:4363:4: rule__TableOrAlias__SqAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__SqAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4367:2: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    {
                    // InternalSQLParser.g:4367:2: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    // InternalSQLParser.g:4368:3: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }
                    // InternalSQLParser.g:4369:3: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    // InternalSQLParser.g:4369:4: rule__TableOrAlias__ValuesAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__ValuesAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_0"


    // $ANTLR start "rule__TableOrAlias__Alternatives_1"
    // InternalSQLParser.g:4377:1: rule__TableOrAlias__Alternatives_1 : ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) );
    public final void rule__TableOrAlias__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4381:1: ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==PIVOT) ) {
                alt20=1;
            }
            else if ( (LA20_0==UNPIVOT) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalSQLParser.g:4382:2: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:4382:2: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    // InternalSQLParser.g:4383:3: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:4384:3: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    // InternalSQLParser.g:4384:4: rule__TableOrAlias__PivotAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__PivotAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4388:2: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:4388:2: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    // InternalSQLParser.g:4389:3: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:4390:3: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    // InternalSQLParser.g:4390:4: rule__TableOrAlias__UnpivotAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__UnpivotAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_1"


    // $ANTLR start "rule__RowValue__Alternatives"
    // InternalSQLParser.g:4398:1: rule__RowValue__Alternatives : ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) );
    public final void rule__RowValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4402:1: ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( ((LA21_0>=RULE_UNSIGNED && LA21_0<=RULE_SIGNED_DOUBLE)||LA21_0==RULE_STRING_) ) {
                alt21=1;
            }
            else if ( (LA21_0==NULL) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalSQLParser.g:4403:2: ( ruleScalarNumberOperand )
                    {
                    // InternalSQLParser.g:4403:2: ( ruleScalarNumberOperand )
                    // InternalSQLParser.g:4404:3: ruleScalarNumberOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarNumberOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4409:2: ( ( rule__RowValue__NullAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4409:2: ( ( rule__RowValue__NullAssignment_1 ) )
                    // InternalSQLParser.g:4410:3: ( rule__RowValue__NullAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }
                    // InternalSQLParser.g:4411:3: ( rule__RowValue__NullAssignment_1 )
                    // InternalSQLParser.g:4411:4: rule__RowValue__NullAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValue__NullAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__Alternatives"


    // $ANTLR start "rule__PivotInClause__Alternatives_2"
    // InternalSQLParser.g:4419:1: rule__PivotInClause__Alternatives_2 : ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) );
    public final void rule__PivotInClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4423:1: ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA22_1 = input.LA(2);

                if ( ((LA22_1>=RULE_STRING && LA22_1<=RULE_ID)) ) {
                    alt22=2;
                }
                else if ( (LA22_1==SELECT) ) {
                    alt22=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt22=2;
                }
                break;
            case ANY:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSQLParser.g:4424:2: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4424:2: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    // InternalSQLParser.g:4425:3: ( rule__PivotInClause__SqAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4426:3: ( rule__PivotInClause__SqAssignment_2_0 )
                    // InternalSQLParser.g:4426:4: rule__PivotInClause__SqAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__SqAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4430:2: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4430:2: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    // InternalSQLParser.g:4431:3: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4432:3: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    // InternalSQLParser.g:4432:4: rule__PivotInClause__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4436:2: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    {
                    // InternalSQLParser.g:4436:2: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    // InternalSQLParser.g:4437:3: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }
                    // InternalSQLParser.g:4438:3: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    // InternalSQLParser.g:4438:4: rule__PivotInClause__PinanyAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__PinanyAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Alternatives_2"


    // $ANTLR start "rule__UnpivotTable__Alternatives_1_0"
    // InternalSQLParser.g:4446:1: rule__UnpivotTable__Alternatives_1_0 : ( ( INCLUDE ) | ( EXCLUDE ) );
    public final void rule__UnpivotTable__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4450:1: ( ( INCLUDE ) | ( EXCLUDE ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==INCLUDE) ) {
                alt23=1;
            }
            else if ( (LA23_0==EXCLUDE) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSQLParser.g:4451:2: ( INCLUDE )
                    {
                    // InternalSQLParser.g:4451:2: ( INCLUDE )
                    // InternalSQLParser.g:4452:3: INCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }
                    match(input,INCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4457:2: ( EXCLUDE )
                    {
                    // InternalSQLParser.g:4457:2: ( EXCLUDE )
                    // InternalSQLParser.g:4458:3: EXCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }
                    match(input,EXCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Alternatives_1_0"


    // $ANTLR start "rule__PivotForClause__Alternatives_1"
    // InternalSQLParser.g:4467:1: rule__PivotForClause__Alternatives_1 : ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) );
    public final void rule__PivotForClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4471:1: ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=RULE_STRING && LA24_0<=RULE_ID)) ) {
                alt24=1;
            }
            else if ( (LA24_0==LeftParenthesis) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalSQLParser.g:4472:2: ( ruleColumnFull )
                    {
                    // InternalSQLParser.g:4472:2: ( ruleColumnFull )
                    // InternalSQLParser.g:4473:3: ruleColumnFull
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleColumnFull();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4478:2: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:4478:2: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    // InternalSQLParser.g:4479:3: ( rule__PivotForClause__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:4480:3: ( rule__PivotForClause__Group_1_1__0 )
                    // InternalSQLParser.g:4480:4: rule__PivotForClause__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotForClause__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Alternatives_1"


    // $ANTLR start "rule__PivotColumns__Alternatives"
    // InternalSQLParser.g:4488:1: rule__PivotColumns__Alternatives : ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) );
    public final void rule__PivotColumns__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4492:1: ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( ((LA25_0>=RULE_STRING && LA25_0<=RULE_ID)) ) {
                alt25=1;
            }
            else if ( (LA25_0==LeftParenthesis) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSQLParser.g:4493:2: ( rulePivotCol )
                    {
                    // InternalSQLParser.g:4493:2: ( rulePivotCol )
                    // InternalSQLParser.g:4494:3: rulePivotCol
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePivotCol();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4499:2: ( ( rule__PivotColumns__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:4499:2: ( ( rule__PivotColumns__Group_1__0 ) )
                    // InternalSQLParser.g:4500:3: ( rule__PivotColumns__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:4501:3: ( rule__PivotColumns__Group_1__0 )
                    // InternalSQLParser.g:4501:4: rule__PivotColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Alternatives"


    // $ANTLR start "rule__OrderByColumnFull__Alternatives_0"
    // InternalSQLParser.g:4509:1: rule__OrderByColumnFull__Alternatives_0 : ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) );
    public final void rule__OrderByColumnFull__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4513:1: ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=RULE_STRING && LA26_0<=RULE_ID)) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_UNSIGNED) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSQLParser.g:4514:2: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    {
                    // InternalSQLParser.g:4514:2: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    // InternalSQLParser.g:4515:3: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }
                    // InternalSQLParser.g:4516:3: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    // InternalSQLParser.g:4516:4: rule__OrderByColumnFull__ColOrderAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4520:2: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    {
                    // InternalSQLParser.g:4520:2: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    // InternalSQLParser.g:4521:3: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }
                    // InternalSQLParser.g:4522:3: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    // InternalSQLParser.g:4522:4: rule__OrderByColumnFull__ColOrderIntAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderIntAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Alternatives_0"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAlternatives_1_0"
    // InternalSQLParser.g:4530:1: rule__OrderByColumnFull__DirectionAlternatives_1_0 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByColumnFull__DirectionAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4534:1: ( ( ASC ) | ( DESC ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==ASC) ) {
                alt27=1;
            }
            else if ( (LA27_0==DESC) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalSQLParser.g:4535:2: ( ASC )
                    {
                    // InternalSQLParser.g:4535:2: ( ASC )
                    // InternalSQLParser.g:4536:3: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4541:2: ( DESC )
                    {
                    // InternalSQLParser.g:4541:2: ( DESC )
                    // InternalSQLParser.g:4542:3: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAlternatives_1_0"


    // $ANTLR start "rule__GroupByColumnFull__Alternatives"
    // InternalSQLParser.g:4551:1: rule__GroupByColumnFull__Alternatives : ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) );
    public final void rule__GroupByColumnFull__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4555:1: ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) )
            int alt28=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA28_1 = input.LA(2);

                if ( (LA28_1==LeftParenthesis) ) {
                    alt28=2;
                }
                else if ( (LA28_1==EOF||LA28_1==INTERSECT||LA28_1==EXCEPT||LA28_1==HAVING||LA28_1==OFFSET||LA28_1==FETCH||(LA28_1>=LIMIT && LA28_1<=MINUS)||LA28_1==ORDER||LA28_1==UNION||LA28_1==RightParenthesis||LA28_1==Comma||LA28_1==FullStop||LA28_1==Semicolon) ) {
                    alt28=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt28=1;
                }
                break;
            case RULE_UNSIGNED:
                {
                alt28=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalSQLParser.g:4556:2: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4556:2: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    // InternalSQLParser.g:4557:3: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }
                    // InternalSQLParser.g:4558:3: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    // InternalSQLParser.g:4558:4: rule__GroupByColumnFull__ColGrByAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__ColGrByAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4562:2: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4562:2: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    // InternalSQLParser.g:4563:3: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }
                    // InternalSQLParser.g:4564:3: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    // InternalSQLParser.g:4564:4: rule__GroupByColumnFull__GbFunctionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GbFunctionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4568:2: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4568:2: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    // InternalSQLParser.g:4569:3: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }
                    // InternalSQLParser.g:4570:3: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    // InternalSQLParser.g:4570:4: rule__GroupByColumnFull__GrByIntAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GrByIntAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__Alternatives"
    // InternalSQLParser.g:4578:1: rule__ExpressionFragmentSecond__Alternatives : ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) );
    public final void rule__ExpressionFragmentSecond__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4582:1: ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==AND||LA29_0==OR) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_JRNPARAM) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalSQLParser.g:4583:2: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:4583:2: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    // InternalSQLParser.g:4584:3: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:4585:3: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    // InternalSQLParser.g:4585:4: rule__ExpressionFragmentSecond__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4589:2: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4589:2: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    // InternalSQLParser.g:4590:3: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }
                    // InternalSQLParser.g:4591:3: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    // InternalSQLParser.g:4591:4: rule__ExpressionFragmentSecond__NotPrmAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__NotPrmAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"
    // InternalSQLParser.g:4599:1: rule__ExpressionFragmentSecond__CAlternatives_0_0_0 : ( ( AND ) | ( OR ) );
    public final void rule__ExpressionFragmentSecond__CAlternatives_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4603:1: ( ( AND ) | ( OR ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==AND) ) {
                alt30=1;
            }
            else if ( (LA30_0==OR) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSQLParser.g:4604:2: ( AND )
                    {
                    // InternalSQLParser.g:4604:2: ( AND )
                    // InternalSQLParser.g:4605:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4610:2: ( OR )
                    {
                    // InternalSQLParser.g:4610:2: ( OR )
                    // InternalSQLParser.g:4611:3: OR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }
                    match(input,OR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"


    // $ANTLR start "rule__ExpressionFragment__Alternatives"
    // InternalSQLParser.g:4620:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );
    public final void rule__ExpressionFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4624:1: ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) )
            int alt31=6;
            alt31 = dfa31.predict(input);
            switch (alt31) {
                case 1 :
                    // InternalSQLParser.g:4625:2: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4625:2: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    // InternalSQLParser.g:4626:3: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }
                    // InternalSQLParser.g:4627:3: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    // InternalSQLParser.g:4627:4: rule__ExpressionFragment__ExpgroupAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpgroupAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4631:2: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4631:2: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    // InternalSQLParser.g:4632:3: ( rule__ExpressionFragment__ExpAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }
                    // InternalSQLParser.g:4633:3: ( rule__ExpressionFragment__ExpAssignment_1 )
                    // InternalSQLParser.g:4633:4: rule__ExpressionFragment__ExpAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4637:2: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4637:2: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    // InternalSQLParser.g:4638:3: ( rule__ExpressionFragment__XexpAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }
                    // InternalSQLParser.g:4639:3: ( rule__ExpressionFragment__XexpAssignment_2 )
                    // InternalSQLParser.g:4639:4: rule__ExpressionFragment__XexpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__XexpAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4643:2: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4643:2: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    // InternalSQLParser.g:4644:3: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }
                    // InternalSQLParser.g:4645:3: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    // InternalSQLParser.g:4645:4: rule__ExpressionFragment__NotPrmAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__NotPrmAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4649:2: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    {
                    // InternalSQLParser.g:4649:2: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    // InternalSQLParser.g:4650:3: ( rule__ExpressionFragment__InAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }
                    // InternalSQLParser.g:4651:3: ( rule__ExpressionFragment__InAssignment_4 )
                    // InternalSQLParser.g:4651:4: rule__ExpressionFragment__InAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__InAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4655:2: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    {
                    // InternalSQLParser.g:4655:2: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    // InternalSQLParser.g:4656:3: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }
                    // InternalSQLParser.g:4657:3: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    // InternalSQLParser.g:4657:4: rule__ExpressionFragment__ExistsAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExistsAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__Alternatives"


    // $ANTLR start "rule__ExpressionFragment__XexpAlternatives_2_0"
    // InternalSQLParser.g:4665:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );
    public final void rule__ExpressionFragment__XexpAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4669:1: ( ( ruleXExpression ) | ( ruleXExpression_ ) )
            int alt32=2;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // InternalSQLParser.g:4670:2: ( ruleXExpression )
                    {
                    // InternalSQLParser.g:4670:2: ( ruleXExpression )
                    // InternalSQLParser.g:4671:3: ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4676:2: ( ruleXExpression_ )
                    {
                    // InternalSQLParser.g:4676:2: ( ruleXExpression_ )
                    // InternalSQLParser.g:4677:3: ruleXExpression_
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression_();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAlternatives_2_0"


    // $ANTLR start "rule__ExpressionGroup__IsnotAlternatives_1_0"
    // InternalSQLParser.g:4686:1: rule__ExpressionGroup__IsnotAlternatives_1_0 : ( ( NOT ) | ( NOT_1 ) );
    public final void rule__ExpressionGroup__IsnotAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4690:1: ( ( NOT ) | ( NOT_1 ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==NOT) ) {
                alt33=1;
            }
            else if ( (LA33_0==NOT_1) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSQLParser.g:4691:2: ( NOT )
                    {
                    // InternalSQLParser.g:4691:2: ( NOT )
                    // InternalSQLParser.g:4692:3: NOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4697:2: ( NOT_1 )
                    {
                    // InternalSQLParser.g:4697:2: ( NOT_1 )
                    // InternalSQLParser.g:4698:3: NOT_1
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }
                    match(input,NOT_1,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAlternatives_1_0"


    // $ANTLR start "rule__Expression__Alternatives_1"
    // InternalSQLParser.g:4707:1: rule__Expression__Alternatives_1 : ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) );
    public final void rule__Expression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4711:1: ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) )
            int alt34=6;
            switch ( input.LA(1) ) {
            case IS:
                {
                alt34=1;
                }
                break;
            case NOT:
                {
                switch ( input.LA(2) ) {
                case IN:
                    {
                    alt34=2;
                    }
                    break;
                case EXISTS:
                    {
                    alt34=3;
                    }
                    break;
                case BETWEEN:
                    {
                    alt34=4;
                    }
                    break;
                case LIKE:
                    {
                    alt34=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 2, input);

                    throw nvae;
                }

                }
                break;
            case IN:
                {
                alt34=2;
                }
                break;
            case EXISTS:
                {
                alt34=3;
                }
                break;
            case BETWEEN:
                {
                alt34=4;
                }
                break;
            case LIKE:
                {
                alt34=5;
                }
                break;
            case ExclamationMarkEqualsSign:
            case LessThanSignEqualsSign:
            case LessThanSignGreaterThanSign:
            case GreaterThanSignEqualsSign:
            case CircumflexAccentEqualsSign:
            case LessThanSign:
            case EqualsSign:
            case GreaterThanSign:
                {
                alt34=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalSQLParser.g:4712:2: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:4712:2: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    // InternalSQLParser.g:4713:3: ( rule__Expression__IsnullAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:4714:3: ( rule__Expression__IsnullAssignment_1_0 )
                    // InternalSQLParser.g:4714:4: rule__Expression__IsnullAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__IsnullAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4718:2: ( ( rule__Expression__InAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:4718:2: ( ( rule__Expression__InAssignment_1_1 ) )
                    // InternalSQLParser.g:4719:3: ( rule__Expression__InAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:4720:3: ( rule__Expression__InAssignment_1_1 )
                    // InternalSQLParser.g:4720:4: rule__Expression__InAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__InAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4724:2: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    {
                    // InternalSQLParser.g:4724:2: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    // InternalSQLParser.g:4725:3: ( rule__Expression__ExistsAssignment_1_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }
                    // InternalSQLParser.g:4726:3: ( rule__Expression__ExistsAssignment_1_2 )
                    // InternalSQLParser.g:4726:4: rule__Expression__ExistsAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__ExistsAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4730:2: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    {
                    // InternalSQLParser.g:4730:2: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    // InternalSQLParser.g:4731:3: ( rule__Expression__BetweenAssignment_1_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }
                    // InternalSQLParser.g:4732:3: ( rule__Expression__BetweenAssignment_1_3 )
                    // InternalSQLParser.g:4732:4: rule__Expression__BetweenAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__BetweenAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4736:2: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    {
                    // InternalSQLParser.g:4736:2: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    // InternalSQLParser.g:4737:3: ( rule__Expression__LikeAssignment_1_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }
                    // InternalSQLParser.g:4738:3: ( rule__Expression__LikeAssignment_1_4 )
                    // InternalSQLParser.g:4738:4: rule__Expression__LikeAssignment_1_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__LikeAssignment_1_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4742:2: ( ( rule__Expression__CompAssignment_1_5 ) )
                    {
                    // InternalSQLParser.g:4742:2: ( ( rule__Expression__CompAssignment_1_5 ) )
                    // InternalSQLParser.g:4743:3: ( rule__Expression__CompAssignment_1_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }
                    // InternalSQLParser.g:4744:3: ( rule__Expression__CompAssignment_1_5 )
                    // InternalSQLParser.g:4744:4: rule__Expression__CompAssignment_1_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__CompAssignment_1_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives_1"


    // $ANTLR start "rule__Comparison__OperatorAlternatives_0_0"
    // InternalSQLParser.g:4752:1: rule__Comparison__OperatorAlternatives_0_0 : ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) );
    public final void rule__Comparison__OperatorAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4756:1: ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) )
            int alt35=8;
            switch ( input.LA(1) ) {
            case GreaterThanSign:
                {
                alt35=1;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt35=2;
                }
                break;
            case LessThanSign:
                {
                alt35=3;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt35=4;
                }
                break;
            case EqualsSign:
                {
                alt35=5;
                }
                break;
            case LessThanSignGreaterThanSign:
                {
                alt35=6;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt35=7;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt35=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // InternalSQLParser.g:4757:2: ( GreaterThanSign )
                    {
                    // InternalSQLParser.g:4757:2: ( GreaterThanSign )
                    // InternalSQLParser.g:4758:3: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4763:2: ( GreaterThanSignEqualsSign )
                    {
                    // InternalSQLParser.g:4763:2: ( GreaterThanSignEqualsSign )
                    // InternalSQLParser.g:4764:3: GreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4769:2: ( LessThanSign )
                    {
                    // InternalSQLParser.g:4769:2: ( LessThanSign )
                    // InternalSQLParser.g:4770:3: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4775:2: ( LessThanSignEqualsSign )
                    {
                    // InternalSQLParser.g:4775:2: ( LessThanSignEqualsSign )
                    // InternalSQLParser.g:4776:3: LessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4781:2: ( EqualsSign )
                    {
                    // InternalSQLParser.g:4781:2: ( EqualsSign )
                    // InternalSQLParser.g:4782:3: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4787:2: ( LessThanSignGreaterThanSign )
                    {
                    // InternalSQLParser.g:4787:2: ( LessThanSignGreaterThanSign )
                    // InternalSQLParser.g:4788:3: LessThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:4793:2: ( ExclamationMarkEqualsSign )
                    {
                    // InternalSQLParser.g:4793:2: ( ExclamationMarkEqualsSign )
                    // InternalSQLParser.g:4794:3: ExclamationMarkEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }
                    match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:4799:2: ( CircumflexAccentEqualsSign )
                    {
                    // InternalSQLParser.g:4799:2: ( CircumflexAccentEqualsSign )
                    // InternalSQLParser.g:4800:3: CircumflexAccentEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }
                    match(input,CircumflexAccentEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAlternatives_0_0"


    // $ANTLR start "rule__Comparison__SubOperatorAlternatives_1_0"
    // InternalSQLParser.g:4809:1: rule__Comparison__SubOperatorAlternatives_1_0 : ( ( ANY ) | ( ALL ) | ( SOME ) );
    public final void rule__Comparison__SubOperatorAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4813:1: ( ( ANY ) | ( ALL ) | ( SOME ) )
            int alt36=3;
            switch ( input.LA(1) ) {
            case ANY:
                {
                alt36=1;
                }
                break;
            case ALL:
                {
                alt36=2;
                }
                break;
            case SOME:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalSQLParser.g:4814:2: ( ANY )
                    {
                    // InternalSQLParser.g:4814:2: ( ANY )
                    // InternalSQLParser.g:4815:3: ANY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }
                    match(input,ANY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4820:2: ( ALL )
                    {
                    // InternalSQLParser.g:4820:2: ( ALL )
                    // InternalSQLParser.g:4821:3: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4826:2: ( SOME )
                    {
                    // InternalSQLParser.g:4826:2: ( SOME )
                    // InternalSQLParser.g:4827:3: SOME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }
                    match(input,SOME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAlternatives_1_0"


    // $ANTLR start "rule__LikeOperand__Alternatives"
    // InternalSQLParser.g:4836:1: rule__LikeOperand__Alternatives : ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) );
    public final void rule__LikeOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4840:1: ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) )
            int alt37=4;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt37=1;
                }
                break;
            case RULE_ID:
                {
                alt37=2;
                }
                break;
            case CAST:
                {
                alt37=3;
                }
                break;
            case RULE_JRPARAM:
                {
                alt37=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalSQLParser.g:4841:2: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    {
                    // InternalSQLParser.g:4841:2: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    // InternalSQLParser.g:4842:3: ( rule__LikeOperand__Op2Assignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }
                    // InternalSQLParser.g:4843:3: ( rule__LikeOperand__Op2Assignment_0 )
                    // InternalSQLParser.g:4843:4: rule__LikeOperand__Op2Assignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Op2Assignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4847:2: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    {
                    // InternalSQLParser.g:4847:2: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    // InternalSQLParser.g:4848:3: ( rule__LikeOperand__Fop2Assignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }
                    // InternalSQLParser.g:4849:3: ( rule__LikeOperand__Fop2Assignment_1 )
                    // InternalSQLParser.g:4849:4: rule__LikeOperand__Fop2Assignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Fop2Assignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4853:2: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4853:2: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    // InternalSQLParser.g:4854:3: ( rule__LikeOperand__FcastAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }
                    // InternalSQLParser.g:4855:3: ( rule__LikeOperand__FcastAssignment_2 )
                    // InternalSQLParser.g:4855:4: rule__LikeOperand__FcastAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FcastAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4859:2: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4859:2: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    // InternalSQLParser.g:4860:3: ( rule__LikeOperand__FparamAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }
                    // InternalSQLParser.g:4861:3: ( rule__LikeOperand__FparamAssignment_3 )
                    // InternalSQLParser.g:4861:4: rule__LikeOperand__FparamAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FparamAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Alternatives"


    // $ANTLR start "rule__InOperator__Alternatives_2"
    // InternalSQLParser.g:4869:1: rule__InOperator__Alternatives_2 : ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) );
    public final void rule__InOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4873:1: ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==LeftParenthesis) ) {
                int LA38_1 = input.LA(2);

                if ( ((LA38_1>=RULE_SIGNED_DOUBLE && LA38_1<=RULE_TIMESTAMP)||LA38_1==RULE_STRING_) ) {
                    alt38=2;
                }
                else if ( (LA38_1==SELECT) ) {
                    alt38=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalSQLParser.g:4874:2: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4874:2: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    // InternalSQLParser.g:4875:3: ( rule__InOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4876:3: ( rule__InOperator__SubqueryAssignment_2_0 )
                    // InternalSQLParser.g:4876:4: rule__InOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4880:2: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4880:2: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    // InternalSQLParser.g:4881:3: ( rule__InOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4882:3: ( rule__InOperator__OpListAssignment_2_1 )
                    // InternalSQLParser.g:4882:4: rule__InOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Alternatives_2"


    // $ANTLR start "rule__ExistsOperator__Alternatives_2"
    // InternalSQLParser.g:4890:1: rule__ExistsOperator__Alternatives_2 : ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) );
    public final void rule__ExistsOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4894:1: ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==LeftParenthesis) ) {
                int LA39_1 = input.LA(2);

                if ( ((LA39_1>=RULE_SIGNED_DOUBLE && LA39_1<=RULE_TIMESTAMP)||LA39_1==RULE_STRING_) ) {
                    alt39=2;
                }
                else if ( (LA39_1==SELECT) ) {
                    alt39=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalSQLParser.g:4895:2: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4895:2: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    // InternalSQLParser.g:4896:3: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4897:3: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    // InternalSQLParser.g:4897:4: rule__ExistsOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4901:2: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4901:2: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    // InternalSQLParser.g:4902:3: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4903:3: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    // InternalSQLParser.g:4903:4: rule__ExistsOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Alternatives_2"


    // $ANTLR start "rule__OperandGroup__Alternatives"
    // InternalSQLParser.g:4911:1: rule__OperandGroup__Alternatives : ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) );
    public final void rule__OperandGroup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4915:1: ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==EXTRACT||LA40_0==CAST||LA40_0==FALSE||LA40_0==CASE||LA40_0==TRUE||(LA40_0>=RULE_JRPARAM && LA40_0<=RULE_JRNPARAM)||(LA40_0>=RULE_UNSIGNED && LA40_0<=RULE_SIGNED_DOUBLE)||(LA40_0>=RULE_STRING_ && LA40_0<=RULE_ID)) ) {
                alt40=1;
            }
            else if ( (LA40_0==LeftParenthesis) ) {
                int LA40_2 = input.LA(2);

                if ( (LA40_2==SELECT) ) {
                    alt40=1;
                }
                else if ( (LA40_2==EXTRACT||LA40_2==CAST||LA40_2==FALSE||LA40_2==CASE||LA40_2==TRUE||LA40_2==LeftParenthesis||(LA40_2>=RULE_JRPARAM && LA40_2<=RULE_JRNPARAM)||(LA40_2>=RULE_UNSIGNED && LA40_2<=RULE_SIGNED_DOUBLE)||(LA40_2>=RULE_STRING_ && LA40_2<=RULE_ID)) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalSQLParser.g:4916:2: ( ruleOperand )
                    {
                    // InternalSQLParser.g:4916:2: ( ruleOperand )
                    // InternalSQLParser.g:4917:3: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4922:2: ( ( rule__OperandGroup__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:4922:2: ( ( rule__OperandGroup__Group_1__0 ) )
                    // InternalSQLParser.g:4923:3: ( rule__OperandGroup__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:4924:3: ( rule__OperandGroup__Group_1__0 )
                    // InternalSQLParser.g:4924:4: rule__OperandGroup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandGroup__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Alternatives"


    // $ANTLR start "rule__Operand__Alternatives_1_0"
    // InternalSQLParser.g:4932:1: rule__Operand__Alternatives_1_0 : ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) );
    public final void rule__Operand__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4936:1: ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) )
            int alt41=5;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                alt41=1;
                }
                break;
            case HyphenMinus:
                {
                alt41=2;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt41=3;
                }
                break;
            case RULE_STAR:
                {
                alt41=4;
                }
                break;
            case Solidus:
                {
                alt41=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalSQLParser.g:4937:2: ( ( rule__Operand__Group_1_0_0__0 ) )
                    {
                    // InternalSQLParser.g:4937:2: ( ( rule__Operand__Group_1_0_0__0 ) )
                    // InternalSQLParser.g:4938:3: ( rule__Operand__Group_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }
                    // InternalSQLParser.g:4939:3: ( rule__Operand__Group_1_0_0__0 )
                    // InternalSQLParser.g:4939:4: rule__Operand__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4943:2: ( ( rule__Operand__Group_1_0_1__0 ) )
                    {
                    // InternalSQLParser.g:4943:2: ( ( rule__Operand__Group_1_0_1__0 ) )
                    // InternalSQLParser.g:4944:3: ( rule__Operand__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }
                    // InternalSQLParser.g:4945:3: ( rule__Operand__Group_1_0_1__0 )
                    // InternalSQLParser.g:4945:4: rule__Operand__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4949:2: ( ( rule__Operand__Group_1_0_2__0 ) )
                    {
                    // InternalSQLParser.g:4949:2: ( ( rule__Operand__Group_1_0_2__0 ) )
                    // InternalSQLParser.g:4950:3: ( rule__Operand__Group_1_0_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }
                    // InternalSQLParser.g:4951:3: ( rule__Operand__Group_1_0_2__0 )
                    // InternalSQLParser.g:4951:4: rule__Operand__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4955:2: ( ( rule__Operand__Group_1_0_3__0 ) )
                    {
                    // InternalSQLParser.g:4955:2: ( ( rule__Operand__Group_1_0_3__0 ) )
                    // InternalSQLParser.g:4956:3: ( rule__Operand__Group_1_0_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }
                    // InternalSQLParser.g:4957:3: ( rule__Operand__Group_1_0_3__0 )
                    // InternalSQLParser.g:4957:4: rule__Operand__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4961:2: ( ( rule__Operand__Group_1_0_4__0 ) )
                    {
                    // InternalSQLParser.g:4961:2: ( ( rule__Operand__Group_1_0_4__0 ) )
                    // InternalSQLParser.g:4962:3: ( rule__Operand__Group_1_0_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }
                    // InternalSQLParser.g:4963:3: ( rule__Operand__Group_1_0_4__0 )
                    // InternalSQLParser.g:4963:4: rule__Operand__Group_1_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Alternatives_1_0"


    // $ANTLR start "rule__OperandFragment__Alternatives"
    // InternalSQLParser.g:4971:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) | ( ( rule__OperandFragment__BoolLiteralAssignment_7 ) ) );
    public final void rule__OperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4975:1: ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) | ( ( rule__OperandFragment__BoolLiteralAssignment_7 ) ) )
            int alt42=8;
            alt42 = dfa42.predict(input);
            switch (alt42) {
                case 1 :
                    // InternalSQLParser.g:4976:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4976:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    // InternalSQLParser.g:4977:3: ( rule__OperandFragment__ColumnAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }
                    // InternalSQLParser.g:4978:3: ( rule__OperandFragment__ColumnAssignment_0 )
                    // InternalSQLParser.g:4978:4: rule__OperandFragment__ColumnAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__ColumnAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4982:2: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4982:2: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    // InternalSQLParser.g:4983:3: ( rule__OperandFragment__XopAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }
                    // InternalSQLParser.g:4984:3: ( rule__OperandFragment__XopAssignment_1 )
                    // InternalSQLParser.g:4984:4: rule__OperandFragment__XopAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__XopAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4988:2: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4988:2: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    // InternalSQLParser.g:4989:3: ( rule__OperandFragment__SubqAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }
                    // InternalSQLParser.g:4990:3: ( rule__OperandFragment__SubqAssignment_2 )
                    // InternalSQLParser.g:4990:4: rule__OperandFragment__SubqAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SubqAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4994:2: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4994:2: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    // InternalSQLParser.g:4995:3: ( rule__OperandFragment__FcastAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }
                    // InternalSQLParser.g:4996:3: ( rule__OperandFragment__FcastAssignment_3 )
                    // InternalSQLParser.g:4996:4: rule__OperandFragment__FcastAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FcastAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:5000:2: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    {
                    // InternalSQLParser.g:5000:2: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    // InternalSQLParser.g:5001:3: ( rule__OperandFragment__FextAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }
                    // InternalSQLParser.g:5002:3: ( rule__OperandFragment__FextAssignment_4 )
                    // InternalSQLParser.g:5002:4: rule__OperandFragment__FextAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FextAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:5006:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    {
                    // InternalSQLParser.g:5006:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    // InternalSQLParser.g:5007:3: ( rule__OperandFragment__FuncAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }
                    // InternalSQLParser.g:5008:3: ( rule__OperandFragment__FuncAssignment_5 )
                    // InternalSQLParser.g:5008:4: rule__OperandFragment__FuncAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FuncAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:5012:2: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    {
                    // InternalSQLParser.g:5012:2: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    // InternalSQLParser.g:5013:3: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }
                    // InternalSQLParser.g:5014:3: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    // InternalSQLParser.g:5014:4: rule__OperandFragment__SqlcaseAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SqlcaseAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:5018:2: ( ( rule__OperandFragment__BoolLiteralAssignment_7 ) )
                    {
                    // InternalSQLParser.g:5018:2: ( ( rule__OperandFragment__BoolLiteralAssignment_7 ) )
                    // InternalSQLParser.g:5019:3: ( rule__OperandFragment__BoolLiteralAssignment_7 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getBoolLiteralAssignment_7()); 
                    }
                    // InternalSQLParser.g:5020:3: ( rule__OperandFragment__BoolLiteralAssignment_7 )
                    // InternalSQLParser.g:5020:4: rule__OperandFragment__BoolLiteralAssignment_7
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__BoolLiteralAssignment_7();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getBoolLiteralAssignment_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__Alternatives"


    // $ANTLR start "rule__OperandFunction__Alternatives_2"
    // InternalSQLParser.g:5028:1: rule__OperandFunction__Alternatives_2 : ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) );
    public final void rule__OperandFunction__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5032:1: ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_STAR) ) {
                alt43=1;
            }
            else if ( (LA43_0==DISTINCT||LA43_0==EXTRACT||LA43_0==CAST||LA43_0==FALSE||LA43_0==CASE||LA43_0==TRUE||LA43_0==ALL||LA43_0==LeftParenthesis||(LA43_0>=RULE_JRPARAM && LA43_0<=RULE_JRNPARAM)||(LA43_0>=RULE_UNSIGNED && LA43_0<=RULE_SIGNED_DOUBLE)||(LA43_0>=RULE_STRING_ && LA43_0<=RULE_ID)) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalSQLParser.g:5033:2: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:5033:2: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    // InternalSQLParser.g:5034:3: ( rule__OperandFunction__StarAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:5035:3: ( rule__OperandFunction__StarAssignment_2_0 )
                    // InternalSQLParser.g:5035:4: rule__OperandFunction__StarAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__StarAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5039:2: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:5039:2: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    // InternalSQLParser.g:5040:3: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:5041:3: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    // InternalSQLParser.g:5041:4: rule__OperandFunction__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Alternatives_2"


    // $ANTLR start "rule__WindowingClause__Alternatives_0"
    // InternalSQLParser.g:5049:1: rule__WindowingClause__Alternatives_0 : ( ( ROWS ) | ( RANGE ) );
    public final void rule__WindowingClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5053:1: ( ( ROWS ) | ( RANGE ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==ROWS) ) {
                alt44=1;
            }
            else if ( (LA44_0==RANGE) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalSQLParser.g:5054:2: ( ROWS )
                    {
                    // InternalSQLParser.g:5054:2: ( ROWS )
                    // InternalSQLParser.g:5055:3: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5060:2: ( RANGE )
                    {
                    // InternalSQLParser.g:5060:2: ( RANGE )
                    // InternalSQLParser.g:5061:3: RANGE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }
                    match(input,RANGE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_0"


    // $ANTLR start "rule__WindowingClause__Alternatives_1"
    // InternalSQLParser.g:5070:1: rule__WindowingClause__Alternatives_1 : ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) );
    public final void rule__WindowingClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5074:1: ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==BETWEEN) ) {
                alt45=1;
            }
            else if ( (LA45_0==UNBOUNDED||LA45_0==CURRENT||LA45_0==EXTRACT||LA45_0==CAST||LA45_0==FALSE||LA45_0==CASE||LA45_0==TRUE||LA45_0==LeftParenthesis||(LA45_0>=RULE_JRPARAM && LA45_0<=RULE_JRNPARAM)||(LA45_0>=RULE_UNSIGNED && LA45_0<=RULE_SIGNED_DOUBLE)||(LA45_0>=RULE_STRING_ && LA45_0<=RULE_ID)) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalSQLParser.g:5075:2: ( ruleWindowingClauseBetween )
                    {
                    // InternalSQLParser.g:5075:2: ( ruleWindowingClauseBetween )
                    // InternalSQLParser.g:5076:3: ruleWindowingClauseBetween
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseBetween();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5081:2: ( ruleWindowingClauseOperandPreceding )
                    {
                    // InternalSQLParser.g:5081:2: ( ruleWindowingClauseOperandPreceding )
                    // InternalSQLParser.g:5082:3: ruleWindowingClauseOperandPreceding
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseOperandPreceding();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1"
    // InternalSQLParser.g:5091:1: rule__WindowingClauseOperandFollowing__Alternatives_1 : ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5095:1: ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) )
            int alt46=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt46=1;
                }
                break;
            case CURRENT:
                {
                alt46=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case FALSE:
            case CASE:
            case TRUE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt46=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }

            switch (alt46) {
                case 1 :
                    // InternalSQLParser.g:5096:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    {
                    // InternalSQLParser.g:5096:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    // InternalSQLParser.g:5097:3: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }
                    // InternalSQLParser.g:5098:3: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    // InternalSQLParser.g:5098:4: rule__WindowingClauseOperandFollowing__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5102:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:5102:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    // InternalSQLParser.g:5103:3: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:5104:3: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    // InternalSQLParser.g:5104:4: rule__WindowingClauseOperandFollowing__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5108:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    {
                    // InternalSQLParser.g:5108:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    // InternalSQLParser.g:5109:3: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }
                    // InternalSQLParser.g:5110:3: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    // InternalSQLParser.g:5110:4: rule__WindowingClauseOperandFollowing__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"
    // InternalSQLParser.g:5118:1: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5122:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==PRECEDING) ) {
                alt47=1;
            }
            else if ( (LA47_0==KW_FOLLOWING) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalSQLParser.g:5123:2: ( PRECEDING )
                    {
                    // InternalSQLParser.g:5123:2: ( PRECEDING )
                    // InternalSQLParser.g:5124:3: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5129:2: ( KW_FOLLOWING )
                    {
                    // InternalSQLParser.g:5129:2: ( KW_FOLLOWING )
                    // InternalSQLParser.g:5130:3: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1"
    // InternalSQLParser.g:5139:1: rule__WindowingClauseOperandPreceding__Alternatives_1 : ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5143:1: ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) )
            int alt48=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt48=1;
                }
                break;
            case CURRENT:
                {
                alt48=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case FALSE:
            case CASE:
            case TRUE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt48=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalSQLParser.g:5144:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    {
                    // InternalSQLParser.g:5144:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    // InternalSQLParser.g:5145:3: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }
                    // InternalSQLParser.g:5146:3: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    // InternalSQLParser.g:5146:4: rule__WindowingClauseOperandPreceding__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5150:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:5150:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    // InternalSQLParser.g:5151:3: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:5152:3: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    // InternalSQLParser.g:5152:4: rule__WindowingClauseOperandPreceding__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5156:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    {
                    // InternalSQLParser.g:5156:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    // InternalSQLParser.g:5157:3: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }
                    // InternalSQLParser.g:5158:3: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    // InternalSQLParser.g:5158:4: rule__WindowingClauseOperandPreceding__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"
    // InternalSQLParser.g:5166:1: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5170:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==PRECEDING) ) {
                alt49=1;
            }
            else if ( (LA49_0==KW_FOLLOWING) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalSQLParser.g:5171:2: ( PRECEDING )
                    {
                    // InternalSQLParser.g:5171:2: ( PRECEDING )
                    // InternalSQLParser.g:5172:3: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5177:2: ( KW_FOLLOWING )
                    {
                    // InternalSQLParser.g:5177:2: ( KW_FOLLOWING )
                    // InternalSQLParser.g:5178:3: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"


    // $ANTLR start "rule__OrderByClause__Alternatives_0"
    // InternalSQLParser.g:5187:1: rule__OrderByClause__Alternatives_0 : ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) );
    public final void rule__OrderByClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5191:1: ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==ORDER) ) {
                int LA50_1 = input.LA(2);

                if ( (LA50_1==BY) ) {
                    alt50=1;
                }
                else if ( (LA50_1==SIBLINGS) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalSQLParser.g:5192:2: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    {
                    // InternalSQLParser.g:5192:2: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    // InternalSQLParser.g:5193:3: ( rule__OrderByClause__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }
                    // InternalSQLParser.g:5194:3: ( rule__OrderByClause__Group_0_0__0 )
                    // InternalSQLParser.g:5194:4: rule__OrderByClause__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5198:2: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    {
                    // InternalSQLParser.g:5198:2: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    // InternalSQLParser.g:5199:3: ( rule__OrderByClause__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }
                    // InternalSQLParser.g:5200:3: ( rule__OrderByClause__Group_0_1__0 )
                    // InternalSQLParser.g:5200:4: rule__OrderByClause__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Alternatives_0"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_1"
    // InternalSQLParser.g:5208:1: rule__OrderByClauseArg__Alternatives_1 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByClauseArg__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5212:1: ( ( ASC ) | ( DESC ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==ASC) ) {
                alt51=1;
            }
            else if ( (LA51_0==DESC) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalSQLParser.g:5213:2: ( ASC )
                    {
                    // InternalSQLParser.g:5213:2: ( ASC )
                    // InternalSQLParser.g:5214:3: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5219:2: ( DESC )
                    {
                    // InternalSQLParser.g:5219:2: ( DESC )
                    // InternalSQLParser.g:5220:3: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_1"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_2_1"
    // InternalSQLParser.g:5229:1: rule__OrderByClauseArg__Alternatives_2_1 : ( ( FIRST ) | ( LAST ) );
    public final void rule__OrderByClauseArg__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5233:1: ( ( FIRST ) | ( LAST ) )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==FIRST) ) {
                alt52=1;
            }
            else if ( (LA52_0==LAST) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalSQLParser.g:5234:2: ( FIRST )
                    {
                    // InternalSQLParser.g:5234:2: ( FIRST )
                    // InternalSQLParser.g:5235:3: FIRST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }
                    match(input,FIRST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5240:2: ( LAST )
                    {
                    // InternalSQLParser.g:5240:2: ( LAST )
                    // InternalSQLParser.g:5241:3: LAST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }
                    match(input,LAST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_2_1"


    // $ANTLR start "rule__QueryPartitionClause__Alternatives_2"
    // InternalSQLParser.g:5250:1: rule__QueryPartitionClause__Alternatives_2 : ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) );
    public final void rule__QueryPartitionClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5254:1: ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==EXTRACT||LA53_0==CAST||LA53_0==FALSE||LA53_0==CASE||LA53_0==TRUE||(LA53_0>=RULE_JRPARAM && LA53_0<=RULE_JRNPARAM)||(LA53_0>=RULE_UNSIGNED && LA53_0<=RULE_SIGNED_DOUBLE)||(LA53_0>=RULE_STRING_ && LA53_0<=RULE_ID)) ) {
                alt53=1;
            }
            else if ( (LA53_0==LeftParenthesis) ) {
                int LA53_2 = input.LA(2);

                if ( (LA53_2==SELECT) ) {
                    alt53=1;
                }
                else if ( (LA53_2==EXTRACT||LA53_2==CAST||LA53_2==FALSE||LA53_2==CASE||LA53_2==TRUE||LA53_2==LeftParenthesis||(LA53_2>=RULE_JRPARAM && LA53_2<=RULE_JRNPARAM)||(LA53_2>=RULE_UNSIGNED && LA53_2<=RULE_SIGNED_DOUBLE)||(LA53_2>=RULE_STRING_ && LA53_2<=RULE_ID)) ) {
                    alt53=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // InternalSQLParser.g:5255:2: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:5255:2: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    // InternalSQLParser.g:5256:3: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:5257:3: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    // InternalSQLParser.g:5257:4: rule__QueryPartitionClause__ArgsAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__ArgsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5261:2: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    {
                    // InternalSQLParser.g:5261:2: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    // InternalSQLParser.g:5262:3: ( rule__QueryPartitionClause__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }
                    // InternalSQLParser.g:5263:3: ( rule__QueryPartitionClause__Group_2_1__0 )
                    // InternalSQLParser.g:5263:4: rule__QueryPartitionClause__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Alternatives_2"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAlternatives_0"
    // InternalSQLParser.g:5271:1: rule__OpFunctionArgOperand__OpAlternatives_0 : ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) );
    public final void rule__OpFunctionArgOperand__OpAlternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5275:1: ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==DISTINCT||LA54_0==ALL) ) {
                alt54=1;
            }
            else if ( (LA54_0==EXTRACT||LA54_0==CAST||LA54_0==FALSE||LA54_0==CASE||LA54_0==TRUE||LA54_0==LeftParenthesis||(LA54_0>=RULE_JRPARAM && LA54_0<=RULE_JRNPARAM)||(LA54_0>=RULE_UNSIGNED && LA54_0<=RULE_SIGNED_DOUBLE)||(LA54_0>=RULE_STRING_ && LA54_0<=RULE_ID)) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalSQLParser.g:5276:2: ( ruleOpFunctionArgAgregate )
                    {
                    // InternalSQLParser.g:5276:2: ( ruleOpFunctionArgAgregate )
                    // InternalSQLParser.g:5277:3: ruleOpFunctionArgAgregate
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpFunctionArgAgregate();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5282:2: ( ruleOperand )
                    {
                    // InternalSQLParser.g:5282:2: ( ruleOperand )
                    // InternalSQLParser.g:5283:3: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAlternatives_0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Alternatives_0"
    // InternalSQLParser.g:5292:1: rule__OpFunctionArgAgregate__Alternatives_0 : ( ( ALL ) | ( DISTINCT ) );
    public final void rule__OpFunctionArgAgregate__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5296:1: ( ( ALL ) | ( DISTINCT ) )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==ALL) ) {
                alt55=1;
            }
            else if ( (LA55_0==DISTINCT) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalSQLParser.g:5297:2: ( ALL )
                    {
                    // InternalSQLParser.g:5297:2: ( ALL )
                    // InternalSQLParser.g:5298:3: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5303:2: ( DISTINCT )
                    {
                    // InternalSQLParser.g:5303:2: ( DISTINCT )
                    // InternalSQLParser.g:5304:3: DISTINCT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Alternatives_0"


    // $ANTLR start "rule__XOperandFragment__Alternatives"
    // InternalSQLParser.g:5313:1: rule__XOperandFragment__Alternatives : ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) );
    public final void rule__XOperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5317:1: ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) )
            int alt56=3;
            switch ( input.LA(1) ) {
            case RULE_JRPARAM:
                {
                alt56=1;
                }
                break;
            case RULE_JRNPARAM:
                {
                alt56=2;
                }
                break;
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt56=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // InternalSQLParser.g:5318:2: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    {
                    // InternalSQLParser.g:5318:2: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    // InternalSQLParser.g:5319:3: ( rule__XOperandFragment__ParamAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }
                    // InternalSQLParser.g:5320:3: ( rule__XOperandFragment__ParamAssignment_0 )
                    // InternalSQLParser.g:5320:4: rule__XOperandFragment__ParamAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ParamAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5324:2: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    {
                    // InternalSQLParser.g:5324:2: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    // InternalSQLParser.g:5325:3: ( rule__XOperandFragment__EparamAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }
                    // InternalSQLParser.g:5326:3: ( rule__XOperandFragment__EparamAssignment_1 )
                    // InternalSQLParser.g:5326:4: rule__XOperandFragment__EparamAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__EparamAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5330:2: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    {
                    // InternalSQLParser.g:5330:2: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    // InternalSQLParser.g:5331:3: ( rule__XOperandFragment__ScalarAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }
                    // InternalSQLParser.g:5332:3: ( rule__XOperandFragment__ScalarAssignment_2 )
                    // InternalSQLParser.g:5332:4: rule__XOperandFragment__ScalarAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ScalarAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__Alternatives"


    // $ANTLR start "rule__ScalarOperand__Alternatives"
    // InternalSQLParser.g:5340:1: rule__ScalarOperand__Alternatives : ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) );
    public final void rule__ScalarOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5344:1: ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) )
            int alt57=5;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt57=1;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt57=2;
                }
                break;
            case RULE_DATE:
                {
                alt57=3;
                }
                break;
            case RULE_TIME:
                {
                alt57=4;
                }
                break;
            case RULE_TIMESTAMP:
                {
                alt57=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // InternalSQLParser.g:5345:2: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    {
                    // InternalSQLParser.g:5345:2: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    // InternalSQLParser.g:5346:3: ( rule__ScalarOperand__SostrAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }
                    // InternalSQLParser.g:5347:3: ( rule__ScalarOperand__SostrAssignment_0 )
                    // InternalSQLParser.g:5347:4: rule__ScalarOperand__SostrAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SostrAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5351:2: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    {
                    // InternalSQLParser.g:5351:2: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    // InternalSQLParser.g:5352:3: ( rule__ScalarOperand__SodblAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }
                    // InternalSQLParser.g:5353:3: ( rule__ScalarOperand__SodblAssignment_1 )
                    // InternalSQLParser.g:5353:4: rule__ScalarOperand__SodblAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodblAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5357:2: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    {
                    // InternalSQLParser.g:5357:2: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    // InternalSQLParser.g:5358:3: ( rule__ScalarOperand__SodateAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }
                    // InternalSQLParser.g:5359:3: ( rule__ScalarOperand__SodateAssignment_2 )
                    // InternalSQLParser.g:5359:4: rule__ScalarOperand__SodateAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodateAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5363:2: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    {
                    // InternalSQLParser.g:5363:2: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    // InternalSQLParser.g:5364:3: ( rule__ScalarOperand__SotimeAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }
                    // InternalSQLParser.g:5365:3: ( rule__ScalarOperand__SotimeAssignment_3 )
                    // InternalSQLParser.g:5365:4: rule__ScalarOperand__SotimeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SotimeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:5369:2: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    {
                    // InternalSQLParser.g:5369:2: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    // InternalSQLParser.g:5370:3: ( rule__ScalarOperand__SodtAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }
                    // InternalSQLParser.g:5371:3: ( rule__ScalarOperand__SodtAssignment_4 )
                    // InternalSQLParser.g:5371:4: rule__ScalarOperand__SodtAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodtAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__Alternatives"


    // $ANTLR start "rule__ScalarNumberOperand__Alternatives"
    // InternalSQLParser.g:5379:1: rule__ScalarNumberOperand__Alternatives : ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) );
    public final void rule__ScalarNumberOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5383:1: ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) )
            int alt58=4;
            switch ( input.LA(1) ) {
            case RULE_UNSIGNED:
                {
                alt58=1;
                }
                break;
            case RULE_INT:
                {
                alt58=2;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt58=3;
                }
                break;
            case RULE_STRING_:
                {
                alt58=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }

            switch (alt58) {
                case 1 :
                    // InternalSQLParser.g:5384:2: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    {
                    // InternalSQLParser.g:5384:2: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    // InternalSQLParser.g:5385:3: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }
                    // InternalSQLParser.g:5386:3: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    // InternalSQLParser.g:5386:4: rule__ScalarNumberOperand__SoUIntAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SoUIntAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5390:2: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    {
                    // InternalSQLParser.g:5390:2: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    // InternalSQLParser.g:5391:3: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }
                    // InternalSQLParser.g:5392:3: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    // InternalSQLParser.g:5392:4: rule__ScalarNumberOperand__SointAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SointAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5396:2: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    {
                    // InternalSQLParser.g:5396:2: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    // InternalSQLParser.g:5397:3: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }
                    // InternalSQLParser.g:5398:3: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    // InternalSQLParser.g:5398:4: rule__ScalarNumberOperand__SodblAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SodblAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5402:2: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    {
                    // InternalSQLParser.g:5402:2: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    // InternalSQLParser.g:5403:3: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }
                    // InternalSQLParser.g:5404:3: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    // InternalSQLParser.g:5404:4: rule__ScalarNumberOperand__SostrAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SostrAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__Alternatives"


    // $ANTLR start "rule__SQLCASE__Alternatives_1"
    // InternalSQLParser.g:5412:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );
    public final void rule__SQLCASE__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5416:1: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) )
            int alt59=2;
            alt59 = dfa59.predict(input);
            switch (alt59) {
                case 1 :
                    // InternalSQLParser.g:5417:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:5417:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    // InternalSQLParser.g:5418:3: ( rule__SQLCASE__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:5419:3: ( rule__SQLCASE__WopAssignment_1_0 )
                    // InternalSQLParser.g:5419:4: rule__SQLCASE__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5423:2: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:5423:2: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    // InternalSQLParser.g:5424:3: ( rule__SQLCASE__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:5425:3: ( rule__SQLCASE__ExprAssignment_1_1 )
                    // InternalSQLParser.g:5425:4: rule__SQLCASE__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Alternatives_1"


    // $ANTLR start "rule__SqlCaseWhen__Alternatives_1"
    // InternalSQLParser.g:5433:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );
    public final void rule__SqlCaseWhen__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5437:1: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) )
            int alt60=2;
            alt60 = dfa60.predict(input);
            switch (alt60) {
                case 1 :
                    // InternalSQLParser.g:5438:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:5438:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    // InternalSQLParser.g:5439:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:5440:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    // InternalSQLParser.g:5440:4: rule__SqlCaseWhen__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5444:2: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:5444:2: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    // InternalSQLParser.g:5445:3: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:5446:3: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    // InternalSQLParser.g:5446:4: rule__SqlCaseWhen__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1"
    // InternalSQLParser.g:5454:1: rule__JoinType__Alternatives_1 : ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) );
    public final void rule__JoinType__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5458:1: ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) )
            int alt61=4;
            switch ( input.LA(1) ) {
            case INNER:
                {
                alt61=1;
                }
                break;
            case RIGHT:
            case FULL:
            case LEFT:
                {
                alt61=2;
                }
                break;
            case CROSS:
                {
                alt61=3;
                }
                break;
            case STRAIGHT_JOIN:
                {
                alt61=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }

            switch (alt61) {
                case 1 :
                    // InternalSQLParser.g:5459:2: ( INNER )
                    {
                    // InternalSQLParser.g:5459:2: ( INNER )
                    // InternalSQLParser.g:5460:3: INNER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }
                    match(input,INNER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5465:2: ( ( rule__JoinType__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:5465:2: ( ( rule__JoinType__Group_1_1__0 ) )
                    // InternalSQLParser.g:5466:3: ( rule__JoinType__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:5467:3: ( rule__JoinType__Group_1_1__0 )
                    // InternalSQLParser.g:5467:4: rule__JoinType__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5471:2: ( CROSS )
                    {
                    // InternalSQLParser.g:5471:2: ( CROSS )
                    // InternalSQLParser.g:5472:3: CROSS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }
                    match(input,CROSS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5477:2: ( STRAIGHT_JOIN )
                    {
                    // InternalSQLParser.g:5477:2: ( STRAIGHT_JOIN )
                    // InternalSQLParser.g:5478:3: STRAIGHT_JOIN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }
                    match(input,STRAIGHT_JOIN,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1_1_0"
    // InternalSQLParser.g:5487:1: rule__JoinType__Alternatives_1_1_0 : ( ( LEFT ) | ( RIGHT ) | ( FULL ) );
    public final void rule__JoinType__Alternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5491:1: ( ( LEFT ) | ( RIGHT ) | ( FULL ) )
            int alt62=3;
            switch ( input.LA(1) ) {
            case LEFT:
                {
                alt62=1;
                }
                break;
            case RIGHT:
                {
                alt62=2;
                }
                break;
            case FULL:
                {
                alt62=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }

            switch (alt62) {
                case 1 :
                    // InternalSQLParser.g:5492:2: ( LEFT )
                    {
                    // InternalSQLParser.g:5492:2: ( LEFT )
                    // InternalSQLParser.g:5493:3: LEFT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }
                    match(input,LEFT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5498:2: ( RIGHT )
                    {
                    // InternalSQLParser.g:5498:2: ( RIGHT )
                    // InternalSQLParser.g:5499:3: RIGHT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }
                    match(input,RIGHT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5504:2: ( FULL )
                    {
                    // InternalSQLParser.g:5504:2: ( FULL )
                    // InternalSQLParser.g:5505:3: FULL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }
                    match(input,FULL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1_1_0"


    // $ANTLR start "rule__DBID__Alternatives"
    // InternalSQLParser.g:5514:1: rule__DBID__Alternatives : ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) );
    public final void rule__DBID__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5518:1: ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) )
            int alt63=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt63=1;
                }
                break;
            case RULE_DBNAME:
                {
                alt63=2;
                }
                break;
            case RULE_STRING:
                {
                alt63=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }

            switch (alt63) {
                case 1 :
                    // InternalSQLParser.g:5519:2: ( RULE_ID )
                    {
                    // InternalSQLParser.g:5519:2: ( RULE_ID )
                    // InternalSQLParser.g:5520:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5525:2: ( RULE_DBNAME )
                    {
                    // InternalSQLParser.g:5525:2: ( RULE_DBNAME )
                    // InternalSQLParser.g:5526:3: RULE_DBNAME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }
                    match(input,RULE_DBNAME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5531:2: ( RULE_STRING )
                    {
                    // InternalSQLParser.g:5531:2: ( RULE_STRING )
                    // InternalSQLParser.g:5532:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DBID__Alternatives"


    // $ANTLR start "rule__SignedLiteral__Alternatives"
    // InternalSQLParser.g:5541:1: rule__SignedLiteral__Alternatives : ( ( ruleLiteral ) | ( ( rule__SignedLiteral__Group_1__0 ) ) | ( ( rule__SignedLiteral__Group_2__0 ) ) );
    public final void rule__SignedLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5545:1: ( ( ruleLiteral ) | ( ( rule__SignedLiteral__Group_1__0 ) ) | ( ( rule__SignedLiteral__Group_2__0 ) ) )
            int alt64=3;
            switch ( input.LA(1) ) {
            case TIMESTAMP:
            case FALSE:
            case DATE:
            case NULL:
            case TIME:
            case TRUE:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_STRING_:
                {
                alt64=1;
                }
                break;
            case PlusSign:
                {
                alt64=2;
                }
                break;
            case HyphenMinus:
                {
                alt64=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // InternalSQLParser.g:5546:2: ( ruleLiteral )
                    {
                    // InternalSQLParser.g:5546:2: ( ruleLiteral )
                    // InternalSQLParser.g:5547:3: ruleLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedLiteralAccess().getLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedLiteralAccess().getLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5552:2: ( ( rule__SignedLiteral__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:5552:2: ( ( rule__SignedLiteral__Group_1__0 ) )
                    // InternalSQLParser.g:5553:3: ( rule__SignedLiteral__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedLiteralAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:5554:3: ( rule__SignedLiteral__Group_1__0 )
                    // InternalSQLParser.g:5554:4: rule__SignedLiteral__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SignedLiteral__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedLiteralAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5558:2: ( ( rule__SignedLiteral__Group_2__0 ) )
                    {
                    // InternalSQLParser.g:5558:2: ( ( rule__SignedLiteral__Group_2__0 ) )
                    // InternalSQLParser.g:5559:3: ( rule__SignedLiteral__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedLiteralAccess().getGroup_2()); 
                    }
                    // InternalSQLParser.g:5560:3: ( rule__SignedLiteral__Group_2__0 )
                    // InternalSQLParser.g:5560:4: rule__SignedLiteral__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SignedLiteral__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedLiteralAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalSQLParser.g:5568:1: rule__Literal__Alternatives : ( ( ruleTextLiteral ) | ( ruleNumLiteral ) | ( ruleTemporalLiteral ) | ( NULL ) | ( ruleBoolLiteral ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5572:1: ( ( ruleTextLiteral ) | ( ruleNumLiteral ) | ( ruleTemporalLiteral ) | ( NULL ) | ( ruleBoolLiteral ) )
            int alt65=5;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt65=1;
                }
                break;
            case RULE_UNSIGNED:
            case RULE_INT:
                {
                alt65=2;
                }
                break;
            case TIMESTAMP:
            case DATE:
            case TIME:
                {
                alt65=3;
                }
                break;
            case NULL:
                {
                alt65=4;
                }
                break;
            case FALSE:
            case TRUE:
                {
                alt65=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalSQLParser.g:5573:2: ( ruleTextLiteral )
                    {
                    // InternalSQLParser.g:5573:2: ( ruleTextLiteral )
                    // InternalSQLParser.g:5574:3: ruleTextLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getTextLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTextLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getTextLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5579:2: ( ruleNumLiteral )
                    {
                    // InternalSQLParser.g:5579:2: ( ruleNumLiteral )
                    // InternalSQLParser.g:5580:3: ruleNumLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5585:2: ( ruleTemporalLiteral )
                    {
                    // InternalSQLParser.g:5585:2: ( ruleTemporalLiteral )
                    // InternalSQLParser.g:5586:3: ruleTemporalLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getTemporalLiteralParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTemporalLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getTemporalLiteralParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5591:2: ( NULL )
                    {
                    // InternalSQLParser.g:5591:2: ( NULL )
                    // InternalSQLParser.g:5592:3: NULL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getNULLKeyword_3()); 
                    }
                    match(input,NULL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getNULLKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:5597:2: ( ruleBoolLiteral )
                    {
                    // InternalSQLParser.g:5597:2: ( ruleBoolLiteral )
                    // InternalSQLParser.g:5598:3: ruleBoolLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBoolLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__NumLiteral__Alternatives"
    // InternalSQLParser.g:5607:1: rule__NumLiteral__Alternatives : ( ( RULE_UNSIGNED ) | ( RULE_INT ) );
    public final void rule__NumLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5611:1: ( ( RULE_UNSIGNED ) | ( RULE_INT ) )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_UNSIGNED) ) {
                alt66=1;
            }
            else if ( (LA66_0==RULE_INT) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalSQLParser.g:5612:2: ( RULE_UNSIGNED )
                    {
                    // InternalSQLParser.g:5612:2: ( RULE_UNSIGNED )
                    // InternalSQLParser.g:5613:3: RULE_UNSIGNED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumLiteralAccess().getUNSIGNEDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumLiteralAccess().getUNSIGNEDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5618:2: ( RULE_INT )
                    {
                    // InternalSQLParser.g:5618:2: ( RULE_INT )
                    // InternalSQLParser.g:5619:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumLiteralAccess().getINTTerminalRuleCall_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumLiteralAccess().getINTTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NumLiteral__Alternatives"


    // $ANTLR start "rule__TemporalLiteral__Alternatives"
    // InternalSQLParser.g:5628:1: rule__TemporalLiteral__Alternatives : ( ( ( rule__TemporalLiteral__Group_0__0 ) ) | ( ( rule__TemporalLiteral__Group_1__0 ) ) | ( ( rule__TemporalLiteral__Group_2__0 ) ) );
    public final void rule__TemporalLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5632:1: ( ( ( rule__TemporalLiteral__Group_0__0 ) ) | ( ( rule__TemporalLiteral__Group_1__0 ) ) | ( ( rule__TemporalLiteral__Group_2__0 ) ) )
            int alt67=3;
            switch ( input.LA(1) ) {
            case DATE:
                {
                alt67=1;
                }
                break;
            case TIME:
                {
                alt67=2;
                }
                break;
            case TIMESTAMP:
                {
                alt67=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }

            switch (alt67) {
                case 1 :
                    // InternalSQLParser.g:5633:2: ( ( rule__TemporalLiteral__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:5633:2: ( ( rule__TemporalLiteral__Group_0__0 ) )
                    // InternalSQLParser.g:5634:3: ( rule__TemporalLiteral__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalLiteralAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:5635:3: ( rule__TemporalLiteral__Group_0__0 )
                    // InternalSQLParser.g:5635:4: rule__TemporalLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TemporalLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalLiteralAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5639:2: ( ( rule__TemporalLiteral__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:5639:2: ( ( rule__TemporalLiteral__Group_1__0 ) )
                    // InternalSQLParser.g:5640:3: ( rule__TemporalLiteral__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalLiteralAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:5641:3: ( rule__TemporalLiteral__Group_1__0 )
                    // InternalSQLParser.g:5641:4: rule__TemporalLiteral__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TemporalLiteral__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalLiteralAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5645:2: ( ( rule__TemporalLiteral__Group_2__0 ) )
                    {
                    // InternalSQLParser.g:5645:2: ( ( rule__TemporalLiteral__Group_2__0 ) )
                    // InternalSQLParser.g:5646:3: ( rule__TemporalLiteral__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalLiteralAccess().getGroup_2()); 
                    }
                    // InternalSQLParser.g:5647:3: ( rule__TemporalLiteral__Group_2__0 )
                    // InternalSQLParser.g:5647:4: rule__TemporalLiteral__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TemporalLiteral__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalLiteralAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Alternatives"


    // $ANTLR start "rule__BoolLiteral__Alternatives"
    // InternalSQLParser.g:5655:1: rule__BoolLiteral__Alternatives : ( ( TRUE ) | ( FALSE ) );
    public final void rule__BoolLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5659:1: ( ( TRUE ) | ( FALSE ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==TRUE) ) {
                alt68=1;
            }
            else if ( (LA68_0==FALSE) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalSQLParser.g:5660:2: ( TRUE )
                    {
                    // InternalSQLParser.g:5660:2: ( TRUE )
                    // InternalSQLParser.g:5661:3: TRUE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }
                    match(input,TRUE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5666:2: ( FALSE )
                    {
                    // InternalSQLParser.g:5666:2: ( FALSE )
                    // InternalSQLParser.g:5667:3: FALSE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }
                    match(input,FALSE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolLiteral__Alternatives"


    // $ANTLR start "rule__XFunction__Alternatives"
    // InternalSQLParser.g:5676:1: rule__XFunction__Alternatives : ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) );
    public final void rule__XFunction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5680:1: ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) )
            int alt69=12;
            switch ( input.LA(1) ) {
            case IN_1:
                {
                alt69=1;
                }
                break;
            case NOTIN:
                {
                alt69=2;
                }
                break;
            case EQUAL:
                {
                alt69=3;
                }
                break;
            case NOTEQUAL:
                {
                alt69=4;
                }
                break;
            case LESS:
                {
                alt69=5;
                }
                break;
            case LESS_1:
                {
                alt69=6;
                }
                break;
            case GREATER_1:
                {
                alt69=7;
                }
                break;
            case GREATER:
                {
                alt69=8;
                }
                break;
            case BETWEEN_1:
                {
                alt69=9;
                }
                break;
            case BETWEEN_4:
                {
                alt69=10;
                }
                break;
            case BETWEEN_3:
                {
                alt69=11;
                }
                break;
            case BETWEEN_2:
                {
                alt69=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }

            switch (alt69) {
                case 1 :
                    // InternalSQLParser.g:5681:2: ( ( IN_1 ) )
                    {
                    // InternalSQLParser.g:5681:2: ( ( IN_1 ) )
                    // InternalSQLParser.g:5682:3: ( IN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }
                    // InternalSQLParser.g:5683:3: ( IN_1 )
                    // InternalSQLParser.g:5683:4: IN_1
                    {
                    match(input,IN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5687:2: ( ( NOTIN ) )
                    {
                    // InternalSQLParser.g:5687:2: ( ( NOTIN ) )
                    // InternalSQLParser.g:5688:3: ( NOTIN )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }
                    // InternalSQLParser.g:5689:3: ( NOTIN )
                    // InternalSQLParser.g:5689:4: NOTIN
                    {
                    match(input,NOTIN,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5693:2: ( ( EQUAL ) )
                    {
                    // InternalSQLParser.g:5693:2: ( ( EQUAL ) )
                    // InternalSQLParser.g:5694:3: ( EQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }
                    // InternalSQLParser.g:5695:3: ( EQUAL )
                    // InternalSQLParser.g:5695:4: EQUAL
                    {
                    match(input,EQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5699:2: ( ( NOTEQUAL ) )
                    {
                    // InternalSQLParser.g:5699:2: ( ( NOTEQUAL ) )
                    // InternalSQLParser.g:5700:3: ( NOTEQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }
                    // InternalSQLParser.g:5701:3: ( NOTEQUAL )
                    // InternalSQLParser.g:5701:4: NOTEQUAL
                    {
                    match(input,NOTEQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:5705:2: ( ( LESS ) )
                    {
                    // InternalSQLParser.g:5705:2: ( ( LESS ) )
                    // InternalSQLParser.g:5706:3: ( LESS )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }
                    // InternalSQLParser.g:5707:3: ( LESS )
                    // InternalSQLParser.g:5707:4: LESS
                    {
                    match(input,LESS,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:5711:2: ( ( LESS_1 ) )
                    {
                    // InternalSQLParser.g:5711:2: ( ( LESS_1 ) )
                    // InternalSQLParser.g:5712:3: ( LESS_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }
                    // InternalSQLParser.g:5713:3: ( LESS_1 )
                    // InternalSQLParser.g:5713:4: LESS_1
                    {
                    match(input,LESS_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:5717:2: ( ( GREATER_1 ) )
                    {
                    // InternalSQLParser.g:5717:2: ( ( GREATER_1 ) )
                    // InternalSQLParser.g:5718:3: ( GREATER_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }
                    // InternalSQLParser.g:5719:3: ( GREATER_1 )
                    // InternalSQLParser.g:5719:4: GREATER_1
                    {
                    match(input,GREATER_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:5723:2: ( ( GREATER ) )
                    {
                    // InternalSQLParser.g:5723:2: ( ( GREATER ) )
                    // InternalSQLParser.g:5724:3: ( GREATER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }
                    // InternalSQLParser.g:5725:3: ( GREATER )
                    // InternalSQLParser.g:5725:4: GREATER
                    {
                    match(input,GREATER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:5729:2: ( ( BETWEEN_1 ) )
                    {
                    // InternalSQLParser.g:5729:2: ( ( BETWEEN_1 ) )
                    // InternalSQLParser.g:5730:3: ( BETWEEN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }
                    // InternalSQLParser.g:5731:3: ( BETWEEN_1 )
                    // InternalSQLParser.g:5731:4: BETWEEN_1
                    {
                    match(input,BETWEEN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:5735:2: ( ( BETWEEN_4 ) )
                    {
                    // InternalSQLParser.g:5735:2: ( ( BETWEEN_4 ) )
                    // InternalSQLParser.g:5736:3: ( BETWEEN_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }
                    // InternalSQLParser.g:5737:3: ( BETWEEN_4 )
                    // InternalSQLParser.g:5737:4: BETWEEN_4
                    {
                    match(input,BETWEEN_4,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:5741:2: ( ( BETWEEN_3 ) )
                    {
                    // InternalSQLParser.g:5741:2: ( ( BETWEEN_3 ) )
                    // InternalSQLParser.g:5742:3: ( BETWEEN_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }
                    // InternalSQLParser.g:5743:3: ( BETWEEN_3 )
                    // InternalSQLParser.g:5743:4: BETWEEN_3
                    {
                    match(input,BETWEEN_3,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:5747:2: ( ( BETWEEN_2 ) )
                    {
                    // InternalSQLParser.g:5747:2: ( ( BETWEEN_2 ) )
                    // InternalSQLParser.g:5748:3: ( BETWEEN_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }
                    // InternalSQLParser.g:5749:3: ( BETWEEN_2 )
                    // InternalSQLParser.g:5749:4: BETWEEN_2
                    {
                    match(input,BETWEEN_2,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XFunction__Alternatives"


    // $ANTLR start "rule__EXTRACT_VALUES__Alternatives"
    // InternalSQLParser.g:5757:1: rule__EXTRACT_VALUES__Alternatives : ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) );
    public final void rule__EXTRACT_VALUES__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5761:1: ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) )
            int alt70=20;
            switch ( input.LA(1) ) {
            case MICROSECOND:
                {
                alt70=1;
                }
                break;
            case SECOND:
                {
                alt70=2;
                }
                break;
            case MINUTE:
                {
                alt70=3;
                }
                break;
            case HOUR:
                {
                alt70=4;
                }
                break;
            case DAY:
                {
                alt70=5;
                }
                break;
            case WEEK:
                {
                alt70=6;
                }
                break;
            case MONTH:
                {
                alt70=7;
                }
                break;
            case QUARTER:
                {
                alt70=8;
                }
                break;
            case YEAR:
                {
                alt70=9;
                }
                break;
            case SECOND_MICROSECOND:
                {
                alt70=10;
                }
                break;
            case MINUTE_MICROSECOND:
                {
                alt70=11;
                }
                break;
            case MINUTE_SECOND:
                {
                alt70=12;
                }
                break;
            case HOUR_MICROSECOND:
                {
                alt70=13;
                }
                break;
            case HOUR_SECOND:
                {
                alt70=14;
                }
                break;
            case HOUR_MINUTE:
                {
                alt70=15;
                }
                break;
            case DAY_MICROSECOND:
                {
                alt70=16;
                }
                break;
            case DAY_SECOND:
                {
                alt70=17;
                }
                break;
            case DAY_MINUTE:
                {
                alt70=18;
                }
                break;
            case DAY_HOUR:
                {
                alt70=19;
                }
                break;
            case YEAR_MONTH:
                {
                alt70=20;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalSQLParser.g:5762:2: ( ( MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5762:2: ( ( MICROSECOND ) )
                    // InternalSQLParser.g:5763:3: ( MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }
                    // InternalSQLParser.g:5764:3: ( MICROSECOND )
                    // InternalSQLParser.g:5764:4: MICROSECOND
                    {
                    match(input,MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5768:2: ( ( SECOND ) )
                    {
                    // InternalSQLParser.g:5768:2: ( ( SECOND ) )
                    // InternalSQLParser.g:5769:3: ( SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSQLParser.g:5770:3: ( SECOND )
                    // InternalSQLParser.g:5770:4: SECOND
                    {
                    match(input,SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5774:2: ( ( MINUTE ) )
                    {
                    // InternalSQLParser.g:5774:2: ( ( MINUTE ) )
                    // InternalSQLParser.g:5775:3: ( MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }
                    // InternalSQLParser.g:5776:3: ( MINUTE )
                    // InternalSQLParser.g:5776:4: MINUTE
                    {
                    match(input,MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5780:2: ( ( HOUR ) )
                    {
                    // InternalSQLParser.g:5780:2: ( ( HOUR ) )
                    // InternalSQLParser.g:5781:3: ( HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }
                    // InternalSQLParser.g:5782:3: ( HOUR )
                    // InternalSQLParser.g:5782:4: HOUR
                    {
                    match(input,HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:5786:2: ( ( DAY ) )
                    {
                    // InternalSQLParser.g:5786:2: ( ( DAY ) )
                    // InternalSQLParser.g:5787:3: ( DAY )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }
                    // InternalSQLParser.g:5788:3: ( DAY )
                    // InternalSQLParser.g:5788:4: DAY
                    {
                    match(input,DAY,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:5792:2: ( ( WEEK ) )
                    {
                    // InternalSQLParser.g:5792:2: ( ( WEEK ) )
                    // InternalSQLParser.g:5793:3: ( WEEK )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }
                    // InternalSQLParser.g:5794:3: ( WEEK )
                    // InternalSQLParser.g:5794:4: WEEK
                    {
                    match(input,WEEK,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:5798:2: ( ( MONTH ) )
                    {
                    // InternalSQLParser.g:5798:2: ( ( MONTH ) )
                    // InternalSQLParser.g:5799:3: ( MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }
                    // InternalSQLParser.g:5800:3: ( MONTH )
                    // InternalSQLParser.g:5800:4: MONTH
                    {
                    match(input,MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:5804:2: ( ( QUARTER ) )
                    {
                    // InternalSQLParser.g:5804:2: ( ( QUARTER ) )
                    // InternalSQLParser.g:5805:3: ( QUARTER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }
                    // InternalSQLParser.g:5806:3: ( QUARTER )
                    // InternalSQLParser.g:5806:4: QUARTER
                    {
                    match(input,QUARTER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:5810:2: ( ( YEAR ) )
                    {
                    // InternalSQLParser.g:5810:2: ( ( YEAR ) )
                    // InternalSQLParser.g:5811:3: ( YEAR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }
                    // InternalSQLParser.g:5812:3: ( YEAR )
                    // InternalSQLParser.g:5812:4: YEAR
                    {
                    match(input,YEAR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:5816:2: ( ( SECOND_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5816:2: ( ( SECOND_MICROSECOND ) )
                    // InternalSQLParser.g:5817:3: ( SECOND_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }
                    // InternalSQLParser.g:5818:3: ( SECOND_MICROSECOND )
                    // InternalSQLParser.g:5818:4: SECOND_MICROSECOND
                    {
                    match(input,SECOND_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:5822:2: ( ( MINUTE_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5822:2: ( ( MINUTE_MICROSECOND ) )
                    // InternalSQLParser.g:5823:3: ( MINUTE_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }
                    // InternalSQLParser.g:5824:3: ( MINUTE_MICROSECOND )
                    // InternalSQLParser.g:5824:4: MINUTE_MICROSECOND
                    {
                    match(input,MINUTE_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:5828:2: ( ( MINUTE_SECOND ) )
                    {
                    // InternalSQLParser.g:5828:2: ( ( MINUTE_SECOND ) )
                    // InternalSQLParser.g:5829:3: ( MINUTE_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }
                    // InternalSQLParser.g:5830:3: ( MINUTE_SECOND )
                    // InternalSQLParser.g:5830:4: MINUTE_SECOND
                    {
                    match(input,MINUTE_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSQLParser.g:5834:2: ( ( HOUR_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5834:2: ( ( HOUR_MICROSECOND ) )
                    // InternalSQLParser.g:5835:3: ( HOUR_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }
                    // InternalSQLParser.g:5836:3: ( HOUR_MICROSECOND )
                    // InternalSQLParser.g:5836:4: HOUR_MICROSECOND
                    {
                    match(input,HOUR_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSQLParser.g:5840:2: ( ( HOUR_SECOND ) )
                    {
                    // InternalSQLParser.g:5840:2: ( ( HOUR_SECOND ) )
                    // InternalSQLParser.g:5841:3: ( HOUR_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }
                    // InternalSQLParser.g:5842:3: ( HOUR_SECOND )
                    // InternalSQLParser.g:5842:4: HOUR_SECOND
                    {
                    match(input,HOUR_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSQLParser.g:5846:2: ( ( HOUR_MINUTE ) )
                    {
                    // InternalSQLParser.g:5846:2: ( ( HOUR_MINUTE ) )
                    // InternalSQLParser.g:5847:3: ( HOUR_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }
                    // InternalSQLParser.g:5848:3: ( HOUR_MINUTE )
                    // InternalSQLParser.g:5848:4: HOUR_MINUTE
                    {
                    match(input,HOUR_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalSQLParser.g:5852:2: ( ( DAY_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5852:2: ( ( DAY_MICROSECOND ) )
                    // InternalSQLParser.g:5853:3: ( DAY_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }
                    // InternalSQLParser.g:5854:3: ( DAY_MICROSECOND )
                    // InternalSQLParser.g:5854:4: DAY_MICROSECOND
                    {
                    match(input,DAY_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalSQLParser.g:5858:2: ( ( DAY_SECOND ) )
                    {
                    // InternalSQLParser.g:5858:2: ( ( DAY_SECOND ) )
                    // InternalSQLParser.g:5859:3: ( DAY_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }
                    // InternalSQLParser.g:5860:3: ( DAY_SECOND )
                    // InternalSQLParser.g:5860:4: DAY_SECOND
                    {
                    match(input,DAY_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalSQLParser.g:5864:2: ( ( DAY_MINUTE ) )
                    {
                    // InternalSQLParser.g:5864:2: ( ( DAY_MINUTE ) )
                    // InternalSQLParser.g:5865:3: ( DAY_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }
                    // InternalSQLParser.g:5866:3: ( DAY_MINUTE )
                    // InternalSQLParser.g:5866:4: DAY_MINUTE
                    {
                    match(input,DAY_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalSQLParser.g:5870:2: ( ( DAY_HOUR ) )
                    {
                    // InternalSQLParser.g:5870:2: ( ( DAY_HOUR ) )
                    // InternalSQLParser.g:5871:3: ( DAY_HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }
                    // InternalSQLParser.g:5872:3: ( DAY_HOUR )
                    // InternalSQLParser.g:5872:4: DAY_HOUR
                    {
                    match(input,DAY_HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalSQLParser.g:5876:2: ( ( YEAR_MONTH ) )
                    {
                    // InternalSQLParser.g:5876:2: ( ( YEAR_MONTH ) )
                    // InternalSQLParser.g:5877:3: ( YEAR_MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }
                    // InternalSQLParser.g:5878:3: ( YEAR_MONTH )
                    // InternalSQLParser.g:5878:4: YEAR_MONTH
                    {
                    match(input,YEAR_MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EXTRACT_VALUES__Alternatives"


    // $ANTLR start "rule__SelectStatement__Group__0"
    // InternalSQLParser.g:5886:1: rule__SelectStatement__Group__0 : rule__SelectStatement__Group__0__Impl rule__SelectStatement__Group__1 ;
    public final void rule__SelectStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5890:1: ( rule__SelectStatement__Group__0__Impl rule__SelectStatement__Group__1 )
            // InternalSQLParser.g:5891:2: rule__SelectStatement__Group__0__Impl rule__SelectStatement__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__SelectStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__0"


    // $ANTLR start "rule__SelectStatement__Group__0__Impl"
    // InternalSQLParser.g:5898:1: rule__SelectStatement__Group__0__Impl : ( ( RULE_JRNPARAM )? ) ;
    public final void rule__SelectStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5902:1: ( ( ( RULE_JRNPARAM )? ) )
            // InternalSQLParser.g:5903:1: ( ( RULE_JRNPARAM )? )
            {
            // InternalSQLParser.g:5903:1: ( ( RULE_JRNPARAM )? )
            // InternalSQLParser.g:5904:2: ( RULE_JRNPARAM )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getJRNPARAMTerminalRuleCall_0()); 
            }
            // InternalSQLParser.g:5905:2: ( RULE_JRNPARAM )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==RULE_JRNPARAM) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSQLParser.g:5905:3: RULE_JRNPARAM
                    {
                    match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__0__Impl"


    // $ANTLR start "rule__SelectStatement__Group__1"
    // InternalSQLParser.g:5913:1: rule__SelectStatement__Group__1 : rule__SelectStatement__Group__1__Impl rule__SelectStatement__Group__2 ;
    public final void rule__SelectStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5917:1: ( rule__SelectStatement__Group__1__Impl rule__SelectStatement__Group__2 )
            // InternalSQLParser.g:5918:2: rule__SelectStatement__Group__1__Impl rule__SelectStatement__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__SelectStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__1"


    // $ANTLR start "rule__SelectStatement__Group__1__Impl"
    // InternalSQLParser.g:5925:1: rule__SelectStatement__Group__1__Impl : ( ( rule__SelectStatement__WqAssignment_1 )? ) ;
    public final void rule__SelectStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5929:1: ( ( ( rule__SelectStatement__WqAssignment_1 )? ) )
            // InternalSQLParser.g:5930:1: ( ( rule__SelectStatement__WqAssignment_1 )? )
            {
            // InternalSQLParser.g:5930:1: ( ( rule__SelectStatement__WqAssignment_1 )? )
            // InternalSQLParser.g:5931:2: ( rule__SelectStatement__WqAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getWqAssignment_1()); 
            }
            // InternalSQLParser.g:5932:2: ( rule__SelectStatement__WqAssignment_1 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==WITH) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSQLParser.g:5932:3: rule__SelectStatement__WqAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SelectStatement__WqAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getWqAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__1__Impl"


    // $ANTLR start "rule__SelectStatement__Group__2"
    // InternalSQLParser.g:5940:1: rule__SelectStatement__Group__2 : rule__SelectStatement__Group__2__Impl ;
    public final void rule__SelectStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5944:1: ( rule__SelectStatement__Group__2__Impl )
            // InternalSQLParser.g:5945:2: rule__SelectStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__2"


    // $ANTLR start "rule__SelectStatement__Group__2__Impl"
    // InternalSQLParser.g:5951:1: rule__SelectStatement__Group__2__Impl : ( ( rule__SelectStatement__QueryAssignment_2 ) ) ;
    public final void rule__SelectStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5955:1: ( ( ( rule__SelectStatement__QueryAssignment_2 ) ) )
            // InternalSQLParser.g:5956:1: ( ( rule__SelectStatement__QueryAssignment_2 ) )
            {
            // InternalSQLParser.g:5956:1: ( ( rule__SelectStatement__QueryAssignment_2 ) )
            // InternalSQLParser.g:5957:2: ( rule__SelectStatement__QueryAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getQueryAssignment_2()); 
            }
            // InternalSQLParser.g:5958:2: ( rule__SelectStatement__QueryAssignment_2 )
            // InternalSQLParser.g:5958:3: rule__SelectStatement__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SelectStatement__QueryAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getQueryAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__2__Impl"


    // $ANTLR start "rule__InsertStatement__Group__0"
    // InternalSQLParser.g:5967:1: rule__InsertStatement__Group__0 : rule__InsertStatement__Group__0__Impl rule__InsertStatement__Group__1 ;
    public final void rule__InsertStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5971:1: ( rule__InsertStatement__Group__0__Impl rule__InsertStatement__Group__1 )
            // InternalSQLParser.g:5972:2: rule__InsertStatement__Group__0__Impl rule__InsertStatement__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__InsertStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__0"


    // $ANTLR start "rule__InsertStatement__Group__0__Impl"
    // InternalSQLParser.g:5979:1: rule__InsertStatement__Group__0__Impl : ( INSERT ) ;
    public final void rule__InsertStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5983:1: ( ( INSERT ) )
            // InternalSQLParser.g:5984:1: ( INSERT )
            {
            // InternalSQLParser.g:5984:1: ( INSERT )
            // InternalSQLParser.g:5985:2: INSERT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getINSERTKeyword_0()); 
            }
            match(input,INSERT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getINSERTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__0__Impl"


    // $ANTLR start "rule__InsertStatement__Group__1"
    // InternalSQLParser.g:5994:1: rule__InsertStatement__Group__1 : rule__InsertStatement__Group__1__Impl rule__InsertStatement__Group__2 ;
    public final void rule__InsertStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5998:1: ( rule__InsertStatement__Group__1__Impl rule__InsertStatement__Group__2 )
            // InternalSQLParser.g:5999:2: rule__InsertStatement__Group__1__Impl rule__InsertStatement__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__InsertStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__1"


    // $ANTLR start "rule__InsertStatement__Group__1__Impl"
    // InternalSQLParser.g:6006:1: rule__InsertStatement__Group__1__Impl : ( INTO ) ;
    public final void rule__InsertStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6010:1: ( ( INTO ) )
            // InternalSQLParser.g:6011:1: ( INTO )
            {
            // InternalSQLParser.g:6011:1: ( INTO )
            // InternalSQLParser.g:6012:2: INTO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getINTOKeyword_1()); 
            }
            match(input,INTO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getINTOKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__1__Impl"


    // $ANTLR start "rule__InsertStatement__Group__2"
    // InternalSQLParser.g:6021:1: rule__InsertStatement__Group__2 : rule__InsertStatement__Group__2__Impl rule__InsertStatement__Group__3 ;
    public final void rule__InsertStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6025:1: ( rule__InsertStatement__Group__2__Impl rule__InsertStatement__Group__3 )
            // InternalSQLParser.g:6026:2: rule__InsertStatement__Group__2__Impl rule__InsertStatement__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__InsertStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__2"


    // $ANTLR start "rule__InsertStatement__Group__2__Impl"
    // InternalSQLParser.g:6033:1: rule__InsertStatement__Group__2__Impl : ( ruleTableOrAlias ) ;
    public final void rule__InsertStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6037:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:6038:1: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:6038:1: ( ruleTableOrAlias )
            // InternalSQLParser.g:6039:2: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getTableOrAliasParserRuleCall_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getTableOrAliasParserRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__2__Impl"


    // $ANTLR start "rule__InsertStatement__Group__3"
    // InternalSQLParser.g:6048:1: rule__InsertStatement__Group__3 : rule__InsertStatement__Group__3__Impl rule__InsertStatement__Group__4 ;
    public final void rule__InsertStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6052:1: ( rule__InsertStatement__Group__3__Impl rule__InsertStatement__Group__4 )
            // InternalSQLParser.g:6053:2: rule__InsertStatement__Group__3__Impl rule__InsertStatement__Group__4
            {
            pushFollow(FOLLOW_8);
            rule__InsertStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__3"


    // $ANTLR start "rule__InsertStatement__Group__3__Impl"
    // InternalSQLParser.g:6060:1: rule__InsertStatement__Group__3__Impl : ( ( rule__InsertStatement__Alternatives_3 ) ) ;
    public final void rule__InsertStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6064:1: ( ( ( rule__InsertStatement__Alternatives_3 ) ) )
            // InternalSQLParser.g:6065:1: ( ( rule__InsertStatement__Alternatives_3 ) )
            {
            // InternalSQLParser.g:6065:1: ( ( rule__InsertStatement__Alternatives_3 ) )
            // InternalSQLParser.g:6066:2: ( rule__InsertStatement__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getAlternatives_3()); 
            }
            // InternalSQLParser.g:6067:2: ( rule__InsertStatement__Alternatives_3 )
            // InternalSQLParser.g:6067:3: rule__InsertStatement__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__3__Impl"


    // $ANTLR start "rule__InsertStatement__Group__4"
    // InternalSQLParser.g:6075:1: rule__InsertStatement__Group__4 : rule__InsertStatement__Group__4__Impl ;
    public final void rule__InsertStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6079:1: ( rule__InsertStatement__Group__4__Impl )
            // InternalSQLParser.g:6080:2: rule__InsertStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__4"


    // $ANTLR start "rule__InsertStatement__Group__4__Impl"
    // InternalSQLParser.g:6086:1: rule__InsertStatement__Group__4__Impl : ( Semicolon ) ;
    public final void rule__InsertStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6090:1: ( ( Semicolon ) )
            // InternalSQLParser.g:6091:1: ( Semicolon )
            {
            // InternalSQLParser.g:6091:1: ( Semicolon )
            // InternalSQLParser.g:6092:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getSemicolonKeyword_4()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getSemicolonKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__4__Impl"


    // $ANTLR start "rule__InsertFromConstructor__Group__0"
    // InternalSQLParser.g:6102:1: rule__InsertFromConstructor__Group__0 : rule__InsertFromConstructor__Group__0__Impl rule__InsertFromConstructor__Group__1 ;
    public final void rule__InsertFromConstructor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6106:1: ( rule__InsertFromConstructor__Group__0__Impl rule__InsertFromConstructor__Group__1 )
            // InternalSQLParser.g:6107:2: rule__InsertFromConstructor__Group__0__Impl rule__InsertFromConstructor__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__InsertFromConstructor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertFromConstructor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__0"


    // $ANTLR start "rule__InsertFromConstructor__Group__0__Impl"
    // InternalSQLParser.g:6114:1: rule__InsertFromConstructor__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__InsertFromConstructor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6118:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6119:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6119:1: ( LeftParenthesis )
            // InternalSQLParser.g:6120:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertFromConstructorAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertFromConstructorAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__0__Impl"


    // $ANTLR start "rule__InsertFromConstructor__Group__1"
    // InternalSQLParser.g:6129:1: rule__InsertFromConstructor__Group__1 : rule__InsertFromConstructor__Group__1__Impl rule__InsertFromConstructor__Group__2 ;
    public final void rule__InsertFromConstructor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6133:1: ( rule__InsertFromConstructor__Group__1__Impl rule__InsertFromConstructor__Group__2 )
            // InternalSQLParser.g:6134:2: rule__InsertFromConstructor__Group__1__Impl rule__InsertFromConstructor__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__InsertFromConstructor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertFromConstructor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__1"


    // $ANTLR start "rule__InsertFromConstructor__Group__1__Impl"
    // InternalSQLParser.g:6141:1: rule__InsertFromConstructor__Group__1__Impl : ( ( rule__InsertFromConstructor__FieldsAssignment_1 ) ) ;
    public final void rule__InsertFromConstructor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6145:1: ( ( ( rule__InsertFromConstructor__FieldsAssignment_1 ) ) )
            // InternalSQLParser.g:6146:1: ( ( rule__InsertFromConstructor__FieldsAssignment_1 ) )
            {
            // InternalSQLParser.g:6146:1: ( ( rule__InsertFromConstructor__FieldsAssignment_1 ) )
            // InternalSQLParser.g:6147:2: ( rule__InsertFromConstructor__FieldsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertFromConstructorAccess().getFieldsAssignment_1()); 
            }
            // InternalSQLParser.g:6148:2: ( rule__InsertFromConstructor__FieldsAssignment_1 )
            // InternalSQLParser.g:6148:3: rule__InsertFromConstructor__FieldsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InsertFromConstructor__FieldsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertFromConstructorAccess().getFieldsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__1__Impl"


    // $ANTLR start "rule__InsertFromConstructor__Group__2"
    // InternalSQLParser.g:6156:1: rule__InsertFromConstructor__Group__2 : rule__InsertFromConstructor__Group__2__Impl rule__InsertFromConstructor__Group__3 ;
    public final void rule__InsertFromConstructor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6160:1: ( rule__InsertFromConstructor__Group__2__Impl rule__InsertFromConstructor__Group__3 )
            // InternalSQLParser.g:6161:2: rule__InsertFromConstructor__Group__2__Impl rule__InsertFromConstructor__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__InsertFromConstructor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertFromConstructor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__2"


    // $ANTLR start "rule__InsertFromConstructor__Group__2__Impl"
    // InternalSQLParser.g:6168:1: rule__InsertFromConstructor__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__InsertFromConstructor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6172:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6173:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6173:1: ( RightParenthesis )
            // InternalSQLParser.g:6174:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertFromConstructorAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertFromConstructorAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__2__Impl"


    // $ANTLR start "rule__InsertFromConstructor__Group__3"
    // InternalSQLParser.g:6183:1: rule__InsertFromConstructor__Group__3 : rule__InsertFromConstructor__Group__3__Impl rule__InsertFromConstructor__Group__4 ;
    public final void rule__InsertFromConstructor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6187:1: ( rule__InsertFromConstructor__Group__3__Impl rule__InsertFromConstructor__Group__4 )
            // InternalSQLParser.g:6188:2: rule__InsertFromConstructor__Group__3__Impl rule__InsertFromConstructor__Group__4
            {
            pushFollow(FOLLOW_12);
            rule__InsertFromConstructor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertFromConstructor__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__3"


    // $ANTLR start "rule__InsertFromConstructor__Group__3__Impl"
    // InternalSQLParser.g:6195:1: rule__InsertFromConstructor__Group__3__Impl : ( VALUES ) ;
    public final void rule__InsertFromConstructor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6199:1: ( ( VALUES ) )
            // InternalSQLParser.g:6200:1: ( VALUES )
            {
            // InternalSQLParser.g:6200:1: ( VALUES )
            // InternalSQLParser.g:6201:2: VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertFromConstructorAccess().getVALUESKeyword_3()); 
            }
            match(input,VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertFromConstructorAccess().getVALUESKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__3__Impl"


    // $ANTLR start "rule__InsertFromConstructor__Group__4"
    // InternalSQLParser.g:6210:1: rule__InsertFromConstructor__Group__4 : rule__InsertFromConstructor__Group__4__Impl ;
    public final void rule__InsertFromConstructor__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6214:1: ( rule__InsertFromConstructor__Group__4__Impl )
            // InternalSQLParser.g:6215:2: rule__InsertFromConstructor__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InsertFromConstructor__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__4"


    // $ANTLR start "rule__InsertFromConstructor__Group__4__Impl"
    // InternalSQLParser.g:6221:1: rule__InsertFromConstructor__Group__4__Impl : ( ( rule__InsertFromConstructor__InsertValueListAssignment_4 ) ) ;
    public final void rule__InsertFromConstructor__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6225:1: ( ( ( rule__InsertFromConstructor__InsertValueListAssignment_4 ) ) )
            // InternalSQLParser.g:6226:1: ( ( rule__InsertFromConstructor__InsertValueListAssignment_4 ) )
            {
            // InternalSQLParser.g:6226:1: ( ( rule__InsertFromConstructor__InsertValueListAssignment_4 ) )
            // InternalSQLParser.g:6227:2: ( rule__InsertFromConstructor__InsertValueListAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertFromConstructorAccess().getInsertValueListAssignment_4()); 
            }
            // InternalSQLParser.g:6228:2: ( rule__InsertFromConstructor__InsertValueListAssignment_4 )
            // InternalSQLParser.g:6228:3: rule__InsertFromConstructor__InsertValueListAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__InsertFromConstructor__InsertValueListAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertFromConstructorAccess().getInsertValueListAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__Group__4__Impl"


    // $ANTLR start "rule__Fields__Group__0"
    // InternalSQLParser.g:6237:1: rule__Fields__Group__0 : rule__Fields__Group__0__Impl rule__Fields__Group__1 ;
    public final void rule__Fields__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6241:1: ( rule__Fields__Group__0__Impl rule__Fields__Group__1 )
            // InternalSQLParser.g:6242:2: rule__Fields__Group__0__Impl rule__Fields__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Fields__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Fields__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__Group__0"


    // $ANTLR start "rule__Fields__Group__0__Impl"
    // InternalSQLParser.g:6249:1: rule__Fields__Group__0__Impl : ( ( rule__Fields__IdsAssignment_0 ) ) ;
    public final void rule__Fields__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6253:1: ( ( ( rule__Fields__IdsAssignment_0 ) ) )
            // InternalSQLParser.g:6254:1: ( ( rule__Fields__IdsAssignment_0 ) )
            {
            // InternalSQLParser.g:6254:1: ( ( rule__Fields__IdsAssignment_0 ) )
            // InternalSQLParser.g:6255:2: ( rule__Fields__IdsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldsAccess().getIdsAssignment_0()); 
            }
            // InternalSQLParser.g:6256:2: ( rule__Fields__IdsAssignment_0 )
            // InternalSQLParser.g:6256:3: rule__Fields__IdsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Fields__IdsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldsAccess().getIdsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__Group__0__Impl"


    // $ANTLR start "rule__Fields__Group__1"
    // InternalSQLParser.g:6264:1: rule__Fields__Group__1 : rule__Fields__Group__1__Impl ;
    public final void rule__Fields__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6268:1: ( rule__Fields__Group__1__Impl )
            // InternalSQLParser.g:6269:2: rule__Fields__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Fields__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__Group__1"


    // $ANTLR start "rule__Fields__Group__1__Impl"
    // InternalSQLParser.g:6275:1: rule__Fields__Group__1__Impl : ( ( rule__Fields__Group_1__0 )* ) ;
    public final void rule__Fields__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6279:1: ( ( ( rule__Fields__Group_1__0 )* ) )
            // InternalSQLParser.g:6280:1: ( ( rule__Fields__Group_1__0 )* )
            {
            // InternalSQLParser.g:6280:1: ( ( rule__Fields__Group_1__0 )* )
            // InternalSQLParser.g:6281:2: ( rule__Fields__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:6282:2: ( rule__Fields__Group_1__0 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==Comma) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalSQLParser.g:6282:3: rule__Fields__Group_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Fields__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__Group__1__Impl"


    // $ANTLR start "rule__Fields__Group_1__0"
    // InternalSQLParser.g:6291:1: rule__Fields__Group_1__0 : rule__Fields__Group_1__0__Impl rule__Fields__Group_1__1 ;
    public final void rule__Fields__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6295:1: ( rule__Fields__Group_1__0__Impl rule__Fields__Group_1__1 )
            // InternalSQLParser.g:6296:2: rule__Fields__Group_1__0__Impl rule__Fields__Group_1__1
            {
            pushFollow(FOLLOW_9);
            rule__Fields__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Fields__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__Group_1__0"


    // $ANTLR start "rule__Fields__Group_1__0__Impl"
    // InternalSQLParser.g:6303:1: rule__Fields__Group_1__0__Impl : ( Comma ) ;
    public final void rule__Fields__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6307:1: ( ( Comma ) )
            // InternalSQLParser.g:6308:1: ( Comma )
            {
            // InternalSQLParser.g:6308:1: ( Comma )
            // InternalSQLParser.g:6309:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldsAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldsAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__Group_1__0__Impl"


    // $ANTLR start "rule__Fields__Group_1__1"
    // InternalSQLParser.g:6318:1: rule__Fields__Group_1__1 : rule__Fields__Group_1__1__Impl ;
    public final void rule__Fields__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6322:1: ( rule__Fields__Group_1__1__Impl )
            // InternalSQLParser.g:6323:2: rule__Fields__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Fields__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__Group_1__1"


    // $ANTLR start "rule__Fields__Group_1__1__Impl"
    // InternalSQLParser.g:6329:1: rule__Fields__Group_1__1__Impl : ( ( rule__Fields__IdsAssignment_1_1 ) ) ;
    public final void rule__Fields__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6333:1: ( ( ( rule__Fields__IdsAssignment_1_1 ) ) )
            // InternalSQLParser.g:6334:1: ( ( rule__Fields__IdsAssignment_1_1 ) )
            {
            // InternalSQLParser.g:6334:1: ( ( rule__Fields__IdsAssignment_1_1 ) )
            // InternalSQLParser.g:6335:2: ( rule__Fields__IdsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldsAccess().getIdsAssignment_1_1()); 
            }
            // InternalSQLParser.g:6336:2: ( rule__Fields__IdsAssignment_1_1 )
            // InternalSQLParser.g:6336:3: rule__Fields__IdsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Fields__IdsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldsAccess().getIdsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__Group_1__1__Impl"


    // $ANTLR start "rule__InsertValueList__Group__0"
    // InternalSQLParser.g:6345:1: rule__InsertValueList__Group__0 : rule__InsertValueList__Group__0__Impl rule__InsertValueList__Group__1 ;
    public final void rule__InsertValueList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6349:1: ( rule__InsertValueList__Group__0__Impl rule__InsertValueList__Group__1 )
            // InternalSQLParser.g:6350:2: rule__InsertValueList__Group__0__Impl rule__InsertValueList__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__InsertValueList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertValueList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group__0"


    // $ANTLR start "rule__InsertValueList__Group__0__Impl"
    // InternalSQLParser.g:6357:1: rule__InsertValueList__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__InsertValueList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6361:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6362:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6362:1: ( LeftParenthesis )
            // InternalSQLParser.g:6363:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group__0__Impl"


    // $ANTLR start "rule__InsertValueList__Group__1"
    // InternalSQLParser.g:6372:1: rule__InsertValueList__Group__1 : rule__InsertValueList__Group__1__Impl rule__InsertValueList__Group__2 ;
    public final void rule__InsertValueList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6376:1: ( rule__InsertValueList__Group__1__Impl rule__InsertValueList__Group__2 )
            // InternalSQLParser.g:6377:2: rule__InsertValueList__Group__1__Impl rule__InsertValueList__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__InsertValueList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertValueList__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group__1"


    // $ANTLR start "rule__InsertValueList__Group__1__Impl"
    // InternalSQLParser.g:6384:1: rule__InsertValueList__Group__1__Impl : ( ( rule__InsertValueList__ValsAssignment_1 ) ) ;
    public final void rule__InsertValueList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6388:1: ( ( ( rule__InsertValueList__ValsAssignment_1 ) ) )
            // InternalSQLParser.g:6389:1: ( ( rule__InsertValueList__ValsAssignment_1 ) )
            {
            // InternalSQLParser.g:6389:1: ( ( rule__InsertValueList__ValsAssignment_1 ) )
            // InternalSQLParser.g:6390:2: ( rule__InsertValueList__ValsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getValsAssignment_1()); 
            }
            // InternalSQLParser.g:6391:2: ( rule__InsertValueList__ValsAssignment_1 )
            // InternalSQLParser.g:6391:3: rule__InsertValueList__ValsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InsertValueList__ValsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getValsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group__1__Impl"


    // $ANTLR start "rule__InsertValueList__Group__2"
    // InternalSQLParser.g:6399:1: rule__InsertValueList__Group__2 : rule__InsertValueList__Group__2__Impl rule__InsertValueList__Group__3 ;
    public final void rule__InsertValueList__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6403:1: ( rule__InsertValueList__Group__2__Impl rule__InsertValueList__Group__3 )
            // InternalSQLParser.g:6404:2: rule__InsertValueList__Group__2__Impl rule__InsertValueList__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__InsertValueList__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertValueList__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group__2"


    // $ANTLR start "rule__InsertValueList__Group__2__Impl"
    // InternalSQLParser.g:6411:1: rule__InsertValueList__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__InsertValueList__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6415:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6416:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6416:1: ( RightParenthesis )
            // InternalSQLParser.g:6417:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group__2__Impl"


    // $ANTLR start "rule__InsertValueList__Group__3"
    // InternalSQLParser.g:6426:1: rule__InsertValueList__Group__3 : rule__InsertValueList__Group__3__Impl ;
    public final void rule__InsertValueList__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6430:1: ( rule__InsertValueList__Group__3__Impl )
            // InternalSQLParser.g:6431:2: rule__InsertValueList__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InsertValueList__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group__3"


    // $ANTLR start "rule__InsertValueList__Group__3__Impl"
    // InternalSQLParser.g:6437:1: rule__InsertValueList__Group__3__Impl : ( ( rule__InsertValueList__Group_3__0 )* ) ;
    public final void rule__InsertValueList__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6441:1: ( ( ( rule__InsertValueList__Group_3__0 )* ) )
            // InternalSQLParser.g:6442:1: ( ( rule__InsertValueList__Group_3__0 )* )
            {
            // InternalSQLParser.g:6442:1: ( ( rule__InsertValueList__Group_3__0 )* )
            // InternalSQLParser.g:6443:2: ( rule__InsertValueList__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getGroup_3()); 
            }
            // InternalSQLParser.g:6444:2: ( rule__InsertValueList__Group_3__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==Comma) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSQLParser.g:6444:3: rule__InsertValueList__Group_3__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__InsertValueList__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group__3__Impl"


    // $ANTLR start "rule__InsertValueList__Group_3__0"
    // InternalSQLParser.g:6453:1: rule__InsertValueList__Group_3__0 : rule__InsertValueList__Group_3__0__Impl rule__InsertValueList__Group_3__1 ;
    public final void rule__InsertValueList__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6457:1: ( rule__InsertValueList__Group_3__0__Impl rule__InsertValueList__Group_3__1 )
            // InternalSQLParser.g:6458:2: rule__InsertValueList__Group_3__0__Impl rule__InsertValueList__Group_3__1
            {
            pushFollow(FOLLOW_12);
            rule__InsertValueList__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertValueList__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group_3__0"


    // $ANTLR start "rule__InsertValueList__Group_3__0__Impl"
    // InternalSQLParser.g:6465:1: rule__InsertValueList__Group_3__0__Impl : ( Comma ) ;
    public final void rule__InsertValueList__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6469:1: ( ( Comma ) )
            // InternalSQLParser.g:6470:1: ( Comma )
            {
            // InternalSQLParser.g:6470:1: ( Comma )
            // InternalSQLParser.g:6471:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getCommaKeyword_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group_3__0__Impl"


    // $ANTLR start "rule__InsertValueList__Group_3__1"
    // InternalSQLParser.g:6480:1: rule__InsertValueList__Group_3__1 : rule__InsertValueList__Group_3__1__Impl rule__InsertValueList__Group_3__2 ;
    public final void rule__InsertValueList__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6484:1: ( rule__InsertValueList__Group_3__1__Impl rule__InsertValueList__Group_3__2 )
            // InternalSQLParser.g:6485:2: rule__InsertValueList__Group_3__1__Impl rule__InsertValueList__Group_3__2
            {
            pushFollow(FOLLOW_15);
            rule__InsertValueList__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertValueList__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group_3__1"


    // $ANTLR start "rule__InsertValueList__Group_3__1__Impl"
    // InternalSQLParser.g:6492:1: rule__InsertValueList__Group_3__1__Impl : ( LeftParenthesis ) ;
    public final void rule__InsertValueList__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6496:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6497:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6497:1: ( LeftParenthesis )
            // InternalSQLParser.g:6498:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getLeftParenthesisKeyword_3_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getLeftParenthesisKeyword_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group_3__1__Impl"


    // $ANTLR start "rule__InsertValueList__Group_3__2"
    // InternalSQLParser.g:6507:1: rule__InsertValueList__Group_3__2 : rule__InsertValueList__Group_3__2__Impl rule__InsertValueList__Group_3__3 ;
    public final void rule__InsertValueList__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6511:1: ( rule__InsertValueList__Group_3__2__Impl rule__InsertValueList__Group_3__3 )
            // InternalSQLParser.g:6512:2: rule__InsertValueList__Group_3__2__Impl rule__InsertValueList__Group_3__3
            {
            pushFollow(FOLLOW_10);
            rule__InsertValueList__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertValueList__Group_3__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group_3__2"


    // $ANTLR start "rule__InsertValueList__Group_3__2__Impl"
    // InternalSQLParser.g:6519:1: rule__InsertValueList__Group_3__2__Impl : ( ( rule__InsertValueList__ValsAssignment_3_2 ) ) ;
    public final void rule__InsertValueList__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6523:1: ( ( ( rule__InsertValueList__ValsAssignment_3_2 ) ) )
            // InternalSQLParser.g:6524:1: ( ( rule__InsertValueList__ValsAssignment_3_2 ) )
            {
            // InternalSQLParser.g:6524:1: ( ( rule__InsertValueList__ValsAssignment_3_2 ) )
            // InternalSQLParser.g:6525:2: ( rule__InsertValueList__ValsAssignment_3_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getValsAssignment_3_2()); 
            }
            // InternalSQLParser.g:6526:2: ( rule__InsertValueList__ValsAssignment_3_2 )
            // InternalSQLParser.g:6526:3: rule__InsertValueList__ValsAssignment_3_2
            {
            pushFollow(FOLLOW_2);
            rule__InsertValueList__ValsAssignment_3_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getValsAssignment_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group_3__2__Impl"


    // $ANTLR start "rule__InsertValueList__Group_3__3"
    // InternalSQLParser.g:6534:1: rule__InsertValueList__Group_3__3 : rule__InsertValueList__Group_3__3__Impl ;
    public final void rule__InsertValueList__Group_3__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6538:1: ( rule__InsertValueList__Group_3__3__Impl )
            // InternalSQLParser.g:6539:2: rule__InsertValueList__Group_3__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InsertValueList__Group_3__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group_3__3"


    // $ANTLR start "rule__InsertValueList__Group_3__3__Impl"
    // InternalSQLParser.g:6545:1: rule__InsertValueList__Group_3__3__Impl : ( RightParenthesis ) ;
    public final void rule__InsertValueList__Group_3__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6549:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6550:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6550:1: ( RightParenthesis )
            // InternalSQLParser.g:6551:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getRightParenthesisKeyword_3_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getRightParenthesisKeyword_3_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__Group_3__3__Impl"


    // $ANTLR start "rule__InsertValues__Group__0"
    // InternalSQLParser.g:6561:1: rule__InsertValues__Group__0 : rule__InsertValues__Group__0__Impl rule__InsertValues__Group__1 ;
    public final void rule__InsertValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6565:1: ( rule__InsertValues__Group__0__Impl rule__InsertValues__Group__1 )
            // InternalSQLParser.g:6566:2: rule__InsertValues__Group__0__Impl rule__InsertValues__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__InsertValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValues__Group__0"


    // $ANTLR start "rule__InsertValues__Group__0__Impl"
    // InternalSQLParser.g:6573:1: rule__InsertValues__Group__0__Impl : ( ruleExpr ) ;
    public final void rule__InsertValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6577:1: ( ( ruleExpr ) )
            // InternalSQLParser.g:6578:1: ( ruleExpr )
            {
            // InternalSQLParser.g:6578:1: ( ruleExpr )
            // InternalSQLParser.g:6579:2: ruleExpr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValuesAccess().getExprParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValuesAccess().getExprParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValues__Group__0__Impl"


    // $ANTLR start "rule__InsertValues__Group__1"
    // InternalSQLParser.g:6588:1: rule__InsertValues__Group__1 : rule__InsertValues__Group__1__Impl ;
    public final void rule__InsertValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6592:1: ( rule__InsertValues__Group__1__Impl )
            // InternalSQLParser.g:6593:2: rule__InsertValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InsertValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValues__Group__1"


    // $ANTLR start "rule__InsertValues__Group__1__Impl"
    // InternalSQLParser.g:6599:1: rule__InsertValues__Group__1__Impl : ( ( rule__InsertValues__Group_1__0 )* ) ;
    public final void rule__InsertValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6603:1: ( ( ( rule__InsertValues__Group_1__0 )* ) )
            // InternalSQLParser.g:6604:1: ( ( rule__InsertValues__Group_1__0 )* )
            {
            // InternalSQLParser.g:6604:1: ( ( rule__InsertValues__Group_1__0 )* )
            // InternalSQLParser.g:6605:2: ( rule__InsertValues__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValuesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:6606:2: ( rule__InsertValues__Group_1__0 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==Comma) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSQLParser.g:6606:3: rule__InsertValues__Group_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__InsertValues__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValuesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValues__Group__1__Impl"


    // $ANTLR start "rule__InsertValues__Group_1__0"
    // InternalSQLParser.g:6615:1: rule__InsertValues__Group_1__0 : rule__InsertValues__Group_1__0__Impl rule__InsertValues__Group_1__1 ;
    public final void rule__InsertValues__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6619:1: ( rule__InsertValues__Group_1__0__Impl rule__InsertValues__Group_1__1 )
            // InternalSQLParser.g:6620:2: rule__InsertValues__Group_1__0__Impl rule__InsertValues__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__InsertValues__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertValues__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValues__Group_1__0"


    // $ANTLR start "rule__InsertValues__Group_1__0__Impl"
    // InternalSQLParser.g:6627:1: rule__InsertValues__Group_1__0__Impl : ( Comma ) ;
    public final void rule__InsertValues__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6631:1: ( ( Comma ) )
            // InternalSQLParser.g:6632:1: ( Comma )
            {
            // InternalSQLParser.g:6632:1: ( Comma )
            // InternalSQLParser.g:6633:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValuesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValuesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValues__Group_1__0__Impl"


    // $ANTLR start "rule__InsertValues__Group_1__1"
    // InternalSQLParser.g:6642:1: rule__InsertValues__Group_1__1 : rule__InsertValues__Group_1__1__Impl ;
    public final void rule__InsertValues__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6646:1: ( rule__InsertValues__Group_1__1__Impl )
            // InternalSQLParser.g:6647:2: rule__InsertValues__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InsertValues__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValues__Group_1__1"


    // $ANTLR start "rule__InsertValues__Group_1__1__Impl"
    // InternalSQLParser.g:6653:1: rule__InsertValues__Group_1__1__Impl : ( ruleExpr ) ;
    public final void rule__InsertValues__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6657:1: ( ( ruleExpr ) )
            // InternalSQLParser.g:6658:1: ( ruleExpr )
            {
            // InternalSQLParser.g:6658:1: ( ruleExpr )
            // InternalSQLParser.g:6659:2: ruleExpr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValuesAccess().getExprParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValuesAccess().getExprParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValues__Group_1__1__Impl"


    // $ANTLR start "rule__BoolExpr__Group__0"
    // InternalSQLParser.g:6669:1: rule__BoolExpr__Group__0 : rule__BoolExpr__Group__0__Impl rule__BoolExpr__Group__1 ;
    public final void rule__BoolExpr__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6673:1: ( rule__BoolExpr__Group__0__Impl rule__BoolExpr__Group__1 )
            // InternalSQLParser.g:6674:2: rule__BoolExpr__Group__0__Impl rule__BoolExpr__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__BoolExpr__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BoolExpr__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolExpr__Group__0"


    // $ANTLR start "rule__BoolExpr__Group__0__Impl"
    // InternalSQLParser.g:6681:1: rule__BoolExpr__Group__0__Impl : ( ruleBoolTerm ) ;
    public final void rule__BoolExpr__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6685:1: ( ( ruleBoolTerm ) )
            // InternalSQLParser.g:6686:1: ( ruleBoolTerm )
            {
            // InternalSQLParser.g:6686:1: ( ruleBoolTerm )
            // InternalSQLParser.g:6687:2: ruleBoolTerm
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolExprAccess().getBoolTermParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBoolTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolExprAccess().getBoolTermParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolExpr__Group__0__Impl"


    // $ANTLR start "rule__BoolExpr__Group__1"
    // InternalSQLParser.g:6696:1: rule__BoolExpr__Group__1 : rule__BoolExpr__Group__1__Impl ;
    public final void rule__BoolExpr__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6700:1: ( rule__BoolExpr__Group__1__Impl )
            // InternalSQLParser.g:6701:2: rule__BoolExpr__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BoolExpr__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolExpr__Group__1"


    // $ANTLR start "rule__BoolExpr__Group__1__Impl"
    // InternalSQLParser.g:6707:1: rule__BoolExpr__Group__1__Impl : ( ( rule__BoolExpr__Group_1__0 )* ) ;
    public final void rule__BoolExpr__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6711:1: ( ( ( rule__BoolExpr__Group_1__0 )* ) )
            // InternalSQLParser.g:6712:1: ( ( rule__BoolExpr__Group_1__0 )* )
            {
            // InternalSQLParser.g:6712:1: ( ( rule__BoolExpr__Group_1__0 )* )
            // InternalSQLParser.g:6713:2: ( rule__BoolExpr__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolExprAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:6714:2: ( rule__BoolExpr__Group_1__0 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==OR||LA76_0==VerticalLineVerticalLine) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalSQLParser.g:6714:3: rule__BoolExpr__Group_1__0
            	    {
            	    pushFollow(FOLLOW_17);
            	    rule__BoolExpr__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolExprAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolExpr__Group__1__Impl"


    // $ANTLR start "rule__BoolExpr__Group_1__0"
    // InternalSQLParser.g:6723:1: rule__BoolExpr__Group_1__0 : rule__BoolExpr__Group_1__0__Impl rule__BoolExpr__Group_1__1 ;
    public final void rule__BoolExpr__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6727:1: ( rule__BoolExpr__Group_1__0__Impl rule__BoolExpr__Group_1__1 )
            // InternalSQLParser.g:6728:2: rule__BoolExpr__Group_1__0__Impl rule__BoolExpr__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__BoolExpr__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BoolExpr__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolExpr__Group_1__0"


    // $ANTLR start "rule__BoolExpr__Group_1__0__Impl"
    // InternalSQLParser.g:6735:1: rule__BoolExpr__Group_1__0__Impl : ( ( rule__BoolExpr__Alternatives_1_0 ) ) ;
    public final void rule__BoolExpr__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6739:1: ( ( ( rule__BoolExpr__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:6740:1: ( ( rule__BoolExpr__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:6740:1: ( ( rule__BoolExpr__Alternatives_1_0 ) )
            // InternalSQLParser.g:6741:2: ( rule__BoolExpr__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolExprAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:6742:2: ( rule__BoolExpr__Alternatives_1_0 )
            // InternalSQLParser.g:6742:3: rule__BoolExpr__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__BoolExpr__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolExprAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolExpr__Group_1__0__Impl"


    // $ANTLR start "rule__BoolExpr__Group_1__1"
    // InternalSQLParser.g:6750:1: rule__BoolExpr__Group_1__1 : rule__BoolExpr__Group_1__1__Impl ;
    public final void rule__BoolExpr__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6754:1: ( rule__BoolExpr__Group_1__1__Impl )
            // InternalSQLParser.g:6755:2: rule__BoolExpr__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BoolExpr__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolExpr__Group_1__1"


    // $ANTLR start "rule__BoolExpr__Group_1__1__Impl"
    // InternalSQLParser.g:6761:1: rule__BoolExpr__Group_1__1__Impl : ( ruleBoolTerm ) ;
    public final void rule__BoolExpr__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6765:1: ( ( ruleBoolTerm ) )
            // InternalSQLParser.g:6766:1: ( ruleBoolTerm )
            {
            // InternalSQLParser.g:6766:1: ( ruleBoolTerm )
            // InternalSQLParser.g:6767:2: ruleBoolTerm
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolExprAccess().getBoolTermParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleBoolTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolExprAccess().getBoolTermParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolExpr__Group_1__1__Impl"


    // $ANTLR start "rule__BoolTerm__Group__0"
    // InternalSQLParser.g:6777:1: rule__BoolTerm__Group__0 : rule__BoolTerm__Group__0__Impl rule__BoolTerm__Group__1 ;
    public final void rule__BoolTerm__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6781:1: ( rule__BoolTerm__Group__0__Impl rule__BoolTerm__Group__1 )
            // InternalSQLParser.g:6782:2: rule__BoolTerm__Group__0__Impl rule__BoolTerm__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__BoolTerm__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BoolTerm__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolTerm__Group__0"


    // $ANTLR start "rule__BoolTerm__Group__0__Impl"
    // InternalSQLParser.g:6789:1: rule__BoolTerm__Group__0__Impl : ( ruleBoolFactor ) ;
    public final void rule__BoolTerm__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6793:1: ( ( ruleBoolFactor ) )
            // InternalSQLParser.g:6794:1: ( ruleBoolFactor )
            {
            // InternalSQLParser.g:6794:1: ( ruleBoolFactor )
            // InternalSQLParser.g:6795:2: ruleBoolFactor
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolTermAccess().getBoolFactorParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBoolFactor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolTermAccess().getBoolFactorParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolTerm__Group__0__Impl"


    // $ANTLR start "rule__BoolTerm__Group__1"
    // InternalSQLParser.g:6804:1: rule__BoolTerm__Group__1 : rule__BoolTerm__Group__1__Impl ;
    public final void rule__BoolTerm__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6808:1: ( rule__BoolTerm__Group__1__Impl )
            // InternalSQLParser.g:6809:2: rule__BoolTerm__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BoolTerm__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolTerm__Group__1"


    // $ANTLR start "rule__BoolTerm__Group__1__Impl"
    // InternalSQLParser.g:6815:1: rule__BoolTerm__Group__1__Impl : ( ( rule__BoolTerm__Group_1__0 )* ) ;
    public final void rule__BoolTerm__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6819:1: ( ( ( rule__BoolTerm__Group_1__0 )* ) )
            // InternalSQLParser.g:6820:1: ( ( rule__BoolTerm__Group_1__0 )* )
            {
            // InternalSQLParser.g:6820:1: ( ( rule__BoolTerm__Group_1__0 )* )
            // InternalSQLParser.g:6821:2: ( rule__BoolTerm__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolTermAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:6822:2: ( rule__BoolTerm__Group_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==AND||LA77_0==AmpersandAmpersand) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSQLParser.g:6822:3: rule__BoolTerm__Group_1__0
            	    {
            	    pushFollow(FOLLOW_19);
            	    rule__BoolTerm__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolTermAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolTerm__Group__1__Impl"


    // $ANTLR start "rule__BoolTerm__Group_1__0"
    // InternalSQLParser.g:6831:1: rule__BoolTerm__Group_1__0 : rule__BoolTerm__Group_1__0__Impl rule__BoolTerm__Group_1__1 ;
    public final void rule__BoolTerm__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6835:1: ( rule__BoolTerm__Group_1__0__Impl rule__BoolTerm__Group_1__1 )
            // InternalSQLParser.g:6836:2: rule__BoolTerm__Group_1__0__Impl rule__BoolTerm__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__BoolTerm__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BoolTerm__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolTerm__Group_1__0"


    // $ANTLR start "rule__BoolTerm__Group_1__0__Impl"
    // InternalSQLParser.g:6843:1: rule__BoolTerm__Group_1__0__Impl : ( ( rule__BoolTerm__Alternatives_1_0 ) ) ;
    public final void rule__BoolTerm__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6847:1: ( ( ( rule__BoolTerm__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:6848:1: ( ( rule__BoolTerm__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:6848:1: ( ( rule__BoolTerm__Alternatives_1_0 ) )
            // InternalSQLParser.g:6849:2: ( rule__BoolTerm__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolTermAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:6850:2: ( rule__BoolTerm__Alternatives_1_0 )
            // InternalSQLParser.g:6850:3: rule__BoolTerm__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__BoolTerm__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolTermAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolTerm__Group_1__0__Impl"


    // $ANTLR start "rule__BoolTerm__Group_1__1"
    // InternalSQLParser.g:6858:1: rule__BoolTerm__Group_1__1 : rule__BoolTerm__Group_1__1__Impl ;
    public final void rule__BoolTerm__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6862:1: ( rule__BoolTerm__Group_1__1__Impl )
            // InternalSQLParser.g:6863:2: rule__BoolTerm__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BoolTerm__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolTerm__Group_1__1"


    // $ANTLR start "rule__BoolTerm__Group_1__1__Impl"
    // InternalSQLParser.g:6869:1: rule__BoolTerm__Group_1__1__Impl : ( ruleBoolFactor ) ;
    public final void rule__BoolTerm__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6873:1: ( ( ruleBoolFactor ) )
            // InternalSQLParser.g:6874:1: ( ruleBoolFactor )
            {
            // InternalSQLParser.g:6874:1: ( ruleBoolFactor )
            // InternalSQLParser.g:6875:2: ruleBoolFactor
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolTermAccess().getBoolFactorParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleBoolFactor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolTermAccess().getBoolFactorParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolTerm__Group_1__1__Impl"


    // $ANTLR start "rule__BoolFactor__Group__0"
    // InternalSQLParser.g:6885:1: rule__BoolFactor__Group__0 : rule__BoolFactor__Group__0__Impl rule__BoolFactor__Group__1 ;
    public final void rule__BoolFactor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6889:1: ( rule__BoolFactor__Group__0__Impl rule__BoolFactor__Group__1 )
            // InternalSQLParser.g:6890:2: rule__BoolFactor__Group__0__Impl rule__BoolFactor__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__BoolFactor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BoolFactor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolFactor__Group__0"


    // $ANTLR start "rule__BoolFactor__Group__0__Impl"
    // InternalSQLParser.g:6897:1: rule__BoolFactor__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__BoolFactor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6901:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:6902:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:6902:1: ( ( NOT )? )
            // InternalSQLParser.g:6903:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolFactorAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:6904:2: ( NOT )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==NOT) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSQLParser.g:6904:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolFactorAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolFactor__Group__0__Impl"


    // $ANTLR start "rule__BoolFactor__Group__1"
    // InternalSQLParser.g:6912:1: rule__BoolFactor__Group__1 : rule__BoolFactor__Group__1__Impl ;
    public final void rule__BoolFactor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6916:1: ( rule__BoolFactor__Group__1__Impl )
            // InternalSQLParser.g:6917:2: rule__BoolFactor__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BoolFactor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolFactor__Group__1"


    // $ANTLR start "rule__BoolFactor__Group__1__Impl"
    // InternalSQLParser.g:6923:1: rule__BoolFactor__Group__1__Impl : ( ruleBoolPri ) ;
    public final void rule__BoolFactor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6927:1: ( ( ruleBoolPri ) )
            // InternalSQLParser.g:6928:1: ( ruleBoolPri )
            {
            // InternalSQLParser.g:6928:1: ( ruleBoolPri )
            // InternalSQLParser.g:6929:2: ruleBoolPri
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolFactorAccess().getBoolPriParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleBoolPri();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolFactorAccess().getBoolPriParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolFactor__Group__1__Impl"


    // $ANTLR start "rule__BoolPri__Group_1__0"
    // InternalSQLParser.g:6939:1: rule__BoolPri__Group_1__0 : rule__BoolPri__Group_1__0__Impl rule__BoolPri__Group_1__1 ;
    public final void rule__BoolPri__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6943:1: ( rule__BoolPri__Group_1__0__Impl rule__BoolPri__Group_1__1 )
            // InternalSQLParser.g:6944:2: rule__BoolPri__Group_1__0__Impl rule__BoolPri__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__BoolPri__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BoolPri__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolPri__Group_1__0"


    // $ANTLR start "rule__BoolPri__Group_1__0__Impl"
    // InternalSQLParser.g:6951:1: rule__BoolPri__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__BoolPri__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6955:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6956:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6956:1: ( LeftParenthesis )
            // InternalSQLParser.g:6957:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolPriAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolPriAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolPri__Group_1__0__Impl"


    // $ANTLR start "rule__BoolPri__Group_1__1"
    // InternalSQLParser.g:6966:1: rule__BoolPri__Group_1__1 : rule__BoolPri__Group_1__1__Impl rule__BoolPri__Group_1__2 ;
    public final void rule__BoolPri__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6970:1: ( rule__BoolPri__Group_1__1__Impl rule__BoolPri__Group_1__2 )
            // InternalSQLParser.g:6971:2: rule__BoolPri__Group_1__1__Impl rule__BoolPri__Group_1__2
            {
            pushFollow(FOLLOW_10);
            rule__BoolPri__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BoolPri__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolPri__Group_1__1"


    // $ANTLR start "rule__BoolPri__Group_1__1__Impl"
    // InternalSQLParser.g:6978:1: rule__BoolPri__Group_1__1__Impl : ( ruleExpr ) ;
    public final void rule__BoolPri__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6982:1: ( ( ruleExpr ) )
            // InternalSQLParser.g:6983:1: ( ruleExpr )
            {
            // InternalSQLParser.g:6983:1: ( ruleExpr )
            // InternalSQLParser.g:6984:2: ruleExpr
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolPriAccess().getExprParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolPriAccess().getExprParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolPri__Group_1__1__Impl"


    // $ANTLR start "rule__BoolPri__Group_1__2"
    // InternalSQLParser.g:6993:1: rule__BoolPri__Group_1__2 : rule__BoolPri__Group_1__2__Impl ;
    public final void rule__BoolPri__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6997:1: ( rule__BoolPri__Group_1__2__Impl )
            // InternalSQLParser.g:6998:2: rule__BoolPri__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BoolPri__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolPri__Group_1__2"


    // $ANTLR start "rule__BoolPri__Group_1__2__Impl"
    // InternalSQLParser.g:7004:1: rule__BoolPri__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__BoolPri__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7008:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7009:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7009:1: ( RightParenthesis )
            // InternalSQLParser.g:7010:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolPriAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolPriAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolPri__Group_1__2__Impl"


    // $ANTLR start "rule__CreateStatement__Group__0"
    // InternalSQLParser.g:7020:1: rule__CreateStatement__Group__0 : rule__CreateStatement__Group__0__Impl rule__CreateStatement__Group__1 ;
    public final void rule__CreateStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7024:1: ( rule__CreateStatement__Group__0__Impl rule__CreateStatement__Group__1 )
            // InternalSQLParser.g:7025:2: rule__CreateStatement__Group__0__Impl rule__CreateStatement__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__CreateStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Group__0"


    // $ANTLR start "rule__CreateStatement__Group__0__Impl"
    // InternalSQLParser.g:7032:1: rule__CreateStatement__Group__0__Impl : ( CREATE ) ;
    public final void rule__CreateStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7036:1: ( ( CREATE ) )
            // InternalSQLParser.g:7037:1: ( CREATE )
            {
            // InternalSQLParser.g:7037:1: ( CREATE )
            // InternalSQLParser.g:7038:2: CREATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementAccess().getCREATEKeyword_0()); 
            }
            match(input,CREATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementAccess().getCREATEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Group__0__Impl"


    // $ANTLR start "rule__CreateStatement__Group__1"
    // InternalSQLParser.g:7047:1: rule__CreateStatement__Group__1 : rule__CreateStatement__Group__1__Impl ;
    public final void rule__CreateStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7051:1: ( rule__CreateStatement__Group__1__Impl )
            // InternalSQLParser.g:7052:2: rule__CreateStatement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CreateStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Group__1"


    // $ANTLR start "rule__CreateStatement__Group__1__Impl"
    // InternalSQLParser.g:7058:1: rule__CreateStatement__Group__1__Impl : ( ( rule__CreateStatement__Create_tblAssignment_1 ) ) ;
    public final void rule__CreateStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7062:1: ( ( ( rule__CreateStatement__Create_tblAssignment_1 ) ) )
            // InternalSQLParser.g:7063:1: ( ( rule__CreateStatement__Create_tblAssignment_1 ) )
            {
            // InternalSQLParser.g:7063:1: ( ( rule__CreateStatement__Create_tblAssignment_1 ) )
            // InternalSQLParser.g:7064:2: ( rule__CreateStatement__Create_tblAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementAccess().getCreate_tblAssignment_1()); 
            }
            // InternalSQLParser.g:7065:2: ( rule__CreateStatement__Create_tblAssignment_1 )
            // InternalSQLParser.g:7065:3: rule__CreateStatement__Create_tblAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CreateStatement__Create_tblAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementAccess().getCreate_tblAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Group__1__Impl"


    // $ANTLR start "rule__CreateTable__Group__0"
    // InternalSQLParser.g:7074:1: rule__CreateTable__Group__0 : rule__CreateTable__Group__0__Impl rule__CreateTable__Group__1 ;
    public final void rule__CreateTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7078:1: ( rule__CreateTable__Group__0__Impl rule__CreateTable__Group__1 )
            // InternalSQLParser.g:7079:2: rule__CreateTable__Group__0__Impl rule__CreateTable__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__CreateTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__0"


    // $ANTLR start "rule__CreateTable__Group__0__Impl"
    // InternalSQLParser.g:7086:1: rule__CreateTable__Group__0__Impl : ( TABLE ) ;
    public final void rule__CreateTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7090:1: ( ( TABLE ) )
            // InternalSQLParser.g:7091:1: ( TABLE )
            {
            // InternalSQLParser.g:7091:1: ( TABLE )
            // InternalSQLParser.g:7092:2: TABLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTABLEKeyword_0()); 
            }
            match(input,TABLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTABLEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__0__Impl"


    // $ANTLR start "rule__CreateTable__Group__1"
    // InternalSQLParser.g:7101:1: rule__CreateTable__Group__1 : rule__CreateTable__Group__1__Impl rule__CreateTable__Group__2 ;
    public final void rule__CreateTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7105:1: ( rule__CreateTable__Group__1__Impl rule__CreateTable__Group__2 )
            // InternalSQLParser.g:7106:2: rule__CreateTable__Group__1__Impl rule__CreateTable__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__CreateTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__1"


    // $ANTLR start "rule__CreateTable__Group__1__Impl"
    // InternalSQLParser.g:7113:1: rule__CreateTable__Group__1__Impl : ( ( rule__CreateTable__TableNameAssignment_1 ) ) ;
    public final void rule__CreateTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7117:1: ( ( ( rule__CreateTable__TableNameAssignment_1 ) ) )
            // InternalSQLParser.g:7118:1: ( ( rule__CreateTable__TableNameAssignment_1 ) )
            {
            // InternalSQLParser.g:7118:1: ( ( rule__CreateTable__TableNameAssignment_1 ) )
            // InternalSQLParser.g:7119:2: ( rule__CreateTable__TableNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTableNameAssignment_1()); 
            }
            // InternalSQLParser.g:7120:2: ( rule__CreateTable__TableNameAssignment_1 )
            // InternalSQLParser.g:7120:3: rule__CreateTable__TableNameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CreateTable__TableNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTableNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__1__Impl"


    // $ANTLR start "rule__CreateTable__Group__2"
    // InternalSQLParser.g:7128:1: rule__CreateTable__Group__2 : rule__CreateTable__Group__2__Impl rule__CreateTable__Group__3 ;
    public final void rule__CreateTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7132:1: ( rule__CreateTable__Group__2__Impl rule__CreateTable__Group__3 )
            // InternalSQLParser.g:7133:2: rule__CreateTable__Group__2__Impl rule__CreateTable__Group__3
            {
            pushFollow(FOLLOW_21);
            rule__CreateTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__2"


    // $ANTLR start "rule__CreateTable__Group__2__Impl"
    // InternalSQLParser.g:7140:1: rule__CreateTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__CreateTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7144:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7145:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7145:1: ( LeftParenthesis )
            // InternalSQLParser.g:7146:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__2__Impl"


    // $ANTLR start "rule__CreateTable__Group__3"
    // InternalSQLParser.g:7155:1: rule__CreateTable__Group__3 : rule__CreateTable__Group__3__Impl rule__CreateTable__Group__4 ;
    public final void rule__CreateTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7159:1: ( rule__CreateTable__Group__3__Impl rule__CreateTable__Group__4 )
            // InternalSQLParser.g:7160:2: rule__CreateTable__Group__3__Impl rule__CreateTable__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__CreateTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__3"


    // $ANTLR start "rule__CreateTable__Group__3__Impl"
    // InternalSQLParser.g:7167:1: rule__CreateTable__Group__3__Impl : ( ( rule__CreateTable__TableElementListAssignment_3 ) ) ;
    public final void rule__CreateTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7171:1: ( ( ( rule__CreateTable__TableElementListAssignment_3 ) ) )
            // InternalSQLParser.g:7172:1: ( ( rule__CreateTable__TableElementListAssignment_3 ) )
            {
            // InternalSQLParser.g:7172:1: ( ( rule__CreateTable__TableElementListAssignment_3 ) )
            // InternalSQLParser.g:7173:2: ( rule__CreateTable__TableElementListAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTableElementListAssignment_3()); 
            }
            // InternalSQLParser.g:7174:2: ( rule__CreateTable__TableElementListAssignment_3 )
            // InternalSQLParser.g:7174:3: rule__CreateTable__TableElementListAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__CreateTable__TableElementListAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTableElementListAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__3__Impl"


    // $ANTLR start "rule__CreateTable__Group__4"
    // InternalSQLParser.g:7182:1: rule__CreateTable__Group__4 : rule__CreateTable__Group__4__Impl ;
    public final void rule__CreateTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7186:1: ( rule__CreateTable__Group__4__Impl )
            // InternalSQLParser.g:7187:2: rule__CreateTable__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__4"


    // $ANTLR start "rule__CreateTable__Group__4__Impl"
    // InternalSQLParser.g:7193:1: rule__CreateTable__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__CreateTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7197:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7198:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7198:1: ( RightParenthesis )
            // InternalSQLParser.g:7199:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__4__Impl"


    // $ANTLR start "rule__TableElementList__Group__0"
    // InternalSQLParser.g:7209:1: rule__TableElementList__Group__0 : rule__TableElementList__Group__0__Impl rule__TableElementList__Group__1 ;
    public final void rule__TableElementList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7213:1: ( rule__TableElementList__Group__0__Impl rule__TableElementList__Group__1 )
            // InternalSQLParser.g:7214:2: rule__TableElementList__Group__0__Impl rule__TableElementList__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__TableElementList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group__0"


    // $ANTLR start "rule__TableElementList__Group__0__Impl"
    // InternalSQLParser.g:7221:1: rule__TableElementList__Group__0__Impl : ( ( rule__TableElementList__TableElementAssignment_0 ) ) ;
    public final void rule__TableElementList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7225:1: ( ( ( rule__TableElementList__TableElementAssignment_0 ) ) )
            // InternalSQLParser.g:7226:1: ( ( rule__TableElementList__TableElementAssignment_0 ) )
            {
            // InternalSQLParser.g:7226:1: ( ( rule__TableElementList__TableElementAssignment_0 ) )
            // InternalSQLParser.g:7227:2: ( rule__TableElementList__TableElementAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getTableElementAssignment_0()); 
            }
            // InternalSQLParser.g:7228:2: ( rule__TableElementList__TableElementAssignment_0 )
            // InternalSQLParser.g:7228:3: rule__TableElementList__TableElementAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__TableElementAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getTableElementAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group__0__Impl"


    // $ANTLR start "rule__TableElementList__Group__1"
    // InternalSQLParser.g:7236:1: rule__TableElementList__Group__1 : rule__TableElementList__Group__1__Impl ;
    public final void rule__TableElementList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7240:1: ( rule__TableElementList__Group__1__Impl )
            // InternalSQLParser.g:7241:2: rule__TableElementList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group__1"


    // $ANTLR start "rule__TableElementList__Group__1__Impl"
    // InternalSQLParser.g:7247:1: rule__TableElementList__Group__1__Impl : ( ( rule__TableElementList__Group_1__0 )* ) ;
    public final void rule__TableElementList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7251:1: ( ( ( rule__TableElementList__Group_1__0 )* ) )
            // InternalSQLParser.g:7252:1: ( ( rule__TableElementList__Group_1__0 )* )
            {
            // InternalSQLParser.g:7252:1: ( ( rule__TableElementList__Group_1__0 )* )
            // InternalSQLParser.g:7253:2: ( rule__TableElementList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:7254:2: ( rule__TableElementList__Group_1__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==Comma) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSQLParser.g:7254:3: rule__TableElementList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__TableElementList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group__1__Impl"


    // $ANTLR start "rule__TableElementList__Group_1__0"
    // InternalSQLParser.g:7263:1: rule__TableElementList__Group_1__0 : rule__TableElementList__Group_1__0__Impl rule__TableElementList__Group_1__1 ;
    public final void rule__TableElementList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7267:1: ( rule__TableElementList__Group_1__0__Impl rule__TableElementList__Group_1__1 )
            // InternalSQLParser.g:7268:2: rule__TableElementList__Group_1__0__Impl rule__TableElementList__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__TableElementList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group_1__0"


    // $ANTLR start "rule__TableElementList__Group_1__0__Impl"
    // InternalSQLParser.g:7275:1: rule__TableElementList__Group_1__0__Impl : ( Comma ) ;
    public final void rule__TableElementList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7279:1: ( ( Comma ) )
            // InternalSQLParser.g:7280:1: ( Comma )
            {
            // InternalSQLParser.g:7280:1: ( Comma )
            // InternalSQLParser.g:7281:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group_1__0__Impl"


    // $ANTLR start "rule__TableElementList__Group_1__1"
    // InternalSQLParser.g:7290:1: rule__TableElementList__Group_1__1 : rule__TableElementList__Group_1__1__Impl ;
    public final void rule__TableElementList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7294:1: ( rule__TableElementList__Group_1__1__Impl )
            // InternalSQLParser.g:7295:2: rule__TableElementList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group_1__1"


    // $ANTLR start "rule__TableElementList__Group_1__1__Impl"
    // InternalSQLParser.g:7301:1: rule__TableElementList__Group_1__1__Impl : ( ( rule__TableElementList__TableElementAssignment_1_1 ) ) ;
    public final void rule__TableElementList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7305:1: ( ( ( rule__TableElementList__TableElementAssignment_1_1 ) ) )
            // InternalSQLParser.g:7306:1: ( ( rule__TableElementList__TableElementAssignment_1_1 ) )
            {
            // InternalSQLParser.g:7306:1: ( ( rule__TableElementList__TableElementAssignment_1_1 ) )
            // InternalSQLParser.g:7307:2: ( rule__TableElementList__TableElementAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getTableElementAssignment_1_1()); 
            }
            // InternalSQLParser.g:7308:2: ( rule__TableElementList__TableElementAssignment_1_1 )
            // InternalSQLParser.g:7308:3: rule__TableElementList__TableElementAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__TableElementAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getTableElementAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnDefinition__Group__0"
    // InternalSQLParser.g:7317:1: rule__ColumnDefinition__Group__0 : rule__ColumnDefinition__Group__0__Impl rule__ColumnDefinition__Group__1 ;
    public final void rule__ColumnDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7321:1: ( rule__ColumnDefinition__Group__0__Impl rule__ColumnDefinition__Group__1 )
            // InternalSQLParser.g:7322:2: rule__ColumnDefinition__Group__0__Impl rule__ColumnDefinition__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__ColumnDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__0"


    // $ANTLR start "rule__ColumnDefinition__Group__0__Impl"
    // InternalSQLParser.g:7329:1: rule__ColumnDefinition__Group__0__Impl : ( ( rule__ColumnDefinition__ColumnNameAssignment_0 ) ) ;
    public final void rule__ColumnDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7333:1: ( ( ( rule__ColumnDefinition__ColumnNameAssignment_0 ) ) )
            // InternalSQLParser.g:7334:1: ( ( rule__ColumnDefinition__ColumnNameAssignment_0 ) )
            {
            // InternalSQLParser.g:7334:1: ( ( rule__ColumnDefinition__ColumnNameAssignment_0 ) )
            // InternalSQLParser.g:7335:2: ( rule__ColumnDefinition__ColumnNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getColumnNameAssignment_0()); 
            }
            // InternalSQLParser.g:7336:2: ( rule__ColumnDefinition__ColumnNameAssignment_0 )
            // InternalSQLParser.g:7336:3: rule__ColumnDefinition__ColumnNameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__ColumnNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getColumnNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__0__Impl"


    // $ANTLR start "rule__ColumnDefinition__Group__1"
    // InternalSQLParser.g:7344:1: rule__ColumnDefinition__Group__1 : rule__ColumnDefinition__Group__1__Impl ;
    public final void rule__ColumnDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7348:1: ( rule__ColumnDefinition__Group__1__Impl )
            // InternalSQLParser.g:7349:2: rule__ColumnDefinition__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__1"


    // $ANTLR start "rule__ColumnDefinition__Group__1__Impl"
    // InternalSQLParser.g:7355:1: rule__ColumnDefinition__Group__1__Impl : ( ( rule__ColumnDefinition__FieldDefinitionAssignment_1 ) ) ;
    public final void rule__ColumnDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7359:1: ( ( ( rule__ColumnDefinition__FieldDefinitionAssignment_1 ) ) )
            // InternalSQLParser.g:7360:1: ( ( rule__ColumnDefinition__FieldDefinitionAssignment_1 ) )
            {
            // InternalSQLParser.g:7360:1: ( ( rule__ColumnDefinition__FieldDefinitionAssignment_1 ) )
            // InternalSQLParser.g:7361:2: ( rule__ColumnDefinition__FieldDefinitionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getFieldDefinitionAssignment_1()); 
            }
            // InternalSQLParser.g:7362:2: ( rule__ColumnDefinition__FieldDefinitionAssignment_1 )
            // InternalSQLParser.g:7362:3: rule__ColumnDefinition__FieldDefinitionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__FieldDefinitionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getFieldDefinitionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__1__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__0"
    // InternalSQLParser.g:7371:1: rule__TableConstraintDef__Group_0__0 : rule__TableConstraintDef__Group_0__0__Impl rule__TableConstraintDef__Group_0__1 ;
    public final void rule__TableConstraintDef__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7375:1: ( rule__TableConstraintDef__Group_0__0__Impl rule__TableConstraintDef__Group_0__1 )
            // InternalSQLParser.g:7376:2: rule__TableConstraintDef__Group_0__0__Impl rule__TableConstraintDef__Group_0__1
            {
            pushFollow(FOLLOW_23);
            rule__TableConstraintDef__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__0"


    // $ANTLR start "rule__TableConstraintDef__Group_0__0__Impl"
    // InternalSQLParser.g:7383:1: rule__TableConstraintDef__Group_0__0__Impl : ( PRIMARY ) ;
    public final void rule__TableConstraintDef__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7387:1: ( ( PRIMARY ) )
            // InternalSQLParser.g:7388:1: ( PRIMARY )
            {
            // InternalSQLParser.g:7388:1: ( PRIMARY )
            // InternalSQLParser.g:7389:2: PRIMARY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getPRIMARYKeyword_0_0()); 
            }
            match(input,PRIMARY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getPRIMARYKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__0__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__1"
    // InternalSQLParser.g:7398:1: rule__TableConstraintDef__Group_0__1 : rule__TableConstraintDef__Group_0__1__Impl rule__TableConstraintDef__Group_0__2 ;
    public final void rule__TableConstraintDef__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7402:1: ( rule__TableConstraintDef__Group_0__1__Impl rule__TableConstraintDef__Group_0__2 )
            // InternalSQLParser.g:7403:2: rule__TableConstraintDef__Group_0__1__Impl rule__TableConstraintDef__Group_0__2
            {
            pushFollow(FOLLOW_12);
            rule__TableConstraintDef__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__1"


    // $ANTLR start "rule__TableConstraintDef__Group_0__1__Impl"
    // InternalSQLParser.g:7410:1: rule__TableConstraintDef__Group_0__1__Impl : ( KEY ) ;
    public final void rule__TableConstraintDef__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7414:1: ( ( KEY ) )
            // InternalSQLParser.g:7415:1: ( KEY )
            {
            // InternalSQLParser.g:7415:1: ( KEY )
            // InternalSQLParser.g:7416:2: KEY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getKEYKeyword_0_1()); 
            }
            match(input,KEY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getKEYKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__1__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__2"
    // InternalSQLParser.g:7425:1: rule__TableConstraintDef__Group_0__2 : rule__TableConstraintDef__Group_0__2__Impl rule__TableConstraintDef__Group_0__3 ;
    public final void rule__TableConstraintDef__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7429:1: ( rule__TableConstraintDef__Group_0__2__Impl rule__TableConstraintDef__Group_0__3 )
            // InternalSQLParser.g:7430:2: rule__TableConstraintDef__Group_0__2__Impl rule__TableConstraintDef__Group_0__3
            {
            pushFollow(FOLLOW_9);
            rule__TableConstraintDef__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__2"


    // $ANTLR start "rule__TableConstraintDef__Group_0__2__Impl"
    // InternalSQLParser.g:7437:1: rule__TableConstraintDef__Group_0__2__Impl : ( LeftParenthesis ) ;
    public final void rule__TableConstraintDef__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7441:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7442:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7442:1: ( LeftParenthesis )
            // InternalSQLParser.g:7443:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_0_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__2__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__3"
    // InternalSQLParser.g:7452:1: rule__TableConstraintDef__Group_0__3 : rule__TableConstraintDef__Group_0__3__Impl rule__TableConstraintDef__Group_0__4 ;
    public final void rule__TableConstraintDef__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7456:1: ( rule__TableConstraintDef__Group_0__3__Impl rule__TableConstraintDef__Group_0__4 )
            // InternalSQLParser.g:7457:2: rule__TableConstraintDef__Group_0__3__Impl rule__TableConstraintDef__Group_0__4
            {
            pushFollow(FOLLOW_10);
            rule__TableConstraintDef__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__3"


    // $ANTLR start "rule__TableConstraintDef__Group_0__3__Impl"
    // InternalSQLParser.g:7464:1: rule__TableConstraintDef__Group_0__3__Impl : ( ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 ) ) ;
    public final void rule__TableConstraintDef__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7468:1: ( ( ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 ) ) )
            // InternalSQLParser.g:7469:1: ( ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 ) )
            {
            // InternalSQLParser.g:7469:1: ( ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 ) )
            // InternalSQLParser.g:7470:2: ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getColumnNameListAssignment_0_3()); 
            }
            // InternalSQLParser.g:7471:2: ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 )
            // InternalSQLParser.g:7471:3: rule__TableConstraintDef__ColumnNameListAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__ColumnNameListAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getColumnNameListAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__3__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__4"
    // InternalSQLParser.g:7479:1: rule__TableConstraintDef__Group_0__4 : rule__TableConstraintDef__Group_0__4__Impl ;
    public final void rule__TableConstraintDef__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7483:1: ( rule__TableConstraintDef__Group_0__4__Impl )
            // InternalSQLParser.g:7484:2: rule__TableConstraintDef__Group_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__4"


    // $ANTLR start "rule__TableConstraintDef__Group_0__4__Impl"
    // InternalSQLParser.g:7490:1: rule__TableConstraintDef__Group_0__4__Impl : ( RightParenthesis ) ;
    public final void rule__TableConstraintDef__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7494:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7495:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7495:1: ( RightParenthesis )
            // InternalSQLParser.g:7496:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_0_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__4__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__0"
    // InternalSQLParser.g:7506:1: rule__TableConstraintDef__Group_1__0 : rule__TableConstraintDef__Group_1__0__Impl rule__TableConstraintDef__Group_1__1 ;
    public final void rule__TableConstraintDef__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7510:1: ( rule__TableConstraintDef__Group_1__0__Impl rule__TableConstraintDef__Group_1__1 )
            // InternalSQLParser.g:7511:2: rule__TableConstraintDef__Group_1__0__Impl rule__TableConstraintDef__Group_1__1
            {
            pushFollow(FOLLOW_23);
            rule__TableConstraintDef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__0"


    // $ANTLR start "rule__TableConstraintDef__Group_1__0__Impl"
    // InternalSQLParser.g:7518:1: rule__TableConstraintDef__Group_1__0__Impl : ( FOREIGN ) ;
    public final void rule__TableConstraintDef__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7522:1: ( ( FOREIGN ) )
            // InternalSQLParser.g:7523:1: ( FOREIGN )
            {
            // InternalSQLParser.g:7523:1: ( FOREIGN )
            // InternalSQLParser.g:7524:2: FOREIGN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getFOREIGNKeyword_1_0()); 
            }
            match(input,FOREIGN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getFOREIGNKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__0__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__1"
    // InternalSQLParser.g:7533:1: rule__TableConstraintDef__Group_1__1 : rule__TableConstraintDef__Group_1__1__Impl rule__TableConstraintDef__Group_1__2 ;
    public final void rule__TableConstraintDef__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7537:1: ( rule__TableConstraintDef__Group_1__1__Impl rule__TableConstraintDef__Group_1__2 )
            // InternalSQLParser.g:7538:2: rule__TableConstraintDef__Group_1__1__Impl rule__TableConstraintDef__Group_1__2
            {
            pushFollow(FOLLOW_12);
            rule__TableConstraintDef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__1"


    // $ANTLR start "rule__TableConstraintDef__Group_1__1__Impl"
    // InternalSQLParser.g:7545:1: rule__TableConstraintDef__Group_1__1__Impl : ( KEY ) ;
    public final void rule__TableConstraintDef__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7549:1: ( ( KEY ) )
            // InternalSQLParser.g:7550:1: ( KEY )
            {
            // InternalSQLParser.g:7550:1: ( KEY )
            // InternalSQLParser.g:7551:2: KEY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getKEYKeyword_1_1()); 
            }
            match(input,KEY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getKEYKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__1__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__2"
    // InternalSQLParser.g:7560:1: rule__TableConstraintDef__Group_1__2 : rule__TableConstraintDef__Group_1__2__Impl rule__TableConstraintDef__Group_1__3 ;
    public final void rule__TableConstraintDef__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7564:1: ( rule__TableConstraintDef__Group_1__2__Impl rule__TableConstraintDef__Group_1__3 )
            // InternalSQLParser.g:7565:2: rule__TableConstraintDef__Group_1__2__Impl rule__TableConstraintDef__Group_1__3
            {
            pushFollow(FOLLOW_9);
            rule__TableConstraintDef__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__2"


    // $ANTLR start "rule__TableConstraintDef__Group_1__2__Impl"
    // InternalSQLParser.g:7572:1: rule__TableConstraintDef__Group_1__2__Impl : ( LeftParenthesis ) ;
    public final void rule__TableConstraintDef__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7576:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7577:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7577:1: ( LeftParenthesis )
            // InternalSQLParser.g:7578:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_1_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__2__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__3"
    // InternalSQLParser.g:7587:1: rule__TableConstraintDef__Group_1__3 : rule__TableConstraintDef__Group_1__3__Impl rule__TableConstraintDef__Group_1__4 ;
    public final void rule__TableConstraintDef__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7591:1: ( rule__TableConstraintDef__Group_1__3__Impl rule__TableConstraintDef__Group_1__4 )
            // InternalSQLParser.g:7592:2: rule__TableConstraintDef__Group_1__3__Impl rule__TableConstraintDef__Group_1__4
            {
            pushFollow(FOLLOW_10);
            rule__TableConstraintDef__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__3"


    // $ANTLR start "rule__TableConstraintDef__Group_1__3__Impl"
    // InternalSQLParser.g:7599:1: rule__TableConstraintDef__Group_1__3__Impl : ( ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 ) ) ;
    public final void rule__TableConstraintDef__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7603:1: ( ( ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 ) ) )
            // InternalSQLParser.g:7604:1: ( ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 ) )
            {
            // InternalSQLParser.g:7604:1: ( ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 ) )
            // InternalSQLParser.g:7605:2: ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getColumnNameListAssignment_1_3()); 
            }
            // InternalSQLParser.g:7606:2: ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 )
            // InternalSQLParser.g:7606:3: rule__TableConstraintDef__ColumnNameListAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__ColumnNameListAssignment_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getColumnNameListAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__3__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__4"
    // InternalSQLParser.g:7614:1: rule__TableConstraintDef__Group_1__4 : rule__TableConstraintDef__Group_1__4__Impl rule__TableConstraintDef__Group_1__5 ;
    public final void rule__TableConstraintDef__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7618:1: ( rule__TableConstraintDef__Group_1__4__Impl rule__TableConstraintDef__Group_1__5 )
            // InternalSQLParser.g:7619:2: rule__TableConstraintDef__Group_1__4__Impl rule__TableConstraintDef__Group_1__5
            {
            pushFollow(FOLLOW_24);
            rule__TableConstraintDef__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__4"


    // $ANTLR start "rule__TableConstraintDef__Group_1__4__Impl"
    // InternalSQLParser.g:7626:1: rule__TableConstraintDef__Group_1__4__Impl : ( RightParenthesis ) ;
    public final void rule__TableConstraintDef__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7630:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7631:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7631:1: ( RightParenthesis )
            // InternalSQLParser.g:7632:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_1_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__4__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__5"
    // InternalSQLParser.g:7641:1: rule__TableConstraintDef__Group_1__5 : rule__TableConstraintDef__Group_1__5__Impl rule__TableConstraintDef__Group_1__6 ;
    public final void rule__TableConstraintDef__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7645:1: ( rule__TableConstraintDef__Group_1__5__Impl rule__TableConstraintDef__Group_1__6 )
            // InternalSQLParser.g:7646:2: rule__TableConstraintDef__Group_1__5__Impl rule__TableConstraintDef__Group_1__6
            {
            pushFollow(FOLLOW_9);
            rule__TableConstraintDef__Group_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__5"


    // $ANTLR start "rule__TableConstraintDef__Group_1__5__Impl"
    // InternalSQLParser.g:7653:1: rule__TableConstraintDef__Group_1__5__Impl : ( REFERENCES ) ;
    public final void rule__TableConstraintDef__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7657:1: ( ( REFERENCES ) )
            // InternalSQLParser.g:7658:1: ( REFERENCES )
            {
            // InternalSQLParser.g:7658:1: ( REFERENCES )
            // InternalSQLParser.g:7659:2: REFERENCES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getREFERENCESKeyword_1_5()); 
            }
            match(input,REFERENCES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getREFERENCESKeyword_1_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__5__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__6"
    // InternalSQLParser.g:7668:1: rule__TableConstraintDef__Group_1__6 : rule__TableConstraintDef__Group_1__6__Impl rule__TableConstraintDef__Group_1__7 ;
    public final void rule__TableConstraintDef__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7672:1: ( rule__TableConstraintDef__Group_1__6__Impl rule__TableConstraintDef__Group_1__7 )
            // InternalSQLParser.g:7673:2: rule__TableConstraintDef__Group_1__6__Impl rule__TableConstraintDef__Group_1__7
            {
            pushFollow(FOLLOW_12);
            rule__TableConstraintDef__Group_1__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__6"


    // $ANTLR start "rule__TableConstraintDef__Group_1__6__Impl"
    // InternalSQLParser.g:7680:1: rule__TableConstraintDef__Group_1__6__Impl : ( ( rule__TableConstraintDef__TableNameAssignment_1_6 ) ) ;
    public final void rule__TableConstraintDef__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7684:1: ( ( ( rule__TableConstraintDef__TableNameAssignment_1_6 ) ) )
            // InternalSQLParser.g:7685:1: ( ( rule__TableConstraintDef__TableNameAssignment_1_6 ) )
            {
            // InternalSQLParser.g:7685:1: ( ( rule__TableConstraintDef__TableNameAssignment_1_6 ) )
            // InternalSQLParser.g:7686:2: ( rule__TableConstraintDef__TableNameAssignment_1_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getTableNameAssignment_1_6()); 
            }
            // InternalSQLParser.g:7687:2: ( rule__TableConstraintDef__TableNameAssignment_1_6 )
            // InternalSQLParser.g:7687:3: rule__TableConstraintDef__TableNameAssignment_1_6
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__TableNameAssignment_1_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getTableNameAssignment_1_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__6__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__7"
    // InternalSQLParser.g:7695:1: rule__TableConstraintDef__Group_1__7 : rule__TableConstraintDef__Group_1__7__Impl rule__TableConstraintDef__Group_1__8 ;
    public final void rule__TableConstraintDef__Group_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7699:1: ( rule__TableConstraintDef__Group_1__7__Impl rule__TableConstraintDef__Group_1__8 )
            // InternalSQLParser.g:7700:2: rule__TableConstraintDef__Group_1__7__Impl rule__TableConstraintDef__Group_1__8
            {
            pushFollow(FOLLOW_9);
            rule__TableConstraintDef__Group_1__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__7"


    // $ANTLR start "rule__TableConstraintDef__Group_1__7__Impl"
    // InternalSQLParser.g:7707:1: rule__TableConstraintDef__Group_1__7__Impl : ( LeftParenthesis ) ;
    public final void rule__TableConstraintDef__Group_1__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7711:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7712:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7712:1: ( LeftParenthesis )
            // InternalSQLParser.g:7713:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_1_7()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_1_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__7__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__8"
    // InternalSQLParser.g:7722:1: rule__TableConstraintDef__Group_1__8 : rule__TableConstraintDef__Group_1__8__Impl rule__TableConstraintDef__Group_1__9 ;
    public final void rule__TableConstraintDef__Group_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7726:1: ( rule__TableConstraintDef__Group_1__8__Impl rule__TableConstraintDef__Group_1__9 )
            // InternalSQLParser.g:7727:2: rule__TableConstraintDef__Group_1__8__Impl rule__TableConstraintDef__Group_1__9
            {
            pushFollow(FOLLOW_10);
            rule__TableConstraintDef__Group_1__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__8"


    // $ANTLR start "rule__TableConstraintDef__Group_1__8__Impl"
    // InternalSQLParser.g:7734:1: rule__TableConstraintDef__Group_1__8__Impl : ( ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 ) ) ;
    public final void rule__TableConstraintDef__Group_1__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7738:1: ( ( ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 ) ) )
            // InternalSQLParser.g:7739:1: ( ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 ) )
            {
            // InternalSQLParser.g:7739:1: ( ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 ) )
            // InternalSQLParser.g:7740:2: ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRefColumnNameListAssignment_1_8()); 
            }
            // InternalSQLParser.g:7741:2: ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 )
            // InternalSQLParser.g:7741:3: rule__TableConstraintDef__RefColumnNameListAssignment_1_8
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__RefColumnNameListAssignment_1_8();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRefColumnNameListAssignment_1_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__8__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__9"
    // InternalSQLParser.g:7749:1: rule__TableConstraintDef__Group_1__9 : rule__TableConstraintDef__Group_1__9__Impl ;
    public final void rule__TableConstraintDef__Group_1__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7753:1: ( rule__TableConstraintDef__Group_1__9__Impl )
            // InternalSQLParser.g:7754:2: rule__TableConstraintDef__Group_1__9__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__9__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__9"


    // $ANTLR start "rule__TableConstraintDef__Group_1__9__Impl"
    // InternalSQLParser.g:7760:1: rule__TableConstraintDef__Group_1__9__Impl : ( RightParenthesis ) ;
    public final void rule__TableConstraintDef__Group_1__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7764:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7765:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7765:1: ( RightParenthesis )
            // InternalSQLParser.g:7766:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_1_9()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_1_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__9__Impl"


    // $ANTLR start "rule__ColumnNameList__Group__0"
    // InternalSQLParser.g:7776:1: rule__ColumnNameList__Group__0 : rule__ColumnNameList__Group__0__Impl rule__ColumnNameList__Group__1 ;
    public final void rule__ColumnNameList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7780:1: ( rule__ColumnNameList__Group__0__Impl rule__ColumnNameList__Group__1 )
            // InternalSQLParser.g:7781:2: rule__ColumnNameList__Group__0__Impl rule__ColumnNameList__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__ColumnNameList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group__0"


    // $ANTLR start "rule__ColumnNameList__Group__0__Impl"
    // InternalSQLParser.g:7788:1: rule__ColumnNameList__Group__0__Impl : ( ( rule__ColumnNameList__ColumnNameAssignment_0 ) ) ;
    public final void rule__ColumnNameList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7792:1: ( ( ( rule__ColumnNameList__ColumnNameAssignment_0 ) ) )
            // InternalSQLParser.g:7793:1: ( ( rule__ColumnNameList__ColumnNameAssignment_0 ) )
            {
            // InternalSQLParser.g:7793:1: ( ( rule__ColumnNameList__ColumnNameAssignment_0 ) )
            // InternalSQLParser.g:7794:2: ( rule__ColumnNameList__ColumnNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getColumnNameAssignment_0()); 
            }
            // InternalSQLParser.g:7795:2: ( rule__ColumnNameList__ColumnNameAssignment_0 )
            // InternalSQLParser.g:7795:3: rule__ColumnNameList__ColumnNameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__ColumnNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getColumnNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group__0__Impl"


    // $ANTLR start "rule__ColumnNameList__Group__1"
    // InternalSQLParser.g:7803:1: rule__ColumnNameList__Group__1 : rule__ColumnNameList__Group__1__Impl ;
    public final void rule__ColumnNameList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7807:1: ( rule__ColumnNameList__Group__1__Impl )
            // InternalSQLParser.g:7808:2: rule__ColumnNameList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group__1"


    // $ANTLR start "rule__ColumnNameList__Group__1__Impl"
    // InternalSQLParser.g:7814:1: rule__ColumnNameList__Group__1__Impl : ( ( rule__ColumnNameList__Group_1__0 )* ) ;
    public final void rule__ColumnNameList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7818:1: ( ( ( rule__ColumnNameList__Group_1__0 )* ) )
            // InternalSQLParser.g:7819:1: ( ( rule__ColumnNameList__Group_1__0 )* )
            {
            // InternalSQLParser.g:7819:1: ( ( rule__ColumnNameList__Group_1__0 )* )
            // InternalSQLParser.g:7820:2: ( rule__ColumnNameList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:7821:2: ( rule__ColumnNameList__Group_1__0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==Comma) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSQLParser.g:7821:3: rule__ColumnNameList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__ColumnNameList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group__1__Impl"


    // $ANTLR start "rule__ColumnNameList__Group_1__0"
    // InternalSQLParser.g:7830:1: rule__ColumnNameList__Group_1__0 : rule__ColumnNameList__Group_1__0__Impl rule__ColumnNameList__Group_1__1 ;
    public final void rule__ColumnNameList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7834:1: ( rule__ColumnNameList__Group_1__0__Impl rule__ColumnNameList__Group_1__1 )
            // InternalSQLParser.g:7835:2: rule__ColumnNameList__Group_1__0__Impl rule__ColumnNameList__Group_1__1
            {
            pushFollow(FOLLOW_9);
            rule__ColumnNameList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group_1__0"


    // $ANTLR start "rule__ColumnNameList__Group_1__0__Impl"
    // InternalSQLParser.g:7842:1: rule__ColumnNameList__Group_1__0__Impl : ( Comma ) ;
    public final void rule__ColumnNameList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7846:1: ( ( Comma ) )
            // InternalSQLParser.g:7847:1: ( Comma )
            {
            // InternalSQLParser.g:7847:1: ( Comma )
            // InternalSQLParser.g:7848:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group_1__0__Impl"


    // $ANTLR start "rule__ColumnNameList__Group_1__1"
    // InternalSQLParser.g:7857:1: rule__ColumnNameList__Group_1__1 : rule__ColumnNameList__Group_1__1__Impl ;
    public final void rule__ColumnNameList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7861:1: ( rule__ColumnNameList__Group_1__1__Impl )
            // InternalSQLParser.g:7862:2: rule__ColumnNameList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group_1__1"


    // $ANTLR start "rule__ColumnNameList__Group_1__1__Impl"
    // InternalSQLParser.g:7868:1: rule__ColumnNameList__Group_1__1__Impl : ( ( rule__ColumnNameList__ColumnNameAssignment_1_1 ) ) ;
    public final void rule__ColumnNameList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7872:1: ( ( ( rule__ColumnNameList__ColumnNameAssignment_1_1 ) ) )
            // InternalSQLParser.g:7873:1: ( ( rule__ColumnNameList__ColumnNameAssignment_1_1 ) )
            {
            // InternalSQLParser.g:7873:1: ( ( rule__ColumnNameList__ColumnNameAssignment_1_1 ) )
            // InternalSQLParser.g:7874:2: ( rule__ColumnNameList__ColumnNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getColumnNameAssignment_1_1()); 
            }
            // InternalSQLParser.g:7875:2: ( rule__ColumnNameList__ColumnNameAssignment_1_1 )
            // InternalSQLParser.g:7875:3: rule__ColumnNameList__ColumnNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__ColumnNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getColumnNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group_1__1__Impl"


    // $ANTLR start "rule__FieldDefinition__Group__0"
    // InternalSQLParser.g:7884:1: rule__FieldDefinition__Group__0 : rule__FieldDefinition__Group__0__Impl rule__FieldDefinition__Group__1 ;
    public final void rule__FieldDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7888:1: ( rule__FieldDefinition__Group__0__Impl rule__FieldDefinition__Group__1 )
            // InternalSQLParser.g:7889:2: rule__FieldDefinition__Group__0__Impl rule__FieldDefinition__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__FieldDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FieldDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDefinition__Group__0"


    // $ANTLR start "rule__FieldDefinition__Group__0__Impl"
    // InternalSQLParser.g:7896:1: rule__FieldDefinition__Group__0__Impl : ( ruleDataType ) ;
    public final void rule__FieldDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7900:1: ( ( ruleDataType ) )
            // InternalSQLParser.g:7901:1: ( ruleDataType )
            {
            // InternalSQLParser.g:7901:1: ( ruleDataType )
            // InternalSQLParser.g:7902:2: ruleDataType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDefinitionAccess().getDataTypeParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDataType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDefinitionAccess().getDataTypeParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDefinition__Group__0__Impl"


    // $ANTLR start "rule__FieldDefinition__Group__1"
    // InternalSQLParser.g:7911:1: rule__FieldDefinition__Group__1 : rule__FieldDefinition__Group__1__Impl ;
    public final void rule__FieldDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7915:1: ( rule__FieldDefinition__Group__1__Impl )
            // InternalSQLParser.g:7916:2: rule__FieldDefinition__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDefinition__Group__1"


    // $ANTLR start "rule__FieldDefinition__Group__1__Impl"
    // InternalSQLParser.g:7922:1: rule__FieldDefinition__Group__1__Impl : ( ( ruleColumnAttribute )* ) ;
    public final void rule__FieldDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7926:1: ( ( ( ruleColumnAttribute )* ) )
            // InternalSQLParser.g:7927:1: ( ( ruleColumnAttribute )* )
            {
            // InternalSQLParser.g:7927:1: ( ( ruleColumnAttribute )* )
            // InternalSQLParser.g:7928:2: ( ruleColumnAttribute )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDefinitionAccess().getColumnAttributeParserRuleCall_1()); 
            }
            // InternalSQLParser.g:7929:2: ( ruleColumnAttribute )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==AUTO_INCREMENT||LA81_0==COMMENT||LA81_0==DEFAULT||LA81_0==PRIMARY||LA81_0==UNIQUE||LA81_0==NULL||LA81_0==NOT) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalSQLParser.g:7929:3: ruleColumnAttribute
            	    {
            	    pushFollow(FOLLOW_26);
            	    ruleColumnAttribute();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDefinitionAccess().getColumnAttributeParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDefinition__Group__1__Impl"


    // $ANTLR start "rule__DataType__Group__0"
    // InternalSQLParser.g:7938:1: rule__DataType__Group__0 : rule__DataType__Group__0__Impl rule__DataType__Group__1 ;
    public final void rule__DataType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7942:1: ( rule__DataType__Group__0__Impl rule__DataType__Group__1 )
            // InternalSQLParser.g:7943:2: rule__DataType__Group__0__Impl rule__DataType__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__DataType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__0"


    // $ANTLR start "rule__DataType__Group__0__Impl"
    // InternalSQLParser.g:7950:1: rule__DataType__Group__0__Impl : ( ruleSimpleType ) ;
    public final void rule__DataType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7954:1: ( ( ruleSimpleType ) )
            // InternalSQLParser.g:7955:1: ( ruleSimpleType )
            {
            // InternalSQLParser.g:7955:1: ( ruleSimpleType )
            // InternalSQLParser.g:7956:2: ruleSimpleType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getSimpleTypeParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getSimpleTypeParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__0__Impl"


    // $ANTLR start "rule__DataType__Group__1"
    // InternalSQLParser.g:7965:1: rule__DataType__Group__1 : rule__DataType__Group__1__Impl rule__DataType__Group__2 ;
    public final void rule__DataType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7969:1: ( rule__DataType__Group__1__Impl rule__DataType__Group__2 )
            // InternalSQLParser.g:7970:2: rule__DataType__Group__1__Impl rule__DataType__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__DataType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__1"


    // $ANTLR start "rule__DataType__Group__1__Impl"
    // InternalSQLParser.g:7977:1: rule__DataType__Group__1__Impl : ( ( ruleFieldLength )? ) ;
    public final void rule__DataType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7981:1: ( ( ( ruleFieldLength )? ) )
            // InternalSQLParser.g:7982:1: ( ( ruleFieldLength )? )
            {
            // InternalSQLParser.g:7982:1: ( ( ruleFieldLength )? )
            // InternalSQLParser.g:7983:2: ( ruleFieldLength )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getFieldLengthParserRuleCall_1()); 
            }
            // InternalSQLParser.g:7984:2: ( ruleFieldLength )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==LeftParenthesis) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSQLParser.g:7984:3: ruleFieldLength
                    {
                    pushFollow(FOLLOW_2);
                    ruleFieldLength();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getFieldLengthParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__1__Impl"


    // $ANTLR start "rule__DataType__Group__2"
    // InternalSQLParser.g:7992:1: rule__DataType__Group__2 : rule__DataType__Group__2__Impl ;
    public final void rule__DataType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7996:1: ( rule__DataType__Group__2__Impl )
            // InternalSQLParser.g:7997:2: rule__DataType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__2"


    // $ANTLR start "rule__DataType__Group__2__Impl"
    // InternalSQLParser.g:8003:1: rule__DataType__Group__2__Impl : ( ( ruleFieldOptions )? ) ;
    public final void rule__DataType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8007:1: ( ( ( ruleFieldOptions )? ) )
            // InternalSQLParser.g:8008:1: ( ( ruleFieldOptions )? )
            {
            // InternalSQLParser.g:8008:1: ( ( ruleFieldOptions )? )
            // InternalSQLParser.g:8009:2: ( ruleFieldOptions )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getFieldOptionsParserRuleCall_2()); 
            }
            // InternalSQLParser.g:8010:2: ( ruleFieldOptions )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( ((LA83_0>=UNSIGNED && LA83_0<=ZEROFILL)||LA83_0==SIGNED) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSQLParser.g:8010:3: ruleFieldOptions
                    {
                    pushFollow(FOLLOW_2);
                    ruleFieldOptions();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getFieldOptionsParserRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__2__Impl"


    // $ANTLR start "rule__FieldLength__Group__0"
    // InternalSQLParser.g:8019:1: rule__FieldLength__Group__0 : rule__FieldLength__Group__0__Impl rule__FieldLength__Group__1 ;
    public final void rule__FieldLength__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8023:1: ( rule__FieldLength__Group__0__Impl rule__FieldLength__Group__1 )
            // InternalSQLParser.g:8024:2: rule__FieldLength__Group__0__Impl rule__FieldLength__Group__1
            {
            pushFollow(FOLLOW_28);
            rule__FieldLength__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FieldLength__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__0"


    // $ANTLR start "rule__FieldLength__Group__0__Impl"
    // InternalSQLParser.g:8031:1: rule__FieldLength__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__FieldLength__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8035:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:8036:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:8036:1: ( LeftParenthesis )
            // InternalSQLParser.g:8037:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__0__Impl"


    // $ANTLR start "rule__FieldLength__Group__1"
    // InternalSQLParser.g:8046:1: rule__FieldLength__Group__1 : rule__FieldLength__Group__1__Impl rule__FieldLength__Group__2 ;
    public final void rule__FieldLength__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8050:1: ( rule__FieldLength__Group__1__Impl rule__FieldLength__Group__2 )
            // InternalSQLParser.g:8051:2: rule__FieldLength__Group__1__Impl rule__FieldLength__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__FieldLength__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FieldLength__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__1"


    // $ANTLR start "rule__FieldLength__Group__1__Impl"
    // InternalSQLParser.g:8058:1: rule__FieldLength__Group__1__Impl : ( RULE_UNSIGNED ) ;
    public final void rule__FieldLength__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8062:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:8063:1: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:8063:1: ( RULE_UNSIGNED )
            // InternalSQLParser.g:8064:2: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthAccess().getUNSIGNEDTerminalRuleCall_1()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthAccess().getUNSIGNEDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__1__Impl"


    // $ANTLR start "rule__FieldLength__Group__2"
    // InternalSQLParser.g:8073:1: rule__FieldLength__Group__2 : rule__FieldLength__Group__2__Impl ;
    public final void rule__FieldLength__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8077:1: ( rule__FieldLength__Group__2__Impl )
            // InternalSQLParser.g:8078:2: rule__FieldLength__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldLength__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__2"


    // $ANTLR start "rule__FieldLength__Group__2__Impl"
    // InternalSQLParser.g:8084:1: rule__FieldLength__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__FieldLength__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8088:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:8089:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:8089:1: ( RightParenthesis )
            // InternalSQLParser.g:8090:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__2__Impl"


    // $ANTLR start "rule__NullAttribute__Group__0"
    // InternalSQLParser.g:8100:1: rule__NullAttribute__Group__0 : rule__NullAttribute__Group__0__Impl rule__NullAttribute__Group__1 ;
    public final void rule__NullAttribute__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8104:1: ( rule__NullAttribute__Group__0__Impl rule__NullAttribute__Group__1 )
            // InternalSQLParser.g:8105:2: rule__NullAttribute__Group__0__Impl rule__NullAttribute__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__NullAttribute__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NullAttribute__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullAttribute__Group__0"


    // $ANTLR start "rule__NullAttribute__Group__0__Impl"
    // InternalSQLParser.g:8112:1: rule__NullAttribute__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__NullAttribute__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8116:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:8117:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:8117:1: ( ( NOT )? )
            // InternalSQLParser.g:8118:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullAttributeAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:8119:2: ( NOT )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==NOT) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSQLParser.g:8119:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullAttributeAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullAttribute__Group__0__Impl"


    // $ANTLR start "rule__NullAttribute__Group__1"
    // InternalSQLParser.g:8127:1: rule__NullAttribute__Group__1 : rule__NullAttribute__Group__1__Impl ;
    public final void rule__NullAttribute__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8131:1: ( rule__NullAttribute__Group__1__Impl )
            // InternalSQLParser.g:8132:2: rule__NullAttribute__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NullAttribute__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullAttribute__Group__1"


    // $ANTLR start "rule__NullAttribute__Group__1__Impl"
    // InternalSQLParser.g:8138:1: rule__NullAttribute__Group__1__Impl : ( NULL ) ;
    public final void rule__NullAttribute__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8142:1: ( ( NULL ) )
            // InternalSQLParser.g:8143:1: ( NULL )
            {
            // InternalSQLParser.g:8143:1: ( NULL )
            // InternalSQLParser.g:8144:2: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullAttributeAccess().getNULLKeyword_1()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullAttributeAccess().getNULLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullAttribute__Group__1__Impl"


    // $ANTLR start "rule__DefaultValue__Group__0"
    // InternalSQLParser.g:8154:1: rule__DefaultValue__Group__0 : rule__DefaultValue__Group__0__Impl rule__DefaultValue__Group__1 ;
    public final void rule__DefaultValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8158:1: ( rule__DefaultValue__Group__0__Impl rule__DefaultValue__Group__1 )
            // InternalSQLParser.g:8159:2: rule__DefaultValue__Group__0__Impl rule__DefaultValue__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__DefaultValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DefaultValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Group__0"


    // $ANTLR start "rule__DefaultValue__Group__0__Impl"
    // InternalSQLParser.g:8166:1: rule__DefaultValue__Group__0__Impl : ( DEFAULT ) ;
    public final void rule__DefaultValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8170:1: ( ( DEFAULT ) )
            // InternalSQLParser.g:8171:1: ( DEFAULT )
            {
            // InternalSQLParser.g:8171:1: ( DEFAULT )
            // InternalSQLParser.g:8172:2: DEFAULT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefaultValueAccess().getDEFAULTKeyword_0()); 
            }
            match(input,DEFAULT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefaultValueAccess().getDEFAULTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Group__0__Impl"


    // $ANTLR start "rule__DefaultValue__Group__1"
    // InternalSQLParser.g:8181:1: rule__DefaultValue__Group__1 : rule__DefaultValue__Group__1__Impl ;
    public final void rule__DefaultValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8185:1: ( rule__DefaultValue__Group__1__Impl )
            // InternalSQLParser.g:8186:2: rule__DefaultValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DefaultValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Group__1"


    // $ANTLR start "rule__DefaultValue__Group__1__Impl"
    // InternalSQLParser.g:8192:1: rule__DefaultValue__Group__1__Impl : ( ( rule__DefaultValue__Alternatives_1 ) ) ;
    public final void rule__DefaultValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8196:1: ( ( ( rule__DefaultValue__Alternatives_1 ) ) )
            // InternalSQLParser.g:8197:1: ( ( rule__DefaultValue__Alternatives_1 ) )
            {
            // InternalSQLParser.g:8197:1: ( ( rule__DefaultValue__Alternatives_1 ) )
            // InternalSQLParser.g:8198:2: ( rule__DefaultValue__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefaultValueAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:8199:2: ( rule__DefaultValue__Alternatives_1 )
            // InternalSQLParser.g:8199:3: rule__DefaultValue__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__DefaultValue__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefaultValueAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Group__1__Impl"


    // $ANTLR start "rule__PrimaryKey__Group__0"
    // InternalSQLParser.g:8208:1: rule__PrimaryKey__Group__0 : rule__PrimaryKey__Group__0__Impl rule__PrimaryKey__Group__1 ;
    public final void rule__PrimaryKey__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8212:1: ( rule__PrimaryKey__Group__0__Impl rule__PrimaryKey__Group__1 )
            // InternalSQLParser.g:8213:2: rule__PrimaryKey__Group__0__Impl rule__PrimaryKey__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__PrimaryKey__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryKey__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryKey__Group__0"


    // $ANTLR start "rule__PrimaryKey__Group__0__Impl"
    // InternalSQLParser.g:8220:1: rule__PrimaryKey__Group__0__Impl : ( PRIMARY ) ;
    public final void rule__PrimaryKey__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8224:1: ( ( PRIMARY ) )
            // InternalSQLParser.g:8225:1: ( PRIMARY )
            {
            // InternalSQLParser.g:8225:1: ( PRIMARY )
            // InternalSQLParser.g:8226:2: PRIMARY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryKeyAccess().getPRIMARYKeyword_0()); 
            }
            match(input,PRIMARY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryKeyAccess().getPRIMARYKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryKey__Group__0__Impl"


    // $ANTLR start "rule__PrimaryKey__Group__1"
    // InternalSQLParser.g:8235:1: rule__PrimaryKey__Group__1 : rule__PrimaryKey__Group__1__Impl ;
    public final void rule__PrimaryKey__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8239:1: ( rule__PrimaryKey__Group__1__Impl )
            // InternalSQLParser.g:8240:2: rule__PrimaryKey__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryKey__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryKey__Group__1"


    // $ANTLR start "rule__PrimaryKey__Group__1__Impl"
    // InternalSQLParser.g:8246:1: rule__PrimaryKey__Group__1__Impl : ( KEY ) ;
    public final void rule__PrimaryKey__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8250:1: ( ( KEY ) )
            // InternalSQLParser.g:8251:1: ( KEY )
            {
            // InternalSQLParser.g:8251:1: ( KEY )
            // InternalSQLParser.g:8252:2: KEY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryKeyAccess().getKEYKeyword_1()); 
            }
            match(input,KEY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryKeyAccess().getKEYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryKey__Group__1__Impl"


    // $ANTLR start "rule__Comment__Group__0"
    // InternalSQLParser.g:8262:1: rule__Comment__Group__0 : rule__Comment__Group__0__Impl rule__Comment__Group__1 ;
    public final void rule__Comment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8266:1: ( rule__Comment__Group__0__Impl rule__Comment__Group__1 )
            // InternalSQLParser.g:8267:2: rule__Comment__Group__0__Impl rule__Comment__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__Comment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__Group__0"


    // $ANTLR start "rule__Comment__Group__0__Impl"
    // InternalSQLParser.g:8274:1: rule__Comment__Group__0__Impl : ( COMMENT ) ;
    public final void rule__Comment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8278:1: ( ( COMMENT ) )
            // InternalSQLParser.g:8279:1: ( COMMENT )
            {
            // InternalSQLParser.g:8279:1: ( COMMENT )
            // InternalSQLParser.g:8280:2: COMMENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentAccess().getCOMMENTKeyword_0()); 
            }
            match(input,COMMENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentAccess().getCOMMENTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__Group__0__Impl"


    // $ANTLR start "rule__Comment__Group__1"
    // InternalSQLParser.g:8289:1: rule__Comment__Group__1 : rule__Comment__Group__1__Impl ;
    public final void rule__Comment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8293:1: ( rule__Comment__Group__1__Impl )
            // InternalSQLParser.g:8294:2: rule__Comment__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__Group__1"


    // $ANTLR start "rule__Comment__Group__1__Impl"
    // InternalSQLParser.g:8300:1: rule__Comment__Group__1__Impl : ( ruleTextLiteral ) ;
    public final void rule__Comment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8304:1: ( ( ruleTextLiteral ) )
            // InternalSQLParser.g:8305:1: ( ruleTextLiteral )
            {
            // InternalSQLParser.g:8305:1: ( ruleTextLiteral )
            // InternalSQLParser.g:8306:2: ruleTextLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentAccess().getTextLiteralParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleTextLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentAccess().getTextLiteralParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__Group__1__Impl"


    // $ANTLR start "rule__WithQuery__Group__0"
    // InternalSQLParser.g:8316:1: rule__WithQuery__Group__0 : rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 ;
    public final void rule__WithQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8320:1: ( rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 )
            // InternalSQLParser.g:8321:2: rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__WithQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0"


    // $ANTLR start "rule__WithQuery__Group__0__Impl"
    // InternalSQLParser.g:8328:1: rule__WithQuery__Group__0__Impl : ( ( rule__WithQuery__WAssignment_0 ) ) ;
    public final void rule__WithQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8332:1: ( ( ( rule__WithQuery__WAssignment_0 ) ) )
            // InternalSQLParser.g:8333:1: ( ( rule__WithQuery__WAssignment_0 ) )
            {
            // InternalSQLParser.g:8333:1: ( ( rule__WithQuery__WAssignment_0 ) )
            // InternalSQLParser.g:8334:2: ( rule__WithQuery__WAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }
            // InternalSQLParser.g:8335:2: ( rule__WithQuery__WAssignment_0 )
            // InternalSQLParser.g:8335:3: rule__WithQuery__WAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0__Impl"


    // $ANTLR start "rule__WithQuery__Group__1"
    // InternalSQLParser.g:8343:1: rule__WithQuery__Group__1 : rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 ;
    public final void rule__WithQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8347:1: ( rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 )
            // InternalSQLParser.g:8348:2: rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__WithQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1"


    // $ANTLR start "rule__WithQuery__Group__1__Impl"
    // InternalSQLParser.g:8355:1: rule__WithQuery__Group__1__Impl : ( ( rule__WithQuery__WnameAssignment_1 ) ) ;
    public final void rule__WithQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8359:1: ( ( ( rule__WithQuery__WnameAssignment_1 ) ) )
            // InternalSQLParser.g:8360:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            {
            // InternalSQLParser.g:8360:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            // InternalSQLParser.g:8361:2: ( rule__WithQuery__WnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }
            // InternalSQLParser.g:8362:2: ( rule__WithQuery__WnameAssignment_1 )
            // InternalSQLParser.g:8362:3: rule__WithQuery__WnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1__Impl"


    // $ANTLR start "rule__WithQuery__Group__2"
    // InternalSQLParser.g:8370:1: rule__WithQuery__Group__2 : rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 ;
    public final void rule__WithQuery__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8374:1: ( rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 )
            // InternalSQLParser.g:8375:2: rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__WithQuery__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2"


    // $ANTLR start "rule__WithQuery__Group__2__Impl"
    // InternalSQLParser.g:8382:1: rule__WithQuery__Group__2__Impl : ( ( rule__WithQuery__WithColsAssignment_2 )? ) ;
    public final void rule__WithQuery__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8386:1: ( ( ( rule__WithQuery__WithColsAssignment_2 )? ) )
            // InternalSQLParser.g:8387:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            {
            // InternalSQLParser.g:8387:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            // InternalSQLParser.g:8388:2: ( rule__WithQuery__WithColsAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }
            // InternalSQLParser.g:8389:2: ( rule__WithQuery__WithColsAssignment_2 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==LeftParenthesis) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSQLParser.g:8389:3: rule__WithQuery__WithColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__WithColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2__Impl"


    // $ANTLR start "rule__WithQuery__Group__3"
    // InternalSQLParser.g:8397:1: rule__WithQuery__Group__3 : rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 ;
    public final void rule__WithQuery__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8401:1: ( rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 )
            // InternalSQLParser.g:8402:2: rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4
            {
            pushFollow(FOLLOW_12);
            rule__WithQuery__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3"


    // $ANTLR start "rule__WithQuery__Group__3__Impl"
    // InternalSQLParser.g:8409:1: rule__WithQuery__Group__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8413:1: ( ( AS ) )
            // InternalSQLParser.g:8414:1: ( AS )
            {
            // InternalSQLParser.g:8414:1: ( AS )
            // InternalSQLParser.g:8415:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3__Impl"


    // $ANTLR start "rule__WithQuery__Group__4"
    // InternalSQLParser.g:8424:1: rule__WithQuery__Group__4 : rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 ;
    public final void rule__WithQuery__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8428:1: ( rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 )
            // InternalSQLParser.g:8429:2: rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5
            {
            pushFollow(FOLLOW_4);
            rule__WithQuery__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4"


    // $ANTLR start "rule__WithQuery__Group__4__Impl"
    // InternalSQLParser.g:8436:1: rule__WithQuery__Group__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8440:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:8441:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:8441:1: ( LeftParenthesis )
            // InternalSQLParser.g:8442:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4__Impl"


    // $ANTLR start "rule__WithQuery__Group__5"
    // InternalSQLParser.g:8451:1: rule__WithQuery__Group__5 : rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 ;
    public final void rule__WithQuery__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8455:1: ( rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 )
            // InternalSQLParser.g:8456:2: rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6
            {
            pushFollow(FOLLOW_10);
            rule__WithQuery__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5"


    // $ANTLR start "rule__WithQuery__Group__5__Impl"
    // InternalSQLParser.g:8463:1: rule__WithQuery__Group__5__Impl : ( ( rule__WithQuery__QueryAssignment_5 ) ) ;
    public final void rule__WithQuery__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8467:1: ( ( ( rule__WithQuery__QueryAssignment_5 ) ) )
            // InternalSQLParser.g:8468:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            {
            // InternalSQLParser.g:8468:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            // InternalSQLParser.g:8469:2: ( rule__WithQuery__QueryAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }
            // InternalSQLParser.g:8470:2: ( rule__WithQuery__QueryAssignment_5 )
            // InternalSQLParser.g:8470:3: rule__WithQuery__QueryAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__QueryAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5__Impl"


    // $ANTLR start "rule__WithQuery__Group__6"
    // InternalSQLParser.g:8478:1: rule__WithQuery__Group__6 : rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 ;
    public final void rule__WithQuery__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8482:1: ( rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 )
            // InternalSQLParser.g:8483:2: rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7
            {
            pushFollow(FOLLOW_13);
            rule__WithQuery__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6"


    // $ANTLR start "rule__WithQuery__Group__6__Impl"
    // InternalSQLParser.g:8490:1: rule__WithQuery__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8494:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:8495:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:8495:1: ( RightParenthesis )
            // InternalSQLParser.g:8496:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6__Impl"


    // $ANTLR start "rule__WithQuery__Group__7"
    // InternalSQLParser.g:8505:1: rule__WithQuery__Group__7 : rule__WithQuery__Group__7__Impl ;
    public final void rule__WithQuery__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8509:1: ( rule__WithQuery__Group__7__Impl )
            // InternalSQLParser.g:8510:2: rule__WithQuery__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7"


    // $ANTLR start "rule__WithQuery__Group__7__Impl"
    // InternalSQLParser.g:8516:1: rule__WithQuery__Group__7__Impl : ( ( rule__WithQuery__Group_7__0 )* ) ;
    public final void rule__WithQuery__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8520:1: ( ( ( rule__WithQuery__Group_7__0 )* ) )
            // InternalSQLParser.g:8521:1: ( ( rule__WithQuery__Group_7__0 )* )
            {
            // InternalSQLParser.g:8521:1: ( ( rule__WithQuery__Group_7__0 )* )
            // InternalSQLParser.g:8522:2: ( rule__WithQuery__Group_7__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }
            // InternalSQLParser.g:8523:2: ( rule__WithQuery__Group_7__0 )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==Comma) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalSQLParser.g:8523:3: rule__WithQuery__Group_7__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__WithQuery__Group_7__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__0"
    // InternalSQLParser.g:8532:1: rule__WithQuery__Group_7__0 : rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 ;
    public final void rule__WithQuery__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8536:1: ( rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 )
            // InternalSQLParser.g:8537:2: rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1
            {
            pushFollow(FOLLOW_32);
            rule__WithQuery__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0"


    // $ANTLR start "rule__WithQuery__Group_7__0__Impl"
    // InternalSQLParser.g:8544:1: rule__WithQuery__Group_7__0__Impl : ( Comma ) ;
    public final void rule__WithQuery__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8548:1: ( ( Comma ) )
            // InternalSQLParser.g:8549:1: ( Comma )
            {
            // InternalSQLParser.g:8549:1: ( Comma )
            // InternalSQLParser.g:8550:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__1"
    // InternalSQLParser.g:8559:1: rule__WithQuery__Group_7__1 : rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 ;
    public final void rule__WithQuery__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8563:1: ( rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 )
            // InternalSQLParser.g:8564:2: rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2
            {
            pushFollow(FOLLOW_33);
            rule__WithQuery__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1"


    // $ANTLR start "rule__WithQuery__Group_7__1__Impl"
    // InternalSQLParser.g:8571:1: rule__WithQuery__Group_7__1__Impl : ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) ;
    public final void rule__WithQuery__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8575:1: ( ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) )
            // InternalSQLParser.g:8576:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            {
            // InternalSQLParser.g:8576:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            // InternalSQLParser.g:8577:2: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }
            // InternalSQLParser.g:8578:2: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            // InternalSQLParser.g:8578:3: rule__WithQuery__AdditionalWnameAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalWnameAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__2"
    // InternalSQLParser.g:8586:1: rule__WithQuery__Group_7__2 : rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 ;
    public final void rule__WithQuery__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8590:1: ( rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 )
            // InternalSQLParser.g:8591:2: rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3
            {
            pushFollow(FOLLOW_33);
            rule__WithQuery__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2"


    // $ANTLR start "rule__WithQuery__Group_7__2__Impl"
    // InternalSQLParser.g:8598:1: rule__WithQuery__Group_7__2__Impl : ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) ;
    public final void rule__WithQuery__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8602:1: ( ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) )
            // InternalSQLParser.g:8603:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            {
            // InternalSQLParser.g:8603:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            // InternalSQLParser.g:8604:2: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }
            // InternalSQLParser.g:8605:2: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==LeftParenthesis) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSQLParser.g:8605:3: rule__WithQuery__AdditionalWithColsAssignment_7_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__AdditionalWithColsAssignment_7_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__3"
    // InternalSQLParser.g:8613:1: rule__WithQuery__Group_7__3 : rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 ;
    public final void rule__WithQuery__Group_7__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8617:1: ( rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 )
            // InternalSQLParser.g:8618:2: rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4
            {
            pushFollow(FOLLOW_12);
            rule__WithQuery__Group_7__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3"


    // $ANTLR start "rule__WithQuery__Group_7__3__Impl"
    // InternalSQLParser.g:8625:1: rule__WithQuery__Group_7__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group_7__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8629:1: ( ( AS ) )
            // InternalSQLParser.g:8630:1: ( AS )
            {
            // InternalSQLParser.g:8630:1: ( AS )
            // InternalSQLParser.g:8631:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__4"
    // InternalSQLParser.g:8640:1: rule__WithQuery__Group_7__4 : rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 ;
    public final void rule__WithQuery__Group_7__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8644:1: ( rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 )
            // InternalSQLParser.g:8645:2: rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5
            {
            pushFollow(FOLLOW_4);
            rule__WithQuery__Group_7__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4"


    // $ANTLR start "rule__WithQuery__Group_7__4__Impl"
    // InternalSQLParser.g:8652:1: rule__WithQuery__Group_7__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group_7__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8656:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:8657:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:8657:1: ( LeftParenthesis )
            // InternalSQLParser.g:8658:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__5"
    // InternalSQLParser.g:8667:1: rule__WithQuery__Group_7__5 : rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 ;
    public final void rule__WithQuery__Group_7__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8671:1: ( rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 )
            // InternalSQLParser.g:8672:2: rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6
            {
            pushFollow(FOLLOW_10);
            rule__WithQuery__Group_7__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5"


    // $ANTLR start "rule__WithQuery__Group_7__5__Impl"
    // InternalSQLParser.g:8679:1: rule__WithQuery__Group_7__5__Impl : ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) ;
    public final void rule__WithQuery__Group_7__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8683:1: ( ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) )
            // InternalSQLParser.g:8684:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            {
            // InternalSQLParser.g:8684:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            // InternalSQLParser.g:8685:2: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }
            // InternalSQLParser.g:8686:2: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            // InternalSQLParser.g:8686:3: rule__WithQuery__AdditionalQueriesAssignment_7_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalQueriesAssignment_7_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__6"
    // InternalSQLParser.g:8694:1: rule__WithQuery__Group_7__6 : rule__WithQuery__Group_7__6__Impl ;
    public final void rule__WithQuery__Group_7__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8698:1: ( rule__WithQuery__Group_7__6__Impl )
            // InternalSQLParser.g:8699:2: rule__WithQuery__Group_7__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6"


    // $ANTLR start "rule__WithQuery__Group_7__6__Impl"
    // InternalSQLParser.g:8705:1: rule__WithQuery__Group_7__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group_7__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8709:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:8710:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:8710:1: ( RightParenthesis )
            // InternalSQLParser.g:8711:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6__Impl"


    // $ANTLR start "rule__WithColumns__Group__0"
    // InternalSQLParser.g:8721:1: rule__WithColumns__Group__0 : rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 ;
    public final void rule__WithColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8725:1: ( rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 )
            // InternalSQLParser.g:8726:2: rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__WithColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0"


    // $ANTLR start "rule__WithColumns__Group__0__Impl"
    // InternalSQLParser.g:8733:1: rule__WithColumns__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__WithColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8737:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:8738:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:8738:1: ( LeftParenthesis )
            // InternalSQLParser.g:8739:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0__Impl"


    // $ANTLR start "rule__WithColumns__Group__1"
    // InternalSQLParser.g:8748:1: rule__WithColumns__Group__1 : rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 ;
    public final void rule__WithColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8752:1: ( rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 )
            // InternalSQLParser.g:8753:2: rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__WithColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1"


    // $ANTLR start "rule__WithColumns__Group__1__Impl"
    // InternalSQLParser.g:8760:1: rule__WithColumns__Group__1__Impl : ( ruleUsingCols ) ;
    public final void rule__WithColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8764:1: ( ( ruleUsingCols ) )
            // InternalSQLParser.g:8765:1: ( ruleUsingCols )
            {
            // InternalSQLParser.g:8765:1: ( ruleUsingCols )
            // InternalSQLParser.g:8766:2: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1__Impl"


    // $ANTLR start "rule__WithColumns__Group__2"
    // InternalSQLParser.g:8775:1: rule__WithColumns__Group__2 : rule__WithColumns__Group__2__Impl ;
    public final void rule__WithColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8779:1: ( rule__WithColumns__Group__2__Impl )
            // InternalSQLParser.g:8780:2: rule__WithColumns__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2"


    // $ANTLR start "rule__WithColumns__Group__2__Impl"
    // InternalSQLParser.g:8786:1: rule__WithColumns__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__WithColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8790:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:8791:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:8791:1: ( RightParenthesis )
            // InternalSQLParser.g:8792:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2__Impl"


    // $ANTLR start "rule__FetchFirst__Group__0"
    // InternalSQLParser.g:8802:1: rule__FetchFirst__Group__0 : rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 ;
    public final void rule__FetchFirst__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8806:1: ( rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 )
            // InternalSQLParser.g:8807:2: rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__FetchFirst__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0"


    // $ANTLR start "rule__FetchFirst__Group__0__Impl"
    // InternalSQLParser.g:8814:1: rule__FetchFirst__Group__0__Impl : ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) ;
    public final void rule__FetchFirst__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8818:1: ( ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) )
            // InternalSQLParser.g:8819:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            {
            // InternalSQLParser.g:8819:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            // InternalSQLParser.g:8820:2: ( rule__FetchFirst__FetchFirstAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }
            // InternalSQLParser.g:8821:2: ( rule__FetchFirst__FetchFirstAssignment_0 )
            // InternalSQLParser.g:8821:3: rule__FetchFirst__FetchFirstAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__FetchFirstAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0__Impl"


    // $ANTLR start "rule__FetchFirst__Group__1"
    // InternalSQLParser.g:8829:1: rule__FetchFirst__Group__1 : rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 ;
    public final void rule__FetchFirst__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8833:1: ( rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 )
            // InternalSQLParser.g:8834:2: rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__FetchFirst__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1"


    // $ANTLR start "rule__FetchFirst__Group__1__Impl"
    // InternalSQLParser.g:8841:1: rule__FetchFirst__Group__1__Impl : ( ( rule__FetchFirst__RowAssignment_1 ) ) ;
    public final void rule__FetchFirst__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8845:1: ( ( ( rule__FetchFirst__RowAssignment_1 ) ) )
            // InternalSQLParser.g:8846:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            {
            // InternalSQLParser.g:8846:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            // InternalSQLParser.g:8847:2: ( rule__FetchFirst__RowAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }
            // InternalSQLParser.g:8848:2: ( rule__FetchFirst__RowAssignment_1 )
            // InternalSQLParser.g:8848:3: rule__FetchFirst__RowAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1__Impl"


    // $ANTLR start "rule__FetchFirst__Group__2"
    // InternalSQLParser.g:8856:1: rule__FetchFirst__Group__2 : rule__FetchFirst__Group__2__Impl ;
    public final void rule__FetchFirst__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8860:1: ( rule__FetchFirst__Group__2__Impl )
            // InternalSQLParser.g:8861:2: rule__FetchFirst__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2"


    // $ANTLR start "rule__FetchFirst__Group__2__Impl"
    // InternalSQLParser.g:8867:1: rule__FetchFirst__Group__2__Impl : ( ONLY ) ;
    public final void rule__FetchFirst__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8871:1: ( ( ONLY ) )
            // InternalSQLParser.g:8872:1: ( ONLY )
            {
            // InternalSQLParser.g:8872:1: ( ONLY )
            // InternalSQLParser.g:8873:2: ONLY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }
            match(input,ONLY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2__Impl"


    // $ANTLR start "rule__Limit__Group_0__0"
    // InternalSQLParser.g:8883:1: rule__Limit__Group_0__0 : rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 ;
    public final void rule__Limit__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8887:1: ( rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 )
            // InternalSQLParser.g:8888:2: rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1
            {
            pushFollow(FOLLOW_36);
            rule__Limit__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0"


    // $ANTLR start "rule__Limit__Group_0__0__Impl"
    // InternalSQLParser.g:8895:1: rule__Limit__Group_0__0__Impl : ( () ) ;
    public final void rule__Limit__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8899:1: ( ( () ) )
            // InternalSQLParser.g:8900:1: ( () )
            {
            // InternalSQLParser.g:8900:1: ( () )
            // InternalSQLParser.g:8901:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }
            // InternalSQLParser.g:8902:2: ()
            // InternalSQLParser.g:8902:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0__Impl"


    // $ANTLR start "rule__Limit__Group_0__1"
    // InternalSQLParser.g:8910:1: rule__Limit__Group_0__1 : rule__Limit__Group_0__1__Impl ;
    public final void rule__Limit__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8914:1: ( rule__Limit__Group_0__1__Impl )
            // InternalSQLParser.g:8915:2: rule__Limit__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1"


    // $ANTLR start "rule__Limit__Group_0__1__Impl"
    // InternalSQLParser.g:8921:1: rule__Limit__Group_0__1__Impl : ( ALL ) ;
    public final void rule__Limit__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8925:1: ( ( ALL ) )
            // InternalSQLParser.g:8926:1: ( ALL )
            {
            // InternalSQLParser.g:8926:1: ( ALL )
            // InternalSQLParser.g:8927:2: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1__Impl"


    // $ANTLR start "rule__Limit__Group_1__0"
    // InternalSQLParser.g:8937:1: rule__Limit__Group_1__0 : rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 ;
    public final void rule__Limit__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8941:1: ( rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 )
            // InternalSQLParser.g:8942:2: rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Limit__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0"


    // $ANTLR start "rule__Limit__Group_1__0__Impl"
    // InternalSQLParser.g:8949:1: rule__Limit__Group_1__0__Impl : ( ( rule__Limit__L1Assignment_1_0 ) ) ;
    public final void rule__Limit__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8953:1: ( ( ( rule__Limit__L1Assignment_1_0 ) ) )
            // InternalSQLParser.g:8954:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            {
            // InternalSQLParser.g:8954:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            // InternalSQLParser.g:8955:2: ( rule__Limit__L1Assignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }
            // InternalSQLParser.g:8956:2: ( rule__Limit__L1Assignment_1_0 )
            // InternalSQLParser.g:8956:3: rule__Limit__L1Assignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L1Assignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1__1"
    // InternalSQLParser.g:8964:1: rule__Limit__Group_1__1 : rule__Limit__Group_1__1__Impl ;
    public final void rule__Limit__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8968:1: ( rule__Limit__Group_1__1__Impl )
            // InternalSQLParser.g:8969:2: rule__Limit__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1"


    // $ANTLR start "rule__Limit__Group_1__1__Impl"
    // InternalSQLParser.g:8975:1: rule__Limit__Group_1__1__Impl : ( ( rule__Limit__Group_1_1__0 )? ) ;
    public final void rule__Limit__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8979:1: ( ( ( rule__Limit__Group_1_1__0 )? ) )
            // InternalSQLParser.g:8980:1: ( ( rule__Limit__Group_1_1__0 )? )
            {
            // InternalSQLParser.g:8980:1: ( ( rule__Limit__Group_1_1__0 )? )
            // InternalSQLParser.g:8981:2: ( rule__Limit__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8982:2: ( rule__Limit__Group_1_1__0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==Comma) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSQLParser.g:8982:3: rule__Limit__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__0"
    // InternalSQLParser.g:8991:1: rule__Limit__Group_1_1__0 : rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 ;
    public final void rule__Limit__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8995:1: ( rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 )
            // InternalSQLParser.g:8996:2: rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1
            {
            pushFollow(FOLLOW_28);
            rule__Limit__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0"


    // $ANTLR start "rule__Limit__Group_1_1__0__Impl"
    // InternalSQLParser.g:9003:1: rule__Limit__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Limit__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9007:1: ( ( Comma ) )
            // InternalSQLParser.g:9008:1: ( Comma )
            {
            // InternalSQLParser.g:9008:1: ( Comma )
            // InternalSQLParser.g:9009:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__1"
    // InternalSQLParser.g:9018:1: rule__Limit__Group_1_1__1 : rule__Limit__Group_1_1__1__Impl ;
    public final void rule__Limit__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9022:1: ( rule__Limit__Group_1_1__1__Impl )
            // InternalSQLParser.g:9023:2: rule__Limit__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1"


    // $ANTLR start "rule__Limit__Group_1_1__1__Impl"
    // InternalSQLParser.g:9029:1: rule__Limit__Group_1_1__1__Impl : ( ( rule__Limit__L2Assignment_1_1_1 ) ) ;
    public final void rule__Limit__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9033:1: ( ( ( rule__Limit__L2Assignment_1_1_1 ) ) )
            // InternalSQLParser.g:9034:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9034:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            // InternalSQLParser.g:9035:2: ( rule__Limit__L2Assignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }
            // InternalSQLParser.g:9036:2: ( rule__Limit__L2Assignment_1_1_1 )
            // InternalSQLParser.g:9036:3: rule__Limit__L2Assignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L2Assignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1__Impl"


    // $ANTLR start "rule__SelectQuery__Group__0"
    // InternalSQLParser.g:9045:1: rule__SelectQuery__Group__0 : rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 ;
    public final void rule__SelectQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9049:1: ( rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 )
            // InternalSQLParser.g:9050:2: rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__SelectQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0"


    // $ANTLR start "rule__SelectQuery__Group__0__Impl"
    // InternalSQLParser.g:9057:1: rule__SelectQuery__Group__0__Impl : ( ruleSelect ) ;
    public final void rule__SelectQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9061:1: ( ( ruleSelect ) )
            // InternalSQLParser.g:9062:1: ( ruleSelect )
            {
            // InternalSQLParser.g:9062:1: ( ruleSelect )
            // InternalSQLParser.g:9063:2: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0__Impl"


    // $ANTLR start "rule__SelectQuery__Group__1"
    // InternalSQLParser.g:9072:1: rule__SelectQuery__Group__1 : rule__SelectQuery__Group__1__Impl ;
    public final void rule__SelectQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9076:1: ( rule__SelectQuery__Group__1__Impl )
            // InternalSQLParser.g:9077:2: rule__SelectQuery__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1"


    // $ANTLR start "rule__SelectQuery__Group__1__Impl"
    // InternalSQLParser.g:9083:1: rule__SelectQuery__Group__1__Impl : ( ( rule__SelectQuery__OpAssignment_1 )* ) ;
    public final void rule__SelectQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9087:1: ( ( ( rule__SelectQuery__OpAssignment_1 )* ) )
            // InternalSQLParser.g:9088:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            {
            // InternalSQLParser.g:9088:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            // InternalSQLParser.g:9089:2: ( rule__SelectQuery__OpAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:9090:2: ( rule__SelectQuery__OpAssignment_1 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==INTERSECT||LA89_0==EXCEPT||LA89_0==MINUS||LA89_0==UNION) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSQLParser.g:9090:3: rule__SelectQuery__OpAssignment_1
            	    {
            	    pushFollow(FOLLOW_38);
            	    rule__SelectQuery__OpAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__0"
    // InternalSQLParser.g:9099:1: rule__SelectSubSet__Group__0 : rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 ;
    public final void rule__SelectSubSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9103:1: ( rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 )
            // InternalSQLParser.g:9104:2: rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__SelectSubSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0"


    // $ANTLR start "rule__SelectSubSet__Group__0__Impl"
    // InternalSQLParser.g:9111:1: rule__SelectSubSet__Group__0__Impl : ( ( rule__SelectSubSet__OpAssignment_0 ) ) ;
    public final void rule__SelectSubSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9115:1: ( ( ( rule__SelectSubSet__OpAssignment_0 ) ) )
            // InternalSQLParser.g:9116:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            {
            // InternalSQLParser.g:9116:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            // InternalSQLParser.g:9117:2: ( rule__SelectSubSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }
            // InternalSQLParser.g:9118:2: ( rule__SelectSubSet__OpAssignment_0 )
            // InternalSQLParser.g:9118:3: rule__SelectSubSet__OpAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__1"
    // InternalSQLParser.g:9126:1: rule__SelectSubSet__Group__1 : rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 ;
    public final void rule__SelectSubSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9130:1: ( rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 )
            // InternalSQLParser.g:9131:2: rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__SelectSubSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1"


    // $ANTLR start "rule__SelectSubSet__Group__1__Impl"
    // InternalSQLParser.g:9138:1: rule__SelectSubSet__Group__1__Impl : ( ( rule__SelectSubSet__AllAssignment_1 )? ) ;
    public final void rule__SelectSubSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9142:1: ( ( ( rule__SelectSubSet__AllAssignment_1 )? ) )
            // InternalSQLParser.g:9143:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            {
            // InternalSQLParser.g:9143:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            // InternalSQLParser.g:9144:2: ( rule__SelectSubSet__AllAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }
            // InternalSQLParser.g:9145:2: ( rule__SelectSubSet__AllAssignment_1 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==ALL) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSQLParser.g:9145:3: rule__SelectSubSet__AllAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SelectSubSet__AllAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__2"
    // InternalSQLParser.g:9153:1: rule__SelectSubSet__Group__2 : rule__SelectSubSet__Group__2__Impl ;
    public final void rule__SelectSubSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9157:1: ( rule__SelectSubSet__Group__2__Impl )
            // InternalSQLParser.g:9158:2: rule__SelectSubSet__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2"


    // $ANTLR start "rule__SelectSubSet__Group__2__Impl"
    // InternalSQLParser.g:9164:1: rule__SelectSubSet__Group__2__Impl : ( ( rule__SelectSubSet__QueryAssignment_2 ) ) ;
    public final void rule__SelectSubSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9168:1: ( ( ( rule__SelectSubSet__QueryAssignment_2 ) ) )
            // InternalSQLParser.g:9169:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            {
            // InternalSQLParser.g:9169:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            // InternalSQLParser.g:9170:2: ( rule__SelectSubSet__QueryAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }
            // InternalSQLParser.g:9171:2: ( rule__SelectSubSet__QueryAssignment_2 )
            // InternalSQLParser.g:9171:3: rule__SelectSubSet__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__QueryAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__0"
    // InternalSQLParser.g:9180:1: rule__Select__Group__0 : rule__Select__Group__0__Impl rule__Select__Group__1 ;
    public final void rule__Select__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9184:1: ( rule__Select__Group__0__Impl rule__Select__Group__1 )
            // InternalSQLParser.g:9185:2: rule__Select__Group__0__Impl rule__Select__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__Select__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0"


    // $ANTLR start "rule__Select__Group__0__Impl"
    // InternalSQLParser.g:9192:1: rule__Select__Group__0__Impl : ( ( rule__Select__SelectAssignment_0 ) ) ;
    public final void rule__Select__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9196:1: ( ( ( rule__Select__SelectAssignment_0 ) ) )
            // InternalSQLParser.g:9197:1: ( ( rule__Select__SelectAssignment_0 ) )
            {
            // InternalSQLParser.g:9197:1: ( ( rule__Select__SelectAssignment_0 ) )
            // InternalSQLParser.g:9198:2: ( rule__Select__SelectAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }
            // InternalSQLParser.g:9199:2: ( rule__Select__SelectAssignment_0 )
            // InternalSQLParser.g:9199:3: rule__Select__SelectAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Select__SelectAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0__Impl"


    // $ANTLR start "rule__Select__Group__1"
    // InternalSQLParser.g:9207:1: rule__Select__Group__1 : rule__Select__Group__1__Impl rule__Select__Group__2 ;
    public final void rule__Select__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9211:1: ( rule__Select__Group__1__Impl rule__Select__Group__2 )
            // InternalSQLParser.g:9212:2: rule__Select__Group__1__Impl rule__Select__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__Select__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1"


    // $ANTLR start "rule__Select__Group__1__Impl"
    // InternalSQLParser.g:9219:1: rule__Select__Group__1__Impl : ( ( DISTINCT )? ) ;
    public final void rule__Select__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9223:1: ( ( ( DISTINCT )? ) )
            // InternalSQLParser.g:9224:1: ( ( DISTINCT )? )
            {
            // InternalSQLParser.g:9224:1: ( ( DISTINCT )? )
            // InternalSQLParser.g:9225:2: ( DISTINCT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }
            // InternalSQLParser.g:9226:2: ( DISTINCT )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==DISTINCT) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalSQLParser.g:9226:3: DISTINCT
                    {
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1__Impl"


    // $ANTLR start "rule__Select__Group__2"
    // InternalSQLParser.g:9234:1: rule__Select__Group__2 : rule__Select__Group__2__Impl rule__Select__Group__3 ;
    public final void rule__Select__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9238:1: ( rule__Select__Group__2__Impl rule__Select__Group__3 )
            // InternalSQLParser.g:9239:2: rule__Select__Group__2__Impl rule__Select__Group__3
            {
            pushFollow(FOLLOW_40);
            rule__Select__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2"


    // $ANTLR start "rule__Select__Group__2__Impl"
    // InternalSQLParser.g:9246:1: rule__Select__Group__2__Impl : ( ( rule__Select__Group_2__0 )? ) ;
    public final void rule__Select__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9250:1: ( ( ( rule__Select__Group_2__0 )? ) )
            // InternalSQLParser.g:9251:1: ( ( rule__Select__Group_2__0 )? )
            {
            // InternalSQLParser.g:9251:1: ( ( rule__Select__Group_2__0 )? )
            // InternalSQLParser.g:9252:2: ( rule__Select__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:9253:2: ( rule__Select__Group_2__0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==TOP) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalSQLParser.g:9253:3: rule__Select__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__3"
    // InternalSQLParser.g:9261:1: rule__Select__Group__3 : rule__Select__Group__3__Impl rule__Select__Group__4 ;
    public final void rule__Select__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9265:1: ( rule__Select__Group__3__Impl rule__Select__Group__4 )
            // InternalSQLParser.g:9266:2: rule__Select__Group__3__Impl rule__Select__Group__4
            {
            pushFollow(FOLLOW_41);
            rule__Select__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3"


    // $ANTLR start "rule__Select__Group__3__Impl"
    // InternalSQLParser.g:9273:1: rule__Select__Group__3__Impl : ( ( rule__Select__ColsAssignment_3 ) ) ;
    public final void rule__Select__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9277:1: ( ( ( rule__Select__ColsAssignment_3 ) ) )
            // InternalSQLParser.g:9278:1: ( ( rule__Select__ColsAssignment_3 ) )
            {
            // InternalSQLParser.g:9278:1: ( ( rule__Select__ColsAssignment_3 ) )
            // InternalSQLParser.g:9279:2: ( rule__Select__ColsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }
            // InternalSQLParser.g:9280:2: ( rule__Select__ColsAssignment_3 )
            // InternalSQLParser.g:9280:3: rule__Select__ColsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Select__ColsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3__Impl"


    // $ANTLR start "rule__Select__Group__4"
    // InternalSQLParser.g:9288:1: rule__Select__Group__4 : rule__Select__Group__4__Impl rule__Select__Group__5 ;
    public final void rule__Select__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9292:1: ( rule__Select__Group__4__Impl rule__Select__Group__5 )
            // InternalSQLParser.g:9293:2: rule__Select__Group__4__Impl rule__Select__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__Select__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4"


    // $ANTLR start "rule__Select__Group__4__Impl"
    // InternalSQLParser.g:9300:1: rule__Select__Group__4__Impl : ( FROM ) ;
    public final void rule__Select__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9304:1: ( ( FROM ) )
            // InternalSQLParser.g:9305:1: ( FROM )
            {
            // InternalSQLParser.g:9305:1: ( FROM )
            // InternalSQLParser.g:9306:2: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4__Impl"


    // $ANTLR start "rule__Select__Group__5"
    // InternalSQLParser.g:9315:1: rule__Select__Group__5 : rule__Select__Group__5__Impl rule__Select__Group__6 ;
    public final void rule__Select__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9319:1: ( rule__Select__Group__5__Impl rule__Select__Group__6 )
            // InternalSQLParser.g:9320:2: rule__Select__Group__5__Impl rule__Select__Group__6
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5"


    // $ANTLR start "rule__Select__Group__5__Impl"
    // InternalSQLParser.g:9327:1: rule__Select__Group__5__Impl : ( ( rule__Select__TblAssignment_5 ) ) ;
    public final void rule__Select__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9331:1: ( ( ( rule__Select__TblAssignment_5 ) ) )
            // InternalSQLParser.g:9332:1: ( ( rule__Select__TblAssignment_5 ) )
            {
            // InternalSQLParser.g:9332:1: ( ( rule__Select__TblAssignment_5 ) )
            // InternalSQLParser.g:9333:2: ( rule__Select__TblAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }
            // InternalSQLParser.g:9334:2: ( rule__Select__TblAssignment_5 )
            // InternalSQLParser.g:9334:3: rule__Select__TblAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Select__TblAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5__Impl"


    // $ANTLR start "rule__Select__Group__6"
    // InternalSQLParser.g:9342:1: rule__Select__Group__6 : rule__Select__Group__6__Impl rule__Select__Group__7 ;
    public final void rule__Select__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9346:1: ( rule__Select__Group__6__Impl rule__Select__Group__7 )
            // InternalSQLParser.g:9347:2: rule__Select__Group__6__Impl rule__Select__Group__7
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6"


    // $ANTLR start "rule__Select__Group__6__Impl"
    // InternalSQLParser.g:9354:1: rule__Select__Group__6__Impl : ( ( rule__Select__Group_6__0 )? ) ;
    public final void rule__Select__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9358:1: ( ( ( rule__Select__Group_6__0 )? ) )
            // InternalSQLParser.g:9359:1: ( ( rule__Select__Group_6__0 )? )
            {
            // InternalSQLParser.g:9359:1: ( ( rule__Select__Group_6__0 )? )
            // InternalSQLParser.g:9360:2: ( rule__Select__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_6()); 
            }
            // InternalSQLParser.g:9361:2: ( rule__Select__Group_6__0 )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==WHERE) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalSQLParser.g:9361:3: rule__Select__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6__Impl"


    // $ANTLR start "rule__Select__Group__7"
    // InternalSQLParser.g:9369:1: rule__Select__Group__7 : rule__Select__Group__7__Impl rule__Select__Group__8 ;
    public final void rule__Select__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9373:1: ( rule__Select__Group__7__Impl rule__Select__Group__8 )
            // InternalSQLParser.g:9374:2: rule__Select__Group__7__Impl rule__Select__Group__8
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7"


    // $ANTLR start "rule__Select__Group__7__Impl"
    // InternalSQLParser.g:9381:1: rule__Select__Group__7__Impl : ( ( rule__Select__Group_7__0 )? ) ;
    public final void rule__Select__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9385:1: ( ( ( rule__Select__Group_7__0 )? ) )
            // InternalSQLParser.g:9386:1: ( ( rule__Select__Group_7__0 )? )
            {
            // InternalSQLParser.g:9386:1: ( ( rule__Select__Group_7__0 )? )
            // InternalSQLParser.g:9387:2: ( rule__Select__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_7()); 
            }
            // InternalSQLParser.g:9388:2: ( rule__Select__Group_7__0 )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==GROUP) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSQLParser.g:9388:3: rule__Select__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7__Impl"


    // $ANTLR start "rule__Select__Group__8"
    // InternalSQLParser.g:9396:1: rule__Select__Group__8 : rule__Select__Group__8__Impl rule__Select__Group__9 ;
    public final void rule__Select__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9400:1: ( rule__Select__Group__8__Impl rule__Select__Group__9 )
            // InternalSQLParser.g:9401:2: rule__Select__Group__8__Impl rule__Select__Group__9
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8"


    // $ANTLR start "rule__Select__Group__8__Impl"
    // InternalSQLParser.g:9408:1: rule__Select__Group__8__Impl : ( ( rule__Select__Group_8__0 )? ) ;
    public final void rule__Select__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9412:1: ( ( ( rule__Select__Group_8__0 )? ) )
            // InternalSQLParser.g:9413:1: ( ( rule__Select__Group_8__0 )? )
            {
            // InternalSQLParser.g:9413:1: ( ( rule__Select__Group_8__0 )? )
            // InternalSQLParser.g:9414:2: ( rule__Select__Group_8__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_8()); 
            }
            // InternalSQLParser.g:9415:2: ( rule__Select__Group_8__0 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==HAVING) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalSQLParser.g:9415:3: rule__Select__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8__Impl"


    // $ANTLR start "rule__Select__Group__9"
    // InternalSQLParser.g:9423:1: rule__Select__Group__9 : rule__Select__Group__9__Impl rule__Select__Group__10 ;
    public final void rule__Select__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9427:1: ( rule__Select__Group__9__Impl rule__Select__Group__10 )
            // InternalSQLParser.g:9428:2: rule__Select__Group__9__Impl rule__Select__Group__10
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9"


    // $ANTLR start "rule__Select__Group__9__Impl"
    // InternalSQLParser.g:9435:1: rule__Select__Group__9__Impl : ( ( rule__Select__Group_9__0 )? ) ;
    public final void rule__Select__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9439:1: ( ( ( rule__Select__Group_9__0 )? ) )
            // InternalSQLParser.g:9440:1: ( ( rule__Select__Group_9__0 )? )
            {
            // InternalSQLParser.g:9440:1: ( ( rule__Select__Group_9__0 )? )
            // InternalSQLParser.g:9441:2: ( rule__Select__Group_9__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_9()); 
            }
            // InternalSQLParser.g:9442:2: ( rule__Select__Group_9__0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==ORDER) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalSQLParser.g:9442:3: rule__Select__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9__Impl"


    // $ANTLR start "rule__Select__Group__10"
    // InternalSQLParser.g:9450:1: rule__Select__Group__10 : rule__Select__Group__10__Impl rule__Select__Group__11 ;
    public final void rule__Select__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9454:1: ( rule__Select__Group__10__Impl rule__Select__Group__11 )
            // InternalSQLParser.g:9455:2: rule__Select__Group__10__Impl rule__Select__Group__11
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10"


    // $ANTLR start "rule__Select__Group__10__Impl"
    // InternalSQLParser.g:9462:1: rule__Select__Group__10__Impl : ( ( rule__Select__Group_10__0 )? ) ;
    public final void rule__Select__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9466:1: ( ( ( rule__Select__Group_10__0 )? ) )
            // InternalSQLParser.g:9467:1: ( ( rule__Select__Group_10__0 )? )
            {
            // InternalSQLParser.g:9467:1: ( ( rule__Select__Group_10__0 )? )
            // InternalSQLParser.g:9468:2: ( rule__Select__Group_10__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_10()); 
            }
            // InternalSQLParser.g:9469:2: ( rule__Select__Group_10__0 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==LIMIT) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalSQLParser.g:9469:3: rule__Select__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_10__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10__Impl"


    // $ANTLR start "rule__Select__Group__11"
    // InternalSQLParser.g:9477:1: rule__Select__Group__11 : rule__Select__Group__11__Impl rule__Select__Group__12 ;
    public final void rule__Select__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9481:1: ( rule__Select__Group__11__Impl rule__Select__Group__12 )
            // InternalSQLParser.g:9482:2: rule__Select__Group__11__Impl rule__Select__Group__12
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__12();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11"


    // $ANTLR start "rule__Select__Group__11__Impl"
    // InternalSQLParser.g:9489:1: rule__Select__Group__11__Impl : ( ( rule__Select__Group_11__0 )? ) ;
    public final void rule__Select__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9493:1: ( ( ( rule__Select__Group_11__0 )? ) )
            // InternalSQLParser.g:9494:1: ( ( rule__Select__Group_11__0 )? )
            {
            // InternalSQLParser.g:9494:1: ( ( rule__Select__Group_11__0 )? )
            // InternalSQLParser.g:9495:2: ( rule__Select__Group_11__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_11()); 
            }
            // InternalSQLParser.g:9496:2: ( rule__Select__Group_11__0 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==OFFSET) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalSQLParser.g:9496:3: rule__Select__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11__Impl"


    // $ANTLR start "rule__Select__Group__12"
    // InternalSQLParser.g:9504:1: rule__Select__Group__12 : rule__Select__Group__12__Impl ;
    public final void rule__Select__Group__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9508:1: ( rule__Select__Group__12__Impl )
            // InternalSQLParser.g:9509:2: rule__Select__Group__12__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__12__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12"


    // $ANTLR start "rule__Select__Group__12__Impl"
    // InternalSQLParser.g:9515:1: rule__Select__Group__12__Impl : ( ( rule__Select__Group_12__0 )? ) ;
    public final void rule__Select__Group__12__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9519:1: ( ( ( rule__Select__Group_12__0 )? ) )
            // InternalSQLParser.g:9520:1: ( ( rule__Select__Group_12__0 )? )
            {
            // InternalSQLParser.g:9520:1: ( ( rule__Select__Group_12__0 )? )
            // InternalSQLParser.g:9521:2: ( rule__Select__Group_12__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_12()); 
            }
            // InternalSQLParser.g:9522:2: ( rule__Select__Group_12__0 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==FETCH) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSQLParser.g:9522:3: rule__Select__Group_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_12__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_12()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12__Impl"


    // $ANTLR start "rule__Select__Group_2__0"
    // InternalSQLParser.g:9531:1: rule__Select__Group_2__0 : rule__Select__Group_2__0__Impl rule__Select__Group_2__1 ;
    public final void rule__Select__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9535:1: ( rule__Select__Group_2__0__Impl rule__Select__Group_2__1 )
            // InternalSQLParser.g:9536:2: rule__Select__Group_2__0__Impl rule__Select__Group_2__1
            {
            pushFollow(FOLLOW_43);
            rule__Select__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0"


    // $ANTLR start "rule__Select__Group_2__0__Impl"
    // InternalSQLParser.g:9543:1: rule__Select__Group_2__0__Impl : ( TOP ) ;
    public final void rule__Select__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9547:1: ( ( TOP ) )
            // InternalSQLParser.g:9548:1: ( TOP )
            {
            // InternalSQLParser.g:9548:1: ( TOP )
            // InternalSQLParser.g:9549:2: TOP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }
            match(input,TOP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0__Impl"


    // $ANTLR start "rule__Select__Group_2__1"
    // InternalSQLParser.g:9558:1: rule__Select__Group_2__1 : rule__Select__Group_2__1__Impl rule__Select__Group_2__2 ;
    public final void rule__Select__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9562:1: ( rule__Select__Group_2__1__Impl rule__Select__Group_2__2 )
            // InternalSQLParser.g:9563:2: rule__Select__Group_2__1__Impl rule__Select__Group_2__2
            {
            pushFollow(FOLLOW_44);
            rule__Select__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1"


    // $ANTLR start "rule__Select__Group_2__1__Impl"
    // InternalSQLParser.g:9570:1: rule__Select__Group_2__1__Impl : ( ( rule__Select__Alternatives_2_1 ) ) ;
    public final void rule__Select__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9574:1: ( ( ( rule__Select__Alternatives_2_1 ) ) )
            // InternalSQLParser.g:9575:1: ( ( rule__Select__Alternatives_2_1 ) )
            {
            // InternalSQLParser.g:9575:1: ( ( rule__Select__Alternatives_2_1 ) )
            // InternalSQLParser.g:9576:2: ( rule__Select__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }
            // InternalSQLParser.g:9577:2: ( rule__Select__Alternatives_2_1 )
            // InternalSQLParser.g:9577:3: rule__Select__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1__Impl"


    // $ANTLR start "rule__Select__Group_2__2"
    // InternalSQLParser.g:9585:1: rule__Select__Group_2__2 : rule__Select__Group_2__2__Impl rule__Select__Group_2__3 ;
    public final void rule__Select__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9589:1: ( rule__Select__Group_2__2__Impl rule__Select__Group_2__3 )
            // InternalSQLParser.g:9590:2: rule__Select__Group_2__2__Impl rule__Select__Group_2__3
            {
            pushFollow(FOLLOW_44);
            rule__Select__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2"


    // $ANTLR start "rule__Select__Group_2__2__Impl"
    // InternalSQLParser.g:9597:1: rule__Select__Group_2__2__Impl : ( ( PERCENT )? ) ;
    public final void rule__Select__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9601:1: ( ( ( PERCENT )? ) )
            // InternalSQLParser.g:9602:1: ( ( PERCENT )? )
            {
            // InternalSQLParser.g:9602:1: ( ( PERCENT )? )
            // InternalSQLParser.g:9603:2: ( PERCENT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }
            // InternalSQLParser.g:9604:2: ( PERCENT )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==PERCENT) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSQLParser.g:9604:3: PERCENT
                    {
                    match(input,PERCENT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2__Impl"


    // $ANTLR start "rule__Select__Group_2__3"
    // InternalSQLParser.g:9612:1: rule__Select__Group_2__3 : rule__Select__Group_2__3__Impl ;
    public final void rule__Select__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9616:1: ( rule__Select__Group_2__3__Impl )
            // InternalSQLParser.g:9617:2: rule__Select__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3"


    // $ANTLR start "rule__Select__Group_2__3__Impl"
    // InternalSQLParser.g:9623:1: rule__Select__Group_2__3__Impl : ( ( rule__Select__Group_2_3__0 )? ) ;
    public final void rule__Select__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9627:1: ( ( ( rule__Select__Group_2_3__0 )? ) )
            // InternalSQLParser.g:9628:1: ( ( rule__Select__Group_2_3__0 )? )
            {
            // InternalSQLParser.g:9628:1: ( ( rule__Select__Group_2_3__0 )? )
            // InternalSQLParser.g:9629:2: ( rule__Select__Group_2_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }
            // InternalSQLParser.g:9630:2: ( rule__Select__Group_2_3__0 )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==WITH) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalSQLParser.g:9630:3: rule__Select__Group_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3__Impl"


    // $ANTLR start "rule__Select__Group_2_3__0"
    // InternalSQLParser.g:9639:1: rule__Select__Group_2_3__0 : rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 ;
    public final void rule__Select__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9643:1: ( rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 )
            // InternalSQLParser.g:9644:2: rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1
            {
            pushFollow(FOLLOW_45);
            rule__Select__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0"


    // $ANTLR start "rule__Select__Group_2_3__0__Impl"
    // InternalSQLParser.g:9651:1: rule__Select__Group_2_3__0__Impl : ( WITH ) ;
    public final void rule__Select__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9655:1: ( ( WITH ) )
            // InternalSQLParser.g:9656:1: ( WITH )
            {
            // InternalSQLParser.g:9656:1: ( WITH )
            // InternalSQLParser.g:9657:2: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0__Impl"


    // $ANTLR start "rule__Select__Group_2_3__1"
    // InternalSQLParser.g:9666:1: rule__Select__Group_2_3__1 : rule__Select__Group_2_3__1__Impl ;
    public final void rule__Select__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9670:1: ( rule__Select__Group_2_3__1__Impl )
            // InternalSQLParser.g:9671:2: rule__Select__Group_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1"


    // $ANTLR start "rule__Select__Group_2_3__1__Impl"
    // InternalSQLParser.g:9677:1: rule__Select__Group_2_3__1__Impl : ( TIES ) ;
    public final void rule__Select__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9681:1: ( ( TIES ) )
            // InternalSQLParser.g:9682:1: ( TIES )
            {
            // InternalSQLParser.g:9682:1: ( TIES )
            // InternalSQLParser.g:9683:2: TIES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }
            match(input,TIES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1__Impl"


    // $ANTLR start "rule__Select__Group_6__0"
    // InternalSQLParser.g:9693:1: rule__Select__Group_6__0 : rule__Select__Group_6__0__Impl rule__Select__Group_6__1 ;
    public final void rule__Select__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9697:1: ( rule__Select__Group_6__0__Impl rule__Select__Group_6__1 )
            // InternalSQLParser.g:9698:2: rule__Select__Group_6__0__Impl rule__Select__Group_6__1
            {
            pushFollow(FOLLOW_46);
            rule__Select__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0"


    // $ANTLR start "rule__Select__Group_6__0__Impl"
    // InternalSQLParser.g:9705:1: rule__Select__Group_6__0__Impl : ( WHERE ) ;
    public final void rule__Select__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9709:1: ( ( WHERE ) )
            // InternalSQLParser.g:9710:1: ( WHERE )
            {
            // InternalSQLParser.g:9710:1: ( WHERE )
            // InternalSQLParser.g:9711:2: WHERE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }
            match(input,WHERE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0__Impl"


    // $ANTLR start "rule__Select__Group_6__1"
    // InternalSQLParser.g:9720:1: rule__Select__Group_6__1 : rule__Select__Group_6__1__Impl ;
    public final void rule__Select__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9724:1: ( rule__Select__Group_6__1__Impl )
            // InternalSQLParser.g:9725:2: rule__Select__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1"


    // $ANTLR start "rule__Select__Group_6__1__Impl"
    // InternalSQLParser.g:9731:1: rule__Select__Group_6__1__Impl : ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) ;
    public final void rule__Select__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9735:1: ( ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) )
            // InternalSQLParser.g:9736:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            {
            // InternalSQLParser.g:9736:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            // InternalSQLParser.g:9737:2: ( rule__Select__WhereExpressionAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }
            // InternalSQLParser.g:9738:2: ( rule__Select__WhereExpressionAssignment_6_1 )
            // InternalSQLParser.g:9738:3: rule__Select__WhereExpressionAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__WhereExpressionAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1__Impl"


    // $ANTLR start "rule__Select__Group_7__0"
    // InternalSQLParser.g:9747:1: rule__Select__Group_7__0 : rule__Select__Group_7__0__Impl rule__Select__Group_7__1 ;
    public final void rule__Select__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9751:1: ( rule__Select__Group_7__0__Impl rule__Select__Group_7__1 )
            // InternalSQLParser.g:9752:2: rule__Select__Group_7__0__Impl rule__Select__Group_7__1
            {
            pushFollow(FOLLOW_47);
            rule__Select__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0"


    // $ANTLR start "rule__Select__Group_7__0__Impl"
    // InternalSQLParser.g:9759:1: rule__Select__Group_7__0__Impl : ( GROUP ) ;
    public final void rule__Select__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9763:1: ( ( GROUP ) )
            // InternalSQLParser.g:9764:1: ( GROUP )
            {
            // InternalSQLParser.g:9764:1: ( GROUP )
            // InternalSQLParser.g:9765:2: GROUP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }
            match(input,GROUP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0__Impl"


    // $ANTLR start "rule__Select__Group_7__1"
    // InternalSQLParser.g:9774:1: rule__Select__Group_7__1 : rule__Select__Group_7__1__Impl rule__Select__Group_7__2 ;
    public final void rule__Select__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9778:1: ( rule__Select__Group_7__1__Impl rule__Select__Group_7__2 )
            // InternalSQLParser.g:9779:2: rule__Select__Group_7__1__Impl rule__Select__Group_7__2
            {
            pushFollow(FOLLOW_48);
            rule__Select__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1"


    // $ANTLR start "rule__Select__Group_7__1__Impl"
    // InternalSQLParser.g:9786:1: rule__Select__Group_7__1__Impl : ( BY ) ;
    public final void rule__Select__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9790:1: ( ( BY ) )
            // InternalSQLParser.g:9791:1: ( BY )
            {
            // InternalSQLParser.g:9791:1: ( BY )
            // InternalSQLParser.g:9792:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1__Impl"


    // $ANTLR start "rule__Select__Group_7__2"
    // InternalSQLParser.g:9801:1: rule__Select__Group_7__2 : rule__Select__Group_7__2__Impl ;
    public final void rule__Select__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9805:1: ( rule__Select__Group_7__2__Impl )
            // InternalSQLParser.g:9806:2: rule__Select__Group_7__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2"


    // $ANTLR start "rule__Select__Group_7__2__Impl"
    // InternalSQLParser.g:9812:1: rule__Select__Group_7__2__Impl : ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) ;
    public final void rule__Select__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9816:1: ( ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) )
            // InternalSQLParser.g:9817:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            {
            // InternalSQLParser.g:9817:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            // InternalSQLParser.g:9818:2: ( rule__Select__GroupByEntryAssignment_7_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }
            // InternalSQLParser.g:9819:2: ( rule__Select__GroupByEntryAssignment_7_2 )
            // InternalSQLParser.g:9819:3: rule__Select__GroupByEntryAssignment_7_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__GroupByEntryAssignment_7_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2__Impl"


    // $ANTLR start "rule__Select__Group_8__0"
    // InternalSQLParser.g:9828:1: rule__Select__Group_8__0 : rule__Select__Group_8__0__Impl rule__Select__Group_8__1 ;
    public final void rule__Select__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9832:1: ( rule__Select__Group_8__0__Impl rule__Select__Group_8__1 )
            // InternalSQLParser.g:9833:2: rule__Select__Group_8__0__Impl rule__Select__Group_8__1
            {
            pushFollow(FOLLOW_46);
            rule__Select__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0"


    // $ANTLR start "rule__Select__Group_8__0__Impl"
    // InternalSQLParser.g:9840:1: rule__Select__Group_8__0__Impl : ( HAVING ) ;
    public final void rule__Select__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9844:1: ( ( HAVING ) )
            // InternalSQLParser.g:9845:1: ( HAVING )
            {
            // InternalSQLParser.g:9845:1: ( HAVING )
            // InternalSQLParser.g:9846:2: HAVING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }
            match(input,HAVING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0__Impl"


    // $ANTLR start "rule__Select__Group_8__1"
    // InternalSQLParser.g:9855:1: rule__Select__Group_8__1 : rule__Select__Group_8__1__Impl ;
    public final void rule__Select__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9859:1: ( rule__Select__Group_8__1__Impl )
            // InternalSQLParser.g:9860:2: rule__Select__Group_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1"


    // $ANTLR start "rule__Select__Group_8__1__Impl"
    // InternalSQLParser.g:9866:1: rule__Select__Group_8__1__Impl : ( ( rule__Select__HavingEntryAssignment_8_1 ) ) ;
    public final void rule__Select__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9870:1: ( ( ( rule__Select__HavingEntryAssignment_8_1 ) ) )
            // InternalSQLParser.g:9871:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            {
            // InternalSQLParser.g:9871:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            // InternalSQLParser.g:9872:2: ( rule__Select__HavingEntryAssignment_8_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }
            // InternalSQLParser.g:9873:2: ( rule__Select__HavingEntryAssignment_8_1 )
            // InternalSQLParser.g:9873:3: rule__Select__HavingEntryAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__HavingEntryAssignment_8_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1__Impl"


    // $ANTLR start "rule__Select__Group_9__0"
    // InternalSQLParser.g:9882:1: rule__Select__Group_9__0 : rule__Select__Group_9__0__Impl rule__Select__Group_9__1 ;
    public final void rule__Select__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9886:1: ( rule__Select__Group_9__0__Impl rule__Select__Group_9__1 )
            // InternalSQLParser.g:9887:2: rule__Select__Group_9__0__Impl rule__Select__Group_9__1
            {
            pushFollow(FOLLOW_47);
            rule__Select__Group_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0"


    // $ANTLR start "rule__Select__Group_9__0__Impl"
    // InternalSQLParser.g:9894:1: rule__Select__Group_9__0__Impl : ( ORDER ) ;
    public final void rule__Select__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9898:1: ( ( ORDER ) )
            // InternalSQLParser.g:9899:1: ( ORDER )
            {
            // InternalSQLParser.g:9899:1: ( ORDER )
            // InternalSQLParser.g:9900:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0__Impl"


    // $ANTLR start "rule__Select__Group_9__1"
    // InternalSQLParser.g:9909:1: rule__Select__Group_9__1 : rule__Select__Group_9__1__Impl rule__Select__Group_9__2 ;
    public final void rule__Select__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9913:1: ( rule__Select__Group_9__1__Impl rule__Select__Group_9__2 )
            // InternalSQLParser.g:9914:2: rule__Select__Group_9__1__Impl rule__Select__Group_9__2
            {
            pushFollow(FOLLOW_48);
            rule__Select__Group_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1"


    // $ANTLR start "rule__Select__Group_9__1__Impl"
    // InternalSQLParser.g:9921:1: rule__Select__Group_9__1__Impl : ( BY ) ;
    public final void rule__Select__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9925:1: ( ( BY ) )
            // InternalSQLParser.g:9926:1: ( BY )
            {
            // InternalSQLParser.g:9926:1: ( BY )
            // InternalSQLParser.g:9927:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1__Impl"


    // $ANTLR start "rule__Select__Group_9__2"
    // InternalSQLParser.g:9936:1: rule__Select__Group_9__2 : rule__Select__Group_9__2__Impl ;
    public final void rule__Select__Group_9__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9940:1: ( rule__Select__Group_9__2__Impl )
            // InternalSQLParser.g:9941:2: rule__Select__Group_9__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2"


    // $ANTLR start "rule__Select__Group_9__2__Impl"
    // InternalSQLParser.g:9947:1: rule__Select__Group_9__2__Impl : ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) ;
    public final void rule__Select__Group_9__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9951:1: ( ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) )
            // InternalSQLParser.g:9952:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            {
            // InternalSQLParser.g:9952:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            // InternalSQLParser.g:9953:2: ( rule__Select__OrderByEntryAssignment_9_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }
            // InternalSQLParser.g:9954:2: ( rule__Select__OrderByEntryAssignment_9_2 )
            // InternalSQLParser.g:9954:3: rule__Select__OrderByEntryAssignment_9_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__OrderByEntryAssignment_9_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2__Impl"


    // $ANTLR start "rule__Select__Group_10__0"
    // InternalSQLParser.g:9963:1: rule__Select__Group_10__0 : rule__Select__Group_10__0__Impl rule__Select__Group_10__1 ;
    public final void rule__Select__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9967:1: ( rule__Select__Group_10__0__Impl rule__Select__Group_10__1 )
            // InternalSQLParser.g:9968:2: rule__Select__Group_10__0__Impl rule__Select__Group_10__1
            {
            pushFollow(FOLLOW_49);
            rule__Select__Group_10__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0"


    // $ANTLR start "rule__Select__Group_10__0__Impl"
    // InternalSQLParser.g:9975:1: rule__Select__Group_10__0__Impl : ( LIMIT ) ;
    public final void rule__Select__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9979:1: ( ( LIMIT ) )
            // InternalSQLParser.g:9980:1: ( LIMIT )
            {
            // InternalSQLParser.g:9980:1: ( LIMIT )
            // InternalSQLParser.g:9981:2: LIMIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }
            match(input,LIMIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0__Impl"


    // $ANTLR start "rule__Select__Group_10__1"
    // InternalSQLParser.g:9990:1: rule__Select__Group_10__1 : rule__Select__Group_10__1__Impl ;
    public final void rule__Select__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9994:1: ( rule__Select__Group_10__1__Impl )
            // InternalSQLParser.g:9995:2: rule__Select__Group_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1"


    // $ANTLR start "rule__Select__Group_10__1__Impl"
    // InternalSQLParser.g:10001:1: rule__Select__Group_10__1__Impl : ( ( rule__Select__LimAssignment_10_1 ) ) ;
    public final void rule__Select__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10005:1: ( ( ( rule__Select__LimAssignment_10_1 ) ) )
            // InternalSQLParser.g:10006:1: ( ( rule__Select__LimAssignment_10_1 ) )
            {
            // InternalSQLParser.g:10006:1: ( ( rule__Select__LimAssignment_10_1 ) )
            // InternalSQLParser.g:10007:2: ( rule__Select__LimAssignment_10_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }
            // InternalSQLParser.g:10008:2: ( rule__Select__LimAssignment_10_1 )
            // InternalSQLParser.g:10008:3: rule__Select__LimAssignment_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__LimAssignment_10_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1__Impl"


    // $ANTLR start "rule__Select__Group_11__0"
    // InternalSQLParser.g:10017:1: rule__Select__Group_11__0 : rule__Select__Group_11__0__Impl rule__Select__Group_11__1 ;
    public final void rule__Select__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10021:1: ( rule__Select__Group_11__0__Impl rule__Select__Group_11__1 )
            // InternalSQLParser.g:10022:2: rule__Select__Group_11__0__Impl rule__Select__Group_11__1
            {
            pushFollow(FOLLOW_50);
            rule__Select__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0"


    // $ANTLR start "rule__Select__Group_11__0__Impl"
    // InternalSQLParser.g:10029:1: rule__Select__Group_11__0__Impl : ( OFFSET ) ;
    public final void rule__Select__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10033:1: ( ( OFFSET ) )
            // InternalSQLParser.g:10034:1: ( OFFSET )
            {
            // InternalSQLParser.g:10034:1: ( OFFSET )
            // InternalSQLParser.g:10035:2: OFFSET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }
            match(input,OFFSET,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0__Impl"


    // $ANTLR start "rule__Select__Group_11__1"
    // InternalSQLParser.g:10044:1: rule__Select__Group_11__1 : rule__Select__Group_11__1__Impl ;
    public final void rule__Select__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10048:1: ( rule__Select__Group_11__1__Impl )
            // InternalSQLParser.g:10049:2: rule__Select__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1"


    // $ANTLR start "rule__Select__Group_11__1__Impl"
    // InternalSQLParser.g:10055:1: rule__Select__Group_11__1__Impl : ( ( rule__Select__OffsetAssignment_11_1 ) ) ;
    public final void rule__Select__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10059:1: ( ( ( rule__Select__OffsetAssignment_11_1 ) ) )
            // InternalSQLParser.g:10060:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            {
            // InternalSQLParser.g:10060:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            // InternalSQLParser.g:10061:2: ( rule__Select__OffsetAssignment_11_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }
            // InternalSQLParser.g:10062:2: ( rule__Select__OffsetAssignment_11_1 )
            // InternalSQLParser.g:10062:3: rule__Select__OffsetAssignment_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__OffsetAssignment_11_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1__Impl"


    // $ANTLR start "rule__Select__Group_12__0"
    // InternalSQLParser.g:10071:1: rule__Select__Group_12__0 : rule__Select__Group_12__0__Impl rule__Select__Group_12__1 ;
    public final void rule__Select__Group_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10075:1: ( rule__Select__Group_12__0__Impl rule__Select__Group_12__1 )
            // InternalSQLParser.g:10076:2: rule__Select__Group_12__0__Impl rule__Select__Group_12__1
            {
            pushFollow(FOLLOW_51);
            rule__Select__Group_12__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0"


    // $ANTLR start "rule__Select__Group_12__0__Impl"
    // InternalSQLParser.g:10083:1: rule__Select__Group_12__0__Impl : ( FETCH ) ;
    public final void rule__Select__Group_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10087:1: ( ( FETCH ) )
            // InternalSQLParser.g:10088:1: ( FETCH )
            {
            // InternalSQLParser.g:10088:1: ( FETCH )
            // InternalSQLParser.g:10089:2: FETCH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }
            match(input,FETCH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0__Impl"


    // $ANTLR start "rule__Select__Group_12__1"
    // InternalSQLParser.g:10098:1: rule__Select__Group_12__1 : rule__Select__Group_12__1__Impl rule__Select__Group_12__2 ;
    public final void rule__Select__Group_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10102:1: ( rule__Select__Group_12__1__Impl rule__Select__Group_12__2 )
            // InternalSQLParser.g:10103:2: rule__Select__Group_12__1__Impl rule__Select__Group_12__2
            {
            pushFollow(FOLLOW_28);
            rule__Select__Group_12__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1"


    // $ANTLR start "rule__Select__Group_12__1__Impl"
    // InternalSQLParser.g:10110:1: rule__Select__Group_12__1__Impl : ( FIRST ) ;
    public final void rule__Select__Group_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10114:1: ( ( FIRST ) )
            // InternalSQLParser.g:10115:1: ( FIRST )
            {
            // InternalSQLParser.g:10115:1: ( FIRST )
            // InternalSQLParser.g:10116:2: FIRST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }
            match(input,FIRST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1__Impl"


    // $ANTLR start "rule__Select__Group_12__2"
    // InternalSQLParser.g:10125:1: rule__Select__Group_12__2 : rule__Select__Group_12__2__Impl ;
    public final void rule__Select__Group_12__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10129:1: ( rule__Select__Group_12__2__Impl )
            // InternalSQLParser.g:10130:2: rule__Select__Group_12__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2"


    // $ANTLR start "rule__Select__Group_12__2__Impl"
    // InternalSQLParser.g:10136:1: rule__Select__Group_12__2__Impl : ( ( rule__Select__FetchFirstAssignment_12_2 ) ) ;
    public final void rule__Select__Group_12__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10140:1: ( ( ( rule__Select__FetchFirstAssignment_12_2 ) ) )
            // InternalSQLParser.g:10141:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            {
            // InternalSQLParser.g:10141:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            // InternalSQLParser.g:10142:2: ( rule__Select__FetchFirstAssignment_12_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }
            // InternalSQLParser.g:10143:2: ( rule__Select__FetchFirstAssignment_12_2 )
            // InternalSQLParser.g:10143:3: rule__Select__FetchFirstAssignment_12_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__FetchFirstAssignment_12_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2__Impl"


    // $ANTLR start "rule__Columns__Group__0"
    // InternalSQLParser.g:10152:1: rule__Columns__Group__0 : rule__Columns__Group__0__Impl rule__Columns__Group__1 ;
    public final void rule__Columns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10156:1: ( rule__Columns__Group__0__Impl rule__Columns__Group__1 )
            // InternalSQLParser.g:10157:2: rule__Columns__Group__0__Impl rule__Columns__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Columns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0"


    // $ANTLR start "rule__Columns__Group__0__Impl"
    // InternalSQLParser.g:10164:1: rule__Columns__Group__0__Impl : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10168:1: ( ( ruleColumnOrAlias ) )
            // InternalSQLParser.g:10169:1: ( ruleColumnOrAlias )
            {
            // InternalSQLParser.g:10169:1: ( ruleColumnOrAlias )
            // InternalSQLParser.g:10170:2: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0__Impl"


    // $ANTLR start "rule__Columns__Group__1"
    // InternalSQLParser.g:10179:1: rule__Columns__Group__1 : rule__Columns__Group__1__Impl ;
    public final void rule__Columns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10183:1: ( rule__Columns__Group__1__Impl )
            // InternalSQLParser.g:10184:2: rule__Columns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1"


    // $ANTLR start "rule__Columns__Group__1__Impl"
    // InternalSQLParser.g:10190:1: rule__Columns__Group__1__Impl : ( ( rule__Columns__Group_1__0 )? ) ;
    public final void rule__Columns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10194:1: ( ( ( rule__Columns__Group_1__0 )? ) )
            // InternalSQLParser.g:10195:1: ( ( rule__Columns__Group_1__0 )? )
            {
            // InternalSQLParser.g:10195:1: ( ( rule__Columns__Group_1__0 )? )
            // InternalSQLParser.g:10196:2: ( rule__Columns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10197:2: ( rule__Columns__Group_1__0 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==Comma) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSQLParser.g:10197:3: rule__Columns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Columns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1__Impl"


    // $ANTLR start "rule__Columns__Group_1__0"
    // InternalSQLParser.g:10206:1: rule__Columns__Group_1__0 : rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 ;
    public final void rule__Columns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10210:1: ( rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 )
            // InternalSQLParser.g:10211:2: rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Columns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0"


    // $ANTLR start "rule__Columns__Group_1__0__Impl"
    // InternalSQLParser.g:10218:1: rule__Columns__Group_1__0__Impl : ( () ) ;
    public final void rule__Columns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10222:1: ( ( () ) )
            // InternalSQLParser.g:10223:1: ( () )
            {
            // InternalSQLParser.g:10223:1: ( () )
            // InternalSQLParser.g:10224:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10225:2: ()
            // InternalSQLParser.g:10225:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1__1"
    // InternalSQLParser.g:10233:1: rule__Columns__Group_1__1 : rule__Columns__Group_1__1__Impl ;
    public final void rule__Columns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10237:1: ( rule__Columns__Group_1__1__Impl )
            // InternalSQLParser.g:10238:2: rule__Columns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1"


    // $ANTLR start "rule__Columns__Group_1__1__Impl"
    // InternalSQLParser.g:10244:1: rule__Columns__Group_1__1__Impl : ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) ;
    public final void rule__Columns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10248:1: ( ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10249:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10249:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10250:2: ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10250:2: ( ( rule__Columns__Group_1_1__0 ) )
            // InternalSQLParser.g:10251:3: ( rule__Columns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10252:3: ( rule__Columns__Group_1_1__0 )
            // InternalSQLParser.g:10252:4: rule__Columns__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__Columns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10255:2: ( ( rule__Columns__Group_1_1__0 )* )
            // InternalSQLParser.g:10256:3: ( rule__Columns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10257:3: ( rule__Columns__Group_1_1__0 )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==Comma) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalSQLParser.g:10257:4: rule__Columns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Columns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__0"
    // InternalSQLParser.g:10267:1: rule__Columns__Group_1_1__0 : rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 ;
    public final void rule__Columns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10271:1: ( rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 )
            // InternalSQLParser.g:10272:2: rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1
            {
            pushFollow(FOLLOW_40);
            rule__Columns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0"


    // $ANTLR start "rule__Columns__Group_1_1__0__Impl"
    // InternalSQLParser.g:10279:1: rule__Columns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Columns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10283:1: ( ( Comma ) )
            // InternalSQLParser.g:10284:1: ( Comma )
            {
            // InternalSQLParser.g:10284:1: ( Comma )
            // InternalSQLParser.g:10285:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__1"
    // InternalSQLParser.g:10294:1: rule__Columns__Group_1_1__1 : rule__Columns__Group_1_1__1__Impl ;
    public final void rule__Columns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10298:1: ( rule__Columns__Group_1_1__1__Impl )
            // InternalSQLParser.g:10299:2: rule__Columns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1"


    // $ANTLR start "rule__Columns__Group_1_1__1__Impl"
    // InternalSQLParser.g:10305:1: rule__Columns__Group_1_1__1__Impl : ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Columns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10309:1: ( ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10310:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10310:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10311:2: ( rule__Columns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10312:2: ( rule__Columns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10312:3: rule__Columns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Columns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0"
    // InternalSQLParser.g:10321:1: rule__ColumnOrAlias__Group_0__0 : rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 ;
    public final void rule__ColumnOrAlias__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10325:1: ( rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 )
            // InternalSQLParser.g:10326:2: rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1
            {
            pushFollow(FOLLOW_52);
            rule__ColumnOrAlias__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0__Impl"
    // InternalSQLParser.g:10333:1: rule__ColumnOrAlias__Group_0__0__Impl : ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) ;
    public final void rule__ColumnOrAlias__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10337:1: ( ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) )
            // InternalSQLParser.g:10338:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            {
            // InternalSQLParser.g:10338:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            // InternalSQLParser.g:10339:2: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }
            // InternalSQLParser.g:10340:2: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            // InternalSQLParser.g:10340:3: rule__ColumnOrAlias__CeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__CeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1"
    // InternalSQLParser.g:10348:1: rule__ColumnOrAlias__Group_0__1 : rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 ;
    public final void rule__ColumnOrAlias__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10352:1: ( rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 )
            // InternalSQLParser.g:10353:2: rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2
            {
            pushFollow(FOLLOW_52);
            rule__ColumnOrAlias__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1__Impl"
    // InternalSQLParser.g:10360:1: rule__ColumnOrAlias__Group_0__1__Impl : ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10364:1: ( ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) )
            // InternalSQLParser.g:10365:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            {
            // InternalSQLParser.g:10365:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            // InternalSQLParser.g:10366:2: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }
            // InternalSQLParser.g:10367:2: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==AS) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSQLParser.g:10367:3: rule__ColumnOrAlias__AliasAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AliasAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2"
    // InternalSQLParser.g:10375:1: rule__ColumnOrAlias__Group_0__2 : rule__ColumnOrAlias__Group_0__2__Impl ;
    public final void rule__ColumnOrAlias__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10379:1: ( rule__ColumnOrAlias__Group_0__2__Impl )
            // InternalSQLParser.g:10380:2: rule__ColumnOrAlias__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2__Impl"
    // InternalSQLParser.g:10386:1: rule__ColumnOrAlias__Group_0__2__Impl : ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10390:1: ( ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) )
            // InternalSQLParser.g:10391:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            {
            // InternalSQLParser.g:10391:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            // InternalSQLParser.g:10392:2: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }
            // InternalSQLParser.g:10393:2: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( ((LA105_0>=RULE_STRING && LA105_0<=RULE_ID)) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSQLParser.g:10393:3: rule__ColumnOrAlias__ColAliasAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__ColAliasAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2__Impl"


    // $ANTLR start "rule__ColumnFull__Group__0"
    // InternalSQLParser.g:10402:1: rule__ColumnFull__Group__0 : rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 ;
    public final void rule__ColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10406:1: ( rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 )
            // InternalSQLParser.g:10407:2: rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__ColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0"


    // $ANTLR start "rule__ColumnFull__Group__0__Impl"
    // InternalSQLParser.g:10414:1: rule__ColumnFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10418:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:10419:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:10419:1: ( ruleDbObjectName )
            // InternalSQLParser.g:10420:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group__1"
    // InternalSQLParser.g:10429:1: rule__ColumnFull__Group__1 : rule__ColumnFull__Group__1__Impl ;
    public final void rule__ColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10433:1: ( rule__ColumnFull__Group__1__Impl )
            // InternalSQLParser.g:10434:2: rule__ColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1"


    // $ANTLR start "rule__ColumnFull__Group__1__Impl"
    // InternalSQLParser.g:10440:1: rule__ColumnFull__Group__1__Impl : ( ( rule__ColumnFull__Group_1__0 )? ) ;
    public final void rule__ColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10444:1: ( ( ( rule__ColumnFull__Group_1__0 )? ) )
            // InternalSQLParser.g:10445:1: ( ( rule__ColumnFull__Group_1__0 )? )
            {
            // InternalSQLParser.g:10445:1: ( ( rule__ColumnFull__Group_1__0 )? )
            // InternalSQLParser.g:10446:2: ( rule__ColumnFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10447:2: ( rule__ColumnFull__Group_1__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==FullStop) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSQLParser.g:10447:3: rule__ColumnFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__0"
    // InternalSQLParser.g:10456:1: rule__ColumnFull__Group_1__0 : rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 ;
    public final void rule__ColumnFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10460:1: ( rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 )
            // InternalSQLParser.g:10461:2: rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1
            {
            pushFollow(FOLLOW_53);
            rule__ColumnFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1__0__Impl"
    // InternalSQLParser.g:10468:1: rule__ColumnFull__Group_1__0__Impl : ( () ) ;
    public final void rule__ColumnFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10472:1: ( ( () ) )
            // InternalSQLParser.g:10473:1: ( () )
            {
            // InternalSQLParser.g:10473:1: ( () )
            // InternalSQLParser.g:10474:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10475:2: ()
            // InternalSQLParser.g:10475:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__1"
    // InternalSQLParser.g:10483:1: rule__ColumnFull__Group_1__1 : rule__ColumnFull__Group_1__1__Impl ;
    public final void rule__ColumnFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10487:1: ( rule__ColumnFull__Group_1__1__Impl )
            // InternalSQLParser.g:10488:2: rule__ColumnFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1__1__Impl"
    // InternalSQLParser.g:10494:1: rule__ColumnFull__Group_1__1__Impl : ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) ;
    public final void rule__ColumnFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10498:1: ( ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10499:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10499:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10500:2: ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10500:2: ( ( rule__ColumnFull__Group_1_1__0 ) )
            // InternalSQLParser.g:10501:3: ( rule__ColumnFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10502:3: ( rule__ColumnFull__Group_1_1__0 )
            // InternalSQLParser.g:10502:4: rule__ColumnFull__Group_1_1__0
            {
            pushFollow(FOLLOW_54);
            rule__ColumnFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10505:2: ( ( rule__ColumnFull__Group_1_1__0 )* )
            // InternalSQLParser.g:10506:3: ( rule__ColumnFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10507:3: ( rule__ColumnFull__Group_1_1__0 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==FullStop) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalSQLParser.g:10507:4: rule__ColumnFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__ColumnFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0"
    // InternalSQLParser.g:10517:1: rule__ColumnFull__Group_1_1__0 : rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 ;
    public final void rule__ColumnFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10521:1: ( rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 )
            // InternalSQLParser.g:10522:2: rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__ColumnFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0__Impl"
    // InternalSQLParser.g:10529:1: rule__ColumnFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__ColumnFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10533:1: ( ( FullStop ) )
            // InternalSQLParser.g:10534:1: ( FullStop )
            {
            // InternalSQLParser.g:10534:1: ( FullStop )
            // InternalSQLParser.g:10535:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1"
    // InternalSQLParser.g:10544:1: rule__ColumnFull__Group_1_1__1 : rule__ColumnFull__Group_1_1__1__Impl ;
    public final void rule__ColumnFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10548:1: ( rule__ColumnFull__Group_1_1__1__Impl )
            // InternalSQLParser.g:10549:2: rule__ColumnFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1__Impl"
    // InternalSQLParser.g:10555:1: rule__ColumnFull__Group_1_1__1__Impl : ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__ColumnFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10559:1: ( ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10560:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10560:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10561:2: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10562:2: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10562:3: rule__ColumnFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__Tables__Group__0"
    // InternalSQLParser.g:10571:1: rule__Tables__Group__0 : rule__Tables__Group__0__Impl rule__Tables__Group__1 ;
    public final void rule__Tables__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10575:1: ( rule__Tables__Group__0__Impl rule__Tables__Group__1 )
            // InternalSQLParser.g:10576:2: rule__Tables__Group__0__Impl rule__Tables__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Tables__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0"


    // $ANTLR start "rule__Tables__Group__0__Impl"
    // InternalSQLParser.g:10583:1: rule__Tables__Group__0__Impl : ( ruleFromTable ) ;
    public final void rule__Tables__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10587:1: ( ( ruleFromTable ) )
            // InternalSQLParser.g:10588:1: ( ruleFromTable )
            {
            // InternalSQLParser.g:10588:1: ( ruleFromTable )
            // InternalSQLParser.g:10589:2: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0__Impl"


    // $ANTLR start "rule__Tables__Group__1"
    // InternalSQLParser.g:10598:1: rule__Tables__Group__1 : rule__Tables__Group__1__Impl ;
    public final void rule__Tables__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10602:1: ( rule__Tables__Group__1__Impl )
            // InternalSQLParser.g:10603:2: rule__Tables__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1"


    // $ANTLR start "rule__Tables__Group__1__Impl"
    // InternalSQLParser.g:10609:1: rule__Tables__Group__1__Impl : ( ( rule__Tables__Group_1__0 )? ) ;
    public final void rule__Tables__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10613:1: ( ( ( rule__Tables__Group_1__0 )? ) )
            // InternalSQLParser.g:10614:1: ( ( rule__Tables__Group_1__0 )? )
            {
            // InternalSQLParser.g:10614:1: ( ( rule__Tables__Group_1__0 )? )
            // InternalSQLParser.g:10615:2: ( rule__Tables__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10616:2: ( rule__Tables__Group_1__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==Comma) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSQLParser.g:10616:3: rule__Tables__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Tables__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1__Impl"


    // $ANTLR start "rule__Tables__Group_1__0"
    // InternalSQLParser.g:10625:1: rule__Tables__Group_1__0 : rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 ;
    public final void rule__Tables__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10629:1: ( rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 )
            // InternalSQLParser.g:10630:2: rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Tables__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0"


    // $ANTLR start "rule__Tables__Group_1__0__Impl"
    // InternalSQLParser.g:10637:1: rule__Tables__Group_1__0__Impl : ( () ) ;
    public final void rule__Tables__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10641:1: ( ( () ) )
            // InternalSQLParser.g:10642:1: ( () )
            {
            // InternalSQLParser.g:10642:1: ( () )
            // InternalSQLParser.g:10643:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10644:2: ()
            // InternalSQLParser.g:10644:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1__1"
    // InternalSQLParser.g:10652:1: rule__Tables__Group_1__1 : rule__Tables__Group_1__1__Impl ;
    public final void rule__Tables__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10656:1: ( rule__Tables__Group_1__1__Impl )
            // InternalSQLParser.g:10657:2: rule__Tables__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1"


    // $ANTLR start "rule__Tables__Group_1__1__Impl"
    // InternalSQLParser.g:10663:1: rule__Tables__Group_1__1__Impl : ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) ;
    public final void rule__Tables__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10667:1: ( ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10668:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10668:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10669:2: ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10669:2: ( ( rule__Tables__Group_1_1__0 ) )
            // InternalSQLParser.g:10670:3: ( rule__Tables__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10671:3: ( rule__Tables__Group_1_1__0 )
            // InternalSQLParser.g:10671:4: rule__Tables__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__Tables__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10674:2: ( ( rule__Tables__Group_1_1__0 )* )
            // InternalSQLParser.g:10675:3: ( rule__Tables__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10676:3: ( rule__Tables__Group_1_1__0 )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==Comma) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalSQLParser.g:10676:4: rule__Tables__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Tables__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__0"
    // InternalSQLParser.g:10686:1: rule__Tables__Group_1_1__0 : rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 ;
    public final void rule__Tables__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10690:1: ( rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 )
            // InternalSQLParser.g:10691:2: rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Tables__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0"


    // $ANTLR start "rule__Tables__Group_1_1__0__Impl"
    // InternalSQLParser.g:10698:1: rule__Tables__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Tables__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10702:1: ( ( Comma ) )
            // InternalSQLParser.g:10703:1: ( Comma )
            {
            // InternalSQLParser.g:10703:1: ( Comma )
            // InternalSQLParser.g:10704:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__1"
    // InternalSQLParser.g:10713:1: rule__Tables__Group_1_1__1 : rule__Tables__Group_1_1__1__Impl ;
    public final void rule__Tables__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10717:1: ( rule__Tables__Group_1_1__1__Impl )
            // InternalSQLParser.g:10718:2: rule__Tables__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1"


    // $ANTLR start "rule__Tables__Group_1_1__1__Impl"
    // InternalSQLParser.g:10724:1: rule__Tables__Group_1_1__1__Impl : ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Tables__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10728:1: ( ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10729:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10729:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10730:2: ( rule__Tables__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10731:2: ( rule__Tables__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10731:3: rule__Tables__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Tables__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1__Impl"


    // $ANTLR start "rule__FromTable__Group__0"
    // InternalSQLParser.g:10740:1: rule__FromTable__Group__0 : rule__FromTable__Group__0__Impl rule__FromTable__Group__1 ;
    public final void rule__FromTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10744:1: ( rule__FromTable__Group__0__Impl rule__FromTable__Group__1 )
            // InternalSQLParser.g:10745:2: rule__FromTable__Group__0__Impl rule__FromTable__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__FromTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0"


    // $ANTLR start "rule__FromTable__Group__0__Impl"
    // InternalSQLParser.g:10752:1: rule__FromTable__Group__0__Impl : ( ( rule__FromTable__TableAssignment_0 ) ) ;
    public final void rule__FromTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10756:1: ( ( ( rule__FromTable__TableAssignment_0 ) ) )
            // InternalSQLParser.g:10757:1: ( ( rule__FromTable__TableAssignment_0 ) )
            {
            // InternalSQLParser.g:10757:1: ( ( rule__FromTable__TableAssignment_0 ) )
            // InternalSQLParser.g:10758:2: ( rule__FromTable__TableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }
            // InternalSQLParser.g:10759:2: ( rule__FromTable__TableAssignment_0 )
            // InternalSQLParser.g:10759:3: rule__FromTable__TableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__TableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0__Impl"


    // $ANTLR start "rule__FromTable__Group__1"
    // InternalSQLParser.g:10767:1: rule__FromTable__Group__1 : rule__FromTable__Group__1__Impl ;
    public final void rule__FromTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10771:1: ( rule__FromTable__Group__1__Impl )
            // InternalSQLParser.g:10772:2: rule__FromTable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1"


    // $ANTLR start "rule__FromTable__Group__1__Impl"
    // InternalSQLParser.g:10778:1: rule__FromTable__Group__1__Impl : ( ( rule__FromTable__FjoinAssignment_1 )* ) ;
    public final void rule__FromTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10782:1: ( ( ( rule__FromTable__FjoinAssignment_1 )* ) )
            // InternalSQLParser.g:10783:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            {
            // InternalSQLParser.g:10783:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            // InternalSQLParser.g:10784:2: ( rule__FromTable__FjoinAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }
            // InternalSQLParser.g:10785:2: ( rule__FromTable__FjoinAssignment_1 )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==STRAIGHT_JOIN||LA110_0==NATURAL||LA110_0==CROSS||LA110_0==INNER||LA110_0==RIGHT||LA110_0==FULL||LA110_0==JOIN||LA110_0==LEFT) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalSQLParser.g:10785:3: rule__FromTable__FjoinAssignment_1
            	    {
            	    pushFollow(FOLLOW_56);
            	    rule__FromTable__FjoinAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__0"
    // InternalSQLParser.g:10794:1: rule__FromTableJoin__Group__0 : rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 ;
    public final void rule__FromTableJoin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10798:1: ( rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 )
            // InternalSQLParser.g:10799:2: rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FromTableJoin__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0"


    // $ANTLR start "rule__FromTableJoin__Group__0__Impl"
    // InternalSQLParser.g:10806:1: rule__FromTableJoin__Group__0__Impl : ( ( rule__FromTableJoin__JoinAssignment_0 ) ) ;
    public final void rule__FromTableJoin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10810:1: ( ( ( rule__FromTableJoin__JoinAssignment_0 ) ) )
            // InternalSQLParser.g:10811:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            {
            // InternalSQLParser.g:10811:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            // InternalSQLParser.g:10812:2: ( rule__FromTableJoin__JoinAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }
            // InternalSQLParser.g:10813:2: ( rule__FromTableJoin__JoinAssignment_0 )
            // InternalSQLParser.g:10813:3: rule__FromTableJoin__JoinAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__1"
    // InternalSQLParser.g:10821:1: rule__FromTableJoin__Group__1 : rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 ;
    public final void rule__FromTableJoin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10825:1: ( rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 )
            // InternalSQLParser.g:10826:2: rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2
            {
            pushFollow(FOLLOW_57);
            rule__FromTableJoin__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1"


    // $ANTLR start "rule__FromTableJoin__Group__1__Impl"
    // InternalSQLParser.g:10833:1: rule__FromTableJoin__Group__1__Impl : ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) ;
    public final void rule__FromTableJoin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10837:1: ( ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) )
            // InternalSQLParser.g:10838:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            {
            // InternalSQLParser.g:10838:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            // InternalSQLParser.g:10839:2: ( rule__FromTableJoin__OnTableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }
            // InternalSQLParser.g:10840:2: ( rule__FromTableJoin__OnTableAssignment_1 )
            // InternalSQLParser.g:10840:3: rule__FromTableJoin__OnTableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__OnTableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__2"
    // InternalSQLParser.g:10848:1: rule__FromTableJoin__Group__2 : rule__FromTableJoin__Group__2__Impl ;
    public final void rule__FromTableJoin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10852:1: ( rule__FromTableJoin__Group__2__Impl )
            // InternalSQLParser.g:10853:2: rule__FromTableJoin__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2"


    // $ANTLR start "rule__FromTableJoin__Group__2__Impl"
    // InternalSQLParser.g:10859:1: rule__FromTableJoin__Group__2__Impl : ( ( rule__FromTableJoin__Alternatives_2 ) ) ;
    public final void rule__FromTableJoin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10863:1: ( ( ( rule__FromTableJoin__Alternatives_2 ) ) )
            // InternalSQLParser.g:10864:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            {
            // InternalSQLParser.g:10864:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            // InternalSQLParser.g:10865:2: ( rule__FromTableJoin__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:10866:2: ( rule__FromTableJoin__Alternatives_2 )
            // InternalSQLParser.g:10866:3: rule__FromTableJoin__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0"
    // InternalSQLParser.g:10875:1: rule__FromTableJoin__Group_2_0__0 : rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 ;
    public final void rule__FromTableJoin__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10879:1: ( rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 )
            // InternalSQLParser.g:10880:2: rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1
            {
            pushFollow(FOLLOW_46);
            rule__FromTableJoin__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0__Impl"
    // InternalSQLParser.g:10887:1: rule__FromTableJoin__Group_2_0__0__Impl : ( ON ) ;
    public final void rule__FromTableJoin__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10891:1: ( ( ON ) )
            // InternalSQLParser.g:10892:1: ( ON )
            {
            // InternalSQLParser.g:10892:1: ( ON )
            // InternalSQLParser.g:10893:2: ON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }
            match(input,ON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1"
    // InternalSQLParser.g:10902:1: rule__FromTableJoin__Group_2_0__1 : rule__FromTableJoin__Group_2_0__1__Impl ;
    public final void rule__FromTableJoin__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10906:1: ( rule__FromTableJoin__Group_2_0__1__Impl )
            // InternalSQLParser.g:10907:2: rule__FromTableJoin__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1__Impl"
    // InternalSQLParser.g:10913:1: rule__FromTableJoin__Group_2_0__1__Impl : ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) ;
    public final void rule__FromTableJoin__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10917:1: ( ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) )
            // InternalSQLParser.g:10918:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            {
            // InternalSQLParser.g:10918:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            // InternalSQLParser.g:10919:2: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }
            // InternalSQLParser.g:10920:2: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            // InternalSQLParser.g:10920:3: rule__FromTableJoin__JoinExprAssignment_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinExprAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__0"
    // InternalSQLParser.g:10929:1: rule__JoinCondition__Group__0 : rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 ;
    public final void rule__JoinCondition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10933:1: ( rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 )
            // InternalSQLParser.g:10934:2: rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__JoinCondition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0"


    // $ANTLR start "rule__JoinCondition__Group__0__Impl"
    // InternalSQLParser.g:10941:1: rule__JoinCondition__Group__0__Impl : ( USING ) ;
    public final void rule__JoinCondition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10945:1: ( ( USING ) )
            // InternalSQLParser.g:10946:1: ( USING )
            {
            // InternalSQLParser.g:10946:1: ( USING )
            // InternalSQLParser.g:10947:2: USING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }
            match(input,USING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0__Impl"


    // $ANTLR start "rule__JoinCondition__Group__1"
    // InternalSQLParser.g:10956:1: rule__JoinCondition__Group__1 : rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 ;
    public final void rule__JoinCondition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10960:1: ( rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 )
            // InternalSQLParser.g:10961:2: rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2
            {
            pushFollow(FOLLOW_32);
            rule__JoinCondition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1"


    // $ANTLR start "rule__JoinCondition__Group__1__Impl"
    // InternalSQLParser.g:10968:1: rule__JoinCondition__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__JoinCondition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10972:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10973:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10973:1: ( LeftParenthesis )
            // InternalSQLParser.g:10974:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__2"
    // InternalSQLParser.g:10983:1: rule__JoinCondition__Group__2 : rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 ;
    public final void rule__JoinCondition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10987:1: ( rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 )
            // InternalSQLParser.g:10988:2: rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__JoinCondition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2"


    // $ANTLR start "rule__JoinCondition__Group__2__Impl"
    // InternalSQLParser.g:10995:1: rule__JoinCondition__Group__2__Impl : ( ( rule__JoinCondition__UseColsAssignment_2 ) ) ;
    public final void rule__JoinCondition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10999:1: ( ( ( rule__JoinCondition__UseColsAssignment_2 ) ) )
            // InternalSQLParser.g:11000:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            {
            // InternalSQLParser.g:11000:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            // InternalSQLParser.g:11001:2: ( rule__JoinCondition__UseColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }
            // InternalSQLParser.g:11002:2: ( rule__JoinCondition__UseColsAssignment_2 )
            // InternalSQLParser.g:11002:3: rule__JoinCondition__UseColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__UseColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2__Impl"


    // $ANTLR start "rule__JoinCondition__Group__3"
    // InternalSQLParser.g:11010:1: rule__JoinCondition__Group__3 : rule__JoinCondition__Group__3__Impl ;
    public final void rule__JoinCondition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11014:1: ( rule__JoinCondition__Group__3__Impl )
            // InternalSQLParser.g:11015:2: rule__JoinCondition__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3"


    // $ANTLR start "rule__JoinCondition__Group__3__Impl"
    // InternalSQLParser.g:11021:1: rule__JoinCondition__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__JoinCondition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11025:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11026:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11026:1: ( RightParenthesis )
            // InternalSQLParser.g:11027:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3__Impl"


    // $ANTLR start "rule__UsingCols__Group__0"
    // InternalSQLParser.g:11037:1: rule__UsingCols__Group__0 : rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 ;
    public final void rule__UsingCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11041:1: ( rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 )
            // InternalSQLParser.g:11042:2: rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__UsingCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0"


    // $ANTLR start "rule__UsingCols__Group__0__Impl"
    // InternalSQLParser.g:11049:1: rule__UsingCols__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11053:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:11054:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:11054:1: ( ruleDbObjectName )
            // InternalSQLParser.g:11055:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0__Impl"


    // $ANTLR start "rule__UsingCols__Group__1"
    // InternalSQLParser.g:11064:1: rule__UsingCols__Group__1 : rule__UsingCols__Group__1__Impl ;
    public final void rule__UsingCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11068:1: ( rule__UsingCols__Group__1__Impl )
            // InternalSQLParser.g:11069:2: rule__UsingCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1"


    // $ANTLR start "rule__UsingCols__Group__1__Impl"
    // InternalSQLParser.g:11075:1: rule__UsingCols__Group__1__Impl : ( ( rule__UsingCols__Group_1__0 )? ) ;
    public final void rule__UsingCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11079:1: ( ( ( rule__UsingCols__Group_1__0 )? ) )
            // InternalSQLParser.g:11080:1: ( ( rule__UsingCols__Group_1__0 )? )
            {
            // InternalSQLParser.g:11080:1: ( ( rule__UsingCols__Group_1__0 )? )
            // InternalSQLParser.g:11081:2: ( rule__UsingCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11082:2: ( rule__UsingCols__Group_1__0 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==Comma) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalSQLParser.g:11082:3: rule__UsingCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UsingCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__0"
    // InternalSQLParser.g:11091:1: rule__UsingCols__Group_1__0 : rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 ;
    public final void rule__UsingCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11095:1: ( rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 )
            // InternalSQLParser.g:11096:2: rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__UsingCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0"


    // $ANTLR start "rule__UsingCols__Group_1__0__Impl"
    // InternalSQLParser.g:11103:1: rule__UsingCols__Group_1__0__Impl : ( () ) ;
    public final void rule__UsingCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11107:1: ( ( () ) )
            // InternalSQLParser.g:11108:1: ( () )
            {
            // InternalSQLParser.g:11108:1: ( () )
            // InternalSQLParser.g:11109:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:11110:2: ()
            // InternalSQLParser.g:11110:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__1"
    // InternalSQLParser.g:11118:1: rule__UsingCols__Group_1__1 : rule__UsingCols__Group_1__1__Impl ;
    public final void rule__UsingCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11122:1: ( rule__UsingCols__Group_1__1__Impl )
            // InternalSQLParser.g:11123:2: rule__UsingCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1"


    // $ANTLR start "rule__UsingCols__Group_1__1__Impl"
    // InternalSQLParser.g:11129:1: rule__UsingCols__Group_1__1__Impl : ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) ;
    public final void rule__UsingCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11133:1: ( ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:11134:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:11134:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            // InternalSQLParser.g:11135:2: ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:11135:2: ( ( rule__UsingCols__Group_1_1__0 ) )
            // InternalSQLParser.g:11136:3: ( rule__UsingCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11137:3: ( rule__UsingCols__Group_1_1__0 )
            // InternalSQLParser.g:11137:4: rule__UsingCols__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__UsingCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:11140:2: ( ( rule__UsingCols__Group_1_1__0 )* )
            // InternalSQLParser.g:11141:3: ( rule__UsingCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11142:3: ( rule__UsingCols__Group_1_1__0 )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==Comma) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalSQLParser.g:11142:4: rule__UsingCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__UsingCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__0"
    // InternalSQLParser.g:11152:1: rule__UsingCols__Group_1_1__0 : rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 ;
    public final void rule__UsingCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11156:1: ( rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 )
            // InternalSQLParser.g:11157:2: rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__UsingCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0"


    // $ANTLR start "rule__UsingCols__Group_1_1__0__Impl"
    // InternalSQLParser.g:11164:1: rule__UsingCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UsingCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11168:1: ( ( Comma ) )
            // InternalSQLParser.g:11169:1: ( Comma )
            {
            // InternalSQLParser.g:11169:1: ( Comma )
            // InternalSQLParser.g:11170:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__1"
    // InternalSQLParser.g:11179:1: rule__UsingCols__Group_1_1__1 : rule__UsingCols__Group_1_1__1__Impl ;
    public final void rule__UsingCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11183:1: ( rule__UsingCols__Group_1_1__1__Impl )
            // InternalSQLParser.g:11184:2: rule__UsingCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1"


    // $ANTLR start "rule__UsingCols__Group_1_1__1__Impl"
    // InternalSQLParser.g:11190:1: rule__UsingCols__Group_1_1__1__Impl : ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UsingCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11194:1: ( ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:11195:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:11195:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:11196:2: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:11197:2: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:11197:3: rule__UsingCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__0"
    // InternalSQLParser.g:11206:1: rule__TableOrAlias__Group__0 : rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 ;
    public final void rule__TableOrAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11210:1: ( rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 )
            // InternalSQLParser.g:11211:2: rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__TableOrAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0"


    // $ANTLR start "rule__TableOrAlias__Group__0__Impl"
    // InternalSQLParser.g:11218:1: rule__TableOrAlias__Group__0__Impl : ( ( rule__TableOrAlias__Alternatives_0 ) ) ;
    public final void rule__TableOrAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11222:1: ( ( ( rule__TableOrAlias__Alternatives_0 ) ) )
            // InternalSQLParser.g:11223:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            {
            // InternalSQLParser.g:11223:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            // InternalSQLParser.g:11224:2: ( rule__TableOrAlias__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:11225:2: ( rule__TableOrAlias__Alternatives_0 )
            // InternalSQLParser.g:11225:3: rule__TableOrAlias__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__1"
    // InternalSQLParser.g:11233:1: rule__TableOrAlias__Group__1 : rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 ;
    public final void rule__TableOrAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11237:1: ( rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 )
            // InternalSQLParser.g:11238:2: rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2
            {
            pushFollow(FOLLOW_58);
            rule__TableOrAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1"


    // $ANTLR start "rule__TableOrAlias__Group__1__Impl"
    // InternalSQLParser.g:11245:1: rule__TableOrAlias__Group__1__Impl : ( ( rule__TableOrAlias__Alternatives_1 )? ) ;
    public final void rule__TableOrAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11249:1: ( ( ( rule__TableOrAlias__Alternatives_1 )? ) )
            // InternalSQLParser.g:11250:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            {
            // InternalSQLParser.g:11250:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            // InternalSQLParser.g:11251:2: ( rule__TableOrAlias__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:11252:2: ( rule__TableOrAlias__Alternatives_1 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==UNPIVOT||LA113_0==PIVOT) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSQLParser.g:11252:3: rule__TableOrAlias__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__2"
    // InternalSQLParser.g:11260:1: rule__TableOrAlias__Group__2 : rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 ;
    public final void rule__TableOrAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11264:1: ( rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 )
            // InternalSQLParser.g:11265:2: rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3
            {
            pushFollow(FOLLOW_58);
            rule__TableOrAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2"


    // $ANTLR start "rule__TableOrAlias__Group__2__Impl"
    // InternalSQLParser.g:11272:1: rule__TableOrAlias__Group__2__Impl : ( ( rule__TableOrAlias__AliasAssignment_2 )? ) ;
    public final void rule__TableOrAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11276:1: ( ( ( rule__TableOrAlias__AliasAssignment_2 )? ) )
            // InternalSQLParser.g:11277:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            {
            // InternalSQLParser.g:11277:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            // InternalSQLParser.g:11278:2: ( rule__TableOrAlias__AliasAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }
            // InternalSQLParser.g:11279:2: ( rule__TableOrAlias__AliasAssignment_2 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==AS) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSQLParser.g:11279:3: rule__TableOrAlias__AliasAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__AliasAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__3"
    // InternalSQLParser.g:11287:1: rule__TableOrAlias__Group__3 : rule__TableOrAlias__Group__3__Impl ;
    public final void rule__TableOrAlias__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11291:1: ( rule__TableOrAlias__Group__3__Impl )
            // InternalSQLParser.g:11292:2: rule__TableOrAlias__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3"


    // $ANTLR start "rule__TableOrAlias__Group__3__Impl"
    // InternalSQLParser.g:11298:1: rule__TableOrAlias__Group__3__Impl : ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) ;
    public final void rule__TableOrAlias__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11302:1: ( ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) )
            // InternalSQLParser.g:11303:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            {
            // InternalSQLParser.g:11303:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            // InternalSQLParser.g:11304:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }
            // InternalSQLParser.g:11305:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( ((LA115_0>=RULE_STRING && LA115_0<=RULE_ID)) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSQLParser.g:11305:3: rule__TableOrAlias__TblAliasAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TblAliasAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3__Impl"


    // $ANTLR start "rule__FromValues__Group__0"
    // InternalSQLParser.g:11314:1: rule__FromValues__Group__0 : rule__FromValues__Group__0__Impl rule__FromValues__Group__1 ;
    public final void rule__FromValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11318:1: ( rule__FromValues__Group__0__Impl rule__FromValues__Group__1 )
            // InternalSQLParser.g:11319:2: rule__FromValues__Group__0__Impl rule__FromValues__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FromValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0"


    // $ANTLR start "rule__FromValues__Group__0__Impl"
    // InternalSQLParser.g:11326:1: rule__FromValues__Group__0__Impl : ( ( rule__FromValues__ValuesAssignment_0 ) ) ;
    public final void rule__FromValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11330:1: ( ( ( rule__FromValues__ValuesAssignment_0 ) ) )
            // InternalSQLParser.g:11331:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            {
            // InternalSQLParser.g:11331:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            // InternalSQLParser.g:11332:2: ( rule__FromValues__ValuesAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }
            // InternalSQLParser.g:11333:2: ( rule__FromValues__ValuesAssignment_0 )
            // InternalSQLParser.g:11333:3: rule__FromValues__ValuesAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__ValuesAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0__Impl"


    // $ANTLR start "rule__FromValues__Group__1"
    // InternalSQLParser.g:11341:1: rule__FromValues__Group__1 : rule__FromValues__Group__1__Impl ;
    public final void rule__FromValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11345:1: ( rule__FromValues__Group__1__Impl )
            // InternalSQLParser.g:11346:2: rule__FromValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1"


    // $ANTLR start "rule__FromValues__Group__1__Impl"
    // InternalSQLParser.g:11352:1: rule__FromValues__Group__1__Impl : ( ( rule__FromValues__CAssignment_1 )? ) ;
    public final void rule__FromValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11356:1: ( ( ( rule__FromValues__CAssignment_1 )? ) )
            // InternalSQLParser.g:11357:1: ( ( rule__FromValues__CAssignment_1 )? )
            {
            // InternalSQLParser.g:11357:1: ( ( rule__FromValues__CAssignment_1 )? )
            // InternalSQLParser.g:11358:2: ( rule__FromValues__CAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }
            // InternalSQLParser.g:11359:2: ( rule__FromValues__CAssignment_1 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==RULE_ID) ) {
                int LA116_1 = input.LA(2);

                if ( (LA116_1==LeftParenthesis) ) {
                    int LA116_3 = input.LA(3);

                    if ( (LA116_3==RULE_STRING) ) {
                        alt116=1;
                    }
                }
            }
            switch (alt116) {
                case 1 :
                    // InternalSQLParser.g:11359:3: rule__FromValues__CAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValues__CAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__0"
    // InternalSQLParser.g:11368:1: rule__FromValuesColumns__Group__0 : rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 ;
    public final void rule__FromValuesColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11372:1: ( rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 )
            // InternalSQLParser.g:11373:2: rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__FromValuesColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0"


    // $ANTLR start "rule__FromValuesColumns__Group__0__Impl"
    // InternalSQLParser.g:11380:1: rule__FromValuesColumns__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FromValuesColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11384:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:11385:1: ( RULE_ID )
            {
            // InternalSQLParser.g:11385:1: ( RULE_ID )
            // InternalSQLParser.g:11386:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__1"
    // InternalSQLParser.g:11395:1: rule__FromValuesColumns__Group__1 : rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 ;
    public final void rule__FromValuesColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11399:1: ( rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 )
            // InternalSQLParser.g:11400:2: rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2
            {
            pushFollow(FOLLOW_59);
            rule__FromValuesColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1"


    // $ANTLR start "rule__FromValuesColumns__Group__1__Impl"
    // InternalSQLParser.g:11407:1: rule__FromValuesColumns__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FromValuesColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11411:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:11412:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:11412:1: ( LeftParenthesis )
            // InternalSQLParser.g:11413:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__2"
    // InternalSQLParser.g:11422:1: rule__FromValuesColumns__Group__2 : rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 ;
    public final void rule__FromValuesColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11426:1: ( rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 )
            // InternalSQLParser.g:11427:2: rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__FromValuesColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2"


    // $ANTLR start "rule__FromValuesColumns__Group__2__Impl"
    // InternalSQLParser.g:11434:1: rule__FromValuesColumns__Group__2__Impl : ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) ;
    public final void rule__FromValuesColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11438:1: ( ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) )
            // InternalSQLParser.g:11439:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            {
            // InternalSQLParser.g:11439:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            // InternalSQLParser.g:11440:2: ( rule__FromValuesColumns__FvColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }
            // InternalSQLParser.g:11441:2: ( rule__FromValuesColumns__FvColsAssignment_2 )
            // InternalSQLParser.g:11441:3: rule__FromValuesColumns__FvColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__FvColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__3"
    // InternalSQLParser.g:11449:1: rule__FromValuesColumns__Group__3 : rule__FromValuesColumns__Group__3__Impl ;
    public final void rule__FromValuesColumns__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11453:1: ( rule__FromValuesColumns__Group__3__Impl )
            // InternalSQLParser.g:11454:2: rule__FromValuesColumns__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3"


    // $ANTLR start "rule__FromValuesColumns__Group__3__Impl"
    // InternalSQLParser.g:11460:1: rule__FromValuesColumns__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FromValuesColumns__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11464:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11465:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11465:1: ( RightParenthesis )
            // InternalSQLParser.g:11466:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0"
    // InternalSQLParser.g:11476:1: rule__FromValuesColumnNames__Group__0 : rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 ;
    public final void rule__FromValuesColumnNames__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11480:1: ( rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 )
            // InternalSQLParser.g:11481:2: rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__FromValuesColumnNames__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0__Impl"
    // InternalSQLParser.g:11488:1: rule__FromValuesColumnNames__Group__0__Impl : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11492:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:11493:1: ( ruleColumnName )
            {
            // InternalSQLParser.g:11493:1: ( ruleColumnName )
            // InternalSQLParser.g:11494:2: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1"
    // InternalSQLParser.g:11503:1: rule__FromValuesColumnNames__Group__1 : rule__FromValuesColumnNames__Group__1__Impl ;
    public final void rule__FromValuesColumnNames__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11507:1: ( rule__FromValuesColumnNames__Group__1__Impl )
            // InternalSQLParser.g:11508:2: rule__FromValuesColumnNames__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1__Impl"
    // InternalSQLParser.g:11514:1: rule__FromValuesColumnNames__Group__1__Impl : ( ( rule__FromValuesColumnNames__Group_1__0 )? ) ;
    public final void rule__FromValuesColumnNames__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11518:1: ( ( ( rule__FromValuesColumnNames__Group_1__0 )? ) )
            // InternalSQLParser.g:11519:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            {
            // InternalSQLParser.g:11519:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            // InternalSQLParser.g:11520:2: ( rule__FromValuesColumnNames__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11521:2: ( rule__FromValuesColumnNames__Group_1__0 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==Comma) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSQLParser.g:11521:3: rule__FromValuesColumnNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValuesColumnNames__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0"
    // InternalSQLParser.g:11530:1: rule__FromValuesColumnNames__Group_1__0 : rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11534:1: ( rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 )
            // InternalSQLParser.g:11535:2: rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__FromValuesColumnNames__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0__Impl"
    // InternalSQLParser.g:11542:1: rule__FromValuesColumnNames__Group_1__0__Impl : ( () ) ;
    public final void rule__FromValuesColumnNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11546:1: ( ( () ) )
            // InternalSQLParser.g:11547:1: ( () )
            {
            // InternalSQLParser.g:11547:1: ( () )
            // InternalSQLParser.g:11548:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:11549:2: ()
            // InternalSQLParser.g:11549:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1"
    // InternalSQLParser.g:11557:1: rule__FromValuesColumnNames__Group_1__1 : rule__FromValuesColumnNames__Group_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11561:1: ( rule__FromValuesColumnNames__Group_1__1__Impl )
            // InternalSQLParser.g:11562:2: rule__FromValuesColumnNames__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1__Impl"
    // InternalSQLParser.g:11568:1: rule__FromValuesColumnNames__Group_1__1__Impl : ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) ;
    public final void rule__FromValuesColumnNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11572:1: ( ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:11573:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:11573:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            // InternalSQLParser.g:11574:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:11574:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) )
            // InternalSQLParser.g:11575:3: ( rule__FromValuesColumnNames__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11576:3: ( rule__FromValuesColumnNames__Group_1_1__0 )
            // InternalSQLParser.g:11576:4: rule__FromValuesColumnNames__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__FromValuesColumnNames__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:11579:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            // InternalSQLParser.g:11580:3: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11581:3: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==Comma) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // InternalSQLParser.g:11581:4: rule__FromValuesColumnNames__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__FromValuesColumnNames__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0"
    // InternalSQLParser.g:11591:1: rule__FromValuesColumnNames__Group_1_1__0 : rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11595:1: ( rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 )
            // InternalSQLParser.g:11596:2: rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1
            {
            pushFollow(FOLLOW_59);
            rule__FromValuesColumnNames__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0__Impl"
    // InternalSQLParser.g:11603:1: rule__FromValuesColumnNames__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11607:1: ( ( Comma ) )
            // InternalSQLParser.g:11608:1: ( Comma )
            {
            // InternalSQLParser.g:11608:1: ( Comma )
            // InternalSQLParser.g:11609:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1"
    // InternalSQLParser.g:11618:1: rule__FromValuesColumnNames__Group_1_1__1 : rule__FromValuesColumnNames__Group_1_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11622:1: ( rule__FromValuesColumnNames__Group_1_1__1__Impl )
            // InternalSQLParser.g:11623:2: rule__FromValuesColumnNames__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1__Impl"
    // InternalSQLParser.g:11629:1: rule__FromValuesColumnNames__Group_1_1__1__Impl : ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11633:1: ( ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:11634:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:11634:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:11635:2: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:11636:2: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:11636:3: rule__FromValuesColumnNames__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1__Impl"


    // $ANTLR start "rule__Values__Group__0"
    // InternalSQLParser.g:11645:1: rule__Values__Group__0 : rule__Values__Group__0__Impl rule__Values__Group__1 ;
    public final void rule__Values__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11649:1: ( rule__Values__Group__0__Impl rule__Values__Group__1 )
            // InternalSQLParser.g:11650:2: rule__Values__Group__0__Impl rule__Values__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__Values__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0"


    // $ANTLR start "rule__Values__Group__0__Impl"
    // InternalSQLParser.g:11657:1: rule__Values__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Values__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11661:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:11662:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:11662:1: ( LeftParenthesis )
            // InternalSQLParser.g:11663:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0__Impl"


    // $ANTLR start "rule__Values__Group__1"
    // InternalSQLParser.g:11672:1: rule__Values__Group__1 : rule__Values__Group__1__Impl rule__Values__Group__2 ;
    public final void rule__Values__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11676:1: ( rule__Values__Group__1__Impl rule__Values__Group__2 )
            // InternalSQLParser.g:11677:2: rule__Values__Group__1__Impl rule__Values__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__Values__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1"


    // $ANTLR start "rule__Values__Group__1__Impl"
    // InternalSQLParser.g:11684:1: rule__Values__Group__1__Impl : ( VALUES ) ;
    public final void rule__Values__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11688:1: ( ( VALUES ) )
            // InternalSQLParser.g:11689:1: ( VALUES )
            {
            // InternalSQLParser.g:11689:1: ( VALUES )
            // InternalSQLParser.g:11690:2: VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }
            match(input,VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1__Impl"


    // $ANTLR start "rule__Values__Group__2"
    // InternalSQLParser.g:11699:1: rule__Values__Group__2 : rule__Values__Group__2__Impl rule__Values__Group__3 ;
    public final void rule__Values__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11703:1: ( rule__Values__Group__2__Impl rule__Values__Group__3 )
            // InternalSQLParser.g:11704:2: rule__Values__Group__2__Impl rule__Values__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__Values__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2"


    // $ANTLR start "rule__Values__Group__2__Impl"
    // InternalSQLParser.g:11711:1: rule__Values__Group__2__Impl : ( ( rule__Values__RowsAssignment_2 ) ) ;
    public final void rule__Values__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11715:1: ( ( ( rule__Values__RowsAssignment_2 ) ) )
            // InternalSQLParser.g:11716:1: ( ( rule__Values__RowsAssignment_2 ) )
            {
            // InternalSQLParser.g:11716:1: ( ( rule__Values__RowsAssignment_2 ) )
            // InternalSQLParser.g:11717:2: ( rule__Values__RowsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }
            // InternalSQLParser.g:11718:2: ( rule__Values__RowsAssignment_2 )
            // InternalSQLParser.g:11718:3: rule__Values__RowsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Values__RowsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2__Impl"


    // $ANTLR start "rule__Values__Group__3"
    // InternalSQLParser.g:11726:1: rule__Values__Group__3 : rule__Values__Group__3__Impl ;
    public final void rule__Values__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11730:1: ( rule__Values__Group__3__Impl )
            // InternalSQLParser.g:11731:2: rule__Values__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3"


    // $ANTLR start "rule__Values__Group__3__Impl"
    // InternalSQLParser.g:11737:1: rule__Values__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__Values__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11741:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11742:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11742:1: ( RightParenthesis )
            // InternalSQLParser.g:11743:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3__Impl"


    // $ANTLR start "rule__Rows__Group__0"
    // InternalSQLParser.g:11753:1: rule__Rows__Group__0 : rule__Rows__Group__0__Impl rule__Rows__Group__1 ;
    public final void rule__Rows__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11757:1: ( rule__Rows__Group__0__Impl rule__Rows__Group__1 )
            // InternalSQLParser.g:11758:2: rule__Rows__Group__0__Impl rule__Rows__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__Rows__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0"


    // $ANTLR start "rule__Rows__Group__0__Impl"
    // InternalSQLParser.g:11765:1: rule__Rows__Group__0__Impl : ( ruleRow ) ;
    public final void rule__Rows__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11769:1: ( ( ruleRow ) )
            // InternalSQLParser.g:11770:1: ( ruleRow )
            {
            // InternalSQLParser.g:11770:1: ( ruleRow )
            // InternalSQLParser.g:11771:2: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0__Impl"


    // $ANTLR start "rule__Rows__Group__1"
    // InternalSQLParser.g:11780:1: rule__Rows__Group__1 : rule__Rows__Group__1__Impl ;
    public final void rule__Rows__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11784:1: ( rule__Rows__Group__1__Impl )
            // InternalSQLParser.g:11785:2: rule__Rows__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1"


    // $ANTLR start "rule__Rows__Group__1__Impl"
    // InternalSQLParser.g:11791:1: rule__Rows__Group__1__Impl : ( ( rule__Rows__Group_1__0 )? ) ;
    public final void rule__Rows__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11795:1: ( ( ( rule__Rows__Group_1__0 )? ) )
            // InternalSQLParser.g:11796:1: ( ( rule__Rows__Group_1__0 )? )
            {
            // InternalSQLParser.g:11796:1: ( ( rule__Rows__Group_1__0 )? )
            // InternalSQLParser.g:11797:2: ( rule__Rows__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11798:2: ( rule__Rows__Group_1__0 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==Comma) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalSQLParser.g:11798:3: rule__Rows__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Rows__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1__Impl"


    // $ANTLR start "rule__Rows__Group_1__0"
    // InternalSQLParser.g:11807:1: rule__Rows__Group_1__0 : rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 ;
    public final void rule__Rows__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11811:1: ( rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 )
            // InternalSQLParser.g:11812:2: rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Rows__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0"


    // $ANTLR start "rule__Rows__Group_1__0__Impl"
    // InternalSQLParser.g:11819:1: rule__Rows__Group_1__0__Impl : ( () ) ;
    public final void rule__Rows__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11823:1: ( ( () ) )
            // InternalSQLParser.g:11824:1: ( () )
            {
            // InternalSQLParser.g:11824:1: ( () )
            // InternalSQLParser.g:11825:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:11826:2: ()
            // InternalSQLParser.g:11826:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1__1"
    // InternalSQLParser.g:11834:1: rule__Rows__Group_1__1 : rule__Rows__Group_1__1__Impl ;
    public final void rule__Rows__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11838:1: ( rule__Rows__Group_1__1__Impl )
            // InternalSQLParser.g:11839:2: rule__Rows__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1"


    // $ANTLR start "rule__Rows__Group_1__1__Impl"
    // InternalSQLParser.g:11845:1: rule__Rows__Group_1__1__Impl : ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) ;
    public final void rule__Rows__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11849:1: ( ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:11850:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:11850:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            // InternalSQLParser.g:11851:2: ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:11851:2: ( ( rule__Rows__Group_1_1__0 ) )
            // InternalSQLParser.g:11852:3: ( rule__Rows__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11853:3: ( rule__Rows__Group_1_1__0 )
            // InternalSQLParser.g:11853:4: rule__Rows__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__Rows__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:11856:2: ( ( rule__Rows__Group_1_1__0 )* )
            // InternalSQLParser.g:11857:3: ( rule__Rows__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11858:3: ( rule__Rows__Group_1_1__0 )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==Comma) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalSQLParser.g:11858:4: rule__Rows__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Rows__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__0"
    // InternalSQLParser.g:11868:1: rule__Rows__Group_1_1__0 : rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 ;
    public final void rule__Rows__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11872:1: ( rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 )
            // InternalSQLParser.g:11873:2: rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Rows__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0"


    // $ANTLR start "rule__Rows__Group_1_1__0__Impl"
    // InternalSQLParser.g:11880:1: rule__Rows__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Rows__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11884:1: ( ( Comma ) )
            // InternalSQLParser.g:11885:1: ( Comma )
            {
            // InternalSQLParser.g:11885:1: ( Comma )
            // InternalSQLParser.g:11886:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__1"
    // InternalSQLParser.g:11895:1: rule__Rows__Group_1_1__1 : rule__Rows__Group_1_1__1__Impl ;
    public final void rule__Rows__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11899:1: ( rule__Rows__Group_1_1__1__Impl )
            // InternalSQLParser.g:11900:2: rule__Rows__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1"


    // $ANTLR start "rule__Rows__Group_1_1__1__Impl"
    // InternalSQLParser.g:11906:1: rule__Rows__Group_1_1__1__Impl : ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Rows__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11910:1: ( ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:11911:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:11911:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:11912:2: ( rule__Rows__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:11913:2: ( rule__Rows__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:11913:3: rule__Rows__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Rows__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1__Impl"


    // $ANTLR start "rule__Row__Group__0"
    // InternalSQLParser.g:11922:1: rule__Row__Group__0 : rule__Row__Group__0__Impl rule__Row__Group__1 ;
    public final void rule__Row__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11926:1: ( rule__Row__Group__0__Impl rule__Row__Group__1 )
            // InternalSQLParser.g:11927:2: rule__Row__Group__0__Impl rule__Row__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__Row__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0"


    // $ANTLR start "rule__Row__Group__0__Impl"
    // InternalSQLParser.g:11934:1: rule__Row__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Row__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11938:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:11939:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:11939:1: ( LeftParenthesis )
            // InternalSQLParser.g:11940:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0__Impl"


    // $ANTLR start "rule__Row__Group__1"
    // InternalSQLParser.g:11949:1: rule__Row__Group__1 : rule__Row__Group__1__Impl rule__Row__Group__2 ;
    public final void rule__Row__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11953:1: ( rule__Row__Group__1__Impl rule__Row__Group__2 )
            // InternalSQLParser.g:11954:2: rule__Row__Group__1__Impl rule__Row__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__Row__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1"


    // $ANTLR start "rule__Row__Group__1__Impl"
    // InternalSQLParser.g:11961:1: rule__Row__Group__1__Impl : ( ( rule__Row__RowValuesAssignment_1 ) ) ;
    public final void rule__Row__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11965:1: ( ( ( rule__Row__RowValuesAssignment_1 ) ) )
            // InternalSQLParser.g:11966:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            {
            // InternalSQLParser.g:11966:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            // InternalSQLParser.g:11967:2: ( rule__Row__RowValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }
            // InternalSQLParser.g:11968:2: ( rule__Row__RowValuesAssignment_1 )
            // InternalSQLParser.g:11968:3: rule__Row__RowValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Row__RowValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1__Impl"


    // $ANTLR start "rule__Row__Group__2"
    // InternalSQLParser.g:11976:1: rule__Row__Group__2 : rule__Row__Group__2__Impl ;
    public final void rule__Row__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11980:1: ( rule__Row__Group__2__Impl )
            // InternalSQLParser.g:11981:2: rule__Row__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2"


    // $ANTLR start "rule__Row__Group__2__Impl"
    // InternalSQLParser.g:11987:1: rule__Row__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__Row__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11991:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11992:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11992:1: ( RightParenthesis )
            // InternalSQLParser.g:11993:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2__Impl"


    // $ANTLR start "rule__RowValues__Group__0"
    // InternalSQLParser.g:12003:1: rule__RowValues__Group__0 : rule__RowValues__Group__0__Impl rule__RowValues__Group__1 ;
    public final void rule__RowValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12007:1: ( rule__RowValues__Group__0__Impl rule__RowValues__Group__1 )
            // InternalSQLParser.g:12008:2: rule__RowValues__Group__0__Impl rule__RowValues__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__RowValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0"


    // $ANTLR start "rule__RowValues__Group__0__Impl"
    // InternalSQLParser.g:12015:1: rule__RowValues__Group__0__Impl : ( ruleRowValue ) ;
    public final void rule__RowValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12019:1: ( ( ruleRowValue ) )
            // InternalSQLParser.g:12020:1: ( ruleRowValue )
            {
            // InternalSQLParser.g:12020:1: ( ruleRowValue )
            // InternalSQLParser.g:12021:2: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0__Impl"


    // $ANTLR start "rule__RowValues__Group__1"
    // InternalSQLParser.g:12030:1: rule__RowValues__Group__1 : rule__RowValues__Group__1__Impl ;
    public final void rule__RowValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12034:1: ( rule__RowValues__Group__1__Impl )
            // InternalSQLParser.g:12035:2: rule__RowValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1"


    // $ANTLR start "rule__RowValues__Group__1__Impl"
    // InternalSQLParser.g:12041:1: rule__RowValues__Group__1__Impl : ( ( rule__RowValues__Group_1__0 )? ) ;
    public final void rule__RowValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12045:1: ( ( ( rule__RowValues__Group_1__0 )? ) )
            // InternalSQLParser.g:12046:1: ( ( rule__RowValues__Group_1__0 )? )
            {
            // InternalSQLParser.g:12046:1: ( ( rule__RowValues__Group_1__0 )? )
            // InternalSQLParser.g:12047:2: ( rule__RowValues__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12048:2: ( rule__RowValues__Group_1__0 )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==Comma) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSQLParser.g:12048:3: rule__RowValues__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValues__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1__0"
    // InternalSQLParser.g:12057:1: rule__RowValues__Group_1__0 : rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 ;
    public final void rule__RowValues__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12061:1: ( rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 )
            // InternalSQLParser.g:12062:2: rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__RowValues__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0"


    // $ANTLR start "rule__RowValues__Group_1__0__Impl"
    // InternalSQLParser.g:12069:1: rule__RowValues__Group_1__0__Impl : ( () ) ;
    public final void rule__RowValues__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12073:1: ( ( () ) )
            // InternalSQLParser.g:12074:1: ( () )
            {
            // InternalSQLParser.g:12074:1: ( () )
            // InternalSQLParser.g:12075:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:12076:2: ()
            // InternalSQLParser.g:12076:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1__1"
    // InternalSQLParser.g:12084:1: rule__RowValues__Group_1__1 : rule__RowValues__Group_1__1__Impl ;
    public final void rule__RowValues__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12088:1: ( rule__RowValues__Group_1__1__Impl )
            // InternalSQLParser.g:12089:2: rule__RowValues__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1"


    // $ANTLR start "rule__RowValues__Group_1__1__Impl"
    // InternalSQLParser.g:12095:1: rule__RowValues__Group_1__1__Impl : ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) ;
    public final void rule__RowValues__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12099:1: ( ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:12100:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:12100:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            // InternalSQLParser.g:12101:2: ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:12101:2: ( ( rule__RowValues__Group_1_1__0 ) )
            // InternalSQLParser.g:12102:3: ( rule__RowValues__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12103:3: ( rule__RowValues__Group_1_1__0 )
            // InternalSQLParser.g:12103:4: rule__RowValues__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__RowValues__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:12106:2: ( ( rule__RowValues__Group_1_1__0 )* )
            // InternalSQLParser.g:12107:3: ( rule__RowValues__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12108:3: ( rule__RowValues__Group_1_1__0 )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==Comma) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalSQLParser.g:12108:4: rule__RowValues__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__RowValues__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__0"
    // InternalSQLParser.g:12118:1: rule__RowValues__Group_1_1__0 : rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 ;
    public final void rule__RowValues__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12122:1: ( rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 )
            // InternalSQLParser.g:12123:2: rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1
            {
            pushFollow(FOLLOW_60);
            rule__RowValues__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0"


    // $ANTLR start "rule__RowValues__Group_1_1__0__Impl"
    // InternalSQLParser.g:12130:1: rule__RowValues__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__RowValues__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12134:1: ( ( Comma ) )
            // InternalSQLParser.g:12135:1: ( Comma )
            {
            // InternalSQLParser.g:12135:1: ( Comma )
            // InternalSQLParser.g:12136:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__1"
    // InternalSQLParser.g:12145:1: rule__RowValues__Group_1_1__1 : rule__RowValues__Group_1_1__1__Impl ;
    public final void rule__RowValues__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12149:1: ( rule__RowValues__Group_1_1__1__Impl )
            // InternalSQLParser.g:12150:2: rule__RowValues__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1"


    // $ANTLR start "rule__RowValues__Group_1_1__1__Impl"
    // InternalSQLParser.g:12156:1: rule__RowValues__Group_1_1__1__Impl : ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__RowValues__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12160:1: ( ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:12161:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:12161:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:12162:2: ( rule__RowValues__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:12163:2: ( rule__RowValues__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:12163:3: rule__RowValues__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__0"
    // InternalSQLParser.g:12172:1: rule__PivotTable__Group__0 : rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 ;
    public final void rule__PivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12176:1: ( rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 )
            // InternalSQLParser.g:12177:2: rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__PivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0"


    // $ANTLR start "rule__PivotTable__Group__0__Impl"
    // InternalSQLParser.g:12184:1: rule__PivotTable__Group__0__Impl : ( PIVOT ) ;
    public final void rule__PivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12188:1: ( ( PIVOT ) )
            // InternalSQLParser.g:12189:1: ( PIVOT )
            {
            // InternalSQLParser.g:12189:1: ( PIVOT )
            // InternalSQLParser.g:12190:2: PIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }
            match(input,PIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0__Impl"


    // $ANTLR start "rule__PivotTable__Group__1"
    // InternalSQLParser.g:12199:1: rule__PivotTable__Group__1 : rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 ;
    public final void rule__PivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12203:1: ( rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 )
            // InternalSQLParser.g:12204:2: rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2
            {
            pushFollow(FOLLOW_61);
            rule__PivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1"


    // $ANTLR start "rule__PivotTable__Group__1__Impl"
    // InternalSQLParser.g:12211:1: rule__PivotTable__Group__1__Impl : ( ( XML )? ) ;
    public final void rule__PivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12215:1: ( ( ( XML )? ) )
            // InternalSQLParser.g:12216:1: ( ( XML )? )
            {
            // InternalSQLParser.g:12216:1: ( ( XML )? )
            // InternalSQLParser.g:12217:2: ( XML )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }
            // InternalSQLParser.g:12218:2: ( XML )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==XML) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSQLParser.g:12218:3: XML
                    {
                    match(input,XML,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__2"
    // InternalSQLParser.g:12226:1: rule__PivotTable__Group__2 : rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 ;
    public final void rule__PivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12230:1: ( rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 )
            // InternalSQLParser.g:12231:2: rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__PivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2"


    // $ANTLR start "rule__PivotTable__Group__2__Impl"
    // InternalSQLParser.g:12238:1: rule__PivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12242:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:12243:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:12243:1: ( LeftParenthesis )
            // InternalSQLParser.g:12244:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2__Impl"


    // $ANTLR start "rule__PivotTable__Group__3"
    // InternalSQLParser.g:12253:1: rule__PivotTable__Group__3 : rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 ;
    public final void rule__PivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12257:1: ( rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 )
            // InternalSQLParser.g:12258:2: rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4
            {
            pushFollow(FOLLOW_62);
            rule__PivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3"


    // $ANTLR start "rule__PivotTable__Group__3__Impl"
    // InternalSQLParser.g:12265:1: rule__PivotTable__Group__3__Impl : ( ( rule__PivotTable__PfunAssignment_3 ) ) ;
    public final void rule__PivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12269:1: ( ( ( rule__PivotTable__PfunAssignment_3 ) ) )
            // InternalSQLParser.g:12270:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            {
            // InternalSQLParser.g:12270:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            // InternalSQLParser.g:12271:2: ( rule__PivotTable__PfunAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }
            // InternalSQLParser.g:12272:2: ( rule__PivotTable__PfunAssignment_3 )
            // InternalSQLParser.g:12272:3: rule__PivotTable__PfunAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PfunAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3__Impl"


    // $ANTLR start "rule__PivotTable__Group__4"
    // InternalSQLParser.g:12280:1: rule__PivotTable__Group__4 : rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 ;
    public final void rule__PivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12284:1: ( rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 )
            // InternalSQLParser.g:12285:2: rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5
            {
            pushFollow(FOLLOW_63);
            rule__PivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4"


    // $ANTLR start "rule__PivotTable__Group__4__Impl"
    // InternalSQLParser.g:12292:1: rule__PivotTable__Group__4__Impl : ( ( rule__PivotTable__PforAssignment_4 ) ) ;
    public final void rule__PivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12296:1: ( ( ( rule__PivotTable__PforAssignment_4 ) ) )
            // InternalSQLParser.g:12297:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            {
            // InternalSQLParser.g:12297:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            // InternalSQLParser.g:12298:2: ( rule__PivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSQLParser.g:12299:2: ( rule__PivotTable__PforAssignment_4 )
            // InternalSQLParser.g:12299:3: rule__PivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4__Impl"


    // $ANTLR start "rule__PivotTable__Group__5"
    // InternalSQLParser.g:12307:1: rule__PivotTable__Group__5 : rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 ;
    public final void rule__PivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12311:1: ( rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 )
            // InternalSQLParser.g:12312:2: rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6
            {
            pushFollow(FOLLOW_10);
            rule__PivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5"


    // $ANTLR start "rule__PivotTable__Group__5__Impl"
    // InternalSQLParser.g:12319:1: rule__PivotTable__Group__5__Impl : ( ( rule__PivotTable__PinAssignment_5 ) ) ;
    public final void rule__PivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12323:1: ( ( ( rule__PivotTable__PinAssignment_5 ) ) )
            // InternalSQLParser.g:12324:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            {
            // InternalSQLParser.g:12324:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            // InternalSQLParser.g:12325:2: ( rule__PivotTable__PinAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }
            // InternalSQLParser.g:12326:2: ( rule__PivotTable__PinAssignment_5 )
            // InternalSQLParser.g:12326:3: rule__PivotTable__PinAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PinAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5__Impl"


    // $ANTLR start "rule__PivotTable__Group__6"
    // InternalSQLParser.g:12334:1: rule__PivotTable__Group__6 : rule__PivotTable__Group__6__Impl ;
    public final void rule__PivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12338:1: ( rule__PivotTable__Group__6__Impl )
            // InternalSQLParser.g:12339:2: rule__PivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6"


    // $ANTLR start "rule__PivotTable__Group__6__Impl"
    // InternalSQLParser.g:12345:1: rule__PivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__PivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12349:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:12350:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:12350:1: ( RightParenthesis )
            // InternalSQLParser.g:12351:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6__Impl"


    // $ANTLR start "rule__PivotInClause__Group__0"
    // InternalSQLParser.g:12361:1: rule__PivotInClause__Group__0 : rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 ;
    public final void rule__PivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12365:1: ( rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 )
            // InternalSQLParser.g:12366:2: rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__PivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0"


    // $ANTLR start "rule__PivotInClause__Group__0__Impl"
    // InternalSQLParser.g:12373:1: rule__PivotInClause__Group__0__Impl : ( IN ) ;
    public final void rule__PivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12377:1: ( ( IN ) )
            // InternalSQLParser.g:12378:1: ( IN )
            {
            // InternalSQLParser.g:12378:1: ( IN )
            // InternalSQLParser.g:12379:2: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0__Impl"


    // $ANTLR start "rule__PivotInClause__Group__1"
    // InternalSQLParser.g:12388:1: rule__PivotInClause__Group__1 : rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 ;
    public final void rule__PivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12392:1: ( rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 )
            // InternalSQLParser.g:12393:2: rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2
            {
            pushFollow(FOLLOW_64);
            rule__PivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1"


    // $ANTLR start "rule__PivotInClause__Group__1__Impl"
    // InternalSQLParser.g:12400:1: rule__PivotInClause__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12404:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:12405:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:12405:1: ( LeftParenthesis )
            // InternalSQLParser.g:12406:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1__Impl"


    // $ANTLR start "rule__PivotInClause__Group__2"
    // InternalSQLParser.g:12415:1: rule__PivotInClause__Group__2 : rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 ;
    public final void rule__PivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12419:1: ( rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 )
            // InternalSQLParser.g:12420:2: rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__PivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2"


    // $ANTLR start "rule__PivotInClause__Group__2__Impl"
    // InternalSQLParser.g:12427:1: rule__PivotInClause__Group__2__Impl : ( ( rule__PivotInClause__Alternatives_2 ) ) ;
    public final void rule__PivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12431:1: ( ( ( rule__PivotInClause__Alternatives_2 ) ) )
            // InternalSQLParser.g:12432:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            {
            // InternalSQLParser.g:12432:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            // InternalSQLParser.g:12433:2: ( rule__PivotInClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:12434:2: ( rule__PivotInClause__Alternatives_2 )
            // InternalSQLParser.g:12434:3: rule__PivotInClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2__Impl"


    // $ANTLR start "rule__PivotInClause__Group__3"
    // InternalSQLParser.g:12442:1: rule__PivotInClause__Group__3 : rule__PivotInClause__Group__3__Impl ;
    public final void rule__PivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12446:1: ( rule__PivotInClause__Group__3__Impl )
            // InternalSQLParser.g:12447:2: rule__PivotInClause__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3"


    // $ANTLR start "rule__PivotInClause__Group__3__Impl"
    // InternalSQLParser.g:12453:1: rule__PivotInClause__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__PivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12457:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:12458:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:12458:1: ( RightParenthesis )
            // InternalSQLParser.g:12459:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__0"
    // InternalSQLParser.g:12469:1: rule__PivotInClauseAny__Group__0 : rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 ;
    public final void rule__PivotInClauseAny__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12473:1: ( rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 )
            // InternalSQLParser.g:12474:2: rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__PivotInClauseAny__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0"


    // $ANTLR start "rule__PivotInClauseAny__Group__0__Impl"
    // InternalSQLParser.g:12481:1: rule__PivotInClauseAny__Group__0__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12485:1: ( ( ANY ) )
            // InternalSQLParser.g:12486:1: ( ANY )
            {
            // InternalSQLParser.g:12486:1: ( ANY )
            // InternalSQLParser.g:12487:2: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__1"
    // InternalSQLParser.g:12496:1: rule__PivotInClauseAny__Group__1 : rule__PivotInClauseAny__Group__1__Impl ;
    public final void rule__PivotInClauseAny__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12500:1: ( rule__PivotInClauseAny__Group__1__Impl )
            // InternalSQLParser.g:12501:2: rule__PivotInClauseAny__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1"


    // $ANTLR start "rule__PivotInClauseAny__Group__1__Impl"
    // InternalSQLParser.g:12507:1: rule__PivotInClauseAny__Group__1__Impl : ( ( rule__PivotInClauseAny__Group_1__0 )* ) ;
    public final void rule__PivotInClauseAny__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12511:1: ( ( ( rule__PivotInClauseAny__Group_1__0 )* ) )
            // InternalSQLParser.g:12512:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            {
            // InternalSQLParser.g:12512:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            // InternalSQLParser.g:12513:2: ( rule__PivotInClauseAny__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12514:2: ( rule__PivotInClauseAny__Group_1__0 )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==Comma) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalSQLParser.g:12514:3: rule__PivotInClauseAny__Group_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__PivotInClauseAny__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0"
    // InternalSQLParser.g:12523:1: rule__PivotInClauseAny__Group_1__0 : rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 ;
    public final void rule__PivotInClauseAny__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12527:1: ( rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 )
            // InternalSQLParser.g:12528:2: rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1
            {
            pushFollow(FOLLOW_65);
            rule__PivotInClauseAny__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0__Impl"
    // InternalSQLParser.g:12535:1: rule__PivotInClauseAny__Group_1__0__Impl : ( Comma ) ;
    public final void rule__PivotInClauseAny__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12539:1: ( ( Comma ) )
            // InternalSQLParser.g:12540:1: ( Comma )
            {
            // InternalSQLParser.g:12540:1: ( Comma )
            // InternalSQLParser.g:12541:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1"
    // InternalSQLParser.g:12550:1: rule__PivotInClauseAny__Group_1__1 : rule__PivotInClauseAny__Group_1__1__Impl ;
    public final void rule__PivotInClauseAny__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12554:1: ( rule__PivotInClauseAny__Group_1__1__Impl )
            // InternalSQLParser.g:12555:2: rule__PivotInClauseAny__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1__Impl"
    // InternalSQLParser.g:12561:1: rule__PivotInClauseAny__Group_1__1__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12565:1: ( ( ANY ) )
            // InternalSQLParser.g:12566:1: ( ANY )
            {
            // InternalSQLParser.g:12566:1: ( ANY )
            // InternalSQLParser.g:12567:2: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__0"
    // InternalSQLParser.g:12577:1: rule__UnpivotTable__Group__0 : rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 ;
    public final void rule__UnpivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12581:1: ( rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 )
            // InternalSQLParser.g:12582:2: rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__UnpivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0"


    // $ANTLR start "rule__UnpivotTable__Group__0__Impl"
    // InternalSQLParser.g:12589:1: rule__UnpivotTable__Group__0__Impl : ( UNPIVOT ) ;
    public final void rule__UnpivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12593:1: ( ( UNPIVOT ) )
            // InternalSQLParser.g:12594:1: ( UNPIVOT )
            {
            // InternalSQLParser.g:12594:1: ( UNPIVOT )
            // InternalSQLParser.g:12595:2: UNPIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }
            match(input,UNPIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__1"
    // InternalSQLParser.g:12604:1: rule__UnpivotTable__Group__1 : rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 ;
    public final void rule__UnpivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12608:1: ( rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 )
            // InternalSQLParser.g:12609:2: rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2
            {
            pushFollow(FOLLOW_66);
            rule__UnpivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1"


    // $ANTLR start "rule__UnpivotTable__Group__1__Impl"
    // InternalSQLParser.g:12616:1: rule__UnpivotTable__Group__1__Impl : ( ( rule__UnpivotTable__Group_1__0 )? ) ;
    public final void rule__UnpivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12620:1: ( ( ( rule__UnpivotTable__Group_1__0 )? ) )
            // InternalSQLParser.g:12621:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            {
            // InternalSQLParser.g:12621:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            // InternalSQLParser.g:12622:2: ( rule__UnpivotTable__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12623:2: ( rule__UnpivotTable__Group_1__0 )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==EXCLUDE||LA125_0==INCLUDE) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalSQLParser.g:12623:3: rule__UnpivotTable__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotTable__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__2"
    // InternalSQLParser.g:12631:1: rule__UnpivotTable__Group__2 : rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 ;
    public final void rule__UnpivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12635:1: ( rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 )
            // InternalSQLParser.g:12636:2: rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2"


    // $ANTLR start "rule__UnpivotTable__Group__2__Impl"
    // InternalSQLParser.g:12643:1: rule__UnpivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12647:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:12648:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:12648:1: ( LeftParenthesis )
            // InternalSQLParser.g:12649:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__3"
    // InternalSQLParser.g:12658:1: rule__UnpivotTable__Group__3 : rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 ;
    public final void rule__UnpivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12662:1: ( rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 )
            // InternalSQLParser.g:12663:2: rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4
            {
            pushFollow(FOLLOW_62);
            rule__UnpivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3"


    // $ANTLR start "rule__UnpivotTable__Group__3__Impl"
    // InternalSQLParser.g:12670:1: rule__UnpivotTable__Group__3__Impl : ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) ;
    public final void rule__UnpivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12674:1: ( ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) )
            // InternalSQLParser.g:12675:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            {
            // InternalSQLParser.g:12675:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            // InternalSQLParser.g:12676:2: ( rule__UnpivotTable__PcolsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }
            // InternalSQLParser.g:12677:2: ( rule__UnpivotTable__PcolsAssignment_3 )
            // InternalSQLParser.g:12677:3: rule__UnpivotTable__PcolsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PcolsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__4"
    // InternalSQLParser.g:12685:1: rule__UnpivotTable__Group__4 : rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 ;
    public final void rule__UnpivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12689:1: ( rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 )
            // InternalSQLParser.g:12690:2: rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5
            {
            pushFollow(FOLLOW_63);
            rule__UnpivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4"


    // $ANTLR start "rule__UnpivotTable__Group__4__Impl"
    // InternalSQLParser.g:12697:1: rule__UnpivotTable__Group__4__Impl : ( ( rule__UnpivotTable__PforAssignment_4 ) ) ;
    public final void rule__UnpivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12701:1: ( ( ( rule__UnpivotTable__PforAssignment_4 ) ) )
            // InternalSQLParser.g:12702:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            {
            // InternalSQLParser.g:12702:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            // InternalSQLParser.g:12703:2: ( rule__UnpivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSQLParser.g:12704:2: ( rule__UnpivotTable__PforAssignment_4 )
            // InternalSQLParser.g:12704:3: rule__UnpivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__5"
    // InternalSQLParser.g:12712:1: rule__UnpivotTable__Group__5 : rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 ;
    public final void rule__UnpivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12716:1: ( rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 )
            // InternalSQLParser.g:12717:2: rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6
            {
            pushFollow(FOLLOW_10);
            rule__UnpivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5"


    // $ANTLR start "rule__UnpivotTable__Group__5__Impl"
    // InternalSQLParser.g:12724:1: rule__UnpivotTable__Group__5__Impl : ( ( rule__UnpivotTable__InopAssignment_5 ) ) ;
    public final void rule__UnpivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12728:1: ( ( ( rule__UnpivotTable__InopAssignment_5 ) ) )
            // InternalSQLParser.g:12729:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            {
            // InternalSQLParser.g:12729:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            // InternalSQLParser.g:12730:2: ( rule__UnpivotTable__InopAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }
            // InternalSQLParser.g:12731:2: ( rule__UnpivotTable__InopAssignment_5 )
            // InternalSQLParser.g:12731:3: rule__UnpivotTable__InopAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__InopAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__6"
    // InternalSQLParser.g:12739:1: rule__UnpivotTable__Group__6 : rule__UnpivotTable__Group__6__Impl ;
    public final void rule__UnpivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12743:1: ( rule__UnpivotTable__Group__6__Impl )
            // InternalSQLParser.g:12744:2: rule__UnpivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6"


    // $ANTLR start "rule__UnpivotTable__Group__6__Impl"
    // InternalSQLParser.g:12750:1: rule__UnpivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12754:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:12755:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:12755:1: ( RightParenthesis )
            // InternalSQLParser.g:12756:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__0"
    // InternalSQLParser.g:12766:1: rule__UnpivotTable__Group_1__0 : rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 ;
    public final void rule__UnpivotTable__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12770:1: ( rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 )
            // InternalSQLParser.g:12771:2: rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1
            {
            pushFollow(FOLLOW_67);
            rule__UnpivotTable__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0"


    // $ANTLR start "rule__UnpivotTable__Group_1__0__Impl"
    // InternalSQLParser.g:12778:1: rule__UnpivotTable__Group_1__0__Impl : ( ( rule__UnpivotTable__Alternatives_1_0 ) ) ;
    public final void rule__UnpivotTable__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12782:1: ( ( ( rule__UnpivotTable__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:12783:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:12783:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            // InternalSQLParser.g:12784:2: ( rule__UnpivotTable__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:12785:2: ( rule__UnpivotTable__Alternatives_1_0 )
            // InternalSQLParser.g:12785:3: rule__UnpivotTable__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__1"
    // InternalSQLParser.g:12793:1: rule__UnpivotTable__Group_1__1 : rule__UnpivotTable__Group_1__1__Impl ;
    public final void rule__UnpivotTable__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12797:1: ( rule__UnpivotTable__Group_1__1__Impl )
            // InternalSQLParser.g:12798:2: rule__UnpivotTable__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1"


    // $ANTLR start "rule__UnpivotTable__Group_1__1__Impl"
    // InternalSQLParser.g:12804:1: rule__UnpivotTable__Group_1__1__Impl : ( NULLS ) ;
    public final void rule__UnpivotTable__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12808:1: ( ( NULLS ) )
            // InternalSQLParser.g:12809:1: ( NULLS )
            {
            // InternalSQLParser.g:12809:1: ( NULLS )
            // InternalSQLParser.g:12810:2: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__0"
    // InternalSQLParser.g:12820:1: rule__UnpivotInClause__Group__0 : rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 ;
    public final void rule__UnpivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12824:1: ( rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 )
            // InternalSQLParser.g:12825:2: rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__UnpivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0"


    // $ANTLR start "rule__UnpivotInClause__Group__0__Impl"
    // InternalSQLParser.g:12832:1: rule__UnpivotInClause__Group__0__Impl : ( () ) ;
    public final void rule__UnpivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12836:1: ( ( () ) )
            // InternalSQLParser.g:12837:1: ( () )
            {
            // InternalSQLParser.g:12837:1: ( () )
            // InternalSQLParser.g:12838:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }
            // InternalSQLParser.g:12839:2: ()
            // InternalSQLParser.g:12839:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__1"
    // InternalSQLParser.g:12847:1: rule__UnpivotInClause__Group__1 : rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 ;
    public final void rule__UnpivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12851:1: ( rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 )
            // InternalSQLParser.g:12852:2: rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__UnpivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1"


    // $ANTLR start "rule__UnpivotInClause__Group__1__Impl"
    // InternalSQLParser.g:12859:1: rule__UnpivotInClause__Group__1__Impl : ( ( rule__UnpivotInClause__OpAssignment_1 ) ) ;
    public final void rule__UnpivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12863:1: ( ( ( rule__UnpivotInClause__OpAssignment_1 ) ) )
            // InternalSQLParser.g:12864:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:12864:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            // InternalSQLParser.g:12865:2: ( rule__UnpivotInClause__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:12866:2: ( rule__UnpivotInClause__OpAssignment_1 )
            // InternalSQLParser.g:12866:3: rule__UnpivotInClause__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__2"
    // InternalSQLParser.g:12874:1: rule__UnpivotInClause__Group__2 : rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 ;
    public final void rule__UnpivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12878:1: ( rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 )
            // InternalSQLParser.g:12879:2: rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2"


    // $ANTLR start "rule__UnpivotInClause__Group__2__Impl"
    // InternalSQLParser.g:12886:1: rule__UnpivotInClause__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12890:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:12891:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:12891:1: ( LeftParenthesis )
            // InternalSQLParser.g:12892:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__3"
    // InternalSQLParser.g:12901:1: rule__UnpivotInClause__Group__3 : rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 ;
    public final void rule__UnpivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12905:1: ( rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 )
            // InternalSQLParser.g:12906:2: rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__UnpivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3"


    // $ANTLR start "rule__UnpivotInClause__Group__3__Impl"
    // InternalSQLParser.g:12913:1: rule__UnpivotInClause__Group__3__Impl : ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) ;
    public final void rule__UnpivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12917:1: ( ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) )
            // InternalSQLParser.g:12918:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            {
            // InternalSQLParser.g:12918:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            // InternalSQLParser.g:12919:2: ( rule__UnpivotInClause__ArgsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }
            // InternalSQLParser.g:12920:2: ( rule__UnpivotInClause__ArgsAssignment_3 )
            // InternalSQLParser.g:12920:3: rule__UnpivotInClause__ArgsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__ArgsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__4"
    // InternalSQLParser.g:12928:1: rule__UnpivotInClause__Group__4 : rule__UnpivotInClause__Group__4__Impl ;
    public final void rule__UnpivotInClause__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12932:1: ( rule__UnpivotInClause__Group__4__Impl )
            // InternalSQLParser.g:12933:2: rule__UnpivotInClause__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4"


    // $ANTLR start "rule__UnpivotInClause__Group__4__Impl"
    // InternalSQLParser.g:12939:1: rule__UnpivotInClause__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotInClause__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12943:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:12944:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:12944:1: ( RightParenthesis )
            // InternalSQLParser.g:12945:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0"
    // InternalSQLParser.g:12955:1: rule__UnpivotInClauseArgs__Group__0 : rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 ;
    public final void rule__UnpivotInClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12959:1: ( rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 )
            // InternalSQLParser.g:12960:2: rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__UnpivotInClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0__Impl"
    // InternalSQLParser.g:12967:1: rule__UnpivotInClauseArgs__Group__0__Impl : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12971:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSQLParser.g:12972:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSQLParser.g:12972:1: ( ruleUnpivotInClauseArg )
            // InternalSQLParser.g:12973:2: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1"
    // InternalSQLParser.g:12982:1: rule__UnpivotInClauseArgs__Group__1 : rule__UnpivotInClauseArgs__Group__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12986:1: ( rule__UnpivotInClauseArgs__Group__1__Impl )
            // InternalSQLParser.g:12987:2: rule__UnpivotInClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1__Impl"
    // InternalSQLParser.g:12993:1: rule__UnpivotInClauseArgs__Group__1__Impl : ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12997:1: ( ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:12998:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:12998:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            // InternalSQLParser.g:12999:2: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:13000:2: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==Comma) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSQLParser.g:13000:3: rule__UnpivotInClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0"
    // InternalSQLParser.g:13009:1: rule__UnpivotInClauseArgs__Group_1__0 : rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13013:1: ( rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 )
            // InternalSQLParser.g:13014:2: rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__UnpivotInClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0__Impl"
    // InternalSQLParser.g:13021:1: rule__UnpivotInClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13025:1: ( ( () ) )
            // InternalSQLParser.g:13026:1: ( () )
            {
            // InternalSQLParser.g:13026:1: ( () )
            // InternalSQLParser.g:13027:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:13028:2: ()
            // InternalSQLParser.g:13028:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1"
    // InternalSQLParser.g:13036:1: rule__UnpivotInClauseArgs__Group_1__1 : rule__UnpivotInClauseArgs__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13040:1: ( rule__UnpivotInClauseArgs__Group_1__1__Impl )
            // InternalSQLParser.g:13041:2: rule__UnpivotInClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1__Impl"
    // InternalSQLParser.g:13047:1: rule__UnpivotInClauseArgs__Group_1__1__Impl : ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13051:1: ( ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:13052:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:13052:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:13053:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:13053:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:13054:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13055:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            // InternalSQLParser.g:13055:4: rule__UnpivotInClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__UnpivotInClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:13058:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:13059:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13060:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==Comma) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // InternalSQLParser.g:13060:4: rule__UnpivotInClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__UnpivotInClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0"
    // InternalSQLParser.g:13070:1: rule__UnpivotInClauseArgs__Group_1_1__0 : rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13074:1: ( rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 )
            // InternalSQLParser.g:13075:2: rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotInClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:13082:1: rule__UnpivotInClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13086:1: ( ( Comma ) )
            // InternalSQLParser.g:13087:1: ( Comma )
            {
            // InternalSQLParser.g:13087:1: ( Comma )
            // InternalSQLParser.g:13088:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1"
    // InternalSQLParser.g:13097:1: rule__UnpivotInClauseArgs__Group_1_1__1 : rule__UnpivotInClauseArgs__Group_1_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13101:1: ( rule__UnpivotInClauseArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:13102:2: rule__UnpivotInClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:13108:1: rule__UnpivotInClauseArgs__Group_1_1__1__Impl : ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13112:1: ( ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:13113:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:13113:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:13114:2: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:13115:2: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:13115:3: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0"
    // InternalSQLParser.g:13124:1: rule__UnpivotInClauseArg__Group__0 : rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 ;
    public final void rule__UnpivotInClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13128:1: ( rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 )
            // InternalSQLParser.g:13129:2: rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1
            {
            pushFollow(FOLLOW_68);
            rule__UnpivotInClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0__Impl"
    // InternalSQLParser.g:13136:1: rule__UnpivotInClauseArg__Group__0__Impl : ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) ;
    public final void rule__UnpivotInClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13140:1: ( ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) )
            // InternalSQLParser.g:13141:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            {
            // InternalSQLParser.g:13141:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            // InternalSQLParser.g:13142:2: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }
            // InternalSQLParser.g:13143:2: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            // InternalSQLParser.g:13143:3: rule__UnpivotInClauseArg__PcolsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__PcolsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1"
    // InternalSQLParser.g:13151:1: rule__UnpivotInClauseArg__Group__1 : rule__UnpivotInClauseArg__Group__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13155:1: ( rule__UnpivotInClauseArg__Group__1__Impl )
            // InternalSQLParser.g:13156:2: rule__UnpivotInClauseArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1__Impl"
    // InternalSQLParser.g:13162:1: rule__UnpivotInClauseArg__Group__1__Impl : ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13166:1: ( ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) )
            // InternalSQLParser.g:13167:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            {
            // InternalSQLParser.g:13167:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            // InternalSQLParser.g:13168:2: ( rule__UnpivotInClauseArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:13169:2: ( rule__UnpivotInClauseArg__Group_1__0 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==AS) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSQLParser.g:13169:3: rule__UnpivotInClauseArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0"
    // InternalSQLParser.g:13178:1: rule__UnpivotInClauseArg__Group_1__0 : rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 ;
    public final void rule__UnpivotInClauseArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13182:1: ( rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 )
            // InternalSQLParser.g:13183:2: rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotInClauseArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0__Impl"
    // InternalSQLParser.g:13190:1: rule__UnpivotInClauseArg__Group_1__0__Impl : ( AS ) ;
    public final void rule__UnpivotInClauseArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13194:1: ( ( AS ) )
            // InternalSQLParser.g:13195:1: ( AS )
            {
            // InternalSQLParser.g:13195:1: ( AS )
            // InternalSQLParser.g:13196:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1"
    // InternalSQLParser.g:13205:1: rule__UnpivotInClauseArg__Group_1__1 : rule__UnpivotInClauseArg__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13209:1: ( rule__UnpivotInClauseArg__Group_1__1__Impl )
            // InternalSQLParser.g:13210:2: rule__UnpivotInClauseArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1__Impl"
    // InternalSQLParser.g:13216:1: rule__UnpivotInClauseArg__Group_1__1__Impl : ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) ;
    public final void rule__UnpivotInClauseArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13220:1: ( ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) )
            // InternalSQLParser.g:13221:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            {
            // InternalSQLParser.g:13221:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            // InternalSQLParser.g:13222:2: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }
            // InternalSQLParser.g:13223:2: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            // InternalSQLParser.g:13223:3: rule__UnpivotInClauseArg__CfulsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__CfulsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group__0"
    // InternalSQLParser.g:13232:1: rule__PivotForClause__Group__0 : rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 ;
    public final void rule__PivotForClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13236:1: ( rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 )
            // InternalSQLParser.g:13237:2: rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__PivotForClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0"


    // $ANTLR start "rule__PivotForClause__Group__0__Impl"
    // InternalSQLParser.g:13244:1: rule__PivotForClause__Group__0__Impl : ( FOR ) ;
    public final void rule__PivotForClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13248:1: ( ( FOR ) )
            // InternalSQLParser.g:13249:1: ( FOR )
            {
            // InternalSQLParser.g:13249:1: ( FOR )
            // InternalSQLParser.g:13250:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group__1"
    // InternalSQLParser.g:13259:1: rule__PivotForClause__Group__1 : rule__PivotForClause__Group__1__Impl ;
    public final void rule__PivotForClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13263:1: ( rule__PivotForClause__Group__1__Impl )
            // InternalSQLParser.g:13264:2: rule__PivotForClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1"


    // $ANTLR start "rule__PivotForClause__Group__1__Impl"
    // InternalSQLParser.g:13270:1: rule__PivotForClause__Group__1__Impl : ( ( rule__PivotForClause__Alternatives_1 ) ) ;
    public final void rule__PivotForClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13274:1: ( ( ( rule__PivotForClause__Alternatives_1 ) ) )
            // InternalSQLParser.g:13275:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            {
            // InternalSQLParser.g:13275:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            // InternalSQLParser.g:13276:2: ( rule__PivotForClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:13277:2: ( rule__PivotForClause__Alternatives_1 )
            // InternalSQLParser.g:13277:3: rule__PivotForClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0"
    // InternalSQLParser.g:13286:1: rule__PivotForClause__Group_1_1__0 : rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 ;
    public final void rule__PivotForClause__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13290:1: ( rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 )
            // InternalSQLParser.g:13291:2: rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1
            {
            pushFollow(FOLLOW_40);
            rule__PivotForClause__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0__Impl"
    // InternalSQLParser.g:13298:1: rule__PivotForClause__Group_1_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13302:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:13303:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:13303:1: ( LeftParenthesis )
            // InternalSQLParser.g:13304:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1"
    // InternalSQLParser.g:13313:1: rule__PivotForClause__Group_1_1__1 : rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 ;
    public final void rule__PivotForClause__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13317:1: ( rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 )
            // InternalSQLParser.g:13318:2: rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2
            {
            pushFollow(FOLLOW_10);
            rule__PivotForClause__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1__Impl"
    // InternalSQLParser.g:13325:1: rule__PivotForClause__Group_1_1__1__Impl : ( ruleColumns ) ;
    public final void rule__PivotForClause__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13329:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:13330:1: ( ruleColumns )
            {
            // InternalSQLParser.g:13330:1: ( ruleColumns )
            // InternalSQLParser.g:13331:2: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2"
    // InternalSQLParser.g:13340:1: rule__PivotForClause__Group_1_1__2 : rule__PivotForClause__Group_1_1__2__Impl ;
    public final void rule__PivotForClause__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13344:1: ( rule__PivotForClause__Group_1_1__2__Impl )
            // InternalSQLParser.g:13345:2: rule__PivotForClause__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2__Impl"
    // InternalSQLParser.g:13351:1: rule__PivotForClause__Group_1_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13355:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:13356:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:13356:1: ( RightParenthesis )
            // InternalSQLParser.g:13357:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__0"
    // InternalSQLParser.g:13367:1: rule__PivotColumns__Group_1__0 : rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 ;
    public final void rule__PivotColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13371:1: ( rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 )
            // InternalSQLParser.g:13372:2: rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1
            {
            pushFollow(FOLLOW_32);
            rule__PivotColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0"


    // $ANTLR start "rule__PivotColumns__Group_1__0__Impl"
    // InternalSQLParser.g:13379:1: rule__PivotColumns__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13383:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:13384:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:13384:1: ( LeftParenthesis )
            // InternalSQLParser.g:13385:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__1"
    // InternalSQLParser.g:13394:1: rule__PivotColumns__Group_1__1 : rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 ;
    public final void rule__PivotColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13398:1: ( rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 )
            // InternalSQLParser.g:13399:2: rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2
            {
            pushFollow(FOLLOW_10);
            rule__PivotColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1"


    // $ANTLR start "rule__PivotColumns__Group_1__1__Impl"
    // InternalSQLParser.g:13406:1: rule__PivotColumns__Group_1__1__Impl : ( rulePivotCols ) ;
    public final void rule__PivotColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13410:1: ( ( rulePivotCols ) )
            // InternalSQLParser.g:13411:1: ( rulePivotCols )
            {
            // InternalSQLParser.g:13411:1: ( rulePivotCols )
            // InternalSQLParser.g:13412:2: rulePivotCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__2"
    // InternalSQLParser.g:13421:1: rule__PivotColumns__Group_1__2 : rule__PivotColumns__Group_1__2__Impl ;
    public final void rule__PivotColumns__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13425:1: ( rule__PivotColumns__Group_1__2__Impl )
            // InternalSQLParser.g:13426:2: rule__PivotColumns__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2"


    // $ANTLR start "rule__PivotColumns__Group_1__2__Impl"
    // InternalSQLParser.g:13432:1: rule__PivotColumns__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotColumns__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13436:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:13437:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:13437:1: ( RightParenthesis )
            // InternalSQLParser.g:13438:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2__Impl"


    // $ANTLR start "rule__PivotCols__Group__0"
    // InternalSQLParser.g:13448:1: rule__PivotCols__Group__0 : rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 ;
    public final void rule__PivotCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13452:1: ( rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 )
            // InternalSQLParser.g:13453:2: rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__PivotCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0"


    // $ANTLR start "rule__PivotCols__Group__0__Impl"
    // InternalSQLParser.g:13460:1: rule__PivotCols__Group__0__Impl : ( rulePivotCol ) ;
    public final void rule__PivotCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13464:1: ( ( rulePivotCol ) )
            // InternalSQLParser.g:13465:1: ( rulePivotCol )
            {
            // InternalSQLParser.g:13465:1: ( rulePivotCol )
            // InternalSQLParser.g:13466:2: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0__Impl"


    // $ANTLR start "rule__PivotCols__Group__1"
    // InternalSQLParser.g:13475:1: rule__PivotCols__Group__1 : rule__PivotCols__Group__1__Impl ;
    public final void rule__PivotCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13479:1: ( rule__PivotCols__Group__1__Impl )
            // InternalSQLParser.g:13480:2: rule__PivotCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1"


    // $ANTLR start "rule__PivotCols__Group__1__Impl"
    // InternalSQLParser.g:13486:1: rule__PivotCols__Group__1__Impl : ( ( rule__PivotCols__Group_1__0 )? ) ;
    public final void rule__PivotCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13490:1: ( ( ( rule__PivotCols__Group_1__0 )? ) )
            // InternalSQLParser.g:13491:1: ( ( rule__PivotCols__Group_1__0 )? )
            {
            // InternalSQLParser.g:13491:1: ( ( rule__PivotCols__Group_1__0 )? )
            // InternalSQLParser.g:13492:2: ( rule__PivotCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:13493:2: ( rule__PivotCols__Group_1__0 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==Comma) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalSQLParser.g:13493:3: rule__PivotCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__0"
    // InternalSQLParser.g:13502:1: rule__PivotCols__Group_1__0 : rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 ;
    public final void rule__PivotCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13506:1: ( rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 )
            // InternalSQLParser.g:13507:2: rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__PivotCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0"


    // $ANTLR start "rule__PivotCols__Group_1__0__Impl"
    // InternalSQLParser.g:13514:1: rule__PivotCols__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13518:1: ( ( () ) )
            // InternalSQLParser.g:13519:1: ( () )
            {
            // InternalSQLParser.g:13519:1: ( () )
            // InternalSQLParser.g:13520:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:13521:2: ()
            // InternalSQLParser.g:13521:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__1"
    // InternalSQLParser.g:13529:1: rule__PivotCols__Group_1__1 : rule__PivotCols__Group_1__1__Impl ;
    public final void rule__PivotCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13533:1: ( rule__PivotCols__Group_1__1__Impl )
            // InternalSQLParser.g:13534:2: rule__PivotCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1"


    // $ANTLR start "rule__PivotCols__Group_1__1__Impl"
    // InternalSQLParser.g:13540:1: rule__PivotCols__Group_1__1__Impl : ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13544:1: ( ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:13545:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:13545:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            // InternalSQLParser.g:13546:2: ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:13546:2: ( ( rule__PivotCols__Group_1_1__0 ) )
            // InternalSQLParser.g:13547:3: ( rule__PivotCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13548:3: ( rule__PivotCols__Group_1_1__0 )
            // InternalSQLParser.g:13548:4: rule__PivotCols__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__PivotCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:13551:2: ( ( rule__PivotCols__Group_1_1__0 )* )
            // InternalSQLParser.g:13552:3: ( rule__PivotCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13553:3: ( rule__PivotCols__Group_1_1__0 )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==Comma) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // InternalSQLParser.g:13553:4: rule__PivotCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__PivotCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__0"
    // InternalSQLParser.g:13563:1: rule__PivotCols__Group_1_1__0 : rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 ;
    public final void rule__PivotCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13567:1: ( rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 )
            // InternalSQLParser.g:13568:2: rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__PivotCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0"


    // $ANTLR start "rule__PivotCols__Group_1_1__0__Impl"
    // InternalSQLParser.g:13575:1: rule__PivotCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__PivotCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13579:1: ( ( Comma ) )
            // InternalSQLParser.g:13580:1: ( Comma )
            {
            // InternalSQLParser.g:13580:1: ( Comma )
            // InternalSQLParser.g:13581:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__1"
    // InternalSQLParser.g:13590:1: rule__PivotCols__Group_1_1__1 : rule__PivotCols__Group_1_1__1__Impl ;
    public final void rule__PivotCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13594:1: ( rule__PivotCols__Group_1_1__1__Impl )
            // InternalSQLParser.g:13595:2: rule__PivotCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1"


    // $ANTLR start "rule__PivotCols__Group_1_1__1__Impl"
    // InternalSQLParser.g:13601:1: rule__PivotCols__Group_1_1__1__Impl : ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13605:1: ( ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:13606:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:13606:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:13607:2: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:13608:2: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:13608:3: rule__PivotCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group__0"
    // InternalSQLParser.g:13617:1: rule__PivotCol__Group__0 : rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 ;
    public final void rule__PivotCol__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13621:1: ( rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 )
            // InternalSQLParser.g:13622:2: rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__PivotCol__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0"


    // $ANTLR start "rule__PivotCol__Group__0__Impl"
    // InternalSQLParser.g:13629:1: rule__PivotCol__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13633:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:13634:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:13634:1: ( ruleDbObjectName )
            // InternalSQLParser.g:13635:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0__Impl"


    // $ANTLR start "rule__PivotCol__Group__1"
    // InternalSQLParser.g:13644:1: rule__PivotCol__Group__1 : rule__PivotCol__Group__1__Impl ;
    public final void rule__PivotCol__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13648:1: ( rule__PivotCol__Group__1__Impl )
            // InternalSQLParser.g:13649:2: rule__PivotCol__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1"


    // $ANTLR start "rule__PivotCol__Group__1__Impl"
    // InternalSQLParser.g:13655:1: rule__PivotCol__Group__1__Impl : ( ( rule__PivotCol__Group_1__0 )? ) ;
    public final void rule__PivotCol__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13659:1: ( ( ( rule__PivotCol__Group_1__0 )? ) )
            // InternalSQLParser.g:13660:1: ( ( rule__PivotCol__Group_1__0 )? )
            {
            // InternalSQLParser.g:13660:1: ( ( rule__PivotCol__Group_1__0 )? )
            // InternalSQLParser.g:13661:2: ( rule__PivotCol__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:13662:2: ( rule__PivotCol__Group_1__0 )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==FullStop) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSQLParser.g:13662:3: rule__PivotCol__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCol__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__0"
    // InternalSQLParser.g:13671:1: rule__PivotCol__Group_1__0 : rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 ;
    public final void rule__PivotCol__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13675:1: ( rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 )
            // InternalSQLParser.g:13676:2: rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1
            {
            pushFollow(FOLLOW_53);
            rule__PivotCol__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0"


    // $ANTLR start "rule__PivotCol__Group_1__0__Impl"
    // InternalSQLParser.g:13683:1: rule__PivotCol__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCol__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13687:1: ( ( () ) )
            // InternalSQLParser.g:13688:1: ( () )
            {
            // InternalSQLParser.g:13688:1: ( () )
            // InternalSQLParser.g:13689:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:13690:2: ()
            // InternalSQLParser.g:13690:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__1"
    // InternalSQLParser.g:13698:1: rule__PivotCol__Group_1__1 : rule__PivotCol__Group_1__1__Impl ;
    public final void rule__PivotCol__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13702:1: ( rule__PivotCol__Group_1__1__Impl )
            // InternalSQLParser.g:13703:2: rule__PivotCol__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1"


    // $ANTLR start "rule__PivotCol__Group_1__1__Impl"
    // InternalSQLParser.g:13709:1: rule__PivotCol__Group_1__1__Impl : ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCol__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13713:1: ( ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:13714:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:13714:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            // InternalSQLParser.g:13715:2: ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:13715:2: ( ( rule__PivotCol__Group_1_1__0 ) )
            // InternalSQLParser.g:13716:3: ( rule__PivotCol__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13717:3: ( rule__PivotCol__Group_1_1__0 )
            // InternalSQLParser.g:13717:4: rule__PivotCol__Group_1_1__0
            {
            pushFollow(FOLLOW_54);
            rule__PivotCol__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:13720:2: ( ( rule__PivotCol__Group_1_1__0 )* )
            // InternalSQLParser.g:13721:3: ( rule__PivotCol__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13722:3: ( rule__PivotCol__Group_1_1__0 )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==FullStop) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalSQLParser.g:13722:4: rule__PivotCol__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__PivotCol__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__0"
    // InternalSQLParser.g:13732:1: rule__PivotCol__Group_1_1__0 : rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 ;
    public final void rule__PivotCol__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13736:1: ( rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 )
            // InternalSQLParser.g:13737:2: rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__PivotCol__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0"


    // $ANTLR start "rule__PivotCol__Group_1_1__0__Impl"
    // InternalSQLParser.g:13744:1: rule__PivotCol__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__PivotCol__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13748:1: ( ( FullStop ) )
            // InternalSQLParser.g:13749:1: ( FullStop )
            {
            // InternalSQLParser.g:13749:1: ( FullStop )
            // InternalSQLParser.g:13750:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__1"
    // InternalSQLParser.g:13759:1: rule__PivotCol__Group_1_1__1 : rule__PivotCol__Group_1_1__1__Impl ;
    public final void rule__PivotCol__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13763:1: ( rule__PivotCol__Group_1_1__1__Impl )
            // InternalSQLParser.g:13764:2: rule__PivotCol__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1"


    // $ANTLR start "rule__PivotCol__Group_1_1__1__Impl"
    // InternalSQLParser.g:13770:1: rule__PivotCol__Group_1_1__1__Impl : ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCol__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13774:1: ( ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:13775:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:13775:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:13776:2: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:13777:2: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:13777:3: rule__PivotCol__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group__0"
    // InternalSQLParser.g:13786:1: rule__TableFull__Group__0 : rule__TableFull__Group__0__Impl rule__TableFull__Group__1 ;
    public final void rule__TableFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13790:1: ( rule__TableFull__Group__0__Impl rule__TableFull__Group__1 )
            // InternalSQLParser.g:13791:2: rule__TableFull__Group__0__Impl rule__TableFull__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__TableFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0"


    // $ANTLR start "rule__TableFull__Group__0__Impl"
    // InternalSQLParser.g:13798:1: rule__TableFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__TableFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13802:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:13803:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:13803:1: ( ruleDbObjectName )
            // InternalSQLParser.g:13804:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0__Impl"


    // $ANTLR start "rule__TableFull__Group__1"
    // InternalSQLParser.g:13813:1: rule__TableFull__Group__1 : rule__TableFull__Group__1__Impl ;
    public final void rule__TableFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13817:1: ( rule__TableFull__Group__1__Impl )
            // InternalSQLParser.g:13818:2: rule__TableFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1"


    // $ANTLR start "rule__TableFull__Group__1__Impl"
    // InternalSQLParser.g:13824:1: rule__TableFull__Group__1__Impl : ( ( rule__TableFull__Group_1__0 )? ) ;
    public final void rule__TableFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13828:1: ( ( ( rule__TableFull__Group_1__0 )? ) )
            // InternalSQLParser.g:13829:1: ( ( rule__TableFull__Group_1__0 )? )
            {
            // InternalSQLParser.g:13829:1: ( ( rule__TableFull__Group_1__0 )? )
            // InternalSQLParser.g:13830:2: ( rule__TableFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:13831:2: ( rule__TableFull__Group_1__0 )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==FullStop) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalSQLParser.g:13831:3: rule__TableFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1__0"
    // InternalSQLParser.g:13840:1: rule__TableFull__Group_1__0 : rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 ;
    public final void rule__TableFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13844:1: ( rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 )
            // InternalSQLParser.g:13845:2: rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1
            {
            pushFollow(FOLLOW_53);
            rule__TableFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0"


    // $ANTLR start "rule__TableFull__Group_1__0__Impl"
    // InternalSQLParser.g:13852:1: rule__TableFull__Group_1__0__Impl : ( () ) ;
    public final void rule__TableFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13856:1: ( ( () ) )
            // InternalSQLParser.g:13857:1: ( () )
            {
            // InternalSQLParser.g:13857:1: ( () )
            // InternalSQLParser.g:13858:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:13859:2: ()
            // InternalSQLParser.g:13859:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1__1"
    // InternalSQLParser.g:13867:1: rule__TableFull__Group_1__1 : rule__TableFull__Group_1__1__Impl ;
    public final void rule__TableFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13871:1: ( rule__TableFull__Group_1__1__Impl )
            // InternalSQLParser.g:13872:2: rule__TableFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1"


    // $ANTLR start "rule__TableFull__Group_1__1__Impl"
    // InternalSQLParser.g:13878:1: rule__TableFull__Group_1__1__Impl : ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) ;
    public final void rule__TableFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13882:1: ( ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:13883:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:13883:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            // InternalSQLParser.g:13884:2: ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:13884:2: ( ( rule__TableFull__Group_1_1__0 ) )
            // InternalSQLParser.g:13885:3: ( rule__TableFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13886:3: ( rule__TableFull__Group_1_1__0 )
            // InternalSQLParser.g:13886:4: rule__TableFull__Group_1_1__0
            {
            pushFollow(FOLLOW_54);
            rule__TableFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:13889:2: ( ( rule__TableFull__Group_1_1__0 )* )
            // InternalSQLParser.g:13890:3: ( rule__TableFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13891:3: ( rule__TableFull__Group_1_1__0 )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==FullStop) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalSQLParser.g:13891:4: rule__TableFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__TableFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__0"
    // InternalSQLParser.g:13901:1: rule__TableFull__Group_1_1__0 : rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 ;
    public final void rule__TableFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13905:1: ( rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 )
            // InternalSQLParser.g:13906:2: rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1
            {
            pushFollow(FOLLOW_32);
            rule__TableFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0"


    // $ANTLR start "rule__TableFull__Group_1_1__0__Impl"
    // InternalSQLParser.g:13913:1: rule__TableFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__TableFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13917:1: ( ( FullStop ) )
            // InternalSQLParser.g:13918:1: ( FullStop )
            {
            // InternalSQLParser.g:13918:1: ( FullStop )
            // InternalSQLParser.g:13919:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__1"
    // InternalSQLParser.g:13928:1: rule__TableFull__Group_1_1__1 : rule__TableFull__Group_1_1__1__Impl ;
    public final void rule__TableFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13932:1: ( rule__TableFull__Group_1_1__1__Impl )
            // InternalSQLParser.g:13933:2: rule__TableFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1"


    // $ANTLR start "rule__TableFull__Group_1_1__1__Impl"
    // InternalSQLParser.g:13939:1: rule__TableFull__Group_1_1__1__Impl : ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__TableFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13943:1: ( ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:13944:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:13944:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:13945:2: ( rule__TableFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:13946:2: ( rule__TableFull__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:13946:3: rule__TableFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__0"
    // InternalSQLParser.g:13955:1: rule__DbObjectNameAll__Group__0 : rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 ;
    public final void rule__DbObjectNameAll__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13959:1: ( rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 )
            // InternalSQLParser.g:13960:2: rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__DbObjectNameAll__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0"


    // $ANTLR start "rule__DbObjectNameAll__Group__0__Impl"
    // InternalSQLParser.g:13967:1: rule__DbObjectNameAll__Group__0__Impl : ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) ;
    public final void rule__DbObjectNameAll__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13971:1: ( ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) )
            // InternalSQLParser.g:13972:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            {
            // InternalSQLParser.g:13972:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            // InternalSQLParser.g:13973:2: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }
            // InternalSQLParser.g:13974:2: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            // InternalSQLParser.g:13974:3: rule__DbObjectNameAll__DbnameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__DbnameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__1"
    // InternalSQLParser.g:13982:1: rule__DbObjectNameAll__Group__1 : rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 ;
    public final void rule__DbObjectNameAll__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13986:1: ( rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 )
            // InternalSQLParser.g:13987:2: rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2
            {
            pushFollow(FOLLOW_69);
            rule__DbObjectNameAll__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1"


    // $ANTLR start "rule__DbObjectNameAll__Group__1__Impl"
    // InternalSQLParser.g:13994:1: rule__DbObjectNameAll__Group__1__Impl : ( FullStop ) ;
    public final void rule__DbObjectNameAll__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13998:1: ( ( FullStop ) )
            // InternalSQLParser.g:13999:1: ( FullStop )
            {
            // InternalSQLParser.g:13999:1: ( FullStop )
            // InternalSQLParser.g:14000:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__2"
    // InternalSQLParser.g:14009:1: rule__DbObjectNameAll__Group__2 : rule__DbObjectNameAll__Group__2__Impl ;
    public final void rule__DbObjectNameAll__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14013:1: ( rule__DbObjectNameAll__Group__2__Impl )
            // InternalSQLParser.g:14014:2: rule__DbObjectNameAll__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2"


    // $ANTLR start "rule__DbObjectNameAll__Group__2__Impl"
    // InternalSQLParser.g:14020:1: rule__DbObjectNameAll__Group__2__Impl : ( RULE_STAR ) ;
    public final void rule__DbObjectNameAll__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14024:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:14025:1: ( RULE_STAR )
            {
            // InternalSQLParser.g:14025:1: ( RULE_STAR )
            // InternalSQLParser.g:14026:2: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__0"
    // InternalSQLParser.g:14036:1: rule__OrderByColumns__Group__0 : rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 ;
    public final void rule__OrderByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14040:1: ( rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 )
            // InternalSQLParser.g:14041:2: rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__OrderByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0"


    // $ANTLR start "rule__OrderByColumns__Group__0__Impl"
    // InternalSQLParser.g:14048:1: rule__OrderByColumns__Group__0__Impl : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14052:1: ( ( ruleOrderByColumnFull ) )
            // InternalSQLParser.g:14053:1: ( ruleOrderByColumnFull )
            {
            // InternalSQLParser.g:14053:1: ( ruleOrderByColumnFull )
            // InternalSQLParser.g:14054:2: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__1"
    // InternalSQLParser.g:14063:1: rule__OrderByColumns__Group__1 : rule__OrderByColumns__Group__1__Impl ;
    public final void rule__OrderByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14067:1: ( rule__OrderByColumns__Group__1__Impl )
            // InternalSQLParser.g:14068:2: rule__OrderByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1"


    // $ANTLR start "rule__OrderByColumns__Group__1__Impl"
    // InternalSQLParser.g:14074:1: rule__OrderByColumns__Group__1__Impl : ( ( rule__OrderByColumns__Group_1__0 )? ) ;
    public final void rule__OrderByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14078:1: ( ( ( rule__OrderByColumns__Group_1__0 )? ) )
            // InternalSQLParser.g:14079:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            {
            // InternalSQLParser.g:14079:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            // InternalSQLParser.g:14080:2: ( rule__OrderByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:14081:2: ( rule__OrderByColumns__Group_1__0 )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==Comma) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSQLParser.g:14081:3: rule__OrderByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__0"
    // InternalSQLParser.g:14090:1: rule__OrderByColumns__Group_1__0 : rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 ;
    public final void rule__OrderByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14094:1: ( rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 )
            // InternalSQLParser.g:14095:2: rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__OrderByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1__0__Impl"
    // InternalSQLParser.g:14102:1: rule__OrderByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14106:1: ( ( () ) )
            // InternalSQLParser.g:14107:1: ( () )
            {
            // InternalSQLParser.g:14107:1: ( () )
            // InternalSQLParser.g:14108:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:14109:2: ()
            // InternalSQLParser.g:14109:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__1"
    // InternalSQLParser.g:14117:1: rule__OrderByColumns__Group_1__1 : rule__OrderByColumns__Group_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14121:1: ( rule__OrderByColumns__Group_1__1__Impl )
            // InternalSQLParser.g:14122:2: rule__OrderByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1__1__Impl"
    // InternalSQLParser.g:14128:1: rule__OrderByColumns__Group_1__1__Impl : ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14132:1: ( ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:14133:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:14133:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:14134:2: ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:14134:2: ( ( rule__OrderByColumns__Group_1_1__0 ) )
            // InternalSQLParser.g:14135:3: ( rule__OrderByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14136:3: ( rule__OrderByColumns__Group_1_1__0 )
            // InternalSQLParser.g:14136:4: rule__OrderByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__OrderByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:14139:2: ( ( rule__OrderByColumns__Group_1_1__0 )* )
            // InternalSQLParser.g:14140:3: ( rule__OrderByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14141:3: ( rule__OrderByColumns__Group_1_1__0 )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==Comma) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // InternalSQLParser.g:14141:4: rule__OrderByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__OrderByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0"
    // InternalSQLParser.g:14151:1: rule__OrderByColumns__Group_1_1__0 : rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 ;
    public final void rule__OrderByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14155:1: ( rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 )
            // InternalSQLParser.g:14156:2: rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_48);
            rule__OrderByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0__Impl"
    // InternalSQLParser.g:14163:1: rule__OrderByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14167:1: ( ( Comma ) )
            // InternalSQLParser.g:14168:1: ( Comma )
            {
            // InternalSQLParser.g:14168:1: ( Comma )
            // InternalSQLParser.g:14169:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1"
    // InternalSQLParser.g:14178:1: rule__OrderByColumns__Group_1_1__1 : rule__OrderByColumns__Group_1_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14182:1: ( rule__OrderByColumns__Group_1_1__1__Impl )
            // InternalSQLParser.g:14183:2: rule__OrderByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1__Impl"
    // InternalSQLParser.g:14189:1: rule__OrderByColumns__Group_1_1__1__Impl : ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14193:1: ( ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:14194:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:14194:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:14195:2: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:14196:2: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:14196:3: rule__OrderByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__0"
    // InternalSQLParser.g:14205:1: rule__OrderByColumnFull__Group__0 : rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 ;
    public final void rule__OrderByColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14209:1: ( rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 )
            // InternalSQLParser.g:14210:2: rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1
            {
            pushFollow(FOLLOW_70);
            rule__OrderByColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0"


    // $ANTLR start "rule__OrderByColumnFull__Group__0__Impl"
    // InternalSQLParser.g:14217:1: rule__OrderByColumnFull__Group__0__Impl : ( ( rule__OrderByColumnFull__Alternatives_0 ) ) ;
    public final void rule__OrderByColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14221:1: ( ( ( rule__OrderByColumnFull__Alternatives_0 ) ) )
            // InternalSQLParser.g:14222:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            {
            // InternalSQLParser.g:14222:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            // InternalSQLParser.g:14223:2: ( rule__OrderByColumnFull__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:14224:2: ( rule__OrderByColumnFull__Alternatives_0 )
            // InternalSQLParser.g:14224:3: rule__OrderByColumnFull__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__1"
    // InternalSQLParser.g:14232:1: rule__OrderByColumnFull__Group__1 : rule__OrderByColumnFull__Group__1__Impl ;
    public final void rule__OrderByColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14236:1: ( rule__OrderByColumnFull__Group__1__Impl )
            // InternalSQLParser.g:14237:2: rule__OrderByColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1"


    // $ANTLR start "rule__OrderByColumnFull__Group__1__Impl"
    // InternalSQLParser.g:14243:1: rule__OrderByColumnFull__Group__1__Impl : ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) ;
    public final void rule__OrderByColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14247:1: ( ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) )
            // InternalSQLParser.g:14248:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            {
            // InternalSQLParser.g:14248:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            // InternalSQLParser.g:14249:2: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }
            // InternalSQLParser.g:14250:2: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==DESC||LA137_0==ASC) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSQLParser.g:14250:3: rule__OrderByColumnFull__DirectionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__DirectionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__0"
    // InternalSQLParser.g:14259:1: rule__GroupByColumns__Group__0 : rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 ;
    public final void rule__GroupByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14263:1: ( rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 )
            // InternalSQLParser.g:14264:2: rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__GroupByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0"


    // $ANTLR start "rule__GroupByColumns__Group__0__Impl"
    // InternalSQLParser.g:14271:1: rule__GroupByColumns__Group__0__Impl : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14275:1: ( ( ruleGroupByColumnFull ) )
            // InternalSQLParser.g:14276:1: ( ruleGroupByColumnFull )
            {
            // InternalSQLParser.g:14276:1: ( ruleGroupByColumnFull )
            // InternalSQLParser.g:14277:2: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__1"
    // InternalSQLParser.g:14286:1: rule__GroupByColumns__Group__1 : rule__GroupByColumns__Group__1__Impl ;
    public final void rule__GroupByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14290:1: ( rule__GroupByColumns__Group__1__Impl )
            // InternalSQLParser.g:14291:2: rule__GroupByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1"


    // $ANTLR start "rule__GroupByColumns__Group__1__Impl"
    // InternalSQLParser.g:14297:1: rule__GroupByColumns__Group__1__Impl : ( ( rule__GroupByColumns__Group_1__0 )? ) ;
    public final void rule__GroupByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14301:1: ( ( ( rule__GroupByColumns__Group_1__0 )? ) )
            // InternalSQLParser.g:14302:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            {
            // InternalSQLParser.g:14302:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            // InternalSQLParser.g:14303:2: ( rule__GroupByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:14304:2: ( rule__GroupByColumns__Group_1__0 )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==Comma) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSQLParser.g:14304:3: rule__GroupByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__0"
    // InternalSQLParser.g:14313:1: rule__GroupByColumns__Group_1__0 : rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 ;
    public final void rule__GroupByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14317:1: ( rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 )
            // InternalSQLParser.g:14318:2: rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__GroupByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1__0__Impl"
    // InternalSQLParser.g:14325:1: rule__GroupByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__GroupByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14329:1: ( ( () ) )
            // InternalSQLParser.g:14330:1: ( () )
            {
            // InternalSQLParser.g:14330:1: ( () )
            // InternalSQLParser.g:14331:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:14332:2: ()
            // InternalSQLParser.g:14332:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__1"
    // InternalSQLParser.g:14340:1: rule__GroupByColumns__Group_1__1 : rule__GroupByColumns__Group_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14344:1: ( rule__GroupByColumns__Group_1__1__Impl )
            // InternalSQLParser.g:14345:2: rule__GroupByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1__1__Impl"
    // InternalSQLParser.g:14351:1: rule__GroupByColumns__Group_1__1__Impl : ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__GroupByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14355:1: ( ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:14356:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:14356:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:14357:2: ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:14357:2: ( ( rule__GroupByColumns__Group_1_1__0 ) )
            // InternalSQLParser.g:14358:3: ( rule__GroupByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14359:3: ( rule__GroupByColumns__Group_1_1__0 )
            // InternalSQLParser.g:14359:4: rule__GroupByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__GroupByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:14362:2: ( ( rule__GroupByColumns__Group_1_1__0 )* )
            // InternalSQLParser.g:14363:3: ( rule__GroupByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14364:3: ( rule__GroupByColumns__Group_1_1__0 )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==Comma) ) {
                    alt139=1;
                }


                switch (alt139) {
            	case 1 :
            	    // InternalSQLParser.g:14364:4: rule__GroupByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__GroupByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0"
    // InternalSQLParser.g:14374:1: rule__GroupByColumns__Group_1_1__0 : rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 ;
    public final void rule__GroupByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14378:1: ( rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 )
            // InternalSQLParser.g:14379:2: rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_48);
            rule__GroupByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0__Impl"
    // InternalSQLParser.g:14386:1: rule__GroupByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__GroupByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14390:1: ( ( Comma ) )
            // InternalSQLParser.g:14391:1: ( Comma )
            {
            // InternalSQLParser.g:14391:1: ( Comma )
            // InternalSQLParser.g:14392:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1"
    // InternalSQLParser.g:14401:1: rule__GroupByColumns__Group_1_1__1 : rule__GroupByColumns__Group_1_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14405:1: ( rule__GroupByColumns__Group_1_1__1__Impl )
            // InternalSQLParser.g:14406:2: rule__GroupByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1__Impl"
    // InternalSQLParser.g:14412:1: rule__GroupByColumns__Group_1_1__1__Impl : ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__GroupByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14416:1: ( ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:14417:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:14417:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:14418:2: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:14419:2: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:14419:3: rule__GroupByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__FullExpression__Group__0"
    // InternalSQLParser.g:14428:1: rule__FullExpression__Group__0 : rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 ;
    public final void rule__FullExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14432:1: ( rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 )
            // InternalSQLParser.g:14433:2: rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__FullExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0"


    // $ANTLR start "rule__FullExpression__Group__0__Impl"
    // InternalSQLParser.g:14440:1: rule__FullExpression__Group__0__Impl : ( ruleExpressionFragment ) ;
    public final void rule__FullExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14444:1: ( ( ruleExpressionFragment ) )
            // InternalSQLParser.g:14445:1: ( ruleExpressionFragment )
            {
            // InternalSQLParser.g:14445:1: ( ruleExpressionFragment )
            // InternalSQLParser.g:14446:2: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0__Impl"


    // $ANTLR start "rule__FullExpression__Group__1"
    // InternalSQLParser.g:14455:1: rule__FullExpression__Group__1 : rule__FullExpression__Group__1__Impl ;
    public final void rule__FullExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14459:1: ( rule__FullExpression__Group__1__Impl )
            // InternalSQLParser.g:14460:2: rule__FullExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1"


    // $ANTLR start "rule__FullExpression__Group__1__Impl"
    // InternalSQLParser.g:14466:1: rule__FullExpression__Group__1__Impl : ( ( rule__FullExpression__Group_1__0 )? ) ;
    public final void rule__FullExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14470:1: ( ( ( rule__FullExpression__Group_1__0 )? ) )
            // InternalSQLParser.g:14471:1: ( ( rule__FullExpression__Group_1__0 )? )
            {
            // InternalSQLParser.g:14471:1: ( ( rule__FullExpression__Group_1__0 )? )
            // InternalSQLParser.g:14472:2: ( rule__FullExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:14473:2: ( rule__FullExpression__Group_1__0 )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==AND||LA140_0==OR||LA140_0==RULE_JRNPARAM) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalSQLParser.g:14473:3: rule__FullExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FullExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__0"
    // InternalSQLParser.g:14482:1: rule__FullExpression__Group_1__0 : rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 ;
    public final void rule__FullExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14486:1: ( rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 )
            // InternalSQLParser.g:14487:2: rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1
            {
            pushFollow(FOLLOW_71);
            rule__FullExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0"


    // $ANTLR start "rule__FullExpression__Group_1__0__Impl"
    // InternalSQLParser.g:14494:1: rule__FullExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__FullExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14498:1: ( ( () ) )
            // InternalSQLParser.g:14499:1: ( () )
            {
            // InternalSQLParser.g:14499:1: ( () )
            // InternalSQLParser.g:14500:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:14501:2: ()
            // InternalSQLParser.g:14501:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__1"
    // InternalSQLParser.g:14509:1: rule__FullExpression__Group_1__1 : rule__FullExpression__Group_1__1__Impl ;
    public final void rule__FullExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14513:1: ( rule__FullExpression__Group_1__1__Impl )
            // InternalSQLParser.g:14514:2: rule__FullExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1"


    // $ANTLR start "rule__FullExpression__Group_1__1__Impl"
    // InternalSQLParser.g:14520:1: rule__FullExpression__Group_1__1__Impl : ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__FullExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14524:1: ( ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) )
            // InternalSQLParser.g:14525:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            {
            // InternalSQLParser.g:14525:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            // InternalSQLParser.g:14526:2: ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            {
            // InternalSQLParser.g:14526:2: ( ( rule__FullExpression__EntriesAssignment_1_1 ) )
            // InternalSQLParser.g:14527:3: ( rule__FullExpression__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:14528:3: ( rule__FullExpression__EntriesAssignment_1_1 )
            // InternalSQLParser.g:14528:4: rule__FullExpression__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_72);
            rule__FullExpression__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSQLParser.g:14531:2: ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            // InternalSQLParser.g:14532:3: ( rule__FullExpression__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:14533:3: ( rule__FullExpression__EntriesAssignment_1_1 )*
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==AND||LA141_0==OR||LA141_0==RULE_JRNPARAM) ) {
                    alt141=1;
                }


                switch (alt141) {
            	case 1 :
            	    // InternalSQLParser.g:14533:4: rule__FullExpression__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_72);
            	    rule__FullExpression__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0"
    // InternalSQLParser.g:14543:1: rule__ExpressionFragmentSecond__Group_0__0 : rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 ;
    public final void rule__ExpressionFragmentSecond__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14547:1: ( rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 )
            // InternalSQLParser.g:14548:2: rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1
            {
            pushFollow(FOLLOW_46);
            rule__ExpressionFragmentSecond__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0__Impl"
    // InternalSQLParser.g:14555:1: rule__ExpressionFragmentSecond__Group_0__0__Impl : ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14559:1: ( ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) )
            // InternalSQLParser.g:14560:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            {
            // InternalSQLParser.g:14560:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            // InternalSQLParser.g:14561:2: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }
            // InternalSQLParser.g:14562:2: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            // InternalSQLParser.g:14562:3: rule__ExpressionFragmentSecond__CAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1"
    // InternalSQLParser.g:14570:1: rule__ExpressionFragmentSecond__Group_0__1 : rule__ExpressionFragmentSecond__Group_0__1__Impl ;
    public final void rule__ExpressionFragmentSecond__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14574:1: ( rule__ExpressionFragmentSecond__Group_0__1__Impl )
            // InternalSQLParser.g:14575:2: rule__ExpressionFragmentSecond__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1__Impl"
    // InternalSQLParser.g:14581:1: rule__ExpressionFragmentSecond__Group_0__1__Impl : ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14585:1: ( ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) )
            // InternalSQLParser.g:14586:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            {
            // InternalSQLParser.g:14586:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            // InternalSQLParser.g:14587:2: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }
            // InternalSQLParser.g:14588:2: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            // InternalSQLParser.g:14588:3: rule__ExpressionFragmentSecond__EfragAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__EfragAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__0"
    // InternalSQLParser.g:14597:1: rule__ExpressionGroup__Group__0 : rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 ;
    public final void rule__ExpressionGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14601:1: ( rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 )
            // InternalSQLParser.g:14602:2: rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__ExpressionGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0"


    // $ANTLR start "rule__ExpressionGroup__Group__0__Impl"
    // InternalSQLParser.g:14609:1: rule__ExpressionGroup__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14613:1: ( ( () ) )
            // InternalSQLParser.g:14614:1: ( () )
            {
            // InternalSQLParser.g:14614:1: ( () )
            // InternalSQLParser.g:14615:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }
            // InternalSQLParser.g:14616:2: ()
            // InternalSQLParser.g:14616:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__1"
    // InternalSQLParser.g:14624:1: rule__ExpressionGroup__Group__1 : rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 ;
    public final void rule__ExpressionGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14628:1: ( rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 )
            // InternalSQLParser.g:14629:2: rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2
            {
            pushFollow(FOLLOW_73);
            rule__ExpressionGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1"


    // $ANTLR start "rule__ExpressionGroup__Group__1__Impl"
    // InternalSQLParser.g:14636:1: rule__ExpressionGroup__Group__1__Impl : ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) ;
    public final void rule__ExpressionGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14640:1: ( ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) )
            // InternalSQLParser.g:14641:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            {
            // InternalSQLParser.g:14641:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            // InternalSQLParser.g:14642:2: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }
            // InternalSQLParser.g:14643:2: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==NOT_1||LA142_0==NOT) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalSQLParser.g:14643:3: rule__ExpressionGroup__IsnotAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionGroup__IsnotAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__2"
    // InternalSQLParser.g:14651:1: rule__ExpressionGroup__Group__2 : rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 ;
    public final void rule__ExpressionGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14655:1: ( rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 )
            // InternalSQLParser.g:14656:2: rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3
            {
            pushFollow(FOLLOW_46);
            rule__ExpressionGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2"


    // $ANTLR start "rule__ExpressionGroup__Group__2__Impl"
    // InternalSQLParser.g:14663:1: rule__ExpressionGroup__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__ExpressionGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14667:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:14668:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:14668:1: ( LeftParenthesis )
            // InternalSQLParser.g:14669:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__3"
    // InternalSQLParser.g:14678:1: rule__ExpressionGroup__Group__3 : rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 ;
    public final void rule__ExpressionGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14682:1: ( rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 )
            // InternalSQLParser.g:14683:2: rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__ExpressionGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3"


    // $ANTLR start "rule__ExpressionGroup__Group__3__Impl"
    // InternalSQLParser.g:14690:1: rule__ExpressionGroup__Group__3__Impl : ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) ;
    public final void rule__ExpressionGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14694:1: ( ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) )
            // InternalSQLParser.g:14695:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            {
            // InternalSQLParser.g:14695:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            // InternalSQLParser.g:14696:2: ( rule__ExpressionGroup__ExprAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }
            // InternalSQLParser.g:14697:2: ( rule__ExpressionGroup__ExprAssignment_3 )
            // InternalSQLParser.g:14697:3: rule__ExpressionGroup__ExprAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__ExprAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__4"
    // InternalSQLParser.g:14705:1: rule__ExpressionGroup__Group__4 : rule__ExpressionGroup__Group__4__Impl ;
    public final void rule__ExpressionGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14709:1: ( rule__ExpressionGroup__Group__4__Impl )
            // InternalSQLParser.g:14710:2: rule__ExpressionGroup__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4"


    // $ANTLR start "rule__ExpressionGroup__Group__4__Impl"
    // InternalSQLParser.g:14716:1: rule__ExpressionGroup__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__ExpressionGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14720:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:14721:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:14721:1: ( RightParenthesis )
            // InternalSQLParser.g:14722:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__0"
    // InternalSQLParser.g:14732:1: rule__XExpression__Group__0 : rule__XExpression__Group__0__Impl rule__XExpression__Group__1 ;
    public final void rule__XExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14736:1: ( rule__XExpression__Group__0__Impl rule__XExpression__Group__1 )
            // InternalSQLParser.g:14737:2: rule__XExpression__Group__0__Impl rule__XExpression__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__XExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0"


    // $ANTLR start "rule__XExpression__Group__0__Impl"
    // InternalSQLParser.g:14744:1: rule__XExpression__Group__0__Impl : ( X ) ;
    public final void rule__XExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14748:1: ( ( X ) )
            // InternalSQLParser.g:14749:1: ( X )
            {
            // InternalSQLParser.g:14749:1: ( X )
            // InternalSQLParser.g:14750:2: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0__Impl"


    // $ANTLR start "rule__XExpression__Group__1"
    // InternalSQLParser.g:14759:1: rule__XExpression__Group__1 : rule__XExpression__Group__1__Impl rule__XExpression__Group__2 ;
    public final void rule__XExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14763:1: ( rule__XExpression__Group__1__Impl rule__XExpression__Group__2 )
            // InternalSQLParser.g:14764:2: rule__XExpression__Group__1__Impl rule__XExpression__Group__2
            {
            pushFollow(FOLLOW_74);
            rule__XExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1"


    // $ANTLR start "rule__XExpression__Group__1__Impl"
    // InternalSQLParser.g:14771:1: rule__XExpression__Group__1__Impl : ( () ) ;
    public final void rule__XExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14775:1: ( ( () ) )
            // InternalSQLParser.g:14776:1: ( () )
            {
            // InternalSQLParser.g:14776:1: ( () )
            // InternalSQLParser.g:14777:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }
            // InternalSQLParser.g:14778:2: ()
            // InternalSQLParser.g:14778:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1__Impl"


    // $ANTLR start "rule__XExpression__Group__2"
    // InternalSQLParser.g:14786:1: rule__XExpression__Group__2 : rule__XExpression__Group__2__Impl rule__XExpression__Group__3 ;
    public final void rule__XExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14790:1: ( rule__XExpression__Group__2__Impl rule__XExpression__Group__3 )
            // InternalSQLParser.g:14791:2: rule__XExpression__Group__2__Impl rule__XExpression__Group__3
            {
            pushFollow(FOLLOW_13);
            rule__XExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2"


    // $ANTLR start "rule__XExpression__Group__2__Impl"
    // InternalSQLParser.g:14798:1: rule__XExpression__Group__2__Impl : ( ( rule__XExpression__XfAssignment_2 ) ) ;
    public final void rule__XExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14802:1: ( ( ( rule__XExpression__XfAssignment_2 ) ) )
            // InternalSQLParser.g:14803:1: ( ( rule__XExpression__XfAssignment_2 ) )
            {
            // InternalSQLParser.g:14803:1: ( ( rule__XExpression__XfAssignment_2 ) )
            // InternalSQLParser.g:14804:2: ( rule__XExpression__XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }
            // InternalSQLParser.g:14805:2: ( rule__XExpression__XfAssignment_2 )
            // InternalSQLParser.g:14805:3: rule__XExpression__XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2__Impl"


    // $ANTLR start "rule__XExpression__Group__3"
    // InternalSQLParser.g:14813:1: rule__XExpression__Group__3 : rule__XExpression__Group__3__Impl rule__XExpression__Group__4 ;
    public final void rule__XExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14817:1: ( rule__XExpression__Group__3__Impl rule__XExpression__Group__4 )
            // InternalSQLParser.g:14818:2: rule__XExpression__Group__3__Impl rule__XExpression__Group__4
            {
            pushFollow(FOLLOW_75);
            rule__XExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3"


    // $ANTLR start "rule__XExpression__Group__3__Impl"
    // InternalSQLParser.g:14825:1: rule__XExpression__Group__3__Impl : ( Comma ) ;
    public final void rule__XExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14829:1: ( ( Comma ) )
            // InternalSQLParser.g:14830:1: ( Comma )
            {
            // InternalSQLParser.g:14830:1: ( Comma )
            // InternalSQLParser.g:14831:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3__Impl"


    // $ANTLR start "rule__XExpression__Group__4"
    // InternalSQLParser.g:14840:1: rule__XExpression__Group__4 : rule__XExpression__Group__4__Impl rule__XExpression__Group__5 ;
    public final void rule__XExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14844:1: ( rule__XExpression__Group__4__Impl rule__XExpression__Group__5 )
            // InternalSQLParser.g:14845:2: rule__XExpression__Group__4__Impl rule__XExpression__Group__5
            {
            pushFollow(FOLLOW_76);
            rule__XExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4"


    // $ANTLR start "rule__XExpression__Group__4__Impl"
    // InternalSQLParser.g:14852:1: rule__XExpression__Group__4__Impl : ( ( rule__XExpression__ColAssignment_4 ) ) ;
    public final void rule__XExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14856:1: ( ( ( rule__XExpression__ColAssignment_4 ) ) )
            // InternalSQLParser.g:14857:1: ( ( rule__XExpression__ColAssignment_4 ) )
            {
            // InternalSQLParser.g:14857:1: ( ( rule__XExpression__ColAssignment_4 ) )
            // InternalSQLParser.g:14858:2: ( rule__XExpression__ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }
            // InternalSQLParser.g:14859:2: ( rule__XExpression__ColAssignment_4 )
            // InternalSQLParser.g:14859:3: rule__XExpression__ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__5"
    // InternalSQLParser.g:14867:1: rule__XExpression__Group__5 : rule__XExpression__Group__5__Impl rule__XExpression__Group__6 ;
    public final void rule__XExpression__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14871:1: ( rule__XExpression__Group__5__Impl rule__XExpression__Group__6 )
            // InternalSQLParser.g:14872:2: rule__XExpression__Group__5__Impl rule__XExpression__Group__6
            {
            pushFollow(FOLLOW_76);
            rule__XExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5"


    // $ANTLR start "rule__XExpression__Group__5__Impl"
    // InternalSQLParser.g:14879:1: rule__XExpression__Group__5__Impl : ( ( rule__XExpression__Group_5__0 )? ) ;
    public final void rule__XExpression__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14883:1: ( ( ( rule__XExpression__Group_5__0 )? ) )
            // InternalSQLParser.g:14884:1: ( ( rule__XExpression__Group_5__0 )? )
            {
            // InternalSQLParser.g:14884:1: ( ( rule__XExpression__Group_5__0 )? )
            // InternalSQLParser.g:14885:2: ( rule__XExpression__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }
            // InternalSQLParser.g:14886:2: ( rule__XExpression__Group_5__0 )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==Comma) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSQLParser.g:14886:3: rule__XExpression__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5__Impl"


    // $ANTLR start "rule__XExpression__Group__6"
    // InternalSQLParser.g:14894:1: rule__XExpression__Group__6 : rule__XExpression__Group__6__Impl ;
    public final void rule__XExpression__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14898:1: ( rule__XExpression__Group__6__Impl )
            // InternalSQLParser.g:14899:2: rule__XExpression__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6"


    // $ANTLR start "rule__XExpression__Group__6__Impl"
    // InternalSQLParser.g:14905:1: rule__XExpression__Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14909:1: ( ( RightCurlyBracket ) )
            // InternalSQLParser.g:14910:1: ( RightCurlyBracket )
            {
            // InternalSQLParser.g:14910:1: ( RightCurlyBracket )
            // InternalSQLParser.g:14911:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6__Impl"


    // $ANTLR start "rule__XExpression__Group_5__0"
    // InternalSQLParser.g:14921:1: rule__XExpression__Group_5__0 : rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 ;
    public final void rule__XExpression__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14925:1: ( rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 )
            // InternalSQLParser.g:14926:2: rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1
            {
            pushFollow(FOLLOW_9);
            rule__XExpression__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0"


    // $ANTLR start "rule__XExpression__Group_5__0__Impl"
    // InternalSQLParser.g:14933:1: rule__XExpression__Group_5__0__Impl : ( Comma ) ;
    public final void rule__XExpression__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14937:1: ( ( Comma ) )
            // InternalSQLParser.g:14938:1: ( Comma )
            {
            // InternalSQLParser.g:14938:1: ( Comma )
            // InternalSQLParser.g:14939:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0__Impl"


    // $ANTLR start "rule__XExpression__Group_5__1"
    // InternalSQLParser.g:14948:1: rule__XExpression__Group_5__1 : rule__XExpression__Group_5__1__Impl ;
    public final void rule__XExpression__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14952:1: ( rule__XExpression__Group_5__1__Impl )
            // InternalSQLParser.g:14953:2: rule__XExpression__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1"


    // $ANTLR start "rule__XExpression__Group_5__1__Impl"
    // InternalSQLParser.g:14959:1: rule__XExpression__Group_5__1__Impl : ( ( rule__XExpression__PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14963:1: ( ( ( rule__XExpression__PrmAssignment_5_1 ) ) )
            // InternalSQLParser.g:14964:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            {
            // InternalSQLParser.g:14964:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            // InternalSQLParser.g:14965:2: ( rule__XExpression__PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }
            // InternalSQLParser.g:14966:2: ( rule__XExpression__PrmAssignment_5_1 )
            // InternalSQLParser.g:14966:3: rule__XExpression__PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1__Impl"


    // $ANTLR start "rule__XExpression___Group__0"
    // InternalSQLParser.g:14975:1: rule__XExpression___Group__0 : rule__XExpression___Group__0__Impl rule__XExpression___Group__1 ;
    public final void rule__XExpression___Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14979:1: ( rule__XExpression___Group__0__Impl rule__XExpression___Group__1 )
            // InternalSQLParser.g:14980:2: rule__XExpression___Group__0__Impl rule__XExpression___Group__1
            {
            pushFollow(FOLLOW_74);
            rule__XExpression___Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0"


    // $ANTLR start "rule__XExpression___Group__0__Impl"
    // InternalSQLParser.g:14987:1: rule__XExpression___Group__0__Impl : ( X ) ;
    public final void rule__XExpression___Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14991:1: ( ( X ) )
            // InternalSQLParser.g:14992:1: ( X )
            {
            // InternalSQLParser.g:14992:1: ( X )
            // InternalSQLParser.g:14993:2: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0__Impl"


    // $ANTLR start "rule__XExpression___Group__1"
    // InternalSQLParser.g:15002:1: rule__XExpression___Group__1 : rule__XExpression___Group__1__Impl rule__XExpression___Group__2 ;
    public final void rule__XExpression___Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15006:1: ( rule__XExpression___Group__1__Impl rule__XExpression___Group__2 )
            // InternalSQLParser.g:15007:2: rule__XExpression___Group__1__Impl rule__XExpression___Group__2
            {
            pushFollow(FOLLOW_74);
            rule__XExpression___Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1"


    // $ANTLR start "rule__XExpression___Group__1__Impl"
    // InternalSQLParser.g:15014:1: rule__XExpression___Group__1__Impl : ( () ) ;
    public final void rule__XExpression___Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15018:1: ( ( () ) )
            // InternalSQLParser.g:15019:1: ( () )
            {
            // InternalSQLParser.g:15019:1: ( () )
            // InternalSQLParser.g:15020:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }
            // InternalSQLParser.g:15021:2: ()
            // InternalSQLParser.g:15021:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1__Impl"


    // $ANTLR start "rule__XExpression___Group__2"
    // InternalSQLParser.g:15029:1: rule__XExpression___Group__2 : rule__XExpression___Group__2__Impl rule__XExpression___Group__3 ;
    public final void rule__XExpression___Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15033:1: ( rule__XExpression___Group__2__Impl rule__XExpression___Group__3 )
            // InternalSQLParser.g:15034:2: rule__XExpression___Group__2__Impl rule__XExpression___Group__3
            {
            pushFollow(FOLLOW_77);
            rule__XExpression___Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2"


    // $ANTLR start "rule__XExpression___Group__2__Impl"
    // InternalSQLParser.g:15041:1: rule__XExpression___Group__2__Impl : ( ( rule__XExpression___XfAssignment_2 ) ) ;
    public final void rule__XExpression___Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15045:1: ( ( ( rule__XExpression___XfAssignment_2 ) ) )
            // InternalSQLParser.g:15046:1: ( ( rule__XExpression___XfAssignment_2 ) )
            {
            // InternalSQLParser.g:15046:1: ( ( rule__XExpression___XfAssignment_2 ) )
            // InternalSQLParser.g:15047:2: ( rule__XExpression___XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }
            // InternalSQLParser.g:15048:2: ( rule__XExpression___XfAssignment_2 )
            // InternalSQLParser.g:15048:3: rule__XExpression___XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2__Impl"


    // $ANTLR start "rule__XExpression___Group__3"
    // InternalSQLParser.g:15056:1: rule__XExpression___Group__3 : rule__XExpression___Group__3__Impl rule__XExpression___Group__4 ;
    public final void rule__XExpression___Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15060:1: ( rule__XExpression___Group__3__Impl rule__XExpression___Group__4 )
            // InternalSQLParser.g:15061:2: rule__XExpression___Group__3__Impl rule__XExpression___Group__4
            {
            pushFollow(FOLLOW_75);
            rule__XExpression___Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3"


    // $ANTLR start "rule__XExpression___Group__3__Impl"
    // InternalSQLParser.g:15068:1: rule__XExpression___Group__3__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15072:1: ( ( VerticalLine ) )
            // InternalSQLParser.g:15073:1: ( VerticalLine )
            {
            // InternalSQLParser.g:15073:1: ( VerticalLine )
            // InternalSQLParser.g:15074:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3__Impl"


    // $ANTLR start "rule__XExpression___Group__4"
    // InternalSQLParser.g:15083:1: rule__XExpression___Group__4 : rule__XExpression___Group__4__Impl rule__XExpression___Group__5 ;
    public final void rule__XExpression___Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15087:1: ( rule__XExpression___Group__4__Impl rule__XExpression___Group__5 )
            // InternalSQLParser.g:15088:2: rule__XExpression___Group__4__Impl rule__XExpression___Group__5
            {
            pushFollow(FOLLOW_78);
            rule__XExpression___Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4"


    // $ANTLR start "rule__XExpression___Group__4__Impl"
    // InternalSQLParser.g:15095:1: rule__XExpression___Group__4__Impl : ( ( rule__XExpression___ColAssignment_4 ) ) ;
    public final void rule__XExpression___Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15099:1: ( ( ( rule__XExpression___ColAssignment_4 ) ) )
            // InternalSQLParser.g:15100:1: ( ( rule__XExpression___ColAssignment_4 ) )
            {
            // InternalSQLParser.g:15100:1: ( ( rule__XExpression___ColAssignment_4 ) )
            // InternalSQLParser.g:15101:2: ( rule__XExpression___ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }
            // InternalSQLParser.g:15102:2: ( rule__XExpression___ColAssignment_4 )
            // InternalSQLParser.g:15102:3: rule__XExpression___ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4__Impl"


    // $ANTLR start "rule__XExpression___Group__5"
    // InternalSQLParser.g:15110:1: rule__XExpression___Group__5 : rule__XExpression___Group__5__Impl rule__XExpression___Group__6 ;
    public final void rule__XExpression___Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15114:1: ( rule__XExpression___Group__5__Impl rule__XExpression___Group__6 )
            // InternalSQLParser.g:15115:2: rule__XExpression___Group__5__Impl rule__XExpression___Group__6
            {
            pushFollow(FOLLOW_78);
            rule__XExpression___Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5"


    // $ANTLR start "rule__XExpression___Group__5__Impl"
    // InternalSQLParser.g:15122:1: rule__XExpression___Group__5__Impl : ( ( rule__XExpression___Group_5__0 )? ) ;
    public final void rule__XExpression___Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15126:1: ( ( ( rule__XExpression___Group_5__0 )? ) )
            // InternalSQLParser.g:15127:1: ( ( rule__XExpression___Group_5__0 )? )
            {
            // InternalSQLParser.g:15127:1: ( ( rule__XExpression___Group_5__0 )? )
            // InternalSQLParser.g:15128:2: ( rule__XExpression___Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup_5()); 
            }
            // InternalSQLParser.g:15129:2: ( rule__XExpression___Group_5__0 )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==VerticalLine) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalSQLParser.g:15129:3: rule__XExpression___Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression___Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5__Impl"


    // $ANTLR start "rule__XExpression___Group__6"
    // InternalSQLParser.g:15137:1: rule__XExpression___Group__6 : rule__XExpression___Group__6__Impl ;
    public final void rule__XExpression___Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15141:1: ( rule__XExpression___Group__6__Impl )
            // InternalSQLParser.g:15142:2: rule__XExpression___Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6"


    // $ANTLR start "rule__XExpression___Group__6__Impl"
    // InternalSQLParser.g:15148:1: rule__XExpression___Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression___Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15152:1: ( ( RightCurlyBracket ) )
            // InternalSQLParser.g:15153:1: ( RightCurlyBracket )
            {
            // InternalSQLParser.g:15153:1: ( RightCurlyBracket )
            // InternalSQLParser.g:15154:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6__Impl"


    // $ANTLR start "rule__XExpression___Group_5__0"
    // InternalSQLParser.g:15164:1: rule__XExpression___Group_5__0 : rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 ;
    public final void rule__XExpression___Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15168:1: ( rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 )
            // InternalSQLParser.g:15169:2: rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1
            {
            pushFollow(FOLLOW_9);
            rule__XExpression___Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0"


    // $ANTLR start "rule__XExpression___Group_5__0__Impl"
    // InternalSQLParser.g:15176:1: rule__XExpression___Group_5__0__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15180:1: ( ( VerticalLine ) )
            // InternalSQLParser.g:15181:1: ( VerticalLine )
            {
            // InternalSQLParser.g:15181:1: ( VerticalLine )
            // InternalSQLParser.g:15182:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0__Impl"


    // $ANTLR start "rule__XExpression___Group_5__1"
    // InternalSQLParser.g:15191:1: rule__XExpression___Group_5__1 : rule__XExpression___Group_5__1__Impl ;
    public final void rule__XExpression___Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15195:1: ( rule__XExpression___Group_5__1__Impl )
            // InternalSQLParser.g:15196:2: rule__XExpression___Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1"


    // $ANTLR start "rule__XExpression___Group_5__1__Impl"
    // InternalSQLParser.g:15202:1: rule__XExpression___Group_5__1__Impl : ( ( rule__XExpression___PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression___Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15206:1: ( ( ( rule__XExpression___PrmAssignment_5_1 ) ) )
            // InternalSQLParser.g:15207:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            {
            // InternalSQLParser.g:15207:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            // InternalSQLParser.g:15208:2: ( rule__XExpression___PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }
            // InternalSQLParser.g:15209:2: ( rule__XExpression___PrmAssignment_5_1 )
            // InternalSQLParser.g:15209:3: rule__XExpression___PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__0"
    // InternalSQLParser.g:15218:1: rule__XExpressionParams__Group__0 : rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 ;
    public final void rule__XExpressionParams__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15222:1: ( rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 )
            // InternalSQLParser.g:15223:2: rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__XExpressionParams__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0"


    // $ANTLR start "rule__XExpressionParams__Group__0__Impl"
    // InternalSQLParser.g:15230:1: rule__XExpressionParams__Group__0__Impl : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15234:1: ( ( ruleJRParameter ) )
            // InternalSQLParser.g:15235:1: ( ruleJRParameter )
            {
            // InternalSQLParser.g:15235:1: ( ruleJRParameter )
            // InternalSQLParser.g:15236:2: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__1"
    // InternalSQLParser.g:15245:1: rule__XExpressionParams__Group__1 : rule__XExpressionParams__Group__1__Impl ;
    public final void rule__XExpressionParams__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15249:1: ( rule__XExpressionParams__Group__1__Impl )
            // InternalSQLParser.g:15250:2: rule__XExpressionParams__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1"


    // $ANTLR start "rule__XExpressionParams__Group__1__Impl"
    // InternalSQLParser.g:15256:1: rule__XExpressionParams__Group__1__Impl : ( ( rule__XExpressionParams__Group_1__0 )? ) ;
    public final void rule__XExpressionParams__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15260:1: ( ( ( rule__XExpressionParams__Group_1__0 )? ) )
            // InternalSQLParser.g:15261:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            {
            // InternalSQLParser.g:15261:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            // InternalSQLParser.g:15262:2: ( rule__XExpressionParams__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:15263:2: ( rule__XExpressionParams__Group_1__0 )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==Comma) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalSQLParser.g:15263:3: rule__XExpressionParams__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpressionParams__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__0"
    // InternalSQLParser.g:15272:1: rule__XExpressionParams__Group_1__0 : rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 ;
    public final void rule__XExpressionParams__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15276:1: ( rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 )
            // InternalSQLParser.g:15277:2: rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__XExpressionParams__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1__0__Impl"
    // InternalSQLParser.g:15284:1: rule__XExpressionParams__Group_1__0__Impl : ( () ) ;
    public final void rule__XExpressionParams__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15288:1: ( ( () ) )
            // InternalSQLParser.g:15289:1: ( () )
            {
            // InternalSQLParser.g:15289:1: ( () )
            // InternalSQLParser.g:15290:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:15291:2: ()
            // InternalSQLParser.g:15291:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__1"
    // InternalSQLParser.g:15299:1: rule__XExpressionParams__Group_1__1 : rule__XExpressionParams__Group_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15303:1: ( rule__XExpressionParams__Group_1__1__Impl )
            // InternalSQLParser.g:15304:2: rule__XExpressionParams__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1__1__Impl"
    // InternalSQLParser.g:15310:1: rule__XExpressionParams__Group_1__1__Impl : ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) ;
    public final void rule__XExpressionParams__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15314:1: ( ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:15315:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:15315:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            // InternalSQLParser.g:15316:2: ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:15316:2: ( ( rule__XExpressionParams__Group_1_1__0 ) )
            // InternalSQLParser.g:15317:3: ( rule__XExpressionParams__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:15318:3: ( rule__XExpressionParams__Group_1_1__0 )
            // InternalSQLParser.g:15318:4: rule__XExpressionParams__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__XExpressionParams__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:15321:2: ( ( rule__XExpressionParams__Group_1_1__0 )* )
            // InternalSQLParser.g:15322:3: ( rule__XExpressionParams__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:15323:3: ( rule__XExpressionParams__Group_1_1__0 )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==Comma) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalSQLParser.g:15323:4: rule__XExpressionParams__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__XExpressionParams__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0"
    // InternalSQLParser.g:15333:1: rule__XExpressionParams__Group_1_1__0 : rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 ;
    public final void rule__XExpressionParams__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15337:1: ( rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 )
            // InternalSQLParser.g:15338:2: rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__XExpressionParams__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0__Impl"
    // InternalSQLParser.g:15345:1: rule__XExpressionParams__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__XExpressionParams__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15349:1: ( ( Comma ) )
            // InternalSQLParser.g:15350:1: ( Comma )
            {
            // InternalSQLParser.g:15350:1: ( Comma )
            // InternalSQLParser.g:15351:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1"
    // InternalSQLParser.g:15360:1: rule__XExpressionParams__Group_1_1__1 : rule__XExpressionParams__Group_1_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15364:1: ( rule__XExpressionParams__Group_1_1__1__Impl )
            // InternalSQLParser.g:15365:2: rule__XExpressionParams__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1__Impl"
    // InternalSQLParser.g:15371:1: rule__XExpressionParams__Group_1_1__1__Impl : ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__XExpressionParams__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15375:1: ( ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:15376:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:15376:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:15377:2: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:15378:2: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:15378:3: rule__XExpressionParams__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1__Impl"


    // $ANTLR start "rule__Expression__Group__0"
    // InternalSQLParser.g:15387:1: rule__Expression__Group__0 : rule__Expression__Group__0__Impl rule__Expression__Group__1 ;
    public final void rule__Expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15391:1: ( rule__Expression__Group__0__Impl rule__Expression__Group__1 )
            // InternalSQLParser.g:15392:2: rule__Expression__Group__0__Impl rule__Expression__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__Expression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0"


    // $ANTLR start "rule__Expression__Group__0__Impl"
    // InternalSQLParser.g:15399:1: rule__Expression__Group__0__Impl : ( ( rule__Expression__Op1Assignment_0 ) ) ;
    public final void rule__Expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15403:1: ( ( ( rule__Expression__Op1Assignment_0 ) ) )
            // InternalSQLParser.g:15404:1: ( ( rule__Expression__Op1Assignment_0 ) )
            {
            // InternalSQLParser.g:15404:1: ( ( rule__Expression__Op1Assignment_0 ) )
            // InternalSQLParser.g:15405:2: ( rule__Expression__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }
            // InternalSQLParser.g:15406:2: ( rule__Expression__Op1Assignment_0 )
            // InternalSQLParser.g:15406:3: rule__Expression__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0__Impl"


    // $ANTLR start "rule__Expression__Group__1"
    // InternalSQLParser.g:15414:1: rule__Expression__Group__1 : rule__Expression__Group__1__Impl ;
    public final void rule__Expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15418:1: ( rule__Expression__Group__1__Impl )
            // InternalSQLParser.g:15419:2: rule__Expression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1"


    // $ANTLR start "rule__Expression__Group__1__Impl"
    // InternalSQLParser.g:15425:1: rule__Expression__Group__1__Impl : ( ( rule__Expression__Alternatives_1 ) ) ;
    public final void rule__Expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15429:1: ( ( ( rule__Expression__Alternatives_1 ) ) )
            // InternalSQLParser.g:15430:1: ( ( rule__Expression__Alternatives_1 ) )
            {
            // InternalSQLParser.g:15430:1: ( ( rule__Expression__Alternatives_1 ) )
            // InternalSQLParser.g:15431:2: ( rule__Expression__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:15432:2: ( rule__Expression__Alternatives_1 )
            // InternalSQLParser.g:15432:3: rule__Expression__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__0"
    // InternalSQLParser.g:15441:1: rule__IsNullValue__Group__0 : rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 ;
    public final void rule__IsNullValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15445:1: ( rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 )
            // InternalSQLParser.g:15446:2: rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1
            {
            pushFollow(FOLLOW_29);
            rule__IsNullValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0"


    // $ANTLR start "rule__IsNullValue__Group__0__Impl"
    // InternalSQLParser.g:15453:1: rule__IsNullValue__Group__0__Impl : ( IS ) ;
    public final void rule__IsNullValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15457:1: ( ( IS ) )
            // InternalSQLParser.g:15458:1: ( IS )
            {
            // InternalSQLParser.g:15458:1: ( IS )
            // InternalSQLParser.g:15459:2: IS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }
            match(input,IS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0__Impl"


    // $ANTLR start "rule__IsNullValue__Group__1"
    // InternalSQLParser.g:15468:1: rule__IsNullValue__Group__1 : rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 ;
    public final void rule__IsNullValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15472:1: ( rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 )
            // InternalSQLParser.g:15473:2: rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2
            {
            pushFollow(FOLLOW_29);
            rule__IsNullValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1"


    // $ANTLR start "rule__IsNullValue__Group__1__Impl"
    // InternalSQLParser.g:15480:1: rule__IsNullValue__Group__1__Impl : ( ( NOT )? ) ;
    public final void rule__IsNullValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15484:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:15485:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:15485:1: ( ( NOT )? )
            // InternalSQLParser.g:15486:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }
            // InternalSQLParser.g:15487:2: ( NOT )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==NOT) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalSQLParser.g:15487:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__2"
    // InternalSQLParser.g:15495:1: rule__IsNullValue__Group__2 : rule__IsNullValue__Group__2__Impl ;
    public final void rule__IsNullValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15499:1: ( rule__IsNullValue__Group__2__Impl )
            // InternalSQLParser.g:15500:2: rule__IsNullValue__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2"


    // $ANTLR start "rule__IsNullValue__Group__2__Impl"
    // InternalSQLParser.g:15506:1: rule__IsNullValue__Group__2__Impl : ( NULL ) ;
    public final void rule__IsNullValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15510:1: ( ( NULL ) )
            // InternalSQLParser.g:15511:1: ( NULL )
            {
            // InternalSQLParser.g:15511:1: ( NULL )
            // InternalSQLParser.g:15512:2: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalSQLParser.g:15522:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15526:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalSQLParser.g:15527:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__Comparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalSQLParser.g:15534:1: rule__Comparison__Group__0__Impl : ( ( rule__Comparison__OperatorAssignment_0 ) ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15538:1: ( ( ( rule__Comparison__OperatorAssignment_0 ) ) )
            // InternalSQLParser.g:15539:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            {
            // InternalSQLParser.g:15539:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            // InternalSQLParser.g:15540:2: ( rule__Comparison__OperatorAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }
            // InternalSQLParser.g:15541:2: ( rule__Comparison__OperatorAssignment_0 )
            // InternalSQLParser.g:15541:3: rule__Comparison__OperatorAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalSQLParser.g:15549:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl rule__Comparison__Group__2 ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15553:1: ( rule__Comparison__Group__1__Impl rule__Comparison__Group__2 )
            // InternalSQLParser.g:15554:2: rule__Comparison__Group__1__Impl rule__Comparison__Group__2
            {
            pushFollow(FOLLOW_80);
            rule__Comparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalSQLParser.g:15561:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__SubOperatorAssignment_1 )? ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15565:1: ( ( ( rule__Comparison__SubOperatorAssignment_1 )? ) )
            // InternalSQLParser.g:15566:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            {
            // InternalSQLParser.g:15566:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            // InternalSQLParser.g:15567:2: ( rule__Comparison__SubOperatorAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }
            // InternalSQLParser.g:15568:2: ( rule__Comparison__SubOperatorAssignment_1 )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==SOME||LA148_0==ALL||LA148_0==ANY) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSQLParser.g:15568:3: rule__Comparison__SubOperatorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Comparison__SubOperatorAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group__2"
    // InternalSQLParser.g:15576:1: rule__Comparison__Group__2 : rule__Comparison__Group__2__Impl ;
    public final void rule__Comparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15580:1: ( rule__Comparison__Group__2__Impl )
            // InternalSQLParser.g:15581:2: rule__Comparison__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2"


    // $ANTLR start "rule__Comparison__Group__2__Impl"
    // InternalSQLParser.g:15587:1: rule__Comparison__Group__2__Impl : ( ( rule__Comparison__Op2Assignment_2 ) ) ;
    public final void rule__Comparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15591:1: ( ( ( rule__Comparison__Op2Assignment_2 ) ) )
            // InternalSQLParser.g:15592:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            {
            // InternalSQLParser.g:15592:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            // InternalSQLParser.g:15593:2: ( rule__Comparison__Op2Assignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }
            // InternalSQLParser.g:15594:2: ( rule__Comparison__Op2Assignment_2 )
            // InternalSQLParser.g:15594:3: rule__Comparison__Op2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Op2Assignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2__Impl"


    // $ANTLR start "rule__Like__Group__0"
    // InternalSQLParser.g:15603:1: rule__Like__Group__0 : rule__Like__Group__0__Impl rule__Like__Group__1 ;
    public final void rule__Like__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15607:1: ( rule__Like__Group__0__Impl rule__Like__Group__1 )
            // InternalSQLParser.g:15608:2: rule__Like__Group__0__Impl rule__Like__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__Like__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Like__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0"


    // $ANTLR start "rule__Like__Group__0__Impl"
    // InternalSQLParser.g:15615:1: rule__Like__Group__0__Impl : ( ( rule__Like__OpLikeAssignment_0 ) ) ;
    public final void rule__Like__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15619:1: ( ( ( rule__Like__OpLikeAssignment_0 ) ) )
            // InternalSQLParser.g:15620:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            {
            // InternalSQLParser.g:15620:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            // InternalSQLParser.g:15621:2: ( rule__Like__OpLikeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }
            // InternalSQLParser.g:15622:2: ( rule__Like__OpLikeAssignment_0 )
            // InternalSQLParser.g:15622:3: rule__Like__OpLikeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Like__OpLikeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0__Impl"


    // $ANTLR start "rule__Like__Group__1"
    // InternalSQLParser.g:15630:1: rule__Like__Group__1 : rule__Like__Group__1__Impl ;
    public final void rule__Like__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15634:1: ( rule__Like__Group__1__Impl )
            // InternalSQLParser.g:15635:2: rule__Like__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1"


    // $ANTLR start "rule__Like__Group__1__Impl"
    // InternalSQLParser.g:15641:1: rule__Like__Group__1__Impl : ( ( rule__Like__Op2Assignment_1 ) ) ;
    public final void rule__Like__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15645:1: ( ( ( rule__Like__Op2Assignment_1 ) ) )
            // InternalSQLParser.g:15646:1: ( ( rule__Like__Op2Assignment_1 ) )
            {
            // InternalSQLParser.g:15646:1: ( ( rule__Like__Op2Assignment_1 ) )
            // InternalSQLParser.g:15647:2: ( rule__Like__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }
            // InternalSQLParser.g:15648:2: ( rule__Like__Op2Assignment_1 )
            // InternalSQLParser.g:15648:3: rule__Like__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Like__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1__Impl"


    // $ANTLR start "rule__LikeValue__Group__0"
    // InternalSQLParser.g:15657:1: rule__LikeValue__Group__0 : rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 ;
    public final void rule__LikeValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15661:1: ( rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 )
            // InternalSQLParser.g:15662:2: rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1
            {
            pushFollow(FOLLOW_82);
            rule__LikeValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0"


    // $ANTLR start "rule__LikeValue__Group__0__Impl"
    // InternalSQLParser.g:15669:1: rule__LikeValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__LikeValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15673:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:15674:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:15674:1: ( ( NOT )? )
            // InternalSQLParser.g:15675:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:15676:2: ( NOT )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==NOT) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSQLParser.g:15676:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0__Impl"


    // $ANTLR start "rule__LikeValue__Group__1"
    // InternalSQLParser.g:15684:1: rule__LikeValue__Group__1 : rule__LikeValue__Group__1__Impl ;
    public final void rule__LikeValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15688:1: ( rule__LikeValue__Group__1__Impl )
            // InternalSQLParser.g:15689:2: rule__LikeValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1"


    // $ANTLR start "rule__LikeValue__Group__1__Impl"
    // InternalSQLParser.g:15695:1: rule__LikeValue__Group__1__Impl : ( LIKE ) ;
    public final void rule__LikeValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15699:1: ( ( LIKE ) )
            // InternalSQLParser.g:15700:1: ( LIKE )
            {
            // InternalSQLParser.g:15700:1: ( LIKE )
            // InternalSQLParser.g:15701:2: LIKE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }
            match(input,LIKE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__0"
    // InternalSQLParser.g:15711:1: rule__Between__Group__0 : rule__Between__Group__0__Impl rule__Between__Group__1 ;
    public final void rule__Between__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15715:1: ( rule__Between__Group__0__Impl rule__Between__Group__1 )
            // InternalSQLParser.g:15716:2: rule__Between__Group__0__Impl rule__Between__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__Between__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0"


    // $ANTLR start "rule__Between__Group__0__Impl"
    // InternalSQLParser.g:15723:1: rule__Between__Group__0__Impl : ( ( rule__Between__OpBetweenAssignment_0 ) ) ;
    public final void rule__Between__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15727:1: ( ( ( rule__Between__OpBetweenAssignment_0 ) ) )
            // InternalSQLParser.g:15728:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            {
            // InternalSQLParser.g:15728:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            // InternalSQLParser.g:15729:2: ( rule__Between__OpBetweenAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }
            // InternalSQLParser.g:15730:2: ( rule__Between__OpBetweenAssignment_0 )
            // InternalSQLParser.g:15730:3: rule__Between__OpBetweenAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Between__OpBetweenAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0__Impl"


    // $ANTLR start "rule__Between__Group__1"
    // InternalSQLParser.g:15738:1: rule__Between__Group__1 : rule__Between__Group__1__Impl rule__Between__Group__2 ;
    public final void rule__Between__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15742:1: ( rule__Between__Group__1__Impl rule__Between__Group__2 )
            // InternalSQLParser.g:15743:2: rule__Between__Group__1__Impl rule__Between__Group__2
            {
            pushFollow(FOLLOW_83);
            rule__Between__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1"


    // $ANTLR start "rule__Between__Group__1__Impl"
    // InternalSQLParser.g:15750:1: rule__Between__Group__1__Impl : ( ( rule__Between__Op2Assignment_1 ) ) ;
    public final void rule__Between__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15754:1: ( ( ( rule__Between__Op2Assignment_1 ) ) )
            // InternalSQLParser.g:15755:1: ( ( rule__Between__Op2Assignment_1 ) )
            {
            // InternalSQLParser.g:15755:1: ( ( rule__Between__Op2Assignment_1 ) )
            // InternalSQLParser.g:15756:2: ( rule__Between__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }
            // InternalSQLParser.g:15757:2: ( rule__Between__Op2Assignment_1 )
            // InternalSQLParser.g:15757:3: rule__Between__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__2"
    // InternalSQLParser.g:15765:1: rule__Between__Group__2 : rule__Between__Group__2__Impl rule__Between__Group__3 ;
    public final void rule__Between__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15769:1: ( rule__Between__Group__2__Impl rule__Between__Group__3 )
            // InternalSQLParser.g:15770:2: rule__Between__Group__2__Impl rule__Between__Group__3
            {
            pushFollow(FOLLOW_75);
            rule__Between__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2"


    // $ANTLR start "rule__Between__Group__2__Impl"
    // InternalSQLParser.g:15777:1: rule__Between__Group__2__Impl : ( AND ) ;
    public final void rule__Between__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15781:1: ( ( AND ) )
            // InternalSQLParser.g:15782:1: ( AND )
            {
            // InternalSQLParser.g:15782:1: ( AND )
            // InternalSQLParser.g:15783:2: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2__Impl"


    // $ANTLR start "rule__Between__Group__3"
    // InternalSQLParser.g:15792:1: rule__Between__Group__3 : rule__Between__Group__3__Impl ;
    public final void rule__Between__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15796:1: ( rule__Between__Group__3__Impl )
            // InternalSQLParser.g:15797:2: rule__Between__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3"


    // $ANTLR start "rule__Between__Group__3__Impl"
    // InternalSQLParser.g:15803:1: rule__Between__Group__3__Impl : ( ( rule__Between__Op3Assignment_3 ) ) ;
    public final void rule__Between__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15807:1: ( ( ( rule__Between__Op3Assignment_3 ) ) )
            // InternalSQLParser.g:15808:1: ( ( rule__Between__Op3Assignment_3 ) )
            {
            // InternalSQLParser.g:15808:1: ( ( rule__Between__Op3Assignment_3 ) )
            // InternalSQLParser.g:15809:2: ( rule__Between__Op3Assignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }
            // InternalSQLParser.g:15810:2: ( rule__Between__Op3Assignment_3 )
            // InternalSQLParser.g:15810:3: rule__Between__Op3Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op3Assignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3__Impl"


    // $ANTLR start "rule__BetweenValue__Group__0"
    // InternalSQLParser.g:15819:1: rule__BetweenValue__Group__0 : rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 ;
    public final void rule__BetweenValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15823:1: ( rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 )
            // InternalSQLParser.g:15824:2: rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1
            {
            pushFollow(FOLLOW_84);
            rule__BetweenValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0"


    // $ANTLR start "rule__BetweenValue__Group__0__Impl"
    // InternalSQLParser.g:15831:1: rule__BetweenValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__BetweenValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15835:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:15836:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:15836:1: ( ( NOT )? )
            // InternalSQLParser.g:15837:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:15838:2: ( NOT )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==NOT) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalSQLParser.g:15838:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0__Impl"


    // $ANTLR start "rule__BetweenValue__Group__1"
    // InternalSQLParser.g:15846:1: rule__BetweenValue__Group__1 : rule__BetweenValue__Group__1__Impl ;
    public final void rule__BetweenValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15850:1: ( rule__BetweenValue__Group__1__Impl )
            // InternalSQLParser.g:15851:2: rule__BetweenValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1"


    // $ANTLR start "rule__BetweenValue__Group__1__Impl"
    // InternalSQLParser.g:15857:1: rule__BetweenValue__Group__1__Impl : ( BETWEEN ) ;
    public final void rule__BetweenValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15861:1: ( ( BETWEEN ) )
            // InternalSQLParser.g:15862:1: ( BETWEEN )
            {
            // InternalSQLParser.g:15862:1: ( BETWEEN )
            // InternalSQLParser.g:15863:2: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__0"
    // InternalSQLParser.g:15873:1: rule__InOperator__Group__0 : rule__InOperator__Group__0__Impl rule__InOperator__Group__1 ;
    public final void rule__InOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15877:1: ( rule__InOperator__Group__0__Impl rule__InOperator__Group__1 )
            // InternalSQLParser.g:15878:2: rule__InOperator__Group__0__Impl rule__InOperator__Group__1
            {
            pushFollow(FOLLOW_85);
            rule__InOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0"


    // $ANTLR start "rule__InOperator__Group__0__Impl"
    // InternalSQLParser.g:15885:1: rule__InOperator__Group__0__Impl : ( () ) ;
    public final void rule__InOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15889:1: ( ( () ) )
            // InternalSQLParser.g:15890:1: ( () )
            {
            // InternalSQLParser.g:15890:1: ( () )
            // InternalSQLParser.g:15891:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }
            // InternalSQLParser.g:15892:2: ()
            // InternalSQLParser.g:15892:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0__Impl"


    // $ANTLR start "rule__InOperator__Group__1"
    // InternalSQLParser.g:15900:1: rule__InOperator__Group__1 : rule__InOperator__Group__1__Impl rule__InOperator__Group__2 ;
    public final void rule__InOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15904:1: ( rule__InOperator__Group__1__Impl rule__InOperator__Group__2 )
            // InternalSQLParser.g:15905:2: rule__InOperator__Group__1__Impl rule__InOperator__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__InOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1"


    // $ANTLR start "rule__InOperator__Group__1__Impl"
    // InternalSQLParser.g:15912:1: rule__InOperator__Group__1__Impl : ( ( rule__InOperator__OpAssignment_1 ) ) ;
    public final void rule__InOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15916:1: ( ( ( rule__InOperator__OpAssignment_1 ) ) )
            // InternalSQLParser.g:15917:1: ( ( rule__InOperator__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:15917:1: ( ( rule__InOperator__OpAssignment_1 ) )
            // InternalSQLParser.g:15918:2: ( rule__InOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:15919:2: ( rule__InOperator__OpAssignment_1 )
            // InternalSQLParser.g:15919:3: rule__InOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__2"
    // InternalSQLParser.g:15927:1: rule__InOperator__Group__2 : rule__InOperator__Group__2__Impl ;
    public final void rule__InOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15931:1: ( rule__InOperator__Group__2__Impl )
            // InternalSQLParser.g:15932:2: rule__InOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2"


    // $ANTLR start "rule__InOperator__Group__2__Impl"
    // InternalSQLParser.g:15938:1: rule__InOperator__Group__2__Impl : ( ( rule__InOperator__Alternatives_2 ) ) ;
    public final void rule__InOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15942:1: ( ( ( rule__InOperator__Alternatives_2 ) ) )
            // InternalSQLParser.g:15943:1: ( ( rule__InOperator__Alternatives_2 ) )
            {
            // InternalSQLParser.g:15943:1: ( ( rule__InOperator__Alternatives_2 ) )
            // InternalSQLParser.g:15944:2: ( rule__InOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:15945:2: ( rule__InOperator__Alternatives_2 )
            // InternalSQLParser.g:15945:3: rule__InOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2__Impl"


    // $ANTLR start "rule__InValue__Group__0"
    // InternalSQLParser.g:15954:1: rule__InValue__Group__0 : rule__InValue__Group__0__Impl rule__InValue__Group__1 ;
    public final void rule__InValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15958:1: ( rule__InValue__Group__0__Impl rule__InValue__Group__1 )
            // InternalSQLParser.g:15959:2: rule__InValue__Group__0__Impl rule__InValue__Group__1
            {
            pushFollow(FOLLOW_85);
            rule__InValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0"


    // $ANTLR start "rule__InValue__Group__0__Impl"
    // InternalSQLParser.g:15966:1: rule__InValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__InValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15970:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:15971:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:15971:1: ( ( NOT )? )
            // InternalSQLParser.g:15972:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:15973:2: ( NOT )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==NOT) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalSQLParser.g:15973:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0__Impl"


    // $ANTLR start "rule__InValue__Group__1"
    // InternalSQLParser.g:15981:1: rule__InValue__Group__1 : rule__InValue__Group__1__Impl ;
    public final void rule__InValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15985:1: ( rule__InValue__Group__1__Impl )
            // InternalSQLParser.g:15986:2: rule__InValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1"


    // $ANTLR start "rule__InValue__Group__1__Impl"
    // InternalSQLParser.g:15992:1: rule__InValue__Group__1__Impl : ( IN ) ;
    public final void rule__InValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15996:1: ( ( IN ) )
            // InternalSQLParser.g:15997:1: ( IN )
            {
            // InternalSQLParser.g:15997:1: ( IN )
            // InternalSQLParser.g:15998:2: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__0"
    // InternalSQLParser.g:16008:1: rule__ExistsOperator__Group__0 : rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 ;
    public final void rule__ExistsOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16012:1: ( rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 )
            // InternalSQLParser.g:16013:2: rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__ExistsOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0"


    // $ANTLR start "rule__ExistsOperator__Group__0__Impl"
    // InternalSQLParser.g:16020:1: rule__ExistsOperator__Group__0__Impl : ( () ) ;
    public final void rule__ExistsOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16024:1: ( ( () ) )
            // InternalSQLParser.g:16025:1: ( () )
            {
            // InternalSQLParser.g:16025:1: ( () )
            // InternalSQLParser.g:16026:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }
            // InternalSQLParser.g:16027:2: ()
            // InternalSQLParser.g:16027:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__1"
    // InternalSQLParser.g:16035:1: rule__ExistsOperator__Group__1 : rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 ;
    public final void rule__ExistsOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16039:1: ( rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 )
            // InternalSQLParser.g:16040:2: rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2
            {
            pushFollow(FOLLOW_12);
            rule__ExistsOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1"


    // $ANTLR start "rule__ExistsOperator__Group__1__Impl"
    // InternalSQLParser.g:16047:1: rule__ExistsOperator__Group__1__Impl : ( ( rule__ExistsOperator__OpAssignment_1 ) ) ;
    public final void rule__ExistsOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16051:1: ( ( ( rule__ExistsOperator__OpAssignment_1 ) ) )
            // InternalSQLParser.g:16052:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:16052:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            // InternalSQLParser.g:16053:2: ( rule__ExistsOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:16054:2: ( rule__ExistsOperator__OpAssignment_1 )
            // InternalSQLParser.g:16054:3: rule__ExistsOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__2"
    // InternalSQLParser.g:16062:1: rule__ExistsOperator__Group__2 : rule__ExistsOperator__Group__2__Impl ;
    public final void rule__ExistsOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16066:1: ( rule__ExistsOperator__Group__2__Impl )
            // InternalSQLParser.g:16067:2: rule__ExistsOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2"


    // $ANTLR start "rule__ExistsOperator__Group__2__Impl"
    // InternalSQLParser.g:16073:1: rule__ExistsOperator__Group__2__Impl : ( ( rule__ExistsOperator__Alternatives_2 ) ) ;
    public final void rule__ExistsOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16077:1: ( ( ( rule__ExistsOperator__Alternatives_2 ) ) )
            // InternalSQLParser.g:16078:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            {
            // InternalSQLParser.g:16078:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            // InternalSQLParser.g:16079:2: ( rule__ExistsOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:16080:2: ( rule__ExistsOperator__Alternatives_2 )
            // InternalSQLParser.g:16080:3: rule__ExistsOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2__Impl"


    // $ANTLR start "rule__ExistsValue__Group__0"
    // InternalSQLParser.g:16089:1: rule__ExistsValue__Group__0 : rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 ;
    public final void rule__ExistsValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16093:1: ( rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 )
            // InternalSQLParser.g:16094:2: rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__ExistsValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0"


    // $ANTLR start "rule__ExistsValue__Group__0__Impl"
    // InternalSQLParser.g:16101:1: rule__ExistsValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__ExistsValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16105:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:16106:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:16106:1: ( ( NOT )? )
            // InternalSQLParser.g:16107:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:16108:2: ( NOT )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==NOT) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalSQLParser.g:16108:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0__Impl"


    // $ANTLR start "rule__ExistsValue__Group__1"
    // InternalSQLParser.g:16116:1: rule__ExistsValue__Group__1 : rule__ExistsValue__Group__1__Impl ;
    public final void rule__ExistsValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16120:1: ( rule__ExistsValue__Group__1__Impl )
            // InternalSQLParser.g:16121:2: rule__ExistsValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1"


    // $ANTLR start "rule__ExistsValue__Group__1__Impl"
    // InternalSQLParser.g:16127:1: rule__ExistsValue__Group__1__Impl : ( EXISTS ) ;
    public final void rule__ExistsValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16131:1: ( ( EXISTS ) )
            // InternalSQLParser.g:16132:1: ( EXISTS )
            {
            // InternalSQLParser.g:16132:1: ( EXISTS )
            // InternalSQLParser.g:16133:2: EXISTS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }
            match(input,EXISTS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__0"
    // InternalSQLParser.g:16143:1: rule__OperandListGroup__Group__0 : rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 ;
    public final void rule__OperandListGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16147:1: ( rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 )
            // InternalSQLParser.g:16148:2: rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1
            {
            pushFollow(FOLLOW_86);
            rule__OperandListGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0"


    // $ANTLR start "rule__OperandListGroup__Group__0__Impl"
    // InternalSQLParser.g:16155:1: rule__OperandListGroup__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandListGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16159:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:16160:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:16160:1: ( LeftParenthesis )
            // InternalSQLParser.g:16161:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__1"
    // InternalSQLParser.g:16170:1: rule__OperandListGroup__Group__1 : rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 ;
    public final void rule__OperandListGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16174:1: ( rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 )
            // InternalSQLParser.g:16175:2: rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__OperandListGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1"


    // $ANTLR start "rule__OperandListGroup__Group__1__Impl"
    // InternalSQLParser.g:16182:1: rule__OperandListGroup__Group__1__Impl : ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) ;
    public final void rule__OperandListGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16186:1: ( ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) )
            // InternalSQLParser.g:16187:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            {
            // InternalSQLParser.g:16187:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            // InternalSQLParser.g:16188:2: ( rule__OperandListGroup__OpGroupAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }
            // InternalSQLParser.g:16189:2: ( rule__OperandListGroup__OpGroupAssignment_1 )
            // InternalSQLParser.g:16189:3: rule__OperandListGroup__OpGroupAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__OpGroupAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__2"
    // InternalSQLParser.g:16197:1: rule__OperandListGroup__Group__2 : rule__OperandListGroup__Group__2__Impl ;
    public final void rule__OperandListGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16201:1: ( rule__OperandListGroup__Group__2__Impl )
            // InternalSQLParser.g:16202:2: rule__OperandListGroup__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2"


    // $ANTLR start "rule__OperandListGroup__Group__2__Impl"
    // InternalSQLParser.g:16208:1: rule__OperandListGroup__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandListGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16212:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:16213:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:16213:1: ( RightParenthesis )
            // InternalSQLParser.g:16214:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2__Impl"


    // $ANTLR start "rule__OperandList__Group__0"
    // InternalSQLParser.g:16224:1: rule__OperandList__Group__0 : rule__OperandList__Group__0__Impl rule__OperandList__Group__1 ;
    public final void rule__OperandList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16228:1: ( rule__OperandList__Group__0__Impl rule__OperandList__Group__1 )
            // InternalSQLParser.g:16229:2: rule__OperandList__Group__0__Impl rule__OperandList__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__OperandList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0"


    // $ANTLR start "rule__OperandList__Group__0__Impl"
    // InternalSQLParser.g:16236:1: rule__OperandList__Group__0__Impl : ( ruleScalarOperand ) ;
    public final void rule__OperandList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16240:1: ( ( ruleScalarOperand ) )
            // InternalSQLParser.g:16241:1: ( ruleScalarOperand )
            {
            // InternalSQLParser.g:16241:1: ( ruleScalarOperand )
            // InternalSQLParser.g:16242:2: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0__Impl"


    // $ANTLR start "rule__OperandList__Group__1"
    // InternalSQLParser.g:16251:1: rule__OperandList__Group__1 : rule__OperandList__Group__1__Impl ;
    public final void rule__OperandList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16255:1: ( rule__OperandList__Group__1__Impl )
            // InternalSQLParser.g:16256:2: rule__OperandList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1"


    // $ANTLR start "rule__OperandList__Group__1__Impl"
    // InternalSQLParser.g:16262:1: rule__OperandList__Group__1__Impl : ( ( rule__OperandList__Group_1__0 )? ) ;
    public final void rule__OperandList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16266:1: ( ( ( rule__OperandList__Group_1__0 )? ) )
            // InternalSQLParser.g:16267:1: ( ( rule__OperandList__Group_1__0 )? )
            {
            // InternalSQLParser.g:16267:1: ( ( rule__OperandList__Group_1__0 )? )
            // InternalSQLParser.g:16268:2: ( rule__OperandList__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:16269:2: ( rule__OperandList__Group_1__0 )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==Comma) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalSQLParser.g:16269:3: rule__OperandList__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandList__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1__0"
    // InternalSQLParser.g:16278:1: rule__OperandList__Group_1__0 : rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 ;
    public final void rule__OperandList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16282:1: ( rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 )
            // InternalSQLParser.g:16283:2: rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__OperandList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0"


    // $ANTLR start "rule__OperandList__Group_1__0__Impl"
    // InternalSQLParser.g:16290:1: rule__OperandList__Group_1__0__Impl : ( () ) ;
    public final void rule__OperandList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16294:1: ( ( () ) )
            // InternalSQLParser.g:16295:1: ( () )
            {
            // InternalSQLParser.g:16295:1: ( () )
            // InternalSQLParser.g:16296:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:16297:2: ()
            // InternalSQLParser.g:16297:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1__1"
    // InternalSQLParser.g:16305:1: rule__OperandList__Group_1__1 : rule__OperandList__Group_1__1__Impl ;
    public final void rule__OperandList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16309:1: ( rule__OperandList__Group_1__1__Impl )
            // InternalSQLParser.g:16310:2: rule__OperandList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1"


    // $ANTLR start "rule__OperandList__Group_1__1__Impl"
    // InternalSQLParser.g:16316:1: rule__OperandList__Group_1__1__Impl : ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) ;
    public final void rule__OperandList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16320:1: ( ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:16321:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:16321:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            // InternalSQLParser.g:16322:2: ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:16322:2: ( ( rule__OperandList__Group_1_1__0 ) )
            // InternalSQLParser.g:16323:3: ( rule__OperandList__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:16324:3: ( rule__OperandList__Group_1_1__0 )
            // InternalSQLParser.g:16324:4: rule__OperandList__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__OperandList__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:16327:2: ( ( rule__OperandList__Group_1_1__0 )* )
            // InternalSQLParser.g:16328:3: ( rule__OperandList__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:16329:3: ( rule__OperandList__Group_1_1__0 )*
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==Comma) ) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // InternalSQLParser.g:16329:4: rule__OperandList__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__OperandList__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__0"
    // InternalSQLParser.g:16339:1: rule__OperandList__Group_1_1__0 : rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 ;
    public final void rule__OperandList__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16343:1: ( rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 )
            // InternalSQLParser.g:16344:2: rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1
            {
            pushFollow(FOLLOW_86);
            rule__OperandList__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0"


    // $ANTLR start "rule__OperandList__Group_1_1__0__Impl"
    // InternalSQLParser.g:16351:1: rule__OperandList__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OperandList__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16355:1: ( ( Comma ) )
            // InternalSQLParser.g:16356:1: ( Comma )
            {
            // InternalSQLParser.g:16356:1: ( Comma )
            // InternalSQLParser.g:16357:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__1"
    // InternalSQLParser.g:16366:1: rule__OperandList__Group_1_1__1 : rule__OperandList__Group_1_1__1__Impl ;
    public final void rule__OperandList__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16370:1: ( rule__OperandList__Group_1_1__1__Impl )
            // InternalSQLParser.g:16371:2: rule__OperandList__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1"


    // $ANTLR start "rule__OperandList__Group_1_1__1__Impl"
    // InternalSQLParser.g:16377:1: rule__OperandList__Group_1_1__1__Impl : ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OperandList__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16381:1: ( ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:16382:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:16382:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:16383:2: ( rule__OperandList__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:16384:2: ( rule__OperandList__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:16384:3: rule__OperandList__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__0"
    // InternalSQLParser.g:16393:1: rule__OperandGroup__Group_1__0 : rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 ;
    public final void rule__OperandGroup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16397:1: ( rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 )
            // InternalSQLParser.g:16398:2: rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1
            {
            pushFollow(FOLLOW_75);
            rule__OperandGroup__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0"


    // $ANTLR start "rule__OperandGroup__Group_1__0__Impl"
    // InternalSQLParser.g:16405:1: rule__OperandGroup__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandGroup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16409:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:16410:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:16410:1: ( LeftParenthesis )
            // InternalSQLParser.g:16411:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__1"
    // InternalSQLParser.g:16420:1: rule__OperandGroup__Group_1__1 : rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 ;
    public final void rule__OperandGroup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16424:1: ( rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 )
            // InternalSQLParser.g:16425:2: rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2
            {
            pushFollow(FOLLOW_10);
            rule__OperandGroup__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1"


    // $ANTLR start "rule__OperandGroup__Group_1__1__Impl"
    // InternalSQLParser.g:16432:1: rule__OperandGroup__Group_1__1__Impl : ( ruleOperand ) ;
    public final void rule__OperandGroup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16436:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:16437:1: ( ruleOperand )
            {
            // InternalSQLParser.g:16437:1: ( ruleOperand )
            // InternalSQLParser.g:16438:2: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__2"
    // InternalSQLParser.g:16447:1: rule__OperandGroup__Group_1__2 : rule__OperandGroup__Group_1__2__Impl ;
    public final void rule__OperandGroup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16451:1: ( rule__OperandGroup__Group_1__2__Impl )
            // InternalSQLParser.g:16452:2: rule__OperandGroup__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2"


    // $ANTLR start "rule__OperandGroup__Group_1__2__Impl"
    // InternalSQLParser.g:16458:1: rule__OperandGroup__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandGroup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16462:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:16463:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:16463:1: ( RightParenthesis )
            // InternalSQLParser.g:16464:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2__Impl"


    // $ANTLR start "rule__Operand__Group__0"
    // InternalSQLParser.g:16474:1: rule__Operand__Group__0 : rule__Operand__Group__0__Impl rule__Operand__Group__1 ;
    public final void rule__Operand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16478:1: ( rule__Operand__Group__0__Impl rule__Operand__Group__1 )
            // InternalSQLParser.g:16479:2: rule__Operand__Group__0__Impl rule__Operand__Group__1
            {
            pushFollow(FOLLOW_87);
            rule__Operand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0"


    // $ANTLR start "rule__Operand__Group__0__Impl"
    // InternalSQLParser.g:16486:1: rule__Operand__Group__0__Impl : ( ( rule__Operand__Op1Assignment_0 ) ) ;
    public final void rule__Operand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16490:1: ( ( ( rule__Operand__Op1Assignment_0 ) ) )
            // InternalSQLParser.g:16491:1: ( ( rule__Operand__Op1Assignment_0 ) )
            {
            // InternalSQLParser.g:16491:1: ( ( rule__Operand__Op1Assignment_0 ) )
            // InternalSQLParser.g:16492:2: ( rule__Operand__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }
            // InternalSQLParser.g:16493:2: ( rule__Operand__Op1Assignment_0 )
            // InternalSQLParser.g:16493:3: rule__Operand__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0__Impl"


    // $ANTLR start "rule__Operand__Group__1"
    // InternalSQLParser.g:16501:1: rule__Operand__Group__1 : rule__Operand__Group__1__Impl ;
    public final void rule__Operand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16505:1: ( rule__Operand__Group__1__Impl )
            // InternalSQLParser.g:16506:2: rule__Operand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1"


    // $ANTLR start "rule__Operand__Group__1__Impl"
    // InternalSQLParser.g:16512:1: rule__Operand__Group__1__Impl : ( ( rule__Operand__Group_1__0 )* ) ;
    public final void rule__Operand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16516:1: ( ( ( rule__Operand__Group_1__0 )* ) )
            // InternalSQLParser.g:16517:1: ( ( rule__Operand__Group_1__0 )* )
            {
            // InternalSQLParser.g:16517:1: ( ( rule__Operand__Group_1__0 )* )
            // InternalSQLParser.g:16518:2: ( rule__Operand__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:16519:2: ( rule__Operand__Group_1__0 )*
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==VerticalLineVerticalLine||LA155_0==PlusSign||LA155_0==HyphenMinus||LA155_0==Solidus||LA155_0==RULE_STAR) ) {
                    alt155=1;
                }


                switch (alt155) {
            	case 1 :
            	    // InternalSQLParser.g:16519:3: rule__Operand__Group_1__0
            	    {
            	    pushFollow(FOLLOW_88);
            	    rule__Operand__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1__Impl"


    // $ANTLR start "rule__Operand__Group_1__0"
    // InternalSQLParser.g:16528:1: rule__Operand__Group_1__0 : rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 ;
    public final void rule__Operand__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16532:1: ( rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 )
            // InternalSQLParser.g:16533:2: rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1
            {
            pushFollow(FOLLOW_75);
            rule__Operand__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0"


    // $ANTLR start "rule__Operand__Group_1__0__Impl"
    // InternalSQLParser.g:16540:1: rule__Operand__Group_1__0__Impl : ( ( rule__Operand__Alternatives_1_0 ) ) ;
    public final void rule__Operand__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16544:1: ( ( ( rule__Operand__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:16545:1: ( ( rule__Operand__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:16545:1: ( ( rule__Operand__Alternatives_1_0 ) )
            // InternalSQLParser.g:16546:2: ( rule__Operand__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:16547:2: ( rule__Operand__Alternatives_1_0 )
            // InternalSQLParser.g:16547:3: rule__Operand__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1__1"
    // InternalSQLParser.g:16555:1: rule__Operand__Group_1__1 : rule__Operand__Group_1__1__Impl ;
    public final void rule__Operand__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16559:1: ( rule__Operand__Group_1__1__Impl )
            // InternalSQLParser.g:16560:2: rule__Operand__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1"


    // $ANTLR start "rule__Operand__Group_1__1__Impl"
    // InternalSQLParser.g:16566:1: rule__Operand__Group_1__1__Impl : ( ( rule__Operand__RightAssignment_1_1 ) ) ;
    public final void rule__Operand__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16570:1: ( ( ( rule__Operand__RightAssignment_1_1 ) ) )
            // InternalSQLParser.g:16571:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            {
            // InternalSQLParser.g:16571:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            // InternalSQLParser.g:16572:2: ( rule__Operand__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }
            // InternalSQLParser.g:16573:2: ( rule__Operand__RightAssignment_1_1 )
            // InternalSQLParser.g:16573:3: rule__Operand__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Operand__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__0"
    // InternalSQLParser.g:16582:1: rule__Operand__Group_1_0_0__0 : rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 ;
    public final void rule__Operand__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16586:1: ( rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 )
            // InternalSQLParser.g:16587:2: rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1
            {
            pushFollow(FOLLOW_89);
            rule__Operand__Group_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0"


    // $ANTLR start "rule__Operand__Group_1_0_0__0__Impl"
    // InternalSQLParser.g:16594:1: rule__Operand__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16598:1: ( ( () ) )
            // InternalSQLParser.g:16599:1: ( () )
            {
            // InternalSQLParser.g:16599:1: ( () )
            // InternalSQLParser.g:16600:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }
            // InternalSQLParser.g:16601:2: ()
            // InternalSQLParser.g:16601:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__1"
    // InternalSQLParser.g:16609:1: rule__Operand__Group_1_0_0__1 : rule__Operand__Group_1_0_0__1__Impl ;
    public final void rule__Operand__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16613:1: ( rule__Operand__Group_1_0_0__1__Impl )
            // InternalSQLParser.g:16614:2: rule__Operand__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1"


    // $ANTLR start "rule__Operand__Group_1_0_0__1__Impl"
    // InternalSQLParser.g:16620:1: rule__Operand__Group_1_0_0__1__Impl : ( PlusSign ) ;
    public final void rule__Operand__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16624:1: ( ( PlusSign ) )
            // InternalSQLParser.g:16625:1: ( PlusSign )
            {
            // InternalSQLParser.g:16625:1: ( PlusSign )
            // InternalSQLParser.g:16626:2: PlusSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }
            match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__0"
    // InternalSQLParser.g:16636:1: rule__Operand__Group_1_0_1__0 : rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 ;
    public final void rule__Operand__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16640:1: ( rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 )
            // InternalSQLParser.g:16641:2: rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1
            {
            pushFollow(FOLLOW_90);
            rule__Operand__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0"


    // $ANTLR start "rule__Operand__Group_1_0_1__0__Impl"
    // InternalSQLParser.g:16648:1: rule__Operand__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16652:1: ( ( () ) )
            // InternalSQLParser.g:16653:1: ( () )
            {
            // InternalSQLParser.g:16653:1: ( () )
            // InternalSQLParser.g:16654:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }
            // InternalSQLParser.g:16655:2: ()
            // InternalSQLParser.g:16655:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__1"
    // InternalSQLParser.g:16663:1: rule__Operand__Group_1_0_1__1 : rule__Operand__Group_1_0_1__1__Impl ;
    public final void rule__Operand__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16667:1: ( rule__Operand__Group_1_0_1__1__Impl )
            // InternalSQLParser.g:16668:2: rule__Operand__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1"


    // $ANTLR start "rule__Operand__Group_1_0_1__1__Impl"
    // InternalSQLParser.g:16674:1: rule__Operand__Group_1_0_1__1__Impl : ( HyphenMinus ) ;
    public final void rule__Operand__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16678:1: ( ( HyphenMinus ) )
            // InternalSQLParser.g:16679:1: ( HyphenMinus )
            {
            // InternalSQLParser.g:16679:1: ( HyphenMinus )
            // InternalSQLParser.g:16680:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__0"
    // InternalSQLParser.g:16690:1: rule__Operand__Group_1_0_2__0 : rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 ;
    public final void rule__Operand__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16694:1: ( rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 )
            // InternalSQLParser.g:16695:2: rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1
            {
            pushFollow(FOLLOW_91);
            rule__Operand__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0"


    // $ANTLR start "rule__Operand__Group_1_0_2__0__Impl"
    // InternalSQLParser.g:16702:1: rule__Operand__Group_1_0_2__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16706:1: ( ( () ) )
            // InternalSQLParser.g:16707:1: ( () )
            {
            // InternalSQLParser.g:16707:1: ( () )
            // InternalSQLParser.g:16708:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }
            // InternalSQLParser.g:16709:2: ()
            // InternalSQLParser.g:16709:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__1"
    // InternalSQLParser.g:16717:1: rule__Operand__Group_1_0_2__1 : rule__Operand__Group_1_0_2__1__Impl ;
    public final void rule__Operand__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16721:1: ( rule__Operand__Group_1_0_2__1__Impl )
            // InternalSQLParser.g:16722:2: rule__Operand__Group_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1"


    // $ANTLR start "rule__Operand__Group_1_0_2__1__Impl"
    // InternalSQLParser.g:16728:1: rule__Operand__Group_1_0_2__1__Impl : ( VerticalLineVerticalLine ) ;
    public final void rule__Operand__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16732:1: ( ( VerticalLineVerticalLine ) )
            // InternalSQLParser.g:16733:1: ( VerticalLineVerticalLine )
            {
            // InternalSQLParser.g:16733:1: ( VerticalLineVerticalLine )
            // InternalSQLParser.g:16734:2: VerticalLineVerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }
            match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__0"
    // InternalSQLParser.g:16744:1: rule__Operand__Group_1_0_3__0 : rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 ;
    public final void rule__Operand__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16748:1: ( rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 )
            // InternalSQLParser.g:16749:2: rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1
            {
            pushFollow(FOLLOW_69);
            rule__Operand__Group_1_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0"


    // $ANTLR start "rule__Operand__Group_1_0_3__0__Impl"
    // InternalSQLParser.g:16756:1: rule__Operand__Group_1_0_3__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16760:1: ( ( () ) )
            // InternalSQLParser.g:16761:1: ( () )
            {
            // InternalSQLParser.g:16761:1: ( () )
            // InternalSQLParser.g:16762:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }
            // InternalSQLParser.g:16763:2: ()
            // InternalSQLParser.g:16763:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__1"
    // InternalSQLParser.g:16771:1: rule__Operand__Group_1_0_3__1 : rule__Operand__Group_1_0_3__1__Impl ;
    public final void rule__Operand__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16775:1: ( rule__Operand__Group_1_0_3__1__Impl )
            // InternalSQLParser.g:16776:2: rule__Operand__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1"


    // $ANTLR start "rule__Operand__Group_1_0_3__1__Impl"
    // InternalSQLParser.g:16782:1: rule__Operand__Group_1_0_3__1__Impl : ( RULE_STAR ) ;
    public final void rule__Operand__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16786:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:16787:1: ( RULE_STAR )
            {
            // InternalSQLParser.g:16787:1: ( RULE_STAR )
            // InternalSQLParser.g:16788:2: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__0"
    // InternalSQLParser.g:16798:1: rule__Operand__Group_1_0_4__0 : rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 ;
    public final void rule__Operand__Group_1_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16802:1: ( rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 )
            // InternalSQLParser.g:16803:2: rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1
            {
            pushFollow(FOLLOW_87);
            rule__Operand__Group_1_0_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0"


    // $ANTLR start "rule__Operand__Group_1_0_4__0__Impl"
    // InternalSQLParser.g:16810:1: rule__Operand__Group_1_0_4__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16814:1: ( ( () ) )
            // InternalSQLParser.g:16815:1: ( () )
            {
            // InternalSQLParser.g:16815:1: ( () )
            // InternalSQLParser.g:16816:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }
            // InternalSQLParser.g:16817:2: ()
            // InternalSQLParser.g:16817:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__1"
    // InternalSQLParser.g:16825:1: rule__Operand__Group_1_0_4__1 : rule__Operand__Group_1_0_4__1__Impl ;
    public final void rule__Operand__Group_1_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16829:1: ( rule__Operand__Group_1_0_4__1__Impl )
            // InternalSQLParser.g:16830:2: rule__Operand__Group_1_0_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1"


    // $ANTLR start "rule__Operand__Group_1_0_4__1__Impl"
    // InternalSQLParser.g:16836:1: rule__Operand__Group_1_0_4__1__Impl : ( Solidus ) ;
    public final void rule__Operand__Group_1_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16840:1: ( ( Solidus ) )
            // InternalSQLParser.g:16841:1: ( Solidus )
            {
            // InternalSQLParser.g:16841:1: ( Solidus )
            // InternalSQLParser.g:16842:2: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__0"
    // InternalSQLParser.g:16852:1: rule__OperandFunction__Group__0 : rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 ;
    public final void rule__OperandFunction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16856:1: ( rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 )
            // InternalSQLParser.g:16857:2: rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__OperandFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0"


    // $ANTLR start "rule__OperandFunction__Group__0__Impl"
    // InternalSQLParser.g:16864:1: rule__OperandFunction__Group__0__Impl : ( () ) ;
    public final void rule__OperandFunction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16868:1: ( ( () ) )
            // InternalSQLParser.g:16869:1: ( () )
            {
            // InternalSQLParser.g:16869:1: ( () )
            // InternalSQLParser.g:16870:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }
            // InternalSQLParser.g:16871:2: ()
            // InternalSQLParser.g:16871:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0__Impl"


    // $ANTLR start "rule__OperandFunction__Group__1"
    // InternalSQLParser.g:16879:1: rule__OperandFunction__Group__1 : rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 ;
    public final void rule__OperandFunction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16883:1: ( rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 )
            // InternalSQLParser.g:16884:2: rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2
            {
            pushFollow(FOLLOW_92);
            rule__OperandFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1"


    // $ANTLR start "rule__OperandFunction__Group__1__Impl"
    // InternalSQLParser.g:16891:1: rule__OperandFunction__Group__1__Impl : ( ( rule__OperandFunction__FnameAssignment_1 ) ) ;
    public final void rule__OperandFunction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16895:1: ( ( ( rule__OperandFunction__FnameAssignment_1 ) ) )
            // InternalSQLParser.g:16896:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            {
            // InternalSQLParser.g:16896:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            // InternalSQLParser.g:16897:2: ( rule__OperandFunction__FnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }
            // InternalSQLParser.g:16898:2: ( rule__OperandFunction__FnameAssignment_1 )
            // InternalSQLParser.g:16898:3: rule__OperandFunction__FnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__FnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__2"
    // InternalSQLParser.g:16906:1: rule__OperandFunction__Group__2 : rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 ;
    public final void rule__OperandFunction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16910:1: ( rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 )
            // InternalSQLParser.g:16911:2: rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3
            {
            pushFollow(FOLLOW_92);
            rule__OperandFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2"


    // $ANTLR start "rule__OperandFunction__Group__2__Impl"
    // InternalSQLParser.g:16918:1: rule__OperandFunction__Group__2__Impl : ( ( rule__OperandFunction__Alternatives_2 )? ) ;
    public final void rule__OperandFunction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16922:1: ( ( ( rule__OperandFunction__Alternatives_2 )? ) )
            // InternalSQLParser.g:16923:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            {
            // InternalSQLParser.g:16923:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            // InternalSQLParser.g:16924:2: ( rule__OperandFunction__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:16925:2: ( rule__OperandFunction__Alternatives_2 )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==DISTINCT||LA156_0==EXTRACT||LA156_0==CAST||LA156_0==FALSE||LA156_0==CASE||LA156_0==TRUE||LA156_0==ALL||LA156_0==LeftParenthesis||(LA156_0>=RULE_JRPARAM && LA156_0<=RULE_SIGNED_DOUBLE)||(LA156_0>=RULE_STRING_ && LA156_0<=RULE_ID)) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalSQLParser.g:16925:3: rule__OperandFunction__Alternatives_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2__Impl"


    // $ANTLR start "rule__OperandFunction__Group__3"
    // InternalSQLParser.g:16933:1: rule__OperandFunction__Group__3 : rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 ;
    public final void rule__OperandFunction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16937:1: ( rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 )
            // InternalSQLParser.g:16938:2: rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4
            {
            pushFollow(FOLLOW_93);
            rule__OperandFunction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3"


    // $ANTLR start "rule__OperandFunction__Group__3__Impl"
    // InternalSQLParser.g:16945:1: rule__OperandFunction__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__OperandFunction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16949:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:16950:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:16950:1: ( RightParenthesis )
            // InternalSQLParser.g:16951:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3__Impl"


    // $ANTLR start "rule__OperandFunction__Group__4"
    // InternalSQLParser.g:16960:1: rule__OperandFunction__Group__4 : rule__OperandFunction__Group__4__Impl ;
    public final void rule__OperandFunction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16964:1: ( rule__OperandFunction__Group__4__Impl )
            // InternalSQLParser.g:16965:2: rule__OperandFunction__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4"


    // $ANTLR start "rule__OperandFunction__Group__4__Impl"
    // InternalSQLParser.g:16971:1: rule__OperandFunction__Group__4__Impl : ( ( rule__OperandFunction__FanAssignment_4 )? ) ;
    public final void rule__OperandFunction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16975:1: ( ( ( rule__OperandFunction__FanAssignment_4 )? ) )
            // InternalSQLParser.g:16976:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            {
            // InternalSQLParser.g:16976:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            // InternalSQLParser.g:16977:2: ( rule__OperandFunction__FanAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }
            // InternalSQLParser.g:16978:2: ( rule__OperandFunction__FanAssignment_4 )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==OVER) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalSQLParser.g:16978:3: rule__OperandFunction__FanAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__FanAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__0"
    // InternalSQLParser.g:16987:1: rule__FunctionExtract__Group__0 : rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 ;
    public final void rule__FunctionExtract__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16991:1: ( rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 )
            // InternalSQLParser.g:16992:2: rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__FunctionExtract__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0"


    // $ANTLR start "rule__FunctionExtract__Group__0__Impl"
    // InternalSQLParser.g:16999:1: rule__FunctionExtract__Group__0__Impl : ( EXTRACT ) ;
    public final void rule__FunctionExtract__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17003:1: ( ( EXTRACT ) )
            // InternalSQLParser.g:17004:1: ( EXTRACT )
            {
            // InternalSQLParser.g:17004:1: ( EXTRACT )
            // InternalSQLParser.g:17005:2: EXTRACT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }
            match(input,EXTRACT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__1"
    // InternalSQLParser.g:17014:1: rule__FunctionExtract__Group__1 : rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 ;
    public final void rule__FunctionExtract__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17018:1: ( rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 )
            // InternalSQLParser.g:17019:2: rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2
            {
            pushFollow(FOLLOW_94);
            rule__FunctionExtract__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1"


    // $ANTLR start "rule__FunctionExtract__Group__1__Impl"
    // InternalSQLParser.g:17026:1: rule__FunctionExtract__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionExtract__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17030:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:17031:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:17031:1: ( LeftParenthesis )
            // InternalSQLParser.g:17032:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__2"
    // InternalSQLParser.g:17041:1: rule__FunctionExtract__Group__2 : rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 ;
    public final void rule__FunctionExtract__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17045:1: ( rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 )
            // InternalSQLParser.g:17046:2: rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3
            {
            pushFollow(FOLLOW_41);
            rule__FunctionExtract__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2"


    // $ANTLR start "rule__FunctionExtract__Group__2__Impl"
    // InternalSQLParser.g:17053:1: rule__FunctionExtract__Group__2__Impl : ( ( rule__FunctionExtract__VAssignment_2 ) ) ;
    public final void rule__FunctionExtract__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17057:1: ( ( ( rule__FunctionExtract__VAssignment_2 ) ) )
            // InternalSQLParser.g:17058:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            {
            // InternalSQLParser.g:17058:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            // InternalSQLParser.g:17059:2: ( rule__FunctionExtract__VAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }
            // InternalSQLParser.g:17060:2: ( rule__FunctionExtract__VAssignment_2 )
            // InternalSQLParser.g:17060:3: rule__FunctionExtract__VAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__VAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__3"
    // InternalSQLParser.g:17068:1: rule__FunctionExtract__Group__3 : rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 ;
    public final void rule__FunctionExtract__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17072:1: ( rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 )
            // InternalSQLParser.g:17073:2: rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4
            {
            pushFollow(FOLLOW_75);
            rule__FunctionExtract__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3"


    // $ANTLR start "rule__FunctionExtract__Group__3__Impl"
    // InternalSQLParser.g:17080:1: rule__FunctionExtract__Group__3__Impl : ( FROM ) ;
    public final void rule__FunctionExtract__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17084:1: ( ( FROM ) )
            // InternalSQLParser.g:17085:1: ( FROM )
            {
            // InternalSQLParser.g:17085:1: ( FROM )
            // InternalSQLParser.g:17086:2: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__4"
    // InternalSQLParser.g:17095:1: rule__FunctionExtract__Group__4 : rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 ;
    public final void rule__FunctionExtract__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17099:1: ( rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 )
            // InternalSQLParser.g:17100:2: rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5
            {
            pushFollow(FOLLOW_10);
            rule__FunctionExtract__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4"


    // $ANTLR start "rule__FunctionExtract__Group__4__Impl"
    // InternalSQLParser.g:17107:1: rule__FunctionExtract__Group__4__Impl : ( ( rule__FunctionExtract__OperandAssignment_4 ) ) ;
    public final void rule__FunctionExtract__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17111:1: ( ( ( rule__FunctionExtract__OperandAssignment_4 ) ) )
            // InternalSQLParser.g:17112:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            {
            // InternalSQLParser.g:17112:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            // InternalSQLParser.g:17113:2: ( rule__FunctionExtract__OperandAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }
            // InternalSQLParser.g:17114:2: ( rule__FunctionExtract__OperandAssignment_4 )
            // InternalSQLParser.g:17114:3: rule__FunctionExtract__OperandAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__OperandAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__5"
    // InternalSQLParser.g:17122:1: rule__FunctionExtract__Group__5 : rule__FunctionExtract__Group__5__Impl ;
    public final void rule__FunctionExtract__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17126:1: ( rule__FunctionExtract__Group__5__Impl )
            // InternalSQLParser.g:17127:2: rule__FunctionExtract__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5"


    // $ANTLR start "rule__FunctionExtract__Group__5__Impl"
    // InternalSQLParser.g:17133:1: rule__FunctionExtract__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionExtract__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17137:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:17138:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:17138:1: ( RightParenthesis )
            // InternalSQLParser.g:17139:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__0"
    // InternalSQLParser.g:17149:1: rule__FunctionAnalytical__Group__0 : rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 ;
    public final void rule__FunctionAnalytical__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17153:1: ( rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 )
            // InternalSQLParser.g:17154:2: rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__FunctionAnalytical__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0"


    // $ANTLR start "rule__FunctionAnalytical__Group__0__Impl"
    // InternalSQLParser.g:17161:1: rule__FunctionAnalytical__Group__0__Impl : ( OVER ) ;
    public final void rule__FunctionAnalytical__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17165:1: ( ( OVER ) )
            // InternalSQLParser.g:17166:1: ( OVER )
            {
            // InternalSQLParser.g:17166:1: ( OVER )
            // InternalSQLParser.g:17167:2: OVER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }
            match(input,OVER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__1"
    // InternalSQLParser.g:17176:1: rule__FunctionAnalytical__Group__1 : rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 ;
    public final void rule__FunctionAnalytical__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17180:1: ( rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 )
            // InternalSQLParser.g:17181:2: rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2
            {
            pushFollow(FOLLOW_95);
            rule__FunctionAnalytical__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1"


    // $ANTLR start "rule__FunctionAnalytical__Group__1__Impl"
    // InternalSQLParser.g:17188:1: rule__FunctionAnalytical__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17192:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:17193:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:17193:1: ( LeftParenthesis )
            // InternalSQLParser.g:17194:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__2"
    // InternalSQLParser.g:17203:1: rule__FunctionAnalytical__Group__2 : rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 ;
    public final void rule__FunctionAnalytical__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17207:1: ( rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 )
            // InternalSQLParser.g:17208:2: rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__FunctionAnalytical__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2"


    // $ANTLR start "rule__FunctionAnalytical__Group__2__Impl"
    // InternalSQLParser.g:17215:1: rule__FunctionAnalytical__Group__2__Impl : ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) ;
    public final void rule__FunctionAnalytical__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17219:1: ( ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) )
            // InternalSQLParser.g:17220:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            {
            // InternalSQLParser.g:17220:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            // InternalSQLParser.g:17221:2: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }
            // InternalSQLParser.g:17222:2: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            // InternalSQLParser.g:17222:3: rule__FunctionAnalytical__AnClauseAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__AnClauseAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__3"
    // InternalSQLParser.g:17230:1: rule__FunctionAnalytical__Group__3 : rule__FunctionAnalytical__Group__3__Impl ;
    public final void rule__FunctionAnalytical__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17234:1: ( rule__FunctionAnalytical__Group__3__Impl )
            // InternalSQLParser.g:17235:2: rule__FunctionAnalytical__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3"


    // $ANTLR start "rule__FunctionAnalytical__Group__3__Impl"
    // InternalSQLParser.g:17241:1: rule__FunctionAnalytical__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17245:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:17246:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:17246:1: ( RightParenthesis )
            // InternalSQLParser.g:17247:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__0"
    // InternalSQLParser.g:17257:1: rule__AnalyticClause__Group__0 : rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 ;
    public final void rule__AnalyticClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17261:1: ( rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 )
            // InternalSQLParser.g:17262:2: rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1
            {
            pushFollow(FOLLOW_95);
            rule__AnalyticClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0"


    // $ANTLR start "rule__AnalyticClause__Group__0__Impl"
    // InternalSQLParser.g:17269:1: rule__AnalyticClause__Group__0__Impl : ( () ) ;
    public final void rule__AnalyticClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17273:1: ( ( () ) )
            // InternalSQLParser.g:17274:1: ( () )
            {
            // InternalSQLParser.g:17274:1: ( () )
            // InternalSQLParser.g:17275:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }
            // InternalSQLParser.g:17276:2: ()
            // InternalSQLParser.g:17276:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__1"
    // InternalSQLParser.g:17284:1: rule__AnalyticClause__Group__1 : rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 ;
    public final void rule__AnalyticClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17288:1: ( rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 )
            // InternalSQLParser.g:17289:2: rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2
            {
            pushFollow(FOLLOW_95);
            rule__AnalyticClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1"


    // $ANTLR start "rule__AnalyticClause__Group__1__Impl"
    // InternalSQLParser.g:17296:1: rule__AnalyticClause__Group__1__Impl : ( ( rule__AnalyticClause__AbcAssignment_1 )? ) ;
    public final void rule__AnalyticClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17300:1: ( ( ( rule__AnalyticClause__AbcAssignment_1 )? ) )
            // InternalSQLParser.g:17301:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            {
            // InternalSQLParser.g:17301:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            // InternalSQLParser.g:17302:2: ( rule__AnalyticClause__AbcAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }
            // InternalSQLParser.g:17303:2: ( rule__AnalyticClause__AbcAssignment_1 )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==PARTITION) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalSQLParser.g:17303:3: rule__AnalyticClause__AbcAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__AbcAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__2"
    // InternalSQLParser.g:17311:1: rule__AnalyticClause__Group__2 : rule__AnalyticClause__Group__2__Impl ;
    public final void rule__AnalyticClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17315:1: ( rule__AnalyticClause__Group__2__Impl )
            // InternalSQLParser.g:17316:2: rule__AnalyticClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2"


    // $ANTLR start "rule__AnalyticClause__Group__2__Impl"
    // InternalSQLParser.g:17322:1: rule__AnalyticClause__Group__2__Impl : ( ( rule__AnalyticClause__Group_2__0 )? ) ;
    public final void rule__AnalyticClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17326:1: ( ( ( rule__AnalyticClause__Group_2__0 )? ) )
            // InternalSQLParser.g:17327:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            {
            // InternalSQLParser.g:17327:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            // InternalSQLParser.g:17328:2: ( rule__AnalyticClause__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:17329:2: ( rule__AnalyticClause__Group_2__0 )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==ORDER) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalSQLParser.g:17329:3: rule__AnalyticClause__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__0"
    // InternalSQLParser.g:17338:1: rule__AnalyticClause__Group_2__0 : rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 ;
    public final void rule__AnalyticClause__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17342:1: ( rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 )
            // InternalSQLParser.g:17343:2: rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1
            {
            pushFollow(FOLLOW_96);
            rule__AnalyticClause__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0"


    // $ANTLR start "rule__AnalyticClause__Group_2__0__Impl"
    // InternalSQLParser.g:17350:1: rule__AnalyticClause__Group_2__0__Impl : ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) ;
    public final void rule__AnalyticClause__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17354:1: ( ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) )
            // InternalSQLParser.g:17355:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            {
            // InternalSQLParser.g:17355:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            // InternalSQLParser.g:17356:2: ( rule__AnalyticClause__ObcAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }
            // InternalSQLParser.g:17357:2: ( rule__AnalyticClause__ObcAssignment_2_0 )
            // InternalSQLParser.g:17357:3: rule__AnalyticClause__ObcAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__ObcAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__1"
    // InternalSQLParser.g:17365:1: rule__AnalyticClause__Group_2__1 : rule__AnalyticClause__Group_2__1__Impl ;
    public final void rule__AnalyticClause__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17369:1: ( rule__AnalyticClause__Group_2__1__Impl )
            // InternalSQLParser.g:17370:2: rule__AnalyticClause__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1"


    // $ANTLR start "rule__AnalyticClause__Group_2__1__Impl"
    // InternalSQLParser.g:17376:1: rule__AnalyticClause__Group_2__1__Impl : ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) ;
    public final void rule__AnalyticClause__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17380:1: ( ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) )
            // InternalSQLParser.g:17381:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            {
            // InternalSQLParser.g:17381:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            // InternalSQLParser.g:17382:2: ( rule__AnalyticClause__WincAssignment_2_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }
            // InternalSQLParser.g:17383:2: ( rule__AnalyticClause__WincAssignment_2_1 )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==RANGE||LA160_0==ROWS) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalSQLParser.g:17383:3: rule__AnalyticClause__WincAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__WincAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1__Impl"


    // $ANTLR start "rule__WindowingClause__Group__0"
    // InternalSQLParser.g:17392:1: rule__WindowingClause__Group__0 : rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 ;
    public final void rule__WindowingClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17396:1: ( rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 )
            // InternalSQLParser.g:17397:2: rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1
            {
            pushFollow(FOLLOW_97);
            rule__WindowingClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0"


    // $ANTLR start "rule__WindowingClause__Group__0__Impl"
    // InternalSQLParser.g:17404:1: rule__WindowingClause__Group__0__Impl : ( ( rule__WindowingClause__Alternatives_0 ) ) ;
    public final void rule__WindowingClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17408:1: ( ( ( rule__WindowingClause__Alternatives_0 ) ) )
            // InternalSQLParser.g:17409:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            {
            // InternalSQLParser.g:17409:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            // InternalSQLParser.g:17410:2: ( rule__WindowingClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:17411:2: ( rule__WindowingClause__Alternatives_0 )
            // InternalSQLParser.g:17411:3: rule__WindowingClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0__Impl"


    // $ANTLR start "rule__WindowingClause__Group__1"
    // InternalSQLParser.g:17419:1: rule__WindowingClause__Group__1 : rule__WindowingClause__Group__1__Impl ;
    public final void rule__WindowingClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17423:1: ( rule__WindowingClause__Group__1__Impl )
            // InternalSQLParser.g:17424:2: rule__WindowingClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1"


    // $ANTLR start "rule__WindowingClause__Group__1__Impl"
    // InternalSQLParser.g:17430:1: rule__WindowingClause__Group__1__Impl : ( ( rule__WindowingClause__Alternatives_1 ) ) ;
    public final void rule__WindowingClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17434:1: ( ( ( rule__WindowingClause__Alternatives_1 ) ) )
            // InternalSQLParser.g:17435:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            {
            // InternalSQLParser.g:17435:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            // InternalSQLParser.g:17436:2: ( rule__WindowingClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:17437:2: ( rule__WindowingClause__Alternatives_1 )
            // InternalSQLParser.g:17437:3: rule__WindowingClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0"
    // InternalSQLParser.g:17446:1: rule__WindowingClauseBetween__Group__0 : rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 ;
    public final void rule__WindowingClauseBetween__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17450:1: ( rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 )
            // InternalSQLParser.g:17451:2: rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1
            {
            pushFollow(FOLLOW_97);
            rule__WindowingClauseBetween__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0__Impl"
    // InternalSQLParser.g:17458:1: rule__WindowingClauseBetween__Group__0__Impl : ( BETWEEN ) ;
    public final void rule__WindowingClauseBetween__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17462:1: ( ( BETWEEN ) )
            // InternalSQLParser.g:17463:1: ( BETWEEN )
            {
            // InternalSQLParser.g:17463:1: ( BETWEEN )
            // InternalSQLParser.g:17464:2: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1"
    // InternalSQLParser.g:17473:1: rule__WindowingClauseBetween__Group__1 : rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 ;
    public final void rule__WindowingClauseBetween__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17477:1: ( rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 )
            // InternalSQLParser.g:17478:2: rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2
            {
            pushFollow(FOLLOW_83);
            rule__WindowingClauseBetween__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1__Impl"
    // InternalSQLParser.g:17485:1: rule__WindowingClauseBetween__Group__1__Impl : ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) ;
    public final void rule__WindowingClauseBetween__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17489:1: ( ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) )
            // InternalSQLParser.g:17490:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            {
            // InternalSQLParser.g:17490:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            // InternalSQLParser.g:17491:2: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }
            // InternalSQLParser.g:17492:2: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            // InternalSQLParser.g:17492:3: rule__WindowingClauseBetween__WcoPAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoPAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2"
    // InternalSQLParser.g:17500:1: rule__WindowingClauseBetween__Group__2 : rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 ;
    public final void rule__WindowingClauseBetween__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17504:1: ( rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 )
            // InternalSQLParser.g:17505:2: rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3
            {
            pushFollow(FOLLOW_97);
            rule__WindowingClauseBetween__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2__Impl"
    // InternalSQLParser.g:17512:1: rule__WindowingClauseBetween__Group__2__Impl : ( AND ) ;
    public final void rule__WindowingClauseBetween__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17516:1: ( ( AND ) )
            // InternalSQLParser.g:17517:1: ( AND )
            {
            // InternalSQLParser.g:17517:1: ( AND )
            // InternalSQLParser.g:17518:2: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3"
    // InternalSQLParser.g:17527:1: rule__WindowingClauseBetween__Group__3 : rule__WindowingClauseBetween__Group__3__Impl ;
    public final void rule__WindowingClauseBetween__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17531:1: ( rule__WindowingClauseBetween__Group__3__Impl )
            // InternalSQLParser.g:17532:2: rule__WindowingClauseBetween__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3__Impl"
    // InternalSQLParser.g:17538:1: rule__WindowingClauseBetween__Group__3__Impl : ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) ;
    public final void rule__WindowingClauseBetween__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17542:1: ( ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) )
            // InternalSQLParser.g:17543:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            {
            // InternalSQLParser.g:17543:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            // InternalSQLParser.g:17544:2: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }
            // InternalSQLParser.g:17545:2: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            // InternalSQLParser.g:17545:3: rule__WindowingClauseBetween__WcoFAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoFAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0"
    // InternalSQLParser.g:17554:1: rule__WindowingClauseOperandFollowing__Group__0 : rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17558:1: ( rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 )
            // InternalSQLParser.g:17559:2: rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1
            {
            pushFollow(FOLLOW_97);
            rule__WindowingClauseOperandFollowing__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0__Impl"
    // InternalSQLParser.g:17566:1: rule__WindowingClauseOperandFollowing__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17570:1: ( ( () ) )
            // InternalSQLParser.g:17571:1: ( () )
            {
            // InternalSQLParser.g:17571:1: ( () )
            // InternalSQLParser.g:17572:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }
            // InternalSQLParser.g:17573:2: ()
            // InternalSQLParser.g:17573:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1"
    // InternalSQLParser.g:17581:1: rule__WindowingClauseOperandFollowing__Group__1 : rule__WindowingClauseOperandFollowing__Group__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17585:1: ( rule__WindowingClauseOperandFollowing__Group__1__Impl )
            // InternalSQLParser.g:17586:2: rule__WindowingClauseOperandFollowing__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1__Impl"
    // InternalSQLParser.g:17592:1: rule__WindowingClauseOperandFollowing__Group__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17596:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) )
            // InternalSQLParser.g:17597:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            {
            // InternalSQLParser.g:17597:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            // InternalSQLParser.g:17598:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:17599:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            // InternalSQLParser.g:17599:3: rule__WindowingClauseOperandFollowing__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0"
    // InternalSQLParser.g:17608:1: rule__WindowingClauseOperandFollowing__Group_1_0__0 : rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17612:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 )
            // InternalSQLParser.g:17613:2: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1
            {
            pushFollow(FOLLOW_98);
            rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"
    // InternalSQLParser.g:17620:1: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17624:1: ( ( UNBOUNDED ) )
            // InternalSQLParser.g:17625:1: ( UNBOUNDED )
            {
            // InternalSQLParser.g:17625:1: ( UNBOUNDED )
            // InternalSQLParser.g:17626:2: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1"
    // InternalSQLParser.g:17635:1: rule__WindowingClauseOperandFollowing__Group_1_0__1 : rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17639:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl )
            // InternalSQLParser.g:17640:2: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"
    // InternalSQLParser.g:17646:1: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl : ( KW_FOLLOWING ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17650:1: ( ( KW_FOLLOWING ) )
            // InternalSQLParser.g:17651:1: ( KW_FOLLOWING )
            {
            // InternalSQLParser.g:17651:1: ( KW_FOLLOWING )
            // InternalSQLParser.g:17652:2: KW_FOLLOWING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }
            match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0"
    // InternalSQLParser.g:17662:1: rule__WindowingClauseOperandFollowing__Group_1_1__0 : rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17666:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 )
            // InternalSQLParser.g:17667:2: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1
            {
            pushFollow(FOLLOW_99);
            rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"
    // InternalSQLParser.g:17674:1: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17678:1: ( ( CURRENT ) )
            // InternalSQLParser.g:17679:1: ( CURRENT )
            {
            // InternalSQLParser.g:17679:1: ( CURRENT )
            // InternalSQLParser.g:17680:2: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1"
    // InternalSQLParser.g:17689:1: rule__WindowingClauseOperandFollowing__Group_1_1__1 : rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17693:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl )
            // InternalSQLParser.g:17694:2: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"
    // InternalSQLParser.g:17700:1: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17704:1: ( ( ROW ) )
            // InternalSQLParser.g:17705:1: ( ROW )
            {
            // InternalSQLParser.g:17705:1: ( ROW )
            // InternalSQLParser.g:17706:2: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0"
    // InternalSQLParser.g:17716:1: rule__WindowingClauseOperandFollowing__Group_1_2__0 : rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17720:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 )
            // InternalSQLParser.g:17721:2: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1
            {
            pushFollow(FOLLOW_100);
            rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"
    // InternalSQLParser.g:17728:1: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17732:1: ( ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) )
            // InternalSQLParser.g:17733:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            {
            // InternalSQLParser.g:17733:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            // InternalSQLParser.g:17734:2: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }
            // InternalSQLParser.g:17735:2: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            // InternalSQLParser.g:17735:3: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1"
    // InternalSQLParser.g:17743:1: rule__WindowingClauseOperandFollowing__Group_1_2__1 : rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17747:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl )
            // InternalSQLParser.g:17748:2: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"
    // InternalSQLParser.g:17754:1: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17758:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) )
            // InternalSQLParser.g:17759:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            {
            // InternalSQLParser.g:17759:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            // InternalSQLParser.g:17760:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSQLParser.g:17761:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            // InternalSQLParser.g:17761:3: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0"
    // InternalSQLParser.g:17770:1: rule__WindowingClauseOperandPreceding__Group__0 : rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17774:1: ( rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 )
            // InternalSQLParser.g:17775:2: rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1
            {
            pushFollow(FOLLOW_97);
            rule__WindowingClauseOperandPreceding__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0__Impl"
    // InternalSQLParser.g:17782:1: rule__WindowingClauseOperandPreceding__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17786:1: ( ( () ) )
            // InternalSQLParser.g:17787:1: ( () )
            {
            // InternalSQLParser.g:17787:1: ( () )
            // InternalSQLParser.g:17788:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }
            // InternalSQLParser.g:17789:2: ()
            // InternalSQLParser.g:17789:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1"
    // InternalSQLParser.g:17797:1: rule__WindowingClauseOperandPreceding__Group__1 : rule__WindowingClauseOperandPreceding__Group__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17801:1: ( rule__WindowingClauseOperandPreceding__Group__1__Impl )
            // InternalSQLParser.g:17802:2: rule__WindowingClauseOperandPreceding__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1__Impl"
    // InternalSQLParser.g:17808:1: rule__WindowingClauseOperandPreceding__Group__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17812:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) )
            // InternalSQLParser.g:17813:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            {
            // InternalSQLParser.g:17813:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            // InternalSQLParser.g:17814:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:17815:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            // InternalSQLParser.g:17815:3: rule__WindowingClauseOperandPreceding__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0"
    // InternalSQLParser.g:17824:1: rule__WindowingClauseOperandPreceding__Group_1_0__0 : rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17828:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 )
            // InternalSQLParser.g:17829:2: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1
            {
            pushFollow(FOLLOW_101);
            rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"
    // InternalSQLParser.g:17836:1: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17840:1: ( ( UNBOUNDED ) )
            // InternalSQLParser.g:17841:1: ( UNBOUNDED )
            {
            // InternalSQLParser.g:17841:1: ( UNBOUNDED )
            // InternalSQLParser.g:17842:2: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1"
    // InternalSQLParser.g:17851:1: rule__WindowingClauseOperandPreceding__Group_1_0__1 : rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17855:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl )
            // InternalSQLParser.g:17856:2: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"
    // InternalSQLParser.g:17862:1: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl : ( PRECEDING ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17866:1: ( ( PRECEDING ) )
            // InternalSQLParser.g:17867:1: ( PRECEDING )
            {
            // InternalSQLParser.g:17867:1: ( PRECEDING )
            // InternalSQLParser.g:17868:2: PRECEDING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }
            match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0"
    // InternalSQLParser.g:17878:1: rule__WindowingClauseOperandPreceding__Group_1_1__0 : rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17882:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 )
            // InternalSQLParser.g:17883:2: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1
            {
            pushFollow(FOLLOW_99);
            rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"
    // InternalSQLParser.g:17890:1: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17894:1: ( ( CURRENT ) )
            // InternalSQLParser.g:17895:1: ( CURRENT )
            {
            // InternalSQLParser.g:17895:1: ( CURRENT )
            // InternalSQLParser.g:17896:2: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1"
    // InternalSQLParser.g:17905:1: rule__WindowingClauseOperandPreceding__Group_1_1__1 : rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17909:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl )
            // InternalSQLParser.g:17910:2: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"
    // InternalSQLParser.g:17916:1: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17920:1: ( ( ROW ) )
            // InternalSQLParser.g:17921:1: ( ROW )
            {
            // InternalSQLParser.g:17921:1: ( ROW )
            // InternalSQLParser.g:17922:2: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0"
    // InternalSQLParser.g:17932:1: rule__WindowingClauseOperandPreceding__Group_1_2__0 : rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17936:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 )
            // InternalSQLParser.g:17937:2: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1
            {
            pushFollow(FOLLOW_100);
            rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"
    // InternalSQLParser.g:17944:1: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17948:1: ( ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) )
            // InternalSQLParser.g:17949:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            {
            // InternalSQLParser.g:17949:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            // InternalSQLParser.g:17950:2: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }
            // InternalSQLParser.g:17951:2: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            // InternalSQLParser.g:17951:3: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1"
    // InternalSQLParser.g:17959:1: rule__WindowingClauseOperandPreceding__Group_1_2__1 : rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17963:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl )
            // InternalSQLParser.g:17964:2: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"
    // InternalSQLParser.g:17970:1: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17974:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) )
            // InternalSQLParser.g:17975:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            {
            // InternalSQLParser.g:17975:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            // InternalSQLParser.g:17976:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSQLParser.g:17977:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            // InternalSQLParser.g:17977:3: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group__0"
    // InternalSQLParser.g:17986:1: rule__OrderByClause__Group__0 : rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 ;
    public final void rule__OrderByClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17990:1: ( rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 )
            // InternalSQLParser.g:17991:2: rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1
            {
            pushFollow(FOLLOW_97);
            rule__OrderByClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0"


    // $ANTLR start "rule__OrderByClause__Group__0__Impl"
    // InternalSQLParser.g:17998:1: rule__OrderByClause__Group__0__Impl : ( ( rule__OrderByClause__Alternatives_0 ) ) ;
    public final void rule__OrderByClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18002:1: ( ( ( rule__OrderByClause__Alternatives_0 ) ) )
            // InternalSQLParser.g:18003:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            {
            // InternalSQLParser.g:18003:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            // InternalSQLParser.g:18004:2: ( rule__OrderByClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:18005:2: ( rule__OrderByClause__Alternatives_0 )
            // InternalSQLParser.g:18005:3: rule__OrderByClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group__1"
    // InternalSQLParser.g:18013:1: rule__OrderByClause__Group__1 : rule__OrderByClause__Group__1__Impl ;
    public final void rule__OrderByClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18017:1: ( rule__OrderByClause__Group__1__Impl )
            // InternalSQLParser.g:18018:2: rule__OrderByClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1"


    // $ANTLR start "rule__OrderByClause__Group__1__Impl"
    // InternalSQLParser.g:18024:1: rule__OrderByClause__Group__1__Impl : ( ( rule__OrderByClause__ArgsAssignment_1 ) ) ;
    public final void rule__OrderByClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18028:1: ( ( ( rule__OrderByClause__ArgsAssignment_1 ) ) )
            // InternalSQLParser.g:18029:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            {
            // InternalSQLParser.g:18029:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            // InternalSQLParser.g:18030:2: ( rule__OrderByClause__ArgsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }
            // InternalSQLParser.g:18031:2: ( rule__OrderByClause__ArgsAssignment_1 )
            // InternalSQLParser.g:18031:3: rule__OrderByClause__ArgsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__ArgsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0"
    // InternalSQLParser.g:18040:1: rule__OrderByClause__Group_0_0__0 : rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 ;
    public final void rule__OrderByClause__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18044:1: ( rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 )
            // InternalSQLParser.g:18045:2: rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1
            {
            pushFollow(FOLLOW_47);
            rule__OrderByClause__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0__Impl"
    // InternalSQLParser.g:18052:1: rule__OrderByClause__Group_0_0__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18056:1: ( ( ORDER ) )
            // InternalSQLParser.g:18057:1: ( ORDER )
            {
            // InternalSQLParser.g:18057:1: ( ORDER )
            // InternalSQLParser.g:18058:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1"
    // InternalSQLParser.g:18067:1: rule__OrderByClause__Group_0_0__1 : rule__OrderByClause__Group_0_0__1__Impl ;
    public final void rule__OrderByClause__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18071:1: ( rule__OrderByClause__Group_0_0__1__Impl )
            // InternalSQLParser.g:18072:2: rule__OrderByClause__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1__Impl"
    // InternalSQLParser.g:18078:1: rule__OrderByClause__Group_0_0__1__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18082:1: ( ( BY ) )
            // InternalSQLParser.g:18083:1: ( BY )
            {
            // InternalSQLParser.g:18083:1: ( BY )
            // InternalSQLParser.g:18084:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0"
    // InternalSQLParser.g:18094:1: rule__OrderByClause__Group_0_1__0 : rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 ;
    public final void rule__OrderByClause__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18098:1: ( rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 )
            // InternalSQLParser.g:18099:2: rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1
            {
            pushFollow(FOLLOW_102);
            rule__OrderByClause__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0__Impl"
    // InternalSQLParser.g:18106:1: rule__OrderByClause__Group_0_1__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18110:1: ( ( ORDER ) )
            // InternalSQLParser.g:18111:1: ( ORDER )
            {
            // InternalSQLParser.g:18111:1: ( ORDER )
            // InternalSQLParser.g:18112:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1"
    // InternalSQLParser.g:18121:1: rule__OrderByClause__Group_0_1__1 : rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 ;
    public final void rule__OrderByClause__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18125:1: ( rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 )
            // InternalSQLParser.g:18126:2: rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2
            {
            pushFollow(FOLLOW_47);
            rule__OrderByClause__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1__Impl"
    // InternalSQLParser.g:18133:1: rule__OrderByClause__Group_0_1__1__Impl : ( SIBLINGS ) ;
    public final void rule__OrderByClause__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18137:1: ( ( SIBLINGS ) )
            // InternalSQLParser.g:18138:1: ( SIBLINGS )
            {
            // InternalSQLParser.g:18138:1: ( SIBLINGS )
            // InternalSQLParser.g:18139:2: SIBLINGS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }
            match(input,SIBLINGS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2"
    // InternalSQLParser.g:18148:1: rule__OrderByClause__Group_0_1__2 : rule__OrderByClause__Group_0_1__2__Impl ;
    public final void rule__OrderByClause__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18152:1: ( rule__OrderByClause__Group_0_1__2__Impl )
            // InternalSQLParser.g:18153:2: rule__OrderByClause__Group_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2__Impl"
    // InternalSQLParser.g:18159:1: rule__OrderByClause__Group_0_1__2__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18163:1: ( ( BY ) )
            // InternalSQLParser.g:18164:1: ( BY )
            {
            // InternalSQLParser.g:18164:1: ( BY )
            // InternalSQLParser.g:18165:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0"
    // InternalSQLParser.g:18175:1: rule__OrderByClauseArgs__Group__0 : rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 ;
    public final void rule__OrderByClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18179:1: ( rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 )
            // InternalSQLParser.g:18180:2: rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__OrderByClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0__Impl"
    // InternalSQLParser.g:18187:1: rule__OrderByClauseArgs__Group__0__Impl : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18191:1: ( ( ruleOrderByClauseArg ) )
            // InternalSQLParser.g:18192:1: ( ruleOrderByClauseArg )
            {
            // InternalSQLParser.g:18192:1: ( ruleOrderByClauseArg )
            // InternalSQLParser.g:18193:2: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1"
    // InternalSQLParser.g:18202:1: rule__OrderByClauseArgs__Group__1 : rule__OrderByClauseArgs__Group__1__Impl ;
    public final void rule__OrderByClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18206:1: ( rule__OrderByClauseArgs__Group__1__Impl )
            // InternalSQLParser.g:18207:2: rule__OrderByClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1__Impl"
    // InternalSQLParser.g:18213:1: rule__OrderByClauseArgs__Group__1__Impl : ( ( rule__OrderByClauseArgs__Group_1__0 )? ) ;
    public final void rule__OrderByClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18217:1: ( ( ( rule__OrderByClauseArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:18218:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:18218:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            // InternalSQLParser.g:18219:2: ( rule__OrderByClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:18220:2: ( rule__OrderByClauseArgs__Group_1__0 )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==Comma) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalSQLParser.g:18220:3: rule__OrderByClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0"
    // InternalSQLParser.g:18229:1: rule__OrderByClauseArgs__Group_1__0 : rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18233:1: ( rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 )
            // InternalSQLParser.g:18234:2: rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__OrderByClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0__Impl"
    // InternalSQLParser.g:18241:1: rule__OrderByClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18245:1: ( ( () ) )
            // InternalSQLParser.g:18246:1: ( () )
            {
            // InternalSQLParser.g:18246:1: ( () )
            // InternalSQLParser.g:18247:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:18248:2: ()
            // InternalSQLParser.g:18248:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1"
    // InternalSQLParser.g:18256:1: rule__OrderByClauseArgs__Group_1__1 : rule__OrderByClauseArgs__Group_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18260:1: ( rule__OrderByClauseArgs__Group_1__1__Impl )
            // InternalSQLParser.g:18261:2: rule__OrderByClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1__Impl"
    // InternalSQLParser.g:18267:1: rule__OrderByClauseArgs__Group_1__1__Impl : ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18271:1: ( ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:18272:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:18272:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:18273:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:18273:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:18274:3: ( rule__OrderByClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:18275:3: ( rule__OrderByClauseArgs__Group_1_1__0 )
            // InternalSQLParser.g:18275:4: rule__OrderByClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__OrderByClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:18278:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:18279:3: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:18280:3: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            loop162:
            do {
                int alt162=2;
                int LA162_0 = input.LA(1);

                if ( (LA162_0==Comma) ) {
                    alt162=1;
                }


                switch (alt162) {
            	case 1 :
            	    // InternalSQLParser.g:18280:4: rule__OrderByClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__OrderByClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0"
    // InternalSQLParser.g:18290:1: rule__OrderByClauseArgs__Group_1_1__0 : rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18294:1: ( rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 )
            // InternalSQLParser.g:18295:2: rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_97);
            rule__OrderByClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:18302:1: rule__OrderByClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18306:1: ( ( Comma ) )
            // InternalSQLParser.g:18307:1: ( Comma )
            {
            // InternalSQLParser.g:18307:1: ( Comma )
            // InternalSQLParser.g:18308:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1"
    // InternalSQLParser.g:18317:1: rule__OrderByClauseArgs__Group_1_1__1 : rule__OrderByClauseArgs__Group_1_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18321:1: ( rule__OrderByClauseArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:18322:2: rule__OrderByClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:18328:1: rule__OrderByClauseArgs__Group_1_1__1__Impl : ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18332:1: ( ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:18333:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:18333:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:18334:2: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:18335:2: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:18335:3: rule__OrderByClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__0"
    // InternalSQLParser.g:18344:1: rule__OrderByClauseArg__Group__0 : rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 ;
    public final void rule__OrderByClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18348:1: ( rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 )
            // InternalSQLParser.g:18349:2: rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1
            {
            pushFollow(FOLLOW_103);
            rule__OrderByClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0"


    // $ANTLR start "rule__OrderByClauseArg__Group__0__Impl"
    // InternalSQLParser.g:18356:1: rule__OrderByClauseArg__Group__0__Impl : ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) ;
    public final void rule__OrderByClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18360:1: ( ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) )
            // InternalSQLParser.g:18361:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            {
            // InternalSQLParser.g:18361:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            // InternalSQLParser.g:18362:2: ( rule__OrderByClauseArg__ColAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }
            // InternalSQLParser.g:18363:2: ( rule__OrderByClauseArg__ColAssignment_0 )
            // InternalSQLParser.g:18363:3: rule__OrderByClauseArg__ColAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__ColAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__1"
    // InternalSQLParser.g:18371:1: rule__OrderByClauseArg__Group__1 : rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 ;
    public final void rule__OrderByClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18375:1: ( rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 )
            // InternalSQLParser.g:18376:2: rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2
            {
            pushFollow(FOLLOW_103);
            rule__OrderByClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1"


    // $ANTLR start "rule__OrderByClauseArg__Group__1__Impl"
    // InternalSQLParser.g:18383:1: rule__OrderByClauseArg__Group__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_1 )? ) ;
    public final void rule__OrderByClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18387:1: ( ( ( rule__OrderByClauseArg__Alternatives_1 )? ) )
            // InternalSQLParser.g:18388:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            {
            // InternalSQLParser.g:18388:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            // InternalSQLParser.g:18389:2: ( rule__OrderByClauseArg__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:18390:2: ( rule__OrderByClauseArg__Alternatives_1 )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==DESC||LA163_0==ASC) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalSQLParser.g:18390:3: rule__OrderByClauseArg__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__2"
    // InternalSQLParser.g:18398:1: rule__OrderByClauseArg__Group__2 : rule__OrderByClauseArg__Group__2__Impl ;
    public final void rule__OrderByClauseArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18402:1: ( rule__OrderByClauseArg__Group__2__Impl )
            // InternalSQLParser.g:18403:2: rule__OrderByClauseArg__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2"


    // $ANTLR start "rule__OrderByClauseArg__Group__2__Impl"
    // InternalSQLParser.g:18409:1: rule__OrderByClauseArg__Group__2__Impl : ( ( rule__OrderByClauseArg__Group_2__0 )? ) ;
    public final void rule__OrderByClauseArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18413:1: ( ( ( rule__OrderByClauseArg__Group_2__0 )? ) )
            // InternalSQLParser.g:18414:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            {
            // InternalSQLParser.g:18414:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            // InternalSQLParser.g:18415:2: ( rule__OrderByClauseArg__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:18416:2: ( rule__OrderByClauseArg__Group_2__0 )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==NULLS) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalSQLParser.g:18416:3: rule__OrderByClauseArg__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0"
    // InternalSQLParser.g:18425:1: rule__OrderByClauseArg__Group_2__0 : rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 ;
    public final void rule__OrderByClauseArg__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18429:1: ( rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 )
            // InternalSQLParser.g:18430:2: rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1
            {
            pushFollow(FOLLOW_104);
            rule__OrderByClauseArg__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0__Impl"
    // InternalSQLParser.g:18437:1: rule__OrderByClauseArg__Group_2__0__Impl : ( NULLS ) ;
    public final void rule__OrderByClauseArg__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18441:1: ( ( NULLS ) )
            // InternalSQLParser.g:18442:1: ( NULLS )
            {
            // InternalSQLParser.g:18442:1: ( NULLS )
            // InternalSQLParser.g:18443:2: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1"
    // InternalSQLParser.g:18452:1: rule__OrderByClauseArg__Group_2__1 : rule__OrderByClauseArg__Group_2__1__Impl ;
    public final void rule__OrderByClauseArg__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18456:1: ( rule__OrderByClauseArg__Group_2__1__Impl )
            // InternalSQLParser.g:18457:2: rule__OrderByClauseArg__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1__Impl"
    // InternalSQLParser.g:18463:1: rule__OrderByClauseArg__Group_2__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) ;
    public final void rule__OrderByClauseArg__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18467:1: ( ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) )
            // InternalSQLParser.g:18468:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            {
            // InternalSQLParser.g:18468:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            // InternalSQLParser.g:18469:2: ( rule__OrderByClauseArg__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }
            // InternalSQLParser.g:18470:2: ( rule__OrderByClauseArg__Alternatives_2_1 )
            // InternalSQLParser.g:18470:3: rule__OrderByClauseArg__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__0"
    // InternalSQLParser.g:18479:1: rule__QueryPartitionClause__Group__0 : rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 ;
    public final void rule__QueryPartitionClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18483:1: ( rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 )
            // InternalSQLParser.g:18484:2: rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__QueryPartitionClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0"


    // $ANTLR start "rule__QueryPartitionClause__Group__0__Impl"
    // InternalSQLParser.g:18491:1: rule__QueryPartitionClause__Group__0__Impl : ( PARTITION ) ;
    public final void rule__QueryPartitionClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18495:1: ( ( PARTITION ) )
            // InternalSQLParser.g:18496:1: ( PARTITION )
            {
            // InternalSQLParser.g:18496:1: ( PARTITION )
            // InternalSQLParser.g:18497:2: PARTITION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }
            match(input,PARTITION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__1"
    // InternalSQLParser.g:18506:1: rule__QueryPartitionClause__Group__1 : rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 ;
    public final void rule__QueryPartitionClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18510:1: ( rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 )
            // InternalSQLParser.g:18511:2: rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2
            {
            pushFollow(FOLLOW_97);
            rule__QueryPartitionClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1"


    // $ANTLR start "rule__QueryPartitionClause__Group__1__Impl"
    // InternalSQLParser.g:18518:1: rule__QueryPartitionClause__Group__1__Impl : ( BY ) ;
    public final void rule__QueryPartitionClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18522:1: ( ( BY ) )
            // InternalSQLParser.g:18523:1: ( BY )
            {
            // InternalSQLParser.g:18523:1: ( BY )
            // InternalSQLParser.g:18524:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__2"
    // InternalSQLParser.g:18533:1: rule__QueryPartitionClause__Group__2 : rule__QueryPartitionClause__Group__2__Impl ;
    public final void rule__QueryPartitionClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18537:1: ( rule__QueryPartitionClause__Group__2__Impl )
            // InternalSQLParser.g:18538:2: rule__QueryPartitionClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2"


    // $ANTLR start "rule__QueryPartitionClause__Group__2__Impl"
    // InternalSQLParser.g:18544:1: rule__QueryPartitionClause__Group__2__Impl : ( ( rule__QueryPartitionClause__Alternatives_2 ) ) ;
    public final void rule__QueryPartitionClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18548:1: ( ( ( rule__QueryPartitionClause__Alternatives_2 ) ) )
            // InternalSQLParser.g:18549:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            {
            // InternalSQLParser.g:18549:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            // InternalSQLParser.g:18550:2: ( rule__QueryPartitionClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:18551:2: ( rule__QueryPartitionClause__Alternatives_2 )
            // InternalSQLParser.g:18551:3: rule__QueryPartitionClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0"
    // InternalSQLParser.g:18560:1: rule__QueryPartitionClause__Group_2_1__0 : rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 ;
    public final void rule__QueryPartitionClause__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18564:1: ( rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 )
            // InternalSQLParser.g:18565:2: rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1
            {
            pushFollow(FOLLOW_97);
            rule__QueryPartitionClause__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0__Impl"
    // InternalSQLParser.g:18572:1: rule__QueryPartitionClause__Group_2_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18576:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:18577:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:18577:1: ( LeftParenthesis )
            // InternalSQLParser.g:18578:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1"
    // InternalSQLParser.g:18587:1: rule__QueryPartitionClause__Group_2_1__1 : rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 ;
    public final void rule__QueryPartitionClause__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18591:1: ( rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 )
            // InternalSQLParser.g:18592:2: rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2
            {
            pushFollow(FOLLOW_10);
            rule__QueryPartitionClause__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1__Impl"
    // InternalSQLParser.g:18599:1: rule__QueryPartitionClause__Group_2_1__1__Impl : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18603:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSQLParser.g:18604:1: ( ruleAnalyticExprArgs )
            {
            // InternalSQLParser.g:18604:1: ( ruleAnalyticExprArgs )
            // InternalSQLParser.g:18605:2: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2"
    // InternalSQLParser.g:18614:1: rule__QueryPartitionClause__Group_2_1__2 : rule__QueryPartitionClause__Group_2_1__2__Impl ;
    public final void rule__QueryPartitionClause__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18618:1: ( rule__QueryPartitionClause__Group_2_1__2__Impl )
            // InternalSQLParser.g:18619:2: rule__QueryPartitionClause__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2__Impl"
    // InternalSQLParser.g:18625:1: rule__QueryPartitionClause__Group_2_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18629:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:18630:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:18630:1: ( RightParenthesis )
            // InternalSQLParser.g:18631:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0"
    // InternalSQLParser.g:18641:1: rule__AnalyticExprArgs__Group__0 : rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 ;
    public final void rule__AnalyticExprArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18645:1: ( rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 )
            // InternalSQLParser.g:18646:2: rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__AnalyticExprArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0__Impl"
    // InternalSQLParser.g:18653:1: rule__AnalyticExprArgs__Group__0__Impl : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18657:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:18658:1: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:18658:1: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:18659:2: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1"
    // InternalSQLParser.g:18668:1: rule__AnalyticExprArgs__Group__1 : rule__AnalyticExprArgs__Group__1__Impl ;
    public final void rule__AnalyticExprArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18672:1: ( rule__AnalyticExprArgs__Group__1__Impl )
            // InternalSQLParser.g:18673:2: rule__AnalyticExprArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1__Impl"
    // InternalSQLParser.g:18679:1: rule__AnalyticExprArgs__Group__1__Impl : ( ( rule__AnalyticExprArgs__Group_1__0 )? ) ;
    public final void rule__AnalyticExprArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18683:1: ( ( ( rule__AnalyticExprArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:18684:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:18684:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            // InternalSQLParser.g:18685:2: ( rule__AnalyticExprArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:18686:2: ( rule__AnalyticExprArgs__Group_1__0 )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==Comma) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalSQLParser.g:18686:3: rule__AnalyticExprArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0"
    // InternalSQLParser.g:18695:1: rule__AnalyticExprArgs__Group_1__0 : rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18699:1: ( rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 )
            // InternalSQLParser.g:18700:2: rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__AnalyticExprArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0__Impl"
    // InternalSQLParser.g:18707:1: rule__AnalyticExprArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__AnalyticExprArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18711:1: ( ( () ) )
            // InternalSQLParser.g:18712:1: ( () )
            {
            // InternalSQLParser.g:18712:1: ( () )
            // InternalSQLParser.g:18713:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:18714:2: ()
            // InternalSQLParser.g:18714:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1"
    // InternalSQLParser.g:18722:1: rule__AnalyticExprArgs__Group_1__1 : rule__AnalyticExprArgs__Group_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18726:1: ( rule__AnalyticExprArgs__Group_1__1__Impl )
            // InternalSQLParser.g:18727:2: rule__AnalyticExprArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1__Impl"
    // InternalSQLParser.g:18733:1: rule__AnalyticExprArgs__Group_1__1__Impl : ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) ;
    public final void rule__AnalyticExprArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18737:1: ( ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:18738:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:18738:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:18739:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:18739:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:18740:3: ( rule__AnalyticExprArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:18741:3: ( rule__AnalyticExprArgs__Group_1_1__0 )
            // InternalSQLParser.g:18741:4: rule__AnalyticExprArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__AnalyticExprArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:18744:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:18745:3: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:18746:3: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==Comma) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // InternalSQLParser.g:18746:4: rule__AnalyticExprArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__AnalyticExprArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0"
    // InternalSQLParser.g:18756:1: rule__AnalyticExprArgs__Group_1_1__0 : rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18760:1: ( rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 )
            // InternalSQLParser.g:18761:2: rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_97);
            rule__AnalyticExprArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:18768:1: rule__AnalyticExprArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18772:1: ( ( Comma ) )
            // InternalSQLParser.g:18773:1: ( Comma )
            {
            // InternalSQLParser.g:18773:1: ( Comma )
            // InternalSQLParser.g:18774:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1"
    // InternalSQLParser.g:18783:1: rule__AnalyticExprArgs__Group_1_1__1 : rule__AnalyticExprArgs__Group_1_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18787:1: ( rule__AnalyticExprArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:18788:2: rule__AnalyticExprArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:18794:1: rule__AnalyticExprArgs__Group_1_1__1__Impl : ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18798:1: ( ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:18799:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:18799:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:18800:2: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:18801:2: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:18801:3: rule__AnalyticExprArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__0"
    // InternalSQLParser.g:18810:1: rule__AnalyticExprArg__Group__0 : rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 ;
    public final void rule__AnalyticExprArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18814:1: ( rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 )
            // InternalSQLParser.g:18815:2: rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__AnalyticExprArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0"


    // $ANTLR start "rule__AnalyticExprArg__Group__0__Impl"
    // InternalSQLParser.g:18822:1: rule__AnalyticExprArg__Group__0__Impl : ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) ;
    public final void rule__AnalyticExprArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18826:1: ( ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) )
            // InternalSQLParser.g:18827:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            {
            // InternalSQLParser.g:18827:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            // InternalSQLParser.g:18828:2: ( rule__AnalyticExprArg__CeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }
            // InternalSQLParser.g:18829:2: ( rule__AnalyticExprArg__CeAssignment_0 )
            // InternalSQLParser.g:18829:3: rule__AnalyticExprArg__CeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__CeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__1"
    // InternalSQLParser.g:18837:1: rule__AnalyticExprArg__Group__1 : rule__AnalyticExprArg__Group__1__Impl ;
    public final void rule__AnalyticExprArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18841:1: ( rule__AnalyticExprArg__Group__1__Impl )
            // InternalSQLParser.g:18842:2: rule__AnalyticExprArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1"


    // $ANTLR start "rule__AnalyticExprArg__Group__1__Impl"
    // InternalSQLParser.g:18848:1: rule__AnalyticExprArg__Group__1__Impl : ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) ;
    public final void rule__AnalyticExprArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18852:1: ( ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) )
            // InternalSQLParser.g:18853:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            {
            // InternalSQLParser.g:18853:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            // InternalSQLParser.g:18854:2: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }
            // InternalSQLParser.g:18855:2: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( ((LA167_0>=RULE_STRING && LA167_0<=RULE_ID)) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalSQLParser.g:18855:3: rule__AnalyticExprArg__ColAliasAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArg__ColAliasAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__0"
    // InternalSQLParser.g:18864:1: rule__OpFunctionArg__Group__0 : rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 ;
    public final void rule__OpFunctionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18868:1: ( rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 )
            // InternalSQLParser.g:18869:2: rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__OpFunctionArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0"


    // $ANTLR start "rule__OpFunctionArg__Group__0__Impl"
    // InternalSQLParser.g:18876:1: rule__OpFunctionArg__Group__0__Impl : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18880:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSQLParser.g:18881:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSQLParser.g:18881:1: ( ruleOpFunctionArgOperand )
            // InternalSQLParser.g:18882:2: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__1"
    // InternalSQLParser.g:18891:1: rule__OpFunctionArg__Group__1 : rule__OpFunctionArg__Group__1__Impl ;
    public final void rule__OpFunctionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18895:1: ( rule__OpFunctionArg__Group__1__Impl )
            // InternalSQLParser.g:18896:2: rule__OpFunctionArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1"


    // $ANTLR start "rule__OpFunctionArg__Group__1__Impl"
    // InternalSQLParser.g:18902:1: rule__OpFunctionArg__Group__1__Impl : ( ( rule__OpFunctionArg__Group_1__0 )? ) ;
    public final void rule__OpFunctionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18906:1: ( ( ( rule__OpFunctionArg__Group_1__0 )? ) )
            // InternalSQLParser.g:18907:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            {
            // InternalSQLParser.g:18907:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            // InternalSQLParser.g:18908:2: ( rule__OpFunctionArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:18909:2: ( rule__OpFunctionArg__Group_1__0 )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==Comma) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalSQLParser.g:18909:3: rule__OpFunctionArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0"
    // InternalSQLParser.g:18918:1: rule__OpFunctionArg__Group_1__0 : rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 ;
    public final void rule__OpFunctionArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18922:1: ( rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 )
            // InternalSQLParser.g:18923:2: rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1
            {
            pushFollow(FOLLOW_13);
            rule__OpFunctionArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0__Impl"
    // InternalSQLParser.g:18930:1: rule__OpFunctionArg__Group_1__0__Impl : ( () ) ;
    public final void rule__OpFunctionArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18934:1: ( ( () ) )
            // InternalSQLParser.g:18935:1: ( () )
            {
            // InternalSQLParser.g:18935:1: ( () )
            // InternalSQLParser.g:18936:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:18937:2: ()
            // InternalSQLParser.g:18937:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1"
    // InternalSQLParser.g:18945:1: rule__OpFunctionArg__Group_1__1 : rule__OpFunctionArg__Group_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18949:1: ( rule__OpFunctionArg__Group_1__1__Impl )
            // InternalSQLParser.g:18950:2: rule__OpFunctionArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1__Impl"
    // InternalSQLParser.g:18956:1: rule__OpFunctionArg__Group_1__1__Impl : ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) ;
    public final void rule__OpFunctionArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18960:1: ( ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:18961:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:18961:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            // InternalSQLParser.g:18962:2: ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:18962:2: ( ( rule__OpFunctionArg__Group_1_1__0 ) )
            // InternalSQLParser.g:18963:3: ( rule__OpFunctionArg__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:18964:3: ( rule__OpFunctionArg__Group_1_1__0 )
            // InternalSQLParser.g:18964:4: rule__OpFunctionArg__Group_1_1__0
            {
            pushFollow(FOLLOW_14);
            rule__OpFunctionArg__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:18967:2: ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            // InternalSQLParser.g:18968:3: ( rule__OpFunctionArg__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:18969:3: ( rule__OpFunctionArg__Group_1_1__0 )*
            loop169:
            do {
                int alt169=2;
                int LA169_0 = input.LA(1);

                if ( (LA169_0==Comma) ) {
                    alt169=1;
                }


                switch (alt169) {
            	case 1 :
            	    // InternalSQLParser.g:18969:4: rule__OpFunctionArg__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__OpFunctionArg__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop169;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0"
    // InternalSQLParser.g:18979:1: rule__OpFunctionArg__Group_1_1__0 : rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 ;
    public final void rule__OpFunctionArg__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18983:1: ( rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 )
            // InternalSQLParser.g:18984:2: rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1
            {
            pushFollow(FOLLOW_105);
            rule__OpFunctionArg__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0__Impl"
    // InternalSQLParser.g:18991:1: rule__OpFunctionArg__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionArg__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18995:1: ( ( Comma ) )
            // InternalSQLParser.g:18996:1: ( Comma )
            {
            // InternalSQLParser.g:18996:1: ( Comma )
            // InternalSQLParser.g:18997:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1"
    // InternalSQLParser.g:19006:1: rule__OpFunctionArg__Group_1_1__1 : rule__OpFunctionArg__Group_1_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19010:1: ( rule__OpFunctionArg__Group_1_1__1__Impl )
            // InternalSQLParser.g:19011:2: rule__OpFunctionArg__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1__Impl"
    // InternalSQLParser.g:19017:1: rule__OpFunctionArg__Group_1_1__1__Impl : ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OpFunctionArg__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19021:1: ( ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:19022:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:19022:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:19023:2: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:19024:2: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:19024:3: rule__OpFunctionArg__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__0"
    // InternalSQLParser.g:19033:1: rule__OpFunctionCast__Group__0 : rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 ;
    public final void rule__OpFunctionCast__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19037:1: ( rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 )
            // InternalSQLParser.g:19038:2: rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__OpFunctionCast__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0"


    // $ANTLR start "rule__OpFunctionCast__Group__0__Impl"
    // InternalSQLParser.g:19045:1: rule__OpFunctionCast__Group__0__Impl : ( CAST ) ;
    public final void rule__OpFunctionCast__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19049:1: ( ( CAST ) )
            // InternalSQLParser.g:19050:1: ( CAST )
            {
            // InternalSQLParser.g:19050:1: ( CAST )
            // InternalSQLParser.g:19051:2: CAST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }
            match(input,CAST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__1"
    // InternalSQLParser.g:19060:1: rule__OpFunctionCast__Group__1 : rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 ;
    public final void rule__OpFunctionCast__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19064:1: ( rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 )
            // InternalSQLParser.g:19065:2: rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2
            {
            pushFollow(FOLLOW_68);
            rule__OpFunctionCast__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1"


    // $ANTLR start "rule__OpFunctionCast__Group__1__Impl"
    // InternalSQLParser.g:19072:1: rule__OpFunctionCast__Group__1__Impl : ( ( rule__OpFunctionCast__OpAssignment_1 ) ) ;
    public final void rule__OpFunctionCast__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19076:1: ( ( ( rule__OpFunctionCast__OpAssignment_1 ) ) )
            // InternalSQLParser.g:19077:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:19077:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            // InternalSQLParser.g:19078:2: ( rule__OpFunctionCast__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:19079:2: ( rule__OpFunctionCast__OpAssignment_1 )
            // InternalSQLParser.g:19079:3: rule__OpFunctionCast__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__2"
    // InternalSQLParser.g:19087:1: rule__OpFunctionCast__Group__2 : rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 ;
    public final void rule__OpFunctionCast__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19091:1: ( rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 )
            // InternalSQLParser.g:19092:2: rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__OpFunctionCast__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2"


    // $ANTLR start "rule__OpFunctionCast__Group__2__Impl"
    // InternalSQLParser.g:19099:1: rule__OpFunctionCast__Group__2__Impl : ( AS ) ;
    public final void rule__OpFunctionCast__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19103:1: ( ( AS ) )
            // InternalSQLParser.g:19104:1: ( AS )
            {
            // InternalSQLParser.g:19104:1: ( AS )
            // InternalSQLParser.g:19105:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__3"
    // InternalSQLParser.g:19114:1: rule__OpFunctionCast__Group__3 : rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 ;
    public final void rule__OpFunctionCast__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19118:1: ( rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 )
            // InternalSQLParser.g:19119:2: rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4
            {
            pushFollow(FOLLOW_106);
            rule__OpFunctionCast__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3"


    // $ANTLR start "rule__OpFunctionCast__Group__3__Impl"
    // InternalSQLParser.g:19126:1: rule__OpFunctionCast__Group__3__Impl : ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) ;
    public final void rule__OpFunctionCast__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19130:1: ( ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) )
            // InternalSQLParser.g:19131:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            {
            // InternalSQLParser.g:19131:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            // InternalSQLParser.g:19132:2: ( rule__OpFunctionCast__TypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }
            // InternalSQLParser.g:19133:2: ( rule__OpFunctionCast__TypeAssignment_3 )
            // InternalSQLParser.g:19133:3: rule__OpFunctionCast__TypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__TypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__4"
    // InternalSQLParser.g:19141:1: rule__OpFunctionCast__Group__4 : rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 ;
    public final void rule__OpFunctionCast__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19145:1: ( rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 )
            // InternalSQLParser.g:19146:2: rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5
            {
            pushFollow(FOLLOW_106);
            rule__OpFunctionCast__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4"


    // $ANTLR start "rule__OpFunctionCast__Group__4__Impl"
    // InternalSQLParser.g:19153:1: rule__OpFunctionCast__Group__4__Impl : ( ( rule__OpFunctionCast__Group_4__0 )? ) ;
    public final void rule__OpFunctionCast__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19157:1: ( ( ( rule__OpFunctionCast__Group_4__0 )? ) )
            // InternalSQLParser.g:19158:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            {
            // InternalSQLParser.g:19158:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            // InternalSQLParser.g:19159:2: ( rule__OpFunctionCast__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }
            // InternalSQLParser.g:19160:2: ( rule__OpFunctionCast__Group_4__0 )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==LeftParenthesis) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // InternalSQLParser.g:19160:3: rule__OpFunctionCast__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__5"
    // InternalSQLParser.g:19168:1: rule__OpFunctionCast__Group__5 : rule__OpFunctionCast__Group__5__Impl ;
    public final void rule__OpFunctionCast__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19172:1: ( rule__OpFunctionCast__Group__5__Impl )
            // InternalSQLParser.g:19173:2: rule__OpFunctionCast__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5"


    // $ANTLR start "rule__OpFunctionCast__Group__5__Impl"
    // InternalSQLParser.g:19179:1: rule__OpFunctionCast__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19183:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:19184:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:19184:1: ( RightParenthesis )
            // InternalSQLParser.g:19185:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0"
    // InternalSQLParser.g:19195:1: rule__OpFunctionCast__Group_4__0 : rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 ;
    public final void rule__OpFunctionCast__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19199:1: ( rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 )
            // InternalSQLParser.g:19200:2: rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1
            {
            pushFollow(FOLLOW_28);
            rule__OpFunctionCast__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0__Impl"
    // InternalSQLParser.g:19207:1: rule__OpFunctionCast__Group_4__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19211:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:19212:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:19212:1: ( LeftParenthesis )
            // InternalSQLParser.g:19213:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1"
    // InternalSQLParser.g:19222:1: rule__OpFunctionCast__Group_4__1 : rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 ;
    public final void rule__OpFunctionCast__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19226:1: ( rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 )
            // InternalSQLParser.g:19227:2: rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2
            {
            pushFollow(FOLLOW_107);
            rule__OpFunctionCast__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1__Impl"
    // InternalSQLParser.g:19234:1: rule__OpFunctionCast__Group_4__1__Impl : ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19238:1: ( ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) )
            // InternalSQLParser.g:19239:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            {
            // InternalSQLParser.g:19239:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            // InternalSQLParser.g:19240:2: ( rule__OpFunctionCast__PAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }
            // InternalSQLParser.g:19241:2: ( rule__OpFunctionCast__PAssignment_4_1 )
            // InternalSQLParser.g:19241:3: rule__OpFunctionCast__PAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__PAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2"
    // InternalSQLParser.g:19249:1: rule__OpFunctionCast__Group_4__2 : rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 ;
    public final void rule__OpFunctionCast__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19253:1: ( rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 )
            // InternalSQLParser.g:19254:2: rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3
            {
            pushFollow(FOLLOW_107);
            rule__OpFunctionCast__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2__Impl"
    // InternalSQLParser.g:19261:1: rule__OpFunctionCast__Group_4__2__Impl : ( ( rule__OpFunctionCast__Group_4_2__0 )? ) ;
    public final void rule__OpFunctionCast__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19265:1: ( ( ( rule__OpFunctionCast__Group_4_2__0 )? ) )
            // InternalSQLParser.g:19266:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            {
            // InternalSQLParser.g:19266:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            // InternalSQLParser.g:19267:2: ( rule__OpFunctionCast__Group_4_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }
            // InternalSQLParser.g:19268:2: ( rule__OpFunctionCast__Group_4_2__0 )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==Comma) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalSQLParser.g:19268:3: rule__OpFunctionCast__Group_4_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3"
    // InternalSQLParser.g:19276:1: rule__OpFunctionCast__Group_4__3 : rule__OpFunctionCast__Group_4__3__Impl ;
    public final void rule__OpFunctionCast__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19280:1: ( rule__OpFunctionCast__Group_4__3__Impl )
            // InternalSQLParser.g:19281:2: rule__OpFunctionCast__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3__Impl"
    // InternalSQLParser.g:19287:1: rule__OpFunctionCast__Group_4__3__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19291:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:19292:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:19292:1: ( RightParenthesis )
            // InternalSQLParser.g:19293:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0"
    // InternalSQLParser.g:19303:1: rule__OpFunctionCast__Group_4_2__0 : rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 ;
    public final void rule__OpFunctionCast__Group_4_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19307:1: ( rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 )
            // InternalSQLParser.g:19308:2: rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1
            {
            pushFollow(FOLLOW_28);
            rule__OpFunctionCast__Group_4_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0__Impl"
    // InternalSQLParser.g:19315:1: rule__OpFunctionCast__Group_4_2__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionCast__Group_4_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19319:1: ( ( Comma ) )
            // InternalSQLParser.g:19320:1: ( Comma )
            {
            // InternalSQLParser.g:19320:1: ( Comma )
            // InternalSQLParser.g:19321:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1"
    // InternalSQLParser.g:19330:1: rule__OpFunctionCast__Group_4_2__1 : rule__OpFunctionCast__Group_4_2__1__Impl ;
    public final void rule__OpFunctionCast__Group_4_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19334:1: ( rule__OpFunctionCast__Group_4_2__1__Impl )
            // InternalSQLParser.g:19335:2: rule__OpFunctionCast__Group_4_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1__Impl"
    // InternalSQLParser.g:19341:1: rule__OpFunctionCast__Group_4_2__1__Impl : ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19345:1: ( ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) )
            // InternalSQLParser.g:19346:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            {
            // InternalSQLParser.g:19346:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            // InternalSQLParser.g:19347:2: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }
            // InternalSQLParser.g:19348:2: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            // InternalSQLParser.g:19348:3: rule__OpFunctionCast__P2Assignment_4_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__P2Assignment_4_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0"
    // InternalSQLParser.g:19357:1: rule__OpFunctionArgAgregate__Group__0 : rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 ;
    public final void rule__OpFunctionArgAgregate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19361:1: ( rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 )
            // InternalSQLParser.g:19362:2: rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__OpFunctionArgAgregate__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0__Impl"
    // InternalSQLParser.g:19369:1: rule__OpFunctionArgAgregate__Group__0__Impl : ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) ;
    public final void rule__OpFunctionArgAgregate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19373:1: ( ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) )
            // InternalSQLParser.g:19374:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            {
            // InternalSQLParser.g:19374:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            // InternalSQLParser.g:19375:2: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:19376:2: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            // InternalSQLParser.g:19376:3: rule__OpFunctionArgAgregate__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1"
    // InternalSQLParser.g:19384:1: rule__OpFunctionArgAgregate__Group__1 : rule__OpFunctionArgAgregate__Group__1__Impl ;
    public final void rule__OpFunctionArgAgregate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19388:1: ( rule__OpFunctionArgAgregate__Group__1__Impl )
            // InternalSQLParser.g:19389:2: rule__OpFunctionArgAgregate__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1__Impl"
    // InternalSQLParser.g:19395:1: rule__OpFunctionArgAgregate__Group__1__Impl : ( ruleOperand ) ;
    public final void rule__OpFunctionArgAgregate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19399:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:19400:1: ( ruleOperand )
            {
            // InternalSQLParser.g:19400:1: ( ruleOperand )
            // InternalSQLParser.g:19401:2: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__0"
    // InternalSQLParser.g:19411:1: rule__ColumnOperand__Group__0 : rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 ;
    public final void rule__ColumnOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19415:1: ( rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 )
            // InternalSQLParser.g:19416:2: rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1
            {
            pushFollow(FOLLOW_108);
            rule__ColumnOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0"


    // $ANTLR start "rule__ColumnOperand__Group__0__Impl"
    // InternalSQLParser.g:19423:1: rule__ColumnOperand__Group__0__Impl : ( ( rule__ColumnOperand__CfullAssignment_0 ) ) ;
    public final void rule__ColumnOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19427:1: ( ( ( rule__ColumnOperand__CfullAssignment_0 ) ) )
            // InternalSQLParser.g:19428:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            {
            // InternalSQLParser.g:19428:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            // InternalSQLParser.g:19429:2: ( rule__ColumnOperand__CfullAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }
            // InternalSQLParser.g:19430:2: ( rule__ColumnOperand__CfullAssignment_0 )
            // InternalSQLParser.g:19430:3: rule__ColumnOperand__CfullAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__CfullAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__1"
    // InternalSQLParser.g:19438:1: rule__ColumnOperand__Group__1 : rule__ColumnOperand__Group__1__Impl ;
    public final void rule__ColumnOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19442:1: ( rule__ColumnOperand__Group__1__Impl )
            // InternalSQLParser.g:19443:2: rule__ColumnOperand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1"


    // $ANTLR start "rule__ColumnOperand__Group__1__Impl"
    // InternalSQLParser.g:19449:1: rule__ColumnOperand__Group__1__Impl : ( ( rule__ColumnOperand__OraAssignment_1 )? ) ;
    public final void rule__ColumnOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19453:1: ( ( ( rule__ColumnOperand__OraAssignment_1 )? ) )
            // InternalSQLParser.g:19454:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            {
            // InternalSQLParser.g:19454:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            // InternalSQLParser.g:19455:2: ( rule__ColumnOperand__OraAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }
            // InternalSQLParser.g:19456:2: ( rule__ColumnOperand__OraAssignment_1 )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==LeftParenthesisPlusSignRightParenthesis) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // InternalSQLParser.g:19456:3: rule__ColumnOperand__OraAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOperand__OraAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__0"
    // InternalSQLParser.g:19465:1: rule__SubQueryOperand__Group__0 : rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 ;
    public final void rule__SubQueryOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19469:1: ( rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 )
            // InternalSQLParser.g:19470:2: rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__SubQueryOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0"


    // $ANTLR start "rule__SubQueryOperand__Group__0__Impl"
    // InternalSQLParser.g:19477:1: rule__SubQueryOperand__Group__0__Impl : ( () ) ;
    public final void rule__SubQueryOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19481:1: ( ( () ) )
            // InternalSQLParser.g:19482:1: ( () )
            {
            // InternalSQLParser.g:19482:1: ( () )
            // InternalSQLParser.g:19483:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }
            // InternalSQLParser.g:19484:2: ()
            // InternalSQLParser.g:19484:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__1"
    // InternalSQLParser.g:19492:1: rule__SubQueryOperand__Group__1 : rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 ;
    public final void rule__SubQueryOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19496:1: ( rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 )
            // InternalSQLParser.g:19497:2: rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__SubQueryOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1"


    // $ANTLR start "rule__SubQueryOperand__Group__1__Impl"
    // InternalSQLParser.g:19504:1: rule__SubQueryOperand__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__SubQueryOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19508:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:19509:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:19509:1: ( LeftParenthesis )
            // InternalSQLParser.g:19510:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__2"
    // InternalSQLParser.g:19519:1: rule__SubQueryOperand__Group__2 : rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 ;
    public final void rule__SubQueryOperand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19523:1: ( rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 )
            // InternalSQLParser.g:19524:2: rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__SubQueryOperand__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2"


    // $ANTLR start "rule__SubQueryOperand__Group__2__Impl"
    // InternalSQLParser.g:19531:1: rule__SubQueryOperand__Group__2__Impl : ( ( rule__SubQueryOperand__SelAssignment_2 ) ) ;
    public final void rule__SubQueryOperand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19535:1: ( ( ( rule__SubQueryOperand__SelAssignment_2 ) ) )
            // InternalSQLParser.g:19536:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            {
            // InternalSQLParser.g:19536:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            // InternalSQLParser.g:19537:2: ( rule__SubQueryOperand__SelAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }
            // InternalSQLParser.g:19538:2: ( rule__SubQueryOperand__SelAssignment_2 )
            // InternalSQLParser.g:19538:3: rule__SubQueryOperand__SelAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__SelAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__3"
    // InternalSQLParser.g:19546:1: rule__SubQueryOperand__Group__3 : rule__SubQueryOperand__Group__3__Impl ;
    public final void rule__SubQueryOperand__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19550:1: ( rule__SubQueryOperand__Group__3__Impl )
            // InternalSQLParser.g:19551:2: rule__SubQueryOperand__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3"


    // $ANTLR start "rule__SubQueryOperand__Group__3__Impl"
    // InternalSQLParser.g:19557:1: rule__SubQueryOperand__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__SubQueryOperand__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19561:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:19562:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:19562:1: ( RightParenthesis )
            // InternalSQLParser.g:19563:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3__Impl"


    // $ANTLR start "rule__SQLCASE__Group__0"
    // InternalSQLParser.g:19573:1: rule__SQLCASE__Group__0 : rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 ;
    public final void rule__SQLCASE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19577:1: ( rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 )
            // InternalSQLParser.g:19578:2: rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1
            {
            pushFollow(FOLLOW_109);
            rule__SQLCASE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0"


    // $ANTLR start "rule__SQLCASE__Group__0__Impl"
    // InternalSQLParser.g:19585:1: rule__SQLCASE__Group__0__Impl : ( CASE ) ;
    public final void rule__SQLCASE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19589:1: ( ( CASE ) )
            // InternalSQLParser.g:19590:1: ( CASE )
            {
            // InternalSQLParser.g:19590:1: ( CASE )
            // InternalSQLParser.g:19591:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0__Impl"


    // $ANTLR start "rule__SQLCASE__Group__1"
    // InternalSQLParser.g:19600:1: rule__SQLCASE__Group__1 : rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 ;
    public final void rule__SQLCASE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19604:1: ( rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 )
            // InternalSQLParser.g:19605:2: rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2
            {
            pushFollow(FOLLOW_109);
            rule__SQLCASE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1"


    // $ANTLR start "rule__SQLCASE__Group__1__Impl"
    // InternalSQLParser.g:19612:1: rule__SQLCASE__Group__1__Impl : ( ( rule__SQLCASE__Alternatives_1 )? ) ;
    public final void rule__SQLCASE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19616:1: ( ( ( rule__SQLCASE__Alternatives_1 )? ) )
            // InternalSQLParser.g:19617:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            {
            // InternalSQLParser.g:19617:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            // InternalSQLParser.g:19618:2: ( rule__SQLCASE__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:19619:2: ( rule__SQLCASE__Alternatives_1 )?
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==EXTRACT||LA173_0==EXISTS||LA173_0==CAST||LA173_0==FALSE||LA173_0==CASE||LA173_0==NOT_1||LA173_0==TRUE||LA173_0==NOT||LA173_0==X||LA173_0==IN||LA173_0==LeftParenthesis||(LA173_0>=RULE_JRPARAM && LA173_0<=RULE_JRNPARAM)||(LA173_0>=RULE_UNSIGNED && LA173_0<=RULE_SIGNED_DOUBLE)||(LA173_0>=RULE_STRING_ && LA173_0<=RULE_ID)) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    // InternalSQLParser.g:19619:3: rule__SQLCASE__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1__Impl"


    // $ANTLR start "rule__SQLCASE__Group__2"
    // InternalSQLParser.g:19627:1: rule__SQLCASE__Group__2 : rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 ;
    public final void rule__SQLCASE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19631:1: ( rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 )
            // InternalSQLParser.g:19632:2: rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3
            {
            pushFollow(FOLLOW_110);
            rule__SQLCASE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2"


    // $ANTLR start "rule__SQLCASE__Group__2__Impl"
    // InternalSQLParser.g:19639:1: rule__SQLCASE__Group__2__Impl : ( ( rule__SQLCASE__WhenAssignment_2 ) ) ;
    public final void rule__SQLCASE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19643:1: ( ( ( rule__SQLCASE__WhenAssignment_2 ) ) )
            // InternalSQLParser.g:19644:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            {
            // InternalSQLParser.g:19644:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            // InternalSQLParser.g:19645:2: ( rule__SQLCASE__WhenAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }
            // InternalSQLParser.g:19646:2: ( rule__SQLCASE__WhenAssignment_2 )
            // InternalSQLParser.g:19646:3: rule__SQLCASE__WhenAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__WhenAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2__Impl"


    // $ANTLR start "rule__SQLCASE__Group__3"
    // InternalSQLParser.g:19654:1: rule__SQLCASE__Group__3 : rule__SQLCASE__Group__3__Impl ;
    public final void rule__SQLCASE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19658:1: ( rule__SQLCASE__Group__3__Impl )
            // InternalSQLParser.g:19659:2: rule__SQLCASE__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3"


    // $ANTLR start "rule__SQLCASE__Group__3__Impl"
    // InternalSQLParser.g:19665:1: rule__SQLCASE__Group__3__Impl : ( END ) ;
    public final void rule__SQLCASE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19669:1: ( ( END ) )
            // InternalSQLParser.g:19670:1: ( END )
            {
            // InternalSQLParser.g:19670:1: ( END )
            // InternalSQLParser.g:19671:2: END
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }
            match(input,END,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__0"
    // InternalSQLParser.g:19681:1: rule__SQLCaseWhens__Group__0 : rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 ;
    public final void rule__SQLCaseWhens__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19685:1: ( rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 )
            // InternalSQLParser.g:19686:2: rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1
            {
            pushFollow(FOLLOW_109);
            rule__SQLCaseWhens__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0"


    // $ANTLR start "rule__SQLCaseWhens__Group__0__Impl"
    // InternalSQLParser.g:19693:1: rule__SQLCaseWhens__Group__0__Impl : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19697:1: ( ( ruleSqlCaseWhen ) )
            // InternalSQLParser.g:19698:1: ( ruleSqlCaseWhen )
            {
            // InternalSQLParser.g:19698:1: ( ruleSqlCaseWhen )
            // InternalSQLParser.g:19699:2: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__1"
    // InternalSQLParser.g:19708:1: rule__SQLCaseWhens__Group__1 : rule__SQLCaseWhens__Group__1__Impl ;
    public final void rule__SQLCaseWhens__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19712:1: ( rule__SQLCaseWhens__Group__1__Impl )
            // InternalSQLParser.g:19713:2: rule__SQLCaseWhens__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1"


    // $ANTLR start "rule__SQLCaseWhens__Group__1__Impl"
    // InternalSQLParser.g:19719:1: rule__SQLCaseWhens__Group__1__Impl : ( ( rule__SQLCaseWhens__Group_1__0 )? ) ;
    public final void rule__SQLCaseWhens__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19723:1: ( ( ( rule__SQLCaseWhens__Group_1__0 )? ) )
            // InternalSQLParser.g:19724:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            {
            // InternalSQLParser.g:19724:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            // InternalSQLParser.g:19725:2: ( rule__SQLCaseWhens__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:19726:2: ( rule__SQLCaseWhens__Group_1__0 )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==WHEN) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalSQLParser.g:19726:3: rule__SQLCaseWhens__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCaseWhens__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0"
    // InternalSQLParser.g:19735:1: rule__SQLCaseWhens__Group_1__0 : rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 ;
    public final void rule__SQLCaseWhens__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19739:1: ( rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 )
            // InternalSQLParser.g:19740:2: rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1
            {
            pushFollow(FOLLOW_109);
            rule__SQLCaseWhens__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0__Impl"
    // InternalSQLParser.g:19747:1: rule__SQLCaseWhens__Group_1__0__Impl : ( () ) ;
    public final void rule__SQLCaseWhens__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19751:1: ( ( () ) )
            // InternalSQLParser.g:19752:1: ( () )
            {
            // InternalSQLParser.g:19752:1: ( () )
            // InternalSQLParser.g:19753:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:19754:2: ()
            // InternalSQLParser.g:19754:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1"
    // InternalSQLParser.g:19762:1: rule__SQLCaseWhens__Group_1__1 : rule__SQLCaseWhens__Group_1__1__Impl ;
    public final void rule__SQLCaseWhens__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19766:1: ( rule__SQLCaseWhens__Group_1__1__Impl )
            // InternalSQLParser.g:19767:2: rule__SQLCaseWhens__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1__Impl"
    // InternalSQLParser.g:19773:1: rule__SQLCaseWhens__Group_1__1__Impl : ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__SQLCaseWhens__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19777:1: ( ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) )
            // InternalSQLParser.g:19778:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            {
            // InternalSQLParser.g:19778:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            // InternalSQLParser.g:19779:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            {
            // InternalSQLParser.g:19779:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) )
            // InternalSQLParser.g:19780:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:19781:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            // InternalSQLParser.g:19781:4: rule__SQLCaseWhens__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_111);
            rule__SQLCaseWhens__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSQLParser.g:19784:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            // InternalSQLParser.g:19785:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:19786:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==WHEN) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalSQLParser.g:19786:4: rule__SQLCaseWhens__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_111);
            	    rule__SQLCaseWhens__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__0"
    // InternalSQLParser.g:19796:1: rule__SqlCaseWhen__Group__0 : rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 ;
    public final void rule__SqlCaseWhen__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19800:1: ( rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 )
            // InternalSQLParser.g:19801:2: rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__SqlCaseWhen__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0"


    // $ANTLR start "rule__SqlCaseWhen__Group__0__Impl"
    // InternalSQLParser.g:19808:1: rule__SqlCaseWhen__Group__0__Impl : ( WHEN ) ;
    public final void rule__SqlCaseWhen__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19812:1: ( ( WHEN ) )
            // InternalSQLParser.g:19813:1: ( WHEN )
            {
            // InternalSQLParser.g:19813:1: ( WHEN )
            // InternalSQLParser.g:19814:2: WHEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }
            match(input,WHEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__1"
    // InternalSQLParser.g:19823:1: rule__SqlCaseWhen__Group__1 : rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 ;
    public final void rule__SqlCaseWhen__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19827:1: ( rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 )
            // InternalSQLParser.g:19828:2: rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2
            {
            pushFollow(FOLLOW_112);
            rule__SqlCaseWhen__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1"


    // $ANTLR start "rule__SqlCaseWhen__Group__1__Impl"
    // InternalSQLParser.g:19835:1: rule__SqlCaseWhen__Group__1__Impl : ( ( rule__SqlCaseWhen__Alternatives_1 ) ) ;
    public final void rule__SqlCaseWhen__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19839:1: ( ( ( rule__SqlCaseWhen__Alternatives_1 ) ) )
            // InternalSQLParser.g:19840:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            {
            // InternalSQLParser.g:19840:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            // InternalSQLParser.g:19841:2: ( rule__SqlCaseWhen__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:19842:2: ( rule__SqlCaseWhen__Alternatives_1 )
            // InternalSQLParser.g:19842:3: rule__SqlCaseWhen__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__2"
    // InternalSQLParser.g:19850:1: rule__SqlCaseWhen__Group__2 : rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 ;
    public final void rule__SqlCaseWhen__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19854:1: ( rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 )
            // InternalSQLParser.g:19855:2: rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3
            {
            pushFollow(FOLLOW_75);
            rule__SqlCaseWhen__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2"


    // $ANTLR start "rule__SqlCaseWhen__Group__2__Impl"
    // InternalSQLParser.g:19862:1: rule__SqlCaseWhen__Group__2__Impl : ( THEN ) ;
    public final void rule__SqlCaseWhen__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19866:1: ( ( THEN ) )
            // InternalSQLParser.g:19867:1: ( THEN )
            {
            // InternalSQLParser.g:19867:1: ( THEN )
            // InternalSQLParser.g:19868:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__3"
    // InternalSQLParser.g:19877:1: rule__SqlCaseWhen__Group__3 : rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 ;
    public final void rule__SqlCaseWhen__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19881:1: ( rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 )
            // InternalSQLParser.g:19882:2: rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4
            {
            pushFollow(FOLLOW_113);
            rule__SqlCaseWhen__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3"


    // $ANTLR start "rule__SqlCaseWhen__Group__3__Impl"
    // InternalSQLParser.g:19889:1: rule__SqlCaseWhen__Group__3__Impl : ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) ;
    public final void rule__SqlCaseWhen__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19893:1: ( ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) )
            // InternalSQLParser.g:19894:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            {
            // InternalSQLParser.g:19894:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            // InternalSQLParser.g:19895:2: ( rule__SqlCaseWhen__TexpAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }
            // InternalSQLParser.g:19896:2: ( rule__SqlCaseWhen__TexpAssignment_3 )
            // InternalSQLParser.g:19896:3: rule__SqlCaseWhen__TexpAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__TexpAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__4"
    // InternalSQLParser.g:19904:1: rule__SqlCaseWhen__Group__4 : rule__SqlCaseWhen__Group__4__Impl ;
    public final void rule__SqlCaseWhen__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19908:1: ( rule__SqlCaseWhen__Group__4__Impl )
            // InternalSQLParser.g:19909:2: rule__SqlCaseWhen__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4"


    // $ANTLR start "rule__SqlCaseWhen__Group__4__Impl"
    // InternalSQLParser.g:19915:1: rule__SqlCaseWhen__Group__4__Impl : ( ( rule__SqlCaseWhen__Group_4__0 )? ) ;
    public final void rule__SqlCaseWhen__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19919:1: ( ( ( rule__SqlCaseWhen__Group_4__0 )? ) )
            // InternalSQLParser.g:19920:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            {
            // InternalSQLParser.g:19920:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            // InternalSQLParser.g:19921:2: ( rule__SqlCaseWhen__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }
            // InternalSQLParser.g:19922:2: ( rule__SqlCaseWhen__Group_4__0 )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==ELSE) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalSQLParser.g:19922:3: rule__SqlCaseWhen__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0"
    // InternalSQLParser.g:19931:1: rule__SqlCaseWhen__Group_4__0 : rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 ;
    public final void rule__SqlCaseWhen__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19935:1: ( rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 )
            // InternalSQLParser.g:19936:2: rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1
            {
            pushFollow(FOLLOW_75);
            rule__SqlCaseWhen__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0__Impl"
    // InternalSQLParser.g:19943:1: rule__SqlCaseWhen__Group_4__0__Impl : ( ELSE ) ;
    public final void rule__SqlCaseWhen__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19947:1: ( ( ELSE ) )
            // InternalSQLParser.g:19948:1: ( ELSE )
            {
            // InternalSQLParser.g:19948:1: ( ELSE )
            // InternalSQLParser.g:19949:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1"
    // InternalSQLParser.g:19958:1: rule__SqlCaseWhen__Group_4__1 : rule__SqlCaseWhen__Group_4__1__Impl ;
    public final void rule__SqlCaseWhen__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19962:1: ( rule__SqlCaseWhen__Group_4__1__Impl )
            // InternalSQLParser.g:19963:2: rule__SqlCaseWhen__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1__Impl"
    // InternalSQLParser.g:19969:1: rule__SqlCaseWhen__Group_4__1__Impl : ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) ;
    public final void rule__SqlCaseWhen__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19973:1: ( ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) )
            // InternalSQLParser.g:19974:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            {
            // InternalSQLParser.g:19974:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            // InternalSQLParser.g:19975:2: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }
            // InternalSQLParser.g:19976:2: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            // InternalSQLParser.g:19976:3: rule__SqlCaseWhen__EexpAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__EexpAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1__Impl"


    // $ANTLR start "rule__JoinType__Group__0"
    // InternalSQLParser.g:19985:1: rule__JoinType__Group__0 : rule__JoinType__Group__0__Impl rule__JoinType__Group__1 ;
    public final void rule__JoinType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19989:1: ( rule__JoinType__Group__0__Impl rule__JoinType__Group__1 )
            // InternalSQLParser.g:19990:2: rule__JoinType__Group__0__Impl rule__JoinType__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__JoinType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0"


    // $ANTLR start "rule__JoinType__Group__0__Impl"
    // InternalSQLParser.g:19997:1: rule__JoinType__Group__0__Impl : ( ( NATURAL )? ) ;
    public final void rule__JoinType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20001:1: ( ( ( NATURAL )? ) )
            // InternalSQLParser.g:20002:1: ( ( NATURAL )? )
            {
            // InternalSQLParser.g:20002:1: ( ( NATURAL )? )
            // InternalSQLParser.g:20003:2: ( NATURAL )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }
            // InternalSQLParser.g:20004:2: ( NATURAL )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==NATURAL) ) {
                alt177=1;
            }
            switch (alt177) {
                case 1 :
                    // InternalSQLParser.g:20004:3: NATURAL
                    {
                    match(input,NATURAL,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0__Impl"


    // $ANTLR start "rule__JoinType__Group__1"
    // InternalSQLParser.g:20012:1: rule__JoinType__Group__1 : rule__JoinType__Group__1__Impl rule__JoinType__Group__2 ;
    public final void rule__JoinType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20016:1: ( rule__JoinType__Group__1__Impl rule__JoinType__Group__2 )
            // InternalSQLParser.g:20017:2: rule__JoinType__Group__1__Impl rule__JoinType__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__JoinType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1"


    // $ANTLR start "rule__JoinType__Group__1__Impl"
    // InternalSQLParser.g:20024:1: rule__JoinType__Group__1__Impl : ( ( rule__JoinType__Alternatives_1 )? ) ;
    public final void rule__JoinType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20028:1: ( ( ( rule__JoinType__Alternatives_1 )? ) )
            // InternalSQLParser.g:20029:1: ( ( rule__JoinType__Alternatives_1 )? )
            {
            // InternalSQLParser.g:20029:1: ( ( rule__JoinType__Alternatives_1 )? )
            // InternalSQLParser.g:20030:2: ( rule__JoinType__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:20031:2: ( rule__JoinType__Alternatives_1 )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==STRAIGHT_JOIN||LA178_0==CROSS||LA178_0==INNER||LA178_0==RIGHT||LA178_0==FULL||LA178_0==LEFT) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // InternalSQLParser.g:20031:3: rule__JoinType__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1__Impl"


    // $ANTLR start "rule__JoinType__Group__2"
    // InternalSQLParser.g:20039:1: rule__JoinType__Group__2 : rule__JoinType__Group__2__Impl ;
    public final void rule__JoinType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20043:1: ( rule__JoinType__Group__2__Impl )
            // InternalSQLParser.g:20044:2: rule__JoinType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2"


    // $ANTLR start "rule__JoinType__Group__2__Impl"
    // InternalSQLParser.g:20050:1: rule__JoinType__Group__2__Impl : ( JOIN ) ;
    public final void rule__JoinType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20054:1: ( ( JOIN ) )
            // InternalSQLParser.g:20055:1: ( JOIN )
            {
            // InternalSQLParser.g:20055:1: ( JOIN )
            // InternalSQLParser.g:20056:2: JOIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }
            match(input,JOIN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__0"
    // InternalSQLParser.g:20066:1: rule__JoinType__Group_1_1__0 : rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 ;
    public final void rule__JoinType__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20070:1: ( rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 )
            // InternalSQLParser.g:20071:2: rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1
            {
            pushFollow(FOLLOW_114);
            rule__JoinType__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0"


    // $ANTLR start "rule__JoinType__Group_1_1__0__Impl"
    // InternalSQLParser.g:20078:1: rule__JoinType__Group_1_1__0__Impl : ( ( rule__JoinType__Alternatives_1_1_0 ) ) ;
    public final void rule__JoinType__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20082:1: ( ( ( rule__JoinType__Alternatives_1_1_0 ) ) )
            // InternalSQLParser.g:20083:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            {
            // InternalSQLParser.g:20083:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            // InternalSQLParser.g:20084:2: ( rule__JoinType__Alternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }
            // InternalSQLParser.g:20085:2: ( rule__JoinType__Alternatives_1_1_0 )
            // InternalSQLParser.g:20085:3: rule__JoinType__Alternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Alternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__1"
    // InternalSQLParser.g:20093:1: rule__JoinType__Group_1_1__1 : rule__JoinType__Group_1_1__1__Impl ;
    public final void rule__JoinType__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20097:1: ( rule__JoinType__Group_1_1__1__Impl )
            // InternalSQLParser.g:20098:2: rule__JoinType__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1"


    // $ANTLR start "rule__JoinType__Group_1_1__1__Impl"
    // InternalSQLParser.g:20104:1: rule__JoinType__Group_1_1__1__Impl : ( ( OUTER )? ) ;
    public final void rule__JoinType__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20108:1: ( ( ( OUTER )? ) )
            // InternalSQLParser.g:20109:1: ( ( OUTER )? )
            {
            // InternalSQLParser.g:20109:1: ( ( OUTER )? )
            // InternalSQLParser.g:20110:2: ( OUTER )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }
            // InternalSQLParser.g:20111:2: ( OUTER )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==OUTER) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // InternalSQLParser.g:20111:3: OUTER
                    {
                    match(input,OUTER,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1__Impl"


    // $ANTLR start "rule__SignedLiteral__Group_1__0"
    // InternalSQLParser.g:20120:1: rule__SignedLiteral__Group_1__0 : rule__SignedLiteral__Group_1__0__Impl rule__SignedLiteral__Group_1__1 ;
    public final void rule__SignedLiteral__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20124:1: ( rule__SignedLiteral__Group_1__0__Impl rule__SignedLiteral__Group_1__1 )
            // InternalSQLParser.g:20125:2: rule__SignedLiteral__Group_1__0__Impl rule__SignedLiteral__Group_1__1
            {
            pushFollow(FOLLOW_115);
            rule__SignedLiteral__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_1__0"


    // $ANTLR start "rule__SignedLiteral__Group_1__0__Impl"
    // InternalSQLParser.g:20132:1: rule__SignedLiteral__Group_1__0__Impl : ( PlusSign ) ;
    public final void rule__SignedLiteral__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20136:1: ( ( PlusSign ) )
            // InternalSQLParser.g:20137:1: ( PlusSign )
            {
            // InternalSQLParser.g:20137:1: ( PlusSign )
            // InternalSQLParser.g:20138:2: PlusSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getPlusSignKeyword_1_0()); 
            }
            match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getPlusSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_1__0__Impl"


    // $ANTLR start "rule__SignedLiteral__Group_1__1"
    // InternalSQLParser.g:20147:1: rule__SignedLiteral__Group_1__1 : rule__SignedLiteral__Group_1__1__Impl ;
    public final void rule__SignedLiteral__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20151:1: ( rule__SignedLiteral__Group_1__1__Impl )
            // InternalSQLParser.g:20152:2: rule__SignedLiteral__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_1__1"


    // $ANTLR start "rule__SignedLiteral__Group_1__1__Impl"
    // InternalSQLParser.g:20158:1: rule__SignedLiteral__Group_1__1__Impl : ( ruleNumLiteral ) ;
    public final void rule__SignedLiteral__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20162:1: ( ( ruleNumLiteral ) )
            // InternalSQLParser.g:20163:1: ( ruleNumLiteral )
            {
            // InternalSQLParser.g:20163:1: ( ruleNumLiteral )
            // InternalSQLParser.g:20164:2: ruleNumLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getNumLiteralParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getNumLiteralParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_1__1__Impl"


    // $ANTLR start "rule__SignedLiteral__Group_2__0"
    // InternalSQLParser.g:20174:1: rule__SignedLiteral__Group_2__0 : rule__SignedLiteral__Group_2__0__Impl rule__SignedLiteral__Group_2__1 ;
    public final void rule__SignedLiteral__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20178:1: ( rule__SignedLiteral__Group_2__0__Impl rule__SignedLiteral__Group_2__1 )
            // InternalSQLParser.g:20179:2: rule__SignedLiteral__Group_2__0__Impl rule__SignedLiteral__Group_2__1
            {
            pushFollow(FOLLOW_115);
            rule__SignedLiteral__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_2__0"


    // $ANTLR start "rule__SignedLiteral__Group_2__0__Impl"
    // InternalSQLParser.g:20186:1: rule__SignedLiteral__Group_2__0__Impl : ( HyphenMinus ) ;
    public final void rule__SignedLiteral__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20190:1: ( ( HyphenMinus ) )
            // InternalSQLParser.g:20191:1: ( HyphenMinus )
            {
            // InternalSQLParser.g:20191:1: ( HyphenMinus )
            // InternalSQLParser.g:20192:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getHyphenMinusKeyword_2_0()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getHyphenMinusKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_2__0__Impl"


    // $ANTLR start "rule__SignedLiteral__Group_2__1"
    // InternalSQLParser.g:20201:1: rule__SignedLiteral__Group_2__1 : rule__SignedLiteral__Group_2__1__Impl ;
    public final void rule__SignedLiteral__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20205:1: ( rule__SignedLiteral__Group_2__1__Impl )
            // InternalSQLParser.g:20206:2: rule__SignedLiteral__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_2__1"


    // $ANTLR start "rule__SignedLiteral__Group_2__1__Impl"
    // InternalSQLParser.g:20212:1: rule__SignedLiteral__Group_2__1__Impl : ( ruleNumLiteral ) ;
    public final void rule__SignedLiteral__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20216:1: ( ( ruleNumLiteral ) )
            // InternalSQLParser.g:20217:1: ( ruleNumLiteral )
            {
            // InternalSQLParser.g:20217:1: ( ruleNumLiteral )
            // InternalSQLParser.g:20218:2: ruleNumLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getNumLiteralParserRuleCall_2_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getNumLiteralParserRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_2__1__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_0__0"
    // InternalSQLParser.g:20228:1: rule__TemporalLiteral__Group_0__0 : rule__TemporalLiteral__Group_0__0__Impl rule__TemporalLiteral__Group_0__1 ;
    public final void rule__TemporalLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20232:1: ( rule__TemporalLiteral__Group_0__0__Impl rule__TemporalLiteral__Group_0__1 )
            // InternalSQLParser.g:20233:2: rule__TemporalLiteral__Group_0__0__Impl rule__TemporalLiteral__Group_0__1
            {
            pushFollow(FOLLOW_31);
            rule__TemporalLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_0__0"


    // $ANTLR start "rule__TemporalLiteral__Group_0__0__Impl"
    // InternalSQLParser.g:20240:1: rule__TemporalLiteral__Group_0__0__Impl : ( DATE ) ;
    public final void rule__TemporalLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20244:1: ( ( DATE ) )
            // InternalSQLParser.g:20245:1: ( DATE )
            {
            // InternalSQLParser.g:20245:1: ( DATE )
            // InternalSQLParser.g:20246:2: DATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getDATEKeyword_0_0()); 
            }
            match(input,DATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getDATEKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_0__1"
    // InternalSQLParser.g:20255:1: rule__TemporalLiteral__Group_0__1 : rule__TemporalLiteral__Group_0__1__Impl ;
    public final void rule__TemporalLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20259:1: ( rule__TemporalLiteral__Group_0__1__Impl )
            // InternalSQLParser.g:20260:2: rule__TemporalLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_0__1"


    // $ANTLR start "rule__TemporalLiteral__Group_0__1__Impl"
    // InternalSQLParser.g:20266:1: rule__TemporalLiteral__Group_0__1__Impl : ( RULE_STRING_ ) ;
    public final void rule__TemporalLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20270:1: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:20271:1: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:20271:1: ( RULE_STRING_ )
            // InternalSQLParser.g:20272:2: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_0_1()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_1__0"
    // InternalSQLParser.g:20282:1: rule__TemporalLiteral__Group_1__0 : rule__TemporalLiteral__Group_1__0__Impl rule__TemporalLiteral__Group_1__1 ;
    public final void rule__TemporalLiteral__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20286:1: ( rule__TemporalLiteral__Group_1__0__Impl rule__TemporalLiteral__Group_1__1 )
            // InternalSQLParser.g:20287:2: rule__TemporalLiteral__Group_1__0__Impl rule__TemporalLiteral__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__TemporalLiteral__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_1__0"


    // $ANTLR start "rule__TemporalLiteral__Group_1__0__Impl"
    // InternalSQLParser.g:20294:1: rule__TemporalLiteral__Group_1__0__Impl : ( TIME ) ;
    public final void rule__TemporalLiteral__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20298:1: ( ( TIME ) )
            // InternalSQLParser.g:20299:1: ( TIME )
            {
            // InternalSQLParser.g:20299:1: ( TIME )
            // InternalSQLParser.g:20300:2: TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getTIMEKeyword_1_0()); 
            }
            match(input,TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getTIMEKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_1__0__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_1__1"
    // InternalSQLParser.g:20309:1: rule__TemporalLiteral__Group_1__1 : rule__TemporalLiteral__Group_1__1__Impl ;
    public final void rule__TemporalLiteral__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20313:1: ( rule__TemporalLiteral__Group_1__1__Impl )
            // InternalSQLParser.g:20314:2: rule__TemporalLiteral__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_1__1"


    // $ANTLR start "rule__TemporalLiteral__Group_1__1__Impl"
    // InternalSQLParser.g:20320:1: rule__TemporalLiteral__Group_1__1__Impl : ( RULE_STRING_ ) ;
    public final void rule__TemporalLiteral__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20324:1: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:20325:1: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:20325:1: ( RULE_STRING_ )
            // InternalSQLParser.g:20326:2: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_1_1()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_1__1__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_2__0"
    // InternalSQLParser.g:20336:1: rule__TemporalLiteral__Group_2__0 : rule__TemporalLiteral__Group_2__0__Impl rule__TemporalLiteral__Group_2__1 ;
    public final void rule__TemporalLiteral__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20340:1: ( rule__TemporalLiteral__Group_2__0__Impl rule__TemporalLiteral__Group_2__1 )
            // InternalSQLParser.g:20341:2: rule__TemporalLiteral__Group_2__0__Impl rule__TemporalLiteral__Group_2__1
            {
            pushFollow(FOLLOW_31);
            rule__TemporalLiteral__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_2__0"


    // $ANTLR start "rule__TemporalLiteral__Group_2__0__Impl"
    // InternalSQLParser.g:20348:1: rule__TemporalLiteral__Group_2__0__Impl : ( TIMESTAMP ) ;
    public final void rule__TemporalLiteral__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20352:1: ( ( TIMESTAMP ) )
            // InternalSQLParser.g:20353:1: ( TIMESTAMP )
            {
            // InternalSQLParser.g:20353:1: ( TIMESTAMP )
            // InternalSQLParser.g:20354:2: TIMESTAMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getTIMESTAMPKeyword_2_0()); 
            }
            match(input,TIMESTAMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getTIMESTAMPKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_2__0__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_2__1"
    // InternalSQLParser.g:20363:1: rule__TemporalLiteral__Group_2__1 : rule__TemporalLiteral__Group_2__1__Impl ;
    public final void rule__TemporalLiteral__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20367:1: ( rule__TemporalLiteral__Group_2__1__Impl )
            // InternalSQLParser.g:20368:2: rule__TemporalLiteral__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_2__1"


    // $ANTLR start "rule__TemporalLiteral__Group_2__1__Impl"
    // InternalSQLParser.g:20374:1: rule__TemporalLiteral__Group_2__1__Impl : ( RULE_STRING_ ) ;
    public final void rule__TemporalLiteral__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20378:1: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:20379:1: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:20379:1: ( RULE_STRING_ )
            // InternalSQLParser.g:20380:2: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_2_1()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_2__1__Impl"


    // $ANTLR start "rule__FNAME__Group__0"
    // InternalSQLParser.g:20390:1: rule__FNAME__Group__0 : rule__FNAME__Group__0__Impl rule__FNAME__Group__1 ;
    public final void rule__FNAME__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20394:1: ( rule__FNAME__Group__0__Impl rule__FNAME__Group__1 )
            // InternalSQLParser.g:20395:2: rule__FNAME__Group__0__Impl rule__FNAME__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__FNAME__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0"


    // $ANTLR start "rule__FNAME__Group__0__Impl"
    // InternalSQLParser.g:20402:1: rule__FNAME__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FNAME__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20406:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:20407:1: ( RULE_ID )
            {
            // InternalSQLParser.g:20407:1: ( RULE_ID )
            // InternalSQLParser.g:20408:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0__Impl"


    // $ANTLR start "rule__FNAME__Group__1"
    // InternalSQLParser.g:20417:1: rule__FNAME__Group__1 : rule__FNAME__Group__1__Impl ;
    public final void rule__FNAME__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20421:1: ( rule__FNAME__Group__1__Impl )
            // InternalSQLParser.g:20422:2: rule__FNAME__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1"


    // $ANTLR start "rule__FNAME__Group__1__Impl"
    // InternalSQLParser.g:20428:1: rule__FNAME__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FNAME__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20432:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:20433:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:20433:1: ( LeftParenthesis )
            // InternalSQLParser.g:20434:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1__Impl"


    // $ANTLR start "rule__Model__SimpleStatementAssignment"
    // InternalSQLParser.g:20444:1: rule__Model__SimpleStatementAssignment : ( ruleSimpleStatement ) ;
    public final void rule__Model__SimpleStatementAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20448:1: ( ( ruleSimpleStatement ) )
            // InternalSQLParser.g:20449:2: ( ruleSimpleStatement )
            {
            // InternalSQLParser.g:20449:2: ( ruleSimpleStatement )
            // InternalSQLParser.g:20450:3: ruleSimpleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getSimpleStatementSimpleStatementParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getSimpleStatementSimpleStatementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__SimpleStatementAssignment"


    // $ANTLR start "rule__SimpleStatement__SelectAssignment_0"
    // InternalSQLParser.g:20459:1: rule__SimpleStatement__SelectAssignment_0 : ( ruleSelectStatement ) ;
    public final void rule__SimpleStatement__SelectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20463:1: ( ( ruleSelectStatement ) )
            // InternalSQLParser.g:20464:2: ( ruleSelectStatement )
            {
            // InternalSQLParser.g:20464:2: ( ruleSelectStatement )
            // InternalSQLParser.g:20465:3: ruleSelectStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementAccess().getSelectSelectStatementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementAccess().getSelectSelectStatementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStatement__SelectAssignment_0"


    // $ANTLR start "rule__SimpleStatement__InsertAssignment_1"
    // InternalSQLParser.g:20474:1: rule__SimpleStatement__InsertAssignment_1 : ( ruleInsertStatement ) ;
    public final void rule__SimpleStatement__InsertAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20478:1: ( ( ruleInsertStatement ) )
            // InternalSQLParser.g:20479:2: ( ruleInsertStatement )
            {
            // InternalSQLParser.g:20479:2: ( ruleInsertStatement )
            // InternalSQLParser.g:20480:3: ruleInsertStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementAccess().getInsertInsertStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInsertStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementAccess().getInsertInsertStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStatement__InsertAssignment_1"


    // $ANTLR start "rule__SimpleStatement__CreateAssignment_2"
    // InternalSQLParser.g:20489:1: rule__SimpleStatement__CreateAssignment_2 : ( ruleCreateStatement ) ;
    public final void rule__SimpleStatement__CreateAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20493:1: ( ( ruleCreateStatement ) )
            // InternalSQLParser.g:20494:2: ( ruleCreateStatement )
            {
            // InternalSQLParser.g:20494:2: ( ruleCreateStatement )
            // InternalSQLParser.g:20495:3: ruleCreateStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementAccess().getCreateCreateStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCreateStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementAccess().getCreateCreateStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStatement__CreateAssignment_2"


    // $ANTLR start "rule__SelectStatement__WqAssignment_1"
    // InternalSQLParser.g:20504:1: rule__SelectStatement__WqAssignment_1 : ( ruleWithQuery ) ;
    public final void rule__SelectStatement__WqAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20508:1: ( ( ruleWithQuery ) )
            // InternalSQLParser.g:20509:2: ( ruleWithQuery )
            {
            // InternalSQLParser.g:20509:2: ( ruleWithQuery )
            // InternalSQLParser.g:20510:3: ruleWithQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getWqWithQueryParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getWqWithQueryParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__WqAssignment_1"


    // $ANTLR start "rule__SelectStatement__QueryAssignment_2"
    // InternalSQLParser.g:20519:1: rule__SelectStatement__QueryAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__SelectStatement__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20523:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:20524:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:20524:2: ( ruleSelectQuery )
            // InternalSQLParser.g:20525:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getQuerySelectQueryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getQuerySelectQueryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__QueryAssignment_2"


    // $ANTLR start "rule__InsertStatement__IfcAssignment_3_0"
    // InternalSQLParser.g:20534:1: rule__InsertStatement__IfcAssignment_3_0 : ( ruleInsertFromConstructor ) ;
    public final void rule__InsertStatement__IfcAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20538:1: ( ( ruleInsertFromConstructor ) )
            // InternalSQLParser.g:20539:2: ( ruleInsertFromConstructor )
            {
            // InternalSQLParser.g:20539:2: ( ruleInsertFromConstructor )
            // InternalSQLParser.g:20540:3: ruleInsertFromConstructor
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getIfcInsertFromConstructorParserRuleCall_3_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInsertFromConstructor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getIfcInsertFromConstructorParserRuleCall_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__IfcAssignment_3_0"


    // $ANTLR start "rule__InsertStatement__SelectAssignment_3_1"
    // InternalSQLParser.g:20549:1: rule__InsertStatement__SelectAssignment_3_1 : ( ruleSelectQuery ) ;
    public final void rule__InsertStatement__SelectAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20553:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:20554:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:20554:2: ( ruleSelectQuery )
            // InternalSQLParser.g:20555:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getSelectSelectQueryParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getSelectSelectQueryParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__SelectAssignment_3_1"


    // $ANTLR start "rule__InsertFromConstructor__FieldsAssignment_1"
    // InternalSQLParser.g:20564:1: rule__InsertFromConstructor__FieldsAssignment_1 : ( ruleFields ) ;
    public final void rule__InsertFromConstructor__FieldsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20568:1: ( ( ruleFields ) )
            // InternalSQLParser.g:20569:2: ( ruleFields )
            {
            // InternalSQLParser.g:20569:2: ( ruleFields )
            // InternalSQLParser.g:20570:3: ruleFields
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertFromConstructorAccess().getFieldsFieldsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFields();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertFromConstructorAccess().getFieldsFieldsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__FieldsAssignment_1"


    // $ANTLR start "rule__InsertFromConstructor__InsertValueListAssignment_4"
    // InternalSQLParser.g:20579:1: rule__InsertFromConstructor__InsertValueListAssignment_4 : ( ruleInsertValueList ) ;
    public final void rule__InsertFromConstructor__InsertValueListAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20583:1: ( ( ruleInsertValueList ) )
            // InternalSQLParser.g:20584:2: ( ruleInsertValueList )
            {
            // InternalSQLParser.g:20584:2: ( ruleInsertValueList )
            // InternalSQLParser.g:20585:3: ruleInsertValueList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertFromConstructorAccess().getInsertValueListInsertValueListParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInsertValueList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertFromConstructorAccess().getInsertValueListInsertValueListParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertFromConstructor__InsertValueListAssignment_4"


    // $ANTLR start "rule__Fields__IdsAssignment_0"
    // InternalSQLParser.g:20594:1: rule__Fields__IdsAssignment_0 : ( RULE_ID ) ;
    public final void rule__Fields__IdsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20598:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:20599:2: ( RULE_ID )
            {
            // InternalSQLParser.g:20599:2: ( RULE_ID )
            // InternalSQLParser.g:20600:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldsAccess().getIdsIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldsAccess().getIdsIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__IdsAssignment_0"


    // $ANTLR start "rule__Fields__IdsAssignment_1_1"
    // InternalSQLParser.g:20609:1: rule__Fields__IdsAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__Fields__IdsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20613:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:20614:2: ( RULE_ID )
            {
            // InternalSQLParser.g:20614:2: ( RULE_ID )
            // InternalSQLParser.g:20615:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldsAccess().getIdsIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldsAccess().getIdsIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Fields__IdsAssignment_1_1"


    // $ANTLR start "rule__InsertValueList__ValsAssignment_1"
    // InternalSQLParser.g:20624:1: rule__InsertValueList__ValsAssignment_1 : ( ruleInsertValues ) ;
    public final void rule__InsertValueList__ValsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20628:1: ( ( ruleInsertValues ) )
            // InternalSQLParser.g:20629:2: ( ruleInsertValues )
            {
            // InternalSQLParser.g:20629:2: ( ruleInsertValues )
            // InternalSQLParser.g:20630:3: ruleInsertValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getValsInsertValuesParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInsertValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getValsInsertValuesParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__ValsAssignment_1"


    // $ANTLR start "rule__InsertValueList__ValsAssignment_3_2"
    // InternalSQLParser.g:20639:1: rule__InsertValueList__ValsAssignment_3_2 : ( ruleInsertValues ) ;
    public final void rule__InsertValueList__ValsAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20643:1: ( ( ruleInsertValues ) )
            // InternalSQLParser.g:20644:2: ( ruleInsertValues )
            {
            // InternalSQLParser.g:20644:2: ( ruleInsertValues )
            // InternalSQLParser.g:20645:3: ruleInsertValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertValueListAccess().getValsInsertValuesParserRuleCall_3_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInsertValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertValueListAccess().getValsInsertValuesParserRuleCall_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertValueList__ValsAssignment_3_2"


    // $ANTLR start "rule__CreateStatement__Create_tblAssignment_1"
    // InternalSQLParser.g:20654:1: rule__CreateStatement__Create_tblAssignment_1 : ( ruleCreateTable ) ;
    public final void rule__CreateStatement__Create_tblAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20658:1: ( ( ruleCreateTable ) )
            // InternalSQLParser.g:20659:2: ( ruleCreateTable )
            {
            // InternalSQLParser.g:20659:2: ( ruleCreateTable )
            // InternalSQLParser.g:20660:3: ruleCreateTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementAccess().getCreate_tblCreateTableParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCreateTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementAccess().getCreate_tblCreateTableParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Create_tblAssignment_1"


    // $ANTLR start "rule__CreateTable__TableNameAssignment_1"
    // InternalSQLParser.g:20669:1: rule__CreateTable__TableNameAssignment_1 : ( ruleTableOrAlias ) ;
    public final void rule__CreateTable__TableNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20673:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:20674:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:20674:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:20675:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTableNameTableOrAliasParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTableNameTableOrAliasParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__TableNameAssignment_1"


    // $ANTLR start "rule__CreateTable__TableElementListAssignment_3"
    // InternalSQLParser.g:20684:1: rule__CreateTable__TableElementListAssignment_3 : ( ruleTableElementList ) ;
    public final void rule__CreateTable__TableElementListAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20688:1: ( ( ruleTableElementList ) )
            // InternalSQLParser.g:20689:2: ( ruleTableElementList )
            {
            // InternalSQLParser.g:20689:2: ( ruleTableElementList )
            // InternalSQLParser.g:20690:3: ruleTableElementList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTableElementListTableElementListParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableElementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTableElementListTableElementListParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__TableElementListAssignment_3"


    // $ANTLR start "rule__TableElementList__TableElementAssignment_0"
    // InternalSQLParser.g:20699:1: rule__TableElementList__TableElementAssignment_0 : ( ruleTableElement ) ;
    public final void rule__TableElementList__TableElementAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20703:1: ( ( ruleTableElement ) )
            // InternalSQLParser.g:20704:2: ( ruleTableElement )
            {
            // InternalSQLParser.g:20704:2: ( ruleTableElement )
            // InternalSQLParser.g:20705:3: ruleTableElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getTableElementTableElementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getTableElementTableElementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__TableElementAssignment_0"


    // $ANTLR start "rule__TableElementList__TableElementAssignment_1_1"
    // InternalSQLParser.g:20714:1: rule__TableElementList__TableElementAssignment_1_1 : ( ruleTableElement ) ;
    public final void rule__TableElementList__TableElementAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20718:1: ( ( ruleTableElement ) )
            // InternalSQLParser.g:20719:2: ( ruleTableElement )
            {
            // InternalSQLParser.g:20719:2: ( ruleTableElement )
            // InternalSQLParser.g:20720:3: ruleTableElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getTableElementTableElementParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getTableElementTableElementParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__TableElementAssignment_1_1"


    // $ANTLR start "rule__TableElement__ColumnDefinitionAssignment_0"
    // InternalSQLParser.g:20729:1: rule__TableElement__ColumnDefinitionAssignment_0 : ( ruleColumnDefinition ) ;
    public final void rule__TableElement__ColumnDefinitionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20733:1: ( ( ruleColumnDefinition ) )
            // InternalSQLParser.g:20734:2: ( ruleColumnDefinition )
            {
            // InternalSQLParser.g:20734:2: ( ruleColumnDefinition )
            // InternalSQLParser.g:20735:3: ruleColumnDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementAccess().getColumnDefinitionColumnDefinitionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementAccess().getColumnDefinitionColumnDefinitionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElement__ColumnDefinitionAssignment_0"


    // $ANTLR start "rule__TableElement__TableConstraintDefAssignment_1"
    // InternalSQLParser.g:20744:1: rule__TableElement__TableConstraintDefAssignment_1 : ( ruleTableConstraintDef ) ;
    public final void rule__TableElement__TableConstraintDefAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20748:1: ( ( ruleTableConstraintDef ) )
            // InternalSQLParser.g:20749:2: ( ruleTableConstraintDef )
            {
            // InternalSQLParser.g:20749:2: ( ruleTableConstraintDef )
            // InternalSQLParser.g:20750:3: ruleTableConstraintDef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementAccess().getTableConstraintDefTableConstraintDefParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableConstraintDef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementAccess().getTableConstraintDefTableConstraintDefParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElement__TableConstraintDefAssignment_1"


    // $ANTLR start "rule__ColumnDefinition__ColumnNameAssignment_0"
    // InternalSQLParser.g:20759:1: rule__ColumnDefinition__ColumnNameAssignment_0 : ( RULE_ID ) ;
    public final void rule__ColumnDefinition__ColumnNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20763:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:20764:2: ( RULE_ID )
            {
            // InternalSQLParser.g:20764:2: ( RULE_ID )
            // InternalSQLParser.g:20765:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getColumnNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getColumnNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__ColumnNameAssignment_0"


    // $ANTLR start "rule__ColumnDefinition__FieldDefinitionAssignment_1"
    // InternalSQLParser.g:20774:1: rule__ColumnDefinition__FieldDefinitionAssignment_1 : ( ruleFieldDefinition ) ;
    public final void rule__ColumnDefinition__FieldDefinitionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20778:1: ( ( ruleFieldDefinition ) )
            // InternalSQLParser.g:20779:2: ( ruleFieldDefinition )
            {
            // InternalSQLParser.g:20779:2: ( ruleFieldDefinition )
            // InternalSQLParser.g:20780:3: ruleFieldDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getFieldDefinitionFieldDefinitionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFieldDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getFieldDefinitionFieldDefinitionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__FieldDefinitionAssignment_1"


    // $ANTLR start "rule__TableConstraintDef__ColumnNameListAssignment_0_3"
    // InternalSQLParser.g:20789:1: rule__TableConstraintDef__ColumnNameListAssignment_0_3 : ( ruleColumnNameList ) ;
    public final void rule__TableConstraintDef__ColumnNameListAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20793:1: ( ( ruleColumnNameList ) )
            // InternalSQLParser.g:20794:2: ( ruleColumnNameList )
            {
            // InternalSQLParser.g:20794:2: ( ruleColumnNameList )
            // InternalSQLParser.g:20795:3: ruleColumnNameList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getColumnNameListColumnNameListParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnNameList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getColumnNameListColumnNameListParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__ColumnNameListAssignment_0_3"


    // $ANTLR start "rule__TableConstraintDef__ColumnNameListAssignment_1_3"
    // InternalSQLParser.g:20804:1: rule__TableConstraintDef__ColumnNameListAssignment_1_3 : ( ruleColumnNameList ) ;
    public final void rule__TableConstraintDef__ColumnNameListAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20808:1: ( ( ruleColumnNameList ) )
            // InternalSQLParser.g:20809:2: ( ruleColumnNameList )
            {
            // InternalSQLParser.g:20809:2: ( ruleColumnNameList )
            // InternalSQLParser.g:20810:3: ruleColumnNameList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getColumnNameListColumnNameListParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnNameList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getColumnNameListColumnNameListParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__ColumnNameListAssignment_1_3"


    // $ANTLR start "rule__TableConstraintDef__TableNameAssignment_1_6"
    // InternalSQLParser.g:20819:1: rule__TableConstraintDef__TableNameAssignment_1_6 : ( ruleTableName ) ;
    public final void rule__TableConstraintDef__TableNameAssignment_1_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20823:1: ( ( ruleTableName ) )
            // InternalSQLParser.g:20824:2: ( ruleTableName )
            {
            // InternalSQLParser.g:20824:2: ( ruleTableName )
            // InternalSQLParser.g:20825:3: ruleTableName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getTableNameTableNameParserRuleCall_1_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getTableNameTableNameParserRuleCall_1_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__TableNameAssignment_1_6"


    // $ANTLR start "rule__TableConstraintDef__RefColumnNameListAssignment_1_8"
    // InternalSQLParser.g:20834:1: rule__TableConstraintDef__RefColumnNameListAssignment_1_8 : ( ruleColumnNameList ) ;
    public final void rule__TableConstraintDef__RefColumnNameListAssignment_1_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20838:1: ( ( ruleColumnNameList ) )
            // InternalSQLParser.g:20839:2: ( ruleColumnNameList )
            {
            // InternalSQLParser.g:20839:2: ( ruleColumnNameList )
            // InternalSQLParser.g:20840:3: ruleColumnNameList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRefColumnNameListColumnNameListParserRuleCall_1_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnNameList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRefColumnNameListColumnNameListParserRuleCall_1_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__RefColumnNameListAssignment_1_8"


    // $ANTLR start "rule__ColumnNameList__ColumnNameAssignment_0"
    // InternalSQLParser.g:20849:1: rule__ColumnNameList__ColumnNameAssignment_0 : ( RULE_ID ) ;
    public final void rule__ColumnNameList__ColumnNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20853:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:20854:2: ( RULE_ID )
            {
            // InternalSQLParser.g:20854:2: ( RULE_ID )
            // InternalSQLParser.g:20855:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getColumnNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getColumnNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__ColumnNameAssignment_0"


    // $ANTLR start "rule__ColumnNameList__ColumnNameAssignment_1_1"
    // InternalSQLParser.g:20864:1: rule__ColumnNameList__ColumnNameAssignment_1_1 : ( RULE_ID ) ;
    public final void rule__ColumnNameList__ColumnNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20868:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:20869:2: ( RULE_ID )
            {
            // InternalSQLParser.g:20869:2: ( RULE_ID )
            // InternalSQLParser.g:20870:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getColumnNameIDTerminalRuleCall_1_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getColumnNameIDTerminalRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__ColumnNameAssignment_1_1"


    // $ANTLR start "rule__WithQuery__WAssignment_0"
    // InternalSQLParser.g:20879:1: rule__WithQuery__WAssignment_0 : ( ( WITH ) ) ;
    public final void rule__WithQuery__WAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20883:1: ( ( ( WITH ) ) )
            // InternalSQLParser.g:20884:2: ( ( WITH ) )
            {
            // InternalSQLParser.g:20884:2: ( ( WITH ) )
            // InternalSQLParser.g:20885:3: ( WITH )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            // InternalSQLParser.g:20886:3: ( WITH )
            // InternalSQLParser.g:20887:4: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WAssignment_0"


    // $ANTLR start "rule__WithQuery__WnameAssignment_1"
    // InternalSQLParser.g:20898:1: rule__WithQuery__WnameAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__WnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20902:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:20903:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:20903:2: ( ruleDbObjectName )
            // InternalSQLParser.g:20904:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WnameAssignment_1"


    // $ANTLR start "rule__WithQuery__WithColsAssignment_2"
    // InternalSQLParser.g:20913:1: rule__WithQuery__WithColsAssignment_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__WithColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20917:1: ( ( ruleWithColumns ) )
            // InternalSQLParser.g:20918:2: ( ruleWithColumns )
            {
            // InternalSQLParser.g:20918:2: ( ruleWithColumns )
            // InternalSQLParser.g:20919:3: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WithColsAssignment_2"


    // $ANTLR start "rule__WithQuery__QueryAssignment_5"
    // InternalSQLParser.g:20928:1: rule__WithQuery__QueryAssignment_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__QueryAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20932:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:20933:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:20933:2: ( ruleSelectQuery )
            // InternalSQLParser.g:20934:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__QueryAssignment_5"


    // $ANTLR start "rule__WithQuery__AdditionalWnameAssignment_7_1"
    // InternalSQLParser.g:20943:1: rule__WithQuery__AdditionalWnameAssignment_7_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__AdditionalWnameAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20947:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:20948:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:20948:2: ( ruleDbObjectName )
            // InternalSQLParser.g:20949:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWnameAssignment_7_1"


    // $ANTLR start "rule__WithQuery__AdditionalWithColsAssignment_7_2"
    // InternalSQLParser.g:20958:1: rule__WithQuery__AdditionalWithColsAssignment_7_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__AdditionalWithColsAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20962:1: ( ( ruleWithColumns ) )
            // InternalSQLParser.g:20963:2: ( ruleWithColumns )
            {
            // InternalSQLParser.g:20963:2: ( ruleWithColumns )
            // InternalSQLParser.g:20964:3: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWithColsAssignment_7_2"


    // $ANTLR start "rule__WithQuery__AdditionalQueriesAssignment_7_5"
    // InternalSQLParser.g:20973:1: rule__WithQuery__AdditionalQueriesAssignment_7_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__AdditionalQueriesAssignment_7_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20977:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:20978:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:20978:2: ( ruleSelectQuery )
            // InternalSQLParser.g:20979:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalQueriesAssignment_7_5"


    // $ANTLR start "rule__FetchFirst__FetchFirstAssignment_0"
    // InternalSQLParser.g:20988:1: rule__FetchFirst__FetchFirstAssignment_0 : ( ruleUnsignedValue ) ;
    public final void rule__FetchFirst__FetchFirstAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20992:1: ( ( ruleUnsignedValue ) )
            // InternalSQLParser.g:20993:2: ( ruleUnsignedValue )
            {
            // InternalSQLParser.g:20993:2: ( ruleUnsignedValue )
            // InternalSQLParser.g:20994:3: ruleUnsignedValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__FetchFirstAssignment_0"


    // $ANTLR start "rule__FetchFirst__RowAssignment_1"
    // InternalSQLParser.g:21003:1: rule__FetchFirst__RowAssignment_1 : ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) ;
    public final void rule__FetchFirst__RowAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21007:1: ( ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) )
            // InternalSQLParser.g:21008:2: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:21008:2: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            // InternalSQLParser.g:21009:3: ( rule__FetchFirst__RowAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }
            // InternalSQLParser.g:21010:3: ( rule__FetchFirst__RowAlternatives_1_0 )
            // InternalSQLParser.g:21010:4: rule__FetchFirst__RowAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAssignment_1"


    // $ANTLR start "rule__Offset__OffsetAssignment"
    // InternalSQLParser.g:21018:1: rule__Offset__OffsetAssignment : ( RULE_INT ) ;
    public final void rule__Offset__OffsetAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21022:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:21023:2: ( RULE_INT )
            {
            // InternalSQLParser.g:21023:2: ( RULE_INT )
            // InternalSQLParser.g:21024:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__OffsetAssignment"


    // $ANTLR start "rule__Limit__L1Assignment_1_0"
    // InternalSQLParser.g:21033:1: rule__Limit__L1Assignment_1_0 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L1Assignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21037:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:21038:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:21038:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:21039:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L1Assignment_1_0"


    // $ANTLR start "rule__Limit__L2Assignment_1_1_1"
    // InternalSQLParser.g:21048:1: rule__Limit__L2Assignment_1_1_1 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L2Assignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21052:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:21053:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:21053:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:21054:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L2Assignment_1_1_1"


    // $ANTLR start "rule__SelectQuery__OpAssignment_1"
    // InternalSQLParser.g:21063:1: rule__SelectQuery__OpAssignment_1 : ( ruleSelectSubSet ) ;
    public final void rule__SelectQuery__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21067:1: ( ( ruleSelectSubSet ) )
            // InternalSQLParser.g:21068:2: ( ruleSelectSubSet )
            {
            // InternalSQLParser.g:21068:2: ( ruleSelectSubSet )
            // InternalSQLParser.g:21069:3: ruleSelectSubSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__OpAssignment_1"


    // $ANTLR start "rule__SelectSubSet__OpAssignment_0"
    // InternalSQLParser.g:21078:1: rule__SelectSubSet__OpAssignment_0 : ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) ;
    public final void rule__SelectSubSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21082:1: ( ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) )
            // InternalSQLParser.g:21083:2: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            {
            // InternalSQLParser.g:21083:2: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            // InternalSQLParser.g:21084:3: ( rule__SelectSubSet__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }
            // InternalSQLParser.g:21085:3: ( rule__SelectSubSet__OpAlternatives_0_0 )
            // InternalSQLParser.g:21085:4: rule__SelectSubSet__OpAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAssignment_0"


    // $ANTLR start "rule__SelectSubSet__AllAssignment_1"
    // InternalSQLParser.g:21093:1: rule__SelectSubSet__AllAssignment_1 : ( ( ALL ) ) ;
    public final void rule__SelectSubSet__AllAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21097:1: ( ( ( ALL ) ) )
            // InternalSQLParser.g:21098:2: ( ( ALL ) )
            {
            // InternalSQLParser.g:21098:2: ( ( ALL ) )
            // InternalSQLParser.g:21099:3: ( ALL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            // InternalSQLParser.g:21100:3: ( ALL )
            // InternalSQLParser.g:21101:4: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__AllAssignment_1"


    // $ANTLR start "rule__SelectSubSet__QueryAssignment_2"
    // InternalSQLParser.g:21112:1: rule__SelectSubSet__QueryAssignment_2 : ( ruleSelect ) ;
    public final void rule__SelectSubSet__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21116:1: ( ( ruleSelect ) )
            // InternalSQLParser.g:21117:2: ( ruleSelect )
            {
            // InternalSQLParser.g:21117:2: ( ruleSelect )
            // InternalSQLParser.g:21118:3: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__QueryAssignment_2"


    // $ANTLR start "rule__Select__SelectAssignment_0"
    // InternalSQLParser.g:21127:1: rule__Select__SelectAssignment_0 : ( ( SELECT ) ) ;
    public final void rule__Select__SelectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21131:1: ( ( ( SELECT ) ) )
            // InternalSQLParser.g:21132:2: ( ( SELECT ) )
            {
            // InternalSQLParser.g:21132:2: ( ( SELECT ) )
            // InternalSQLParser.g:21133:3: ( SELECT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            // InternalSQLParser.g:21134:3: ( SELECT )
            // InternalSQLParser.g:21135:4: SELECT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            match(input,SELECT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__SelectAssignment_0"


    // $ANTLR start "rule__Select__ColsAssignment_3"
    // InternalSQLParser.g:21146:1: rule__Select__ColsAssignment_3 : ( ruleColumns ) ;
    public final void rule__Select__ColsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21150:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:21151:2: ( ruleColumns )
            {
            // InternalSQLParser.g:21151:2: ( ruleColumns )
            // InternalSQLParser.g:21152:3: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__ColsAssignment_3"


    // $ANTLR start "rule__Select__TblAssignment_5"
    // InternalSQLParser.g:21161:1: rule__Select__TblAssignment_5 : ( ruleTables ) ;
    public final void rule__Select__TblAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21165:1: ( ( ruleTables ) )
            // InternalSQLParser.g:21166:2: ( ruleTables )
            {
            // InternalSQLParser.g:21166:2: ( ruleTables )
            // InternalSQLParser.g:21167:3: ruleTables
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__TblAssignment_5"


    // $ANTLR start "rule__Select__WhereExpressionAssignment_6_1"
    // InternalSQLParser.g:21176:1: rule__Select__WhereExpressionAssignment_6_1 : ( ruleFullExpression ) ;
    public final void rule__Select__WhereExpressionAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21180:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:21181:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:21181:2: ( ruleFullExpression )
            // InternalSQLParser.g:21182:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__WhereExpressionAssignment_6_1"


    // $ANTLR start "rule__Select__GroupByEntryAssignment_7_2"
    // InternalSQLParser.g:21191:1: rule__Select__GroupByEntryAssignment_7_2 : ( ruleGroupByColumns ) ;
    public final void rule__Select__GroupByEntryAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21195:1: ( ( ruleGroupByColumns ) )
            // InternalSQLParser.g:21196:2: ( ruleGroupByColumns )
            {
            // InternalSQLParser.g:21196:2: ( ruleGroupByColumns )
            // InternalSQLParser.g:21197:3: ruleGroupByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__GroupByEntryAssignment_7_2"


    // $ANTLR start "rule__Select__HavingEntryAssignment_8_1"
    // InternalSQLParser.g:21206:1: rule__Select__HavingEntryAssignment_8_1 : ( ruleFullExpression ) ;
    public final void rule__Select__HavingEntryAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21210:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:21211:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:21211:2: ( ruleFullExpression )
            // InternalSQLParser.g:21212:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__HavingEntryAssignment_8_1"


    // $ANTLR start "rule__Select__OrderByEntryAssignment_9_2"
    // InternalSQLParser.g:21221:1: rule__Select__OrderByEntryAssignment_9_2 : ( ruleOrderByColumns ) ;
    public final void rule__Select__OrderByEntryAssignment_9_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21225:1: ( ( ruleOrderByColumns ) )
            // InternalSQLParser.g:21226:2: ( ruleOrderByColumns )
            {
            // InternalSQLParser.g:21226:2: ( ruleOrderByColumns )
            // InternalSQLParser.g:21227:3: ruleOrderByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OrderByEntryAssignment_9_2"


    // $ANTLR start "rule__Select__LimAssignment_10_1"
    // InternalSQLParser.g:21236:1: rule__Select__LimAssignment_10_1 : ( ruleLimit ) ;
    public final void rule__Select__LimAssignment_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21240:1: ( ( ruleLimit ) )
            // InternalSQLParser.g:21241:2: ( ruleLimit )
            {
            // InternalSQLParser.g:21241:2: ( ruleLimit )
            // InternalSQLParser.g:21242:3: ruleLimit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__LimAssignment_10_1"


    // $ANTLR start "rule__Select__OffsetAssignment_11_1"
    // InternalSQLParser.g:21251:1: rule__Select__OffsetAssignment_11_1 : ( ruleOffset ) ;
    public final void rule__Select__OffsetAssignment_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21255:1: ( ( ruleOffset ) )
            // InternalSQLParser.g:21256:2: ( ruleOffset )
            {
            // InternalSQLParser.g:21256:2: ( ruleOffset )
            // InternalSQLParser.g:21257:3: ruleOffset
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OffsetAssignment_11_1"


    // $ANTLR start "rule__Select__FetchFirstAssignment_12_2"
    // InternalSQLParser.g:21266:1: rule__Select__FetchFirstAssignment_12_2 : ( ruleFetchFirst ) ;
    public final void rule__Select__FetchFirstAssignment_12_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21270:1: ( ( ruleFetchFirst ) )
            // InternalSQLParser.g:21271:2: ( ruleFetchFirst )
            {
            // InternalSQLParser.g:21271:2: ( ruleFetchFirst )
            // InternalSQLParser.g:21272:3: ruleFetchFirst
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__FetchFirstAssignment_12_2"


    // $ANTLR start "rule__Columns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21281:1: rule__Columns__EntriesAssignment_1_1_1 : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21285:1: ( ( ruleColumnOrAlias ) )
            // InternalSQLParser.g:21286:2: ( ruleColumnOrAlias )
            {
            // InternalSQLParser.g:21286:2: ( ruleColumnOrAlias )
            // InternalSQLParser.g:21287:3: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnOrAlias__CeAssignment_0_0"
    // InternalSQLParser.g:21296:1: rule__ColumnOrAlias__CeAssignment_0_0 : ( ruleOperandGroup ) ;
    public final void rule__ColumnOrAlias__CeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21300:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21301:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21301:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21302:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__CeAssignment_0_0"


    // $ANTLR start "rule__ColumnOrAlias__AliasAssignment_0_1"
    // InternalSQLParser.g:21311:1: rule__ColumnOrAlias__AliasAssignment_0_1 : ( ( AS ) ) ;
    public final void rule__ColumnOrAlias__AliasAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21315:1: ( ( ( AS ) ) )
            // InternalSQLParser.g:21316:2: ( ( AS ) )
            {
            // InternalSQLParser.g:21316:2: ( ( AS ) )
            // InternalSQLParser.g:21317:3: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            // InternalSQLParser.g:21318:3: ( AS )
            // InternalSQLParser.g:21319:4: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AliasAssignment_0_1"


    // $ANTLR start "rule__ColumnOrAlias__ColAliasAssignment_0_2"
    // InternalSQLParser.g:21330:1: rule__ColumnOrAlias__ColAliasAssignment_0_2 : ( ruleDbObjectName ) ;
    public final void rule__ColumnOrAlias__ColAliasAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21334:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:21335:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:21335:2: ( ruleDbObjectName )
            // InternalSQLParser.g:21336:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__ColAliasAssignment_0_2"


    // $ANTLR start "rule__ColumnOrAlias__AllColsAssignment_1"
    // InternalSQLParser.g:21345:1: rule__ColumnOrAlias__AllColsAssignment_1 : ( RULE_STAR ) ;
    public final void rule__ColumnOrAlias__AllColsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21349:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:21350:2: ( RULE_STAR )
            {
            // InternalSQLParser.g:21350:2: ( RULE_STAR )
            // InternalSQLParser.g:21351:3: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AllColsAssignment_1"


    // $ANTLR start "rule__ColumnOrAlias__DbAllColsAssignment_2"
    // InternalSQLParser.g:21360:1: rule__ColumnOrAlias__DbAllColsAssignment_2 : ( ruleDbObjectNameAll ) ;
    public final void rule__ColumnOrAlias__DbAllColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21364:1: ( ( ruleDbObjectNameAll ) )
            // InternalSQLParser.g:21365:2: ( ruleDbObjectNameAll )
            {
            // InternalSQLParser.g:21365:2: ( ruleDbObjectNameAll )
            // InternalSQLParser.g:21366:3: ruleDbObjectNameAll
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__DbAllColsAssignment_2"


    // $ANTLR start "rule__ColumnFull__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21375:1: rule__ColumnFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21379:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:21380:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:21380:2: ( ruleDbObjectName )
            // InternalSQLParser.g:21381:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Tables__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21390:1: rule__Tables__EntriesAssignment_1_1_1 : ( ruleFromTable ) ;
    public final void rule__Tables__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21394:1: ( ( ruleFromTable ) )
            // InternalSQLParser.g:21395:2: ( ruleFromTable )
            {
            // InternalSQLParser.g:21395:2: ( ruleFromTable )
            // InternalSQLParser.g:21396:3: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__FromTable__TableAssignment_0"
    // InternalSQLParser.g:21405:1: rule__FromTable__TableAssignment_0 : ( ruleTableOrAlias ) ;
    public final void rule__FromTable__TableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21409:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:21410:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:21410:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:21411:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__TableAssignment_0"


    // $ANTLR start "rule__FromTable__FjoinAssignment_1"
    // InternalSQLParser.g:21420:1: rule__FromTable__FjoinAssignment_1 : ( ruleFromTableJoin ) ;
    public final void rule__FromTable__FjoinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21424:1: ( ( ruleFromTableJoin ) )
            // InternalSQLParser.g:21425:2: ( ruleFromTableJoin )
            {
            // InternalSQLParser.g:21425:2: ( ruleFromTableJoin )
            // InternalSQLParser.g:21426:3: ruleFromTableJoin
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__FjoinAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinAssignment_0"
    // InternalSQLParser.g:21435:1: rule__FromTableJoin__JoinAssignment_0 : ( ruleJoinType ) ;
    public final void rule__FromTableJoin__JoinAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21439:1: ( ( ruleJoinType ) )
            // InternalSQLParser.g:21440:2: ( ruleJoinType )
            {
            // InternalSQLParser.g:21440:2: ( ruleJoinType )
            // InternalSQLParser.g:21441:3: ruleJoinType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinAssignment_0"


    // $ANTLR start "rule__FromTableJoin__OnTableAssignment_1"
    // InternalSQLParser.g:21450:1: rule__FromTableJoin__OnTableAssignment_1 : ( ruleTableOrAlias ) ;
    public final void rule__FromTableJoin__OnTableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21454:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:21455:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:21455:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:21456:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__OnTableAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinExprAssignment_2_0_1"
    // InternalSQLParser.g:21465:1: rule__FromTableJoin__JoinExprAssignment_2_0_1 : ( ruleFullExpression ) ;
    public final void rule__FromTableJoin__JoinExprAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21469:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:21470:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:21470:2: ( ruleFullExpression )
            // InternalSQLParser.g:21471:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinExprAssignment_2_0_1"


    // $ANTLR start "rule__FromTableJoin__JoinCondAssignment_2_1"
    // InternalSQLParser.g:21480:1: rule__FromTableJoin__JoinCondAssignment_2_1 : ( ruleJoinCondition ) ;
    public final void rule__FromTableJoin__JoinCondAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21484:1: ( ( ruleJoinCondition ) )
            // InternalSQLParser.g:21485:2: ( ruleJoinCondition )
            {
            // InternalSQLParser.g:21485:2: ( ruleJoinCondition )
            // InternalSQLParser.g:21486:3: ruleJoinCondition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinCondAssignment_2_1"


    // $ANTLR start "rule__JoinCondition__UseColsAssignment_2"
    // InternalSQLParser.g:21495:1: rule__JoinCondition__UseColsAssignment_2 : ( ruleUsingCols ) ;
    public final void rule__JoinCondition__UseColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21499:1: ( ( ruleUsingCols ) )
            // InternalSQLParser.g:21500:2: ( ruleUsingCols )
            {
            // InternalSQLParser.g:21500:2: ( ruleUsingCols )
            // InternalSQLParser.g:21501:3: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__UseColsAssignment_2"


    // $ANTLR start "rule__UsingCols__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21510:1: rule__UsingCols__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21514:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:21515:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:21515:2: ( ruleDbObjectName )
            // InternalSQLParser.g:21516:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableOrAlias__TfullAssignment_0_0"
    // InternalSQLParser.g:21525:1: rule__TableOrAlias__TfullAssignment_0_0 : ( ruleTableFull ) ;
    public final void rule__TableOrAlias__TfullAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21529:1: ( ( ruleTableFull ) )
            // InternalSQLParser.g:21530:2: ( ruleTableFull )
            {
            // InternalSQLParser.g:21530:2: ( ruleTableFull )
            // InternalSQLParser.g:21531:3: ruleTableFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TfullAssignment_0_0"


    // $ANTLR start "rule__TableOrAlias__SqAssignment_0_1"
    // InternalSQLParser.g:21540:1: rule__TableOrAlias__SqAssignment_0_1 : ( ruleSubQueryOperand ) ;
    public final void rule__TableOrAlias__SqAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21544:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:21545:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:21545:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:21546:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__SqAssignment_0_1"


    // $ANTLR start "rule__TableOrAlias__ValuesAssignment_0_2"
    // InternalSQLParser.g:21555:1: rule__TableOrAlias__ValuesAssignment_0_2 : ( ruleFromValues ) ;
    public final void rule__TableOrAlias__ValuesAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21559:1: ( ( ruleFromValues ) )
            // InternalSQLParser.g:21560:2: ( ruleFromValues )
            {
            // InternalSQLParser.g:21560:2: ( ruleFromValues )
            // InternalSQLParser.g:21561:3: ruleFromValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__ValuesAssignment_0_2"


    // $ANTLR start "rule__TableOrAlias__PivotAssignment_1_0"
    // InternalSQLParser.g:21570:1: rule__TableOrAlias__PivotAssignment_1_0 : ( rulePivotTable ) ;
    public final void rule__TableOrAlias__PivotAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21574:1: ( ( rulePivotTable ) )
            // InternalSQLParser.g:21575:2: ( rulePivotTable )
            {
            // InternalSQLParser.g:21575:2: ( rulePivotTable )
            // InternalSQLParser.g:21576:3: rulePivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__PivotAssignment_1_0"


    // $ANTLR start "rule__TableOrAlias__UnpivotAssignment_1_1"
    // InternalSQLParser.g:21585:1: rule__TableOrAlias__UnpivotAssignment_1_1 : ( ruleUnpivotTable ) ;
    public final void rule__TableOrAlias__UnpivotAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21589:1: ( ( ruleUnpivotTable ) )
            // InternalSQLParser.g:21590:2: ( ruleUnpivotTable )
            {
            // InternalSQLParser.g:21590:2: ( ruleUnpivotTable )
            // InternalSQLParser.g:21591:3: ruleUnpivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__UnpivotAssignment_1_1"


    // $ANTLR start "rule__TableOrAlias__AliasAssignment_2"
    // InternalSQLParser.g:21600:1: rule__TableOrAlias__AliasAssignment_2 : ( ( AS ) ) ;
    public final void rule__TableOrAlias__AliasAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21604:1: ( ( ( AS ) ) )
            // InternalSQLParser.g:21605:2: ( ( AS ) )
            {
            // InternalSQLParser.g:21605:2: ( ( AS ) )
            // InternalSQLParser.g:21606:3: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            // InternalSQLParser.g:21607:3: ( AS )
            // InternalSQLParser.g:21608:4: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__AliasAssignment_2"


    // $ANTLR start "rule__TableOrAlias__TblAliasAssignment_3"
    // InternalSQLParser.g:21619:1: rule__TableOrAlias__TblAliasAssignment_3 : ( ruleDbObjectName ) ;
    public final void rule__TableOrAlias__TblAliasAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21623:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:21624:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:21624:2: ( ruleDbObjectName )
            // InternalSQLParser.g:21625:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TblAliasAssignment_3"


    // $ANTLR start "rule__FromValues__ValuesAssignment_0"
    // InternalSQLParser.g:21634:1: rule__FromValues__ValuesAssignment_0 : ( ruleValues ) ;
    public final void rule__FromValues__ValuesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21638:1: ( ( ruleValues ) )
            // InternalSQLParser.g:21639:2: ( ruleValues )
            {
            // InternalSQLParser.g:21639:2: ( ruleValues )
            // InternalSQLParser.g:21640:3: ruleValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__ValuesAssignment_0"


    // $ANTLR start "rule__FromValues__CAssignment_1"
    // InternalSQLParser.g:21649:1: rule__FromValues__CAssignment_1 : ( ruleFromValuesColumns ) ;
    public final void rule__FromValues__CAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21653:1: ( ( ruleFromValuesColumns ) )
            // InternalSQLParser.g:21654:2: ( ruleFromValuesColumns )
            {
            // InternalSQLParser.g:21654:2: ( ruleFromValuesColumns )
            // InternalSQLParser.g:21655:3: ruleFromValuesColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__CAssignment_1"


    // $ANTLR start "rule__FromValuesColumns__FvColsAssignment_2"
    // InternalSQLParser.g:21664:1: rule__FromValuesColumns__FvColsAssignment_2 : ( ruleFromValuesColumnNames ) ;
    public final void rule__FromValuesColumns__FvColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21668:1: ( ( ruleFromValuesColumnNames ) )
            // InternalSQLParser.g:21669:2: ( ruleFromValuesColumnNames )
            {
            // InternalSQLParser.g:21669:2: ( ruleFromValuesColumnNames )
            // InternalSQLParser.g:21670:3: ruleFromValuesColumnNames
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__FvColsAssignment_2"


    // $ANTLR start "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21679:1: rule__FromValuesColumnNames__EntriesAssignment_1_1_1 : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21683:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:21684:2: ( ruleColumnName )
            {
            // InternalSQLParser.g:21684:2: ( ruleColumnName )
            // InternalSQLParser.g:21685:3: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnName__ColNameAssignment"
    // InternalSQLParser.g:21694:1: rule__ColumnName__ColNameAssignment : ( RULE_STRING ) ;
    public final void rule__ColumnName__ColNameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21698:1: ( ( RULE_STRING ) )
            // InternalSQLParser.g:21699:2: ( RULE_STRING )
            {
            // InternalSQLParser.g:21699:2: ( RULE_STRING )
            // InternalSQLParser.g:21700:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnName__ColNameAssignment"


    // $ANTLR start "rule__Values__RowsAssignment_2"
    // InternalSQLParser.g:21709:1: rule__Values__RowsAssignment_2 : ( ruleRows ) ;
    public final void rule__Values__RowsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21713:1: ( ( ruleRows ) )
            // InternalSQLParser.g:21714:2: ( ruleRows )
            {
            // InternalSQLParser.g:21714:2: ( ruleRows )
            // InternalSQLParser.g:21715:3: ruleRows
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__RowsAssignment_2"


    // $ANTLR start "rule__Rows__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21724:1: rule__Rows__EntriesAssignment_1_1_1 : ( ruleRow ) ;
    public final void rule__Rows__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21728:1: ( ( ruleRow ) )
            // InternalSQLParser.g:21729:2: ( ruleRow )
            {
            // InternalSQLParser.g:21729:2: ( ruleRow )
            // InternalSQLParser.g:21730:3: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Row__RowValuesAssignment_1"
    // InternalSQLParser.g:21739:1: rule__Row__RowValuesAssignment_1 : ( ruleRowValues ) ;
    public final void rule__Row__RowValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21743:1: ( ( ruleRowValues ) )
            // InternalSQLParser.g:21744:2: ( ruleRowValues )
            {
            // InternalSQLParser.g:21744:2: ( ruleRowValues )
            // InternalSQLParser.g:21745:3: ruleRowValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__RowValuesAssignment_1"


    // $ANTLR start "rule__RowValues__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21754:1: rule__RowValues__EntriesAssignment_1_1_1 : ( ruleRowValue ) ;
    public final void rule__RowValues__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21758:1: ( ( ruleRowValue ) )
            // InternalSQLParser.g:21759:2: ( ruleRowValue )
            {
            // InternalSQLParser.g:21759:2: ( ruleRowValue )
            // InternalSQLParser.g:21760:3: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__RowValue__NullAssignment_1"
    // InternalSQLParser.g:21769:1: rule__RowValue__NullAssignment_1 : ( ( NULL ) ) ;
    public final void rule__RowValue__NullAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21773:1: ( ( ( NULL ) ) )
            // InternalSQLParser.g:21774:2: ( ( NULL ) )
            {
            // InternalSQLParser.g:21774:2: ( ( NULL ) )
            // InternalSQLParser.g:21775:3: ( NULL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            // InternalSQLParser.g:21776:3: ( NULL )
            // InternalSQLParser.g:21777:4: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__NullAssignment_1"


    // $ANTLR start "rule__PivotTable__PfunAssignment_3"
    // InternalSQLParser.g:21788:1: rule__PivotTable__PfunAssignment_3 : ( rulePivotFunctions ) ;
    public final void rule__PivotTable__PfunAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21792:1: ( ( rulePivotFunctions ) )
            // InternalSQLParser.g:21793:2: ( rulePivotFunctions )
            {
            // InternalSQLParser.g:21793:2: ( rulePivotFunctions )
            // InternalSQLParser.g:21794:3: rulePivotFunctions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PfunAssignment_3"


    // $ANTLR start "rule__PivotTable__PforAssignment_4"
    // InternalSQLParser.g:21803:1: rule__PivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__PivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21807:1: ( ( rulePivotForClause ) )
            // InternalSQLParser.g:21808:2: ( rulePivotForClause )
            {
            // InternalSQLParser.g:21808:2: ( rulePivotForClause )
            // InternalSQLParser.g:21809:3: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PforAssignment_4"


    // $ANTLR start "rule__PivotTable__PinAssignment_5"
    // InternalSQLParser.g:21818:1: rule__PivotTable__PinAssignment_5 : ( rulePivotInClause ) ;
    public final void rule__PivotTable__PinAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21822:1: ( ( rulePivotInClause ) )
            // InternalSQLParser.g:21823:2: ( rulePivotInClause )
            {
            // InternalSQLParser.g:21823:2: ( rulePivotInClause )
            // InternalSQLParser.g:21824:3: rulePivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PinAssignment_5"


    // $ANTLR start "rule__PivotFunctions__AbcAssignment"
    // InternalSQLParser.g:21833:1: rule__PivotFunctions__AbcAssignment : ( RULE_ID ) ;
    public final void rule__PivotFunctions__AbcAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21837:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:21838:2: ( RULE_ID )
            {
            // InternalSQLParser.g:21838:2: ( RULE_ID )
            // InternalSQLParser.g:21839:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotFunctions__AbcAssignment"


    // $ANTLR start "rule__PivotInClause__SqAssignment_2_0"
    // InternalSQLParser.g:21848:1: rule__PivotInClause__SqAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__PivotInClause__SqAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21852:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:21853:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:21853:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:21854:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__SqAssignment_2_0"


    // $ANTLR start "rule__PivotInClause__ArgsAssignment_2_1"
    // InternalSQLParser.g:21863:1: rule__PivotInClause__ArgsAssignment_2_1 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__PivotInClause__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21867:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSQLParser.g:21868:2: ( ruleUnpivotInClauseArgs )
            {
            // InternalSQLParser.g:21868:2: ( ruleUnpivotInClauseArgs )
            // InternalSQLParser.g:21869:3: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__ArgsAssignment_2_1"


    // $ANTLR start "rule__PivotInClause__PinanyAssignment_2_2"
    // InternalSQLParser.g:21878:1: rule__PivotInClause__PinanyAssignment_2_2 : ( rulePivotInClauseAny ) ;
    public final void rule__PivotInClause__PinanyAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21882:1: ( ( rulePivotInClauseAny ) )
            // InternalSQLParser.g:21883:2: ( rulePivotInClauseAny )
            {
            // InternalSQLParser.g:21883:2: ( rulePivotInClauseAny )
            // InternalSQLParser.g:21884:3: rulePivotInClauseAny
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__PinanyAssignment_2_2"


    // $ANTLR start "rule__UnpivotTable__PcolsAssignment_3"
    // InternalSQLParser.g:21893:1: rule__UnpivotTable__PcolsAssignment_3 : ( rulePivotColumns ) ;
    public final void rule__UnpivotTable__PcolsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21897:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:21898:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:21898:2: ( rulePivotColumns )
            // InternalSQLParser.g:21899:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PcolsAssignment_3"


    // $ANTLR start "rule__UnpivotTable__PforAssignment_4"
    // InternalSQLParser.g:21908:1: rule__UnpivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__UnpivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21912:1: ( ( rulePivotForClause ) )
            // InternalSQLParser.g:21913:2: ( rulePivotForClause )
            {
            // InternalSQLParser.g:21913:2: ( rulePivotForClause )
            // InternalSQLParser.g:21914:3: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PforAssignment_4"


    // $ANTLR start "rule__UnpivotTable__InopAssignment_5"
    // InternalSQLParser.g:21923:1: rule__UnpivotTable__InopAssignment_5 : ( ruleUnpivotInClause ) ;
    public final void rule__UnpivotTable__InopAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21927:1: ( ( ruleUnpivotInClause ) )
            // InternalSQLParser.g:21928:2: ( ruleUnpivotInClause )
            {
            // InternalSQLParser.g:21928:2: ( ruleUnpivotInClause )
            // InternalSQLParser.g:21929:3: ruleUnpivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__InopAssignment_5"


    // $ANTLR start "rule__UnpivotInClause__OpAssignment_1"
    // InternalSQLParser.g:21938:1: rule__UnpivotInClause__OpAssignment_1 : ( ( IN ) ) ;
    public final void rule__UnpivotInClause__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21942:1: ( ( ( IN ) ) )
            // InternalSQLParser.g:21943:2: ( ( IN ) )
            {
            // InternalSQLParser.g:21943:2: ( ( IN ) )
            // InternalSQLParser.g:21944:3: ( IN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            // InternalSQLParser.g:21945:3: ( IN )
            // InternalSQLParser.g:21946:4: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__OpAssignment_1"


    // $ANTLR start "rule__UnpivotInClause__ArgsAssignment_3"
    // InternalSQLParser.g:21957:1: rule__UnpivotInClause__ArgsAssignment_3 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__UnpivotInClause__ArgsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21961:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSQLParser.g:21962:2: ( ruleUnpivotInClauseArgs )
            {
            // InternalSQLParser.g:21962:2: ( ruleUnpivotInClauseArgs )
            // InternalSQLParser.g:21963:3: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__ArgsAssignment_3"


    // $ANTLR start "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21972:1: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21976:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSQLParser.g:21977:2: ( ruleUnpivotInClauseArg )
            {
            // InternalSQLParser.g:21977:2: ( ruleUnpivotInClauseArg )
            // InternalSQLParser.g:21978:3: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__UnpivotInClauseArg__PcolsAssignment_0"
    // InternalSQLParser.g:21987:1: rule__UnpivotInClauseArg__PcolsAssignment_0 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__PcolsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21991:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:21992:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:21992:2: ( rulePivotColumns )
            // InternalSQLParser.g:21993:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__PcolsAssignment_0"


    // $ANTLR start "rule__UnpivotInClauseArg__CfulsAssignment_1_1"
    // InternalSQLParser.g:22002:1: rule__UnpivotInClauseArg__CfulsAssignment_1_1 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__CfulsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22006:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:22007:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:22007:2: ( rulePivotColumns )
            // InternalSQLParser.g:22008:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__CfulsAssignment_1_1"


    // $ANTLR start "rule__PivotCols__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:22017:1: rule__PivotCols__EntriesAssignment_1_1_1 : ( rulePivotCol ) ;
    public final void rule__PivotCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22021:1: ( ( rulePivotCol ) )
            // InternalSQLParser.g:22022:2: ( rulePivotCol )
            {
            // InternalSQLParser.g:22022:2: ( rulePivotCol )
            // InternalSQLParser.g:22023:3: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__PivotCol__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:22032:1: rule__PivotCol__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22036:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:22037:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:22037:2: ( ruleDbObjectName )
            // InternalSQLParser.g:22038:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableFull__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:22047:1: rule__TableFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__TableFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22051:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:22052:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:22052:2: ( ruleDbObjectName )
            // InternalSQLParser.g:22053:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__DbObjectNameAll__DbnameAssignment_0"
    // InternalSQLParser.g:22062:1: rule__DbObjectNameAll__DbnameAssignment_0 : ( ruleDBID ) ;
    public final void rule__DbObjectNameAll__DbnameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22066:1: ( ( ruleDBID ) )
            // InternalSQLParser.g:22067:2: ( ruleDBID )
            {
            // InternalSQLParser.g:22067:2: ( ruleDBID )
            // InternalSQLParser.g:22068:3: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__DbnameAssignment_0"


    // $ANTLR start "rule__DbObjectName__DbnameAssignment"
    // InternalSQLParser.g:22077:1: rule__DbObjectName__DbnameAssignment : ( ruleDBID ) ;
    public final void rule__DbObjectName__DbnameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22081:1: ( ( ruleDBID ) )
            // InternalSQLParser.g:22082:2: ( ruleDBID )
            {
            // InternalSQLParser.g:22082:2: ( ruleDBID )
            // InternalSQLParser.g:22083:3: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectName__DbnameAssignment"


    // $ANTLR start "rule__OrderByColumns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:22092:1: rule__OrderByColumns__EntriesAssignment_1_1_1 : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22096:1: ( ( ruleOrderByColumnFull ) )
            // InternalSQLParser.g:22097:2: ( ruleOrderByColumnFull )
            {
            // InternalSQLParser.g:22097:2: ( ruleOrderByColumnFull )
            // InternalSQLParser.g:22098:3: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderAssignment_0_0"
    // InternalSQLParser.g:22107:1: rule__OrderByColumnFull__ColOrderAssignment_0_0 : ( ruleColumnFull ) ;
    public final void rule__OrderByColumnFull__ColOrderAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22111:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:22112:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:22112:2: ( ruleColumnFull )
            // InternalSQLParser.g:22113:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderAssignment_0_0"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"
    // InternalSQLParser.g:22122:1: rule__OrderByColumnFull__ColOrderIntAssignment_0_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OrderByColumnFull__ColOrderIntAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22126:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:22127:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:22127:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:22128:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAssignment_1"
    // InternalSQLParser.g:22137:1: rule__OrderByColumnFull__DirectionAssignment_1 : ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) ;
    public final void rule__OrderByColumnFull__DirectionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22141:1: ( ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) )
            // InternalSQLParser.g:22142:2: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:22142:2: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            // InternalSQLParser.g:22143:3: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }
            // InternalSQLParser.g:22144:3: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            // InternalSQLParser.g:22144:4: rule__OrderByColumnFull__DirectionAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__DirectionAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAssignment_1"


    // $ANTLR start "rule__GroupByColumns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:22152:1: rule__GroupByColumns__EntriesAssignment_1_1_1 : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22156:1: ( ( ruleGroupByColumnFull ) )
            // InternalSQLParser.g:22157:2: ( ruleGroupByColumnFull )
            {
            // InternalSQLParser.g:22157:2: ( ruleGroupByColumnFull )
            // InternalSQLParser.g:22158:3: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__GroupByColumnFull__ColGrByAssignment_0"
    // InternalSQLParser.g:22167:1: rule__GroupByColumnFull__ColGrByAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__GroupByColumnFull__ColGrByAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22171:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:22172:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:22172:2: ( ruleColumnFull )
            // InternalSQLParser.g:22173:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__ColGrByAssignment_0"


    // $ANTLR start "rule__GroupByColumnFull__GbFunctionAssignment_1"
    // InternalSQLParser.g:22182:1: rule__GroupByColumnFull__GbFunctionAssignment_1 : ( ruleOperandFunction ) ;
    public final void rule__GroupByColumnFull__GbFunctionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22186:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:22187:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:22187:2: ( ruleOperandFunction )
            // InternalSQLParser.g:22188:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GbFunctionAssignment_1"


    // $ANTLR start "rule__GroupByColumnFull__GrByIntAssignment_2"
    // InternalSQLParser.g:22197:1: rule__GroupByColumnFull__GrByIntAssignment_2 : ( RULE_UNSIGNED ) ;
    public final void rule__GroupByColumnFull__GrByIntAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22201:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:22202:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:22202:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:22203:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GrByIntAssignment_2"


    // $ANTLR start "rule__FullExpression__EntriesAssignment_1_1"
    // InternalSQLParser.g:22212:1: rule__FullExpression__EntriesAssignment_1_1 : ( ruleExpressionFragmentSecond ) ;
    public final void rule__FullExpression__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22216:1: ( ( ruleExpressionFragmentSecond ) )
            // InternalSQLParser.g:22217:2: ( ruleExpressionFragmentSecond )
            {
            // InternalSQLParser.g:22217:2: ( ruleExpressionFragmentSecond )
            // InternalSQLParser.g:22218:3: ruleExpressionFragmentSecond
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__EntriesAssignment_1_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAssignment_0_0"
    // InternalSQLParser.g:22227:1: rule__ExpressionFragmentSecond__CAssignment_0_0 : ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__CAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22231:1: ( ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) )
            // InternalSQLParser.g:22232:2: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            {
            // InternalSQLParser.g:22232:2: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            // InternalSQLParser.g:22233:3: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }
            // InternalSQLParser.g:22234:3: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            // InternalSQLParser.g:22234:4: rule__ExpressionFragmentSecond__CAlternatives_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAlternatives_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAssignment_0_0"


    // $ANTLR start "rule__ExpressionFragmentSecond__EfragAssignment_0_1"
    // InternalSQLParser.g:22242:1: rule__ExpressionFragmentSecond__EfragAssignment_0_1 : ( ruleExpressionFragment ) ;
    public final void rule__ExpressionFragmentSecond__EfragAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22246:1: ( ( ruleExpressionFragment ) )
            // InternalSQLParser.g:22247:2: ( ruleExpressionFragment )
            {
            // InternalSQLParser.g:22247:2: ( ruleExpressionFragment )
            // InternalSQLParser.g:22248:3: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__EfragAssignment_0_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__NotPrmAssignment_1"
    // InternalSQLParser.g:22257:1: rule__ExpressionFragmentSecond__NotPrmAssignment_1 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragmentSecond__NotPrmAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22261:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:22262:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:22262:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:22263:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__NotPrmAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__ExpgroupAssignment_0"
    // InternalSQLParser.g:22272:1: rule__ExpressionFragment__ExpgroupAssignment_0 : ( ruleExpressionGroup ) ;
    public final void rule__ExpressionFragment__ExpgroupAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22276:1: ( ( ruleExpressionGroup ) )
            // InternalSQLParser.g:22277:2: ( ruleExpressionGroup )
            {
            // InternalSQLParser.g:22277:2: ( ruleExpressionGroup )
            // InternalSQLParser.g:22278:3: ruleExpressionGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpgroupAssignment_0"


    // $ANTLR start "rule__ExpressionFragment__ExpAssignment_1"
    // InternalSQLParser.g:22287:1: rule__ExpressionFragment__ExpAssignment_1 : ( ruleExpression ) ;
    public final void rule__ExpressionFragment__ExpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22291:1: ( ( ruleExpression ) )
            // InternalSQLParser.g:22292:2: ( ruleExpression )
            {
            // InternalSQLParser.g:22292:2: ( ruleExpression )
            // InternalSQLParser.g:22293:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__XexpAssignment_2"
    // InternalSQLParser.g:22302:1: rule__ExpressionFragment__XexpAssignment_2 : ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) ;
    public final void rule__ExpressionFragment__XexpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22306:1: ( ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) )
            // InternalSQLParser.g:22307:2: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            {
            // InternalSQLParser.g:22307:2: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            // InternalSQLParser.g:22308:3: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }
            // InternalSQLParser.g:22309:3: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            // InternalSQLParser.g:22309:4: rule__ExpressionFragment__XexpAlternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__XexpAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAssignment_2"


    // $ANTLR start "rule__ExpressionFragment__NotPrmAssignment_3"
    // InternalSQLParser.g:22317:1: rule__ExpressionFragment__NotPrmAssignment_3 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragment__NotPrmAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22321:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:22322:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:22322:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:22323:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__NotPrmAssignment_3"


    // $ANTLR start "rule__ExpressionFragment__InAssignment_4"
    // InternalSQLParser.g:22332:1: rule__ExpressionFragment__InAssignment_4 : ( ruleInOperator ) ;
    public final void rule__ExpressionFragment__InAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22336:1: ( ( ruleInOperator ) )
            // InternalSQLParser.g:22337:2: ( ruleInOperator )
            {
            // InternalSQLParser.g:22337:2: ( ruleInOperator )
            // InternalSQLParser.g:22338:3: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__InAssignment_4"


    // $ANTLR start "rule__ExpressionFragment__ExistsAssignment_5"
    // InternalSQLParser.g:22347:1: rule__ExpressionFragment__ExistsAssignment_5 : ( ruleExistsOperator ) ;
    public final void rule__ExpressionFragment__ExistsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22351:1: ( ( ruleExistsOperator ) )
            // InternalSQLParser.g:22352:2: ( ruleExistsOperator )
            {
            // InternalSQLParser.g:22352:2: ( ruleExistsOperator )
            // InternalSQLParser.g:22353:3: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExistsAssignment_5"


    // $ANTLR start "rule__ExpressionGroup__IsnotAssignment_1"
    // InternalSQLParser.g:22362:1: rule__ExpressionGroup__IsnotAssignment_1 : ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) ;
    public final void rule__ExpressionGroup__IsnotAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22366:1: ( ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) )
            // InternalSQLParser.g:22367:2: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:22367:2: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            // InternalSQLParser.g:22368:3: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }
            // InternalSQLParser.g:22369:3: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            // InternalSQLParser.g:22369:4: rule__ExpressionGroup__IsnotAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__IsnotAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAssignment_1"


    // $ANTLR start "rule__ExpressionGroup__ExprAssignment_3"
    // InternalSQLParser.g:22377:1: rule__ExpressionGroup__ExprAssignment_3 : ( ruleFullExpression ) ;
    public final void rule__ExpressionGroup__ExprAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22381:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:22382:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:22382:2: ( ruleFullExpression )
            // InternalSQLParser.g:22383:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__ExprAssignment_3"


    // $ANTLR start "rule__XExpression__XfAssignment_2"
    // InternalSQLParser.g:22392:1: rule__XExpression__XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression__XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22396:1: ( ( ruleXFunction ) )
            // InternalSQLParser.g:22397:2: ( ruleXFunction )
            {
            // InternalSQLParser.g:22397:2: ( ruleXFunction )
            // InternalSQLParser.g:22398:3: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__XfAssignment_2"


    // $ANTLR start "rule__XExpression__ColAssignment_4"
    // InternalSQLParser.g:22407:1: rule__XExpression__ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression__ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22411:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:22412:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:22412:2: ( ruleOperandGroup )
            // InternalSQLParser.g:22413:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__ColAssignment_4"


    // $ANTLR start "rule__XExpression__PrmAssignment_5_1"
    // InternalSQLParser.g:22422:1: rule__XExpression__PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression__PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22426:1: ( ( ruleXExpressionParams ) )
            // InternalSQLParser.g:22427:2: ( ruleXExpressionParams )
            {
            // InternalSQLParser.g:22427:2: ( ruleXExpressionParams )
            // InternalSQLParser.g:22428:3: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__PrmAssignment_5_1"


    // $ANTLR start "rule__XExpression___XfAssignment_2"
    // InternalSQLParser.g:22437:1: rule__XExpression___XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression___XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22441:1: ( ( ruleXFunction ) )
            // InternalSQLParser.g:22442:2: ( ruleXFunction )
            {
            // InternalSQLParser.g:22442:2: ( ruleXFunction )
            // InternalSQLParser.g:22443:3: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___XfAssignment_2"


    // $ANTLR start "rule__XExpression___ColAssignment_4"
    // InternalSQLParser.g:22452:1: rule__XExpression___ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression___ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22456:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:22457:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:22457:2: ( ruleOperandGroup )
            // InternalSQLParser.g:22458:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___ColAssignment_4"


    // $ANTLR start "rule__XExpression___PrmAssignment_5_1"
    // InternalSQLParser.g:22467:1: rule__XExpression___PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression___PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22471:1: ( ( ruleXExpressionParams ) )
            // InternalSQLParser.g:22472:2: ( ruleXExpressionParams )
            {
            // InternalSQLParser.g:22472:2: ( ruleXExpressionParams )
            // InternalSQLParser.g:22473:3: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___PrmAssignment_5_1"


    // $ANTLR start "rule__XExpressionParams__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:22482:1: rule__XExpressionParams__EntriesAssignment_1_1_1 : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22486:1: ( ( ruleJRParameter ) )
            // InternalSQLParser.g:22487:2: ( ruleJRParameter )
            {
            // InternalSQLParser.g:22487:2: ( ruleJRParameter )
            // InternalSQLParser.g:22488:3: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__JRParameter__JrprmAssignment"
    // InternalSQLParser.g:22497:1: rule__JRParameter__JrprmAssignment : ( RULE_ID ) ;
    public final void rule__JRParameter__JrprmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22501:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:22502:2: ( RULE_ID )
            {
            // InternalSQLParser.g:22502:2: ( RULE_ID )
            // InternalSQLParser.g:22503:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JRParameter__JrprmAssignment"


    // $ANTLR start "rule__Expression__Op1Assignment_0"
    // InternalSQLParser.g:22512:1: rule__Expression__Op1Assignment_0 : ( ruleOperand ) ;
    public final void rule__Expression__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22516:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:22517:2: ( ruleOperand )
            {
            // InternalSQLParser.g:22517:2: ( ruleOperand )
            // InternalSQLParser.g:22518:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Op1Assignment_0"


    // $ANTLR start "rule__Expression__IsnullAssignment_1_0"
    // InternalSQLParser.g:22527:1: rule__Expression__IsnullAssignment_1_0 : ( ruleIsNullValue ) ;
    public final void rule__Expression__IsnullAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22531:1: ( ( ruleIsNullValue ) )
            // InternalSQLParser.g:22532:2: ( ruleIsNullValue )
            {
            // InternalSQLParser.g:22532:2: ( ruleIsNullValue )
            // InternalSQLParser.g:22533:3: ruleIsNullValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__IsnullAssignment_1_0"


    // $ANTLR start "rule__Expression__InAssignment_1_1"
    // InternalSQLParser.g:22542:1: rule__Expression__InAssignment_1_1 : ( ruleInOperator ) ;
    public final void rule__Expression__InAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22546:1: ( ( ruleInOperator ) )
            // InternalSQLParser.g:22547:2: ( ruleInOperator )
            {
            // InternalSQLParser.g:22547:2: ( ruleInOperator )
            // InternalSQLParser.g:22548:3: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__InAssignment_1_1"


    // $ANTLR start "rule__Expression__ExistsAssignment_1_2"
    // InternalSQLParser.g:22557:1: rule__Expression__ExistsAssignment_1_2 : ( ruleExistsOperator ) ;
    public final void rule__Expression__ExistsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22561:1: ( ( ruleExistsOperator ) )
            // InternalSQLParser.g:22562:2: ( ruleExistsOperator )
            {
            // InternalSQLParser.g:22562:2: ( ruleExistsOperator )
            // InternalSQLParser.g:22563:3: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExistsAssignment_1_2"


    // $ANTLR start "rule__Expression__BetweenAssignment_1_3"
    // InternalSQLParser.g:22572:1: rule__Expression__BetweenAssignment_1_3 : ( ruleBetween ) ;
    public final void rule__Expression__BetweenAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22576:1: ( ( ruleBetween ) )
            // InternalSQLParser.g:22577:2: ( ruleBetween )
            {
            // InternalSQLParser.g:22577:2: ( ruleBetween )
            // InternalSQLParser.g:22578:3: ruleBetween
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__BetweenAssignment_1_3"


    // $ANTLR start "rule__Expression__LikeAssignment_1_4"
    // InternalSQLParser.g:22587:1: rule__Expression__LikeAssignment_1_4 : ( ruleLike ) ;
    public final void rule__Expression__LikeAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22591:1: ( ( ruleLike ) )
            // InternalSQLParser.g:22592:2: ( ruleLike )
            {
            // InternalSQLParser.g:22592:2: ( ruleLike )
            // InternalSQLParser.g:22593:3: ruleLike
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__LikeAssignment_1_4"


    // $ANTLR start "rule__Expression__CompAssignment_1_5"
    // InternalSQLParser.g:22602:1: rule__Expression__CompAssignment_1_5 : ( ruleComparison ) ;
    public final void rule__Expression__CompAssignment_1_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22606:1: ( ( ruleComparison ) )
            // InternalSQLParser.g:22607:2: ( ruleComparison )
            {
            // InternalSQLParser.g:22607:2: ( ruleComparison )
            // InternalSQLParser.g:22608:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__CompAssignment_1_5"


    // $ANTLR start "rule__Comparison__OperatorAssignment_0"
    // InternalSQLParser.g:22617:1: rule__Comparison__OperatorAssignment_0 : ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) ;
    public final void rule__Comparison__OperatorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22621:1: ( ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) )
            // InternalSQLParser.g:22622:2: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            {
            // InternalSQLParser.g:22622:2: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            // InternalSQLParser.g:22623:3: ( rule__Comparison__OperatorAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }
            // InternalSQLParser.g:22624:3: ( rule__Comparison__OperatorAlternatives_0_0 )
            // InternalSQLParser.g:22624:4: rule__Comparison__OperatorAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAssignment_0"


    // $ANTLR start "rule__Comparison__SubOperatorAssignment_1"
    // InternalSQLParser.g:22632:1: rule__Comparison__SubOperatorAssignment_1 : ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) ;
    public final void rule__Comparison__SubOperatorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22636:1: ( ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) )
            // InternalSQLParser.g:22637:2: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:22637:2: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            // InternalSQLParser.g:22638:3: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }
            // InternalSQLParser.g:22639:3: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            // InternalSQLParser.g:22639:4: rule__Comparison__SubOperatorAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__SubOperatorAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAssignment_1"


    // $ANTLR start "rule__Comparison__Op2Assignment_2"
    // InternalSQLParser.g:22647:1: rule__Comparison__Op2Assignment_2 : ( ruleOperand ) ;
    public final void rule__Comparison__Op2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22651:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:22652:2: ( ruleOperand )
            {
            // InternalSQLParser.g:22652:2: ( ruleOperand )
            // InternalSQLParser.g:22653:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Op2Assignment_2"


    // $ANTLR start "rule__Like__OpLikeAssignment_0"
    // InternalSQLParser.g:22662:1: rule__Like__OpLikeAssignment_0 : ( ruleLikeValue ) ;
    public final void rule__Like__OpLikeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22666:1: ( ( ruleLikeValue ) )
            // InternalSQLParser.g:22667:2: ( ruleLikeValue )
            {
            // InternalSQLParser.g:22667:2: ( ruleLikeValue )
            // InternalSQLParser.g:22668:3: ruleLikeValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__OpLikeAssignment_0"


    // $ANTLR start "rule__Like__Op2Assignment_1"
    // InternalSQLParser.g:22677:1: rule__Like__Op2Assignment_1 : ( ruleLikeOperand ) ;
    public final void rule__Like__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22681:1: ( ( ruleLikeOperand ) )
            // InternalSQLParser.g:22682:2: ( ruleLikeOperand )
            {
            // InternalSQLParser.g:22682:2: ( ruleLikeOperand )
            // InternalSQLParser.g:22683:3: ruleLikeOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Op2Assignment_1"


    // $ANTLR start "rule__LikeOperand__Op2Assignment_0"
    // InternalSQLParser.g:22692:1: rule__LikeOperand__Op2Assignment_0 : ( ruleStringOperand ) ;
    public final void rule__LikeOperand__Op2Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22696:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:22697:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:22697:2: ( ruleStringOperand )
            // InternalSQLParser.g:22698:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Op2Assignment_0"


    // $ANTLR start "rule__LikeOperand__Fop2Assignment_1"
    // InternalSQLParser.g:22707:1: rule__LikeOperand__Fop2Assignment_1 : ( ruleOperandFunction ) ;
    public final void rule__LikeOperand__Fop2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22711:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:22712:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:22712:2: ( ruleOperandFunction )
            // InternalSQLParser.g:22713:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Fop2Assignment_1"


    // $ANTLR start "rule__LikeOperand__FcastAssignment_2"
    // InternalSQLParser.g:22722:1: rule__LikeOperand__FcastAssignment_2 : ( ruleOpFunctionCast ) ;
    public final void rule__LikeOperand__FcastAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22726:1: ( ( ruleOpFunctionCast ) )
            // InternalSQLParser.g:22727:2: ( ruleOpFunctionCast )
            {
            // InternalSQLParser.g:22727:2: ( ruleOpFunctionCast )
            // InternalSQLParser.g:22728:3: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FcastAssignment_2"


    // $ANTLR start "rule__LikeOperand__FparamAssignment_3"
    // InternalSQLParser.g:22737:1: rule__LikeOperand__FparamAssignment_3 : ( ruleParameterOperand ) ;
    public final void rule__LikeOperand__FparamAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22741:1: ( ( ruleParameterOperand ) )
            // InternalSQLParser.g:22742:2: ( ruleParameterOperand )
            {
            // InternalSQLParser.g:22742:2: ( ruleParameterOperand )
            // InternalSQLParser.g:22743:3: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FparamAssignment_3"


    // $ANTLR start "rule__Between__OpBetweenAssignment_0"
    // InternalSQLParser.g:22752:1: rule__Between__OpBetweenAssignment_0 : ( ruleBetweenValue ) ;
    public final void rule__Between__OpBetweenAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22756:1: ( ( ruleBetweenValue ) )
            // InternalSQLParser.g:22757:2: ( ruleBetweenValue )
            {
            // InternalSQLParser.g:22757:2: ( ruleBetweenValue )
            // InternalSQLParser.g:22758:3: ruleBetweenValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__OpBetweenAssignment_0"


    // $ANTLR start "rule__Between__Op2Assignment_1"
    // InternalSQLParser.g:22767:1: rule__Between__Op2Assignment_1 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22771:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:22772:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:22772:2: ( ruleOperandGroup )
            // InternalSQLParser.g:22773:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op2Assignment_1"


    // $ANTLR start "rule__Between__Op3Assignment_3"
    // InternalSQLParser.g:22782:1: rule__Between__Op3Assignment_3 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op3Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22786:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:22787:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:22787:2: ( ruleOperandGroup )
            // InternalSQLParser.g:22788:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op3Assignment_3"


    // $ANTLR start "rule__InOperator__OpAssignment_1"
    // InternalSQLParser.g:22797:1: rule__InOperator__OpAssignment_1 : ( ruleInValue ) ;
    public final void rule__InOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22801:1: ( ( ruleInValue ) )
            // InternalSQLParser.g:22802:2: ( ruleInValue )
            {
            // InternalSQLParser.g:22802:2: ( ruleInValue )
            // InternalSQLParser.g:22803:3: ruleInValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpAssignment_1"


    // $ANTLR start "rule__InOperator__SubqueryAssignment_2_0"
    // InternalSQLParser.g:22812:1: rule__InOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__InOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22816:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:22817:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:22817:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:22818:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__InOperator__OpListAssignment_2_1"
    // InternalSQLParser.g:22827:1: rule__InOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__InOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22831:1: ( ( ruleOperandListGroup ) )
            // InternalSQLParser.g:22832:2: ( ruleOperandListGroup )
            {
            // InternalSQLParser.g:22832:2: ( ruleOperandListGroup )
            // InternalSQLParser.g:22833:3: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__ExistsOperator__OpAssignment_1"
    // InternalSQLParser.g:22842:1: rule__ExistsOperator__OpAssignment_1 : ( ruleExistsValue ) ;
    public final void rule__ExistsOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22846:1: ( ( ruleExistsValue ) )
            // InternalSQLParser.g:22847:2: ( ruleExistsValue )
            {
            // InternalSQLParser.g:22847:2: ( ruleExistsValue )
            // InternalSQLParser.g:22848:3: ruleExistsValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpAssignment_1"


    // $ANTLR start "rule__ExistsOperator__SubqueryAssignment_2_0"
    // InternalSQLParser.g:22857:1: rule__ExistsOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__ExistsOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22861:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:22862:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:22862:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:22863:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__ExistsOperator__OpListAssignment_2_1"
    // InternalSQLParser.g:22872:1: rule__ExistsOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__ExistsOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22876:1: ( ( ruleOperandListGroup ) )
            // InternalSQLParser.g:22877:2: ( ruleOperandListGroup )
            {
            // InternalSQLParser.g:22877:2: ( ruleOperandListGroup )
            // InternalSQLParser.g:22878:3: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__OperandListGroup__OpGroupAssignment_1"
    // InternalSQLParser.g:22887:1: rule__OperandListGroup__OpGroupAssignment_1 : ( ruleOperandList ) ;
    public final void rule__OperandListGroup__OpGroupAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22891:1: ( ( ruleOperandList ) )
            // InternalSQLParser.g:22892:2: ( ruleOperandList )
            {
            // InternalSQLParser.g:22892:2: ( ruleOperandList )
            // InternalSQLParser.g:22893:3: ruleOperandList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__OpGroupAssignment_1"


    // $ANTLR start "rule__OperandList__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:22902:1: rule__OperandList__EntriesAssignment_1_1_1 : ( ruleScalarOperand ) ;
    public final void rule__OperandList__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22906:1: ( ( ruleScalarOperand ) )
            // InternalSQLParser.g:22907:2: ( ruleScalarOperand )
            {
            // InternalSQLParser.g:22907:2: ( ruleScalarOperand )
            // InternalSQLParser.g:22908:3: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Operand__Op1Assignment_0"
    // InternalSQLParser.g:22917:1: rule__Operand__Op1Assignment_0 : ( ruleOperandFragment ) ;
    public final void rule__Operand__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22921:1: ( ( ruleOperandFragment ) )
            // InternalSQLParser.g:22922:2: ( ruleOperandFragment )
            {
            // InternalSQLParser.g:22922:2: ( ruleOperandFragment )
            // InternalSQLParser.g:22923:3: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Op1Assignment_0"


    // $ANTLR start "rule__Operand__RightAssignment_1_1"
    // InternalSQLParser.g:22932:1: rule__Operand__RightAssignment_1_1 : ( ruleOperandFragment ) ;
    public final void rule__Operand__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22936:1: ( ( ruleOperandFragment ) )
            // InternalSQLParser.g:22937:2: ( ruleOperandFragment )
            {
            // InternalSQLParser.g:22937:2: ( ruleOperandFragment )
            // InternalSQLParser.g:22938:3: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__RightAssignment_1_1"


    // $ANTLR start "rule__OperandFragment__ColumnAssignment_0"
    // InternalSQLParser.g:22947:1: rule__OperandFragment__ColumnAssignment_0 : ( ruleColumnOperand ) ;
    public final void rule__OperandFragment__ColumnAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22951:1: ( ( ruleColumnOperand ) )
            // InternalSQLParser.g:22952:2: ( ruleColumnOperand )
            {
            // InternalSQLParser.g:22952:2: ( ruleColumnOperand )
            // InternalSQLParser.g:22953:3: ruleColumnOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__ColumnAssignment_0"


    // $ANTLR start "rule__OperandFragment__XopAssignment_1"
    // InternalSQLParser.g:22962:1: rule__OperandFragment__XopAssignment_1 : ( ruleXOperandFragment ) ;
    public final void rule__OperandFragment__XopAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22966:1: ( ( ruleXOperandFragment ) )
            // InternalSQLParser.g:22967:2: ( ruleXOperandFragment )
            {
            // InternalSQLParser.g:22967:2: ( ruleXOperandFragment )
            // InternalSQLParser.g:22968:3: ruleXOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__XopAssignment_1"


    // $ANTLR start "rule__OperandFragment__SubqAssignment_2"
    // InternalSQLParser.g:22977:1: rule__OperandFragment__SubqAssignment_2 : ( ruleSubQueryOperand ) ;
    public final void rule__OperandFragment__SubqAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22981:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:22982:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:22982:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:22983:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SubqAssignment_2"


    // $ANTLR start "rule__OperandFragment__FcastAssignment_3"
    // InternalSQLParser.g:22992:1: rule__OperandFragment__FcastAssignment_3 : ( ruleOpFunctionCast ) ;
    public final void rule__OperandFragment__FcastAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22996:1: ( ( ruleOpFunctionCast ) )
            // InternalSQLParser.g:22997:2: ( ruleOpFunctionCast )
            {
            // InternalSQLParser.g:22997:2: ( ruleOpFunctionCast )
            // InternalSQLParser.g:22998:3: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FcastAssignment_3"


    // $ANTLR start "rule__OperandFragment__FextAssignment_4"
    // InternalSQLParser.g:23007:1: rule__OperandFragment__FextAssignment_4 : ( ruleFunctionExtract ) ;
    public final void rule__OperandFragment__FextAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23011:1: ( ( ruleFunctionExtract ) )
            // InternalSQLParser.g:23012:2: ( ruleFunctionExtract )
            {
            // InternalSQLParser.g:23012:2: ( ruleFunctionExtract )
            // InternalSQLParser.g:23013:3: ruleFunctionExtract
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FextAssignment_4"


    // $ANTLR start "rule__OperandFragment__FuncAssignment_5"
    // InternalSQLParser.g:23022:1: rule__OperandFragment__FuncAssignment_5 : ( ruleOperandFunction ) ;
    public final void rule__OperandFragment__FuncAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23026:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:23027:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:23027:2: ( ruleOperandFunction )
            // InternalSQLParser.g:23028:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FuncAssignment_5"


    // $ANTLR start "rule__OperandFragment__SqlcaseAssignment_6"
    // InternalSQLParser.g:23037:1: rule__OperandFragment__SqlcaseAssignment_6 : ( ruleSQLCASE ) ;
    public final void rule__OperandFragment__SqlcaseAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23041:1: ( ( ruleSQLCASE ) )
            // InternalSQLParser.g:23042:2: ( ruleSQLCASE )
            {
            // InternalSQLParser.g:23042:2: ( ruleSQLCASE )
            // InternalSQLParser.g:23043:3: ruleSQLCASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SqlcaseAssignment_6"


    // $ANTLR start "rule__OperandFragment__BoolLiteralAssignment_7"
    // InternalSQLParser.g:23052:1: rule__OperandFragment__BoolLiteralAssignment_7 : ( ruleBoolLiteral ) ;
    public final void rule__OperandFragment__BoolLiteralAssignment_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23056:1: ( ( ruleBoolLiteral ) )
            // InternalSQLParser.g:23057:2: ( ruleBoolLiteral )
            {
            // InternalSQLParser.g:23057:2: ( ruleBoolLiteral )
            // InternalSQLParser.g:23058:3: ruleBoolLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getBoolLiteralBoolLiteralParserRuleCall_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBoolLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getBoolLiteralBoolLiteralParserRuleCall_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__BoolLiteralAssignment_7"


    // $ANTLR start "rule__OperandFunction__FnameAssignment_1"
    // InternalSQLParser.g:23067:1: rule__OperandFunction__FnameAssignment_1 : ( ruleFNAME ) ;
    public final void rule__OperandFunction__FnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23071:1: ( ( ruleFNAME ) )
            // InternalSQLParser.g:23072:2: ( ruleFNAME )
            {
            // InternalSQLParser.g:23072:2: ( ruleFNAME )
            // InternalSQLParser.g:23073:3: ruleFNAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FnameAssignment_1"


    // $ANTLR start "rule__OperandFunction__StarAssignment_2_0"
    // InternalSQLParser.g:23082:1: rule__OperandFunction__StarAssignment_2_0 : ( RULE_STAR ) ;
    public final void rule__OperandFunction__StarAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23086:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:23087:2: ( RULE_STAR )
            {
            // InternalSQLParser.g:23087:2: ( RULE_STAR )
            // InternalSQLParser.g:23088:3: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__StarAssignment_2_0"


    // $ANTLR start "rule__OperandFunction__ArgsAssignment_2_1"
    // InternalSQLParser.g:23097:1: rule__OperandFunction__ArgsAssignment_2_1 : ( ruleOpFunctionArg ) ;
    public final void rule__OperandFunction__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23101:1: ( ( ruleOpFunctionArg ) )
            // InternalSQLParser.g:23102:2: ( ruleOpFunctionArg )
            {
            // InternalSQLParser.g:23102:2: ( ruleOpFunctionArg )
            // InternalSQLParser.g:23103:3: ruleOpFunctionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__ArgsAssignment_2_1"


    // $ANTLR start "rule__OperandFunction__FanAssignment_4"
    // InternalSQLParser.g:23112:1: rule__OperandFunction__FanAssignment_4 : ( ruleFunctionAnalytical ) ;
    public final void rule__OperandFunction__FanAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23116:1: ( ( ruleFunctionAnalytical ) )
            // InternalSQLParser.g:23117:2: ( ruleFunctionAnalytical )
            {
            // InternalSQLParser.g:23117:2: ( ruleFunctionAnalytical )
            // InternalSQLParser.g:23118:3: ruleFunctionAnalytical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FanAssignment_4"


    // $ANTLR start "rule__FunctionExtract__VAssignment_2"
    // InternalSQLParser.g:23127:1: rule__FunctionExtract__VAssignment_2 : ( ruleEXTRACT_VALUES ) ;
    public final void rule__FunctionExtract__VAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23131:1: ( ( ruleEXTRACT_VALUES ) )
            // InternalSQLParser.g:23132:2: ( ruleEXTRACT_VALUES )
            {
            // InternalSQLParser.g:23132:2: ( ruleEXTRACT_VALUES )
            // InternalSQLParser.g:23133:3: ruleEXTRACT_VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEXTRACT_VALUES();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__VAssignment_2"


    // $ANTLR start "rule__FunctionExtract__OperandAssignment_4"
    // InternalSQLParser.g:23142:1: rule__FunctionExtract__OperandAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__FunctionExtract__OperandAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23146:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:23147:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:23147:2: ( ruleOperandGroup )
            // InternalSQLParser.g:23148:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__OperandAssignment_4"


    // $ANTLR start "rule__FunctionAnalytical__AnClauseAssignment_2"
    // InternalSQLParser.g:23157:1: rule__FunctionAnalytical__AnClauseAssignment_2 : ( ruleAnalyticClause ) ;
    public final void rule__FunctionAnalytical__AnClauseAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23161:1: ( ( ruleAnalyticClause ) )
            // InternalSQLParser.g:23162:2: ( ruleAnalyticClause )
            {
            // InternalSQLParser.g:23162:2: ( ruleAnalyticClause )
            // InternalSQLParser.g:23163:3: ruleAnalyticClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__AnClauseAssignment_2"


    // $ANTLR start "rule__AnalyticClause__AbcAssignment_1"
    // InternalSQLParser.g:23172:1: rule__AnalyticClause__AbcAssignment_1 : ( ruleQueryPartitionClause ) ;
    public final void rule__AnalyticClause__AbcAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23176:1: ( ( ruleQueryPartitionClause ) )
            // InternalSQLParser.g:23177:2: ( ruleQueryPartitionClause )
            {
            // InternalSQLParser.g:23177:2: ( ruleQueryPartitionClause )
            // InternalSQLParser.g:23178:3: ruleQueryPartitionClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__AbcAssignment_1"


    // $ANTLR start "rule__AnalyticClause__ObcAssignment_2_0"
    // InternalSQLParser.g:23187:1: rule__AnalyticClause__ObcAssignment_2_0 : ( ruleOrderByClause ) ;
    public final void rule__AnalyticClause__ObcAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23191:1: ( ( ruleOrderByClause ) )
            // InternalSQLParser.g:23192:2: ( ruleOrderByClause )
            {
            // InternalSQLParser.g:23192:2: ( ruleOrderByClause )
            // InternalSQLParser.g:23193:3: ruleOrderByClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__ObcAssignment_2_0"


    // $ANTLR start "rule__AnalyticClause__WincAssignment_2_1"
    // InternalSQLParser.g:23202:1: rule__AnalyticClause__WincAssignment_2_1 : ( ruleWindowingClause ) ;
    public final void rule__AnalyticClause__WincAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23206:1: ( ( ruleWindowingClause ) )
            // InternalSQLParser.g:23207:2: ( ruleWindowingClause )
            {
            // InternalSQLParser.g:23207:2: ( ruleWindowingClause )
            // InternalSQLParser.g:23208:3: ruleWindowingClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__WincAssignment_2_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoPAssignment_1"
    // InternalSQLParser.g:23217:1: rule__WindowingClauseBetween__WcoPAssignment_1 : ( ruleWindowingClauseOperandPreceding ) ;
    public final void rule__WindowingClauseBetween__WcoPAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23221:1: ( ( ruleWindowingClauseOperandPreceding ) )
            // InternalSQLParser.g:23222:2: ( ruleWindowingClauseOperandPreceding )
            {
            // InternalSQLParser.g:23222:2: ( ruleWindowingClauseOperandPreceding )
            // InternalSQLParser.g:23223:3: ruleWindowingClauseOperandPreceding
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoPAssignment_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoFAssignment_3"
    // InternalSQLParser.g:23232:1: rule__WindowingClauseBetween__WcoFAssignment_3 : ( ruleWindowingClauseOperandFollowing ) ;
    public final void rule__WindowingClauseBetween__WcoFAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23236:1: ( ( ruleWindowingClauseOperandFollowing ) )
            // InternalSQLParser.g:23237:2: ( ruleWindowingClauseOperandFollowing )
            {
            // InternalSQLParser.g:23237:2: ( ruleWindowingClauseOperandFollowing )
            // InternalSQLParser.g:23238:3: ruleWindowingClauseOperandFollowing
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoFAssignment_3"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"
    // InternalSQLParser.g:23247:1: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23251:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:23252:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:23252:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:23253:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"
    // InternalSQLParser.g:23262:1: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23266:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:23267:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:23267:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:23268:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"


    // $ANTLR start "rule__OrderByClause__ArgsAssignment_1"
    // InternalSQLParser.g:23277:1: rule__OrderByClause__ArgsAssignment_1 : ( ruleOrderByClauseArgs ) ;
    public final void rule__OrderByClause__ArgsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23281:1: ( ( ruleOrderByClauseArgs ) )
            // InternalSQLParser.g:23282:2: ( ruleOrderByClauseArgs )
            {
            // InternalSQLParser.g:23282:2: ( ruleOrderByClauseArgs )
            // InternalSQLParser.g:23283:3: ruleOrderByClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__ArgsAssignment_1"


    // $ANTLR start "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:23292:1: rule__OrderByClauseArgs__EntriesAssignment_1_1_1 : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23296:1: ( ( ruleOrderByClauseArg ) )
            // InternalSQLParser.g:23297:2: ( ruleOrderByClauseArg )
            {
            // InternalSQLParser.g:23297:2: ( ruleOrderByClauseArg )
            // InternalSQLParser.g:23298:3: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByClauseArg__ColAssignment_0"
    // InternalSQLParser.g:23307:1: rule__OrderByClauseArg__ColAssignment_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__OrderByClauseArg__ColAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23311:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:23312:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:23312:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:23313:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__ColAssignment_0"


    // $ANTLR start "rule__QueryPartitionClause__ArgsAssignment_2_0"
    // InternalSQLParser.g:23322:1: rule__QueryPartitionClause__ArgsAssignment_2_0 : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__ArgsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23326:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSQLParser.g:23327:2: ( ruleAnalyticExprArgs )
            {
            // InternalSQLParser.g:23327:2: ( ruleAnalyticExprArgs )
            // InternalSQLParser.g:23328:3: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__ArgsAssignment_2_0"


    // $ANTLR start "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:23337:1: rule__AnalyticExprArgs__EntriesAssignment_1_1_1 : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23341:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:23342:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:23342:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:23343:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__AnalyticExprArg__CeAssignment_0"
    // InternalSQLParser.g:23352:1: rule__AnalyticExprArg__CeAssignment_0 : ( ruleOperand ) ;
    public final void rule__AnalyticExprArg__CeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23356:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:23357:2: ( ruleOperand )
            {
            // InternalSQLParser.g:23357:2: ( ruleOperand )
            // InternalSQLParser.g:23358:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__CeAssignment_0"


    // $ANTLR start "rule__AnalyticExprArg__ColAliasAssignment_1"
    // InternalSQLParser.g:23367:1: rule__AnalyticExprArg__ColAliasAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__AnalyticExprArg__ColAliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23371:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:23372:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:23372:2: ( ruleDbObjectName )
            // InternalSQLParser.g:23373:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__ColAliasAssignment_1"


    // $ANTLR start "rule__OpFunctionArg__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:23382:1: rule__OpFunctionArg__EntriesAssignment_1_1_1 : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23386:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSQLParser.g:23387:2: ( ruleOpFunctionArgOperand )
            {
            // InternalSQLParser.g:23387:2: ( ruleOpFunctionArgOperand )
            // InternalSQLParser.g:23388:3: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAssignment"
    // InternalSQLParser.g:23397:1: rule__OpFunctionArgOperand__OpAssignment : ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) ;
    public final void rule__OpFunctionArgOperand__OpAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23401:1: ( ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) )
            // InternalSQLParser.g:23402:2: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            {
            // InternalSQLParser.g:23402:2: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            // InternalSQLParser.g:23403:3: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }
            // InternalSQLParser.g:23404:3: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            // InternalSQLParser.g:23404:4: rule__OpFunctionArgOperand__OpAlternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAlternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAssignment"


    // $ANTLR start "rule__OpFunctionCast__OpAssignment_1"
    // InternalSQLParser.g:23412:1: rule__OpFunctionCast__OpAssignment_1 : ( ruleOperandGroup ) ;
    public final void rule__OpFunctionCast__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23416:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:23417:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:23417:2: ( ruleOperandGroup )
            // InternalSQLParser.g:23418:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__OpAssignment_1"


    // $ANTLR start "rule__OpFunctionCast__TypeAssignment_3"
    // InternalSQLParser.g:23427:1: rule__OpFunctionCast__TypeAssignment_3 : ( RULE_ID ) ;
    public final void rule__OpFunctionCast__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23431:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:23432:2: ( RULE_ID )
            {
            // InternalSQLParser.g:23432:2: ( RULE_ID )
            // InternalSQLParser.g:23433:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__TypeAssignment_3"


    // $ANTLR start "rule__OpFunctionCast__PAssignment_4_1"
    // InternalSQLParser.g:23442:1: rule__OpFunctionCast__PAssignment_4_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__PAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23446:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:23447:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:23447:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:23448:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__PAssignment_4_1"


    // $ANTLR start "rule__OpFunctionCast__P2Assignment_4_2_1"
    // InternalSQLParser.g:23457:1: rule__OpFunctionCast__P2Assignment_4_2_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__P2Assignment_4_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23461:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:23462:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:23462:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:23463:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__P2Assignment_4_2_1"


    // $ANTLR start "rule__XOperandFragment__ParamAssignment_0"
    // InternalSQLParser.g:23472:1: rule__XOperandFragment__ParamAssignment_0 : ( ruleParameterOperand ) ;
    public final void rule__XOperandFragment__ParamAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23476:1: ( ( ruleParameterOperand ) )
            // InternalSQLParser.g:23477:2: ( ruleParameterOperand )
            {
            // InternalSQLParser.g:23477:2: ( ruleParameterOperand )
            // InternalSQLParser.g:23478:3: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ParamAssignment_0"


    // $ANTLR start "rule__XOperandFragment__EparamAssignment_1"
    // InternalSQLParser.g:23487:1: rule__XOperandFragment__EparamAssignment_1 : ( ruleExclamationParameterOperand ) ;
    public final void rule__XOperandFragment__EparamAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23491:1: ( ( ruleExclamationParameterOperand ) )
            // InternalSQLParser.g:23492:2: ( ruleExclamationParameterOperand )
            {
            // InternalSQLParser.g:23492:2: ( ruleExclamationParameterOperand )
            // InternalSQLParser.g:23493:3: ruleExclamationParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__EparamAssignment_1"


    // $ANTLR start "rule__XOperandFragment__ScalarAssignment_2"
    // InternalSQLParser.g:23502:1: rule__XOperandFragment__ScalarAssignment_2 : ( ruleScalarNumberOperand ) ;
    public final void rule__XOperandFragment__ScalarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23506:1: ( ( ruleScalarNumberOperand ) )
            // InternalSQLParser.g:23507:2: ( ruleScalarNumberOperand )
            {
            // InternalSQLParser.g:23507:2: ( ruleScalarNumberOperand )
            // InternalSQLParser.g:23508:3: ruleScalarNumberOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ScalarAssignment_2"


    // $ANTLR start "rule__ParameterOperand__PrmAssignment"
    // InternalSQLParser.g:23517:1: rule__ParameterOperand__PrmAssignment : ( RULE_JRPARAM ) ;
    public final void rule__ParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23521:1: ( ( RULE_JRPARAM ) )
            // InternalSQLParser.g:23522:2: ( RULE_JRPARAM )
            {
            // InternalSQLParser.g:23522:2: ( RULE_JRPARAM )
            // InternalSQLParser.g:23523:3: RULE_JRPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ExclamationParameterOperand__PrmAssignment"
    // InternalSQLParser.g:23532:1: rule__ExclamationParameterOperand__PrmAssignment : ( RULE_JRNPARAM ) ;
    public final void rule__ExclamationParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23536:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:23537:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:23537:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:23538:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclamationParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ColumnOperand__CfullAssignment_0"
    // InternalSQLParser.g:23547:1: rule__ColumnOperand__CfullAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__ColumnOperand__CfullAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23551:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:23552:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:23552:2: ( ruleColumnFull )
            // InternalSQLParser.g:23553:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__CfullAssignment_0"


    // $ANTLR start "rule__ColumnOperand__OraAssignment_1"
    // InternalSQLParser.g:23562:1: rule__ColumnOperand__OraAssignment_1 : ( ( LeftParenthesisPlusSignRightParenthesis ) ) ;
    public final void rule__ColumnOperand__OraAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23566:1: ( ( ( LeftParenthesisPlusSignRightParenthesis ) ) )
            // InternalSQLParser.g:23567:2: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            {
            // InternalSQLParser.g:23567:2: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            // InternalSQLParser.g:23568:3: ( LeftParenthesisPlusSignRightParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            // InternalSQLParser.g:23569:3: ( LeftParenthesisPlusSignRightParenthesis )
            // InternalSQLParser.g:23570:4: LeftParenthesisPlusSignRightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesisPlusSignRightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__OraAssignment_1"


    // $ANTLR start "rule__SubQueryOperand__SelAssignment_2"
    // InternalSQLParser.g:23581:1: rule__SubQueryOperand__SelAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__SubQueryOperand__SelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23585:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:23586:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:23586:2: ( ruleSelectQuery )
            // InternalSQLParser.g:23587:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__SelAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SostrAssignment_0"
    // InternalSQLParser.g:23596:1: rule__ScalarOperand__SostrAssignment_0 : ( ruleStringOperand ) ;
    public final void rule__ScalarOperand__SostrAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23600:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:23601:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:23601:2: ( ruleStringOperand )
            // InternalSQLParser.g:23602:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SostrAssignment_0"


    // $ANTLR start "rule__ScalarOperand__SodblAssignment_1"
    // InternalSQLParser.g:23611:1: rule__ScalarOperand__SodblAssignment_1 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarOperand__SodblAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23615:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSQLParser.g:23616:2: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSQLParser.g:23616:2: ( RULE_SIGNED_DOUBLE )
            // InternalSQLParser.g:23617:3: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodblAssignment_1"


    // $ANTLR start "rule__ScalarOperand__SodateAssignment_2"
    // InternalSQLParser.g:23626:1: rule__ScalarOperand__SodateAssignment_2 : ( RULE_DATE ) ;
    public final void rule__ScalarOperand__SodateAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23630:1: ( ( RULE_DATE ) )
            // InternalSQLParser.g:23631:2: ( RULE_DATE )
            {
            // InternalSQLParser.g:23631:2: ( RULE_DATE )
            // InternalSQLParser.g:23632:3: RULE_DATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }
            match(input,RULE_DATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodateAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SotimeAssignment_3"
    // InternalSQLParser.g:23641:1: rule__ScalarOperand__SotimeAssignment_3 : ( RULE_TIME ) ;
    public final void rule__ScalarOperand__SotimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23645:1: ( ( RULE_TIME ) )
            // InternalSQLParser.g:23646:2: ( RULE_TIME )
            {
            // InternalSQLParser.g:23646:2: ( RULE_TIME )
            // InternalSQLParser.g:23647:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SotimeAssignment_3"


    // $ANTLR start "rule__ScalarOperand__SodtAssignment_4"
    // InternalSQLParser.g:23656:1: rule__ScalarOperand__SodtAssignment_4 : ( RULE_TIMESTAMP ) ;
    public final void rule__ScalarOperand__SodtAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23660:1: ( ( RULE_TIMESTAMP ) )
            // InternalSQLParser.g:23661:2: ( RULE_TIMESTAMP )
            {
            // InternalSQLParser.g:23661:2: ( RULE_TIMESTAMP )
            // InternalSQLParser.g:23662:3: RULE_TIMESTAMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }
            match(input,RULE_TIMESTAMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodtAssignment_4"


    // $ANTLR start "rule__ScalarNumberOperand__SoUIntAssignment_0"
    // InternalSQLParser.g:23671:1: rule__ScalarNumberOperand__SoUIntAssignment_0 : ( RULE_UNSIGNED ) ;
    public final void rule__ScalarNumberOperand__SoUIntAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23675:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:23676:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:23676:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:23677:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SoUIntAssignment_0"


    // $ANTLR start "rule__ScalarNumberOperand__SointAssignment_1"
    // InternalSQLParser.g:23686:1: rule__ScalarNumberOperand__SointAssignment_1 : ( RULE_INT ) ;
    public final void rule__ScalarNumberOperand__SointAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23690:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:23691:2: ( RULE_INT )
            {
            // InternalSQLParser.g:23691:2: ( RULE_INT )
            // InternalSQLParser.g:23692:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SointAssignment_1"


    // $ANTLR start "rule__ScalarNumberOperand__SodblAssignment_2"
    // InternalSQLParser.g:23701:1: rule__ScalarNumberOperand__SodblAssignment_2 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarNumberOperand__SodblAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23705:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSQLParser.g:23706:2: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSQLParser.g:23706:2: ( RULE_SIGNED_DOUBLE )
            // InternalSQLParser.g:23707:3: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SodblAssignment_2"


    // $ANTLR start "rule__ScalarNumberOperand__SostrAssignment_3"
    // InternalSQLParser.g:23716:1: rule__ScalarNumberOperand__SostrAssignment_3 : ( ruleStringOperand ) ;
    public final void rule__ScalarNumberOperand__SostrAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23720:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:23721:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:23721:2: ( ruleStringOperand )
            // InternalSQLParser.g:23722:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SostrAssignment_3"


    // $ANTLR start "rule__SQLCASE__WopAssignment_1_0"
    // InternalSQLParser.g:23731:1: rule__SQLCASE__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SQLCASE__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23735:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:23736:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:23736:2: ( ruleOperandGroup )
            // InternalSQLParser.g:23737:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WopAssignment_1_0"


    // $ANTLR start "rule__SQLCASE__ExprAssignment_1_1"
    // InternalSQLParser.g:23746:1: rule__SQLCASE__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SQLCASE__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23750:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:23751:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:23751:2: ( ruleFullExpression )
            // InternalSQLParser.g:23752:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__ExprAssignment_1_1"


    // $ANTLR start "rule__SQLCASE__WhenAssignment_2"
    // InternalSQLParser.g:23761:1: rule__SQLCASE__WhenAssignment_2 : ( ruleSQLCaseWhens ) ;
    public final void rule__SQLCASE__WhenAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23765:1: ( ( ruleSQLCaseWhens ) )
            // InternalSQLParser.g:23766:2: ( ruleSQLCaseWhens )
            {
            // InternalSQLParser.g:23766:2: ( ruleSQLCaseWhens )
            // InternalSQLParser.g:23767:3: ruleSQLCaseWhens
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WhenAssignment_2"


    // $ANTLR start "rule__SQLCaseWhens__EntriesAssignment_1_1"
    // InternalSQLParser.g:23776:1: rule__SQLCaseWhens__EntriesAssignment_1_1 : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23780:1: ( ( ruleSqlCaseWhen ) )
            // InternalSQLParser.g:23781:2: ( ruleSqlCaseWhen )
            {
            // InternalSQLParser.g:23781:2: ( ruleSqlCaseWhen )
            // InternalSQLParser.g:23782:3: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__EntriesAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__WopAssignment_1_0"
    // InternalSQLParser.g:23791:1: rule__SqlCaseWhen__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23795:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:23796:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:23796:2: ( ruleOperandGroup )
            // InternalSQLParser.g:23797:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__WopAssignment_1_0"


    // $ANTLR start "rule__SqlCaseWhen__ExprAssignment_1_1"
    // InternalSQLParser.g:23806:1: rule__SqlCaseWhen__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SqlCaseWhen__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23810:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:23811:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:23811:2: ( ruleFullExpression )
            // InternalSQLParser.g:23812:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__ExprAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__TexpAssignment_3"
    // InternalSQLParser.g:23821:1: rule__SqlCaseWhen__TexpAssignment_3 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__TexpAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23825:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:23826:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:23826:2: ( ruleOperandGroup )
            // InternalSQLParser.g:23827:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__TexpAssignment_3"


    // $ANTLR start "rule__SqlCaseWhen__EexpAssignment_4_1"
    // InternalSQLParser.g:23836:1: rule__SqlCaseWhen__EexpAssignment_4_1 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__EexpAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23840:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:23841:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:23841:2: ( ruleOperandGroup )
            // InternalSQLParser.g:23842:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__EexpAssignment_4_1"


    // $ANTLR start "rule__UnsignedValue__IntegerAssignment"
    // InternalSQLParser.g:23851:1: rule__UnsignedValue__IntegerAssignment : ( RULE_UNSIGNED ) ;
    public final void rule__UnsignedValue__IntegerAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:23855:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:23856:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:23856:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:23857:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnsignedValue__IntegerAssignment"

    // $ANTLR start synpred126_InternalSQLParser
    public final void synpred126_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:5417:2: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) )
        // InternalSQLParser.g:5417:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        {
        // InternalSQLParser.g:5417:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        // InternalSQLParser.g:5418:3: ( rule__SQLCASE__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
        }
        // InternalSQLParser.g:5419:3: ( rule__SQLCASE__WopAssignment_1_0 )
        // InternalSQLParser.g:5419:4: rule__SQLCASE__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SQLCASE__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred126_InternalSQLParser

    // $ANTLR start synpred127_InternalSQLParser
    public final void synpred127_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:5438:2: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) )
        // InternalSQLParser.g:5438:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        {
        // InternalSQLParser.g:5438:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        // InternalSQLParser.g:5439:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
        }
        // InternalSQLParser.g:5440:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        // InternalSQLParser.g:5440:4: rule__SqlCaseWhen__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SqlCaseWhen__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred127_InternalSQLParser

    // Delegated rules

    public final boolean synpred126_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA31 dfa31 = new DFA31(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA42 dfa42 = new DFA42(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA60 dfa60 = new DFA60(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\5\uffff\1\11\4\uffff";
    static final String dfa_3s = "\1\57\1\77\1\uffff\1\57\1\uffff\1\12\4\uffff";
    static final String dfa_4s = "\1\u00ba\1\u00a0\1\uffff\1\u00ba\1\uffff\1\u00af\4\uffff";
    static final String dfa_5s = "\2\uffff\1\1\1\uffff\1\2\1\uffff\1\3\1\5\1\6\1\4";
    static final String dfa_6s = "\12\uffff}>";
    static final String[] dfa_7s = {
            "\1\4\17\uffff\1\10\14\uffff\1\4\1\uffff\1\4\26\uffff\1\4\14\uffff\1\2\12\uffff\1\4\17\uffff\1\1\5\uffff\1\6\6\uffff\1\7\5\uffff\1\3\14\uffff\1\4\1\5\1\uffff\3\4\4\uffff\4\4",
            "\1\10\132\uffff\1\7\5\uffff\1\2",
            "",
            "\1\2\17\uffff\1\2\5\uffff\1\4\6\uffff\1\2\1\uffff\1\2\26\uffff\1\2\14\uffff\1\2\12\uffff\1\2\17\uffff\1\2\5\uffff\1\2\6\uffff\1\2\5\uffff\1\2\14\uffff\2\2\1\uffff\3\2\4\uffff\4\2",
            "",
            "\1\11\11\uffff\1\11\23\uffff\1\4\11\uffff\1\11\13\uffff\1\11\1\4\1\11\2\uffff\1\11\11\uffff\1\11\1\uffff\1\11\2\uffff\4\11\3\uffff\1\11\3\uffff\1\11\1\uffff\1\11\1\uffff\1\11\11\uffff\1\11\2\uffff\1\11\1\uffff\1\11\1\4\10\uffff\1\11\4\uffff\1\11\4\uffff\1\11\10\uffff\1\4\4\uffff\1\4\2\uffff\3\4\2\uffff\2\4\1\uffff\1\11\2\4\1\uffff\1\11\1\4\1\11\1\4\1\uffff\1\4\1\11\3\4\3\uffff\1\11\1\4",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "4620:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );";
        }
    }
    static final String dfa_8s = "\20\uffff";
    static final String dfa_9s = "\1\u0093\1\22\14\u00a3\2\uffff";
    static final String dfa_10s = "\1\u0093\1\u0091\14\u00ab\2\uffff";
    static final String dfa_11s = "\16\uffff\1\1\1\2";
    static final String dfa_12s = "\20\uffff}>";
    static final String[] dfa_13s = {
            "\1\1",
            "\1\13\10\uffff\1\15\1\5\1\14\1\10\7\uffff\1\12\1\11\41\uffff\1\4\1\7\1\3\26\uffff\1\6\56\uffff\1\2",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "\1\16\7\uffff\1\17",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "4665:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );";
        }
    }
    static final String dfa_14s = "\1\uffff\1\2\10\uffff";
    static final String dfa_15s = "\1\57\1\12\10\uffff";
    static final String dfa_16s = "\2\u00ba\10\uffff";
    static final String dfa_17s = "\2\uffff\1\1\1\2\1\3\1\4\1\5\1\7\1\10\1\6";
    static final String[] dfa_18s = {
            "\1\6\34\uffff\1\5\1\uffff\1\10\26\uffff\1\7\27\uffff\1\10\42\uffff\1\4\14\uffff\2\3\1\uffff\3\3\4\uffff\1\3\2\2\1\1",
            "\1\2\10\uffff\2\2\2\uffff\1\2\20\uffff\1\2\11\uffff\1\2\13\uffff\3\2\2\uffff\1\2\11\uffff\1\2\1\uffff\1\2\2\uffff\4\2\2\uffff\2\2\2\uffff\2\2\1\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff\1\2\1\uffff\2\2\5\uffff\1\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\3\uffff\1\2\4\uffff\1\2\2\uffff\4\2\1\uffff\2\2\1\uffff\3\2\1\11\14\2\1\uffff\2\2\10\uffff\3\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA42 extends DFA {

        public DFA42(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 42;
            this.eot = dfa_1;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_6;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "4971:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) | ( ( rule__OperandFragment__BoolLiteralAssignment_7 ) ) );";
        }
    }
    static final String dfa_19s = "\26\uffff";
    static final String dfa_20s = "\1\57\17\0\6\uffff";
    static final String dfa_21s = "\1\u00ba\17\0\6\uffff";
    static final String dfa_22s = "\20\uffff\1\2\4\uffff\1\1";
    static final String dfa_23s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\6\uffff}>";
    static final String[] dfa_24s = {
            "\1\14\17\uffff\1\20\14\uffff\1\13\1\uffff\1\17\26\uffff\1\15\14\uffff\1\20\12\uffff\1\16\17\uffff\1\20\5\uffff\1\20\6\uffff\1\20\5\uffff\1\12\14\uffff\1\4\1\5\1\uffff\1\6\1\7\1\10\4\uffff\1\11\1\3\1\2\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "5412:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA59_1 = input.LA(1);

                         
                        int index59_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA59_2 = input.LA(1);

                         
                        int index59_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA59_3 = input.LA(1);

                         
                        int index59_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA59_4 = input.LA(1);

                         
                        int index59_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA59_5 = input.LA(1);

                         
                        int index59_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA59_6 = input.LA(1);

                         
                        int index59_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA59_7 = input.LA(1);

                         
                        int index59_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA59_8 = input.LA(1);

                         
                        int index59_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA59_9 = input.LA(1);

                         
                        int index59_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA59_10 = input.LA(1);

                         
                        int index59_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA59_11 = input.LA(1);

                         
                        int index59_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA59_12 = input.LA(1);

                         
                        int index59_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA59_13 = input.LA(1);

                         
                        int index59_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA59_14 = input.LA(1);

                         
                        int index59_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA59_15 = input.LA(1);

                         
                        int index59_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index59_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 59, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "5433:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_1 = input.LA(1);

                         
                        int index60_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA60_2 = input.LA(1);

                         
                        int index60_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA60_3 = input.LA(1);

                         
                        int index60_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA60_4 = input.LA(1);

                         
                        int index60_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA60_5 = input.LA(1);

                         
                        int index60_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA60_6 = input.LA(1);

                         
                        int index60_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA60_7 = input.LA(1);

                         
                        int index60_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA60_8 = input.LA(1);

                         
                        int index60_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA60_9 = input.LA(1);

                         
                        int index60_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA60_10 = input.LA(1);

                         
                        int index60_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA60_11 = input.LA(1);

                         
                        int index60_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA60_12 = input.LA(1);

                         
                        int index60_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA60_13 = input.LA(1);

                         
                        int index60_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA60_14 = input.LA(1);

                         
                        int index60_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA60_15 = input.LA(1);

                         
                        int index60_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSQLParser()) ) {s = 21;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index60_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000003000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L,0x0000000000000001L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0700000100000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L,0x0000000100000001L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000001000000L,0x3008008000004000L,0x0083000100002000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000A0000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000A0000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100010L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000100010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0021000000000000L,0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x2E88120885200000L,0x124000D800020000L,0x0000000000000880L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0020240000000100L,0x0008000000000080L,0x0000000000002000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0020240000000102L,0x0008000000000080L,0x0000000000002000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000003000000000L,0x0000000000000040L,0x0000000100000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000001000000L,0x3008008000804000L,0x0083001400000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0700000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000101000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x4000000000100000L,0x0000000080200000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x4000000000100002L,0x0000000080200000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L,0x0000000000000009L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000800201000000L,0x300800A000005000L,0x0787E00100008000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000202148009L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x8000800001000000L,0x300C00A000005000L,0x0787600104082000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0701000000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000008L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0700000001000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0004000000000400L,0x0001480020082000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0004000000000402L,0x0001480020082000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0100000000000000L,0x0000000008000000L,0x0700000001000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L,0x0087600000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100010000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0700000100000020L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0002400000000000L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000400020000010L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000400020000010L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000100002000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x000000C078040000L,0x0000000400000E00L,0x0000000000020000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000800001000000L,0x300800A000005000L,0x0787600100000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100800000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000180000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x8000810001000000L,0x300E00A000005000L,0x078767014CEC2000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000800001000000L,0x310800A000005000L,0x0787600100000028L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L,0x0487600000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000010000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004002000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00BF600000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000805480000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000805480000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000800201000000L,0x300800A000005000L,0x0787E00300000008L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x004000010002FAF0L,0x4000100000400014L,0x0000000000000102L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000400000L,0x0000000002000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0080000010000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000890003000000L,0x300800A000005000L,0x0787600100000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000880000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000010001000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000800000010000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000800201000000L,0x300800A000005000L,0x0787E00100000008L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000300000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000A00000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x8000800001000000L,0xB00C00A000005000L,0x0787600104082000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x8000800001000002L,0xB00C00A000005000L,0x0787600104082000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0003000000000000L});

}