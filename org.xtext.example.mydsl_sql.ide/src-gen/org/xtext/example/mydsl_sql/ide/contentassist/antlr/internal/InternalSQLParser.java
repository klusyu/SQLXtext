package org.xtext.example.mydsl_sql.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl_sql.services.SQLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSQLParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "MINUTE_MICROSECOND", "SECOND_MICROSECOND", "HOUR_MICROSECOND", "DAY_MICROSECOND", "MINUTE_SECOND", "STRAIGHT_JOIN", "HOUR_MINUTE", "HOUR_SECOND", "MICROSECOND", "DAY_MINUTE", "DAY_SECOND", "YEAR_MONTH", "BETWEEN_4", "KW_FOLLOWING", "INTERSECT", "PARTITION", "PRECEDING", "UNBOUNDED", "BETWEEN_2", "NOTEQUAL", "BETWEEN_3", "GREATER_1", "DAY_HOUR", "DISTINCT", "SIBLINGS", "BETWEEN_1", "GREATER", "BETWEEN", "CURRENT", "EXCLUDE", "EXTRACT", "INCLUDE", "NATURAL", "PERCENT", "QUARTER", "UNPIVOT", "EXCEPT", "EXISTS", "HAVING", "MINUTE", "OFFSET", "SECOND", "SELECT", "VALUES", "EQUAL", "LESS_1", "NOTIN", "CAST", "CROSS", "FETCH", "FIRST", "GROUP", "INNER", "LIMIT", "MINUS", "MONTH", "NULLS", "ORDER", "OUTER", "PIVOT", "RANGE", "RIGHT", "UNION", "USING", "WHERE", "LESS", "CASE", "DESC", "ELSE", "FROM", "FULL", "HOUR", "JOIN", "LAST", "LEFT", "LIKE", "NOT_1", "NULL", "ONLY", "OVER", "ROWS", "SOME", "THEN", "TIES", "WEEK", "WHEN", "WITH", "YEAR", "LeftParenthesisPlusSignRightParenthesis", "ALL", "AND", "ANY", "ASC", "DAY", "END", "FOR", "NOT", "ROW", "TOP", "XML", "IN_1", "ExclamationMarkEqualsSign", "X", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AS", "BY", "IN", "IS", "ON", "OR", "CircumflexAccentEqualsSign", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "LessThanSign", "EqualsSign", "GreaterThanSign", "VerticalLine", "RightCurlyBracket", "RULE_JRPARAM", "RULE_JRNPARAM", "RULE_STAR", "RULE_UNSIGNED", "RULE_INT", "RULE_SIGNED_DOUBLE", "RULE_DATE", "RULE_TIME", "RULE_TIMESTAMP", "RULE_STRING_CORE", "RULE_STRING_", "RULE_STRING", "RULE_DBNAME", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LessThanSignGreaterThanSign=108;
    public static final int MONTH=59;
    public static final int JOIN=76;
    public static final int BETWEEN=31;
    public static final int LessThanSign=125;
    public static final int MINUS=58;
    public static final int LeftParenthesisPlusSignRightParenthesis=92;
    public static final int WHEN=89;
    public static final int QUARTER=38;
    public static final int LeftParenthesis=118;
    public static final int YEAR=91;
    public static final int ELSE=72;
    public static final int RULE_TIME=137;
    public static final int HOUR_MINUTE=10;
    public static final int PARTITION=19;
    public static final int INCLUDE=35;
    public static final int DAY_MINUTE=13;
    public static final int INNER=56;
    public static final int CAST=51;
    public static final int GreaterThanSign=127;
    public static final int LEFT=78;
    public static final int RULE_ID=143;
    public static final int IN=112;
    public static final int DISTINCT=27;
    public static final int IS=113;
    public static final int WHERE=68;
    public static final int CASE=70;
    public static final int GreaterThanSignEqualsSign=109;
    public static final int AS=110;
    public static final int RULE_DATE=136;
    public static final int TOP=102;
    public static final int VerticalLine=128;
    public static final int PlusSign=120;
    public static final int RULE_INT=134;
    public static final int RULE_ML_COMMENT=144;
    public static final int THEN=86;
    public static final int UNPIVOT=39;
    public static final int RULE_JRPARAM=130;
    public static final int MICROSECOND=12;
    public static final int VerticalLineVerticalLine=117;
    public static final int DAY_HOUR=26;
    public static final int RULE_DBNAME=142;
    public static final int GROUP=55;
    public static final int ORDER=61;
    public static final int ASC=96;
    public static final int Comma=121;
    public static final int HyphenMinus=122;
    public static final int STRAIGHT_JOIN=9;
    public static final int BY=111;
    public static final int X=106;
    public static final int OFFSET=44;
    public static final int RIGHT=65;
    public static final int VALUES=47;
    public static final int LessThanSignEqualsSign=107;
    public static final int Solidus=124;
    public static final int RightCurlyBracket=129;
    public static final int RULE_SIGNED_DOUBLE=135;
    public static final int FETCH=53;
    public static final int FullStop=123;
    public static final int RULE_UNSIGNED=133;
    public static final int SIBLINGS=28;
    public static final int GREATER=30;
    public static final int NOTIN=50;
    public static final int SECOND_MICROSECOND=5;
    public static final int FIRST=54;
    public static final int RULE_STRING_=140;
    public static final int SELECT=46;
    public static final int PRECEDING=20;
    public static final int RULE_JRNPARAM=131;
    public static final int PERCENT=37;
    public static final int ExclamationMarkEqualsSign=105;
    public static final int UNION=66;
    public static final int DAY=97;
    public static final int ALL=93;
    public static final int ONLY=82;
    public static final int FROM=73;
    public static final int DESC=71;
    public static final int MINUTE_MICROSECOND=4;
    public static final int UNBOUNDED=21;
    public static final int KW_FOLLOWING=17;
    public static final int MINUTE=43;
    public static final int RULE_STAR=132;
    public static final int HOUR_MICROSECOND=6;
    public static final int EXTRACT=34;
    public static final int NULL=81;
    public static final int DAY_MICROSECOND=7;
    public static final int LESS_1=49;
    public static final int FOR=99;
    public static final int RightParenthesis=119;
    public static final int PIVOT=63;
    public static final int EXCEPT=40;
    public static final int CURRENT=32;
    public static final int FULL=74;
    public static final int NOTEQUAL=23;
    public static final int USING=67;
    public static final int NOT=100;
    public static final int LIKE=79;
    public static final int LAST=77;
    public static final int IN_1=104;
    public static final int EXCLUDE=33;
    public static final int AND=94;
    public static final int CircumflexAccentEqualsSign=116;
    public static final int MINUTE_SECOND=8;
    public static final int YEAR_MONTH=15;
    public static final int LESS=69;
    public static final int END=98;
    public static final int ROW=101;
    public static final int HAVING=42;
    public static final int DAY_SECOND=14;
    public static final int RANGE=64;
    public static final int TIES=87;
    public static final int HOUR=75;
    public static final int LIMIT=57;
    public static final int RULE_STRING=141;
    public static final int ANY=95;
    public static final int RULE_SL_COMMENT=145;
    public static final int NATURAL=36;
    public static final int EqualsSign=126;
    public static final int SOME=85;
    public static final int NOT_1=80;
    public static final int BETWEEN_2=22;
    public static final int GREATER_1=25;
    public static final int BETWEEN_1=29;
    public static final int OUTER=62;
    public static final int WEEK=88;
    public static final int EOF=-1;
    public static final int BETWEEN_4=16;
    public static final int NULLS=60;
    public static final int BETWEEN_3=24;
    public static final int ON=114;
    public static final int OR=115;
    public static final int EXISTS=41;
    public static final int RULE_WS=146;
    public static final int EQUAL=48;
    public static final int RULE_ANY_OTHER=147;
    public static final int INTERSECT=18;
    public static final int WITH=90;
    public static final int OVER=83;
    public static final int CROSS=52;
    public static final int XML=103;
    public static final int SECOND=45;
    public static final int RULE_STRING_CORE=139;
    public static final int HOUR_SECOND=11;
    public static final int RULE_TIMESTAMP=138;
    public static final int ROWS=84;

    // delegates
    // delegators


        public InternalSQLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSQLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSQLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSQLParser.g"; }


    	private SQLGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("VerticalLine", "'|'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
    		tokenNameToValue.put("X", "'\\u0024X'");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AS", "'AS'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("IN", "'IN'");
    		tokenNameToValue.put("IS", "'IS'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("CircumflexAccentEqualsSign", "'^='");
    		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
    		tokenNameToValue.put("LeftParenthesisPlusSignRightParenthesis", "'(+)'");
    		tokenNameToValue.put("ALL", "'ALL'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("ANY", "'ANY'");
    		tokenNameToValue.put("ASC", "'ASC'");
    		tokenNameToValue.put("DAY", "'DAY'");
    		tokenNameToValue.put("END", "'END'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("ROW", "'ROW'");
    		tokenNameToValue.put("TOP", "'TOP'");
    		tokenNameToValue.put("XML", "'XML'");
    		tokenNameToValue.put("IN_1", "'{IN'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("DESC", "'DESC'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("FULL", "'FULL'");
    		tokenNameToValue.put("HOUR", "'HOUR'");
    		tokenNameToValue.put("JOIN", "'JOIN'");
    		tokenNameToValue.put("LAST", "'LAST'");
    		tokenNameToValue.put("LEFT", "'LEFT'");
    		tokenNameToValue.put("LIKE", "'LIKE'");
    		tokenNameToValue.put("NOT_1", "'NOT\n'");
    		tokenNameToValue.put("NULL", "'NULL'");
    		tokenNameToValue.put("ONLY", "'ONLY'");
    		tokenNameToValue.put("OVER", "'OVER'");
    		tokenNameToValue.put("ROWS", "'ROWS'");
    		tokenNameToValue.put("SOME", "'SOME'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TIES", "'TIES'");
    		tokenNameToValue.put("WEEK", "'WEEK'");
    		tokenNameToValue.put("WHEN", "'WHEN'");
    		tokenNameToValue.put("WITH", "'WITH'");
    		tokenNameToValue.put("YEAR", "'YEAR'");
    		tokenNameToValue.put("CAST", "'CAST('");
    		tokenNameToValue.put("CROSS", "'CROSS'");
    		tokenNameToValue.put("FETCH", "'FETCH'");
    		tokenNameToValue.put("FIRST", "'FIRST'");
    		tokenNameToValue.put("GROUP", "'GROUP'");
    		tokenNameToValue.put("INNER", "'INNER'");
    		tokenNameToValue.put("LIMIT", "'LIMIT'");
    		tokenNameToValue.put("MINUS", "'MINUS'");
    		tokenNameToValue.put("MONTH", "'MONTH'");
    		tokenNameToValue.put("NULLS", "'NULLS'");
    		tokenNameToValue.put("ORDER", "'ORDER'");
    		tokenNameToValue.put("OUTER", "'OUTER'");
    		tokenNameToValue.put("PIVOT", "'PIVOT'");
    		tokenNameToValue.put("RANGE", "'RANGE'");
    		tokenNameToValue.put("RIGHT", "'RIGHT'");
    		tokenNameToValue.put("UNION", "'UNION'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("WHERE", "'WHERE'");
    		tokenNameToValue.put("LESS", "'{LESS'");
    		tokenNameToValue.put("EXCEPT", "'EXCEPT'");
    		tokenNameToValue.put("EXISTS", "'EXISTS'");
    		tokenNameToValue.put("HAVING", "'HAVING'");
    		tokenNameToValue.put("MINUTE", "'MINUTE'");
    		tokenNameToValue.put("OFFSET", "'OFFSET'");
    		tokenNameToValue.put("SECOND", "'SECOND'");
    		tokenNameToValue.put("SELECT", "'SELECT'");
    		tokenNameToValue.put("VALUES", "'VALUES'");
    		tokenNameToValue.put("EQUAL", "'{EQUAL'");
    		tokenNameToValue.put("LESS_1", "'{LESS]'");
    		tokenNameToValue.put("NOTIN", "'{NOTIN'");
    		tokenNameToValue.put("BETWEEN", "'BETWEEN'");
    		tokenNameToValue.put("CURRENT", "'CURRENT'");
    		tokenNameToValue.put("EXCLUDE", "'EXCLUDE'");
    		tokenNameToValue.put("EXTRACT", "'EXTRACT'");
    		tokenNameToValue.put("INCLUDE", "'INCLUDE'");
    		tokenNameToValue.put("NATURAL", "'NATURAL'");
    		tokenNameToValue.put("PERCENT", "'PERCENT'");
    		tokenNameToValue.put("QUARTER", "'QUARTER'");
    		tokenNameToValue.put("UNPIVOT", "'UNPIVOT'");
    		tokenNameToValue.put("DAY_HOUR", "'DAY_HOUR'");
    		tokenNameToValue.put("DISTINCT", "'DISTINCT'");
    		tokenNameToValue.put("SIBLINGS", "'SIBLINGS'");
    		tokenNameToValue.put("BETWEEN_1", "'{BETWEEN'");
    		tokenNameToValue.put("GREATER", "'{GREATER'");
    		tokenNameToValue.put("KW_FOLLOWING", "'FOLLOWING'");
    		tokenNameToValue.put("INTERSECT", "'INTERSECT'");
    		tokenNameToValue.put("PARTITION", "'PARTITION'");
    		tokenNameToValue.put("PRECEDING", "'PRECEDING'");
    		tokenNameToValue.put("UNBOUNDED", "'UNBOUNDED'");
    		tokenNameToValue.put("BETWEEN_2", "'{BETWEEN]'");
    		tokenNameToValue.put("NOTEQUAL", "'{NOTEQUAL'");
    		tokenNameToValue.put("BETWEEN_3", "'{[BETWEEN'");
    		tokenNameToValue.put("GREATER_1", "'{[GREATER'");
    		tokenNameToValue.put("DAY_MINUTE", "'DAY_MINUTE'");
    		tokenNameToValue.put("DAY_SECOND", "'DAY_SECOND'");
    		tokenNameToValue.put("YEAR_MONTH", "'YEAR_MONTH'");
    		tokenNameToValue.put("BETWEEN_4", "'{[BETWEEN]'");
    		tokenNameToValue.put("HOUR_MINUTE", "'HOUR_MINUTE'");
    		tokenNameToValue.put("HOUR_SECOND", "'HOUR_SECOND'");
    		tokenNameToValue.put("MICROSECOND", "'MICROSECOND'");
    		tokenNameToValue.put("MINUTE_SECOND", "'MINUTE_SECOND'");
    		tokenNameToValue.put("STRAIGHT_JOIN", "'STRAIGHT_JOIN'");
    		tokenNameToValue.put("DAY_MICROSECOND", "'DAY_MICROSECOND'");
    		tokenNameToValue.put("HOUR_MICROSECOND", "'HOUR_MICROSECOND'");
    		tokenNameToValue.put("MINUTE_MICROSECOND", "'MINUTE_MICROSECOND'");
    		tokenNameToValue.put("SECOND_MICROSECOND", "'SECOND_MICROSECOND'");
    	}

    	public void setGrammarAccess(SQLGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalSQLParser.g:182:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalSQLParser.g:183:1: ( ruleModel EOF )
            // InternalSQLParser.g:184:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalSQLParser.g:191:1: ruleModel : ( ( rule__Model__Group__0 ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:195:2: ( ( ( rule__Model__Group__0 ) ) )
            // InternalSQLParser.g:196:2: ( ( rule__Model__Group__0 ) )
            {
            // InternalSQLParser.g:196:2: ( ( rule__Model__Group__0 ) )
            // InternalSQLParser.g:197:3: ( rule__Model__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getGroup()); 
            }
            // InternalSQLParser.g:198:3: ( rule__Model__Group__0 )
            // InternalSQLParser.g:198:4: rule__Model__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleWithQuery"
    // InternalSQLParser.g:207:1: entryRuleWithQuery : ruleWithQuery EOF ;
    public final void entryRuleWithQuery() throws RecognitionException {
        try {
            // InternalSQLParser.g:208:1: ( ruleWithQuery EOF )
            // InternalSQLParser.g:209:1: ruleWithQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithQuery"


    // $ANTLR start "ruleWithQuery"
    // InternalSQLParser.g:216:1: ruleWithQuery : ( ( rule__WithQuery__Group__0 ) ) ;
    public final void ruleWithQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:220:2: ( ( ( rule__WithQuery__Group__0 ) ) )
            // InternalSQLParser.g:221:2: ( ( rule__WithQuery__Group__0 ) )
            {
            // InternalSQLParser.g:221:2: ( ( rule__WithQuery__Group__0 ) )
            // InternalSQLParser.g:222:3: ( rule__WithQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup()); 
            }
            // InternalSQLParser.g:223:3: ( rule__WithQuery__Group__0 )
            // InternalSQLParser.g:223:4: rule__WithQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithQuery"


    // $ANTLR start "entryRuleWithColumns"
    // InternalSQLParser.g:232:1: entryRuleWithColumns : ruleWithColumns EOF ;
    public final void entryRuleWithColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:233:1: ( ruleWithColumns EOF )
            // InternalSQLParser.g:234:1: ruleWithColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithColumns"


    // $ANTLR start "ruleWithColumns"
    // InternalSQLParser.g:241:1: ruleWithColumns : ( ( rule__WithColumns__Group__0 ) ) ;
    public final void ruleWithColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:245:2: ( ( ( rule__WithColumns__Group__0 ) ) )
            // InternalSQLParser.g:246:2: ( ( rule__WithColumns__Group__0 ) )
            {
            // InternalSQLParser.g:246:2: ( ( rule__WithColumns__Group__0 ) )
            // InternalSQLParser.g:247:3: ( rule__WithColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:248:3: ( rule__WithColumns__Group__0 )
            // InternalSQLParser.g:248:4: rule__WithColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithColumns"


    // $ANTLR start "entryRuleFetchFirst"
    // InternalSQLParser.g:257:1: entryRuleFetchFirst : ruleFetchFirst EOF ;
    public final void entryRuleFetchFirst() throws RecognitionException {
        try {
            // InternalSQLParser.g:258:1: ( ruleFetchFirst EOF )
            // InternalSQLParser.g:259:1: ruleFetchFirst EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFetchFirst"


    // $ANTLR start "ruleFetchFirst"
    // InternalSQLParser.g:266:1: ruleFetchFirst : ( ( rule__FetchFirst__Group__0 ) ) ;
    public final void ruleFetchFirst() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:270:2: ( ( ( rule__FetchFirst__Group__0 ) ) )
            // InternalSQLParser.g:271:2: ( ( rule__FetchFirst__Group__0 ) )
            {
            // InternalSQLParser.g:271:2: ( ( rule__FetchFirst__Group__0 ) )
            // InternalSQLParser.g:272:3: ( rule__FetchFirst__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getGroup()); 
            }
            // InternalSQLParser.g:273:3: ( rule__FetchFirst__Group__0 )
            // InternalSQLParser.g:273:4: rule__FetchFirst__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFetchFirst"


    // $ANTLR start "entryRuleOffset"
    // InternalSQLParser.g:282:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // InternalSQLParser.g:283:1: ( ruleOffset EOF )
            // InternalSQLParser.g:284:1: ruleOffset EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // InternalSQLParser.g:291:1: ruleOffset : ( ( rule__Offset__OffsetAssignment ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:295:2: ( ( ( rule__Offset__OffsetAssignment ) ) )
            // InternalSQLParser.g:296:2: ( ( rule__Offset__OffsetAssignment ) )
            {
            // InternalSQLParser.g:296:2: ( ( rule__Offset__OffsetAssignment ) )
            // InternalSQLParser.g:297:3: ( rule__Offset__OffsetAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }
            // InternalSQLParser.g:298:3: ( rule__Offset__OffsetAssignment )
            // InternalSQLParser.g:298:4: rule__Offset__OffsetAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Offset__OffsetAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleLimit"
    // InternalSQLParser.g:307:1: entryRuleLimit : ruleLimit EOF ;
    public final void entryRuleLimit() throws RecognitionException {
        try {
            // InternalSQLParser.g:308:1: ( ruleLimit EOF )
            // InternalSQLParser.g:309:1: ruleLimit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLimit"


    // $ANTLR start "ruleLimit"
    // InternalSQLParser.g:316:1: ruleLimit : ( ( rule__Limit__Alternatives ) ) ;
    public final void ruleLimit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:320:2: ( ( ( rule__Limit__Alternatives ) ) )
            // InternalSQLParser.g:321:2: ( ( rule__Limit__Alternatives ) )
            {
            // InternalSQLParser.g:321:2: ( ( rule__Limit__Alternatives ) )
            // InternalSQLParser.g:322:3: ( rule__Limit__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:323:3: ( rule__Limit__Alternatives )
            // InternalSQLParser.g:323:4: rule__Limit__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLimit"


    // $ANTLR start "entryRuleSelectQuery"
    // InternalSQLParser.g:332:1: entryRuleSelectQuery : ruleSelectQuery EOF ;
    public final void entryRuleSelectQuery() throws RecognitionException {
        try {
            // InternalSQLParser.g:333:1: ( ruleSelectQuery EOF )
            // InternalSQLParser.g:334:1: ruleSelectQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectQuery"


    // $ANTLR start "ruleSelectQuery"
    // InternalSQLParser.g:341:1: ruleSelectQuery : ( ( rule__SelectQuery__Group__0 ) ) ;
    public final void ruleSelectQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:345:2: ( ( ( rule__SelectQuery__Group__0 ) ) )
            // InternalSQLParser.g:346:2: ( ( rule__SelectQuery__Group__0 ) )
            {
            // InternalSQLParser.g:346:2: ( ( rule__SelectQuery__Group__0 ) )
            // InternalSQLParser.g:347:3: ( rule__SelectQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getGroup()); 
            }
            // InternalSQLParser.g:348:3: ( rule__SelectQuery__Group__0 )
            // InternalSQLParser.g:348:4: rule__SelectQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectQuery"


    // $ANTLR start "entryRuleSelectSubSet"
    // InternalSQLParser.g:357:1: entryRuleSelectSubSet : ruleSelectSubSet EOF ;
    public final void entryRuleSelectSubSet() throws RecognitionException {
        try {
            // InternalSQLParser.g:358:1: ( ruleSelectSubSet EOF )
            // InternalSQLParser.g:359:1: ruleSelectSubSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectSubSet"


    // $ANTLR start "ruleSelectSubSet"
    // InternalSQLParser.g:366:1: ruleSelectSubSet : ( ( rule__SelectSubSet__Group__0 ) ) ;
    public final void ruleSelectSubSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:370:2: ( ( ( rule__SelectSubSet__Group__0 ) ) )
            // InternalSQLParser.g:371:2: ( ( rule__SelectSubSet__Group__0 ) )
            {
            // InternalSQLParser.g:371:2: ( ( rule__SelectSubSet__Group__0 ) )
            // InternalSQLParser.g:372:3: ( rule__SelectSubSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }
            // InternalSQLParser.g:373:3: ( rule__SelectSubSet__Group__0 )
            // InternalSQLParser.g:373:4: rule__SelectSubSet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectSubSet"


    // $ANTLR start "entryRuleSelect"
    // InternalSQLParser.g:382:1: entryRuleSelect : ruleSelect EOF ;
    public final void entryRuleSelect() throws RecognitionException {
        try {
            // InternalSQLParser.g:383:1: ( ruleSelect EOF )
            // InternalSQLParser.g:384:1: ruleSelect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelect"


    // $ANTLR start "ruleSelect"
    // InternalSQLParser.g:391:1: ruleSelect : ( ( rule__Select__Group__0 ) ) ;
    public final void ruleSelect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:395:2: ( ( ( rule__Select__Group__0 ) ) )
            // InternalSQLParser.g:396:2: ( ( rule__Select__Group__0 ) )
            {
            // InternalSQLParser.g:396:2: ( ( rule__Select__Group__0 ) )
            // InternalSQLParser.g:397:3: ( rule__Select__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup()); 
            }
            // InternalSQLParser.g:398:3: ( rule__Select__Group__0 )
            // InternalSQLParser.g:398:4: rule__Select__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelect"


    // $ANTLR start "entryRuleColumns"
    // InternalSQLParser.g:407:1: entryRuleColumns : ruleColumns EOF ;
    public final void entryRuleColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:408:1: ( ruleColumns EOF )
            // InternalSQLParser.g:409:1: ruleColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumns"


    // $ANTLR start "ruleColumns"
    // InternalSQLParser.g:416:1: ruleColumns : ( ( rule__Columns__Group__0 ) ) ;
    public final void ruleColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:420:2: ( ( ( rule__Columns__Group__0 ) ) )
            // InternalSQLParser.g:421:2: ( ( rule__Columns__Group__0 ) )
            {
            // InternalSQLParser.g:421:2: ( ( rule__Columns__Group__0 ) )
            // InternalSQLParser.g:422:3: ( rule__Columns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:423:3: ( rule__Columns__Group__0 )
            // InternalSQLParser.g:423:4: rule__Columns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumns"


    // $ANTLR start "entryRuleColumnOrAlias"
    // InternalSQLParser.g:432:1: entryRuleColumnOrAlias : ruleColumnOrAlias EOF ;
    public final void entryRuleColumnOrAlias() throws RecognitionException {
        try {
            // InternalSQLParser.g:433:1: ( ruleColumnOrAlias EOF )
            // InternalSQLParser.g:434:1: ruleColumnOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOrAlias"


    // $ANTLR start "ruleColumnOrAlias"
    // InternalSQLParser.g:441:1: ruleColumnOrAlias : ( ( rule__ColumnOrAlias__Alternatives ) ) ;
    public final void ruleColumnOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:445:2: ( ( ( rule__ColumnOrAlias__Alternatives ) ) )
            // InternalSQLParser.g:446:2: ( ( rule__ColumnOrAlias__Alternatives ) )
            {
            // InternalSQLParser.g:446:2: ( ( rule__ColumnOrAlias__Alternatives ) )
            // InternalSQLParser.g:447:3: ( rule__ColumnOrAlias__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:448:3: ( rule__ColumnOrAlias__Alternatives )
            // InternalSQLParser.g:448:4: rule__ColumnOrAlias__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOrAlias"


    // $ANTLR start "entryRuleColumnFull"
    // InternalSQLParser.g:457:1: entryRuleColumnFull : ruleColumnFull EOF ;
    public final void entryRuleColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:458:1: ( ruleColumnFull EOF )
            // InternalSQLParser.g:459:1: ruleColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnFull"


    // $ANTLR start "ruleColumnFull"
    // InternalSQLParser.g:466:1: ruleColumnFull : ( ( rule__ColumnFull__Group__0 ) ) ;
    public final void ruleColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:470:2: ( ( ( rule__ColumnFull__Group__0 ) ) )
            // InternalSQLParser.g:471:2: ( ( rule__ColumnFull__Group__0 ) )
            {
            // InternalSQLParser.g:471:2: ( ( rule__ColumnFull__Group__0 ) )
            // InternalSQLParser.g:472:3: ( rule__ColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:473:3: ( rule__ColumnFull__Group__0 )
            // InternalSQLParser.g:473:4: rule__ColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnFull"


    // $ANTLR start "entryRuleTables"
    // InternalSQLParser.g:482:1: entryRuleTables : ruleTables EOF ;
    public final void entryRuleTables() throws RecognitionException {
        try {
            // InternalSQLParser.g:483:1: ( ruleTables EOF )
            // InternalSQLParser.g:484:1: ruleTables EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTables"


    // $ANTLR start "ruleTables"
    // InternalSQLParser.g:491:1: ruleTables : ( ( rule__Tables__Group__0 ) ) ;
    public final void ruleTables() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:495:2: ( ( ( rule__Tables__Group__0 ) ) )
            // InternalSQLParser.g:496:2: ( ( rule__Tables__Group__0 ) )
            {
            // InternalSQLParser.g:496:2: ( ( rule__Tables__Group__0 ) )
            // InternalSQLParser.g:497:3: ( rule__Tables__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup()); 
            }
            // InternalSQLParser.g:498:3: ( rule__Tables__Group__0 )
            // InternalSQLParser.g:498:4: rule__Tables__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTables"


    // $ANTLR start "entryRuleFromTable"
    // InternalSQLParser.g:507:1: entryRuleFromTable : ruleFromTable EOF ;
    public final void entryRuleFromTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:508:1: ( ruleFromTable EOF )
            // InternalSQLParser.g:509:1: ruleFromTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTable"


    // $ANTLR start "ruleFromTable"
    // InternalSQLParser.g:516:1: ruleFromTable : ( ( rule__FromTable__Group__0 ) ) ;
    public final void ruleFromTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:520:2: ( ( ( rule__FromTable__Group__0 ) ) )
            // InternalSQLParser.g:521:2: ( ( rule__FromTable__Group__0 ) )
            {
            // InternalSQLParser.g:521:2: ( ( rule__FromTable__Group__0 ) )
            // InternalSQLParser.g:522:3: ( rule__FromTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:523:3: ( rule__FromTable__Group__0 )
            // InternalSQLParser.g:523:4: rule__FromTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTable"


    // $ANTLR start "entryRuleFromTableJoin"
    // InternalSQLParser.g:532:1: entryRuleFromTableJoin : ruleFromTableJoin EOF ;
    public final void entryRuleFromTableJoin() throws RecognitionException {
        try {
            // InternalSQLParser.g:533:1: ( ruleFromTableJoin EOF )
            // InternalSQLParser.g:534:1: ruleFromTableJoin EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTableJoin"


    // $ANTLR start "ruleFromTableJoin"
    // InternalSQLParser.g:541:1: ruleFromTableJoin : ( ( rule__FromTableJoin__Group__0 ) ) ;
    public final void ruleFromTableJoin() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:545:2: ( ( ( rule__FromTableJoin__Group__0 ) ) )
            // InternalSQLParser.g:546:2: ( ( rule__FromTableJoin__Group__0 ) )
            {
            // InternalSQLParser.g:546:2: ( ( rule__FromTableJoin__Group__0 ) )
            // InternalSQLParser.g:547:3: ( rule__FromTableJoin__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }
            // InternalSQLParser.g:548:3: ( rule__FromTableJoin__Group__0 )
            // InternalSQLParser.g:548:4: rule__FromTableJoin__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTableJoin"


    // $ANTLR start "entryRuleJoinCondition"
    // InternalSQLParser.g:557:1: entryRuleJoinCondition : ruleJoinCondition EOF ;
    public final void entryRuleJoinCondition() throws RecognitionException {
        try {
            // InternalSQLParser.g:558:1: ( ruleJoinCondition EOF )
            // InternalSQLParser.g:559:1: ruleJoinCondition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinCondition"


    // $ANTLR start "ruleJoinCondition"
    // InternalSQLParser.g:566:1: ruleJoinCondition : ( ( rule__JoinCondition__Group__0 ) ) ;
    public final void ruleJoinCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:570:2: ( ( ( rule__JoinCondition__Group__0 ) ) )
            // InternalSQLParser.g:571:2: ( ( rule__JoinCondition__Group__0 ) )
            {
            // InternalSQLParser.g:571:2: ( ( rule__JoinCondition__Group__0 ) )
            // InternalSQLParser.g:572:3: ( rule__JoinCondition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getGroup()); 
            }
            // InternalSQLParser.g:573:3: ( rule__JoinCondition__Group__0 )
            // InternalSQLParser.g:573:4: rule__JoinCondition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinCondition"


    // $ANTLR start "entryRuleUsingCols"
    // InternalSQLParser.g:582:1: entryRuleUsingCols : ruleUsingCols EOF ;
    public final void entryRuleUsingCols() throws RecognitionException {
        try {
            // InternalSQLParser.g:583:1: ( ruleUsingCols EOF )
            // InternalSQLParser.g:584:1: ruleUsingCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUsingCols"


    // $ANTLR start "ruleUsingCols"
    // InternalSQLParser.g:591:1: ruleUsingCols : ( ( rule__UsingCols__Group__0 ) ) ;
    public final void ruleUsingCols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:595:2: ( ( ( rule__UsingCols__Group__0 ) ) )
            // InternalSQLParser.g:596:2: ( ( rule__UsingCols__Group__0 ) )
            {
            // InternalSQLParser.g:596:2: ( ( rule__UsingCols__Group__0 ) )
            // InternalSQLParser.g:597:3: ( rule__UsingCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup()); 
            }
            // InternalSQLParser.g:598:3: ( rule__UsingCols__Group__0 )
            // InternalSQLParser.g:598:4: rule__UsingCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUsingCols"


    // $ANTLR start "entryRuleTableOrAlias"
    // InternalSQLParser.g:607:1: entryRuleTableOrAlias : ruleTableOrAlias EOF ;
    public final void entryRuleTableOrAlias() throws RecognitionException {
        try {
            // InternalSQLParser.g:608:1: ( ruleTableOrAlias EOF )
            // InternalSQLParser.g:609:1: ruleTableOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableOrAlias"


    // $ANTLR start "ruleTableOrAlias"
    // InternalSQLParser.g:616:1: ruleTableOrAlias : ( ( rule__TableOrAlias__Group__0 ) ) ;
    public final void ruleTableOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:620:2: ( ( ( rule__TableOrAlias__Group__0 ) ) )
            // InternalSQLParser.g:621:2: ( ( rule__TableOrAlias__Group__0 ) )
            {
            // InternalSQLParser.g:621:2: ( ( rule__TableOrAlias__Group__0 ) )
            // InternalSQLParser.g:622:3: ( rule__TableOrAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }
            // InternalSQLParser.g:623:3: ( rule__TableOrAlias__Group__0 )
            // InternalSQLParser.g:623:4: rule__TableOrAlias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableOrAlias"


    // $ANTLR start "entryRuleFromValues"
    // InternalSQLParser.g:632:1: entryRuleFromValues : ruleFromValues EOF ;
    public final void entryRuleFromValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:633:1: ( ruleFromValues EOF )
            // InternalSQLParser.g:634:1: ruleFromValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValues"


    // $ANTLR start "ruleFromValues"
    // InternalSQLParser.g:641:1: ruleFromValues : ( ( rule__FromValues__Group__0 ) ) ;
    public final void ruleFromValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:645:2: ( ( ( rule__FromValues__Group__0 ) ) )
            // InternalSQLParser.g:646:2: ( ( rule__FromValues__Group__0 ) )
            {
            // InternalSQLParser.g:646:2: ( ( rule__FromValues__Group__0 ) )
            // InternalSQLParser.g:647:3: ( rule__FromValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:648:3: ( rule__FromValues__Group__0 )
            // InternalSQLParser.g:648:4: rule__FromValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValues"


    // $ANTLR start "entryRuleFromValuesColumns"
    // InternalSQLParser.g:657:1: entryRuleFromValuesColumns : ruleFromValuesColumns EOF ;
    public final void entryRuleFromValuesColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:658:1: ( ruleFromValuesColumns EOF )
            // InternalSQLParser.g:659:1: ruleFromValuesColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumns"


    // $ANTLR start "ruleFromValuesColumns"
    // InternalSQLParser.g:666:1: ruleFromValuesColumns : ( ( rule__FromValuesColumns__Group__0 ) ) ;
    public final void ruleFromValuesColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:670:2: ( ( ( rule__FromValuesColumns__Group__0 ) ) )
            // InternalSQLParser.g:671:2: ( ( rule__FromValuesColumns__Group__0 ) )
            {
            // InternalSQLParser.g:671:2: ( ( rule__FromValuesColumns__Group__0 ) )
            // InternalSQLParser.g:672:3: ( rule__FromValuesColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:673:3: ( rule__FromValuesColumns__Group__0 )
            // InternalSQLParser.g:673:4: rule__FromValuesColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumns"


    // $ANTLR start "entryRuleFromValuesColumnNames"
    // InternalSQLParser.g:682:1: entryRuleFromValuesColumnNames : ruleFromValuesColumnNames EOF ;
    public final void entryRuleFromValuesColumnNames() throws RecognitionException {
        try {
            // InternalSQLParser.g:683:1: ( ruleFromValuesColumnNames EOF )
            // InternalSQLParser.g:684:1: ruleFromValuesColumnNames EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumnNames"


    // $ANTLR start "ruleFromValuesColumnNames"
    // InternalSQLParser.g:691:1: ruleFromValuesColumnNames : ( ( rule__FromValuesColumnNames__Group__0 ) ) ;
    public final void ruleFromValuesColumnNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:695:2: ( ( ( rule__FromValuesColumnNames__Group__0 ) ) )
            // InternalSQLParser.g:696:2: ( ( rule__FromValuesColumnNames__Group__0 ) )
            {
            // InternalSQLParser.g:696:2: ( ( rule__FromValuesColumnNames__Group__0 ) )
            // InternalSQLParser.g:697:3: ( rule__FromValuesColumnNames__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }
            // InternalSQLParser.g:698:3: ( rule__FromValuesColumnNames__Group__0 )
            // InternalSQLParser.g:698:4: rule__FromValuesColumnNames__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumnNames"


    // $ANTLR start "entryRuleColumnName"
    // InternalSQLParser.g:707:1: entryRuleColumnName : ruleColumnName EOF ;
    public final void entryRuleColumnName() throws RecognitionException {
        try {
            // InternalSQLParser.g:708:1: ( ruleColumnName EOF )
            // InternalSQLParser.g:709:1: ruleColumnName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnName"


    // $ANTLR start "ruleColumnName"
    // InternalSQLParser.g:716:1: ruleColumnName : ( ( rule__ColumnName__ColNameAssignment ) ) ;
    public final void ruleColumnName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:720:2: ( ( ( rule__ColumnName__ColNameAssignment ) ) )
            // InternalSQLParser.g:721:2: ( ( rule__ColumnName__ColNameAssignment ) )
            {
            // InternalSQLParser.g:721:2: ( ( rule__ColumnName__ColNameAssignment ) )
            // InternalSQLParser.g:722:3: ( rule__ColumnName__ColNameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }
            // InternalSQLParser.g:723:3: ( rule__ColumnName__ColNameAssignment )
            // InternalSQLParser.g:723:4: rule__ColumnName__ColNameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ColumnName__ColNameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnName"


    // $ANTLR start "entryRuleValues"
    // InternalSQLParser.g:732:1: entryRuleValues : ruleValues EOF ;
    public final void entryRuleValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:733:1: ( ruleValues EOF )
            // InternalSQLParser.g:734:1: ruleValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValues"


    // $ANTLR start "ruleValues"
    // InternalSQLParser.g:741:1: ruleValues : ( ( rule__Values__Group__0 ) ) ;
    public final void ruleValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:745:2: ( ( ( rule__Values__Group__0 ) ) )
            // InternalSQLParser.g:746:2: ( ( rule__Values__Group__0 ) )
            {
            // InternalSQLParser.g:746:2: ( ( rule__Values__Group__0 ) )
            // InternalSQLParser.g:747:3: ( rule__Values__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:748:3: ( rule__Values__Group__0 )
            // InternalSQLParser.g:748:4: rule__Values__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValues"


    // $ANTLR start "entryRuleRows"
    // InternalSQLParser.g:757:1: entryRuleRows : ruleRows EOF ;
    public final void entryRuleRows() throws RecognitionException {
        try {
            // InternalSQLParser.g:758:1: ( ruleRows EOF )
            // InternalSQLParser.g:759:1: ruleRows EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRows"


    // $ANTLR start "ruleRows"
    // InternalSQLParser.g:766:1: ruleRows : ( ( rule__Rows__Group__0 ) ) ;
    public final void ruleRows() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:770:2: ( ( ( rule__Rows__Group__0 ) ) )
            // InternalSQLParser.g:771:2: ( ( rule__Rows__Group__0 ) )
            {
            // InternalSQLParser.g:771:2: ( ( rule__Rows__Group__0 ) )
            // InternalSQLParser.g:772:3: ( rule__Rows__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup()); 
            }
            // InternalSQLParser.g:773:3: ( rule__Rows__Group__0 )
            // InternalSQLParser.g:773:4: rule__Rows__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRows"


    // $ANTLR start "entryRuleRow"
    // InternalSQLParser.g:782:1: entryRuleRow : ruleRow EOF ;
    public final void entryRuleRow() throws RecognitionException {
        try {
            // InternalSQLParser.g:783:1: ( ruleRow EOF )
            // InternalSQLParser.g:784:1: ruleRow EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRow"


    // $ANTLR start "ruleRow"
    // InternalSQLParser.g:791:1: ruleRow : ( ( rule__Row__Group__0 ) ) ;
    public final void ruleRow() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:795:2: ( ( ( rule__Row__Group__0 ) ) )
            // InternalSQLParser.g:796:2: ( ( rule__Row__Group__0 ) )
            {
            // InternalSQLParser.g:796:2: ( ( rule__Row__Group__0 ) )
            // InternalSQLParser.g:797:3: ( rule__Row__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getGroup()); 
            }
            // InternalSQLParser.g:798:3: ( rule__Row__Group__0 )
            // InternalSQLParser.g:798:4: rule__Row__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRow"


    // $ANTLR start "entryRuleRowValues"
    // InternalSQLParser.g:807:1: entryRuleRowValues : ruleRowValues EOF ;
    public final void entryRuleRowValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:808:1: ( ruleRowValues EOF )
            // InternalSQLParser.g:809:1: ruleRowValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValues"


    // $ANTLR start "ruleRowValues"
    // InternalSQLParser.g:816:1: ruleRowValues : ( ( rule__RowValues__Group__0 ) ) ;
    public final void ruleRowValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:820:2: ( ( ( rule__RowValues__Group__0 ) ) )
            // InternalSQLParser.g:821:2: ( ( rule__RowValues__Group__0 ) )
            {
            // InternalSQLParser.g:821:2: ( ( rule__RowValues__Group__0 ) )
            // InternalSQLParser.g:822:3: ( rule__RowValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:823:3: ( rule__RowValues__Group__0 )
            // InternalSQLParser.g:823:4: rule__RowValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValues"


    // $ANTLR start "entryRuleRowValue"
    // InternalSQLParser.g:832:1: entryRuleRowValue : ruleRowValue EOF ;
    public final void entryRuleRowValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:833:1: ( ruleRowValue EOF )
            // InternalSQLParser.g:834:1: ruleRowValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValue"


    // $ANTLR start "ruleRowValue"
    // InternalSQLParser.g:841:1: ruleRowValue : ( ( rule__RowValue__Alternatives ) ) ;
    public final void ruleRowValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:845:2: ( ( ( rule__RowValue__Alternatives ) ) )
            // InternalSQLParser.g:846:2: ( ( rule__RowValue__Alternatives ) )
            {
            // InternalSQLParser.g:846:2: ( ( rule__RowValue__Alternatives ) )
            // InternalSQLParser.g:847:3: ( rule__RowValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:848:3: ( rule__RowValue__Alternatives )
            // InternalSQLParser.g:848:4: rule__RowValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RowValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValue"


    // $ANTLR start "entryRulePivotTable"
    // InternalSQLParser.g:857:1: entryRulePivotTable : rulePivotTable EOF ;
    public final void entryRulePivotTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:858:1: ( rulePivotTable EOF )
            // InternalSQLParser.g:859:1: rulePivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotTable"


    // $ANTLR start "rulePivotTable"
    // InternalSQLParser.g:866:1: rulePivotTable : ( ( rule__PivotTable__Group__0 ) ) ;
    public final void rulePivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:870:2: ( ( ( rule__PivotTable__Group__0 ) ) )
            // InternalSQLParser.g:871:2: ( ( rule__PivotTable__Group__0 ) )
            {
            // InternalSQLParser.g:871:2: ( ( rule__PivotTable__Group__0 ) )
            // InternalSQLParser.g:872:3: ( rule__PivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:873:3: ( rule__PivotTable__Group__0 )
            // InternalSQLParser.g:873:4: rule__PivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotTable"


    // $ANTLR start "entryRulePivotFunctions"
    // InternalSQLParser.g:882:1: entryRulePivotFunctions : rulePivotFunctions EOF ;
    public final void entryRulePivotFunctions() throws RecognitionException {
        try {
            // InternalSQLParser.g:883:1: ( rulePivotFunctions EOF )
            // InternalSQLParser.g:884:1: rulePivotFunctions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotFunctions"


    // $ANTLR start "rulePivotFunctions"
    // InternalSQLParser.g:891:1: rulePivotFunctions : ( ( rule__PivotFunctions__AbcAssignment ) ) ;
    public final void rulePivotFunctions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:895:2: ( ( ( rule__PivotFunctions__AbcAssignment ) ) )
            // InternalSQLParser.g:896:2: ( ( rule__PivotFunctions__AbcAssignment ) )
            {
            // InternalSQLParser.g:896:2: ( ( rule__PivotFunctions__AbcAssignment ) )
            // InternalSQLParser.g:897:3: ( rule__PivotFunctions__AbcAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }
            // InternalSQLParser.g:898:3: ( rule__PivotFunctions__AbcAssignment )
            // InternalSQLParser.g:898:4: rule__PivotFunctions__AbcAssignment
            {
            pushFollow(FOLLOW_2);
            rule__PivotFunctions__AbcAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotFunctions"


    // $ANTLR start "entryRulePivotInClause"
    // InternalSQLParser.g:907:1: entryRulePivotInClause : rulePivotInClause EOF ;
    public final void entryRulePivotInClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:908:1: ( rulePivotInClause EOF )
            // InternalSQLParser.g:909:1: rulePivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClause"


    // $ANTLR start "rulePivotInClause"
    // InternalSQLParser.g:916:1: rulePivotInClause : ( ( rule__PivotInClause__Group__0 ) ) ;
    public final void rulePivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:920:2: ( ( ( rule__PivotInClause__Group__0 ) ) )
            // InternalSQLParser.g:921:2: ( ( rule__PivotInClause__Group__0 ) )
            {
            // InternalSQLParser.g:921:2: ( ( rule__PivotInClause__Group__0 ) )
            // InternalSQLParser.g:922:3: ( rule__PivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:923:3: ( rule__PivotInClause__Group__0 )
            // InternalSQLParser.g:923:4: rule__PivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClause"


    // $ANTLR start "entryRulePivotInClauseAny"
    // InternalSQLParser.g:932:1: entryRulePivotInClauseAny : rulePivotInClauseAny EOF ;
    public final void entryRulePivotInClauseAny() throws RecognitionException {
        try {
            // InternalSQLParser.g:933:1: ( rulePivotInClauseAny EOF )
            // InternalSQLParser.g:934:1: rulePivotInClauseAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClauseAny"


    // $ANTLR start "rulePivotInClauseAny"
    // InternalSQLParser.g:941:1: rulePivotInClauseAny : ( ( rule__PivotInClauseAny__Group__0 ) ) ;
    public final void rulePivotInClauseAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:945:2: ( ( ( rule__PivotInClauseAny__Group__0 ) ) )
            // InternalSQLParser.g:946:2: ( ( rule__PivotInClauseAny__Group__0 ) )
            {
            // InternalSQLParser.g:946:2: ( ( rule__PivotInClauseAny__Group__0 ) )
            // InternalSQLParser.g:947:3: ( rule__PivotInClauseAny__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }
            // InternalSQLParser.g:948:3: ( rule__PivotInClauseAny__Group__0 )
            // InternalSQLParser.g:948:4: rule__PivotInClauseAny__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClauseAny"


    // $ANTLR start "entryRuleUnpivotTable"
    // InternalSQLParser.g:957:1: entryRuleUnpivotTable : ruleUnpivotTable EOF ;
    public final void entryRuleUnpivotTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:958:1: ( ruleUnpivotTable EOF )
            // InternalSQLParser.g:959:1: ruleUnpivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotTable"


    // $ANTLR start "ruleUnpivotTable"
    // InternalSQLParser.g:966:1: ruleUnpivotTable : ( ( rule__UnpivotTable__Group__0 ) ) ;
    public final void ruleUnpivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:970:2: ( ( ( rule__UnpivotTable__Group__0 ) ) )
            // InternalSQLParser.g:971:2: ( ( rule__UnpivotTable__Group__0 ) )
            {
            // InternalSQLParser.g:971:2: ( ( rule__UnpivotTable__Group__0 ) )
            // InternalSQLParser.g:972:3: ( rule__UnpivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:973:3: ( rule__UnpivotTable__Group__0 )
            // InternalSQLParser.g:973:4: rule__UnpivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotTable"


    // $ANTLR start "entryRuleUnpivotInClause"
    // InternalSQLParser.g:982:1: entryRuleUnpivotInClause : ruleUnpivotInClause EOF ;
    public final void entryRuleUnpivotInClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:983:1: ( ruleUnpivotInClause EOF )
            // InternalSQLParser.g:984:1: ruleUnpivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClause"


    // $ANTLR start "ruleUnpivotInClause"
    // InternalSQLParser.g:991:1: ruleUnpivotInClause : ( ( rule__UnpivotInClause__Group__0 ) ) ;
    public final void ruleUnpivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:995:2: ( ( ( rule__UnpivotInClause__Group__0 ) ) )
            // InternalSQLParser.g:996:2: ( ( rule__UnpivotInClause__Group__0 ) )
            {
            // InternalSQLParser.g:996:2: ( ( rule__UnpivotInClause__Group__0 ) )
            // InternalSQLParser.g:997:3: ( rule__UnpivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:998:3: ( rule__UnpivotInClause__Group__0 )
            // InternalSQLParser.g:998:4: rule__UnpivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClause"


    // $ANTLR start "entryRuleUnpivotInClauseArgs"
    // InternalSQLParser.g:1007:1: entryRuleUnpivotInClauseArgs : ruleUnpivotInClauseArgs EOF ;
    public final void entryRuleUnpivotInClauseArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:1008:1: ( ruleUnpivotInClauseArgs EOF )
            // InternalSQLParser.g:1009:1: ruleUnpivotInClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArgs"


    // $ANTLR start "ruleUnpivotInClauseArgs"
    // InternalSQLParser.g:1016:1: ruleUnpivotInClauseArgs : ( ( rule__UnpivotInClauseArgs__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1020:2: ( ( ( rule__UnpivotInClauseArgs__Group__0 ) ) )
            // InternalSQLParser.g:1021:2: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            {
            // InternalSQLParser.g:1021:2: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            // InternalSQLParser.g:1022:3: ( rule__UnpivotInClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1023:3: ( rule__UnpivotInClauseArgs__Group__0 )
            // InternalSQLParser.g:1023:4: rule__UnpivotInClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArgs"


    // $ANTLR start "entryRuleUnpivotInClauseArg"
    // InternalSQLParser.g:1032:1: entryRuleUnpivotInClauseArg : ruleUnpivotInClauseArg EOF ;
    public final void entryRuleUnpivotInClauseArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:1033:1: ( ruleUnpivotInClauseArg EOF )
            // InternalSQLParser.g:1034:1: ruleUnpivotInClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArg"


    // $ANTLR start "ruleUnpivotInClauseArg"
    // InternalSQLParser.g:1041:1: ruleUnpivotInClauseArg : ( ( rule__UnpivotInClauseArg__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1045:2: ( ( ( rule__UnpivotInClauseArg__Group__0 ) ) )
            // InternalSQLParser.g:1046:2: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            {
            // InternalSQLParser.g:1046:2: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            // InternalSQLParser.g:1047:3: ( rule__UnpivotInClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:1048:3: ( rule__UnpivotInClauseArg__Group__0 )
            // InternalSQLParser.g:1048:4: rule__UnpivotInClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArg"


    // $ANTLR start "entryRulePivotForClause"
    // InternalSQLParser.g:1057:1: entryRulePivotForClause : rulePivotForClause EOF ;
    public final void entryRulePivotForClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1058:1: ( rulePivotForClause EOF )
            // InternalSQLParser.g:1059:1: rulePivotForClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotForClause"


    // $ANTLR start "rulePivotForClause"
    // InternalSQLParser.g:1066:1: rulePivotForClause : ( ( rule__PivotForClause__Group__0 ) ) ;
    public final void rulePivotForClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1070:2: ( ( ( rule__PivotForClause__Group__0 ) ) )
            // InternalSQLParser.g:1071:2: ( ( rule__PivotForClause__Group__0 ) )
            {
            // InternalSQLParser.g:1071:2: ( ( rule__PivotForClause__Group__0 ) )
            // InternalSQLParser.g:1072:3: ( rule__PivotForClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1073:3: ( rule__PivotForClause__Group__0 )
            // InternalSQLParser.g:1073:4: rule__PivotForClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotForClause"


    // $ANTLR start "entryRulePivotColumns"
    // InternalSQLParser.g:1082:1: entryRulePivotColumns : rulePivotColumns EOF ;
    public final void entryRulePivotColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1083:1: ( rulePivotColumns EOF )
            // InternalSQLParser.g:1084:1: rulePivotColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotColumns"


    // $ANTLR start "rulePivotColumns"
    // InternalSQLParser.g:1091:1: rulePivotColumns : ( ( rule__PivotColumns__Alternatives ) ) ;
    public final void rulePivotColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1095:2: ( ( ( rule__PivotColumns__Alternatives ) ) )
            // InternalSQLParser.g:1096:2: ( ( rule__PivotColumns__Alternatives ) )
            {
            // InternalSQLParser.g:1096:2: ( ( rule__PivotColumns__Alternatives ) )
            // InternalSQLParser.g:1097:3: ( rule__PivotColumns__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1098:3: ( rule__PivotColumns__Alternatives )
            // InternalSQLParser.g:1098:4: rule__PivotColumns__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotColumns"


    // $ANTLR start "entryRulePivotCols"
    // InternalSQLParser.g:1107:1: entryRulePivotCols : rulePivotCols EOF ;
    public final void entryRulePivotCols() throws RecognitionException {
        try {
            // InternalSQLParser.g:1108:1: ( rulePivotCols EOF )
            // InternalSQLParser.g:1109:1: rulePivotCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCols"


    // $ANTLR start "rulePivotCols"
    // InternalSQLParser.g:1116:1: rulePivotCols : ( ( rule__PivotCols__Group__0 ) ) ;
    public final void rulePivotCols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1120:2: ( ( ( rule__PivotCols__Group__0 ) ) )
            // InternalSQLParser.g:1121:2: ( ( rule__PivotCols__Group__0 ) )
            {
            // InternalSQLParser.g:1121:2: ( ( rule__PivotCols__Group__0 ) )
            // InternalSQLParser.g:1122:3: ( rule__PivotCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1123:3: ( rule__PivotCols__Group__0 )
            // InternalSQLParser.g:1123:4: rule__PivotCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCols"


    // $ANTLR start "entryRulePivotCol"
    // InternalSQLParser.g:1132:1: entryRulePivotCol : rulePivotCol EOF ;
    public final void entryRulePivotCol() throws RecognitionException {
        try {
            // InternalSQLParser.g:1133:1: ( rulePivotCol EOF )
            // InternalSQLParser.g:1134:1: rulePivotCol EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCol"


    // $ANTLR start "rulePivotCol"
    // InternalSQLParser.g:1141:1: rulePivotCol : ( ( rule__PivotCol__Group__0 ) ) ;
    public final void rulePivotCol() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1145:2: ( ( ( rule__PivotCol__Group__0 ) ) )
            // InternalSQLParser.g:1146:2: ( ( rule__PivotCol__Group__0 ) )
            {
            // InternalSQLParser.g:1146:2: ( ( rule__PivotCol__Group__0 ) )
            // InternalSQLParser.g:1147:3: ( rule__PivotCol__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup()); 
            }
            // InternalSQLParser.g:1148:3: ( rule__PivotCol__Group__0 )
            // InternalSQLParser.g:1148:4: rule__PivotCol__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCol"


    // $ANTLR start "entryRuleTableFull"
    // InternalSQLParser.g:1157:1: entryRuleTableFull : ruleTableFull EOF ;
    public final void entryRuleTableFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1158:1: ( ruleTableFull EOF )
            // InternalSQLParser.g:1159:1: ruleTableFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableFull"


    // $ANTLR start "ruleTableFull"
    // InternalSQLParser.g:1166:1: ruleTableFull : ( ( rule__TableFull__Group__0 ) ) ;
    public final void ruleTableFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1170:2: ( ( ( rule__TableFull__Group__0 ) ) )
            // InternalSQLParser.g:1171:2: ( ( rule__TableFull__Group__0 ) )
            {
            // InternalSQLParser.g:1171:2: ( ( rule__TableFull__Group__0 ) )
            // InternalSQLParser.g:1172:3: ( rule__TableFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:1173:3: ( rule__TableFull__Group__0 )
            // InternalSQLParser.g:1173:4: rule__TableFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableFull"


    // $ANTLR start "entryRuleDbObjectNameAll"
    // InternalSQLParser.g:1182:1: entryRuleDbObjectNameAll : ruleDbObjectNameAll EOF ;
    public final void entryRuleDbObjectNameAll() throws RecognitionException {
        try {
            // InternalSQLParser.g:1183:1: ( ruleDbObjectNameAll EOF )
            // InternalSQLParser.g:1184:1: ruleDbObjectNameAll EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectNameAll"


    // $ANTLR start "ruleDbObjectNameAll"
    // InternalSQLParser.g:1191:1: ruleDbObjectNameAll : ( ( rule__DbObjectNameAll__Group__0 ) ) ;
    public final void ruleDbObjectNameAll() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1195:2: ( ( ( rule__DbObjectNameAll__Group__0 ) ) )
            // InternalSQLParser.g:1196:2: ( ( rule__DbObjectNameAll__Group__0 ) )
            {
            // InternalSQLParser.g:1196:2: ( ( rule__DbObjectNameAll__Group__0 ) )
            // InternalSQLParser.g:1197:3: ( rule__DbObjectNameAll__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }
            // InternalSQLParser.g:1198:3: ( rule__DbObjectNameAll__Group__0 )
            // InternalSQLParser.g:1198:4: rule__DbObjectNameAll__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectNameAll"


    // $ANTLR start "entryRuleDbObjectName"
    // InternalSQLParser.g:1207:1: entryRuleDbObjectName : ruleDbObjectName EOF ;
    public final void entryRuleDbObjectName() throws RecognitionException {
        try {
            // InternalSQLParser.g:1208:1: ( ruleDbObjectName EOF )
            // InternalSQLParser.g:1209:1: ruleDbObjectName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectName"


    // $ANTLR start "ruleDbObjectName"
    // InternalSQLParser.g:1216:1: ruleDbObjectName : ( ( rule__DbObjectName__DbnameAssignment ) ) ;
    public final void ruleDbObjectName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1220:2: ( ( ( rule__DbObjectName__DbnameAssignment ) ) )
            // InternalSQLParser.g:1221:2: ( ( rule__DbObjectName__DbnameAssignment ) )
            {
            // InternalSQLParser.g:1221:2: ( ( rule__DbObjectName__DbnameAssignment ) )
            // InternalSQLParser.g:1222:3: ( rule__DbObjectName__DbnameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }
            // InternalSQLParser.g:1223:3: ( rule__DbObjectName__DbnameAssignment )
            // InternalSQLParser.g:1223:4: rule__DbObjectName__DbnameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectName__DbnameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectName"


    // $ANTLR start "entryRuleOrderByColumns"
    // InternalSQLParser.g:1232:1: entryRuleOrderByColumns : ruleOrderByColumns EOF ;
    public final void entryRuleOrderByColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1233:1: ( ruleOrderByColumns EOF )
            // InternalSQLParser.g:1234:1: ruleOrderByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumns"


    // $ANTLR start "ruleOrderByColumns"
    // InternalSQLParser.g:1241:1: ruleOrderByColumns : ( ( rule__OrderByColumns__Group__0 ) ) ;
    public final void ruleOrderByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1245:2: ( ( ( rule__OrderByColumns__Group__0 ) ) )
            // InternalSQLParser.g:1246:2: ( ( rule__OrderByColumns__Group__0 ) )
            {
            // InternalSQLParser.g:1246:2: ( ( rule__OrderByColumns__Group__0 ) )
            // InternalSQLParser.g:1247:3: ( rule__OrderByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1248:3: ( rule__OrderByColumns__Group__0 )
            // InternalSQLParser.g:1248:4: rule__OrderByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumns"


    // $ANTLR start "entryRuleOrderByColumnFull"
    // InternalSQLParser.g:1257:1: entryRuleOrderByColumnFull : ruleOrderByColumnFull EOF ;
    public final void entryRuleOrderByColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1258:1: ( ruleOrderByColumnFull EOF )
            // InternalSQLParser.g:1259:1: ruleOrderByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumnFull"


    // $ANTLR start "ruleOrderByColumnFull"
    // InternalSQLParser.g:1266:1: ruleOrderByColumnFull : ( ( rule__OrderByColumnFull__Group__0 ) ) ;
    public final void ruleOrderByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1270:2: ( ( ( rule__OrderByColumnFull__Group__0 ) ) )
            // InternalSQLParser.g:1271:2: ( ( rule__OrderByColumnFull__Group__0 ) )
            {
            // InternalSQLParser.g:1271:2: ( ( rule__OrderByColumnFull__Group__0 ) )
            // InternalSQLParser.g:1272:3: ( rule__OrderByColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:1273:3: ( rule__OrderByColumnFull__Group__0 )
            // InternalSQLParser.g:1273:4: rule__OrderByColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumnFull"


    // $ANTLR start "entryRuleGroupByColumns"
    // InternalSQLParser.g:1282:1: entryRuleGroupByColumns : ruleGroupByColumns EOF ;
    public final void entryRuleGroupByColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1283:1: ( ruleGroupByColumns EOF )
            // InternalSQLParser.g:1284:1: ruleGroupByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumns"


    // $ANTLR start "ruleGroupByColumns"
    // InternalSQLParser.g:1291:1: ruleGroupByColumns : ( ( rule__GroupByColumns__Group__0 ) ) ;
    public final void ruleGroupByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1295:2: ( ( ( rule__GroupByColumns__Group__0 ) ) )
            // InternalSQLParser.g:1296:2: ( ( rule__GroupByColumns__Group__0 ) )
            {
            // InternalSQLParser.g:1296:2: ( ( rule__GroupByColumns__Group__0 ) )
            // InternalSQLParser.g:1297:3: ( rule__GroupByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1298:3: ( rule__GroupByColumns__Group__0 )
            // InternalSQLParser.g:1298:4: rule__GroupByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumns"


    // $ANTLR start "entryRuleGroupByColumnFull"
    // InternalSQLParser.g:1307:1: entryRuleGroupByColumnFull : ruleGroupByColumnFull EOF ;
    public final void entryRuleGroupByColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1308:1: ( ruleGroupByColumnFull EOF )
            // InternalSQLParser.g:1309:1: ruleGroupByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumnFull"


    // $ANTLR start "ruleGroupByColumnFull"
    // InternalSQLParser.g:1316:1: ruleGroupByColumnFull : ( ( rule__GroupByColumnFull__Alternatives ) ) ;
    public final void ruleGroupByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1320:2: ( ( ( rule__GroupByColumnFull__Alternatives ) ) )
            // InternalSQLParser.g:1321:2: ( ( rule__GroupByColumnFull__Alternatives ) )
            {
            // InternalSQLParser.g:1321:2: ( ( rule__GroupByColumnFull__Alternatives ) )
            // InternalSQLParser.g:1322:3: ( rule__GroupByColumnFull__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1323:3: ( rule__GroupByColumnFull__Alternatives )
            // InternalSQLParser.g:1323:4: rule__GroupByColumnFull__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumnFull__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumnFull"


    // $ANTLR start "entryRuleFullExpression"
    // InternalSQLParser.g:1332:1: entryRuleFullExpression : ruleFullExpression EOF ;
    public final void entryRuleFullExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:1333:1: ( ruleFullExpression EOF )
            // InternalSQLParser.g:1334:1: ruleFullExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFullExpression"


    // $ANTLR start "ruleFullExpression"
    // InternalSQLParser.g:1341:1: ruleFullExpression : ( ( rule__FullExpression__Group__0 ) ) ;
    public final void ruleFullExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1345:2: ( ( ( rule__FullExpression__Group__0 ) ) )
            // InternalSQLParser.g:1346:2: ( ( rule__FullExpression__Group__0 ) )
            {
            // InternalSQLParser.g:1346:2: ( ( rule__FullExpression__Group__0 ) )
            // InternalSQLParser.g:1347:3: ( rule__FullExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1348:3: ( rule__FullExpression__Group__0 )
            // InternalSQLParser.g:1348:4: rule__FullExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFullExpression"


    // $ANTLR start "entryRuleExpressionFragmentSecond"
    // InternalSQLParser.g:1357:1: entryRuleExpressionFragmentSecond : ruleExpressionFragmentSecond EOF ;
    public final void entryRuleExpressionFragmentSecond() throws RecognitionException {
        try {
            // InternalSQLParser.g:1358:1: ( ruleExpressionFragmentSecond EOF )
            // InternalSQLParser.g:1359:1: ruleExpressionFragmentSecond EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragmentSecond"


    // $ANTLR start "ruleExpressionFragmentSecond"
    // InternalSQLParser.g:1366:1: ruleExpressionFragmentSecond : ( ( rule__ExpressionFragmentSecond__Alternatives ) ) ;
    public final void ruleExpressionFragmentSecond() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1370:2: ( ( ( rule__ExpressionFragmentSecond__Alternatives ) ) )
            // InternalSQLParser.g:1371:2: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            {
            // InternalSQLParser.g:1371:2: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            // InternalSQLParser.g:1372:3: ( rule__ExpressionFragmentSecond__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1373:3: ( rule__ExpressionFragmentSecond__Alternatives )
            // InternalSQLParser.g:1373:4: rule__ExpressionFragmentSecond__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragmentSecond"


    // $ANTLR start "entryRuleExpressionFragment"
    // InternalSQLParser.g:1382:1: entryRuleExpressionFragment : ruleExpressionFragment EOF ;
    public final void entryRuleExpressionFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:1383:1: ( ruleExpressionFragment EOF )
            // InternalSQLParser.g:1384:1: ruleExpressionFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragment"


    // $ANTLR start "ruleExpressionFragment"
    // InternalSQLParser.g:1391:1: ruleExpressionFragment : ( ( rule__ExpressionFragment__Alternatives ) ) ;
    public final void ruleExpressionFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1395:2: ( ( ( rule__ExpressionFragment__Alternatives ) ) )
            // InternalSQLParser.g:1396:2: ( ( rule__ExpressionFragment__Alternatives ) )
            {
            // InternalSQLParser.g:1396:2: ( ( rule__ExpressionFragment__Alternatives ) )
            // InternalSQLParser.g:1397:3: ( rule__ExpressionFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1398:3: ( rule__ExpressionFragment__Alternatives )
            // InternalSQLParser.g:1398:4: rule__ExpressionFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragment"


    // $ANTLR start "entryRuleExpressionGroup"
    // InternalSQLParser.g:1407:1: entryRuleExpressionGroup : ruleExpressionGroup EOF ;
    public final void entryRuleExpressionGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:1408:1: ( ruleExpressionGroup EOF )
            // InternalSQLParser.g:1409:1: ruleExpressionGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionGroup"


    // $ANTLR start "ruleExpressionGroup"
    // InternalSQLParser.g:1416:1: ruleExpressionGroup : ( ( rule__ExpressionGroup__Group__0 ) ) ;
    public final void ruleExpressionGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1420:2: ( ( ( rule__ExpressionGroup__Group__0 ) ) )
            // InternalSQLParser.g:1421:2: ( ( rule__ExpressionGroup__Group__0 ) )
            {
            // InternalSQLParser.g:1421:2: ( ( rule__ExpressionGroup__Group__0 ) )
            // InternalSQLParser.g:1422:3: ( rule__ExpressionGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }
            // InternalSQLParser.g:1423:3: ( rule__ExpressionGroup__Group__0 )
            // InternalSQLParser.g:1423:4: rule__ExpressionGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionGroup"


    // $ANTLR start "entryRuleXExpression"
    // InternalSQLParser.g:1432:1: entryRuleXExpression : ruleXExpression EOF ;
    public final void entryRuleXExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:1433:1: ( ruleXExpression EOF )
            // InternalSQLParser.g:1434:1: ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalSQLParser.g:1441:1: ruleXExpression : ( ( rule__XExpression__Group__0 ) ) ;
    public final void ruleXExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1445:2: ( ( ( rule__XExpression__Group__0 ) ) )
            // InternalSQLParser.g:1446:2: ( ( rule__XExpression__Group__0 ) )
            {
            // InternalSQLParser.g:1446:2: ( ( rule__XExpression__Group__0 ) )
            // InternalSQLParser.g:1447:3: ( rule__XExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1448:3: ( rule__XExpression__Group__0 )
            // InternalSQLParser.g:1448:4: rule__XExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXExpression_"
    // InternalSQLParser.g:1457:1: entryRuleXExpression_ : ruleXExpression_ EOF ;
    public final void entryRuleXExpression_() throws RecognitionException {
        try {
            // InternalSQLParser.g:1458:1: ( ruleXExpression_ EOF )
            // InternalSQLParser.g:1459:1: ruleXExpression_ EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Rule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Rule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression_"


    // $ANTLR start "ruleXExpression_"
    // InternalSQLParser.g:1466:1: ruleXExpression_ : ( ( rule__XExpression___Group__0 ) ) ;
    public final void ruleXExpression_() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1470:2: ( ( ( rule__XExpression___Group__0 ) ) )
            // InternalSQLParser.g:1471:2: ( ( rule__XExpression___Group__0 ) )
            {
            // InternalSQLParser.g:1471:2: ( ( rule__XExpression___Group__0 ) )
            // InternalSQLParser.g:1472:3: ( rule__XExpression___Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup()); 
            }
            // InternalSQLParser.g:1473:3: ( rule__XExpression___Group__0 )
            // InternalSQLParser.g:1473:4: rule__XExpression___Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression_"


    // $ANTLR start "entryRuleXExpressionParams"
    // InternalSQLParser.g:1482:1: entryRuleXExpressionParams : ruleXExpressionParams EOF ;
    public final void entryRuleXExpressionParams() throws RecognitionException {
        try {
            // InternalSQLParser.g:1483:1: ( ruleXExpressionParams EOF )
            // InternalSQLParser.g:1484:1: ruleXExpressionParams EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionParams"


    // $ANTLR start "ruleXExpressionParams"
    // InternalSQLParser.g:1491:1: ruleXExpressionParams : ( ( rule__XExpressionParams__Group__0 ) ) ;
    public final void ruleXExpressionParams() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1495:2: ( ( ( rule__XExpressionParams__Group__0 ) ) )
            // InternalSQLParser.g:1496:2: ( ( rule__XExpressionParams__Group__0 ) )
            {
            // InternalSQLParser.g:1496:2: ( ( rule__XExpressionParams__Group__0 ) )
            // InternalSQLParser.g:1497:3: ( rule__XExpressionParams__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1498:3: ( rule__XExpressionParams__Group__0 )
            // InternalSQLParser.g:1498:4: rule__XExpressionParams__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpressionParams"


    // $ANTLR start "entryRuleJRParameter"
    // InternalSQLParser.g:1507:1: entryRuleJRParameter : ruleJRParameter EOF ;
    public final void entryRuleJRParameter() throws RecognitionException {
        try {
            // InternalSQLParser.g:1508:1: ( ruleJRParameter EOF )
            // InternalSQLParser.g:1509:1: ruleJRParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJRParameter"


    // $ANTLR start "ruleJRParameter"
    // InternalSQLParser.g:1516:1: ruleJRParameter : ( ( rule__JRParameter__JrprmAssignment ) ) ;
    public final void ruleJRParameter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1520:2: ( ( ( rule__JRParameter__JrprmAssignment ) ) )
            // InternalSQLParser.g:1521:2: ( ( rule__JRParameter__JrprmAssignment ) )
            {
            // InternalSQLParser.g:1521:2: ( ( rule__JRParameter__JrprmAssignment ) )
            // InternalSQLParser.g:1522:3: ( rule__JRParameter__JrprmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }
            // InternalSQLParser.g:1523:3: ( rule__JRParameter__JrprmAssignment )
            // InternalSQLParser.g:1523:4: rule__JRParameter__JrprmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__JRParameter__JrprmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJRParameter"


    // $ANTLR start "entryRuleExpression"
    // InternalSQLParser.g:1532:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:1533:1: ( ruleExpression EOF )
            // InternalSQLParser.g:1534:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSQLParser.g:1541:1: ruleExpression : ( ( rule__Expression__Group__0 ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1545:2: ( ( ( rule__Expression__Group__0 ) ) )
            // InternalSQLParser.g:1546:2: ( ( rule__Expression__Group__0 ) )
            {
            // InternalSQLParser.g:1546:2: ( ( rule__Expression__Group__0 ) )
            // InternalSQLParser.g:1547:3: ( rule__Expression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1548:3: ( rule__Expression__Group__0 )
            // InternalSQLParser.g:1548:4: rule__Expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleIsNullValue"
    // InternalSQLParser.g:1557:1: entryRuleIsNullValue : ruleIsNullValue EOF ;
    public final void entryRuleIsNullValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1558:1: ( ruleIsNullValue EOF )
            // InternalSQLParser.g:1559:1: ruleIsNullValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsNullValue"


    // $ANTLR start "ruleIsNullValue"
    // InternalSQLParser.g:1566:1: ruleIsNullValue : ( ( rule__IsNullValue__Group__0 ) ) ;
    public final void ruleIsNullValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1570:2: ( ( ( rule__IsNullValue__Group__0 ) ) )
            // InternalSQLParser.g:1571:2: ( ( rule__IsNullValue__Group__0 ) )
            {
            // InternalSQLParser.g:1571:2: ( ( rule__IsNullValue__Group__0 ) )
            // InternalSQLParser.g:1572:3: ( rule__IsNullValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:1573:3: ( rule__IsNullValue__Group__0 )
            // InternalSQLParser.g:1573:4: rule__IsNullValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsNullValue"


    // $ANTLR start "entryRuleComparison"
    // InternalSQLParser.g:1582:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalSQLParser.g:1583:1: ( ruleComparison EOF )
            // InternalSQLParser.g:1584:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalSQLParser.g:1591:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1595:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalSQLParser.g:1596:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalSQLParser.g:1596:2: ( ( rule__Comparison__Group__0 ) )
            // InternalSQLParser.g:1597:3: ( rule__Comparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup()); 
            }
            // InternalSQLParser.g:1598:3: ( rule__Comparison__Group__0 )
            // InternalSQLParser.g:1598:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleLike"
    // InternalSQLParser.g:1607:1: entryRuleLike : ruleLike EOF ;
    public final void entryRuleLike() throws RecognitionException {
        try {
            // InternalSQLParser.g:1608:1: ( ruleLike EOF )
            // InternalSQLParser.g:1609:1: ruleLike EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLike"


    // $ANTLR start "ruleLike"
    // InternalSQLParser.g:1616:1: ruleLike : ( ( rule__Like__Group__0 ) ) ;
    public final void ruleLike() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1620:2: ( ( ( rule__Like__Group__0 ) ) )
            // InternalSQLParser.g:1621:2: ( ( rule__Like__Group__0 ) )
            {
            // InternalSQLParser.g:1621:2: ( ( rule__Like__Group__0 ) )
            // InternalSQLParser.g:1622:3: ( rule__Like__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getGroup()); 
            }
            // InternalSQLParser.g:1623:3: ( rule__Like__Group__0 )
            // InternalSQLParser.g:1623:4: rule__Like__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLike"


    // $ANTLR start "entryRuleLikeValue"
    // InternalSQLParser.g:1632:1: entryRuleLikeValue : ruleLikeValue EOF ;
    public final void entryRuleLikeValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1633:1: ( ruleLikeValue EOF )
            // InternalSQLParser.g:1634:1: ruleLikeValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeValue"


    // $ANTLR start "ruleLikeValue"
    // InternalSQLParser.g:1641:1: ruleLikeValue : ( ( rule__LikeValue__Group__0 ) ) ;
    public final void ruleLikeValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1645:2: ( ( ( rule__LikeValue__Group__0 ) ) )
            // InternalSQLParser.g:1646:2: ( ( rule__LikeValue__Group__0 ) )
            {
            // InternalSQLParser.g:1646:2: ( ( rule__LikeValue__Group__0 ) )
            // InternalSQLParser.g:1647:3: ( rule__LikeValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:1648:3: ( rule__LikeValue__Group__0 )
            // InternalSQLParser.g:1648:4: rule__LikeValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeValue"


    // $ANTLR start "entryRuleLikeOperand"
    // InternalSQLParser.g:1657:1: entryRuleLikeOperand : ruleLikeOperand EOF ;
    public final void entryRuleLikeOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:1658:1: ( ruleLikeOperand EOF )
            // InternalSQLParser.g:1659:1: ruleLikeOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeOperand"


    // $ANTLR start "ruleLikeOperand"
    // InternalSQLParser.g:1666:1: ruleLikeOperand : ( ( rule__LikeOperand__Alternatives ) ) ;
    public final void ruleLikeOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1670:2: ( ( ( rule__LikeOperand__Alternatives ) ) )
            // InternalSQLParser.g:1671:2: ( ( rule__LikeOperand__Alternatives ) )
            {
            // InternalSQLParser.g:1671:2: ( ( rule__LikeOperand__Alternatives ) )
            // InternalSQLParser.g:1672:3: ( rule__LikeOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1673:3: ( rule__LikeOperand__Alternatives )
            // InternalSQLParser.g:1673:4: rule__LikeOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LikeOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeOperand"


    // $ANTLR start "entryRuleBetween"
    // InternalSQLParser.g:1682:1: entryRuleBetween : ruleBetween EOF ;
    public final void entryRuleBetween() throws RecognitionException {
        try {
            // InternalSQLParser.g:1683:1: ( ruleBetween EOF )
            // InternalSQLParser.g:1684:1: ruleBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetween"


    // $ANTLR start "ruleBetween"
    // InternalSQLParser.g:1691:1: ruleBetween : ( ( rule__Between__Group__0 ) ) ;
    public final void ruleBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1695:2: ( ( ( rule__Between__Group__0 ) ) )
            // InternalSQLParser.g:1696:2: ( ( rule__Between__Group__0 ) )
            {
            // InternalSQLParser.g:1696:2: ( ( rule__Between__Group__0 ) )
            // InternalSQLParser.g:1697:3: ( rule__Between__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getGroup()); 
            }
            // InternalSQLParser.g:1698:3: ( rule__Between__Group__0 )
            // InternalSQLParser.g:1698:4: rule__Between__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetween"


    // $ANTLR start "entryRuleBetweenValue"
    // InternalSQLParser.g:1707:1: entryRuleBetweenValue : ruleBetweenValue EOF ;
    public final void entryRuleBetweenValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1708:1: ( ruleBetweenValue EOF )
            // InternalSQLParser.g:1709:1: ruleBetweenValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetweenValue"


    // $ANTLR start "ruleBetweenValue"
    // InternalSQLParser.g:1716:1: ruleBetweenValue : ( ( rule__BetweenValue__Group__0 ) ) ;
    public final void ruleBetweenValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1720:2: ( ( ( rule__BetweenValue__Group__0 ) ) )
            // InternalSQLParser.g:1721:2: ( ( rule__BetweenValue__Group__0 ) )
            {
            // InternalSQLParser.g:1721:2: ( ( rule__BetweenValue__Group__0 ) )
            // InternalSQLParser.g:1722:3: ( rule__BetweenValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:1723:3: ( rule__BetweenValue__Group__0 )
            // InternalSQLParser.g:1723:4: rule__BetweenValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetweenValue"


    // $ANTLR start "entryRuleInOperator"
    // InternalSQLParser.g:1732:1: entryRuleInOperator : ruleInOperator EOF ;
    public final void entryRuleInOperator() throws RecognitionException {
        try {
            // InternalSQLParser.g:1733:1: ( ruleInOperator EOF )
            // InternalSQLParser.g:1734:1: ruleInOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInOperator"


    // $ANTLR start "ruleInOperator"
    // InternalSQLParser.g:1741:1: ruleInOperator : ( ( rule__InOperator__Group__0 ) ) ;
    public final void ruleInOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1745:2: ( ( ( rule__InOperator__Group__0 ) ) )
            // InternalSQLParser.g:1746:2: ( ( rule__InOperator__Group__0 ) )
            {
            // InternalSQLParser.g:1746:2: ( ( rule__InOperator__Group__0 ) )
            // InternalSQLParser.g:1747:3: ( rule__InOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getGroup()); 
            }
            // InternalSQLParser.g:1748:3: ( rule__InOperator__Group__0 )
            // InternalSQLParser.g:1748:4: rule__InOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInOperator"


    // $ANTLR start "entryRuleInValue"
    // InternalSQLParser.g:1757:1: entryRuleInValue : ruleInValue EOF ;
    public final void entryRuleInValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1758:1: ( ruleInValue EOF )
            // InternalSQLParser.g:1759:1: ruleInValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInValue"


    // $ANTLR start "ruleInValue"
    // InternalSQLParser.g:1766:1: ruleInValue : ( ( rule__InValue__Group__0 ) ) ;
    public final void ruleInValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1770:2: ( ( ( rule__InValue__Group__0 ) ) )
            // InternalSQLParser.g:1771:2: ( ( rule__InValue__Group__0 ) )
            {
            // InternalSQLParser.g:1771:2: ( ( rule__InValue__Group__0 ) )
            // InternalSQLParser.g:1772:3: ( rule__InValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:1773:3: ( rule__InValue__Group__0 )
            // InternalSQLParser.g:1773:4: rule__InValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInValue"


    // $ANTLR start "entryRuleExistsOperator"
    // InternalSQLParser.g:1782:1: entryRuleExistsOperator : ruleExistsOperator EOF ;
    public final void entryRuleExistsOperator() throws RecognitionException {
        try {
            // InternalSQLParser.g:1783:1: ( ruleExistsOperator EOF )
            // InternalSQLParser.g:1784:1: ruleExistsOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsOperator"


    // $ANTLR start "ruleExistsOperator"
    // InternalSQLParser.g:1791:1: ruleExistsOperator : ( ( rule__ExistsOperator__Group__0 ) ) ;
    public final void ruleExistsOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1795:2: ( ( ( rule__ExistsOperator__Group__0 ) ) )
            // InternalSQLParser.g:1796:2: ( ( rule__ExistsOperator__Group__0 ) )
            {
            // InternalSQLParser.g:1796:2: ( ( rule__ExistsOperator__Group__0 ) )
            // InternalSQLParser.g:1797:3: ( rule__ExistsOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }
            // InternalSQLParser.g:1798:3: ( rule__ExistsOperator__Group__0 )
            // InternalSQLParser.g:1798:4: rule__ExistsOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsOperator"


    // $ANTLR start "entryRuleExistsValue"
    // InternalSQLParser.g:1807:1: entryRuleExistsValue : ruleExistsValue EOF ;
    public final void entryRuleExistsValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1808:1: ( ruleExistsValue EOF )
            // InternalSQLParser.g:1809:1: ruleExistsValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsValue"


    // $ANTLR start "ruleExistsValue"
    // InternalSQLParser.g:1816:1: ruleExistsValue : ( ( rule__ExistsValue__Group__0 ) ) ;
    public final void ruleExistsValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1820:2: ( ( ( rule__ExistsValue__Group__0 ) ) )
            // InternalSQLParser.g:1821:2: ( ( rule__ExistsValue__Group__0 ) )
            {
            // InternalSQLParser.g:1821:2: ( ( rule__ExistsValue__Group__0 ) )
            // InternalSQLParser.g:1822:3: ( rule__ExistsValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:1823:3: ( rule__ExistsValue__Group__0 )
            // InternalSQLParser.g:1823:4: rule__ExistsValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsValue"


    // $ANTLR start "entryRuleOperandListGroup"
    // InternalSQLParser.g:1832:1: entryRuleOperandListGroup : ruleOperandListGroup EOF ;
    public final void entryRuleOperandListGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:1833:1: ( ruleOperandListGroup EOF )
            // InternalSQLParser.g:1834:1: ruleOperandListGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandListGroup"


    // $ANTLR start "ruleOperandListGroup"
    // InternalSQLParser.g:1841:1: ruleOperandListGroup : ( ( rule__OperandListGroup__Group__0 ) ) ;
    public final void ruleOperandListGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1845:2: ( ( ( rule__OperandListGroup__Group__0 ) ) )
            // InternalSQLParser.g:1846:2: ( ( rule__OperandListGroup__Group__0 ) )
            {
            // InternalSQLParser.g:1846:2: ( ( rule__OperandListGroup__Group__0 ) )
            // InternalSQLParser.g:1847:3: ( rule__OperandListGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }
            // InternalSQLParser.g:1848:3: ( rule__OperandListGroup__Group__0 )
            // InternalSQLParser.g:1848:4: rule__OperandListGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandListGroup"


    // $ANTLR start "entryRuleOperandList"
    // InternalSQLParser.g:1857:1: entryRuleOperandList : ruleOperandList EOF ;
    public final void entryRuleOperandList() throws RecognitionException {
        try {
            // InternalSQLParser.g:1858:1: ( ruleOperandList EOF )
            // InternalSQLParser.g:1859:1: ruleOperandList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandList"


    // $ANTLR start "ruleOperandList"
    // InternalSQLParser.g:1866:1: ruleOperandList : ( ( rule__OperandList__Group__0 ) ) ;
    public final void ruleOperandList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1870:2: ( ( ( rule__OperandList__Group__0 ) ) )
            // InternalSQLParser.g:1871:2: ( ( rule__OperandList__Group__0 ) )
            {
            // InternalSQLParser.g:1871:2: ( ( rule__OperandList__Group__0 ) )
            // InternalSQLParser.g:1872:3: ( rule__OperandList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup()); 
            }
            // InternalSQLParser.g:1873:3: ( rule__OperandList__Group__0 )
            // InternalSQLParser.g:1873:4: rule__OperandList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandList"


    // $ANTLR start "entryRuleOperandGroup"
    // InternalSQLParser.g:1882:1: entryRuleOperandGroup : ruleOperandGroup EOF ;
    public final void entryRuleOperandGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:1883:1: ( ruleOperandGroup EOF )
            // InternalSQLParser.g:1884:1: ruleOperandGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandGroup"


    // $ANTLR start "ruleOperandGroup"
    // InternalSQLParser.g:1891:1: ruleOperandGroup : ( ( rule__OperandGroup__Alternatives ) ) ;
    public final void ruleOperandGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1895:2: ( ( ( rule__OperandGroup__Alternatives ) ) )
            // InternalSQLParser.g:1896:2: ( ( rule__OperandGroup__Alternatives ) )
            {
            // InternalSQLParser.g:1896:2: ( ( rule__OperandGroup__Alternatives ) )
            // InternalSQLParser.g:1897:3: ( rule__OperandGroup__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1898:3: ( rule__OperandGroup__Alternatives )
            // InternalSQLParser.g:1898:4: rule__OperandGroup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandGroup"


    // $ANTLR start "entryRuleOperand"
    // InternalSQLParser.g:1907:1: entryRuleOperand : ruleOperand EOF ;
    public final void entryRuleOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:1908:1: ( ruleOperand EOF )
            // InternalSQLParser.g:1909:1: ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalSQLParser.g:1916:1: ruleOperand : ( ( rule__Operand__Group__0 ) ) ;
    public final void ruleOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1920:2: ( ( ( rule__Operand__Group__0 ) ) )
            // InternalSQLParser.g:1921:2: ( ( rule__Operand__Group__0 ) )
            {
            // InternalSQLParser.g:1921:2: ( ( rule__Operand__Group__0 ) )
            // InternalSQLParser.g:1922:3: ( rule__Operand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:1923:3: ( rule__Operand__Group__0 )
            // InternalSQLParser.g:1923:4: rule__Operand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleOperandFragment"
    // InternalSQLParser.g:1932:1: entryRuleOperandFragment : ruleOperandFragment EOF ;
    public final void entryRuleOperandFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:1933:1: ( ruleOperandFragment EOF )
            // InternalSQLParser.g:1934:1: ruleOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFragment"


    // $ANTLR start "ruleOperandFragment"
    // InternalSQLParser.g:1941:1: ruleOperandFragment : ( ( rule__OperandFragment__Alternatives ) ) ;
    public final void ruleOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1945:2: ( ( ( rule__OperandFragment__Alternatives ) ) )
            // InternalSQLParser.g:1946:2: ( ( rule__OperandFragment__Alternatives ) )
            {
            // InternalSQLParser.g:1946:2: ( ( rule__OperandFragment__Alternatives ) )
            // InternalSQLParser.g:1947:3: ( rule__OperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1948:3: ( rule__OperandFragment__Alternatives )
            // InternalSQLParser.g:1948:4: rule__OperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFragment"


    // $ANTLR start "entryRuleOperandFunction"
    // InternalSQLParser.g:1957:1: entryRuleOperandFunction : ruleOperandFunction EOF ;
    public final void entryRuleOperandFunction() throws RecognitionException {
        try {
            // InternalSQLParser.g:1958:1: ( ruleOperandFunction EOF )
            // InternalSQLParser.g:1959:1: ruleOperandFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFunction"


    // $ANTLR start "ruleOperandFunction"
    // InternalSQLParser.g:1966:1: ruleOperandFunction : ( ( rule__OperandFunction__Group__0 ) ) ;
    public final void ruleOperandFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1970:2: ( ( ( rule__OperandFunction__Group__0 ) ) )
            // InternalSQLParser.g:1971:2: ( ( rule__OperandFunction__Group__0 ) )
            {
            // InternalSQLParser.g:1971:2: ( ( rule__OperandFunction__Group__0 ) )
            // InternalSQLParser.g:1972:3: ( rule__OperandFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1973:3: ( rule__OperandFunction__Group__0 )
            // InternalSQLParser.g:1973:4: rule__OperandFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFunction"


    // $ANTLR start "entryRuleFunctionExtract"
    // InternalSQLParser.g:1982:1: entryRuleFunctionExtract : ruleFunctionExtract EOF ;
    public final void entryRuleFunctionExtract() throws RecognitionException {
        try {
            // InternalSQLParser.g:1983:1: ( ruleFunctionExtract EOF )
            // InternalSQLParser.g:1984:1: ruleFunctionExtract EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionExtract"


    // $ANTLR start "ruleFunctionExtract"
    // InternalSQLParser.g:1991:1: ruleFunctionExtract : ( ( rule__FunctionExtract__Group__0 ) ) ;
    public final void ruleFunctionExtract() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1995:2: ( ( ( rule__FunctionExtract__Group__0 ) ) )
            // InternalSQLParser.g:1996:2: ( ( rule__FunctionExtract__Group__0 ) )
            {
            // InternalSQLParser.g:1996:2: ( ( rule__FunctionExtract__Group__0 ) )
            // InternalSQLParser.g:1997:3: ( rule__FunctionExtract__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }
            // InternalSQLParser.g:1998:3: ( rule__FunctionExtract__Group__0 )
            // InternalSQLParser.g:1998:4: rule__FunctionExtract__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionExtract"


    // $ANTLR start "entryRuleFunctionAnalytical"
    // InternalSQLParser.g:2007:1: entryRuleFunctionAnalytical : ruleFunctionAnalytical EOF ;
    public final void entryRuleFunctionAnalytical() throws RecognitionException {
        try {
            // InternalSQLParser.g:2008:1: ( ruleFunctionAnalytical EOF )
            // InternalSQLParser.g:2009:1: ruleFunctionAnalytical EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionAnalytical"


    // $ANTLR start "ruleFunctionAnalytical"
    // InternalSQLParser.g:2016:1: ruleFunctionAnalytical : ( ( rule__FunctionAnalytical__Group__0 ) ) ;
    public final void ruleFunctionAnalytical() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2020:2: ( ( ( rule__FunctionAnalytical__Group__0 ) ) )
            // InternalSQLParser.g:2021:2: ( ( rule__FunctionAnalytical__Group__0 ) )
            {
            // InternalSQLParser.g:2021:2: ( ( rule__FunctionAnalytical__Group__0 ) )
            // InternalSQLParser.g:2022:3: ( rule__FunctionAnalytical__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }
            // InternalSQLParser.g:2023:3: ( rule__FunctionAnalytical__Group__0 )
            // InternalSQLParser.g:2023:4: rule__FunctionAnalytical__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionAnalytical"


    // $ANTLR start "entryRuleAnalyticClause"
    // InternalSQLParser.g:2032:1: entryRuleAnalyticClause : ruleAnalyticClause EOF ;
    public final void entryRuleAnalyticClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2033:1: ( ruleAnalyticClause EOF )
            // InternalSQLParser.g:2034:1: ruleAnalyticClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticClause"


    // $ANTLR start "ruleAnalyticClause"
    // InternalSQLParser.g:2041:1: ruleAnalyticClause : ( ( rule__AnalyticClause__Group__0 ) ) ;
    public final void ruleAnalyticClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2045:2: ( ( ( rule__AnalyticClause__Group__0 ) ) )
            // InternalSQLParser.g:2046:2: ( ( rule__AnalyticClause__Group__0 ) )
            {
            // InternalSQLParser.g:2046:2: ( ( rule__AnalyticClause__Group__0 ) )
            // InternalSQLParser.g:2047:3: ( rule__AnalyticClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2048:3: ( rule__AnalyticClause__Group__0 )
            // InternalSQLParser.g:2048:4: rule__AnalyticClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticClause"


    // $ANTLR start "entryRuleWindowingClause"
    // InternalSQLParser.g:2057:1: entryRuleWindowingClause : ruleWindowingClause EOF ;
    public final void entryRuleWindowingClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2058:1: ( ruleWindowingClause EOF )
            // InternalSQLParser.g:2059:1: ruleWindowingClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClause"


    // $ANTLR start "ruleWindowingClause"
    // InternalSQLParser.g:2066:1: ruleWindowingClause : ( ( rule__WindowingClause__Group__0 ) ) ;
    public final void ruleWindowingClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2070:2: ( ( ( rule__WindowingClause__Group__0 ) ) )
            // InternalSQLParser.g:2071:2: ( ( rule__WindowingClause__Group__0 ) )
            {
            // InternalSQLParser.g:2071:2: ( ( rule__WindowingClause__Group__0 ) )
            // InternalSQLParser.g:2072:3: ( rule__WindowingClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2073:3: ( rule__WindowingClause__Group__0 )
            // InternalSQLParser.g:2073:4: rule__WindowingClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClause"


    // $ANTLR start "entryRuleWindowingClauseBetween"
    // InternalSQLParser.g:2082:1: entryRuleWindowingClauseBetween : ruleWindowingClauseBetween EOF ;
    public final void entryRuleWindowingClauseBetween() throws RecognitionException {
        try {
            // InternalSQLParser.g:2083:1: ( ruleWindowingClauseBetween EOF )
            // InternalSQLParser.g:2084:1: ruleWindowingClauseBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseBetween"


    // $ANTLR start "ruleWindowingClauseBetween"
    // InternalSQLParser.g:2091:1: ruleWindowingClauseBetween : ( ( rule__WindowingClauseBetween__Group__0 ) ) ;
    public final void ruleWindowingClauseBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2095:2: ( ( ( rule__WindowingClauseBetween__Group__0 ) ) )
            // InternalSQLParser.g:2096:2: ( ( rule__WindowingClauseBetween__Group__0 ) )
            {
            // InternalSQLParser.g:2096:2: ( ( rule__WindowingClauseBetween__Group__0 ) )
            // InternalSQLParser.g:2097:3: ( rule__WindowingClauseBetween__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }
            // InternalSQLParser.g:2098:3: ( rule__WindowingClauseBetween__Group__0 )
            // InternalSQLParser.g:2098:4: rule__WindowingClauseBetween__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseBetween"


    // $ANTLR start "entryRuleWindowingClauseOperandFollowing"
    // InternalSQLParser.g:2107:1: entryRuleWindowingClauseOperandFollowing : ruleWindowingClauseOperandFollowing EOF ;
    public final void entryRuleWindowingClauseOperandFollowing() throws RecognitionException {
        try {
            // InternalSQLParser.g:2108:1: ( ruleWindowingClauseOperandFollowing EOF )
            // InternalSQLParser.g:2109:1: ruleWindowingClauseOperandFollowing EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandFollowing"


    // $ANTLR start "ruleWindowingClauseOperandFollowing"
    // InternalSQLParser.g:2116:1: ruleWindowingClauseOperandFollowing : ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandFollowing() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2120:2: ( ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) )
            // InternalSQLParser.g:2121:2: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            {
            // InternalSQLParser.g:2121:2: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            // InternalSQLParser.g:2122:3: ( rule__WindowingClauseOperandFollowing__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }
            // InternalSQLParser.g:2123:3: ( rule__WindowingClauseOperandFollowing__Group__0 )
            // InternalSQLParser.g:2123:4: rule__WindowingClauseOperandFollowing__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandFollowing"


    // $ANTLR start "entryRuleWindowingClauseOperandPreceding"
    // InternalSQLParser.g:2132:1: entryRuleWindowingClauseOperandPreceding : ruleWindowingClauseOperandPreceding EOF ;
    public final void entryRuleWindowingClauseOperandPreceding() throws RecognitionException {
        try {
            // InternalSQLParser.g:2133:1: ( ruleWindowingClauseOperandPreceding EOF )
            // InternalSQLParser.g:2134:1: ruleWindowingClauseOperandPreceding EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandPreceding"


    // $ANTLR start "ruleWindowingClauseOperandPreceding"
    // InternalSQLParser.g:2141:1: ruleWindowingClauseOperandPreceding : ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandPreceding() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2145:2: ( ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) )
            // InternalSQLParser.g:2146:2: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            {
            // InternalSQLParser.g:2146:2: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            // InternalSQLParser.g:2147:3: ( rule__WindowingClauseOperandPreceding__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }
            // InternalSQLParser.g:2148:3: ( rule__WindowingClauseOperandPreceding__Group__0 )
            // InternalSQLParser.g:2148:4: rule__WindowingClauseOperandPreceding__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandPreceding"


    // $ANTLR start "entryRuleOrderByClause"
    // InternalSQLParser.g:2157:1: entryRuleOrderByClause : ruleOrderByClause EOF ;
    public final void entryRuleOrderByClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2158:1: ( ruleOrderByClause EOF )
            // InternalSQLParser.g:2159:1: ruleOrderByClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClause"


    // $ANTLR start "ruleOrderByClause"
    // InternalSQLParser.g:2166:1: ruleOrderByClause : ( ( rule__OrderByClause__Group__0 ) ) ;
    public final void ruleOrderByClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2170:2: ( ( ( rule__OrderByClause__Group__0 ) ) )
            // InternalSQLParser.g:2171:2: ( ( rule__OrderByClause__Group__0 ) )
            {
            // InternalSQLParser.g:2171:2: ( ( rule__OrderByClause__Group__0 ) )
            // InternalSQLParser.g:2172:3: ( rule__OrderByClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2173:3: ( rule__OrderByClause__Group__0 )
            // InternalSQLParser.g:2173:4: rule__OrderByClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClause"


    // $ANTLR start "entryRuleOrderByClauseArgs"
    // InternalSQLParser.g:2182:1: entryRuleOrderByClauseArgs : ruleOrderByClauseArgs EOF ;
    public final void entryRuleOrderByClauseArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:2183:1: ( ruleOrderByClauseArgs EOF )
            // InternalSQLParser.g:2184:1: ruleOrderByClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArgs"


    // $ANTLR start "ruleOrderByClauseArgs"
    // InternalSQLParser.g:2191:1: ruleOrderByClauseArgs : ( ( rule__OrderByClauseArgs__Group__0 ) ) ;
    public final void ruleOrderByClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2195:2: ( ( ( rule__OrderByClauseArgs__Group__0 ) ) )
            // InternalSQLParser.g:2196:2: ( ( rule__OrderByClauseArgs__Group__0 ) )
            {
            // InternalSQLParser.g:2196:2: ( ( rule__OrderByClauseArgs__Group__0 ) )
            // InternalSQLParser.g:2197:3: ( rule__OrderByClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2198:3: ( rule__OrderByClauseArgs__Group__0 )
            // InternalSQLParser.g:2198:4: rule__OrderByClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArgs"


    // $ANTLR start "entryRuleOrderByClauseArg"
    // InternalSQLParser.g:2207:1: entryRuleOrderByClauseArg : ruleOrderByClauseArg EOF ;
    public final void entryRuleOrderByClauseArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:2208:1: ( ruleOrderByClauseArg EOF )
            // InternalSQLParser.g:2209:1: ruleOrderByClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArg"


    // $ANTLR start "ruleOrderByClauseArg"
    // InternalSQLParser.g:2216:1: ruleOrderByClauseArg : ( ( rule__OrderByClauseArg__Group__0 ) ) ;
    public final void ruleOrderByClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2220:2: ( ( ( rule__OrderByClauseArg__Group__0 ) ) )
            // InternalSQLParser.g:2221:2: ( ( rule__OrderByClauseArg__Group__0 ) )
            {
            // InternalSQLParser.g:2221:2: ( ( rule__OrderByClauseArg__Group__0 ) )
            // InternalSQLParser.g:2222:3: ( rule__OrderByClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:2223:3: ( rule__OrderByClauseArg__Group__0 )
            // InternalSQLParser.g:2223:4: rule__OrderByClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArg"


    // $ANTLR start "entryRuleQueryPartitionClause"
    // InternalSQLParser.g:2232:1: entryRuleQueryPartitionClause : ruleQueryPartitionClause EOF ;
    public final void entryRuleQueryPartitionClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2233:1: ( ruleQueryPartitionClause EOF )
            // InternalSQLParser.g:2234:1: ruleQueryPartitionClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQueryPartitionClause"


    // $ANTLR start "ruleQueryPartitionClause"
    // InternalSQLParser.g:2241:1: ruleQueryPartitionClause : ( ( rule__QueryPartitionClause__Group__0 ) ) ;
    public final void ruleQueryPartitionClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2245:2: ( ( ( rule__QueryPartitionClause__Group__0 ) ) )
            // InternalSQLParser.g:2246:2: ( ( rule__QueryPartitionClause__Group__0 ) )
            {
            // InternalSQLParser.g:2246:2: ( ( rule__QueryPartitionClause__Group__0 ) )
            // InternalSQLParser.g:2247:3: ( rule__QueryPartitionClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2248:3: ( rule__QueryPartitionClause__Group__0 )
            // InternalSQLParser.g:2248:4: rule__QueryPartitionClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQueryPartitionClause"


    // $ANTLR start "entryRuleAnalyticExprArgs"
    // InternalSQLParser.g:2257:1: entryRuleAnalyticExprArgs : ruleAnalyticExprArgs EOF ;
    public final void entryRuleAnalyticExprArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:2258:1: ( ruleAnalyticExprArgs EOF )
            // InternalSQLParser.g:2259:1: ruleAnalyticExprArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArgs"


    // $ANTLR start "ruleAnalyticExprArgs"
    // InternalSQLParser.g:2266:1: ruleAnalyticExprArgs : ( ( rule__AnalyticExprArgs__Group__0 ) ) ;
    public final void ruleAnalyticExprArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2270:2: ( ( ( rule__AnalyticExprArgs__Group__0 ) ) )
            // InternalSQLParser.g:2271:2: ( ( rule__AnalyticExprArgs__Group__0 ) )
            {
            // InternalSQLParser.g:2271:2: ( ( rule__AnalyticExprArgs__Group__0 ) )
            // InternalSQLParser.g:2272:3: ( rule__AnalyticExprArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2273:3: ( rule__AnalyticExprArgs__Group__0 )
            // InternalSQLParser.g:2273:4: rule__AnalyticExprArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArgs"


    // $ANTLR start "entryRuleAnalyticExprArg"
    // InternalSQLParser.g:2282:1: entryRuleAnalyticExprArg : ruleAnalyticExprArg EOF ;
    public final void entryRuleAnalyticExprArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:2283:1: ( ruleAnalyticExprArg EOF )
            // InternalSQLParser.g:2284:1: ruleAnalyticExprArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArg"


    // $ANTLR start "ruleAnalyticExprArg"
    // InternalSQLParser.g:2291:1: ruleAnalyticExprArg : ( ( rule__AnalyticExprArg__Group__0 ) ) ;
    public final void ruleAnalyticExprArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2295:2: ( ( ( rule__AnalyticExprArg__Group__0 ) ) )
            // InternalSQLParser.g:2296:2: ( ( rule__AnalyticExprArg__Group__0 ) )
            {
            // InternalSQLParser.g:2296:2: ( ( rule__AnalyticExprArg__Group__0 ) )
            // InternalSQLParser.g:2297:3: ( rule__AnalyticExprArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:2298:3: ( rule__AnalyticExprArg__Group__0 )
            // InternalSQLParser.g:2298:4: rule__AnalyticExprArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArg"


    // $ANTLR start "entryRuleOpFunctionArg"
    // InternalSQLParser.g:2307:1: entryRuleOpFunctionArg : ruleOpFunctionArg EOF ;
    public final void entryRuleOpFunctionArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:2308:1: ( ruleOpFunctionArg EOF )
            // InternalSQLParser.g:2309:1: ruleOpFunctionArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArg"


    // $ANTLR start "ruleOpFunctionArg"
    // InternalSQLParser.g:2316:1: ruleOpFunctionArg : ( ( rule__OpFunctionArg__Group__0 ) ) ;
    public final void ruleOpFunctionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2320:2: ( ( ( rule__OpFunctionArg__Group__0 ) ) )
            // InternalSQLParser.g:2321:2: ( ( rule__OpFunctionArg__Group__0 ) )
            {
            // InternalSQLParser.g:2321:2: ( ( rule__OpFunctionArg__Group__0 ) )
            // InternalSQLParser.g:2322:3: ( rule__OpFunctionArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:2323:3: ( rule__OpFunctionArg__Group__0 )
            // InternalSQLParser.g:2323:4: rule__OpFunctionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArg"


    // $ANTLR start "entryRuleOpFunctionArgOperand"
    // InternalSQLParser.g:2332:1: entryRuleOpFunctionArgOperand : ruleOpFunctionArgOperand EOF ;
    public final void entryRuleOpFunctionArgOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2333:1: ( ruleOpFunctionArgOperand EOF )
            // InternalSQLParser.g:2334:1: ruleOpFunctionArgOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgOperand"


    // $ANTLR start "ruleOpFunctionArgOperand"
    // InternalSQLParser.g:2341:1: ruleOpFunctionArgOperand : ( ( rule__OpFunctionArgOperand__OpAssignment ) ) ;
    public final void ruleOpFunctionArgOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2345:2: ( ( ( rule__OpFunctionArgOperand__OpAssignment ) ) )
            // InternalSQLParser.g:2346:2: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            {
            // InternalSQLParser.g:2346:2: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            // InternalSQLParser.g:2347:3: ( rule__OpFunctionArgOperand__OpAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }
            // InternalSQLParser.g:2348:3: ( rule__OpFunctionArgOperand__OpAssignment )
            // InternalSQLParser.g:2348:4: rule__OpFunctionArgOperand__OpAssignment
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgOperand"


    // $ANTLR start "entryRuleOpFunctionCast"
    // InternalSQLParser.g:2357:1: entryRuleOpFunctionCast : ruleOpFunctionCast EOF ;
    public final void entryRuleOpFunctionCast() throws RecognitionException {
        try {
            // InternalSQLParser.g:2358:1: ( ruleOpFunctionCast EOF )
            // InternalSQLParser.g:2359:1: ruleOpFunctionCast EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionCast"


    // $ANTLR start "ruleOpFunctionCast"
    // InternalSQLParser.g:2366:1: ruleOpFunctionCast : ( ( rule__OpFunctionCast__Group__0 ) ) ;
    public final void ruleOpFunctionCast() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2370:2: ( ( ( rule__OpFunctionCast__Group__0 ) ) )
            // InternalSQLParser.g:2371:2: ( ( rule__OpFunctionCast__Group__0 ) )
            {
            // InternalSQLParser.g:2371:2: ( ( rule__OpFunctionCast__Group__0 ) )
            // InternalSQLParser.g:2372:3: ( rule__OpFunctionCast__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }
            // InternalSQLParser.g:2373:3: ( rule__OpFunctionCast__Group__0 )
            // InternalSQLParser.g:2373:4: rule__OpFunctionCast__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionCast"


    // $ANTLR start "entryRuleOpFunctionArgAgregate"
    // InternalSQLParser.g:2382:1: entryRuleOpFunctionArgAgregate : ruleOpFunctionArgAgregate EOF ;
    public final void entryRuleOpFunctionArgAgregate() throws RecognitionException {
        try {
            // InternalSQLParser.g:2383:1: ( ruleOpFunctionArgAgregate EOF )
            // InternalSQLParser.g:2384:1: ruleOpFunctionArgAgregate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgAgregate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgAgregate"


    // $ANTLR start "ruleOpFunctionArgAgregate"
    // InternalSQLParser.g:2391:1: ruleOpFunctionArgAgregate : ( ( rule__OpFunctionArgAgregate__Group__0 ) ) ;
    public final void ruleOpFunctionArgAgregate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2395:2: ( ( ( rule__OpFunctionArgAgregate__Group__0 ) ) )
            // InternalSQLParser.g:2396:2: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            {
            // InternalSQLParser.g:2396:2: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            // InternalSQLParser.g:2397:3: ( rule__OpFunctionArgAgregate__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }
            // InternalSQLParser.g:2398:3: ( rule__OpFunctionArgAgregate__Group__0 )
            // InternalSQLParser.g:2398:4: rule__OpFunctionArgAgregate__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgAgregate"


    // $ANTLR start "entryRuleXOperandFragment"
    // InternalSQLParser.g:2407:1: entryRuleXOperandFragment : ruleXOperandFragment EOF ;
    public final void entryRuleXOperandFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:2408:1: ( ruleXOperandFragment EOF )
            // InternalSQLParser.g:2409:1: ruleXOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXOperandFragment"


    // $ANTLR start "ruleXOperandFragment"
    // InternalSQLParser.g:2416:1: ruleXOperandFragment : ( ( rule__XOperandFragment__Alternatives ) ) ;
    public final void ruleXOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2420:2: ( ( ( rule__XOperandFragment__Alternatives ) ) )
            // InternalSQLParser.g:2421:2: ( ( rule__XOperandFragment__Alternatives ) )
            {
            // InternalSQLParser.g:2421:2: ( ( rule__XOperandFragment__Alternatives ) )
            // InternalSQLParser.g:2422:3: ( rule__XOperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2423:3: ( rule__XOperandFragment__Alternatives )
            // InternalSQLParser.g:2423:4: rule__XOperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XOperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXOperandFragment"


    // $ANTLR start "entryRuleParameterOperand"
    // InternalSQLParser.g:2432:1: entryRuleParameterOperand : ruleParameterOperand EOF ;
    public final void entryRuleParameterOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2433:1: ( ruleParameterOperand EOF )
            // InternalSQLParser.g:2434:1: ruleParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterOperand"


    // $ANTLR start "ruleParameterOperand"
    // InternalSQLParser.g:2441:1: ruleParameterOperand : ( ( rule__ParameterOperand__PrmAssignment ) ) ;
    public final void ruleParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2445:2: ( ( ( rule__ParameterOperand__PrmAssignment ) ) )
            // InternalSQLParser.g:2446:2: ( ( rule__ParameterOperand__PrmAssignment ) )
            {
            // InternalSQLParser.g:2446:2: ( ( rule__ParameterOperand__PrmAssignment ) )
            // InternalSQLParser.g:2447:3: ( rule__ParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSQLParser.g:2448:3: ( rule__ParameterOperand__PrmAssignment )
            // InternalSQLParser.g:2448:4: rule__ParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterOperand"


    // $ANTLR start "entryRuleExclamationParameterOperand"
    // InternalSQLParser.g:2457:1: entryRuleExclamationParameterOperand : ruleExclamationParameterOperand EOF ;
    public final void entryRuleExclamationParameterOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2458:1: ( ruleExclamationParameterOperand EOF )
            // InternalSQLParser.g:2459:1: ruleExclamationParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclamationParameterOperand"


    // $ANTLR start "ruleExclamationParameterOperand"
    // InternalSQLParser.g:2466:1: ruleExclamationParameterOperand : ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) ;
    public final void ruleExclamationParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2470:2: ( ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) )
            // InternalSQLParser.g:2471:2: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            {
            // InternalSQLParser.g:2471:2: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            // InternalSQLParser.g:2472:3: ( rule__ExclamationParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSQLParser.g:2473:3: ( rule__ExclamationParameterOperand__PrmAssignment )
            // InternalSQLParser.g:2473:4: rule__ExclamationParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExclamationParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclamationParameterOperand"


    // $ANTLR start "entryRuleColumnOperand"
    // InternalSQLParser.g:2482:1: entryRuleColumnOperand : ruleColumnOperand EOF ;
    public final void entryRuleColumnOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2483:1: ( ruleColumnOperand EOF )
            // InternalSQLParser.g:2484:1: ruleColumnOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOperand"


    // $ANTLR start "ruleColumnOperand"
    // InternalSQLParser.g:2491:1: ruleColumnOperand : ( ( rule__ColumnOperand__Group__0 ) ) ;
    public final void ruleColumnOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2495:2: ( ( ( rule__ColumnOperand__Group__0 ) ) )
            // InternalSQLParser.g:2496:2: ( ( rule__ColumnOperand__Group__0 ) )
            {
            // InternalSQLParser.g:2496:2: ( ( rule__ColumnOperand__Group__0 ) )
            // InternalSQLParser.g:2497:3: ( rule__ColumnOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:2498:3: ( rule__ColumnOperand__Group__0 )
            // InternalSQLParser.g:2498:4: rule__ColumnOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOperand"


    // $ANTLR start "entryRuleSubQueryOperand"
    // InternalSQLParser.g:2507:1: entryRuleSubQueryOperand : ruleSubQueryOperand EOF ;
    public final void entryRuleSubQueryOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2508:1: ( ruleSubQueryOperand EOF )
            // InternalSQLParser.g:2509:1: ruleSubQueryOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubQueryOperand"


    // $ANTLR start "ruleSubQueryOperand"
    // InternalSQLParser.g:2516:1: ruleSubQueryOperand : ( ( rule__SubQueryOperand__Group__0 ) ) ;
    public final void ruleSubQueryOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2520:2: ( ( ( rule__SubQueryOperand__Group__0 ) ) )
            // InternalSQLParser.g:2521:2: ( ( rule__SubQueryOperand__Group__0 ) )
            {
            // InternalSQLParser.g:2521:2: ( ( rule__SubQueryOperand__Group__0 ) )
            // InternalSQLParser.g:2522:3: ( rule__SubQueryOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:2523:3: ( rule__SubQueryOperand__Group__0 )
            // InternalSQLParser.g:2523:4: rule__SubQueryOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubQueryOperand"


    // $ANTLR start "entryRuleScalarOperand"
    // InternalSQLParser.g:2532:1: entryRuleScalarOperand : ruleScalarOperand EOF ;
    public final void entryRuleScalarOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2533:1: ( ruleScalarOperand EOF )
            // InternalSQLParser.g:2534:1: ruleScalarOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarOperand"


    // $ANTLR start "ruleScalarOperand"
    // InternalSQLParser.g:2541:1: ruleScalarOperand : ( ( rule__ScalarOperand__Alternatives ) ) ;
    public final void ruleScalarOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2545:2: ( ( ( rule__ScalarOperand__Alternatives ) ) )
            // InternalSQLParser.g:2546:2: ( ( rule__ScalarOperand__Alternatives ) )
            {
            // InternalSQLParser.g:2546:2: ( ( rule__ScalarOperand__Alternatives ) )
            // InternalSQLParser.g:2547:3: ( rule__ScalarOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2548:3: ( rule__ScalarOperand__Alternatives )
            // InternalSQLParser.g:2548:4: rule__ScalarOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarOperand"


    // $ANTLR start "entryRuleScalarNumberOperand"
    // InternalSQLParser.g:2557:1: entryRuleScalarNumberOperand : ruleScalarNumberOperand EOF ;
    public final void entryRuleScalarNumberOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2558:1: ( ruleScalarNumberOperand EOF )
            // InternalSQLParser.g:2559:1: ruleScalarNumberOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarNumberOperand"


    // $ANTLR start "ruleScalarNumberOperand"
    // InternalSQLParser.g:2566:1: ruleScalarNumberOperand : ( ( rule__ScalarNumberOperand__Alternatives ) ) ;
    public final void ruleScalarNumberOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2570:2: ( ( ( rule__ScalarNumberOperand__Alternatives ) ) )
            // InternalSQLParser.g:2571:2: ( ( rule__ScalarNumberOperand__Alternatives ) )
            {
            // InternalSQLParser.g:2571:2: ( ( rule__ScalarNumberOperand__Alternatives ) )
            // InternalSQLParser.g:2572:3: ( rule__ScalarNumberOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2573:3: ( rule__ScalarNumberOperand__Alternatives )
            // InternalSQLParser.g:2573:4: rule__ScalarNumberOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarNumberOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarNumberOperand"


    // $ANTLR start "entryRuleSQLCASE"
    // InternalSQLParser.g:2582:1: entryRuleSQLCASE : ruleSQLCASE EOF ;
    public final void entryRuleSQLCASE() throws RecognitionException {
        try {
            // InternalSQLParser.g:2583:1: ( ruleSQLCASE EOF )
            // InternalSQLParser.g:2584:1: ruleSQLCASE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCASE"


    // $ANTLR start "ruleSQLCASE"
    // InternalSQLParser.g:2591:1: ruleSQLCASE : ( ( rule__SQLCASE__Group__0 ) ) ;
    public final void ruleSQLCASE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2595:2: ( ( ( rule__SQLCASE__Group__0 ) ) )
            // InternalSQLParser.g:2596:2: ( ( rule__SQLCASE__Group__0 ) )
            {
            // InternalSQLParser.g:2596:2: ( ( rule__SQLCASE__Group__0 ) )
            // InternalSQLParser.g:2597:3: ( rule__SQLCASE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getGroup()); 
            }
            // InternalSQLParser.g:2598:3: ( rule__SQLCASE__Group__0 )
            // InternalSQLParser.g:2598:4: rule__SQLCASE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCASE"


    // $ANTLR start "entryRuleSQLCaseWhens"
    // InternalSQLParser.g:2607:1: entryRuleSQLCaseWhens : ruleSQLCaseWhens EOF ;
    public final void entryRuleSQLCaseWhens() throws RecognitionException {
        try {
            // InternalSQLParser.g:2608:1: ( ruleSQLCaseWhens EOF )
            // InternalSQLParser.g:2609:1: ruleSQLCaseWhens EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCaseWhens"


    // $ANTLR start "ruleSQLCaseWhens"
    // InternalSQLParser.g:2616:1: ruleSQLCaseWhens : ( ( rule__SQLCaseWhens__Group__0 ) ) ;
    public final void ruleSQLCaseWhens() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2620:2: ( ( ( rule__SQLCaseWhens__Group__0 ) ) )
            // InternalSQLParser.g:2621:2: ( ( rule__SQLCaseWhens__Group__0 ) )
            {
            // InternalSQLParser.g:2621:2: ( ( rule__SQLCaseWhens__Group__0 ) )
            // InternalSQLParser.g:2622:3: ( rule__SQLCaseWhens__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }
            // InternalSQLParser.g:2623:3: ( rule__SQLCaseWhens__Group__0 )
            // InternalSQLParser.g:2623:4: rule__SQLCaseWhens__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCaseWhens"


    // $ANTLR start "entryRuleSqlCaseWhen"
    // InternalSQLParser.g:2632:1: entryRuleSqlCaseWhen : ruleSqlCaseWhen EOF ;
    public final void entryRuleSqlCaseWhen() throws RecognitionException {
        try {
            // InternalSQLParser.g:2633:1: ( ruleSqlCaseWhen EOF )
            // InternalSQLParser.g:2634:1: ruleSqlCaseWhen EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSqlCaseWhen"


    // $ANTLR start "ruleSqlCaseWhen"
    // InternalSQLParser.g:2641:1: ruleSqlCaseWhen : ( ( rule__SqlCaseWhen__Group__0 ) ) ;
    public final void ruleSqlCaseWhen() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2645:2: ( ( ( rule__SqlCaseWhen__Group__0 ) ) )
            // InternalSQLParser.g:2646:2: ( ( rule__SqlCaseWhen__Group__0 ) )
            {
            // InternalSQLParser.g:2646:2: ( ( rule__SqlCaseWhen__Group__0 ) )
            // InternalSQLParser.g:2647:3: ( rule__SqlCaseWhen__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }
            // InternalSQLParser.g:2648:3: ( rule__SqlCaseWhen__Group__0 )
            // InternalSQLParser.g:2648:4: rule__SqlCaseWhen__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSqlCaseWhen"


    // $ANTLR start "entryRuleJoinType"
    // InternalSQLParser.g:2657:1: entryRuleJoinType : ruleJoinType EOF ;
    public final void entryRuleJoinType() throws RecognitionException {
        try {
            // InternalSQLParser.g:2658:1: ( ruleJoinType EOF )
            // InternalSQLParser.g:2659:1: ruleJoinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinType"


    // $ANTLR start "ruleJoinType"
    // InternalSQLParser.g:2666:1: ruleJoinType : ( ( rule__JoinType__Group__0 ) ) ;
    public final void ruleJoinType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2670:2: ( ( ( rule__JoinType__Group__0 ) ) )
            // InternalSQLParser.g:2671:2: ( ( rule__JoinType__Group__0 ) )
            {
            // InternalSQLParser.g:2671:2: ( ( rule__JoinType__Group__0 ) )
            // InternalSQLParser.g:2672:3: ( rule__JoinType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getGroup()); 
            }
            // InternalSQLParser.g:2673:3: ( rule__JoinType__Group__0 )
            // InternalSQLParser.g:2673:4: rule__JoinType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinType"


    // $ANTLR start "entryRuleDBID"
    // InternalSQLParser.g:2682:1: entryRuleDBID : ruleDBID EOF ;
    public final void entryRuleDBID() throws RecognitionException {
        try {
            // InternalSQLParser.g:2683:1: ( ruleDBID EOF )
            // InternalSQLParser.g:2684:1: ruleDBID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDBID"


    // $ANTLR start "ruleDBID"
    // InternalSQLParser.g:2691:1: ruleDBID : ( ( rule__DBID__Alternatives ) ) ;
    public final void ruleDBID() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2695:2: ( ( ( rule__DBID__Alternatives ) ) )
            // InternalSQLParser.g:2696:2: ( ( rule__DBID__Alternatives ) )
            {
            // InternalSQLParser.g:2696:2: ( ( rule__DBID__Alternatives ) )
            // InternalSQLParser.g:2697:3: ( rule__DBID__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2698:3: ( rule__DBID__Alternatives )
            // InternalSQLParser.g:2698:4: rule__DBID__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DBID__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDBID"


    // $ANTLR start "entryRuleStringOperand"
    // InternalSQLParser.g:2707:1: entryRuleStringOperand : ruleStringOperand EOF ;
    public final void entryRuleStringOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2708:1: ( ruleStringOperand EOF )
            // InternalSQLParser.g:2709:1: ruleStringOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringOperand"


    // $ANTLR start "ruleStringOperand"
    // InternalSQLParser.g:2716:1: ruleStringOperand : ( RULE_STRING_ ) ;
    public final void ruleStringOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2720:2: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:2721:2: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:2721:2: ( RULE_STRING_ )
            // InternalSQLParser.g:2722:3: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringOperand"


    // $ANTLR start "entryRuleFNAME"
    // InternalSQLParser.g:2732:1: entryRuleFNAME : ruleFNAME EOF ;
    public final void entryRuleFNAME() throws RecognitionException {
        try {
            // InternalSQLParser.g:2733:1: ( ruleFNAME EOF )
            // InternalSQLParser.g:2734:1: ruleFNAME EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFNAME"


    // $ANTLR start "ruleFNAME"
    // InternalSQLParser.g:2741:1: ruleFNAME : ( ( rule__FNAME__Group__0 ) ) ;
    public final void ruleFNAME() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2745:2: ( ( ( rule__FNAME__Group__0 ) ) )
            // InternalSQLParser.g:2746:2: ( ( rule__FNAME__Group__0 ) )
            {
            // InternalSQLParser.g:2746:2: ( ( rule__FNAME__Group__0 ) )
            // InternalSQLParser.g:2747:3: ( rule__FNAME__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getGroup()); 
            }
            // InternalSQLParser.g:2748:3: ( rule__FNAME__Group__0 )
            // InternalSQLParser.g:2748:4: rule__FNAME__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFNAME"


    // $ANTLR start "entryRuleUnsignedValue"
    // InternalSQLParser.g:2757:1: entryRuleUnsignedValue : ruleUnsignedValue EOF ;
    public final void entryRuleUnsignedValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2758:1: ( ruleUnsignedValue EOF )
            // InternalSQLParser.g:2759:1: ruleUnsignedValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnsignedValue"


    // $ANTLR start "ruleUnsignedValue"
    // InternalSQLParser.g:2766:1: ruleUnsignedValue : ( ( rule__UnsignedValue__IntegerAssignment ) ) ;
    public final void ruleUnsignedValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2770:2: ( ( ( rule__UnsignedValue__IntegerAssignment ) ) )
            // InternalSQLParser.g:2771:2: ( ( rule__UnsignedValue__IntegerAssignment ) )
            {
            // InternalSQLParser.g:2771:2: ( ( rule__UnsignedValue__IntegerAssignment ) )
            // InternalSQLParser.g:2772:3: ( rule__UnsignedValue__IntegerAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }
            // InternalSQLParser.g:2773:3: ( rule__UnsignedValue__IntegerAssignment )
            // InternalSQLParser.g:2773:4: rule__UnsignedValue__IntegerAssignment
            {
            pushFollow(FOLLOW_2);
            rule__UnsignedValue__IntegerAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnsignedValue"


    // $ANTLR start "ruleXFunction"
    // InternalSQLParser.g:2782:1: ruleXFunction : ( ( rule__XFunction__Alternatives ) ) ;
    public final void ruleXFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2786:1: ( ( ( rule__XFunction__Alternatives ) ) )
            // InternalSQLParser.g:2787:2: ( ( rule__XFunction__Alternatives ) )
            {
            // InternalSQLParser.g:2787:2: ( ( rule__XFunction__Alternatives ) )
            // InternalSQLParser.g:2788:3: ( rule__XFunction__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2789:3: ( rule__XFunction__Alternatives )
            // InternalSQLParser.g:2789:4: rule__XFunction__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XFunction__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXFunction"


    // $ANTLR start "ruleEXTRACT_VALUES"
    // InternalSQLParser.g:2798:1: ruleEXTRACT_VALUES : ( ( rule__EXTRACT_VALUES__Alternatives ) ) ;
    public final void ruleEXTRACT_VALUES() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2802:1: ( ( ( rule__EXTRACT_VALUES__Alternatives ) ) )
            // InternalSQLParser.g:2803:2: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            {
            // InternalSQLParser.g:2803:2: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            // InternalSQLParser.g:2804:3: ( rule__EXTRACT_VALUES__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2805:3: ( rule__EXTRACT_VALUES__Alternatives )
            // InternalSQLParser.g:2805:4: rule__EXTRACT_VALUES__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EXTRACT_VALUES__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEXTRACT_VALUES"


    // $ANTLR start "rule__FetchFirst__RowAlternatives_1_0"
    // InternalSQLParser.g:2813:1: rule__FetchFirst__RowAlternatives_1_0 : ( ( ROW ) | ( ROWS ) );
    public final void rule__FetchFirst__RowAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2817:1: ( ( ROW ) | ( ROWS ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==ROW) ) {
                alt1=1;
            }
            else if ( (LA1_0==ROWS) ) {
                alt1=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalSQLParser.g:2818:2: ( ROW )
                    {
                    // InternalSQLParser.g:2818:2: ( ROW )
                    // InternalSQLParser.g:2819:3: ROW
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }
                    match(input,ROW,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:2824:2: ( ROWS )
                    {
                    // InternalSQLParser.g:2824:2: ( ROWS )
                    // InternalSQLParser.g:2825:3: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAlternatives_1_0"


    // $ANTLR start "rule__Limit__Alternatives"
    // InternalSQLParser.g:2834:1: rule__Limit__Alternatives : ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) );
    public final void rule__Limit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2838:1: ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==ALL) ) {
                alt2=1;
            }
            else if ( (LA2_0==RULE_UNSIGNED) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSQLParser.g:2839:2: ( ( rule__Limit__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:2839:2: ( ( rule__Limit__Group_0__0 ) )
                    // InternalSQLParser.g:2840:3: ( rule__Limit__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:2841:3: ( rule__Limit__Group_0__0 )
                    // InternalSQLParser.g:2841:4: rule__Limit__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:2845:2: ( ( rule__Limit__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:2845:2: ( ( rule__Limit__Group_1__0 ) )
                    // InternalSQLParser.g:2846:3: ( rule__Limit__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:2847:3: ( rule__Limit__Group_1__0 )
                    // InternalSQLParser.g:2847:4: rule__Limit__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Alternatives"


    // $ANTLR start "rule__SelectSubSet__OpAlternatives_0_0"
    // InternalSQLParser.g:2855:1: rule__SelectSubSet__OpAlternatives_0_0 : ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) );
    public final void rule__SelectSubSet__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2859:1: ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) )
            int alt3=4;
            switch ( input.LA(1) ) {
            case UNION:
                {
                alt3=1;
                }
                break;
            case INTERSECT:
                {
                alt3=2;
                }
                break;
            case MINUS:
                {
                alt3=3;
                }
                break;
            case EXCEPT:
                {
                alt3=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalSQLParser.g:2860:2: ( UNION )
                    {
                    // InternalSQLParser.g:2860:2: ( UNION )
                    // InternalSQLParser.g:2861:3: UNION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }
                    match(input,UNION,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:2866:2: ( INTERSECT )
                    {
                    // InternalSQLParser.g:2866:2: ( INTERSECT )
                    // InternalSQLParser.g:2867:3: INTERSECT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }
                    match(input,INTERSECT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:2872:2: ( MINUS )
                    {
                    // InternalSQLParser.g:2872:2: ( MINUS )
                    // InternalSQLParser.g:2873:3: MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }
                    match(input,MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:2878:2: ( EXCEPT )
                    {
                    // InternalSQLParser.g:2878:2: ( EXCEPT )
                    // InternalSQLParser.g:2879:3: EXCEPT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }
                    match(input,EXCEPT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAlternatives_0_0"


    // $ANTLR start "rule__Select__Alternatives_2_1"
    // InternalSQLParser.g:2888:1: rule__Select__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) );
    public final void rule__Select__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2892:1: ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_INT) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_SIGNED_DOUBLE) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSQLParser.g:2893:2: ( RULE_INT )
                    {
                    // InternalSQLParser.g:2893:2: ( RULE_INT )
                    // InternalSQLParser.g:2894:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:2899:2: ( RULE_SIGNED_DOUBLE )
                    {
                    // InternalSQLParser.g:2899:2: ( RULE_SIGNED_DOUBLE )
                    // InternalSQLParser.g:2900:3: RULE_SIGNED_DOUBLE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Alternatives_2_1"


    // $ANTLR start "rule__ColumnOrAlias__Alternatives"
    // InternalSQLParser.g:2909:1: rule__ColumnOrAlias__Alternatives : ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) );
    public final void rule__ColumnOrAlias__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2913:1: ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) )
            int alt5=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_1==EOF||LA5_1==FROM||LA5_1==LeftParenthesisPlusSignRightParenthesis||LA5_1==AS||(LA5_1>=VerticalLineVerticalLine && LA5_1<=HyphenMinus)||LA5_1==Solidus||LA5_1==RULE_STAR||(LA5_1>=RULE_STRING && LA5_1<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DBNAME:
                {
                int LA5_2 = input.LA(2);

                if ( (LA5_2==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_2==EOF||LA5_2==FROM||LA5_2==LeftParenthesisPlusSignRightParenthesis||LA5_2==AS||LA5_2==VerticalLineVerticalLine||(LA5_2>=RightParenthesis && LA5_2<=HyphenMinus)||LA5_2==Solidus||LA5_2==RULE_STAR||(LA5_2>=RULE_STRING && LA5_2<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
                {
                int LA5_3 = input.LA(2);

                if ( (LA5_3==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_3==EOF||LA5_3==FROM||LA5_3==LeftParenthesisPlusSignRightParenthesis||LA5_3==AS||LA5_3==VerticalLineVerticalLine||(LA5_3>=RightParenthesis && LA5_3<=HyphenMinus)||LA5_3==Solidus||LA5_3==RULE_STAR||(LA5_3>=RULE_STRING && LA5_3<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 3, input);

                    throw nvae;
                }
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt5=1;
                }
                break;
            case RULE_STAR:
                {
                alt5=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSQLParser.g:2914:2: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:2914:2: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    // InternalSQLParser.g:2915:3: ( rule__ColumnOrAlias__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:2916:3: ( rule__ColumnOrAlias__Group_0__0 )
                    // InternalSQLParser.g:2916:4: rule__ColumnOrAlias__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:2920:2: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    {
                    // InternalSQLParser.g:2920:2: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    // InternalSQLParser.g:2921:3: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }
                    // InternalSQLParser.g:2922:3: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    // InternalSQLParser.g:2922:4: rule__ColumnOrAlias__AllColsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AllColsAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:2926:2: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    {
                    // InternalSQLParser.g:2926:2: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    // InternalSQLParser.g:2927:3: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }
                    // InternalSQLParser.g:2928:3: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    // InternalSQLParser.g:2928:4: rule__ColumnOrAlias__DbAllColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__DbAllColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Alternatives"


    // $ANTLR start "rule__FromTableJoin__Alternatives_2"
    // InternalSQLParser.g:2936:1: rule__FromTableJoin__Alternatives_2 : ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) );
    public final void rule__FromTableJoin__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2940:1: ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==ON) ) {
                alt6=1;
            }
            else if ( (LA6_0==USING) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSQLParser.g:2941:2: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    {
                    // InternalSQLParser.g:2941:2: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    // InternalSQLParser.g:2942:3: ( rule__FromTableJoin__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }
                    // InternalSQLParser.g:2943:3: ( rule__FromTableJoin__Group_2_0__0 )
                    // InternalSQLParser.g:2943:4: rule__FromTableJoin__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:2947:2: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:2947:2: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    // InternalSQLParser.g:2948:3: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:2949:3: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    // InternalSQLParser.g:2949:4: rule__FromTableJoin__JoinCondAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__JoinCondAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Alternatives_2"


    // $ANTLR start "rule__TableOrAlias__Alternatives_0"
    // InternalSQLParser.g:2957:1: rule__TableOrAlias__Alternatives_0 : ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) );
    public final void rule__TableOrAlias__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2961:1: ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) )
            int alt7=3;
            int LA7_0 = input.LA(1);

            if ( ((LA7_0>=RULE_STRING && LA7_0<=RULE_ID)) ) {
                alt7=1;
            }
            else if ( (LA7_0==LeftParenthesis) ) {
                int LA7_2 = input.LA(2);

                if ( (LA7_2==VALUES) ) {
                    alt7=3;
                }
                else if ( (LA7_2==SELECT) ) {
                    alt7=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSQLParser.g:2962:2: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    {
                    // InternalSQLParser.g:2962:2: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    // InternalSQLParser.g:2963:3: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }
                    // InternalSQLParser.g:2964:3: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    // InternalSQLParser.g:2964:4: rule__TableOrAlias__TfullAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TfullAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:2968:2: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    {
                    // InternalSQLParser.g:2968:2: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    // InternalSQLParser.g:2969:3: ( rule__TableOrAlias__SqAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }
                    // InternalSQLParser.g:2970:3: ( rule__TableOrAlias__SqAssignment_0_1 )
                    // InternalSQLParser.g:2970:4: rule__TableOrAlias__SqAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__SqAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:2974:2: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    {
                    // InternalSQLParser.g:2974:2: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    // InternalSQLParser.g:2975:3: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }
                    // InternalSQLParser.g:2976:3: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    // InternalSQLParser.g:2976:4: rule__TableOrAlias__ValuesAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__ValuesAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_0"


    // $ANTLR start "rule__TableOrAlias__Alternatives_1"
    // InternalSQLParser.g:2984:1: rule__TableOrAlias__Alternatives_1 : ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) );
    public final void rule__TableOrAlias__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2988:1: ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==PIVOT) ) {
                alt8=1;
            }
            else if ( (LA8_0==UNPIVOT) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSQLParser.g:2989:2: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:2989:2: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    // InternalSQLParser.g:2990:3: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:2991:3: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    // InternalSQLParser.g:2991:4: rule__TableOrAlias__PivotAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__PivotAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:2995:2: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:2995:2: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    // InternalSQLParser.g:2996:3: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:2997:3: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    // InternalSQLParser.g:2997:4: rule__TableOrAlias__UnpivotAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__UnpivotAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_1"


    // $ANTLR start "rule__RowValue__Alternatives"
    // InternalSQLParser.g:3005:1: rule__RowValue__Alternatives : ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) );
    public final void rule__RowValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3009:1: ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( ((LA9_0>=RULE_UNSIGNED && LA9_0<=RULE_SIGNED_DOUBLE)||LA9_0==RULE_STRING_) ) {
                alt9=1;
            }
            else if ( (LA9_0==NULL) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSQLParser.g:3010:2: ( ruleScalarNumberOperand )
                    {
                    // InternalSQLParser.g:3010:2: ( ruleScalarNumberOperand )
                    // InternalSQLParser.g:3011:3: ruleScalarNumberOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarNumberOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3016:2: ( ( rule__RowValue__NullAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3016:2: ( ( rule__RowValue__NullAssignment_1 ) )
                    // InternalSQLParser.g:3017:3: ( rule__RowValue__NullAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }
                    // InternalSQLParser.g:3018:3: ( rule__RowValue__NullAssignment_1 )
                    // InternalSQLParser.g:3018:4: rule__RowValue__NullAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValue__NullAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__Alternatives"


    // $ANTLR start "rule__PivotInClause__Alternatives_2"
    // InternalSQLParser.g:3026:1: rule__PivotInClause__Alternatives_2 : ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) );
    public final void rule__PivotInClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3030:1: ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==SELECT) ) {
                    alt10=1;
                }
                else if ( ((LA10_1>=RULE_STRING && LA10_1<=RULE_ID)) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt10=2;
                }
                break;
            case ANY:
                {
                alt10=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalSQLParser.g:3031:2: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:3031:2: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    // InternalSQLParser.g:3032:3: ( rule__PivotInClause__SqAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:3033:3: ( rule__PivotInClause__SqAssignment_2_0 )
                    // InternalSQLParser.g:3033:4: rule__PivotInClause__SqAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__SqAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3037:2: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:3037:2: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    // InternalSQLParser.g:3038:3: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:3039:3: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    // InternalSQLParser.g:3039:4: rule__PivotInClause__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3043:2: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    {
                    // InternalSQLParser.g:3043:2: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    // InternalSQLParser.g:3044:3: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }
                    // InternalSQLParser.g:3045:3: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    // InternalSQLParser.g:3045:4: rule__PivotInClause__PinanyAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__PinanyAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Alternatives_2"


    // $ANTLR start "rule__UnpivotTable__Alternatives_1_0"
    // InternalSQLParser.g:3053:1: rule__UnpivotTable__Alternatives_1_0 : ( ( INCLUDE ) | ( EXCLUDE ) );
    public final void rule__UnpivotTable__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3057:1: ( ( INCLUDE ) | ( EXCLUDE ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==INCLUDE) ) {
                alt11=1;
            }
            else if ( (LA11_0==EXCLUDE) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSQLParser.g:3058:2: ( INCLUDE )
                    {
                    // InternalSQLParser.g:3058:2: ( INCLUDE )
                    // InternalSQLParser.g:3059:3: INCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }
                    match(input,INCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3064:2: ( EXCLUDE )
                    {
                    // InternalSQLParser.g:3064:2: ( EXCLUDE )
                    // InternalSQLParser.g:3065:3: EXCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }
                    match(input,EXCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Alternatives_1_0"


    // $ANTLR start "rule__PivotForClause__Alternatives_1"
    // InternalSQLParser.g:3074:1: rule__PivotForClause__Alternatives_1 : ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) );
    public final void rule__PivotForClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3078:1: ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=RULE_STRING && LA12_0<=RULE_ID)) ) {
                alt12=1;
            }
            else if ( (LA12_0==LeftParenthesis) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalSQLParser.g:3079:2: ( ruleColumnFull )
                    {
                    // InternalSQLParser.g:3079:2: ( ruleColumnFull )
                    // InternalSQLParser.g:3080:3: ruleColumnFull
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleColumnFull();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3085:2: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:3085:2: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    // InternalSQLParser.g:3086:3: ( rule__PivotForClause__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:3087:3: ( rule__PivotForClause__Group_1_1__0 )
                    // InternalSQLParser.g:3087:4: rule__PivotForClause__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotForClause__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Alternatives_1"


    // $ANTLR start "rule__PivotColumns__Alternatives"
    // InternalSQLParser.g:3095:1: rule__PivotColumns__Alternatives : ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) );
    public final void rule__PivotColumns__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3099:1: ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=RULE_STRING && LA13_0<=RULE_ID)) ) {
                alt13=1;
            }
            else if ( (LA13_0==LeftParenthesis) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalSQLParser.g:3100:2: ( rulePivotCol )
                    {
                    // InternalSQLParser.g:3100:2: ( rulePivotCol )
                    // InternalSQLParser.g:3101:3: rulePivotCol
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePivotCol();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3106:2: ( ( rule__PivotColumns__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:3106:2: ( ( rule__PivotColumns__Group_1__0 ) )
                    // InternalSQLParser.g:3107:3: ( rule__PivotColumns__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:3108:3: ( rule__PivotColumns__Group_1__0 )
                    // InternalSQLParser.g:3108:4: rule__PivotColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Alternatives"


    // $ANTLR start "rule__OrderByColumnFull__Alternatives_0"
    // InternalSQLParser.g:3116:1: rule__OrderByColumnFull__Alternatives_0 : ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) );
    public final void rule__OrderByColumnFull__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3120:1: ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0>=RULE_STRING && LA14_0<=RULE_ID)) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_UNSIGNED) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSQLParser.g:3121:2: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    {
                    // InternalSQLParser.g:3121:2: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    // InternalSQLParser.g:3122:3: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }
                    // InternalSQLParser.g:3123:3: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    // InternalSQLParser.g:3123:4: rule__OrderByColumnFull__ColOrderAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3127:2: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    {
                    // InternalSQLParser.g:3127:2: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    // InternalSQLParser.g:3128:3: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }
                    // InternalSQLParser.g:3129:3: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    // InternalSQLParser.g:3129:4: rule__OrderByColumnFull__ColOrderIntAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderIntAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Alternatives_0"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAlternatives_1_0"
    // InternalSQLParser.g:3137:1: rule__OrderByColumnFull__DirectionAlternatives_1_0 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByColumnFull__DirectionAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3141:1: ( ( ASC ) | ( DESC ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==ASC) ) {
                alt15=1;
            }
            else if ( (LA15_0==DESC) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalSQLParser.g:3142:2: ( ASC )
                    {
                    // InternalSQLParser.g:3142:2: ( ASC )
                    // InternalSQLParser.g:3143:3: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3148:2: ( DESC )
                    {
                    // InternalSQLParser.g:3148:2: ( DESC )
                    // InternalSQLParser.g:3149:3: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAlternatives_1_0"


    // $ANTLR start "rule__GroupByColumnFull__Alternatives"
    // InternalSQLParser.g:3158:1: rule__GroupByColumnFull__Alternatives : ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) );
    public final void rule__GroupByColumnFull__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3162:1: ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) )
            int alt16=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA16_1 = input.LA(2);

                if ( (LA16_1==EOF||LA16_1==INTERSECT||LA16_1==EXCEPT||LA16_1==HAVING||LA16_1==OFFSET||LA16_1==FETCH||(LA16_1>=LIMIT && LA16_1<=MINUS)||LA16_1==ORDER||LA16_1==UNION||LA16_1==RightParenthesis||LA16_1==Comma||LA16_1==FullStop) ) {
                    alt16=1;
                }
                else if ( (LA16_1==LeftParenthesis) ) {
                    alt16=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt16=1;
                }
                break;
            case RULE_UNSIGNED:
                {
                alt16=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalSQLParser.g:3163:2: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3163:2: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    // InternalSQLParser.g:3164:3: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }
                    // InternalSQLParser.g:3165:3: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    // InternalSQLParser.g:3165:4: rule__GroupByColumnFull__ColGrByAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__ColGrByAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3169:2: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3169:2: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    // InternalSQLParser.g:3170:3: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }
                    // InternalSQLParser.g:3171:3: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    // InternalSQLParser.g:3171:4: rule__GroupByColumnFull__GbFunctionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GbFunctionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3175:2: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3175:2: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    // InternalSQLParser.g:3176:3: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }
                    // InternalSQLParser.g:3177:3: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    // InternalSQLParser.g:3177:4: rule__GroupByColumnFull__GrByIntAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GrByIntAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__Alternatives"
    // InternalSQLParser.g:3185:1: rule__ExpressionFragmentSecond__Alternatives : ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) );
    public final void rule__ExpressionFragmentSecond__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3189:1: ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==AND||LA17_0==OR) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_JRNPARAM) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSQLParser.g:3190:2: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:3190:2: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    // InternalSQLParser.g:3191:3: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:3192:3: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    // InternalSQLParser.g:3192:4: rule__ExpressionFragmentSecond__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3196:2: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3196:2: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    // InternalSQLParser.g:3197:3: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }
                    // InternalSQLParser.g:3198:3: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    // InternalSQLParser.g:3198:4: rule__ExpressionFragmentSecond__NotPrmAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__NotPrmAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"
    // InternalSQLParser.g:3206:1: rule__ExpressionFragmentSecond__CAlternatives_0_0_0 : ( ( AND ) | ( OR ) );
    public final void rule__ExpressionFragmentSecond__CAlternatives_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3210:1: ( ( AND ) | ( OR ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==AND) ) {
                alt18=1;
            }
            else if ( (LA18_0==OR) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSQLParser.g:3211:2: ( AND )
                    {
                    // InternalSQLParser.g:3211:2: ( AND )
                    // InternalSQLParser.g:3212:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3217:2: ( OR )
                    {
                    // InternalSQLParser.g:3217:2: ( OR )
                    // InternalSQLParser.g:3218:3: OR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }
                    match(input,OR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"


    // $ANTLR start "rule__ExpressionFragment__Alternatives"
    // InternalSQLParser.g:3227:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );
    public final void rule__ExpressionFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3231:1: ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) )
            int alt19=6;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalSQLParser.g:3232:2: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3232:2: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    // InternalSQLParser.g:3233:3: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }
                    // InternalSQLParser.g:3234:3: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    // InternalSQLParser.g:3234:4: rule__ExpressionFragment__ExpgroupAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpgroupAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3238:2: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3238:2: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    // InternalSQLParser.g:3239:3: ( rule__ExpressionFragment__ExpAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }
                    // InternalSQLParser.g:3240:3: ( rule__ExpressionFragment__ExpAssignment_1 )
                    // InternalSQLParser.g:3240:4: rule__ExpressionFragment__ExpAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3244:2: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3244:2: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    // InternalSQLParser.g:3245:3: ( rule__ExpressionFragment__XexpAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }
                    // InternalSQLParser.g:3246:3: ( rule__ExpressionFragment__XexpAssignment_2 )
                    // InternalSQLParser.g:3246:4: rule__ExpressionFragment__XexpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__XexpAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3250:2: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    {
                    // InternalSQLParser.g:3250:2: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    // InternalSQLParser.g:3251:3: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }
                    // InternalSQLParser.g:3252:3: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    // InternalSQLParser.g:3252:4: rule__ExpressionFragment__NotPrmAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__NotPrmAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3256:2: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    {
                    // InternalSQLParser.g:3256:2: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    // InternalSQLParser.g:3257:3: ( rule__ExpressionFragment__InAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }
                    // InternalSQLParser.g:3258:3: ( rule__ExpressionFragment__InAssignment_4 )
                    // InternalSQLParser.g:3258:4: rule__ExpressionFragment__InAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__InAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3262:2: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    {
                    // InternalSQLParser.g:3262:2: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    // InternalSQLParser.g:3263:3: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }
                    // InternalSQLParser.g:3264:3: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    // InternalSQLParser.g:3264:4: rule__ExpressionFragment__ExistsAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExistsAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__Alternatives"


    // $ANTLR start "rule__ExpressionFragment__XexpAlternatives_2_0"
    // InternalSQLParser.g:3272:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );
    public final void rule__ExpressionFragment__XexpAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3276:1: ( ( ruleXExpression ) | ( ruleXExpression_ ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalSQLParser.g:3277:2: ( ruleXExpression )
                    {
                    // InternalSQLParser.g:3277:2: ( ruleXExpression )
                    // InternalSQLParser.g:3278:3: ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3283:2: ( ruleXExpression_ )
                    {
                    // InternalSQLParser.g:3283:2: ( ruleXExpression_ )
                    // InternalSQLParser.g:3284:3: ruleXExpression_
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression_();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAlternatives_2_0"


    // $ANTLR start "rule__ExpressionGroup__IsnotAlternatives_1_0"
    // InternalSQLParser.g:3293:1: rule__ExpressionGroup__IsnotAlternatives_1_0 : ( ( NOT ) | ( NOT_1 ) );
    public final void rule__ExpressionGroup__IsnotAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3297:1: ( ( NOT ) | ( NOT_1 ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==NOT) ) {
                alt21=1;
            }
            else if ( (LA21_0==NOT_1) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalSQLParser.g:3298:2: ( NOT )
                    {
                    // InternalSQLParser.g:3298:2: ( NOT )
                    // InternalSQLParser.g:3299:3: NOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3304:2: ( NOT_1 )
                    {
                    // InternalSQLParser.g:3304:2: ( NOT_1 )
                    // InternalSQLParser.g:3305:3: NOT_1
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }
                    match(input,NOT_1,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAlternatives_1_0"


    // $ANTLR start "rule__Expression__Alternatives_1"
    // InternalSQLParser.g:3314:1: rule__Expression__Alternatives_1 : ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) );
    public final void rule__Expression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3318:1: ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) )
            int alt22=6;
            switch ( input.LA(1) ) {
            case IS:
                {
                alt22=1;
                }
                break;
            case NOT:
                {
                switch ( input.LA(2) ) {
                case BETWEEN:
                    {
                    alt22=4;
                    }
                    break;
                case LIKE:
                    {
                    alt22=5;
                    }
                    break;
                case IN:
                    {
                    alt22=2;
                    }
                    break;
                case EXISTS:
                    {
                    alt22=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 2, input);

                    throw nvae;
                }

                }
                break;
            case IN:
                {
                alt22=2;
                }
                break;
            case EXISTS:
                {
                alt22=3;
                }
                break;
            case BETWEEN:
                {
                alt22=4;
                }
                break;
            case LIKE:
                {
                alt22=5;
                }
                break;
            case ExclamationMarkEqualsSign:
            case LessThanSignEqualsSign:
            case LessThanSignGreaterThanSign:
            case GreaterThanSignEqualsSign:
            case CircumflexAccentEqualsSign:
            case LessThanSign:
            case EqualsSign:
            case GreaterThanSign:
                {
                alt22=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSQLParser.g:3319:2: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:3319:2: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    // InternalSQLParser.g:3320:3: ( rule__Expression__IsnullAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:3321:3: ( rule__Expression__IsnullAssignment_1_0 )
                    // InternalSQLParser.g:3321:4: rule__Expression__IsnullAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__IsnullAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3325:2: ( ( rule__Expression__InAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:3325:2: ( ( rule__Expression__InAssignment_1_1 ) )
                    // InternalSQLParser.g:3326:3: ( rule__Expression__InAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:3327:3: ( rule__Expression__InAssignment_1_1 )
                    // InternalSQLParser.g:3327:4: rule__Expression__InAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__InAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3331:2: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    {
                    // InternalSQLParser.g:3331:2: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    // InternalSQLParser.g:3332:3: ( rule__Expression__ExistsAssignment_1_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }
                    // InternalSQLParser.g:3333:3: ( rule__Expression__ExistsAssignment_1_2 )
                    // InternalSQLParser.g:3333:4: rule__Expression__ExistsAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__ExistsAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3337:2: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    {
                    // InternalSQLParser.g:3337:2: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    // InternalSQLParser.g:3338:3: ( rule__Expression__BetweenAssignment_1_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }
                    // InternalSQLParser.g:3339:3: ( rule__Expression__BetweenAssignment_1_3 )
                    // InternalSQLParser.g:3339:4: rule__Expression__BetweenAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__BetweenAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3343:2: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    {
                    // InternalSQLParser.g:3343:2: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    // InternalSQLParser.g:3344:3: ( rule__Expression__LikeAssignment_1_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }
                    // InternalSQLParser.g:3345:3: ( rule__Expression__LikeAssignment_1_4 )
                    // InternalSQLParser.g:3345:4: rule__Expression__LikeAssignment_1_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__LikeAssignment_1_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3349:2: ( ( rule__Expression__CompAssignment_1_5 ) )
                    {
                    // InternalSQLParser.g:3349:2: ( ( rule__Expression__CompAssignment_1_5 ) )
                    // InternalSQLParser.g:3350:3: ( rule__Expression__CompAssignment_1_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }
                    // InternalSQLParser.g:3351:3: ( rule__Expression__CompAssignment_1_5 )
                    // InternalSQLParser.g:3351:4: rule__Expression__CompAssignment_1_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__CompAssignment_1_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives_1"


    // $ANTLR start "rule__Comparison__OperatorAlternatives_0_0"
    // InternalSQLParser.g:3359:1: rule__Comparison__OperatorAlternatives_0_0 : ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) );
    public final void rule__Comparison__OperatorAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3363:1: ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) )
            int alt23=8;
            switch ( input.LA(1) ) {
            case GreaterThanSign:
                {
                alt23=1;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt23=2;
                }
                break;
            case LessThanSign:
                {
                alt23=3;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt23=4;
                }
                break;
            case EqualsSign:
                {
                alt23=5;
                }
                break;
            case LessThanSignGreaterThanSign:
                {
                alt23=6;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt23=7;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt23=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalSQLParser.g:3364:2: ( GreaterThanSign )
                    {
                    // InternalSQLParser.g:3364:2: ( GreaterThanSign )
                    // InternalSQLParser.g:3365:3: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3370:2: ( GreaterThanSignEqualsSign )
                    {
                    // InternalSQLParser.g:3370:2: ( GreaterThanSignEqualsSign )
                    // InternalSQLParser.g:3371:3: GreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3376:2: ( LessThanSign )
                    {
                    // InternalSQLParser.g:3376:2: ( LessThanSign )
                    // InternalSQLParser.g:3377:3: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3382:2: ( LessThanSignEqualsSign )
                    {
                    // InternalSQLParser.g:3382:2: ( LessThanSignEqualsSign )
                    // InternalSQLParser.g:3383:3: LessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3388:2: ( EqualsSign )
                    {
                    // InternalSQLParser.g:3388:2: ( EqualsSign )
                    // InternalSQLParser.g:3389:3: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3394:2: ( LessThanSignGreaterThanSign )
                    {
                    // InternalSQLParser.g:3394:2: ( LessThanSignGreaterThanSign )
                    // InternalSQLParser.g:3395:3: LessThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:3400:2: ( ExclamationMarkEqualsSign )
                    {
                    // InternalSQLParser.g:3400:2: ( ExclamationMarkEqualsSign )
                    // InternalSQLParser.g:3401:3: ExclamationMarkEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }
                    match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:3406:2: ( CircumflexAccentEqualsSign )
                    {
                    // InternalSQLParser.g:3406:2: ( CircumflexAccentEqualsSign )
                    // InternalSQLParser.g:3407:3: CircumflexAccentEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }
                    match(input,CircumflexAccentEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAlternatives_0_0"


    // $ANTLR start "rule__Comparison__SubOperatorAlternatives_1_0"
    // InternalSQLParser.g:3416:1: rule__Comparison__SubOperatorAlternatives_1_0 : ( ( ANY ) | ( ALL ) | ( SOME ) );
    public final void rule__Comparison__SubOperatorAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3420:1: ( ( ANY ) | ( ALL ) | ( SOME ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case ANY:
                {
                alt24=1;
                }
                break;
            case ALL:
                {
                alt24=2;
                }
                break;
            case SOME:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSQLParser.g:3421:2: ( ANY )
                    {
                    // InternalSQLParser.g:3421:2: ( ANY )
                    // InternalSQLParser.g:3422:3: ANY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }
                    match(input,ANY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3427:2: ( ALL )
                    {
                    // InternalSQLParser.g:3427:2: ( ALL )
                    // InternalSQLParser.g:3428:3: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3433:2: ( SOME )
                    {
                    // InternalSQLParser.g:3433:2: ( SOME )
                    // InternalSQLParser.g:3434:3: SOME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }
                    match(input,SOME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAlternatives_1_0"


    // $ANTLR start "rule__LikeOperand__Alternatives"
    // InternalSQLParser.g:3443:1: rule__LikeOperand__Alternatives : ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) );
    public final void rule__LikeOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3447:1: ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) )
            int alt25=4;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt25=1;
                }
                break;
            case RULE_ID:
                {
                alt25=2;
                }
                break;
            case CAST:
                {
                alt25=3;
                }
                break;
            case RULE_JRPARAM:
                {
                alt25=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalSQLParser.g:3448:2: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    {
                    // InternalSQLParser.g:3448:2: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    // InternalSQLParser.g:3449:3: ( rule__LikeOperand__Op2Assignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }
                    // InternalSQLParser.g:3450:3: ( rule__LikeOperand__Op2Assignment_0 )
                    // InternalSQLParser.g:3450:4: rule__LikeOperand__Op2Assignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Op2Assignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3454:2: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    {
                    // InternalSQLParser.g:3454:2: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    // InternalSQLParser.g:3455:3: ( rule__LikeOperand__Fop2Assignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }
                    // InternalSQLParser.g:3456:3: ( rule__LikeOperand__Fop2Assignment_1 )
                    // InternalSQLParser.g:3456:4: rule__LikeOperand__Fop2Assignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Fop2Assignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3460:2: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3460:2: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    // InternalSQLParser.g:3461:3: ( rule__LikeOperand__FcastAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }
                    // InternalSQLParser.g:3462:3: ( rule__LikeOperand__FcastAssignment_2 )
                    // InternalSQLParser.g:3462:4: rule__LikeOperand__FcastAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FcastAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3466:2: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    {
                    // InternalSQLParser.g:3466:2: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    // InternalSQLParser.g:3467:3: ( rule__LikeOperand__FparamAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }
                    // InternalSQLParser.g:3468:3: ( rule__LikeOperand__FparamAssignment_3 )
                    // InternalSQLParser.g:3468:4: rule__LikeOperand__FparamAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FparamAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Alternatives"


    // $ANTLR start "rule__InOperator__Alternatives_2"
    // InternalSQLParser.g:3476:1: rule__InOperator__Alternatives_2 : ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) );
    public final void rule__InOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3480:1: ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==LeftParenthesis) ) {
                int LA26_1 = input.LA(2);

                if ( ((LA26_1>=RULE_SIGNED_DOUBLE && LA26_1<=RULE_TIMESTAMP)||LA26_1==RULE_STRING_) ) {
                    alt26=2;
                }
                else if ( (LA26_1==SELECT) ) {
                    alt26=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSQLParser.g:3481:2: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:3481:2: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    // InternalSQLParser.g:3482:3: ( rule__InOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:3483:3: ( rule__InOperator__SubqueryAssignment_2_0 )
                    // InternalSQLParser.g:3483:4: rule__InOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3487:2: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:3487:2: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    // InternalSQLParser.g:3488:3: ( rule__InOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:3489:3: ( rule__InOperator__OpListAssignment_2_1 )
                    // InternalSQLParser.g:3489:4: rule__InOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Alternatives_2"


    // $ANTLR start "rule__ExistsOperator__Alternatives_2"
    // InternalSQLParser.g:3497:1: rule__ExistsOperator__Alternatives_2 : ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) );
    public final void rule__ExistsOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3501:1: ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==LeftParenthesis) ) {
                int LA27_1 = input.LA(2);

                if ( ((LA27_1>=RULE_SIGNED_DOUBLE && LA27_1<=RULE_TIMESTAMP)||LA27_1==RULE_STRING_) ) {
                    alt27=2;
                }
                else if ( (LA27_1==SELECT) ) {
                    alt27=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalSQLParser.g:3502:2: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:3502:2: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    // InternalSQLParser.g:3503:3: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:3504:3: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    // InternalSQLParser.g:3504:4: rule__ExistsOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3508:2: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:3508:2: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    // InternalSQLParser.g:3509:3: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:3510:3: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    // InternalSQLParser.g:3510:4: rule__ExistsOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Alternatives_2"


    // $ANTLR start "rule__OperandGroup__Alternatives"
    // InternalSQLParser.g:3518:1: rule__OperandGroup__Alternatives : ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) );
    public final void rule__OperandGroup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3522:1: ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==EXTRACT||LA28_0==CAST||LA28_0==CASE||(LA28_0>=RULE_JRPARAM && LA28_0<=RULE_JRNPARAM)||(LA28_0>=RULE_UNSIGNED && LA28_0<=RULE_SIGNED_DOUBLE)||(LA28_0>=RULE_STRING_ && LA28_0<=RULE_ID)) ) {
                alt28=1;
            }
            else if ( (LA28_0==LeftParenthesis) ) {
                int LA28_2 = input.LA(2);

                if ( (LA28_2==EXTRACT||LA28_2==CAST||LA28_2==CASE||LA28_2==LeftParenthesis||(LA28_2>=RULE_JRPARAM && LA28_2<=RULE_JRNPARAM)||(LA28_2>=RULE_UNSIGNED && LA28_2<=RULE_SIGNED_DOUBLE)||(LA28_2>=RULE_STRING_ && LA28_2<=RULE_ID)) ) {
                    alt28=2;
                }
                else if ( (LA28_2==SELECT) ) {
                    alt28=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalSQLParser.g:3523:2: ( ruleOperand )
                    {
                    // InternalSQLParser.g:3523:2: ( ruleOperand )
                    // InternalSQLParser.g:3524:3: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3529:2: ( ( rule__OperandGroup__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:3529:2: ( ( rule__OperandGroup__Group_1__0 ) )
                    // InternalSQLParser.g:3530:3: ( rule__OperandGroup__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:3531:3: ( rule__OperandGroup__Group_1__0 )
                    // InternalSQLParser.g:3531:4: rule__OperandGroup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandGroup__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Alternatives"


    // $ANTLR start "rule__Operand__Alternatives_1_0"
    // InternalSQLParser.g:3539:1: rule__Operand__Alternatives_1_0 : ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) );
    public final void rule__Operand__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3543:1: ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) )
            int alt29=5;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                alt29=1;
                }
                break;
            case HyphenMinus:
                {
                alt29=2;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt29=3;
                }
                break;
            case RULE_STAR:
                {
                alt29=4;
                }
                break;
            case Solidus:
                {
                alt29=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalSQLParser.g:3544:2: ( ( rule__Operand__Group_1_0_0__0 ) )
                    {
                    // InternalSQLParser.g:3544:2: ( ( rule__Operand__Group_1_0_0__0 ) )
                    // InternalSQLParser.g:3545:3: ( rule__Operand__Group_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }
                    // InternalSQLParser.g:3546:3: ( rule__Operand__Group_1_0_0__0 )
                    // InternalSQLParser.g:3546:4: rule__Operand__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3550:2: ( ( rule__Operand__Group_1_0_1__0 ) )
                    {
                    // InternalSQLParser.g:3550:2: ( ( rule__Operand__Group_1_0_1__0 ) )
                    // InternalSQLParser.g:3551:3: ( rule__Operand__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }
                    // InternalSQLParser.g:3552:3: ( rule__Operand__Group_1_0_1__0 )
                    // InternalSQLParser.g:3552:4: rule__Operand__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3556:2: ( ( rule__Operand__Group_1_0_2__0 ) )
                    {
                    // InternalSQLParser.g:3556:2: ( ( rule__Operand__Group_1_0_2__0 ) )
                    // InternalSQLParser.g:3557:3: ( rule__Operand__Group_1_0_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }
                    // InternalSQLParser.g:3558:3: ( rule__Operand__Group_1_0_2__0 )
                    // InternalSQLParser.g:3558:4: rule__Operand__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3562:2: ( ( rule__Operand__Group_1_0_3__0 ) )
                    {
                    // InternalSQLParser.g:3562:2: ( ( rule__Operand__Group_1_0_3__0 ) )
                    // InternalSQLParser.g:3563:3: ( rule__Operand__Group_1_0_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }
                    // InternalSQLParser.g:3564:3: ( rule__Operand__Group_1_0_3__0 )
                    // InternalSQLParser.g:3564:4: rule__Operand__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3568:2: ( ( rule__Operand__Group_1_0_4__0 ) )
                    {
                    // InternalSQLParser.g:3568:2: ( ( rule__Operand__Group_1_0_4__0 ) )
                    // InternalSQLParser.g:3569:3: ( rule__Operand__Group_1_0_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }
                    // InternalSQLParser.g:3570:3: ( rule__Operand__Group_1_0_4__0 )
                    // InternalSQLParser.g:3570:4: rule__Operand__Group_1_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Alternatives_1_0"


    // $ANTLR start "rule__OperandFragment__Alternatives"
    // InternalSQLParser.g:3578:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) );
    public final void rule__OperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3582:1: ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) )
            int alt30=7;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA30_1 = input.LA(2);

                if ( (LA30_1==LeftParenthesis) ) {
                    alt30=6;
                }
                else if ( (LA30_1==EOF||LA30_1==STRAIGHT_JOIN||(LA30_1>=KW_FOLLOWING && LA30_1<=INTERSECT)||LA30_1==PRECEDING||LA30_1==BETWEEN||LA30_1==NATURAL||(LA30_1>=EXCEPT && LA30_1<=HAVING)||LA30_1==OFFSET||(LA30_1>=CROSS && LA30_1<=FETCH)||(LA30_1>=GROUP && LA30_1<=MINUS)||(LA30_1>=NULLS && LA30_1<=ORDER)||(LA30_1>=RANGE && LA30_1<=UNION)||LA30_1==WHERE||(LA30_1>=DESC && LA30_1<=FULL)||LA30_1==JOIN||(LA30_1>=LEFT && LA30_1<=LIKE)||LA30_1==ROWS||LA30_1==THEN||LA30_1==WHEN||LA30_1==LeftParenthesisPlusSignRightParenthesis||LA30_1==AND||LA30_1==ASC||LA30_1==END||LA30_1==NOT||LA30_1==ExclamationMarkEqualsSign||(LA30_1>=LessThanSignEqualsSign && LA30_1<=AS)||(LA30_1>=IN && LA30_1<=IS)||(LA30_1>=OR && LA30_1<=VerticalLineVerticalLine)||(LA30_1>=RightParenthesis && LA30_1<=RightCurlyBracket)||(LA30_1>=RULE_JRNPARAM && LA30_1<=RULE_STAR)||(LA30_1>=RULE_STRING && LA30_1<=RULE_ID)) ) {
                    alt30=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt30=1;
                }
                break;
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt30=2;
                }
                break;
            case LeftParenthesis:
                {
                alt30=3;
                }
                break;
            case CAST:
                {
                alt30=4;
                }
                break;
            case EXTRACT:
                {
                alt30=5;
                }
                break;
            case CASE:
                {
                alt30=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalSQLParser.g:3583:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3583:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    // InternalSQLParser.g:3584:3: ( rule__OperandFragment__ColumnAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }
                    // InternalSQLParser.g:3585:3: ( rule__OperandFragment__ColumnAssignment_0 )
                    // InternalSQLParser.g:3585:4: rule__OperandFragment__ColumnAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__ColumnAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3589:2: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3589:2: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    // InternalSQLParser.g:3590:3: ( rule__OperandFragment__XopAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }
                    // InternalSQLParser.g:3591:3: ( rule__OperandFragment__XopAssignment_1 )
                    // InternalSQLParser.g:3591:4: rule__OperandFragment__XopAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__XopAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3595:2: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3595:2: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    // InternalSQLParser.g:3596:3: ( rule__OperandFragment__SubqAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }
                    // InternalSQLParser.g:3597:3: ( rule__OperandFragment__SubqAssignment_2 )
                    // InternalSQLParser.g:3597:4: rule__OperandFragment__SubqAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SubqAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3601:2: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    {
                    // InternalSQLParser.g:3601:2: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    // InternalSQLParser.g:3602:3: ( rule__OperandFragment__FcastAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }
                    // InternalSQLParser.g:3603:3: ( rule__OperandFragment__FcastAssignment_3 )
                    // InternalSQLParser.g:3603:4: rule__OperandFragment__FcastAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FcastAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3607:2: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    {
                    // InternalSQLParser.g:3607:2: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    // InternalSQLParser.g:3608:3: ( rule__OperandFragment__FextAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }
                    // InternalSQLParser.g:3609:3: ( rule__OperandFragment__FextAssignment_4 )
                    // InternalSQLParser.g:3609:4: rule__OperandFragment__FextAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FextAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3613:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    {
                    // InternalSQLParser.g:3613:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    // InternalSQLParser.g:3614:3: ( rule__OperandFragment__FuncAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }
                    // InternalSQLParser.g:3615:3: ( rule__OperandFragment__FuncAssignment_5 )
                    // InternalSQLParser.g:3615:4: rule__OperandFragment__FuncAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FuncAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:3619:2: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    {
                    // InternalSQLParser.g:3619:2: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    // InternalSQLParser.g:3620:3: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }
                    // InternalSQLParser.g:3621:3: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    // InternalSQLParser.g:3621:4: rule__OperandFragment__SqlcaseAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SqlcaseAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__Alternatives"


    // $ANTLR start "rule__OperandFunction__Alternatives_2"
    // InternalSQLParser.g:3629:1: rule__OperandFunction__Alternatives_2 : ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) );
    public final void rule__OperandFunction__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3633:1: ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_STAR) ) {
                alt31=1;
            }
            else if ( (LA31_0==DISTINCT||LA31_0==EXTRACT||LA31_0==CAST||LA31_0==CASE||LA31_0==ALL||LA31_0==LeftParenthesis||(LA31_0>=RULE_JRPARAM && LA31_0<=RULE_JRNPARAM)||(LA31_0>=RULE_UNSIGNED && LA31_0<=RULE_SIGNED_DOUBLE)||(LA31_0>=RULE_STRING_ && LA31_0<=RULE_ID)) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalSQLParser.g:3634:2: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:3634:2: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    // InternalSQLParser.g:3635:3: ( rule__OperandFunction__StarAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:3636:3: ( rule__OperandFunction__StarAssignment_2_0 )
                    // InternalSQLParser.g:3636:4: rule__OperandFunction__StarAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__StarAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3640:2: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:3640:2: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    // InternalSQLParser.g:3641:3: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:3642:3: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    // InternalSQLParser.g:3642:4: rule__OperandFunction__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Alternatives_2"


    // $ANTLR start "rule__WindowingClause__Alternatives_0"
    // InternalSQLParser.g:3650:1: rule__WindowingClause__Alternatives_0 : ( ( ROWS ) | ( RANGE ) );
    public final void rule__WindowingClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3654:1: ( ( ROWS ) | ( RANGE ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==ROWS) ) {
                alt32=1;
            }
            else if ( (LA32_0==RANGE) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSQLParser.g:3655:2: ( ROWS )
                    {
                    // InternalSQLParser.g:3655:2: ( ROWS )
                    // InternalSQLParser.g:3656:3: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3661:2: ( RANGE )
                    {
                    // InternalSQLParser.g:3661:2: ( RANGE )
                    // InternalSQLParser.g:3662:3: RANGE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }
                    match(input,RANGE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_0"


    // $ANTLR start "rule__WindowingClause__Alternatives_1"
    // InternalSQLParser.g:3671:1: rule__WindowingClause__Alternatives_1 : ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) );
    public final void rule__WindowingClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3675:1: ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==BETWEEN) ) {
                alt33=1;
            }
            else if ( (LA33_0==UNBOUNDED||LA33_0==CURRENT||LA33_0==EXTRACT||LA33_0==CAST||LA33_0==CASE||LA33_0==LeftParenthesis||(LA33_0>=RULE_JRPARAM && LA33_0<=RULE_JRNPARAM)||(LA33_0>=RULE_UNSIGNED && LA33_0<=RULE_SIGNED_DOUBLE)||(LA33_0>=RULE_STRING_ && LA33_0<=RULE_ID)) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSQLParser.g:3676:2: ( ruleWindowingClauseBetween )
                    {
                    // InternalSQLParser.g:3676:2: ( ruleWindowingClauseBetween )
                    // InternalSQLParser.g:3677:3: ruleWindowingClauseBetween
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseBetween();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3682:2: ( ruleWindowingClauseOperandPreceding )
                    {
                    // InternalSQLParser.g:3682:2: ( ruleWindowingClauseOperandPreceding )
                    // InternalSQLParser.g:3683:3: ruleWindowingClauseOperandPreceding
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseOperandPreceding();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1"
    // InternalSQLParser.g:3692:1: rule__WindowingClauseOperandFollowing__Alternatives_1 : ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3696:1: ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) )
            int alt34=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt34=1;
                }
                break;
            case CURRENT:
                {
                alt34=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt34=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalSQLParser.g:3697:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    {
                    // InternalSQLParser.g:3697:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    // InternalSQLParser.g:3698:3: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }
                    // InternalSQLParser.g:3699:3: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    // InternalSQLParser.g:3699:4: rule__WindowingClauseOperandFollowing__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3703:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:3703:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    // InternalSQLParser.g:3704:3: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:3705:3: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    // InternalSQLParser.g:3705:4: rule__WindowingClauseOperandFollowing__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3709:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    {
                    // InternalSQLParser.g:3709:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    // InternalSQLParser.g:3710:3: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }
                    // InternalSQLParser.g:3711:3: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    // InternalSQLParser.g:3711:4: rule__WindowingClauseOperandFollowing__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"
    // InternalSQLParser.g:3719:1: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3723:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==PRECEDING) ) {
                alt35=1;
            }
            else if ( (LA35_0==KW_FOLLOWING) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalSQLParser.g:3724:2: ( PRECEDING )
                    {
                    // InternalSQLParser.g:3724:2: ( PRECEDING )
                    // InternalSQLParser.g:3725:3: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3730:2: ( KW_FOLLOWING )
                    {
                    // InternalSQLParser.g:3730:2: ( KW_FOLLOWING )
                    // InternalSQLParser.g:3731:3: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1"
    // InternalSQLParser.g:3740:1: rule__WindowingClauseOperandPreceding__Alternatives_1 : ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3744:1: ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) )
            int alt36=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt36=1;
                }
                break;
            case CURRENT:
                {
                alt36=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalSQLParser.g:3745:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    {
                    // InternalSQLParser.g:3745:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    // InternalSQLParser.g:3746:3: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }
                    // InternalSQLParser.g:3747:3: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    // InternalSQLParser.g:3747:4: rule__WindowingClauseOperandPreceding__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3751:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:3751:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    // InternalSQLParser.g:3752:3: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:3753:3: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    // InternalSQLParser.g:3753:4: rule__WindowingClauseOperandPreceding__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3757:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    {
                    // InternalSQLParser.g:3757:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    // InternalSQLParser.g:3758:3: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }
                    // InternalSQLParser.g:3759:3: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    // InternalSQLParser.g:3759:4: rule__WindowingClauseOperandPreceding__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"
    // InternalSQLParser.g:3767:1: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3771:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==PRECEDING) ) {
                alt37=1;
            }
            else if ( (LA37_0==KW_FOLLOWING) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalSQLParser.g:3772:2: ( PRECEDING )
                    {
                    // InternalSQLParser.g:3772:2: ( PRECEDING )
                    // InternalSQLParser.g:3773:3: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3778:2: ( KW_FOLLOWING )
                    {
                    // InternalSQLParser.g:3778:2: ( KW_FOLLOWING )
                    // InternalSQLParser.g:3779:3: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"


    // $ANTLR start "rule__OrderByClause__Alternatives_0"
    // InternalSQLParser.g:3788:1: rule__OrderByClause__Alternatives_0 : ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) );
    public final void rule__OrderByClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3792:1: ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==ORDER) ) {
                int LA38_1 = input.LA(2);

                if ( (LA38_1==BY) ) {
                    alt38=1;
                }
                else if ( (LA38_1==SIBLINGS) ) {
                    alt38=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalSQLParser.g:3793:2: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    {
                    // InternalSQLParser.g:3793:2: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    // InternalSQLParser.g:3794:3: ( rule__OrderByClause__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }
                    // InternalSQLParser.g:3795:3: ( rule__OrderByClause__Group_0_0__0 )
                    // InternalSQLParser.g:3795:4: rule__OrderByClause__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3799:2: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    {
                    // InternalSQLParser.g:3799:2: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    // InternalSQLParser.g:3800:3: ( rule__OrderByClause__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }
                    // InternalSQLParser.g:3801:3: ( rule__OrderByClause__Group_0_1__0 )
                    // InternalSQLParser.g:3801:4: rule__OrderByClause__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Alternatives_0"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_1"
    // InternalSQLParser.g:3809:1: rule__OrderByClauseArg__Alternatives_1 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByClauseArg__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3813:1: ( ( ASC ) | ( DESC ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==ASC) ) {
                alt39=1;
            }
            else if ( (LA39_0==DESC) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalSQLParser.g:3814:2: ( ASC )
                    {
                    // InternalSQLParser.g:3814:2: ( ASC )
                    // InternalSQLParser.g:3815:3: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3820:2: ( DESC )
                    {
                    // InternalSQLParser.g:3820:2: ( DESC )
                    // InternalSQLParser.g:3821:3: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_1"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_2_1"
    // InternalSQLParser.g:3830:1: rule__OrderByClauseArg__Alternatives_2_1 : ( ( FIRST ) | ( LAST ) );
    public final void rule__OrderByClauseArg__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3834:1: ( ( FIRST ) | ( LAST ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==FIRST) ) {
                alt40=1;
            }
            else if ( (LA40_0==LAST) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalSQLParser.g:3835:2: ( FIRST )
                    {
                    // InternalSQLParser.g:3835:2: ( FIRST )
                    // InternalSQLParser.g:3836:3: FIRST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }
                    match(input,FIRST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3841:2: ( LAST )
                    {
                    // InternalSQLParser.g:3841:2: ( LAST )
                    // InternalSQLParser.g:3842:3: LAST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }
                    match(input,LAST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_2_1"


    // $ANTLR start "rule__QueryPartitionClause__Alternatives_2"
    // InternalSQLParser.g:3851:1: rule__QueryPartitionClause__Alternatives_2 : ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) );
    public final void rule__QueryPartitionClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3855:1: ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==EXTRACT||LA41_0==CAST||LA41_0==CASE||(LA41_0>=RULE_JRPARAM && LA41_0<=RULE_JRNPARAM)||(LA41_0>=RULE_UNSIGNED && LA41_0<=RULE_SIGNED_DOUBLE)||(LA41_0>=RULE_STRING_ && LA41_0<=RULE_ID)) ) {
                alt41=1;
            }
            else if ( (LA41_0==LeftParenthesis) ) {
                int LA41_2 = input.LA(2);

                if ( (LA41_2==EXTRACT||LA41_2==CAST||LA41_2==CASE||LA41_2==LeftParenthesis||(LA41_2>=RULE_JRPARAM && LA41_2<=RULE_JRNPARAM)||(LA41_2>=RULE_UNSIGNED && LA41_2<=RULE_SIGNED_DOUBLE)||(LA41_2>=RULE_STRING_ && LA41_2<=RULE_ID)) ) {
                    alt41=2;
                }
                else if ( (LA41_2==SELECT) ) {
                    alt41=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalSQLParser.g:3856:2: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:3856:2: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    // InternalSQLParser.g:3857:3: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:3858:3: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    // InternalSQLParser.g:3858:4: rule__QueryPartitionClause__ArgsAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__ArgsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3862:2: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    {
                    // InternalSQLParser.g:3862:2: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    // InternalSQLParser.g:3863:3: ( rule__QueryPartitionClause__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }
                    // InternalSQLParser.g:3864:3: ( rule__QueryPartitionClause__Group_2_1__0 )
                    // InternalSQLParser.g:3864:4: rule__QueryPartitionClause__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Alternatives_2"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAlternatives_0"
    // InternalSQLParser.g:3872:1: rule__OpFunctionArgOperand__OpAlternatives_0 : ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) );
    public final void rule__OpFunctionArgOperand__OpAlternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3876:1: ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==DISTINCT||LA42_0==ALL) ) {
                alt42=1;
            }
            else if ( (LA42_0==EXTRACT||LA42_0==CAST||LA42_0==CASE||LA42_0==LeftParenthesis||(LA42_0>=RULE_JRPARAM && LA42_0<=RULE_JRNPARAM)||(LA42_0>=RULE_UNSIGNED && LA42_0<=RULE_SIGNED_DOUBLE)||(LA42_0>=RULE_STRING_ && LA42_0<=RULE_ID)) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalSQLParser.g:3877:2: ( ruleOpFunctionArgAgregate )
                    {
                    // InternalSQLParser.g:3877:2: ( ruleOpFunctionArgAgregate )
                    // InternalSQLParser.g:3878:3: ruleOpFunctionArgAgregate
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpFunctionArgAgregate();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3883:2: ( ruleOperand )
                    {
                    // InternalSQLParser.g:3883:2: ( ruleOperand )
                    // InternalSQLParser.g:3884:3: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAlternatives_0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Alternatives_0"
    // InternalSQLParser.g:3893:1: rule__OpFunctionArgAgregate__Alternatives_0 : ( ( ALL ) | ( DISTINCT ) );
    public final void rule__OpFunctionArgAgregate__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3897:1: ( ( ALL ) | ( DISTINCT ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==ALL) ) {
                alt43=1;
            }
            else if ( (LA43_0==DISTINCT) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalSQLParser.g:3898:2: ( ALL )
                    {
                    // InternalSQLParser.g:3898:2: ( ALL )
                    // InternalSQLParser.g:3899:3: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3904:2: ( DISTINCT )
                    {
                    // InternalSQLParser.g:3904:2: ( DISTINCT )
                    // InternalSQLParser.g:3905:3: DISTINCT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Alternatives_0"


    // $ANTLR start "rule__XOperandFragment__Alternatives"
    // InternalSQLParser.g:3914:1: rule__XOperandFragment__Alternatives : ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) );
    public final void rule__XOperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3918:1: ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) )
            int alt44=3;
            switch ( input.LA(1) ) {
            case RULE_JRPARAM:
                {
                alt44=1;
                }
                break;
            case RULE_JRNPARAM:
                {
                alt44=2;
                }
                break;
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt44=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }

            switch (alt44) {
                case 1 :
                    // InternalSQLParser.g:3919:2: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3919:2: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    // InternalSQLParser.g:3920:3: ( rule__XOperandFragment__ParamAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }
                    // InternalSQLParser.g:3921:3: ( rule__XOperandFragment__ParamAssignment_0 )
                    // InternalSQLParser.g:3921:4: rule__XOperandFragment__ParamAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ParamAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3925:2: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3925:2: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    // InternalSQLParser.g:3926:3: ( rule__XOperandFragment__EparamAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }
                    // InternalSQLParser.g:3927:3: ( rule__XOperandFragment__EparamAssignment_1 )
                    // InternalSQLParser.g:3927:4: rule__XOperandFragment__EparamAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__EparamAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3931:2: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3931:2: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    // InternalSQLParser.g:3932:3: ( rule__XOperandFragment__ScalarAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }
                    // InternalSQLParser.g:3933:3: ( rule__XOperandFragment__ScalarAssignment_2 )
                    // InternalSQLParser.g:3933:4: rule__XOperandFragment__ScalarAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ScalarAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__Alternatives"


    // $ANTLR start "rule__ScalarOperand__Alternatives"
    // InternalSQLParser.g:3941:1: rule__ScalarOperand__Alternatives : ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) );
    public final void rule__ScalarOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3945:1: ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) )
            int alt45=5;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt45=1;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt45=2;
                }
                break;
            case RULE_DATE:
                {
                alt45=3;
                }
                break;
            case RULE_TIME:
                {
                alt45=4;
                }
                break;
            case RULE_TIMESTAMP:
                {
                alt45=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // InternalSQLParser.g:3946:2: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3946:2: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    // InternalSQLParser.g:3947:3: ( rule__ScalarOperand__SostrAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }
                    // InternalSQLParser.g:3948:3: ( rule__ScalarOperand__SostrAssignment_0 )
                    // InternalSQLParser.g:3948:4: rule__ScalarOperand__SostrAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SostrAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3952:2: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3952:2: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    // InternalSQLParser.g:3953:3: ( rule__ScalarOperand__SodblAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }
                    // InternalSQLParser.g:3954:3: ( rule__ScalarOperand__SodblAssignment_1 )
                    // InternalSQLParser.g:3954:4: rule__ScalarOperand__SodblAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodblAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3958:2: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3958:2: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    // InternalSQLParser.g:3959:3: ( rule__ScalarOperand__SodateAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }
                    // InternalSQLParser.g:3960:3: ( rule__ScalarOperand__SodateAssignment_2 )
                    // InternalSQLParser.g:3960:4: rule__ScalarOperand__SodateAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodateAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3964:2: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    {
                    // InternalSQLParser.g:3964:2: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    // InternalSQLParser.g:3965:3: ( rule__ScalarOperand__SotimeAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }
                    // InternalSQLParser.g:3966:3: ( rule__ScalarOperand__SotimeAssignment_3 )
                    // InternalSQLParser.g:3966:4: rule__ScalarOperand__SotimeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SotimeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3970:2: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    {
                    // InternalSQLParser.g:3970:2: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    // InternalSQLParser.g:3971:3: ( rule__ScalarOperand__SodtAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }
                    // InternalSQLParser.g:3972:3: ( rule__ScalarOperand__SodtAssignment_4 )
                    // InternalSQLParser.g:3972:4: rule__ScalarOperand__SodtAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodtAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__Alternatives"


    // $ANTLR start "rule__ScalarNumberOperand__Alternatives"
    // InternalSQLParser.g:3980:1: rule__ScalarNumberOperand__Alternatives : ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) );
    public final void rule__ScalarNumberOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3984:1: ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) )
            int alt46=4;
            switch ( input.LA(1) ) {
            case RULE_UNSIGNED:
                {
                alt46=1;
                }
                break;
            case RULE_INT:
                {
                alt46=2;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt46=3;
                }
                break;
            case RULE_STRING_:
                {
                alt46=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }

            switch (alt46) {
                case 1 :
                    // InternalSQLParser.g:3985:2: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3985:2: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    // InternalSQLParser.g:3986:3: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }
                    // InternalSQLParser.g:3987:3: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    // InternalSQLParser.g:3987:4: rule__ScalarNumberOperand__SoUIntAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SoUIntAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3991:2: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3991:2: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    // InternalSQLParser.g:3992:3: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }
                    // InternalSQLParser.g:3993:3: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    // InternalSQLParser.g:3993:4: rule__ScalarNumberOperand__SointAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SointAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3997:2: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3997:2: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    // InternalSQLParser.g:3998:3: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }
                    // InternalSQLParser.g:3999:3: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    // InternalSQLParser.g:3999:4: rule__ScalarNumberOperand__SodblAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SodblAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4003:2: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4003:2: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    // InternalSQLParser.g:4004:3: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }
                    // InternalSQLParser.g:4005:3: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    // InternalSQLParser.g:4005:4: rule__ScalarNumberOperand__SostrAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SostrAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__Alternatives"


    // $ANTLR start "rule__SQLCASE__Alternatives_1"
    // InternalSQLParser.g:4013:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );
    public final void rule__SQLCASE__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4017:1: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) )
            int alt47=2;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // InternalSQLParser.g:4018:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:4018:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    // InternalSQLParser.g:4019:3: ( rule__SQLCASE__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:4020:3: ( rule__SQLCASE__WopAssignment_1_0 )
                    // InternalSQLParser.g:4020:4: rule__SQLCASE__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4024:2: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:4024:2: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    // InternalSQLParser.g:4025:3: ( rule__SQLCASE__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:4026:3: ( rule__SQLCASE__ExprAssignment_1_1 )
                    // InternalSQLParser.g:4026:4: rule__SQLCASE__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Alternatives_1"


    // $ANTLR start "rule__SqlCaseWhen__Alternatives_1"
    // InternalSQLParser.g:4034:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );
    public final void rule__SqlCaseWhen__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4038:1: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) )
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalSQLParser.g:4039:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:4039:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    // InternalSQLParser.g:4040:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:4041:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    // InternalSQLParser.g:4041:4: rule__SqlCaseWhen__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4045:2: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:4045:2: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    // InternalSQLParser.g:4046:3: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:4047:3: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    // InternalSQLParser.g:4047:4: rule__SqlCaseWhen__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1"
    // InternalSQLParser.g:4055:1: rule__JoinType__Alternatives_1 : ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) );
    public final void rule__JoinType__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4059:1: ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) )
            int alt49=4;
            switch ( input.LA(1) ) {
            case INNER:
                {
                alt49=1;
                }
                break;
            case RIGHT:
            case FULL:
            case LEFT:
                {
                alt49=2;
                }
                break;
            case CROSS:
                {
                alt49=3;
                }
                break;
            case STRAIGHT_JOIN:
                {
                alt49=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalSQLParser.g:4060:2: ( INNER )
                    {
                    // InternalSQLParser.g:4060:2: ( INNER )
                    // InternalSQLParser.g:4061:3: INNER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }
                    match(input,INNER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4066:2: ( ( rule__JoinType__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:4066:2: ( ( rule__JoinType__Group_1_1__0 ) )
                    // InternalSQLParser.g:4067:3: ( rule__JoinType__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:4068:3: ( rule__JoinType__Group_1_1__0 )
                    // InternalSQLParser.g:4068:4: rule__JoinType__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4072:2: ( CROSS )
                    {
                    // InternalSQLParser.g:4072:2: ( CROSS )
                    // InternalSQLParser.g:4073:3: CROSS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }
                    match(input,CROSS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4078:2: ( STRAIGHT_JOIN )
                    {
                    // InternalSQLParser.g:4078:2: ( STRAIGHT_JOIN )
                    // InternalSQLParser.g:4079:3: STRAIGHT_JOIN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }
                    match(input,STRAIGHT_JOIN,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1_1_0"
    // InternalSQLParser.g:4088:1: rule__JoinType__Alternatives_1_1_0 : ( ( LEFT ) | ( RIGHT ) | ( FULL ) );
    public final void rule__JoinType__Alternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4092:1: ( ( LEFT ) | ( RIGHT ) | ( FULL ) )
            int alt50=3;
            switch ( input.LA(1) ) {
            case LEFT:
                {
                alt50=1;
                }
                break;
            case RIGHT:
                {
                alt50=2;
                }
                break;
            case FULL:
                {
                alt50=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalSQLParser.g:4093:2: ( LEFT )
                    {
                    // InternalSQLParser.g:4093:2: ( LEFT )
                    // InternalSQLParser.g:4094:3: LEFT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }
                    match(input,LEFT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4099:2: ( RIGHT )
                    {
                    // InternalSQLParser.g:4099:2: ( RIGHT )
                    // InternalSQLParser.g:4100:3: RIGHT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }
                    match(input,RIGHT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4105:2: ( FULL )
                    {
                    // InternalSQLParser.g:4105:2: ( FULL )
                    // InternalSQLParser.g:4106:3: FULL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }
                    match(input,FULL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1_1_0"


    // $ANTLR start "rule__DBID__Alternatives"
    // InternalSQLParser.g:4115:1: rule__DBID__Alternatives : ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) );
    public final void rule__DBID__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4119:1: ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) )
            int alt51=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt51=1;
                }
                break;
            case RULE_DBNAME:
                {
                alt51=2;
                }
                break;
            case RULE_STRING:
                {
                alt51=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // InternalSQLParser.g:4120:2: ( RULE_ID )
                    {
                    // InternalSQLParser.g:4120:2: ( RULE_ID )
                    // InternalSQLParser.g:4121:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4126:2: ( RULE_DBNAME )
                    {
                    // InternalSQLParser.g:4126:2: ( RULE_DBNAME )
                    // InternalSQLParser.g:4127:3: RULE_DBNAME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }
                    match(input,RULE_DBNAME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4132:2: ( RULE_STRING )
                    {
                    // InternalSQLParser.g:4132:2: ( RULE_STRING )
                    // InternalSQLParser.g:4133:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DBID__Alternatives"


    // $ANTLR start "rule__XFunction__Alternatives"
    // InternalSQLParser.g:4142:1: rule__XFunction__Alternatives : ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) );
    public final void rule__XFunction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4146:1: ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) )
            int alt52=12;
            switch ( input.LA(1) ) {
            case IN_1:
                {
                alt52=1;
                }
                break;
            case NOTIN:
                {
                alt52=2;
                }
                break;
            case EQUAL:
                {
                alt52=3;
                }
                break;
            case NOTEQUAL:
                {
                alt52=4;
                }
                break;
            case LESS:
                {
                alt52=5;
                }
                break;
            case LESS_1:
                {
                alt52=6;
                }
                break;
            case GREATER_1:
                {
                alt52=7;
                }
                break;
            case GREATER:
                {
                alt52=8;
                }
                break;
            case BETWEEN_1:
                {
                alt52=9;
                }
                break;
            case BETWEEN_4:
                {
                alt52=10;
                }
                break;
            case BETWEEN_3:
                {
                alt52=11;
                }
                break;
            case BETWEEN_2:
                {
                alt52=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalSQLParser.g:4147:2: ( ( IN_1 ) )
                    {
                    // InternalSQLParser.g:4147:2: ( ( IN_1 ) )
                    // InternalSQLParser.g:4148:3: ( IN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }
                    // InternalSQLParser.g:4149:3: ( IN_1 )
                    // InternalSQLParser.g:4149:4: IN_1
                    {
                    match(input,IN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4153:2: ( ( NOTIN ) )
                    {
                    // InternalSQLParser.g:4153:2: ( ( NOTIN ) )
                    // InternalSQLParser.g:4154:3: ( NOTIN )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }
                    // InternalSQLParser.g:4155:3: ( NOTIN )
                    // InternalSQLParser.g:4155:4: NOTIN
                    {
                    match(input,NOTIN,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4159:2: ( ( EQUAL ) )
                    {
                    // InternalSQLParser.g:4159:2: ( ( EQUAL ) )
                    // InternalSQLParser.g:4160:3: ( EQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }
                    // InternalSQLParser.g:4161:3: ( EQUAL )
                    // InternalSQLParser.g:4161:4: EQUAL
                    {
                    match(input,EQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4165:2: ( ( NOTEQUAL ) )
                    {
                    // InternalSQLParser.g:4165:2: ( ( NOTEQUAL ) )
                    // InternalSQLParser.g:4166:3: ( NOTEQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }
                    // InternalSQLParser.g:4167:3: ( NOTEQUAL )
                    // InternalSQLParser.g:4167:4: NOTEQUAL
                    {
                    match(input,NOTEQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4171:2: ( ( LESS ) )
                    {
                    // InternalSQLParser.g:4171:2: ( ( LESS ) )
                    // InternalSQLParser.g:4172:3: ( LESS )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }
                    // InternalSQLParser.g:4173:3: ( LESS )
                    // InternalSQLParser.g:4173:4: LESS
                    {
                    match(input,LESS,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4177:2: ( ( LESS_1 ) )
                    {
                    // InternalSQLParser.g:4177:2: ( ( LESS_1 ) )
                    // InternalSQLParser.g:4178:3: ( LESS_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }
                    // InternalSQLParser.g:4179:3: ( LESS_1 )
                    // InternalSQLParser.g:4179:4: LESS_1
                    {
                    match(input,LESS_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:4183:2: ( ( GREATER_1 ) )
                    {
                    // InternalSQLParser.g:4183:2: ( ( GREATER_1 ) )
                    // InternalSQLParser.g:4184:3: ( GREATER_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }
                    // InternalSQLParser.g:4185:3: ( GREATER_1 )
                    // InternalSQLParser.g:4185:4: GREATER_1
                    {
                    match(input,GREATER_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:4189:2: ( ( GREATER ) )
                    {
                    // InternalSQLParser.g:4189:2: ( ( GREATER ) )
                    // InternalSQLParser.g:4190:3: ( GREATER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }
                    // InternalSQLParser.g:4191:3: ( GREATER )
                    // InternalSQLParser.g:4191:4: GREATER
                    {
                    match(input,GREATER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:4195:2: ( ( BETWEEN_1 ) )
                    {
                    // InternalSQLParser.g:4195:2: ( ( BETWEEN_1 ) )
                    // InternalSQLParser.g:4196:3: ( BETWEEN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }
                    // InternalSQLParser.g:4197:3: ( BETWEEN_1 )
                    // InternalSQLParser.g:4197:4: BETWEEN_1
                    {
                    match(input,BETWEEN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:4201:2: ( ( BETWEEN_4 ) )
                    {
                    // InternalSQLParser.g:4201:2: ( ( BETWEEN_4 ) )
                    // InternalSQLParser.g:4202:3: ( BETWEEN_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }
                    // InternalSQLParser.g:4203:3: ( BETWEEN_4 )
                    // InternalSQLParser.g:4203:4: BETWEEN_4
                    {
                    match(input,BETWEEN_4,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:4207:2: ( ( BETWEEN_3 ) )
                    {
                    // InternalSQLParser.g:4207:2: ( ( BETWEEN_3 ) )
                    // InternalSQLParser.g:4208:3: ( BETWEEN_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }
                    // InternalSQLParser.g:4209:3: ( BETWEEN_3 )
                    // InternalSQLParser.g:4209:4: BETWEEN_3
                    {
                    match(input,BETWEEN_3,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:4213:2: ( ( BETWEEN_2 ) )
                    {
                    // InternalSQLParser.g:4213:2: ( ( BETWEEN_2 ) )
                    // InternalSQLParser.g:4214:3: ( BETWEEN_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }
                    // InternalSQLParser.g:4215:3: ( BETWEEN_2 )
                    // InternalSQLParser.g:4215:4: BETWEEN_2
                    {
                    match(input,BETWEEN_2,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XFunction__Alternatives"


    // $ANTLR start "rule__EXTRACT_VALUES__Alternatives"
    // InternalSQLParser.g:4223:1: rule__EXTRACT_VALUES__Alternatives : ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) );
    public final void rule__EXTRACT_VALUES__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4227:1: ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) )
            int alt53=20;
            switch ( input.LA(1) ) {
            case MICROSECOND:
                {
                alt53=1;
                }
                break;
            case SECOND:
                {
                alt53=2;
                }
                break;
            case MINUTE:
                {
                alt53=3;
                }
                break;
            case HOUR:
                {
                alt53=4;
                }
                break;
            case DAY:
                {
                alt53=5;
                }
                break;
            case WEEK:
                {
                alt53=6;
                }
                break;
            case MONTH:
                {
                alt53=7;
                }
                break;
            case QUARTER:
                {
                alt53=8;
                }
                break;
            case YEAR:
                {
                alt53=9;
                }
                break;
            case SECOND_MICROSECOND:
                {
                alt53=10;
                }
                break;
            case MINUTE_MICROSECOND:
                {
                alt53=11;
                }
                break;
            case MINUTE_SECOND:
                {
                alt53=12;
                }
                break;
            case HOUR_MICROSECOND:
                {
                alt53=13;
                }
                break;
            case HOUR_SECOND:
                {
                alt53=14;
                }
                break;
            case HOUR_MINUTE:
                {
                alt53=15;
                }
                break;
            case DAY_MICROSECOND:
                {
                alt53=16;
                }
                break;
            case DAY_SECOND:
                {
                alt53=17;
                }
                break;
            case DAY_MINUTE:
                {
                alt53=18;
                }
                break;
            case DAY_HOUR:
                {
                alt53=19;
                }
                break;
            case YEAR_MONTH:
                {
                alt53=20;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalSQLParser.g:4228:2: ( ( MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4228:2: ( ( MICROSECOND ) )
                    // InternalSQLParser.g:4229:3: ( MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }
                    // InternalSQLParser.g:4230:3: ( MICROSECOND )
                    // InternalSQLParser.g:4230:4: MICROSECOND
                    {
                    match(input,MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4234:2: ( ( SECOND ) )
                    {
                    // InternalSQLParser.g:4234:2: ( ( SECOND ) )
                    // InternalSQLParser.g:4235:3: ( SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSQLParser.g:4236:3: ( SECOND )
                    // InternalSQLParser.g:4236:4: SECOND
                    {
                    match(input,SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4240:2: ( ( MINUTE ) )
                    {
                    // InternalSQLParser.g:4240:2: ( ( MINUTE ) )
                    // InternalSQLParser.g:4241:3: ( MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }
                    // InternalSQLParser.g:4242:3: ( MINUTE )
                    // InternalSQLParser.g:4242:4: MINUTE
                    {
                    match(input,MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4246:2: ( ( HOUR ) )
                    {
                    // InternalSQLParser.g:4246:2: ( ( HOUR ) )
                    // InternalSQLParser.g:4247:3: ( HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }
                    // InternalSQLParser.g:4248:3: ( HOUR )
                    // InternalSQLParser.g:4248:4: HOUR
                    {
                    match(input,HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4252:2: ( ( DAY ) )
                    {
                    // InternalSQLParser.g:4252:2: ( ( DAY ) )
                    // InternalSQLParser.g:4253:3: ( DAY )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }
                    // InternalSQLParser.g:4254:3: ( DAY )
                    // InternalSQLParser.g:4254:4: DAY
                    {
                    match(input,DAY,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4258:2: ( ( WEEK ) )
                    {
                    // InternalSQLParser.g:4258:2: ( ( WEEK ) )
                    // InternalSQLParser.g:4259:3: ( WEEK )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }
                    // InternalSQLParser.g:4260:3: ( WEEK )
                    // InternalSQLParser.g:4260:4: WEEK
                    {
                    match(input,WEEK,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:4264:2: ( ( MONTH ) )
                    {
                    // InternalSQLParser.g:4264:2: ( ( MONTH ) )
                    // InternalSQLParser.g:4265:3: ( MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }
                    // InternalSQLParser.g:4266:3: ( MONTH )
                    // InternalSQLParser.g:4266:4: MONTH
                    {
                    match(input,MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:4270:2: ( ( QUARTER ) )
                    {
                    // InternalSQLParser.g:4270:2: ( ( QUARTER ) )
                    // InternalSQLParser.g:4271:3: ( QUARTER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }
                    // InternalSQLParser.g:4272:3: ( QUARTER )
                    // InternalSQLParser.g:4272:4: QUARTER
                    {
                    match(input,QUARTER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:4276:2: ( ( YEAR ) )
                    {
                    // InternalSQLParser.g:4276:2: ( ( YEAR ) )
                    // InternalSQLParser.g:4277:3: ( YEAR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }
                    // InternalSQLParser.g:4278:3: ( YEAR )
                    // InternalSQLParser.g:4278:4: YEAR
                    {
                    match(input,YEAR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:4282:2: ( ( SECOND_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4282:2: ( ( SECOND_MICROSECOND ) )
                    // InternalSQLParser.g:4283:3: ( SECOND_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }
                    // InternalSQLParser.g:4284:3: ( SECOND_MICROSECOND )
                    // InternalSQLParser.g:4284:4: SECOND_MICROSECOND
                    {
                    match(input,SECOND_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:4288:2: ( ( MINUTE_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4288:2: ( ( MINUTE_MICROSECOND ) )
                    // InternalSQLParser.g:4289:3: ( MINUTE_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }
                    // InternalSQLParser.g:4290:3: ( MINUTE_MICROSECOND )
                    // InternalSQLParser.g:4290:4: MINUTE_MICROSECOND
                    {
                    match(input,MINUTE_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:4294:2: ( ( MINUTE_SECOND ) )
                    {
                    // InternalSQLParser.g:4294:2: ( ( MINUTE_SECOND ) )
                    // InternalSQLParser.g:4295:3: ( MINUTE_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }
                    // InternalSQLParser.g:4296:3: ( MINUTE_SECOND )
                    // InternalSQLParser.g:4296:4: MINUTE_SECOND
                    {
                    match(input,MINUTE_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSQLParser.g:4300:2: ( ( HOUR_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4300:2: ( ( HOUR_MICROSECOND ) )
                    // InternalSQLParser.g:4301:3: ( HOUR_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }
                    // InternalSQLParser.g:4302:3: ( HOUR_MICROSECOND )
                    // InternalSQLParser.g:4302:4: HOUR_MICROSECOND
                    {
                    match(input,HOUR_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSQLParser.g:4306:2: ( ( HOUR_SECOND ) )
                    {
                    // InternalSQLParser.g:4306:2: ( ( HOUR_SECOND ) )
                    // InternalSQLParser.g:4307:3: ( HOUR_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }
                    // InternalSQLParser.g:4308:3: ( HOUR_SECOND )
                    // InternalSQLParser.g:4308:4: HOUR_SECOND
                    {
                    match(input,HOUR_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSQLParser.g:4312:2: ( ( HOUR_MINUTE ) )
                    {
                    // InternalSQLParser.g:4312:2: ( ( HOUR_MINUTE ) )
                    // InternalSQLParser.g:4313:3: ( HOUR_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }
                    // InternalSQLParser.g:4314:3: ( HOUR_MINUTE )
                    // InternalSQLParser.g:4314:4: HOUR_MINUTE
                    {
                    match(input,HOUR_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalSQLParser.g:4318:2: ( ( DAY_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4318:2: ( ( DAY_MICROSECOND ) )
                    // InternalSQLParser.g:4319:3: ( DAY_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }
                    // InternalSQLParser.g:4320:3: ( DAY_MICROSECOND )
                    // InternalSQLParser.g:4320:4: DAY_MICROSECOND
                    {
                    match(input,DAY_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalSQLParser.g:4324:2: ( ( DAY_SECOND ) )
                    {
                    // InternalSQLParser.g:4324:2: ( ( DAY_SECOND ) )
                    // InternalSQLParser.g:4325:3: ( DAY_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }
                    // InternalSQLParser.g:4326:3: ( DAY_SECOND )
                    // InternalSQLParser.g:4326:4: DAY_SECOND
                    {
                    match(input,DAY_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalSQLParser.g:4330:2: ( ( DAY_MINUTE ) )
                    {
                    // InternalSQLParser.g:4330:2: ( ( DAY_MINUTE ) )
                    // InternalSQLParser.g:4331:3: ( DAY_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }
                    // InternalSQLParser.g:4332:3: ( DAY_MINUTE )
                    // InternalSQLParser.g:4332:4: DAY_MINUTE
                    {
                    match(input,DAY_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalSQLParser.g:4336:2: ( ( DAY_HOUR ) )
                    {
                    // InternalSQLParser.g:4336:2: ( ( DAY_HOUR ) )
                    // InternalSQLParser.g:4337:3: ( DAY_HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }
                    // InternalSQLParser.g:4338:3: ( DAY_HOUR )
                    // InternalSQLParser.g:4338:4: DAY_HOUR
                    {
                    match(input,DAY_HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalSQLParser.g:4342:2: ( ( YEAR_MONTH ) )
                    {
                    // InternalSQLParser.g:4342:2: ( ( YEAR_MONTH ) )
                    // InternalSQLParser.g:4343:3: ( YEAR_MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }
                    // InternalSQLParser.g:4344:3: ( YEAR_MONTH )
                    // InternalSQLParser.g:4344:4: YEAR_MONTH
                    {
                    match(input,YEAR_MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EXTRACT_VALUES__Alternatives"


    // $ANTLR start "rule__Model__Group__0"
    // InternalSQLParser.g:4352:1: rule__Model__Group__0 : rule__Model__Group__0__Impl rule__Model__Group__1 ;
    public final void rule__Model__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4356:1: ( rule__Model__Group__0__Impl rule__Model__Group__1 )
            // InternalSQLParser.g:4357:2: rule__Model__Group__0__Impl rule__Model__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Model__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Model__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0"


    // $ANTLR start "rule__Model__Group__0__Impl"
    // InternalSQLParser.g:4364:1: rule__Model__Group__0__Impl : ( ( RULE_JRNPARAM )? ) ;
    public final void rule__Model__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4368:1: ( ( ( RULE_JRNPARAM )? ) )
            // InternalSQLParser.g:4369:1: ( ( RULE_JRNPARAM )? )
            {
            // InternalSQLParser.g:4369:1: ( ( RULE_JRNPARAM )? )
            // InternalSQLParser.g:4370:2: ( RULE_JRNPARAM )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 
            }
            // InternalSQLParser.g:4371:2: ( RULE_JRNPARAM )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_JRNPARAM) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSQLParser.g:4371:3: RULE_JRNPARAM
                    {
                    match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0__Impl"


    // $ANTLR start "rule__Model__Group__1"
    // InternalSQLParser.g:4379:1: rule__Model__Group__1 : rule__Model__Group__1__Impl rule__Model__Group__2 ;
    public final void rule__Model__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4383:1: ( rule__Model__Group__1__Impl rule__Model__Group__2 )
            // InternalSQLParser.g:4384:2: rule__Model__Group__1__Impl rule__Model__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__Model__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Model__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1"


    // $ANTLR start "rule__Model__Group__1__Impl"
    // InternalSQLParser.g:4391:1: rule__Model__Group__1__Impl : ( ( rule__Model__WqAssignment_1 )? ) ;
    public final void rule__Model__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4395:1: ( ( ( rule__Model__WqAssignment_1 )? ) )
            // InternalSQLParser.g:4396:1: ( ( rule__Model__WqAssignment_1 )? )
            {
            // InternalSQLParser.g:4396:1: ( ( rule__Model__WqAssignment_1 )? )
            // InternalSQLParser.g:4397:2: ( rule__Model__WqAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getWqAssignment_1()); 
            }
            // InternalSQLParser.g:4398:2: ( rule__Model__WqAssignment_1 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==WITH) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSQLParser.g:4398:3: rule__Model__WqAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Model__WqAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getWqAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1__Impl"


    // $ANTLR start "rule__Model__Group__2"
    // InternalSQLParser.g:4406:1: rule__Model__Group__2 : rule__Model__Group__2__Impl ;
    public final void rule__Model__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4410:1: ( rule__Model__Group__2__Impl )
            // InternalSQLParser.g:4411:2: rule__Model__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__2"


    // $ANTLR start "rule__Model__Group__2__Impl"
    // InternalSQLParser.g:4417:1: rule__Model__Group__2__Impl : ( ( rule__Model__QueryAssignment_2 ) ) ;
    public final void rule__Model__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4421:1: ( ( ( rule__Model__QueryAssignment_2 ) ) )
            // InternalSQLParser.g:4422:1: ( ( rule__Model__QueryAssignment_2 ) )
            {
            // InternalSQLParser.g:4422:1: ( ( rule__Model__QueryAssignment_2 ) )
            // InternalSQLParser.g:4423:2: ( rule__Model__QueryAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getQueryAssignment_2()); 
            }
            // InternalSQLParser.g:4424:2: ( rule__Model__QueryAssignment_2 )
            // InternalSQLParser.g:4424:3: rule__Model__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Model__QueryAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getQueryAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__2__Impl"


    // $ANTLR start "rule__WithQuery__Group__0"
    // InternalSQLParser.g:4433:1: rule__WithQuery__Group__0 : rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 ;
    public final void rule__WithQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4437:1: ( rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 )
            // InternalSQLParser.g:4438:2: rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__WithQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0"


    // $ANTLR start "rule__WithQuery__Group__0__Impl"
    // InternalSQLParser.g:4445:1: rule__WithQuery__Group__0__Impl : ( ( rule__WithQuery__WAssignment_0 ) ) ;
    public final void rule__WithQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4449:1: ( ( ( rule__WithQuery__WAssignment_0 ) ) )
            // InternalSQLParser.g:4450:1: ( ( rule__WithQuery__WAssignment_0 ) )
            {
            // InternalSQLParser.g:4450:1: ( ( rule__WithQuery__WAssignment_0 ) )
            // InternalSQLParser.g:4451:2: ( rule__WithQuery__WAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }
            // InternalSQLParser.g:4452:2: ( rule__WithQuery__WAssignment_0 )
            // InternalSQLParser.g:4452:3: rule__WithQuery__WAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0__Impl"


    // $ANTLR start "rule__WithQuery__Group__1"
    // InternalSQLParser.g:4460:1: rule__WithQuery__Group__1 : rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 ;
    public final void rule__WithQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4464:1: ( rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 )
            // InternalSQLParser.g:4465:2: rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__WithQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1"


    // $ANTLR start "rule__WithQuery__Group__1__Impl"
    // InternalSQLParser.g:4472:1: rule__WithQuery__Group__1__Impl : ( ( rule__WithQuery__WnameAssignment_1 ) ) ;
    public final void rule__WithQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4476:1: ( ( ( rule__WithQuery__WnameAssignment_1 ) ) )
            // InternalSQLParser.g:4477:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            {
            // InternalSQLParser.g:4477:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            // InternalSQLParser.g:4478:2: ( rule__WithQuery__WnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }
            // InternalSQLParser.g:4479:2: ( rule__WithQuery__WnameAssignment_1 )
            // InternalSQLParser.g:4479:3: rule__WithQuery__WnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1__Impl"


    // $ANTLR start "rule__WithQuery__Group__2"
    // InternalSQLParser.g:4487:1: rule__WithQuery__Group__2 : rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 ;
    public final void rule__WithQuery__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4491:1: ( rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 )
            // InternalSQLParser.g:4492:2: rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__WithQuery__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2"


    // $ANTLR start "rule__WithQuery__Group__2__Impl"
    // InternalSQLParser.g:4499:1: rule__WithQuery__Group__2__Impl : ( ( rule__WithQuery__WithColsAssignment_2 )? ) ;
    public final void rule__WithQuery__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4503:1: ( ( ( rule__WithQuery__WithColsAssignment_2 )? ) )
            // InternalSQLParser.g:4504:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            {
            // InternalSQLParser.g:4504:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            // InternalSQLParser.g:4505:2: ( rule__WithQuery__WithColsAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }
            // InternalSQLParser.g:4506:2: ( rule__WithQuery__WithColsAssignment_2 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==LeftParenthesis) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSQLParser.g:4506:3: rule__WithQuery__WithColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__WithColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2__Impl"


    // $ANTLR start "rule__WithQuery__Group__3"
    // InternalSQLParser.g:4514:1: rule__WithQuery__Group__3 : rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 ;
    public final void rule__WithQuery__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4518:1: ( rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 )
            // InternalSQLParser.g:4519:2: rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__WithQuery__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3"


    // $ANTLR start "rule__WithQuery__Group__3__Impl"
    // InternalSQLParser.g:4526:1: rule__WithQuery__Group__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4530:1: ( ( AS ) )
            // InternalSQLParser.g:4531:1: ( AS )
            {
            // InternalSQLParser.g:4531:1: ( AS )
            // InternalSQLParser.g:4532:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3__Impl"


    // $ANTLR start "rule__WithQuery__Group__4"
    // InternalSQLParser.g:4541:1: rule__WithQuery__Group__4 : rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 ;
    public final void rule__WithQuery__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4545:1: ( rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 )
            // InternalSQLParser.g:4546:2: rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5
            {
            pushFollow(FOLLOW_3);
            rule__WithQuery__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4"


    // $ANTLR start "rule__WithQuery__Group__4__Impl"
    // InternalSQLParser.g:4553:1: rule__WithQuery__Group__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4557:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:4558:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:4558:1: ( LeftParenthesis )
            // InternalSQLParser.g:4559:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4__Impl"


    // $ANTLR start "rule__WithQuery__Group__5"
    // InternalSQLParser.g:4568:1: rule__WithQuery__Group__5 : rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 ;
    public final void rule__WithQuery__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4572:1: ( rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 )
            // InternalSQLParser.g:4573:2: rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6
            {
            pushFollow(FOLLOW_7);
            rule__WithQuery__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5"


    // $ANTLR start "rule__WithQuery__Group__5__Impl"
    // InternalSQLParser.g:4580:1: rule__WithQuery__Group__5__Impl : ( ( rule__WithQuery__QueryAssignment_5 ) ) ;
    public final void rule__WithQuery__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4584:1: ( ( ( rule__WithQuery__QueryAssignment_5 ) ) )
            // InternalSQLParser.g:4585:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            {
            // InternalSQLParser.g:4585:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            // InternalSQLParser.g:4586:2: ( rule__WithQuery__QueryAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }
            // InternalSQLParser.g:4587:2: ( rule__WithQuery__QueryAssignment_5 )
            // InternalSQLParser.g:4587:3: rule__WithQuery__QueryAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__QueryAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5__Impl"


    // $ANTLR start "rule__WithQuery__Group__6"
    // InternalSQLParser.g:4595:1: rule__WithQuery__Group__6 : rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 ;
    public final void rule__WithQuery__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4599:1: ( rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 )
            // InternalSQLParser.g:4600:2: rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7
            {
            pushFollow(FOLLOW_8);
            rule__WithQuery__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6"


    // $ANTLR start "rule__WithQuery__Group__6__Impl"
    // InternalSQLParser.g:4607:1: rule__WithQuery__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4611:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:4612:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:4612:1: ( RightParenthesis )
            // InternalSQLParser.g:4613:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6__Impl"


    // $ANTLR start "rule__WithQuery__Group__7"
    // InternalSQLParser.g:4622:1: rule__WithQuery__Group__7 : rule__WithQuery__Group__7__Impl ;
    public final void rule__WithQuery__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4626:1: ( rule__WithQuery__Group__7__Impl )
            // InternalSQLParser.g:4627:2: rule__WithQuery__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7"


    // $ANTLR start "rule__WithQuery__Group__7__Impl"
    // InternalSQLParser.g:4633:1: rule__WithQuery__Group__7__Impl : ( ( rule__WithQuery__Group_7__0 )* ) ;
    public final void rule__WithQuery__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4637:1: ( ( ( rule__WithQuery__Group_7__0 )* ) )
            // InternalSQLParser.g:4638:1: ( ( rule__WithQuery__Group_7__0 )* )
            {
            // InternalSQLParser.g:4638:1: ( ( rule__WithQuery__Group_7__0 )* )
            // InternalSQLParser.g:4639:2: ( rule__WithQuery__Group_7__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }
            // InternalSQLParser.g:4640:2: ( rule__WithQuery__Group_7__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==Comma) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSQLParser.g:4640:3: rule__WithQuery__Group_7__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__WithQuery__Group_7__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__0"
    // InternalSQLParser.g:4649:1: rule__WithQuery__Group_7__0 : rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 ;
    public final void rule__WithQuery__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4653:1: ( rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 )
            // InternalSQLParser.g:4654:2: rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1
            {
            pushFollow(FOLLOW_4);
            rule__WithQuery__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0"


    // $ANTLR start "rule__WithQuery__Group_7__0__Impl"
    // InternalSQLParser.g:4661:1: rule__WithQuery__Group_7__0__Impl : ( Comma ) ;
    public final void rule__WithQuery__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4665:1: ( ( Comma ) )
            // InternalSQLParser.g:4666:1: ( Comma )
            {
            // InternalSQLParser.g:4666:1: ( Comma )
            // InternalSQLParser.g:4667:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__1"
    // InternalSQLParser.g:4676:1: rule__WithQuery__Group_7__1 : rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 ;
    public final void rule__WithQuery__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4680:1: ( rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 )
            // InternalSQLParser.g:4681:2: rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2
            {
            pushFollow(FOLLOW_5);
            rule__WithQuery__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1"


    // $ANTLR start "rule__WithQuery__Group_7__1__Impl"
    // InternalSQLParser.g:4688:1: rule__WithQuery__Group_7__1__Impl : ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) ;
    public final void rule__WithQuery__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4692:1: ( ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) )
            // InternalSQLParser.g:4693:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            {
            // InternalSQLParser.g:4693:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            // InternalSQLParser.g:4694:2: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }
            // InternalSQLParser.g:4695:2: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            // InternalSQLParser.g:4695:3: rule__WithQuery__AdditionalWnameAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalWnameAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__2"
    // InternalSQLParser.g:4703:1: rule__WithQuery__Group_7__2 : rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 ;
    public final void rule__WithQuery__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4707:1: ( rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 )
            // InternalSQLParser.g:4708:2: rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3
            {
            pushFollow(FOLLOW_5);
            rule__WithQuery__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2"


    // $ANTLR start "rule__WithQuery__Group_7__2__Impl"
    // InternalSQLParser.g:4715:1: rule__WithQuery__Group_7__2__Impl : ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) ;
    public final void rule__WithQuery__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4719:1: ( ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) )
            // InternalSQLParser.g:4720:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            {
            // InternalSQLParser.g:4720:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            // InternalSQLParser.g:4721:2: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }
            // InternalSQLParser.g:4722:2: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==LeftParenthesis) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSQLParser.g:4722:3: rule__WithQuery__AdditionalWithColsAssignment_7_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__AdditionalWithColsAssignment_7_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__3"
    // InternalSQLParser.g:4730:1: rule__WithQuery__Group_7__3 : rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 ;
    public final void rule__WithQuery__Group_7__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4734:1: ( rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 )
            // InternalSQLParser.g:4735:2: rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4
            {
            pushFollow(FOLLOW_6);
            rule__WithQuery__Group_7__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3"


    // $ANTLR start "rule__WithQuery__Group_7__3__Impl"
    // InternalSQLParser.g:4742:1: rule__WithQuery__Group_7__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group_7__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4746:1: ( ( AS ) )
            // InternalSQLParser.g:4747:1: ( AS )
            {
            // InternalSQLParser.g:4747:1: ( AS )
            // InternalSQLParser.g:4748:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__4"
    // InternalSQLParser.g:4757:1: rule__WithQuery__Group_7__4 : rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 ;
    public final void rule__WithQuery__Group_7__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4761:1: ( rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 )
            // InternalSQLParser.g:4762:2: rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5
            {
            pushFollow(FOLLOW_3);
            rule__WithQuery__Group_7__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4"


    // $ANTLR start "rule__WithQuery__Group_7__4__Impl"
    // InternalSQLParser.g:4769:1: rule__WithQuery__Group_7__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group_7__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4773:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:4774:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:4774:1: ( LeftParenthesis )
            // InternalSQLParser.g:4775:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__5"
    // InternalSQLParser.g:4784:1: rule__WithQuery__Group_7__5 : rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 ;
    public final void rule__WithQuery__Group_7__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4788:1: ( rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 )
            // InternalSQLParser.g:4789:2: rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6
            {
            pushFollow(FOLLOW_7);
            rule__WithQuery__Group_7__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5"


    // $ANTLR start "rule__WithQuery__Group_7__5__Impl"
    // InternalSQLParser.g:4796:1: rule__WithQuery__Group_7__5__Impl : ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) ;
    public final void rule__WithQuery__Group_7__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4800:1: ( ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) )
            // InternalSQLParser.g:4801:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            {
            // InternalSQLParser.g:4801:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            // InternalSQLParser.g:4802:2: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }
            // InternalSQLParser.g:4803:2: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            // InternalSQLParser.g:4803:3: rule__WithQuery__AdditionalQueriesAssignment_7_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalQueriesAssignment_7_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__6"
    // InternalSQLParser.g:4811:1: rule__WithQuery__Group_7__6 : rule__WithQuery__Group_7__6__Impl ;
    public final void rule__WithQuery__Group_7__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4815:1: ( rule__WithQuery__Group_7__6__Impl )
            // InternalSQLParser.g:4816:2: rule__WithQuery__Group_7__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6"


    // $ANTLR start "rule__WithQuery__Group_7__6__Impl"
    // InternalSQLParser.g:4822:1: rule__WithQuery__Group_7__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group_7__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4826:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:4827:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:4827:1: ( RightParenthesis )
            // InternalSQLParser.g:4828:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6__Impl"


    // $ANTLR start "rule__WithColumns__Group__0"
    // InternalSQLParser.g:4838:1: rule__WithColumns__Group__0 : rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 ;
    public final void rule__WithColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4842:1: ( rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 )
            // InternalSQLParser.g:4843:2: rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__WithColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0"


    // $ANTLR start "rule__WithColumns__Group__0__Impl"
    // InternalSQLParser.g:4850:1: rule__WithColumns__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__WithColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4854:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:4855:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:4855:1: ( LeftParenthesis )
            // InternalSQLParser.g:4856:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0__Impl"


    // $ANTLR start "rule__WithColumns__Group__1"
    // InternalSQLParser.g:4865:1: rule__WithColumns__Group__1 : rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 ;
    public final void rule__WithColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4869:1: ( rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 )
            // InternalSQLParser.g:4870:2: rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__WithColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1"


    // $ANTLR start "rule__WithColumns__Group__1__Impl"
    // InternalSQLParser.g:4877:1: rule__WithColumns__Group__1__Impl : ( ruleUsingCols ) ;
    public final void rule__WithColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4881:1: ( ( ruleUsingCols ) )
            // InternalSQLParser.g:4882:1: ( ruleUsingCols )
            {
            // InternalSQLParser.g:4882:1: ( ruleUsingCols )
            // InternalSQLParser.g:4883:2: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1__Impl"


    // $ANTLR start "rule__WithColumns__Group__2"
    // InternalSQLParser.g:4892:1: rule__WithColumns__Group__2 : rule__WithColumns__Group__2__Impl ;
    public final void rule__WithColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4896:1: ( rule__WithColumns__Group__2__Impl )
            // InternalSQLParser.g:4897:2: rule__WithColumns__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2"


    // $ANTLR start "rule__WithColumns__Group__2__Impl"
    // InternalSQLParser.g:4903:1: rule__WithColumns__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__WithColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4907:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:4908:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:4908:1: ( RightParenthesis )
            // InternalSQLParser.g:4909:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2__Impl"


    // $ANTLR start "rule__FetchFirst__Group__0"
    // InternalSQLParser.g:4919:1: rule__FetchFirst__Group__0 : rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 ;
    public final void rule__FetchFirst__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4923:1: ( rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 )
            // InternalSQLParser.g:4924:2: rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__FetchFirst__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0"


    // $ANTLR start "rule__FetchFirst__Group__0__Impl"
    // InternalSQLParser.g:4931:1: rule__FetchFirst__Group__0__Impl : ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) ;
    public final void rule__FetchFirst__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4935:1: ( ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) )
            // InternalSQLParser.g:4936:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            {
            // InternalSQLParser.g:4936:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            // InternalSQLParser.g:4937:2: ( rule__FetchFirst__FetchFirstAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }
            // InternalSQLParser.g:4938:2: ( rule__FetchFirst__FetchFirstAssignment_0 )
            // InternalSQLParser.g:4938:3: rule__FetchFirst__FetchFirstAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__FetchFirstAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0__Impl"


    // $ANTLR start "rule__FetchFirst__Group__1"
    // InternalSQLParser.g:4946:1: rule__FetchFirst__Group__1 : rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 ;
    public final void rule__FetchFirst__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4950:1: ( rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 )
            // InternalSQLParser.g:4951:2: rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__FetchFirst__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1"


    // $ANTLR start "rule__FetchFirst__Group__1__Impl"
    // InternalSQLParser.g:4958:1: rule__FetchFirst__Group__1__Impl : ( ( rule__FetchFirst__RowAssignment_1 ) ) ;
    public final void rule__FetchFirst__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4962:1: ( ( ( rule__FetchFirst__RowAssignment_1 ) ) )
            // InternalSQLParser.g:4963:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            {
            // InternalSQLParser.g:4963:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            // InternalSQLParser.g:4964:2: ( rule__FetchFirst__RowAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }
            // InternalSQLParser.g:4965:2: ( rule__FetchFirst__RowAssignment_1 )
            // InternalSQLParser.g:4965:3: rule__FetchFirst__RowAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1__Impl"


    // $ANTLR start "rule__FetchFirst__Group__2"
    // InternalSQLParser.g:4973:1: rule__FetchFirst__Group__2 : rule__FetchFirst__Group__2__Impl ;
    public final void rule__FetchFirst__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4977:1: ( rule__FetchFirst__Group__2__Impl )
            // InternalSQLParser.g:4978:2: rule__FetchFirst__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2"


    // $ANTLR start "rule__FetchFirst__Group__2__Impl"
    // InternalSQLParser.g:4984:1: rule__FetchFirst__Group__2__Impl : ( ONLY ) ;
    public final void rule__FetchFirst__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4988:1: ( ( ONLY ) )
            // InternalSQLParser.g:4989:1: ( ONLY )
            {
            // InternalSQLParser.g:4989:1: ( ONLY )
            // InternalSQLParser.g:4990:2: ONLY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }
            match(input,ONLY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2__Impl"


    // $ANTLR start "rule__Limit__Group_0__0"
    // InternalSQLParser.g:5000:1: rule__Limit__Group_0__0 : rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 ;
    public final void rule__Limit__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5004:1: ( rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 )
            // InternalSQLParser.g:5005:2: rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Limit__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0"


    // $ANTLR start "rule__Limit__Group_0__0__Impl"
    // InternalSQLParser.g:5012:1: rule__Limit__Group_0__0__Impl : ( () ) ;
    public final void rule__Limit__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5016:1: ( ( () ) )
            // InternalSQLParser.g:5017:1: ( () )
            {
            // InternalSQLParser.g:5017:1: ( () )
            // InternalSQLParser.g:5018:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }
            // InternalSQLParser.g:5019:2: ()
            // InternalSQLParser.g:5019:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0__Impl"


    // $ANTLR start "rule__Limit__Group_0__1"
    // InternalSQLParser.g:5027:1: rule__Limit__Group_0__1 : rule__Limit__Group_0__1__Impl ;
    public final void rule__Limit__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5031:1: ( rule__Limit__Group_0__1__Impl )
            // InternalSQLParser.g:5032:2: rule__Limit__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1"


    // $ANTLR start "rule__Limit__Group_0__1__Impl"
    // InternalSQLParser.g:5038:1: rule__Limit__Group_0__1__Impl : ( ALL ) ;
    public final void rule__Limit__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5042:1: ( ( ALL ) )
            // InternalSQLParser.g:5043:1: ( ALL )
            {
            // InternalSQLParser.g:5043:1: ( ALL )
            // InternalSQLParser.g:5044:2: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1__Impl"


    // $ANTLR start "rule__Limit__Group_1__0"
    // InternalSQLParser.g:5054:1: rule__Limit__Group_1__0 : rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 ;
    public final void rule__Limit__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5058:1: ( rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 )
            // InternalSQLParser.g:5059:2: rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Limit__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0"


    // $ANTLR start "rule__Limit__Group_1__0__Impl"
    // InternalSQLParser.g:5066:1: rule__Limit__Group_1__0__Impl : ( ( rule__Limit__L1Assignment_1_0 ) ) ;
    public final void rule__Limit__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5070:1: ( ( ( rule__Limit__L1Assignment_1_0 ) ) )
            // InternalSQLParser.g:5071:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            {
            // InternalSQLParser.g:5071:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            // InternalSQLParser.g:5072:2: ( rule__Limit__L1Assignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }
            // InternalSQLParser.g:5073:2: ( rule__Limit__L1Assignment_1_0 )
            // InternalSQLParser.g:5073:3: rule__Limit__L1Assignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L1Assignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1__1"
    // InternalSQLParser.g:5081:1: rule__Limit__Group_1__1 : rule__Limit__Group_1__1__Impl ;
    public final void rule__Limit__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5085:1: ( rule__Limit__Group_1__1__Impl )
            // InternalSQLParser.g:5086:2: rule__Limit__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1"


    // $ANTLR start "rule__Limit__Group_1__1__Impl"
    // InternalSQLParser.g:5092:1: rule__Limit__Group_1__1__Impl : ( ( rule__Limit__Group_1_1__0 )? ) ;
    public final void rule__Limit__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5096:1: ( ( ( rule__Limit__Group_1_1__0 )? ) )
            // InternalSQLParser.g:5097:1: ( ( rule__Limit__Group_1_1__0 )? )
            {
            // InternalSQLParser.g:5097:1: ( ( rule__Limit__Group_1_1__0 )? )
            // InternalSQLParser.g:5098:2: ( rule__Limit__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:5099:2: ( rule__Limit__Group_1_1__0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==Comma) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalSQLParser.g:5099:3: rule__Limit__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__0"
    // InternalSQLParser.g:5108:1: rule__Limit__Group_1_1__0 : rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 ;
    public final void rule__Limit__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5112:1: ( rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 )
            // InternalSQLParser.g:5113:2: rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Limit__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0"


    // $ANTLR start "rule__Limit__Group_1_1__0__Impl"
    // InternalSQLParser.g:5120:1: rule__Limit__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Limit__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5124:1: ( ( Comma ) )
            // InternalSQLParser.g:5125:1: ( Comma )
            {
            // InternalSQLParser.g:5125:1: ( Comma )
            // InternalSQLParser.g:5126:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__1"
    // InternalSQLParser.g:5135:1: rule__Limit__Group_1_1__1 : rule__Limit__Group_1_1__1__Impl ;
    public final void rule__Limit__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5139:1: ( rule__Limit__Group_1_1__1__Impl )
            // InternalSQLParser.g:5140:2: rule__Limit__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1"


    // $ANTLR start "rule__Limit__Group_1_1__1__Impl"
    // InternalSQLParser.g:5146:1: rule__Limit__Group_1_1__1__Impl : ( ( rule__Limit__L2Assignment_1_1_1 ) ) ;
    public final void rule__Limit__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5150:1: ( ( ( rule__Limit__L2Assignment_1_1_1 ) ) )
            // InternalSQLParser.g:5151:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            {
            // InternalSQLParser.g:5151:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            // InternalSQLParser.g:5152:2: ( rule__Limit__L2Assignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }
            // InternalSQLParser.g:5153:2: ( rule__Limit__L2Assignment_1_1_1 )
            // InternalSQLParser.g:5153:3: rule__Limit__L2Assignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L2Assignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1__Impl"


    // $ANTLR start "rule__SelectQuery__Group__0"
    // InternalSQLParser.g:5162:1: rule__SelectQuery__Group__0 : rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 ;
    public final void rule__SelectQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5166:1: ( rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 )
            // InternalSQLParser.g:5167:2: rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__SelectQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0"


    // $ANTLR start "rule__SelectQuery__Group__0__Impl"
    // InternalSQLParser.g:5174:1: rule__SelectQuery__Group__0__Impl : ( ruleSelect ) ;
    public final void rule__SelectQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5178:1: ( ( ruleSelect ) )
            // InternalSQLParser.g:5179:1: ( ruleSelect )
            {
            // InternalSQLParser.g:5179:1: ( ruleSelect )
            // InternalSQLParser.g:5180:2: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0__Impl"


    // $ANTLR start "rule__SelectQuery__Group__1"
    // InternalSQLParser.g:5189:1: rule__SelectQuery__Group__1 : rule__SelectQuery__Group__1__Impl ;
    public final void rule__SelectQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5193:1: ( rule__SelectQuery__Group__1__Impl )
            // InternalSQLParser.g:5194:2: rule__SelectQuery__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1"


    // $ANTLR start "rule__SelectQuery__Group__1__Impl"
    // InternalSQLParser.g:5200:1: rule__SelectQuery__Group__1__Impl : ( ( rule__SelectQuery__OpAssignment_1 )* ) ;
    public final void rule__SelectQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5204:1: ( ( ( rule__SelectQuery__OpAssignment_1 )* ) )
            // InternalSQLParser.g:5205:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            {
            // InternalSQLParser.g:5205:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            // InternalSQLParser.g:5206:2: ( rule__SelectQuery__OpAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:5207:2: ( rule__SelectQuery__OpAssignment_1 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==INTERSECT||LA60_0==EXCEPT||LA60_0==MINUS||LA60_0==UNION) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSQLParser.g:5207:3: rule__SelectQuery__OpAssignment_1
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__SelectQuery__OpAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__0"
    // InternalSQLParser.g:5216:1: rule__SelectSubSet__Group__0 : rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 ;
    public final void rule__SelectSubSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5220:1: ( rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 )
            // InternalSQLParser.g:5221:2: rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__SelectSubSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0"


    // $ANTLR start "rule__SelectSubSet__Group__0__Impl"
    // InternalSQLParser.g:5228:1: rule__SelectSubSet__Group__0__Impl : ( ( rule__SelectSubSet__OpAssignment_0 ) ) ;
    public final void rule__SelectSubSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5232:1: ( ( ( rule__SelectSubSet__OpAssignment_0 ) ) )
            // InternalSQLParser.g:5233:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            {
            // InternalSQLParser.g:5233:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            // InternalSQLParser.g:5234:2: ( rule__SelectSubSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }
            // InternalSQLParser.g:5235:2: ( rule__SelectSubSet__OpAssignment_0 )
            // InternalSQLParser.g:5235:3: rule__SelectSubSet__OpAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__1"
    // InternalSQLParser.g:5243:1: rule__SelectSubSet__Group__1 : rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 ;
    public final void rule__SelectSubSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5247:1: ( rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 )
            // InternalSQLParser.g:5248:2: rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__SelectSubSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1"


    // $ANTLR start "rule__SelectSubSet__Group__1__Impl"
    // InternalSQLParser.g:5255:1: rule__SelectSubSet__Group__1__Impl : ( ( rule__SelectSubSet__AllAssignment_1 )? ) ;
    public final void rule__SelectSubSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5259:1: ( ( ( rule__SelectSubSet__AllAssignment_1 )? ) )
            // InternalSQLParser.g:5260:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            {
            // InternalSQLParser.g:5260:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            // InternalSQLParser.g:5261:2: ( rule__SelectSubSet__AllAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }
            // InternalSQLParser.g:5262:2: ( rule__SelectSubSet__AllAssignment_1 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==ALL) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSQLParser.g:5262:3: rule__SelectSubSet__AllAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SelectSubSet__AllAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__2"
    // InternalSQLParser.g:5270:1: rule__SelectSubSet__Group__2 : rule__SelectSubSet__Group__2__Impl ;
    public final void rule__SelectSubSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5274:1: ( rule__SelectSubSet__Group__2__Impl )
            // InternalSQLParser.g:5275:2: rule__SelectSubSet__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2"


    // $ANTLR start "rule__SelectSubSet__Group__2__Impl"
    // InternalSQLParser.g:5281:1: rule__SelectSubSet__Group__2__Impl : ( ( rule__SelectSubSet__QueryAssignment_2 ) ) ;
    public final void rule__SelectSubSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5285:1: ( ( ( rule__SelectSubSet__QueryAssignment_2 ) ) )
            // InternalSQLParser.g:5286:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            {
            // InternalSQLParser.g:5286:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            // InternalSQLParser.g:5287:2: ( rule__SelectSubSet__QueryAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }
            // InternalSQLParser.g:5288:2: ( rule__SelectSubSet__QueryAssignment_2 )
            // InternalSQLParser.g:5288:3: rule__SelectSubSet__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__QueryAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__0"
    // InternalSQLParser.g:5297:1: rule__Select__Group__0 : rule__Select__Group__0__Impl rule__Select__Group__1 ;
    public final void rule__Select__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5301:1: ( rule__Select__Group__0__Impl rule__Select__Group__1 )
            // InternalSQLParser.g:5302:2: rule__Select__Group__0__Impl rule__Select__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0"


    // $ANTLR start "rule__Select__Group__0__Impl"
    // InternalSQLParser.g:5309:1: rule__Select__Group__0__Impl : ( ( rule__Select__SelectAssignment_0 ) ) ;
    public final void rule__Select__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5313:1: ( ( ( rule__Select__SelectAssignment_0 ) ) )
            // InternalSQLParser.g:5314:1: ( ( rule__Select__SelectAssignment_0 ) )
            {
            // InternalSQLParser.g:5314:1: ( ( rule__Select__SelectAssignment_0 ) )
            // InternalSQLParser.g:5315:2: ( rule__Select__SelectAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }
            // InternalSQLParser.g:5316:2: ( rule__Select__SelectAssignment_0 )
            // InternalSQLParser.g:5316:3: rule__Select__SelectAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Select__SelectAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0__Impl"


    // $ANTLR start "rule__Select__Group__1"
    // InternalSQLParser.g:5324:1: rule__Select__Group__1 : rule__Select__Group__1__Impl rule__Select__Group__2 ;
    public final void rule__Select__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5328:1: ( rule__Select__Group__1__Impl rule__Select__Group__2 )
            // InternalSQLParser.g:5329:2: rule__Select__Group__1__Impl rule__Select__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1"


    // $ANTLR start "rule__Select__Group__1__Impl"
    // InternalSQLParser.g:5336:1: rule__Select__Group__1__Impl : ( ( DISTINCT )? ) ;
    public final void rule__Select__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5340:1: ( ( ( DISTINCT )? ) )
            // InternalSQLParser.g:5341:1: ( ( DISTINCT )? )
            {
            // InternalSQLParser.g:5341:1: ( ( DISTINCT )? )
            // InternalSQLParser.g:5342:2: ( DISTINCT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }
            // InternalSQLParser.g:5343:2: ( DISTINCT )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==DISTINCT) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSQLParser.g:5343:3: DISTINCT
                    {
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1__Impl"


    // $ANTLR start "rule__Select__Group__2"
    // InternalSQLParser.g:5351:1: rule__Select__Group__2 : rule__Select__Group__2__Impl rule__Select__Group__3 ;
    public final void rule__Select__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5355:1: ( rule__Select__Group__2__Impl rule__Select__Group__3 )
            // InternalSQLParser.g:5356:2: rule__Select__Group__2__Impl rule__Select__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2"


    // $ANTLR start "rule__Select__Group__2__Impl"
    // InternalSQLParser.g:5363:1: rule__Select__Group__2__Impl : ( ( rule__Select__Group_2__0 )? ) ;
    public final void rule__Select__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5367:1: ( ( ( rule__Select__Group_2__0 )? ) )
            // InternalSQLParser.g:5368:1: ( ( rule__Select__Group_2__0 )? )
            {
            // InternalSQLParser.g:5368:1: ( ( rule__Select__Group_2__0 )? )
            // InternalSQLParser.g:5369:2: ( rule__Select__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:5370:2: ( rule__Select__Group_2__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==TOP) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSQLParser.g:5370:3: rule__Select__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__3"
    // InternalSQLParser.g:5378:1: rule__Select__Group__3 : rule__Select__Group__3__Impl rule__Select__Group__4 ;
    public final void rule__Select__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5382:1: ( rule__Select__Group__3__Impl rule__Select__Group__4 )
            // InternalSQLParser.g:5383:2: rule__Select__Group__3__Impl rule__Select__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__Select__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3"


    // $ANTLR start "rule__Select__Group__3__Impl"
    // InternalSQLParser.g:5390:1: rule__Select__Group__3__Impl : ( ( rule__Select__ColsAssignment_3 ) ) ;
    public final void rule__Select__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5394:1: ( ( ( rule__Select__ColsAssignment_3 ) ) )
            // InternalSQLParser.g:5395:1: ( ( rule__Select__ColsAssignment_3 ) )
            {
            // InternalSQLParser.g:5395:1: ( ( rule__Select__ColsAssignment_3 ) )
            // InternalSQLParser.g:5396:2: ( rule__Select__ColsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }
            // InternalSQLParser.g:5397:2: ( rule__Select__ColsAssignment_3 )
            // InternalSQLParser.g:5397:3: rule__Select__ColsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Select__ColsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3__Impl"


    // $ANTLR start "rule__Select__Group__4"
    // InternalSQLParser.g:5405:1: rule__Select__Group__4 : rule__Select__Group__4__Impl rule__Select__Group__5 ;
    public final void rule__Select__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5409:1: ( rule__Select__Group__4__Impl rule__Select__Group__5 )
            // InternalSQLParser.g:5410:2: rule__Select__Group__4__Impl rule__Select__Group__5
            {
            pushFollow(FOLLOW_19);
            rule__Select__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4"


    // $ANTLR start "rule__Select__Group__4__Impl"
    // InternalSQLParser.g:5417:1: rule__Select__Group__4__Impl : ( FROM ) ;
    public final void rule__Select__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5421:1: ( ( FROM ) )
            // InternalSQLParser.g:5422:1: ( FROM )
            {
            // InternalSQLParser.g:5422:1: ( FROM )
            // InternalSQLParser.g:5423:2: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4__Impl"


    // $ANTLR start "rule__Select__Group__5"
    // InternalSQLParser.g:5432:1: rule__Select__Group__5 : rule__Select__Group__5__Impl rule__Select__Group__6 ;
    public final void rule__Select__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5436:1: ( rule__Select__Group__5__Impl rule__Select__Group__6 )
            // InternalSQLParser.g:5437:2: rule__Select__Group__5__Impl rule__Select__Group__6
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5"


    // $ANTLR start "rule__Select__Group__5__Impl"
    // InternalSQLParser.g:5444:1: rule__Select__Group__5__Impl : ( ( rule__Select__TblAssignment_5 ) ) ;
    public final void rule__Select__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5448:1: ( ( ( rule__Select__TblAssignment_5 ) ) )
            // InternalSQLParser.g:5449:1: ( ( rule__Select__TblAssignment_5 ) )
            {
            // InternalSQLParser.g:5449:1: ( ( rule__Select__TblAssignment_5 ) )
            // InternalSQLParser.g:5450:2: ( rule__Select__TblAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }
            // InternalSQLParser.g:5451:2: ( rule__Select__TblAssignment_5 )
            // InternalSQLParser.g:5451:3: rule__Select__TblAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Select__TblAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5__Impl"


    // $ANTLR start "rule__Select__Group__6"
    // InternalSQLParser.g:5459:1: rule__Select__Group__6 : rule__Select__Group__6__Impl rule__Select__Group__7 ;
    public final void rule__Select__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5463:1: ( rule__Select__Group__6__Impl rule__Select__Group__7 )
            // InternalSQLParser.g:5464:2: rule__Select__Group__6__Impl rule__Select__Group__7
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6"


    // $ANTLR start "rule__Select__Group__6__Impl"
    // InternalSQLParser.g:5471:1: rule__Select__Group__6__Impl : ( ( rule__Select__Group_6__0 )? ) ;
    public final void rule__Select__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5475:1: ( ( ( rule__Select__Group_6__0 )? ) )
            // InternalSQLParser.g:5476:1: ( ( rule__Select__Group_6__0 )? )
            {
            // InternalSQLParser.g:5476:1: ( ( rule__Select__Group_6__0 )? )
            // InternalSQLParser.g:5477:2: ( rule__Select__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_6()); 
            }
            // InternalSQLParser.g:5478:2: ( rule__Select__Group_6__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==WHERE) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSQLParser.g:5478:3: rule__Select__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6__Impl"


    // $ANTLR start "rule__Select__Group__7"
    // InternalSQLParser.g:5486:1: rule__Select__Group__7 : rule__Select__Group__7__Impl rule__Select__Group__8 ;
    public final void rule__Select__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5490:1: ( rule__Select__Group__7__Impl rule__Select__Group__8 )
            // InternalSQLParser.g:5491:2: rule__Select__Group__7__Impl rule__Select__Group__8
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7"


    // $ANTLR start "rule__Select__Group__7__Impl"
    // InternalSQLParser.g:5498:1: rule__Select__Group__7__Impl : ( ( rule__Select__Group_7__0 )? ) ;
    public final void rule__Select__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5502:1: ( ( ( rule__Select__Group_7__0 )? ) )
            // InternalSQLParser.g:5503:1: ( ( rule__Select__Group_7__0 )? )
            {
            // InternalSQLParser.g:5503:1: ( ( rule__Select__Group_7__0 )? )
            // InternalSQLParser.g:5504:2: ( rule__Select__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_7()); 
            }
            // InternalSQLParser.g:5505:2: ( rule__Select__Group_7__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==GROUP) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalSQLParser.g:5505:3: rule__Select__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7__Impl"


    // $ANTLR start "rule__Select__Group__8"
    // InternalSQLParser.g:5513:1: rule__Select__Group__8 : rule__Select__Group__8__Impl rule__Select__Group__9 ;
    public final void rule__Select__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5517:1: ( rule__Select__Group__8__Impl rule__Select__Group__9 )
            // InternalSQLParser.g:5518:2: rule__Select__Group__8__Impl rule__Select__Group__9
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8"


    // $ANTLR start "rule__Select__Group__8__Impl"
    // InternalSQLParser.g:5525:1: rule__Select__Group__8__Impl : ( ( rule__Select__Group_8__0 )? ) ;
    public final void rule__Select__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5529:1: ( ( ( rule__Select__Group_8__0 )? ) )
            // InternalSQLParser.g:5530:1: ( ( rule__Select__Group_8__0 )? )
            {
            // InternalSQLParser.g:5530:1: ( ( rule__Select__Group_8__0 )? )
            // InternalSQLParser.g:5531:2: ( rule__Select__Group_8__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_8()); 
            }
            // InternalSQLParser.g:5532:2: ( rule__Select__Group_8__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==HAVING) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSQLParser.g:5532:3: rule__Select__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8__Impl"


    // $ANTLR start "rule__Select__Group__9"
    // InternalSQLParser.g:5540:1: rule__Select__Group__9 : rule__Select__Group__9__Impl rule__Select__Group__10 ;
    public final void rule__Select__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5544:1: ( rule__Select__Group__9__Impl rule__Select__Group__10 )
            // InternalSQLParser.g:5545:2: rule__Select__Group__9__Impl rule__Select__Group__10
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9"


    // $ANTLR start "rule__Select__Group__9__Impl"
    // InternalSQLParser.g:5552:1: rule__Select__Group__9__Impl : ( ( rule__Select__Group_9__0 )? ) ;
    public final void rule__Select__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5556:1: ( ( ( rule__Select__Group_9__0 )? ) )
            // InternalSQLParser.g:5557:1: ( ( rule__Select__Group_9__0 )? )
            {
            // InternalSQLParser.g:5557:1: ( ( rule__Select__Group_9__0 )? )
            // InternalSQLParser.g:5558:2: ( rule__Select__Group_9__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_9()); 
            }
            // InternalSQLParser.g:5559:2: ( rule__Select__Group_9__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==ORDER) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSQLParser.g:5559:3: rule__Select__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9__Impl"


    // $ANTLR start "rule__Select__Group__10"
    // InternalSQLParser.g:5567:1: rule__Select__Group__10 : rule__Select__Group__10__Impl rule__Select__Group__11 ;
    public final void rule__Select__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5571:1: ( rule__Select__Group__10__Impl rule__Select__Group__11 )
            // InternalSQLParser.g:5572:2: rule__Select__Group__10__Impl rule__Select__Group__11
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10"


    // $ANTLR start "rule__Select__Group__10__Impl"
    // InternalSQLParser.g:5579:1: rule__Select__Group__10__Impl : ( ( rule__Select__Group_10__0 )? ) ;
    public final void rule__Select__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5583:1: ( ( ( rule__Select__Group_10__0 )? ) )
            // InternalSQLParser.g:5584:1: ( ( rule__Select__Group_10__0 )? )
            {
            // InternalSQLParser.g:5584:1: ( ( rule__Select__Group_10__0 )? )
            // InternalSQLParser.g:5585:2: ( rule__Select__Group_10__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_10()); 
            }
            // InternalSQLParser.g:5586:2: ( rule__Select__Group_10__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==LIMIT) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSQLParser.g:5586:3: rule__Select__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_10__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10__Impl"


    // $ANTLR start "rule__Select__Group__11"
    // InternalSQLParser.g:5594:1: rule__Select__Group__11 : rule__Select__Group__11__Impl rule__Select__Group__12 ;
    public final void rule__Select__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5598:1: ( rule__Select__Group__11__Impl rule__Select__Group__12 )
            // InternalSQLParser.g:5599:2: rule__Select__Group__11__Impl rule__Select__Group__12
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__12();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11"


    // $ANTLR start "rule__Select__Group__11__Impl"
    // InternalSQLParser.g:5606:1: rule__Select__Group__11__Impl : ( ( rule__Select__Group_11__0 )? ) ;
    public final void rule__Select__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5610:1: ( ( ( rule__Select__Group_11__0 )? ) )
            // InternalSQLParser.g:5611:1: ( ( rule__Select__Group_11__0 )? )
            {
            // InternalSQLParser.g:5611:1: ( ( rule__Select__Group_11__0 )? )
            // InternalSQLParser.g:5612:2: ( rule__Select__Group_11__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_11()); 
            }
            // InternalSQLParser.g:5613:2: ( rule__Select__Group_11__0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==OFFSET) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSQLParser.g:5613:3: rule__Select__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11__Impl"


    // $ANTLR start "rule__Select__Group__12"
    // InternalSQLParser.g:5621:1: rule__Select__Group__12 : rule__Select__Group__12__Impl ;
    public final void rule__Select__Group__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5625:1: ( rule__Select__Group__12__Impl )
            // InternalSQLParser.g:5626:2: rule__Select__Group__12__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__12__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12"


    // $ANTLR start "rule__Select__Group__12__Impl"
    // InternalSQLParser.g:5632:1: rule__Select__Group__12__Impl : ( ( rule__Select__Group_12__0 )? ) ;
    public final void rule__Select__Group__12__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5636:1: ( ( ( rule__Select__Group_12__0 )? ) )
            // InternalSQLParser.g:5637:1: ( ( rule__Select__Group_12__0 )? )
            {
            // InternalSQLParser.g:5637:1: ( ( rule__Select__Group_12__0 )? )
            // InternalSQLParser.g:5638:2: ( rule__Select__Group_12__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_12()); 
            }
            // InternalSQLParser.g:5639:2: ( rule__Select__Group_12__0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==FETCH) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSQLParser.g:5639:3: rule__Select__Group_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_12__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_12()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12__Impl"


    // $ANTLR start "rule__Select__Group_2__0"
    // InternalSQLParser.g:5648:1: rule__Select__Group_2__0 : rule__Select__Group_2__0__Impl rule__Select__Group_2__1 ;
    public final void rule__Select__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5652:1: ( rule__Select__Group_2__0__Impl rule__Select__Group_2__1 )
            // InternalSQLParser.g:5653:2: rule__Select__Group_2__0__Impl rule__Select__Group_2__1
            {
            pushFollow(FOLLOW_21);
            rule__Select__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0"


    // $ANTLR start "rule__Select__Group_2__0__Impl"
    // InternalSQLParser.g:5660:1: rule__Select__Group_2__0__Impl : ( TOP ) ;
    public final void rule__Select__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5664:1: ( ( TOP ) )
            // InternalSQLParser.g:5665:1: ( TOP )
            {
            // InternalSQLParser.g:5665:1: ( TOP )
            // InternalSQLParser.g:5666:2: TOP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }
            match(input,TOP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0__Impl"


    // $ANTLR start "rule__Select__Group_2__1"
    // InternalSQLParser.g:5675:1: rule__Select__Group_2__1 : rule__Select__Group_2__1__Impl rule__Select__Group_2__2 ;
    public final void rule__Select__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5679:1: ( rule__Select__Group_2__1__Impl rule__Select__Group_2__2 )
            // InternalSQLParser.g:5680:2: rule__Select__Group_2__1__Impl rule__Select__Group_2__2
            {
            pushFollow(FOLLOW_22);
            rule__Select__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1"


    // $ANTLR start "rule__Select__Group_2__1__Impl"
    // InternalSQLParser.g:5687:1: rule__Select__Group_2__1__Impl : ( ( rule__Select__Alternatives_2_1 ) ) ;
    public final void rule__Select__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5691:1: ( ( ( rule__Select__Alternatives_2_1 ) ) )
            // InternalSQLParser.g:5692:1: ( ( rule__Select__Alternatives_2_1 ) )
            {
            // InternalSQLParser.g:5692:1: ( ( rule__Select__Alternatives_2_1 ) )
            // InternalSQLParser.g:5693:2: ( rule__Select__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }
            // InternalSQLParser.g:5694:2: ( rule__Select__Alternatives_2_1 )
            // InternalSQLParser.g:5694:3: rule__Select__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1__Impl"


    // $ANTLR start "rule__Select__Group_2__2"
    // InternalSQLParser.g:5702:1: rule__Select__Group_2__2 : rule__Select__Group_2__2__Impl rule__Select__Group_2__3 ;
    public final void rule__Select__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5706:1: ( rule__Select__Group_2__2__Impl rule__Select__Group_2__3 )
            // InternalSQLParser.g:5707:2: rule__Select__Group_2__2__Impl rule__Select__Group_2__3
            {
            pushFollow(FOLLOW_22);
            rule__Select__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2"


    // $ANTLR start "rule__Select__Group_2__2__Impl"
    // InternalSQLParser.g:5714:1: rule__Select__Group_2__2__Impl : ( ( PERCENT )? ) ;
    public final void rule__Select__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5718:1: ( ( ( PERCENT )? ) )
            // InternalSQLParser.g:5719:1: ( ( PERCENT )? )
            {
            // InternalSQLParser.g:5719:1: ( ( PERCENT )? )
            // InternalSQLParser.g:5720:2: ( PERCENT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }
            // InternalSQLParser.g:5721:2: ( PERCENT )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==PERCENT) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSQLParser.g:5721:3: PERCENT
                    {
                    match(input,PERCENT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2__Impl"


    // $ANTLR start "rule__Select__Group_2__3"
    // InternalSQLParser.g:5729:1: rule__Select__Group_2__3 : rule__Select__Group_2__3__Impl ;
    public final void rule__Select__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5733:1: ( rule__Select__Group_2__3__Impl )
            // InternalSQLParser.g:5734:2: rule__Select__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3"


    // $ANTLR start "rule__Select__Group_2__3__Impl"
    // InternalSQLParser.g:5740:1: rule__Select__Group_2__3__Impl : ( ( rule__Select__Group_2_3__0 )? ) ;
    public final void rule__Select__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5744:1: ( ( ( rule__Select__Group_2_3__0 )? ) )
            // InternalSQLParser.g:5745:1: ( ( rule__Select__Group_2_3__0 )? )
            {
            // InternalSQLParser.g:5745:1: ( ( rule__Select__Group_2_3__0 )? )
            // InternalSQLParser.g:5746:2: ( rule__Select__Group_2_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }
            // InternalSQLParser.g:5747:2: ( rule__Select__Group_2_3__0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==WITH) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSQLParser.g:5747:3: rule__Select__Group_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3__Impl"


    // $ANTLR start "rule__Select__Group_2_3__0"
    // InternalSQLParser.g:5756:1: rule__Select__Group_2_3__0 : rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 ;
    public final void rule__Select__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5760:1: ( rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 )
            // InternalSQLParser.g:5761:2: rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1
            {
            pushFollow(FOLLOW_23);
            rule__Select__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0"


    // $ANTLR start "rule__Select__Group_2_3__0__Impl"
    // InternalSQLParser.g:5768:1: rule__Select__Group_2_3__0__Impl : ( WITH ) ;
    public final void rule__Select__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5772:1: ( ( WITH ) )
            // InternalSQLParser.g:5773:1: ( WITH )
            {
            // InternalSQLParser.g:5773:1: ( WITH )
            // InternalSQLParser.g:5774:2: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0__Impl"


    // $ANTLR start "rule__Select__Group_2_3__1"
    // InternalSQLParser.g:5783:1: rule__Select__Group_2_3__1 : rule__Select__Group_2_3__1__Impl ;
    public final void rule__Select__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5787:1: ( rule__Select__Group_2_3__1__Impl )
            // InternalSQLParser.g:5788:2: rule__Select__Group_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1"


    // $ANTLR start "rule__Select__Group_2_3__1__Impl"
    // InternalSQLParser.g:5794:1: rule__Select__Group_2_3__1__Impl : ( TIES ) ;
    public final void rule__Select__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5798:1: ( ( TIES ) )
            // InternalSQLParser.g:5799:1: ( TIES )
            {
            // InternalSQLParser.g:5799:1: ( TIES )
            // InternalSQLParser.g:5800:2: TIES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }
            match(input,TIES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1__Impl"


    // $ANTLR start "rule__Select__Group_6__0"
    // InternalSQLParser.g:5810:1: rule__Select__Group_6__0 : rule__Select__Group_6__0__Impl rule__Select__Group_6__1 ;
    public final void rule__Select__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5814:1: ( rule__Select__Group_6__0__Impl rule__Select__Group_6__1 )
            // InternalSQLParser.g:5815:2: rule__Select__Group_6__0__Impl rule__Select__Group_6__1
            {
            pushFollow(FOLLOW_24);
            rule__Select__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0"


    // $ANTLR start "rule__Select__Group_6__0__Impl"
    // InternalSQLParser.g:5822:1: rule__Select__Group_6__0__Impl : ( WHERE ) ;
    public final void rule__Select__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5826:1: ( ( WHERE ) )
            // InternalSQLParser.g:5827:1: ( WHERE )
            {
            // InternalSQLParser.g:5827:1: ( WHERE )
            // InternalSQLParser.g:5828:2: WHERE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }
            match(input,WHERE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0__Impl"


    // $ANTLR start "rule__Select__Group_6__1"
    // InternalSQLParser.g:5837:1: rule__Select__Group_6__1 : rule__Select__Group_6__1__Impl ;
    public final void rule__Select__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5841:1: ( rule__Select__Group_6__1__Impl )
            // InternalSQLParser.g:5842:2: rule__Select__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1"


    // $ANTLR start "rule__Select__Group_6__1__Impl"
    // InternalSQLParser.g:5848:1: rule__Select__Group_6__1__Impl : ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) ;
    public final void rule__Select__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5852:1: ( ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) )
            // InternalSQLParser.g:5853:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            {
            // InternalSQLParser.g:5853:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            // InternalSQLParser.g:5854:2: ( rule__Select__WhereExpressionAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }
            // InternalSQLParser.g:5855:2: ( rule__Select__WhereExpressionAssignment_6_1 )
            // InternalSQLParser.g:5855:3: rule__Select__WhereExpressionAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__WhereExpressionAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1__Impl"


    // $ANTLR start "rule__Select__Group_7__0"
    // InternalSQLParser.g:5864:1: rule__Select__Group_7__0 : rule__Select__Group_7__0__Impl rule__Select__Group_7__1 ;
    public final void rule__Select__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5868:1: ( rule__Select__Group_7__0__Impl rule__Select__Group_7__1 )
            // InternalSQLParser.g:5869:2: rule__Select__Group_7__0__Impl rule__Select__Group_7__1
            {
            pushFollow(FOLLOW_25);
            rule__Select__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0"


    // $ANTLR start "rule__Select__Group_7__0__Impl"
    // InternalSQLParser.g:5876:1: rule__Select__Group_7__0__Impl : ( GROUP ) ;
    public final void rule__Select__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5880:1: ( ( GROUP ) )
            // InternalSQLParser.g:5881:1: ( GROUP )
            {
            // InternalSQLParser.g:5881:1: ( GROUP )
            // InternalSQLParser.g:5882:2: GROUP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }
            match(input,GROUP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0__Impl"


    // $ANTLR start "rule__Select__Group_7__1"
    // InternalSQLParser.g:5891:1: rule__Select__Group_7__1 : rule__Select__Group_7__1__Impl rule__Select__Group_7__2 ;
    public final void rule__Select__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5895:1: ( rule__Select__Group_7__1__Impl rule__Select__Group_7__2 )
            // InternalSQLParser.g:5896:2: rule__Select__Group_7__1__Impl rule__Select__Group_7__2
            {
            pushFollow(FOLLOW_26);
            rule__Select__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1"


    // $ANTLR start "rule__Select__Group_7__1__Impl"
    // InternalSQLParser.g:5903:1: rule__Select__Group_7__1__Impl : ( BY ) ;
    public final void rule__Select__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5907:1: ( ( BY ) )
            // InternalSQLParser.g:5908:1: ( BY )
            {
            // InternalSQLParser.g:5908:1: ( BY )
            // InternalSQLParser.g:5909:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1__Impl"


    // $ANTLR start "rule__Select__Group_7__2"
    // InternalSQLParser.g:5918:1: rule__Select__Group_7__2 : rule__Select__Group_7__2__Impl ;
    public final void rule__Select__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5922:1: ( rule__Select__Group_7__2__Impl )
            // InternalSQLParser.g:5923:2: rule__Select__Group_7__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2"


    // $ANTLR start "rule__Select__Group_7__2__Impl"
    // InternalSQLParser.g:5929:1: rule__Select__Group_7__2__Impl : ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) ;
    public final void rule__Select__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5933:1: ( ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) )
            // InternalSQLParser.g:5934:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            {
            // InternalSQLParser.g:5934:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            // InternalSQLParser.g:5935:2: ( rule__Select__GroupByEntryAssignment_7_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }
            // InternalSQLParser.g:5936:2: ( rule__Select__GroupByEntryAssignment_7_2 )
            // InternalSQLParser.g:5936:3: rule__Select__GroupByEntryAssignment_7_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__GroupByEntryAssignment_7_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2__Impl"


    // $ANTLR start "rule__Select__Group_8__0"
    // InternalSQLParser.g:5945:1: rule__Select__Group_8__0 : rule__Select__Group_8__0__Impl rule__Select__Group_8__1 ;
    public final void rule__Select__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5949:1: ( rule__Select__Group_8__0__Impl rule__Select__Group_8__1 )
            // InternalSQLParser.g:5950:2: rule__Select__Group_8__0__Impl rule__Select__Group_8__1
            {
            pushFollow(FOLLOW_24);
            rule__Select__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0"


    // $ANTLR start "rule__Select__Group_8__0__Impl"
    // InternalSQLParser.g:5957:1: rule__Select__Group_8__0__Impl : ( HAVING ) ;
    public final void rule__Select__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5961:1: ( ( HAVING ) )
            // InternalSQLParser.g:5962:1: ( HAVING )
            {
            // InternalSQLParser.g:5962:1: ( HAVING )
            // InternalSQLParser.g:5963:2: HAVING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }
            match(input,HAVING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0__Impl"


    // $ANTLR start "rule__Select__Group_8__1"
    // InternalSQLParser.g:5972:1: rule__Select__Group_8__1 : rule__Select__Group_8__1__Impl ;
    public final void rule__Select__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5976:1: ( rule__Select__Group_8__1__Impl )
            // InternalSQLParser.g:5977:2: rule__Select__Group_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1"


    // $ANTLR start "rule__Select__Group_8__1__Impl"
    // InternalSQLParser.g:5983:1: rule__Select__Group_8__1__Impl : ( ( rule__Select__HavingEntryAssignment_8_1 ) ) ;
    public final void rule__Select__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5987:1: ( ( ( rule__Select__HavingEntryAssignment_8_1 ) ) )
            // InternalSQLParser.g:5988:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            {
            // InternalSQLParser.g:5988:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            // InternalSQLParser.g:5989:2: ( rule__Select__HavingEntryAssignment_8_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }
            // InternalSQLParser.g:5990:2: ( rule__Select__HavingEntryAssignment_8_1 )
            // InternalSQLParser.g:5990:3: rule__Select__HavingEntryAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__HavingEntryAssignment_8_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1__Impl"


    // $ANTLR start "rule__Select__Group_9__0"
    // InternalSQLParser.g:5999:1: rule__Select__Group_9__0 : rule__Select__Group_9__0__Impl rule__Select__Group_9__1 ;
    public final void rule__Select__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6003:1: ( rule__Select__Group_9__0__Impl rule__Select__Group_9__1 )
            // InternalSQLParser.g:6004:2: rule__Select__Group_9__0__Impl rule__Select__Group_9__1
            {
            pushFollow(FOLLOW_25);
            rule__Select__Group_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0"


    // $ANTLR start "rule__Select__Group_9__0__Impl"
    // InternalSQLParser.g:6011:1: rule__Select__Group_9__0__Impl : ( ORDER ) ;
    public final void rule__Select__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6015:1: ( ( ORDER ) )
            // InternalSQLParser.g:6016:1: ( ORDER )
            {
            // InternalSQLParser.g:6016:1: ( ORDER )
            // InternalSQLParser.g:6017:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0__Impl"


    // $ANTLR start "rule__Select__Group_9__1"
    // InternalSQLParser.g:6026:1: rule__Select__Group_9__1 : rule__Select__Group_9__1__Impl rule__Select__Group_9__2 ;
    public final void rule__Select__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6030:1: ( rule__Select__Group_9__1__Impl rule__Select__Group_9__2 )
            // InternalSQLParser.g:6031:2: rule__Select__Group_9__1__Impl rule__Select__Group_9__2
            {
            pushFollow(FOLLOW_26);
            rule__Select__Group_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1"


    // $ANTLR start "rule__Select__Group_9__1__Impl"
    // InternalSQLParser.g:6038:1: rule__Select__Group_9__1__Impl : ( BY ) ;
    public final void rule__Select__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6042:1: ( ( BY ) )
            // InternalSQLParser.g:6043:1: ( BY )
            {
            // InternalSQLParser.g:6043:1: ( BY )
            // InternalSQLParser.g:6044:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1__Impl"


    // $ANTLR start "rule__Select__Group_9__2"
    // InternalSQLParser.g:6053:1: rule__Select__Group_9__2 : rule__Select__Group_9__2__Impl ;
    public final void rule__Select__Group_9__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6057:1: ( rule__Select__Group_9__2__Impl )
            // InternalSQLParser.g:6058:2: rule__Select__Group_9__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2"


    // $ANTLR start "rule__Select__Group_9__2__Impl"
    // InternalSQLParser.g:6064:1: rule__Select__Group_9__2__Impl : ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) ;
    public final void rule__Select__Group_9__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6068:1: ( ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) )
            // InternalSQLParser.g:6069:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            {
            // InternalSQLParser.g:6069:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            // InternalSQLParser.g:6070:2: ( rule__Select__OrderByEntryAssignment_9_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }
            // InternalSQLParser.g:6071:2: ( rule__Select__OrderByEntryAssignment_9_2 )
            // InternalSQLParser.g:6071:3: rule__Select__OrderByEntryAssignment_9_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__OrderByEntryAssignment_9_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2__Impl"


    // $ANTLR start "rule__Select__Group_10__0"
    // InternalSQLParser.g:6080:1: rule__Select__Group_10__0 : rule__Select__Group_10__0__Impl rule__Select__Group_10__1 ;
    public final void rule__Select__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6084:1: ( rule__Select__Group_10__0__Impl rule__Select__Group_10__1 )
            // InternalSQLParser.g:6085:2: rule__Select__Group_10__0__Impl rule__Select__Group_10__1
            {
            pushFollow(FOLLOW_27);
            rule__Select__Group_10__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0"


    // $ANTLR start "rule__Select__Group_10__0__Impl"
    // InternalSQLParser.g:6092:1: rule__Select__Group_10__0__Impl : ( LIMIT ) ;
    public final void rule__Select__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6096:1: ( ( LIMIT ) )
            // InternalSQLParser.g:6097:1: ( LIMIT )
            {
            // InternalSQLParser.g:6097:1: ( LIMIT )
            // InternalSQLParser.g:6098:2: LIMIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }
            match(input,LIMIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0__Impl"


    // $ANTLR start "rule__Select__Group_10__1"
    // InternalSQLParser.g:6107:1: rule__Select__Group_10__1 : rule__Select__Group_10__1__Impl ;
    public final void rule__Select__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6111:1: ( rule__Select__Group_10__1__Impl )
            // InternalSQLParser.g:6112:2: rule__Select__Group_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1"


    // $ANTLR start "rule__Select__Group_10__1__Impl"
    // InternalSQLParser.g:6118:1: rule__Select__Group_10__1__Impl : ( ( rule__Select__LimAssignment_10_1 ) ) ;
    public final void rule__Select__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6122:1: ( ( ( rule__Select__LimAssignment_10_1 ) ) )
            // InternalSQLParser.g:6123:1: ( ( rule__Select__LimAssignment_10_1 ) )
            {
            // InternalSQLParser.g:6123:1: ( ( rule__Select__LimAssignment_10_1 ) )
            // InternalSQLParser.g:6124:2: ( rule__Select__LimAssignment_10_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }
            // InternalSQLParser.g:6125:2: ( rule__Select__LimAssignment_10_1 )
            // InternalSQLParser.g:6125:3: rule__Select__LimAssignment_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__LimAssignment_10_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1__Impl"


    // $ANTLR start "rule__Select__Group_11__0"
    // InternalSQLParser.g:6134:1: rule__Select__Group_11__0 : rule__Select__Group_11__0__Impl rule__Select__Group_11__1 ;
    public final void rule__Select__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6138:1: ( rule__Select__Group_11__0__Impl rule__Select__Group_11__1 )
            // InternalSQLParser.g:6139:2: rule__Select__Group_11__0__Impl rule__Select__Group_11__1
            {
            pushFollow(FOLLOW_28);
            rule__Select__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0"


    // $ANTLR start "rule__Select__Group_11__0__Impl"
    // InternalSQLParser.g:6146:1: rule__Select__Group_11__0__Impl : ( OFFSET ) ;
    public final void rule__Select__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6150:1: ( ( OFFSET ) )
            // InternalSQLParser.g:6151:1: ( OFFSET )
            {
            // InternalSQLParser.g:6151:1: ( OFFSET )
            // InternalSQLParser.g:6152:2: OFFSET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }
            match(input,OFFSET,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0__Impl"


    // $ANTLR start "rule__Select__Group_11__1"
    // InternalSQLParser.g:6161:1: rule__Select__Group_11__1 : rule__Select__Group_11__1__Impl ;
    public final void rule__Select__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6165:1: ( rule__Select__Group_11__1__Impl )
            // InternalSQLParser.g:6166:2: rule__Select__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1"


    // $ANTLR start "rule__Select__Group_11__1__Impl"
    // InternalSQLParser.g:6172:1: rule__Select__Group_11__1__Impl : ( ( rule__Select__OffsetAssignment_11_1 ) ) ;
    public final void rule__Select__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6176:1: ( ( ( rule__Select__OffsetAssignment_11_1 ) ) )
            // InternalSQLParser.g:6177:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            {
            // InternalSQLParser.g:6177:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            // InternalSQLParser.g:6178:2: ( rule__Select__OffsetAssignment_11_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }
            // InternalSQLParser.g:6179:2: ( rule__Select__OffsetAssignment_11_1 )
            // InternalSQLParser.g:6179:3: rule__Select__OffsetAssignment_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__OffsetAssignment_11_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1__Impl"


    // $ANTLR start "rule__Select__Group_12__0"
    // InternalSQLParser.g:6188:1: rule__Select__Group_12__0 : rule__Select__Group_12__0__Impl rule__Select__Group_12__1 ;
    public final void rule__Select__Group_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6192:1: ( rule__Select__Group_12__0__Impl rule__Select__Group_12__1 )
            // InternalSQLParser.g:6193:2: rule__Select__Group_12__0__Impl rule__Select__Group_12__1
            {
            pushFollow(FOLLOW_29);
            rule__Select__Group_12__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0"


    // $ANTLR start "rule__Select__Group_12__0__Impl"
    // InternalSQLParser.g:6200:1: rule__Select__Group_12__0__Impl : ( FETCH ) ;
    public final void rule__Select__Group_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6204:1: ( ( FETCH ) )
            // InternalSQLParser.g:6205:1: ( FETCH )
            {
            // InternalSQLParser.g:6205:1: ( FETCH )
            // InternalSQLParser.g:6206:2: FETCH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }
            match(input,FETCH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0__Impl"


    // $ANTLR start "rule__Select__Group_12__1"
    // InternalSQLParser.g:6215:1: rule__Select__Group_12__1 : rule__Select__Group_12__1__Impl rule__Select__Group_12__2 ;
    public final void rule__Select__Group_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6219:1: ( rule__Select__Group_12__1__Impl rule__Select__Group_12__2 )
            // InternalSQLParser.g:6220:2: rule__Select__Group_12__1__Impl rule__Select__Group_12__2
            {
            pushFollow(FOLLOW_13);
            rule__Select__Group_12__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1"


    // $ANTLR start "rule__Select__Group_12__1__Impl"
    // InternalSQLParser.g:6227:1: rule__Select__Group_12__1__Impl : ( FIRST ) ;
    public final void rule__Select__Group_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6231:1: ( ( FIRST ) )
            // InternalSQLParser.g:6232:1: ( FIRST )
            {
            // InternalSQLParser.g:6232:1: ( FIRST )
            // InternalSQLParser.g:6233:2: FIRST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }
            match(input,FIRST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1__Impl"


    // $ANTLR start "rule__Select__Group_12__2"
    // InternalSQLParser.g:6242:1: rule__Select__Group_12__2 : rule__Select__Group_12__2__Impl ;
    public final void rule__Select__Group_12__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6246:1: ( rule__Select__Group_12__2__Impl )
            // InternalSQLParser.g:6247:2: rule__Select__Group_12__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2"


    // $ANTLR start "rule__Select__Group_12__2__Impl"
    // InternalSQLParser.g:6253:1: rule__Select__Group_12__2__Impl : ( ( rule__Select__FetchFirstAssignment_12_2 ) ) ;
    public final void rule__Select__Group_12__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6257:1: ( ( ( rule__Select__FetchFirstAssignment_12_2 ) ) )
            // InternalSQLParser.g:6258:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            {
            // InternalSQLParser.g:6258:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            // InternalSQLParser.g:6259:2: ( rule__Select__FetchFirstAssignment_12_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }
            // InternalSQLParser.g:6260:2: ( rule__Select__FetchFirstAssignment_12_2 )
            // InternalSQLParser.g:6260:3: rule__Select__FetchFirstAssignment_12_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__FetchFirstAssignment_12_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2__Impl"


    // $ANTLR start "rule__Columns__Group__0"
    // InternalSQLParser.g:6269:1: rule__Columns__Group__0 : rule__Columns__Group__0__Impl rule__Columns__Group__1 ;
    public final void rule__Columns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6273:1: ( rule__Columns__Group__0__Impl rule__Columns__Group__1 )
            // InternalSQLParser.g:6274:2: rule__Columns__Group__0__Impl rule__Columns__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__Columns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0"


    // $ANTLR start "rule__Columns__Group__0__Impl"
    // InternalSQLParser.g:6281:1: rule__Columns__Group__0__Impl : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6285:1: ( ( ruleColumnOrAlias ) )
            // InternalSQLParser.g:6286:1: ( ruleColumnOrAlias )
            {
            // InternalSQLParser.g:6286:1: ( ruleColumnOrAlias )
            // InternalSQLParser.g:6287:2: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0__Impl"


    // $ANTLR start "rule__Columns__Group__1"
    // InternalSQLParser.g:6296:1: rule__Columns__Group__1 : rule__Columns__Group__1__Impl ;
    public final void rule__Columns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6300:1: ( rule__Columns__Group__1__Impl )
            // InternalSQLParser.g:6301:2: rule__Columns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1"


    // $ANTLR start "rule__Columns__Group__1__Impl"
    // InternalSQLParser.g:6307:1: rule__Columns__Group__1__Impl : ( ( rule__Columns__Group_1__0 )? ) ;
    public final void rule__Columns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6311:1: ( ( ( rule__Columns__Group_1__0 )? ) )
            // InternalSQLParser.g:6312:1: ( ( rule__Columns__Group_1__0 )? )
            {
            // InternalSQLParser.g:6312:1: ( ( rule__Columns__Group_1__0 )? )
            // InternalSQLParser.g:6313:2: ( rule__Columns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:6314:2: ( rule__Columns__Group_1__0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==Comma) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSQLParser.g:6314:3: rule__Columns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Columns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1__Impl"


    // $ANTLR start "rule__Columns__Group_1__0"
    // InternalSQLParser.g:6323:1: rule__Columns__Group_1__0 : rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 ;
    public final void rule__Columns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6327:1: ( rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 )
            // InternalSQLParser.g:6328:2: rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Columns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0"


    // $ANTLR start "rule__Columns__Group_1__0__Impl"
    // InternalSQLParser.g:6335:1: rule__Columns__Group_1__0__Impl : ( () ) ;
    public final void rule__Columns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6339:1: ( ( () ) )
            // InternalSQLParser.g:6340:1: ( () )
            {
            // InternalSQLParser.g:6340:1: ( () )
            // InternalSQLParser.g:6341:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:6342:2: ()
            // InternalSQLParser.g:6342:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1__1"
    // InternalSQLParser.g:6350:1: rule__Columns__Group_1__1 : rule__Columns__Group_1__1__Impl ;
    public final void rule__Columns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6354:1: ( rule__Columns__Group_1__1__Impl )
            // InternalSQLParser.g:6355:2: rule__Columns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1"


    // $ANTLR start "rule__Columns__Group_1__1__Impl"
    // InternalSQLParser.g:6361:1: rule__Columns__Group_1__1__Impl : ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) ;
    public final void rule__Columns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6365:1: ( ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:6366:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:6366:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:6367:2: ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:6367:2: ( ( rule__Columns__Group_1_1__0 ) )
            // InternalSQLParser.g:6368:3: ( rule__Columns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:6369:3: ( rule__Columns__Group_1_1__0 )
            // InternalSQLParser.g:6369:4: rule__Columns__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__Columns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:6372:2: ( ( rule__Columns__Group_1_1__0 )* )
            // InternalSQLParser.g:6373:3: ( rule__Columns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:6374:3: ( rule__Columns__Group_1_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==Comma) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSQLParser.g:6374:4: rule__Columns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Columns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__0"
    // InternalSQLParser.g:6384:1: rule__Columns__Group_1_1__0 : rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 ;
    public final void rule__Columns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6388:1: ( rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 )
            // InternalSQLParser.g:6389:2: rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Columns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0"


    // $ANTLR start "rule__Columns__Group_1_1__0__Impl"
    // InternalSQLParser.g:6396:1: rule__Columns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Columns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6400:1: ( ( Comma ) )
            // InternalSQLParser.g:6401:1: ( Comma )
            {
            // InternalSQLParser.g:6401:1: ( Comma )
            // InternalSQLParser.g:6402:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__1"
    // InternalSQLParser.g:6411:1: rule__Columns__Group_1_1__1 : rule__Columns__Group_1_1__1__Impl ;
    public final void rule__Columns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6415:1: ( rule__Columns__Group_1_1__1__Impl )
            // InternalSQLParser.g:6416:2: rule__Columns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1"


    // $ANTLR start "rule__Columns__Group_1_1__1__Impl"
    // InternalSQLParser.g:6422:1: rule__Columns__Group_1_1__1__Impl : ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Columns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6426:1: ( ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:6427:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:6427:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:6428:2: ( rule__Columns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:6429:2: ( rule__Columns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:6429:3: rule__Columns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Columns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0"
    // InternalSQLParser.g:6438:1: rule__ColumnOrAlias__Group_0__0 : rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 ;
    public final void rule__ColumnOrAlias__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6442:1: ( rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 )
            // InternalSQLParser.g:6443:2: rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1
            {
            pushFollow(FOLLOW_30);
            rule__ColumnOrAlias__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0__Impl"
    // InternalSQLParser.g:6450:1: rule__ColumnOrAlias__Group_0__0__Impl : ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) ;
    public final void rule__ColumnOrAlias__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6454:1: ( ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) )
            // InternalSQLParser.g:6455:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            {
            // InternalSQLParser.g:6455:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            // InternalSQLParser.g:6456:2: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }
            // InternalSQLParser.g:6457:2: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            // InternalSQLParser.g:6457:3: rule__ColumnOrAlias__CeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__CeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1"
    // InternalSQLParser.g:6465:1: rule__ColumnOrAlias__Group_0__1 : rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 ;
    public final void rule__ColumnOrAlias__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6469:1: ( rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 )
            // InternalSQLParser.g:6470:2: rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2
            {
            pushFollow(FOLLOW_30);
            rule__ColumnOrAlias__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1__Impl"
    // InternalSQLParser.g:6477:1: rule__ColumnOrAlias__Group_0__1__Impl : ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6481:1: ( ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) )
            // InternalSQLParser.g:6482:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            {
            // InternalSQLParser.g:6482:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            // InternalSQLParser.g:6483:2: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }
            // InternalSQLParser.g:6484:2: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==AS) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSQLParser.g:6484:3: rule__ColumnOrAlias__AliasAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AliasAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2"
    // InternalSQLParser.g:6492:1: rule__ColumnOrAlias__Group_0__2 : rule__ColumnOrAlias__Group_0__2__Impl ;
    public final void rule__ColumnOrAlias__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6496:1: ( rule__ColumnOrAlias__Group_0__2__Impl )
            // InternalSQLParser.g:6497:2: rule__ColumnOrAlias__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2__Impl"
    // InternalSQLParser.g:6503:1: rule__ColumnOrAlias__Group_0__2__Impl : ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6507:1: ( ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) )
            // InternalSQLParser.g:6508:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            {
            // InternalSQLParser.g:6508:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            // InternalSQLParser.g:6509:2: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }
            // InternalSQLParser.g:6510:2: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=RULE_STRING && LA76_0<=RULE_ID)) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSQLParser.g:6510:3: rule__ColumnOrAlias__ColAliasAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__ColAliasAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2__Impl"


    // $ANTLR start "rule__ColumnFull__Group__0"
    // InternalSQLParser.g:6519:1: rule__ColumnFull__Group__0 : rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 ;
    public final void rule__ColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6523:1: ( rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 )
            // InternalSQLParser.g:6524:2: rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__ColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0"


    // $ANTLR start "rule__ColumnFull__Group__0__Impl"
    // InternalSQLParser.g:6531:1: rule__ColumnFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6535:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:6536:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:6536:1: ( ruleDbObjectName )
            // InternalSQLParser.g:6537:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group__1"
    // InternalSQLParser.g:6546:1: rule__ColumnFull__Group__1 : rule__ColumnFull__Group__1__Impl ;
    public final void rule__ColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6550:1: ( rule__ColumnFull__Group__1__Impl )
            // InternalSQLParser.g:6551:2: rule__ColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1"


    // $ANTLR start "rule__ColumnFull__Group__1__Impl"
    // InternalSQLParser.g:6557:1: rule__ColumnFull__Group__1__Impl : ( ( rule__ColumnFull__Group_1__0 )? ) ;
    public final void rule__ColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6561:1: ( ( ( rule__ColumnFull__Group_1__0 )? ) )
            // InternalSQLParser.g:6562:1: ( ( rule__ColumnFull__Group_1__0 )? )
            {
            // InternalSQLParser.g:6562:1: ( ( rule__ColumnFull__Group_1__0 )? )
            // InternalSQLParser.g:6563:2: ( rule__ColumnFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:6564:2: ( rule__ColumnFull__Group_1__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==FullStop) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSQLParser.g:6564:3: rule__ColumnFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__0"
    // InternalSQLParser.g:6573:1: rule__ColumnFull__Group_1__0 : rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 ;
    public final void rule__ColumnFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6577:1: ( rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 )
            // InternalSQLParser.g:6578:2: rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__ColumnFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1__0__Impl"
    // InternalSQLParser.g:6585:1: rule__ColumnFull__Group_1__0__Impl : ( () ) ;
    public final void rule__ColumnFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6589:1: ( ( () ) )
            // InternalSQLParser.g:6590:1: ( () )
            {
            // InternalSQLParser.g:6590:1: ( () )
            // InternalSQLParser.g:6591:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:6592:2: ()
            // InternalSQLParser.g:6592:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__1"
    // InternalSQLParser.g:6600:1: rule__ColumnFull__Group_1__1 : rule__ColumnFull__Group_1__1__Impl ;
    public final void rule__ColumnFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6604:1: ( rule__ColumnFull__Group_1__1__Impl )
            // InternalSQLParser.g:6605:2: rule__ColumnFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1__1__Impl"
    // InternalSQLParser.g:6611:1: rule__ColumnFull__Group_1__1__Impl : ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) ;
    public final void rule__ColumnFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6615:1: ( ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:6616:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:6616:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            // InternalSQLParser.g:6617:2: ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:6617:2: ( ( rule__ColumnFull__Group_1_1__0 ) )
            // InternalSQLParser.g:6618:3: ( rule__ColumnFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:6619:3: ( rule__ColumnFull__Group_1_1__0 )
            // InternalSQLParser.g:6619:4: rule__ColumnFull__Group_1_1__0
            {
            pushFollow(FOLLOW_32);
            rule__ColumnFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:6622:2: ( ( rule__ColumnFull__Group_1_1__0 )* )
            // InternalSQLParser.g:6623:3: ( rule__ColumnFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:6624:3: ( rule__ColumnFull__Group_1_1__0 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==FullStop) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSQLParser.g:6624:4: rule__ColumnFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_32);
            	    rule__ColumnFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0"
    // InternalSQLParser.g:6634:1: rule__ColumnFull__Group_1_1__0 : rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 ;
    public final void rule__ColumnFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6638:1: ( rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 )
            // InternalSQLParser.g:6639:2: rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__ColumnFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0__Impl"
    // InternalSQLParser.g:6646:1: rule__ColumnFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__ColumnFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6650:1: ( ( FullStop ) )
            // InternalSQLParser.g:6651:1: ( FullStop )
            {
            // InternalSQLParser.g:6651:1: ( FullStop )
            // InternalSQLParser.g:6652:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1"
    // InternalSQLParser.g:6661:1: rule__ColumnFull__Group_1_1__1 : rule__ColumnFull__Group_1_1__1__Impl ;
    public final void rule__ColumnFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6665:1: ( rule__ColumnFull__Group_1_1__1__Impl )
            // InternalSQLParser.g:6666:2: rule__ColumnFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1__Impl"
    // InternalSQLParser.g:6672:1: rule__ColumnFull__Group_1_1__1__Impl : ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__ColumnFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6676:1: ( ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:6677:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:6677:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:6678:2: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:6679:2: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:6679:3: rule__ColumnFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__Tables__Group__0"
    // InternalSQLParser.g:6688:1: rule__Tables__Group__0 : rule__Tables__Group__0__Impl rule__Tables__Group__1 ;
    public final void rule__Tables__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6692:1: ( rule__Tables__Group__0__Impl rule__Tables__Group__1 )
            // InternalSQLParser.g:6693:2: rule__Tables__Group__0__Impl rule__Tables__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__Tables__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0"


    // $ANTLR start "rule__Tables__Group__0__Impl"
    // InternalSQLParser.g:6700:1: rule__Tables__Group__0__Impl : ( ruleFromTable ) ;
    public final void rule__Tables__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6704:1: ( ( ruleFromTable ) )
            // InternalSQLParser.g:6705:1: ( ruleFromTable )
            {
            // InternalSQLParser.g:6705:1: ( ruleFromTable )
            // InternalSQLParser.g:6706:2: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0__Impl"


    // $ANTLR start "rule__Tables__Group__1"
    // InternalSQLParser.g:6715:1: rule__Tables__Group__1 : rule__Tables__Group__1__Impl ;
    public final void rule__Tables__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6719:1: ( rule__Tables__Group__1__Impl )
            // InternalSQLParser.g:6720:2: rule__Tables__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1"


    // $ANTLR start "rule__Tables__Group__1__Impl"
    // InternalSQLParser.g:6726:1: rule__Tables__Group__1__Impl : ( ( rule__Tables__Group_1__0 )? ) ;
    public final void rule__Tables__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6730:1: ( ( ( rule__Tables__Group_1__0 )? ) )
            // InternalSQLParser.g:6731:1: ( ( rule__Tables__Group_1__0 )? )
            {
            // InternalSQLParser.g:6731:1: ( ( rule__Tables__Group_1__0 )? )
            // InternalSQLParser.g:6732:2: ( rule__Tables__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:6733:2: ( rule__Tables__Group_1__0 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==Comma) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSQLParser.g:6733:3: rule__Tables__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Tables__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1__Impl"


    // $ANTLR start "rule__Tables__Group_1__0"
    // InternalSQLParser.g:6742:1: rule__Tables__Group_1__0 : rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 ;
    public final void rule__Tables__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6746:1: ( rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 )
            // InternalSQLParser.g:6747:2: rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Tables__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0"


    // $ANTLR start "rule__Tables__Group_1__0__Impl"
    // InternalSQLParser.g:6754:1: rule__Tables__Group_1__0__Impl : ( () ) ;
    public final void rule__Tables__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6758:1: ( ( () ) )
            // InternalSQLParser.g:6759:1: ( () )
            {
            // InternalSQLParser.g:6759:1: ( () )
            // InternalSQLParser.g:6760:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:6761:2: ()
            // InternalSQLParser.g:6761:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1__1"
    // InternalSQLParser.g:6769:1: rule__Tables__Group_1__1 : rule__Tables__Group_1__1__Impl ;
    public final void rule__Tables__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6773:1: ( rule__Tables__Group_1__1__Impl )
            // InternalSQLParser.g:6774:2: rule__Tables__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1"


    // $ANTLR start "rule__Tables__Group_1__1__Impl"
    // InternalSQLParser.g:6780:1: rule__Tables__Group_1__1__Impl : ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) ;
    public final void rule__Tables__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6784:1: ( ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:6785:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:6785:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            // InternalSQLParser.g:6786:2: ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:6786:2: ( ( rule__Tables__Group_1_1__0 ) )
            // InternalSQLParser.g:6787:3: ( rule__Tables__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:6788:3: ( rule__Tables__Group_1_1__0 )
            // InternalSQLParser.g:6788:4: rule__Tables__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__Tables__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:6791:2: ( ( rule__Tables__Group_1_1__0 )* )
            // InternalSQLParser.g:6792:3: ( rule__Tables__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:6793:3: ( rule__Tables__Group_1_1__0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==Comma) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSQLParser.g:6793:4: rule__Tables__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Tables__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__0"
    // InternalSQLParser.g:6803:1: rule__Tables__Group_1_1__0 : rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 ;
    public final void rule__Tables__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6807:1: ( rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 )
            // InternalSQLParser.g:6808:2: rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__Tables__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0"


    // $ANTLR start "rule__Tables__Group_1_1__0__Impl"
    // InternalSQLParser.g:6815:1: rule__Tables__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Tables__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6819:1: ( ( Comma ) )
            // InternalSQLParser.g:6820:1: ( Comma )
            {
            // InternalSQLParser.g:6820:1: ( Comma )
            // InternalSQLParser.g:6821:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__1"
    // InternalSQLParser.g:6830:1: rule__Tables__Group_1_1__1 : rule__Tables__Group_1_1__1__Impl ;
    public final void rule__Tables__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6834:1: ( rule__Tables__Group_1_1__1__Impl )
            // InternalSQLParser.g:6835:2: rule__Tables__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1"


    // $ANTLR start "rule__Tables__Group_1_1__1__Impl"
    // InternalSQLParser.g:6841:1: rule__Tables__Group_1_1__1__Impl : ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Tables__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6845:1: ( ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:6846:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:6846:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:6847:2: ( rule__Tables__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:6848:2: ( rule__Tables__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:6848:3: rule__Tables__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Tables__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1__Impl"


    // $ANTLR start "rule__FromTable__Group__0"
    // InternalSQLParser.g:6857:1: rule__FromTable__Group__0 : rule__FromTable__Group__0__Impl rule__FromTable__Group__1 ;
    public final void rule__FromTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6861:1: ( rule__FromTable__Group__0__Impl rule__FromTable__Group__1 )
            // InternalSQLParser.g:6862:2: rule__FromTable__Group__0__Impl rule__FromTable__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__FromTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0"


    // $ANTLR start "rule__FromTable__Group__0__Impl"
    // InternalSQLParser.g:6869:1: rule__FromTable__Group__0__Impl : ( ( rule__FromTable__TableAssignment_0 ) ) ;
    public final void rule__FromTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6873:1: ( ( ( rule__FromTable__TableAssignment_0 ) ) )
            // InternalSQLParser.g:6874:1: ( ( rule__FromTable__TableAssignment_0 ) )
            {
            // InternalSQLParser.g:6874:1: ( ( rule__FromTable__TableAssignment_0 ) )
            // InternalSQLParser.g:6875:2: ( rule__FromTable__TableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }
            // InternalSQLParser.g:6876:2: ( rule__FromTable__TableAssignment_0 )
            // InternalSQLParser.g:6876:3: rule__FromTable__TableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__TableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0__Impl"


    // $ANTLR start "rule__FromTable__Group__1"
    // InternalSQLParser.g:6884:1: rule__FromTable__Group__1 : rule__FromTable__Group__1__Impl ;
    public final void rule__FromTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6888:1: ( rule__FromTable__Group__1__Impl )
            // InternalSQLParser.g:6889:2: rule__FromTable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1"


    // $ANTLR start "rule__FromTable__Group__1__Impl"
    // InternalSQLParser.g:6895:1: rule__FromTable__Group__1__Impl : ( ( rule__FromTable__FjoinAssignment_1 )* ) ;
    public final void rule__FromTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6899:1: ( ( ( rule__FromTable__FjoinAssignment_1 )* ) )
            // InternalSQLParser.g:6900:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            {
            // InternalSQLParser.g:6900:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            // InternalSQLParser.g:6901:2: ( rule__FromTable__FjoinAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }
            // InternalSQLParser.g:6902:2: ( rule__FromTable__FjoinAssignment_1 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==STRAIGHT_JOIN||LA81_0==NATURAL||LA81_0==CROSS||LA81_0==INNER||LA81_0==RIGHT||LA81_0==FULL||LA81_0==JOIN||LA81_0==LEFT) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalSQLParser.g:6902:3: rule__FromTable__FjoinAssignment_1
            	    {
            	    pushFollow(FOLLOW_34);
            	    rule__FromTable__FjoinAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__0"
    // InternalSQLParser.g:6911:1: rule__FromTableJoin__Group__0 : rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 ;
    public final void rule__FromTableJoin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6915:1: ( rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 )
            // InternalSQLParser.g:6916:2: rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__FromTableJoin__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0"


    // $ANTLR start "rule__FromTableJoin__Group__0__Impl"
    // InternalSQLParser.g:6923:1: rule__FromTableJoin__Group__0__Impl : ( ( rule__FromTableJoin__JoinAssignment_0 ) ) ;
    public final void rule__FromTableJoin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6927:1: ( ( ( rule__FromTableJoin__JoinAssignment_0 ) ) )
            // InternalSQLParser.g:6928:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            {
            // InternalSQLParser.g:6928:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            // InternalSQLParser.g:6929:2: ( rule__FromTableJoin__JoinAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }
            // InternalSQLParser.g:6930:2: ( rule__FromTableJoin__JoinAssignment_0 )
            // InternalSQLParser.g:6930:3: rule__FromTableJoin__JoinAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__1"
    // InternalSQLParser.g:6938:1: rule__FromTableJoin__Group__1 : rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 ;
    public final void rule__FromTableJoin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6942:1: ( rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 )
            // InternalSQLParser.g:6943:2: rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__FromTableJoin__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1"


    // $ANTLR start "rule__FromTableJoin__Group__1__Impl"
    // InternalSQLParser.g:6950:1: rule__FromTableJoin__Group__1__Impl : ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) ;
    public final void rule__FromTableJoin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6954:1: ( ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) )
            // InternalSQLParser.g:6955:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            {
            // InternalSQLParser.g:6955:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            // InternalSQLParser.g:6956:2: ( rule__FromTableJoin__OnTableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }
            // InternalSQLParser.g:6957:2: ( rule__FromTableJoin__OnTableAssignment_1 )
            // InternalSQLParser.g:6957:3: rule__FromTableJoin__OnTableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__OnTableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__2"
    // InternalSQLParser.g:6965:1: rule__FromTableJoin__Group__2 : rule__FromTableJoin__Group__2__Impl ;
    public final void rule__FromTableJoin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6969:1: ( rule__FromTableJoin__Group__2__Impl )
            // InternalSQLParser.g:6970:2: rule__FromTableJoin__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2"


    // $ANTLR start "rule__FromTableJoin__Group__2__Impl"
    // InternalSQLParser.g:6976:1: rule__FromTableJoin__Group__2__Impl : ( ( rule__FromTableJoin__Alternatives_2 ) ) ;
    public final void rule__FromTableJoin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6980:1: ( ( ( rule__FromTableJoin__Alternatives_2 ) ) )
            // InternalSQLParser.g:6981:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            {
            // InternalSQLParser.g:6981:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            // InternalSQLParser.g:6982:2: ( rule__FromTableJoin__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:6983:2: ( rule__FromTableJoin__Alternatives_2 )
            // InternalSQLParser.g:6983:3: rule__FromTableJoin__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0"
    // InternalSQLParser.g:6992:1: rule__FromTableJoin__Group_2_0__0 : rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 ;
    public final void rule__FromTableJoin__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6996:1: ( rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 )
            // InternalSQLParser.g:6997:2: rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1
            {
            pushFollow(FOLLOW_24);
            rule__FromTableJoin__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0__Impl"
    // InternalSQLParser.g:7004:1: rule__FromTableJoin__Group_2_0__0__Impl : ( ON ) ;
    public final void rule__FromTableJoin__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7008:1: ( ( ON ) )
            // InternalSQLParser.g:7009:1: ( ON )
            {
            // InternalSQLParser.g:7009:1: ( ON )
            // InternalSQLParser.g:7010:2: ON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }
            match(input,ON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1"
    // InternalSQLParser.g:7019:1: rule__FromTableJoin__Group_2_0__1 : rule__FromTableJoin__Group_2_0__1__Impl ;
    public final void rule__FromTableJoin__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7023:1: ( rule__FromTableJoin__Group_2_0__1__Impl )
            // InternalSQLParser.g:7024:2: rule__FromTableJoin__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1__Impl"
    // InternalSQLParser.g:7030:1: rule__FromTableJoin__Group_2_0__1__Impl : ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) ;
    public final void rule__FromTableJoin__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7034:1: ( ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) )
            // InternalSQLParser.g:7035:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            {
            // InternalSQLParser.g:7035:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            // InternalSQLParser.g:7036:2: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }
            // InternalSQLParser.g:7037:2: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            // InternalSQLParser.g:7037:3: rule__FromTableJoin__JoinExprAssignment_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinExprAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__0"
    // InternalSQLParser.g:7046:1: rule__JoinCondition__Group__0 : rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 ;
    public final void rule__JoinCondition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7050:1: ( rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 )
            // InternalSQLParser.g:7051:2: rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__JoinCondition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0"


    // $ANTLR start "rule__JoinCondition__Group__0__Impl"
    // InternalSQLParser.g:7058:1: rule__JoinCondition__Group__0__Impl : ( USING ) ;
    public final void rule__JoinCondition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7062:1: ( ( USING ) )
            // InternalSQLParser.g:7063:1: ( USING )
            {
            // InternalSQLParser.g:7063:1: ( USING )
            // InternalSQLParser.g:7064:2: USING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }
            match(input,USING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0__Impl"


    // $ANTLR start "rule__JoinCondition__Group__1"
    // InternalSQLParser.g:7073:1: rule__JoinCondition__Group__1 : rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 ;
    public final void rule__JoinCondition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7077:1: ( rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 )
            // InternalSQLParser.g:7078:2: rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__JoinCondition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1"


    // $ANTLR start "rule__JoinCondition__Group__1__Impl"
    // InternalSQLParser.g:7085:1: rule__JoinCondition__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__JoinCondition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7089:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7090:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7090:1: ( LeftParenthesis )
            // InternalSQLParser.g:7091:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__2"
    // InternalSQLParser.g:7100:1: rule__JoinCondition__Group__2 : rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 ;
    public final void rule__JoinCondition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7104:1: ( rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 )
            // InternalSQLParser.g:7105:2: rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__JoinCondition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2"


    // $ANTLR start "rule__JoinCondition__Group__2__Impl"
    // InternalSQLParser.g:7112:1: rule__JoinCondition__Group__2__Impl : ( ( rule__JoinCondition__UseColsAssignment_2 ) ) ;
    public final void rule__JoinCondition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7116:1: ( ( ( rule__JoinCondition__UseColsAssignment_2 ) ) )
            // InternalSQLParser.g:7117:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            {
            // InternalSQLParser.g:7117:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            // InternalSQLParser.g:7118:2: ( rule__JoinCondition__UseColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }
            // InternalSQLParser.g:7119:2: ( rule__JoinCondition__UseColsAssignment_2 )
            // InternalSQLParser.g:7119:3: rule__JoinCondition__UseColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__UseColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2__Impl"


    // $ANTLR start "rule__JoinCondition__Group__3"
    // InternalSQLParser.g:7127:1: rule__JoinCondition__Group__3 : rule__JoinCondition__Group__3__Impl ;
    public final void rule__JoinCondition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7131:1: ( rule__JoinCondition__Group__3__Impl )
            // InternalSQLParser.g:7132:2: rule__JoinCondition__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3"


    // $ANTLR start "rule__JoinCondition__Group__3__Impl"
    // InternalSQLParser.g:7138:1: rule__JoinCondition__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__JoinCondition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7142:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7143:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7143:1: ( RightParenthesis )
            // InternalSQLParser.g:7144:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3__Impl"


    // $ANTLR start "rule__UsingCols__Group__0"
    // InternalSQLParser.g:7154:1: rule__UsingCols__Group__0 : rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 ;
    public final void rule__UsingCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7158:1: ( rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 )
            // InternalSQLParser.g:7159:2: rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__UsingCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0"


    // $ANTLR start "rule__UsingCols__Group__0__Impl"
    // InternalSQLParser.g:7166:1: rule__UsingCols__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7170:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:7171:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:7171:1: ( ruleDbObjectName )
            // InternalSQLParser.g:7172:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0__Impl"


    // $ANTLR start "rule__UsingCols__Group__1"
    // InternalSQLParser.g:7181:1: rule__UsingCols__Group__1 : rule__UsingCols__Group__1__Impl ;
    public final void rule__UsingCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7185:1: ( rule__UsingCols__Group__1__Impl )
            // InternalSQLParser.g:7186:2: rule__UsingCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1"


    // $ANTLR start "rule__UsingCols__Group__1__Impl"
    // InternalSQLParser.g:7192:1: rule__UsingCols__Group__1__Impl : ( ( rule__UsingCols__Group_1__0 )? ) ;
    public final void rule__UsingCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7196:1: ( ( ( rule__UsingCols__Group_1__0 )? ) )
            // InternalSQLParser.g:7197:1: ( ( rule__UsingCols__Group_1__0 )? )
            {
            // InternalSQLParser.g:7197:1: ( ( rule__UsingCols__Group_1__0 )? )
            // InternalSQLParser.g:7198:2: ( rule__UsingCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:7199:2: ( rule__UsingCols__Group_1__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==Comma) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSQLParser.g:7199:3: rule__UsingCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UsingCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__0"
    // InternalSQLParser.g:7208:1: rule__UsingCols__Group_1__0 : rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 ;
    public final void rule__UsingCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7212:1: ( rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 )
            // InternalSQLParser.g:7213:2: rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__UsingCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0"


    // $ANTLR start "rule__UsingCols__Group_1__0__Impl"
    // InternalSQLParser.g:7220:1: rule__UsingCols__Group_1__0__Impl : ( () ) ;
    public final void rule__UsingCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7224:1: ( ( () ) )
            // InternalSQLParser.g:7225:1: ( () )
            {
            // InternalSQLParser.g:7225:1: ( () )
            // InternalSQLParser.g:7226:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:7227:2: ()
            // InternalSQLParser.g:7227:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__1"
    // InternalSQLParser.g:7235:1: rule__UsingCols__Group_1__1 : rule__UsingCols__Group_1__1__Impl ;
    public final void rule__UsingCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7239:1: ( rule__UsingCols__Group_1__1__Impl )
            // InternalSQLParser.g:7240:2: rule__UsingCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1"


    // $ANTLR start "rule__UsingCols__Group_1__1__Impl"
    // InternalSQLParser.g:7246:1: rule__UsingCols__Group_1__1__Impl : ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) ;
    public final void rule__UsingCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7250:1: ( ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:7251:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:7251:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            // InternalSQLParser.g:7252:2: ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:7252:2: ( ( rule__UsingCols__Group_1_1__0 ) )
            // InternalSQLParser.g:7253:3: ( rule__UsingCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:7254:3: ( rule__UsingCols__Group_1_1__0 )
            // InternalSQLParser.g:7254:4: rule__UsingCols__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__UsingCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:7257:2: ( ( rule__UsingCols__Group_1_1__0 )* )
            // InternalSQLParser.g:7258:3: ( rule__UsingCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:7259:3: ( rule__UsingCols__Group_1_1__0 )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==Comma) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalSQLParser.g:7259:4: rule__UsingCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__UsingCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__0"
    // InternalSQLParser.g:7269:1: rule__UsingCols__Group_1_1__0 : rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 ;
    public final void rule__UsingCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7273:1: ( rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 )
            // InternalSQLParser.g:7274:2: rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__UsingCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0"


    // $ANTLR start "rule__UsingCols__Group_1_1__0__Impl"
    // InternalSQLParser.g:7281:1: rule__UsingCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UsingCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7285:1: ( ( Comma ) )
            // InternalSQLParser.g:7286:1: ( Comma )
            {
            // InternalSQLParser.g:7286:1: ( Comma )
            // InternalSQLParser.g:7287:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__1"
    // InternalSQLParser.g:7296:1: rule__UsingCols__Group_1_1__1 : rule__UsingCols__Group_1_1__1__Impl ;
    public final void rule__UsingCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7300:1: ( rule__UsingCols__Group_1_1__1__Impl )
            // InternalSQLParser.g:7301:2: rule__UsingCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1"


    // $ANTLR start "rule__UsingCols__Group_1_1__1__Impl"
    // InternalSQLParser.g:7307:1: rule__UsingCols__Group_1_1__1__Impl : ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UsingCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7311:1: ( ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:7312:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:7312:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:7313:2: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:7314:2: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:7314:3: rule__UsingCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__0"
    // InternalSQLParser.g:7323:1: rule__TableOrAlias__Group__0 : rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 ;
    public final void rule__TableOrAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7327:1: ( rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 )
            // InternalSQLParser.g:7328:2: rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__TableOrAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0"


    // $ANTLR start "rule__TableOrAlias__Group__0__Impl"
    // InternalSQLParser.g:7335:1: rule__TableOrAlias__Group__0__Impl : ( ( rule__TableOrAlias__Alternatives_0 ) ) ;
    public final void rule__TableOrAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7339:1: ( ( ( rule__TableOrAlias__Alternatives_0 ) ) )
            // InternalSQLParser.g:7340:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            {
            // InternalSQLParser.g:7340:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            // InternalSQLParser.g:7341:2: ( rule__TableOrAlias__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:7342:2: ( rule__TableOrAlias__Alternatives_0 )
            // InternalSQLParser.g:7342:3: rule__TableOrAlias__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__1"
    // InternalSQLParser.g:7350:1: rule__TableOrAlias__Group__1 : rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 ;
    public final void rule__TableOrAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7354:1: ( rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 )
            // InternalSQLParser.g:7355:2: rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__TableOrAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1"


    // $ANTLR start "rule__TableOrAlias__Group__1__Impl"
    // InternalSQLParser.g:7362:1: rule__TableOrAlias__Group__1__Impl : ( ( rule__TableOrAlias__Alternatives_1 )? ) ;
    public final void rule__TableOrAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7366:1: ( ( ( rule__TableOrAlias__Alternatives_1 )? ) )
            // InternalSQLParser.g:7367:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            {
            // InternalSQLParser.g:7367:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            // InternalSQLParser.g:7368:2: ( rule__TableOrAlias__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:7369:2: ( rule__TableOrAlias__Alternatives_1 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==UNPIVOT||LA84_0==PIVOT) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSQLParser.g:7369:3: rule__TableOrAlias__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__2"
    // InternalSQLParser.g:7377:1: rule__TableOrAlias__Group__2 : rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 ;
    public final void rule__TableOrAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7381:1: ( rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 )
            // InternalSQLParser.g:7382:2: rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3
            {
            pushFollow(FOLLOW_36);
            rule__TableOrAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2"


    // $ANTLR start "rule__TableOrAlias__Group__2__Impl"
    // InternalSQLParser.g:7389:1: rule__TableOrAlias__Group__2__Impl : ( ( rule__TableOrAlias__AliasAssignment_2 )? ) ;
    public final void rule__TableOrAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7393:1: ( ( ( rule__TableOrAlias__AliasAssignment_2 )? ) )
            // InternalSQLParser.g:7394:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            {
            // InternalSQLParser.g:7394:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            // InternalSQLParser.g:7395:2: ( rule__TableOrAlias__AliasAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }
            // InternalSQLParser.g:7396:2: ( rule__TableOrAlias__AliasAssignment_2 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==AS) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSQLParser.g:7396:3: rule__TableOrAlias__AliasAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__AliasAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__3"
    // InternalSQLParser.g:7404:1: rule__TableOrAlias__Group__3 : rule__TableOrAlias__Group__3__Impl ;
    public final void rule__TableOrAlias__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7408:1: ( rule__TableOrAlias__Group__3__Impl )
            // InternalSQLParser.g:7409:2: rule__TableOrAlias__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3"


    // $ANTLR start "rule__TableOrAlias__Group__3__Impl"
    // InternalSQLParser.g:7415:1: rule__TableOrAlias__Group__3__Impl : ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) ;
    public final void rule__TableOrAlias__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7419:1: ( ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) )
            // InternalSQLParser.g:7420:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            {
            // InternalSQLParser.g:7420:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            // InternalSQLParser.g:7421:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }
            // InternalSQLParser.g:7422:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( ((LA86_0>=RULE_STRING && LA86_0<=RULE_ID)) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalSQLParser.g:7422:3: rule__TableOrAlias__TblAliasAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TblAliasAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3__Impl"


    // $ANTLR start "rule__FromValues__Group__0"
    // InternalSQLParser.g:7431:1: rule__FromValues__Group__0 : rule__FromValues__Group__0__Impl rule__FromValues__Group__1 ;
    public final void rule__FromValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7435:1: ( rule__FromValues__Group__0__Impl rule__FromValues__Group__1 )
            // InternalSQLParser.g:7436:2: rule__FromValues__Group__0__Impl rule__FromValues__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__FromValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0"


    // $ANTLR start "rule__FromValues__Group__0__Impl"
    // InternalSQLParser.g:7443:1: rule__FromValues__Group__0__Impl : ( ( rule__FromValues__ValuesAssignment_0 ) ) ;
    public final void rule__FromValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7447:1: ( ( ( rule__FromValues__ValuesAssignment_0 ) ) )
            // InternalSQLParser.g:7448:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            {
            // InternalSQLParser.g:7448:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            // InternalSQLParser.g:7449:2: ( rule__FromValues__ValuesAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }
            // InternalSQLParser.g:7450:2: ( rule__FromValues__ValuesAssignment_0 )
            // InternalSQLParser.g:7450:3: rule__FromValues__ValuesAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__ValuesAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0__Impl"


    // $ANTLR start "rule__FromValues__Group__1"
    // InternalSQLParser.g:7458:1: rule__FromValues__Group__1 : rule__FromValues__Group__1__Impl ;
    public final void rule__FromValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7462:1: ( rule__FromValues__Group__1__Impl )
            // InternalSQLParser.g:7463:2: rule__FromValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1"


    // $ANTLR start "rule__FromValues__Group__1__Impl"
    // InternalSQLParser.g:7469:1: rule__FromValues__Group__1__Impl : ( ( rule__FromValues__CAssignment_1 )? ) ;
    public final void rule__FromValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7473:1: ( ( ( rule__FromValues__CAssignment_1 )? ) )
            // InternalSQLParser.g:7474:1: ( ( rule__FromValues__CAssignment_1 )? )
            {
            // InternalSQLParser.g:7474:1: ( ( rule__FromValues__CAssignment_1 )? )
            // InternalSQLParser.g:7475:2: ( rule__FromValues__CAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }
            // InternalSQLParser.g:7476:2: ( rule__FromValues__CAssignment_1 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_ID) ) {
                int LA87_1 = input.LA(2);

                if ( (LA87_1==LeftParenthesis) ) {
                    alt87=1;
                }
            }
            switch (alt87) {
                case 1 :
                    // InternalSQLParser.g:7476:3: rule__FromValues__CAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValues__CAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__0"
    // InternalSQLParser.g:7485:1: rule__FromValuesColumns__Group__0 : rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 ;
    public final void rule__FromValuesColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7489:1: ( rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 )
            // InternalSQLParser.g:7490:2: rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FromValuesColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0"


    // $ANTLR start "rule__FromValuesColumns__Group__0__Impl"
    // InternalSQLParser.g:7497:1: rule__FromValuesColumns__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FromValuesColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7501:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:7502:1: ( RULE_ID )
            {
            // InternalSQLParser.g:7502:1: ( RULE_ID )
            // InternalSQLParser.g:7503:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__1"
    // InternalSQLParser.g:7512:1: rule__FromValuesColumns__Group__1 : rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 ;
    public final void rule__FromValuesColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7516:1: ( rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 )
            // InternalSQLParser.g:7517:2: rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2
            {
            pushFollow(FOLLOW_38);
            rule__FromValuesColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1"


    // $ANTLR start "rule__FromValuesColumns__Group__1__Impl"
    // InternalSQLParser.g:7524:1: rule__FromValuesColumns__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FromValuesColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7528:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7529:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7529:1: ( LeftParenthesis )
            // InternalSQLParser.g:7530:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__2"
    // InternalSQLParser.g:7539:1: rule__FromValuesColumns__Group__2 : rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 ;
    public final void rule__FromValuesColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7543:1: ( rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 )
            // InternalSQLParser.g:7544:2: rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__FromValuesColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2"


    // $ANTLR start "rule__FromValuesColumns__Group__2__Impl"
    // InternalSQLParser.g:7551:1: rule__FromValuesColumns__Group__2__Impl : ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) ;
    public final void rule__FromValuesColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7555:1: ( ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) )
            // InternalSQLParser.g:7556:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            {
            // InternalSQLParser.g:7556:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            // InternalSQLParser.g:7557:2: ( rule__FromValuesColumns__FvColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }
            // InternalSQLParser.g:7558:2: ( rule__FromValuesColumns__FvColsAssignment_2 )
            // InternalSQLParser.g:7558:3: rule__FromValuesColumns__FvColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__FvColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__3"
    // InternalSQLParser.g:7566:1: rule__FromValuesColumns__Group__3 : rule__FromValuesColumns__Group__3__Impl ;
    public final void rule__FromValuesColumns__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7570:1: ( rule__FromValuesColumns__Group__3__Impl )
            // InternalSQLParser.g:7571:2: rule__FromValuesColumns__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3"


    // $ANTLR start "rule__FromValuesColumns__Group__3__Impl"
    // InternalSQLParser.g:7577:1: rule__FromValuesColumns__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FromValuesColumns__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7581:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7582:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7582:1: ( RightParenthesis )
            // InternalSQLParser.g:7583:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0"
    // InternalSQLParser.g:7593:1: rule__FromValuesColumnNames__Group__0 : rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 ;
    public final void rule__FromValuesColumnNames__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7597:1: ( rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 )
            // InternalSQLParser.g:7598:2: rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__FromValuesColumnNames__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0__Impl"
    // InternalSQLParser.g:7605:1: rule__FromValuesColumnNames__Group__0__Impl : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7609:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:7610:1: ( ruleColumnName )
            {
            // InternalSQLParser.g:7610:1: ( ruleColumnName )
            // InternalSQLParser.g:7611:2: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1"
    // InternalSQLParser.g:7620:1: rule__FromValuesColumnNames__Group__1 : rule__FromValuesColumnNames__Group__1__Impl ;
    public final void rule__FromValuesColumnNames__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7624:1: ( rule__FromValuesColumnNames__Group__1__Impl )
            // InternalSQLParser.g:7625:2: rule__FromValuesColumnNames__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1__Impl"
    // InternalSQLParser.g:7631:1: rule__FromValuesColumnNames__Group__1__Impl : ( ( rule__FromValuesColumnNames__Group_1__0 )? ) ;
    public final void rule__FromValuesColumnNames__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7635:1: ( ( ( rule__FromValuesColumnNames__Group_1__0 )? ) )
            // InternalSQLParser.g:7636:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            {
            // InternalSQLParser.g:7636:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            // InternalSQLParser.g:7637:2: ( rule__FromValuesColumnNames__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:7638:2: ( rule__FromValuesColumnNames__Group_1__0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==Comma) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSQLParser.g:7638:3: rule__FromValuesColumnNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValuesColumnNames__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0"
    // InternalSQLParser.g:7647:1: rule__FromValuesColumnNames__Group_1__0 : rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7651:1: ( rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 )
            // InternalSQLParser.g:7652:2: rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__FromValuesColumnNames__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0__Impl"
    // InternalSQLParser.g:7659:1: rule__FromValuesColumnNames__Group_1__0__Impl : ( () ) ;
    public final void rule__FromValuesColumnNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7663:1: ( ( () ) )
            // InternalSQLParser.g:7664:1: ( () )
            {
            // InternalSQLParser.g:7664:1: ( () )
            // InternalSQLParser.g:7665:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:7666:2: ()
            // InternalSQLParser.g:7666:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1"
    // InternalSQLParser.g:7674:1: rule__FromValuesColumnNames__Group_1__1 : rule__FromValuesColumnNames__Group_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7678:1: ( rule__FromValuesColumnNames__Group_1__1__Impl )
            // InternalSQLParser.g:7679:2: rule__FromValuesColumnNames__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1__Impl"
    // InternalSQLParser.g:7685:1: rule__FromValuesColumnNames__Group_1__1__Impl : ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) ;
    public final void rule__FromValuesColumnNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7689:1: ( ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:7690:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:7690:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            // InternalSQLParser.g:7691:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:7691:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) )
            // InternalSQLParser.g:7692:3: ( rule__FromValuesColumnNames__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:7693:3: ( rule__FromValuesColumnNames__Group_1_1__0 )
            // InternalSQLParser.g:7693:4: rule__FromValuesColumnNames__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__FromValuesColumnNames__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:7696:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            // InternalSQLParser.g:7697:3: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:7698:3: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==Comma) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSQLParser.g:7698:4: rule__FromValuesColumnNames__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__FromValuesColumnNames__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0"
    // InternalSQLParser.g:7708:1: rule__FromValuesColumnNames__Group_1_1__0 : rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7712:1: ( rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 )
            // InternalSQLParser.g:7713:2: rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1
            {
            pushFollow(FOLLOW_38);
            rule__FromValuesColumnNames__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0__Impl"
    // InternalSQLParser.g:7720:1: rule__FromValuesColumnNames__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7724:1: ( ( Comma ) )
            // InternalSQLParser.g:7725:1: ( Comma )
            {
            // InternalSQLParser.g:7725:1: ( Comma )
            // InternalSQLParser.g:7726:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1"
    // InternalSQLParser.g:7735:1: rule__FromValuesColumnNames__Group_1_1__1 : rule__FromValuesColumnNames__Group_1_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7739:1: ( rule__FromValuesColumnNames__Group_1_1__1__Impl )
            // InternalSQLParser.g:7740:2: rule__FromValuesColumnNames__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1__Impl"
    // InternalSQLParser.g:7746:1: rule__FromValuesColumnNames__Group_1_1__1__Impl : ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7750:1: ( ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:7751:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:7751:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:7752:2: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:7753:2: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:7753:3: rule__FromValuesColumnNames__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1__Impl"


    // $ANTLR start "rule__Values__Group__0"
    // InternalSQLParser.g:7762:1: rule__Values__Group__0 : rule__Values__Group__0__Impl rule__Values__Group__1 ;
    public final void rule__Values__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7766:1: ( rule__Values__Group__0__Impl rule__Values__Group__1 )
            // InternalSQLParser.g:7767:2: rule__Values__Group__0__Impl rule__Values__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__Values__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0"


    // $ANTLR start "rule__Values__Group__0__Impl"
    // InternalSQLParser.g:7774:1: rule__Values__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Values__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7778:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7779:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7779:1: ( LeftParenthesis )
            // InternalSQLParser.g:7780:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0__Impl"


    // $ANTLR start "rule__Values__Group__1"
    // InternalSQLParser.g:7789:1: rule__Values__Group__1 : rule__Values__Group__1__Impl rule__Values__Group__2 ;
    public final void rule__Values__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7793:1: ( rule__Values__Group__1__Impl rule__Values__Group__2 )
            // InternalSQLParser.g:7794:2: rule__Values__Group__1__Impl rule__Values__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Values__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1"


    // $ANTLR start "rule__Values__Group__1__Impl"
    // InternalSQLParser.g:7801:1: rule__Values__Group__1__Impl : ( VALUES ) ;
    public final void rule__Values__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7805:1: ( ( VALUES ) )
            // InternalSQLParser.g:7806:1: ( VALUES )
            {
            // InternalSQLParser.g:7806:1: ( VALUES )
            // InternalSQLParser.g:7807:2: VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }
            match(input,VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1__Impl"


    // $ANTLR start "rule__Values__Group__2"
    // InternalSQLParser.g:7816:1: rule__Values__Group__2 : rule__Values__Group__2__Impl rule__Values__Group__3 ;
    public final void rule__Values__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7820:1: ( rule__Values__Group__2__Impl rule__Values__Group__3 )
            // InternalSQLParser.g:7821:2: rule__Values__Group__2__Impl rule__Values__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__Values__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2"


    // $ANTLR start "rule__Values__Group__2__Impl"
    // InternalSQLParser.g:7828:1: rule__Values__Group__2__Impl : ( ( rule__Values__RowsAssignment_2 ) ) ;
    public final void rule__Values__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7832:1: ( ( ( rule__Values__RowsAssignment_2 ) ) )
            // InternalSQLParser.g:7833:1: ( ( rule__Values__RowsAssignment_2 ) )
            {
            // InternalSQLParser.g:7833:1: ( ( rule__Values__RowsAssignment_2 ) )
            // InternalSQLParser.g:7834:2: ( rule__Values__RowsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }
            // InternalSQLParser.g:7835:2: ( rule__Values__RowsAssignment_2 )
            // InternalSQLParser.g:7835:3: rule__Values__RowsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Values__RowsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2__Impl"


    // $ANTLR start "rule__Values__Group__3"
    // InternalSQLParser.g:7843:1: rule__Values__Group__3 : rule__Values__Group__3__Impl ;
    public final void rule__Values__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7847:1: ( rule__Values__Group__3__Impl )
            // InternalSQLParser.g:7848:2: rule__Values__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3"


    // $ANTLR start "rule__Values__Group__3__Impl"
    // InternalSQLParser.g:7854:1: rule__Values__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__Values__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7858:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7859:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7859:1: ( RightParenthesis )
            // InternalSQLParser.g:7860:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3__Impl"


    // $ANTLR start "rule__Rows__Group__0"
    // InternalSQLParser.g:7870:1: rule__Rows__Group__0 : rule__Rows__Group__0__Impl rule__Rows__Group__1 ;
    public final void rule__Rows__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7874:1: ( rule__Rows__Group__0__Impl rule__Rows__Group__1 )
            // InternalSQLParser.g:7875:2: rule__Rows__Group__0__Impl rule__Rows__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__Rows__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0"


    // $ANTLR start "rule__Rows__Group__0__Impl"
    // InternalSQLParser.g:7882:1: rule__Rows__Group__0__Impl : ( ruleRow ) ;
    public final void rule__Rows__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7886:1: ( ( ruleRow ) )
            // InternalSQLParser.g:7887:1: ( ruleRow )
            {
            // InternalSQLParser.g:7887:1: ( ruleRow )
            // InternalSQLParser.g:7888:2: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0__Impl"


    // $ANTLR start "rule__Rows__Group__1"
    // InternalSQLParser.g:7897:1: rule__Rows__Group__1 : rule__Rows__Group__1__Impl ;
    public final void rule__Rows__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7901:1: ( rule__Rows__Group__1__Impl )
            // InternalSQLParser.g:7902:2: rule__Rows__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1"


    // $ANTLR start "rule__Rows__Group__1__Impl"
    // InternalSQLParser.g:7908:1: rule__Rows__Group__1__Impl : ( ( rule__Rows__Group_1__0 )? ) ;
    public final void rule__Rows__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7912:1: ( ( ( rule__Rows__Group_1__0 )? ) )
            // InternalSQLParser.g:7913:1: ( ( rule__Rows__Group_1__0 )? )
            {
            // InternalSQLParser.g:7913:1: ( ( rule__Rows__Group_1__0 )? )
            // InternalSQLParser.g:7914:2: ( rule__Rows__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:7915:2: ( rule__Rows__Group_1__0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==Comma) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSQLParser.g:7915:3: rule__Rows__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Rows__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1__Impl"


    // $ANTLR start "rule__Rows__Group_1__0"
    // InternalSQLParser.g:7924:1: rule__Rows__Group_1__0 : rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 ;
    public final void rule__Rows__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7928:1: ( rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 )
            // InternalSQLParser.g:7929:2: rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Rows__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0"


    // $ANTLR start "rule__Rows__Group_1__0__Impl"
    // InternalSQLParser.g:7936:1: rule__Rows__Group_1__0__Impl : ( () ) ;
    public final void rule__Rows__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7940:1: ( ( () ) )
            // InternalSQLParser.g:7941:1: ( () )
            {
            // InternalSQLParser.g:7941:1: ( () )
            // InternalSQLParser.g:7942:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:7943:2: ()
            // InternalSQLParser.g:7943:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1__1"
    // InternalSQLParser.g:7951:1: rule__Rows__Group_1__1 : rule__Rows__Group_1__1__Impl ;
    public final void rule__Rows__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7955:1: ( rule__Rows__Group_1__1__Impl )
            // InternalSQLParser.g:7956:2: rule__Rows__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1"


    // $ANTLR start "rule__Rows__Group_1__1__Impl"
    // InternalSQLParser.g:7962:1: rule__Rows__Group_1__1__Impl : ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) ;
    public final void rule__Rows__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7966:1: ( ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:7967:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:7967:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            // InternalSQLParser.g:7968:2: ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:7968:2: ( ( rule__Rows__Group_1_1__0 ) )
            // InternalSQLParser.g:7969:3: ( rule__Rows__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:7970:3: ( rule__Rows__Group_1_1__0 )
            // InternalSQLParser.g:7970:4: rule__Rows__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__Rows__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:7973:2: ( ( rule__Rows__Group_1_1__0 )* )
            // InternalSQLParser.g:7974:3: ( rule__Rows__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:7975:3: ( rule__Rows__Group_1_1__0 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==Comma) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalSQLParser.g:7975:4: rule__Rows__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Rows__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__0"
    // InternalSQLParser.g:7985:1: rule__Rows__Group_1_1__0 : rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 ;
    public final void rule__Rows__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7989:1: ( rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 )
            // InternalSQLParser.g:7990:2: rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Rows__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0"


    // $ANTLR start "rule__Rows__Group_1_1__0__Impl"
    // InternalSQLParser.g:7997:1: rule__Rows__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Rows__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8001:1: ( ( Comma ) )
            // InternalSQLParser.g:8002:1: ( Comma )
            {
            // InternalSQLParser.g:8002:1: ( Comma )
            // InternalSQLParser.g:8003:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__1"
    // InternalSQLParser.g:8012:1: rule__Rows__Group_1_1__1 : rule__Rows__Group_1_1__1__Impl ;
    public final void rule__Rows__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8016:1: ( rule__Rows__Group_1_1__1__Impl )
            // InternalSQLParser.g:8017:2: rule__Rows__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1"


    // $ANTLR start "rule__Rows__Group_1_1__1__Impl"
    // InternalSQLParser.g:8023:1: rule__Rows__Group_1_1__1__Impl : ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Rows__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8027:1: ( ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:8028:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:8028:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:8029:2: ( rule__Rows__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:8030:2: ( rule__Rows__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:8030:3: rule__Rows__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Rows__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1__Impl"


    // $ANTLR start "rule__Row__Group__0"
    // InternalSQLParser.g:8039:1: rule__Row__Group__0 : rule__Row__Group__0__Impl rule__Row__Group__1 ;
    public final void rule__Row__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8043:1: ( rule__Row__Group__0__Impl rule__Row__Group__1 )
            // InternalSQLParser.g:8044:2: rule__Row__Group__0__Impl rule__Row__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__Row__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0"


    // $ANTLR start "rule__Row__Group__0__Impl"
    // InternalSQLParser.g:8051:1: rule__Row__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Row__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8055:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:8056:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:8056:1: ( LeftParenthesis )
            // InternalSQLParser.g:8057:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0__Impl"


    // $ANTLR start "rule__Row__Group__1"
    // InternalSQLParser.g:8066:1: rule__Row__Group__1 : rule__Row__Group__1__Impl rule__Row__Group__2 ;
    public final void rule__Row__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8070:1: ( rule__Row__Group__1__Impl rule__Row__Group__2 )
            // InternalSQLParser.g:8071:2: rule__Row__Group__1__Impl rule__Row__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Row__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1"


    // $ANTLR start "rule__Row__Group__1__Impl"
    // InternalSQLParser.g:8078:1: rule__Row__Group__1__Impl : ( ( rule__Row__RowValuesAssignment_1 ) ) ;
    public final void rule__Row__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8082:1: ( ( ( rule__Row__RowValuesAssignment_1 ) ) )
            // InternalSQLParser.g:8083:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            {
            // InternalSQLParser.g:8083:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            // InternalSQLParser.g:8084:2: ( rule__Row__RowValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }
            // InternalSQLParser.g:8085:2: ( rule__Row__RowValuesAssignment_1 )
            // InternalSQLParser.g:8085:3: rule__Row__RowValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Row__RowValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1__Impl"


    // $ANTLR start "rule__Row__Group__2"
    // InternalSQLParser.g:8093:1: rule__Row__Group__2 : rule__Row__Group__2__Impl ;
    public final void rule__Row__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8097:1: ( rule__Row__Group__2__Impl )
            // InternalSQLParser.g:8098:2: rule__Row__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2"


    // $ANTLR start "rule__Row__Group__2__Impl"
    // InternalSQLParser.g:8104:1: rule__Row__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__Row__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8108:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:8109:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:8109:1: ( RightParenthesis )
            // InternalSQLParser.g:8110:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2__Impl"


    // $ANTLR start "rule__RowValues__Group__0"
    // InternalSQLParser.g:8120:1: rule__RowValues__Group__0 : rule__RowValues__Group__0__Impl rule__RowValues__Group__1 ;
    public final void rule__RowValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8124:1: ( rule__RowValues__Group__0__Impl rule__RowValues__Group__1 )
            // InternalSQLParser.g:8125:2: rule__RowValues__Group__0__Impl rule__RowValues__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__RowValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0"


    // $ANTLR start "rule__RowValues__Group__0__Impl"
    // InternalSQLParser.g:8132:1: rule__RowValues__Group__0__Impl : ( ruleRowValue ) ;
    public final void rule__RowValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8136:1: ( ( ruleRowValue ) )
            // InternalSQLParser.g:8137:1: ( ruleRowValue )
            {
            // InternalSQLParser.g:8137:1: ( ruleRowValue )
            // InternalSQLParser.g:8138:2: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0__Impl"


    // $ANTLR start "rule__RowValues__Group__1"
    // InternalSQLParser.g:8147:1: rule__RowValues__Group__1 : rule__RowValues__Group__1__Impl ;
    public final void rule__RowValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8151:1: ( rule__RowValues__Group__1__Impl )
            // InternalSQLParser.g:8152:2: rule__RowValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1"


    // $ANTLR start "rule__RowValues__Group__1__Impl"
    // InternalSQLParser.g:8158:1: rule__RowValues__Group__1__Impl : ( ( rule__RowValues__Group_1__0 )? ) ;
    public final void rule__RowValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8162:1: ( ( ( rule__RowValues__Group_1__0 )? ) )
            // InternalSQLParser.g:8163:1: ( ( rule__RowValues__Group_1__0 )? )
            {
            // InternalSQLParser.g:8163:1: ( ( rule__RowValues__Group_1__0 )? )
            // InternalSQLParser.g:8164:2: ( rule__RowValues__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:8165:2: ( rule__RowValues__Group_1__0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==Comma) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalSQLParser.g:8165:3: rule__RowValues__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValues__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1__0"
    // InternalSQLParser.g:8174:1: rule__RowValues__Group_1__0 : rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 ;
    public final void rule__RowValues__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8178:1: ( rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 )
            // InternalSQLParser.g:8179:2: rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__RowValues__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0"


    // $ANTLR start "rule__RowValues__Group_1__0__Impl"
    // InternalSQLParser.g:8186:1: rule__RowValues__Group_1__0__Impl : ( () ) ;
    public final void rule__RowValues__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8190:1: ( ( () ) )
            // InternalSQLParser.g:8191:1: ( () )
            {
            // InternalSQLParser.g:8191:1: ( () )
            // InternalSQLParser.g:8192:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:8193:2: ()
            // InternalSQLParser.g:8193:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1__1"
    // InternalSQLParser.g:8201:1: rule__RowValues__Group_1__1 : rule__RowValues__Group_1__1__Impl ;
    public final void rule__RowValues__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8205:1: ( rule__RowValues__Group_1__1__Impl )
            // InternalSQLParser.g:8206:2: rule__RowValues__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1"


    // $ANTLR start "rule__RowValues__Group_1__1__Impl"
    // InternalSQLParser.g:8212:1: rule__RowValues__Group_1__1__Impl : ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) ;
    public final void rule__RowValues__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8216:1: ( ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:8217:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:8217:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            // InternalSQLParser.g:8218:2: ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:8218:2: ( ( rule__RowValues__Group_1_1__0 ) )
            // InternalSQLParser.g:8219:3: ( rule__RowValues__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8220:3: ( rule__RowValues__Group_1_1__0 )
            // InternalSQLParser.g:8220:4: rule__RowValues__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__RowValues__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:8223:2: ( ( rule__RowValues__Group_1_1__0 )* )
            // InternalSQLParser.g:8224:3: ( rule__RowValues__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8225:3: ( rule__RowValues__Group_1_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==Comma) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalSQLParser.g:8225:4: rule__RowValues__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__RowValues__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__0"
    // InternalSQLParser.g:8235:1: rule__RowValues__Group_1_1__0 : rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 ;
    public final void rule__RowValues__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8239:1: ( rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 )
            // InternalSQLParser.g:8240:2: rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1
            {
            pushFollow(FOLLOW_40);
            rule__RowValues__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0"


    // $ANTLR start "rule__RowValues__Group_1_1__0__Impl"
    // InternalSQLParser.g:8247:1: rule__RowValues__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__RowValues__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8251:1: ( ( Comma ) )
            // InternalSQLParser.g:8252:1: ( Comma )
            {
            // InternalSQLParser.g:8252:1: ( Comma )
            // InternalSQLParser.g:8253:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__1"
    // InternalSQLParser.g:8262:1: rule__RowValues__Group_1_1__1 : rule__RowValues__Group_1_1__1__Impl ;
    public final void rule__RowValues__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8266:1: ( rule__RowValues__Group_1_1__1__Impl )
            // InternalSQLParser.g:8267:2: rule__RowValues__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1"


    // $ANTLR start "rule__RowValues__Group_1_1__1__Impl"
    // InternalSQLParser.g:8273:1: rule__RowValues__Group_1_1__1__Impl : ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__RowValues__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8277:1: ( ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:8278:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:8278:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:8279:2: ( rule__RowValues__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:8280:2: ( rule__RowValues__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:8280:3: rule__RowValues__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__0"
    // InternalSQLParser.g:8289:1: rule__PivotTable__Group__0 : rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 ;
    public final void rule__PivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8293:1: ( rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 )
            // InternalSQLParser.g:8294:2: rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__PivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0"


    // $ANTLR start "rule__PivotTable__Group__0__Impl"
    // InternalSQLParser.g:8301:1: rule__PivotTable__Group__0__Impl : ( PIVOT ) ;
    public final void rule__PivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8305:1: ( ( PIVOT ) )
            // InternalSQLParser.g:8306:1: ( PIVOT )
            {
            // InternalSQLParser.g:8306:1: ( PIVOT )
            // InternalSQLParser.g:8307:2: PIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }
            match(input,PIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0__Impl"


    // $ANTLR start "rule__PivotTable__Group__1"
    // InternalSQLParser.g:8316:1: rule__PivotTable__Group__1 : rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 ;
    public final void rule__PivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8320:1: ( rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 )
            // InternalSQLParser.g:8321:2: rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__PivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1"


    // $ANTLR start "rule__PivotTable__Group__1__Impl"
    // InternalSQLParser.g:8328:1: rule__PivotTable__Group__1__Impl : ( ( XML )? ) ;
    public final void rule__PivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8332:1: ( ( ( XML )? ) )
            // InternalSQLParser.g:8333:1: ( ( XML )? )
            {
            // InternalSQLParser.g:8333:1: ( ( XML )? )
            // InternalSQLParser.g:8334:2: ( XML )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }
            // InternalSQLParser.g:8335:2: ( XML )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==XML) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSQLParser.g:8335:3: XML
                    {
                    match(input,XML,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__2"
    // InternalSQLParser.g:8343:1: rule__PivotTable__Group__2 : rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 ;
    public final void rule__PivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8347:1: ( rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 )
            // InternalSQLParser.g:8348:2: rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__PivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2"


    // $ANTLR start "rule__PivotTable__Group__2__Impl"
    // InternalSQLParser.g:8355:1: rule__PivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8359:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:8360:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:8360:1: ( LeftParenthesis )
            // InternalSQLParser.g:8361:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2__Impl"


    // $ANTLR start "rule__PivotTable__Group__3"
    // InternalSQLParser.g:8370:1: rule__PivotTable__Group__3 : rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 ;
    public final void rule__PivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8374:1: ( rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 )
            // InternalSQLParser.g:8375:2: rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4
            {
            pushFollow(FOLLOW_42);
            rule__PivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3"


    // $ANTLR start "rule__PivotTable__Group__3__Impl"
    // InternalSQLParser.g:8382:1: rule__PivotTable__Group__3__Impl : ( ( rule__PivotTable__PfunAssignment_3 ) ) ;
    public final void rule__PivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8386:1: ( ( ( rule__PivotTable__PfunAssignment_3 ) ) )
            // InternalSQLParser.g:8387:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            {
            // InternalSQLParser.g:8387:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            // InternalSQLParser.g:8388:2: ( rule__PivotTable__PfunAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }
            // InternalSQLParser.g:8389:2: ( rule__PivotTable__PfunAssignment_3 )
            // InternalSQLParser.g:8389:3: rule__PivotTable__PfunAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PfunAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3__Impl"


    // $ANTLR start "rule__PivotTable__Group__4"
    // InternalSQLParser.g:8397:1: rule__PivotTable__Group__4 : rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 ;
    public final void rule__PivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8401:1: ( rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 )
            // InternalSQLParser.g:8402:2: rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5
            {
            pushFollow(FOLLOW_43);
            rule__PivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4"


    // $ANTLR start "rule__PivotTable__Group__4__Impl"
    // InternalSQLParser.g:8409:1: rule__PivotTable__Group__4__Impl : ( ( rule__PivotTable__PforAssignment_4 ) ) ;
    public final void rule__PivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8413:1: ( ( ( rule__PivotTable__PforAssignment_4 ) ) )
            // InternalSQLParser.g:8414:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            {
            // InternalSQLParser.g:8414:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            // InternalSQLParser.g:8415:2: ( rule__PivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSQLParser.g:8416:2: ( rule__PivotTable__PforAssignment_4 )
            // InternalSQLParser.g:8416:3: rule__PivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4__Impl"


    // $ANTLR start "rule__PivotTable__Group__5"
    // InternalSQLParser.g:8424:1: rule__PivotTable__Group__5 : rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 ;
    public final void rule__PivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8428:1: ( rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 )
            // InternalSQLParser.g:8429:2: rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6
            {
            pushFollow(FOLLOW_7);
            rule__PivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5"


    // $ANTLR start "rule__PivotTable__Group__5__Impl"
    // InternalSQLParser.g:8436:1: rule__PivotTable__Group__5__Impl : ( ( rule__PivotTable__PinAssignment_5 ) ) ;
    public final void rule__PivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8440:1: ( ( ( rule__PivotTable__PinAssignment_5 ) ) )
            // InternalSQLParser.g:8441:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            {
            // InternalSQLParser.g:8441:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            // InternalSQLParser.g:8442:2: ( rule__PivotTable__PinAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }
            // InternalSQLParser.g:8443:2: ( rule__PivotTable__PinAssignment_5 )
            // InternalSQLParser.g:8443:3: rule__PivotTable__PinAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PinAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5__Impl"


    // $ANTLR start "rule__PivotTable__Group__6"
    // InternalSQLParser.g:8451:1: rule__PivotTable__Group__6 : rule__PivotTable__Group__6__Impl ;
    public final void rule__PivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8455:1: ( rule__PivotTable__Group__6__Impl )
            // InternalSQLParser.g:8456:2: rule__PivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6"


    // $ANTLR start "rule__PivotTable__Group__6__Impl"
    // InternalSQLParser.g:8462:1: rule__PivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__PivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8466:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:8467:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:8467:1: ( RightParenthesis )
            // InternalSQLParser.g:8468:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6__Impl"


    // $ANTLR start "rule__PivotInClause__Group__0"
    // InternalSQLParser.g:8478:1: rule__PivotInClause__Group__0 : rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 ;
    public final void rule__PivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8482:1: ( rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 )
            // InternalSQLParser.g:8483:2: rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__PivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0"


    // $ANTLR start "rule__PivotInClause__Group__0__Impl"
    // InternalSQLParser.g:8490:1: rule__PivotInClause__Group__0__Impl : ( IN ) ;
    public final void rule__PivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8494:1: ( ( IN ) )
            // InternalSQLParser.g:8495:1: ( IN )
            {
            // InternalSQLParser.g:8495:1: ( IN )
            // InternalSQLParser.g:8496:2: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0__Impl"


    // $ANTLR start "rule__PivotInClause__Group__1"
    // InternalSQLParser.g:8505:1: rule__PivotInClause__Group__1 : rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 ;
    public final void rule__PivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8509:1: ( rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 )
            // InternalSQLParser.g:8510:2: rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2
            {
            pushFollow(FOLLOW_44);
            rule__PivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1"


    // $ANTLR start "rule__PivotInClause__Group__1__Impl"
    // InternalSQLParser.g:8517:1: rule__PivotInClause__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8521:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:8522:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:8522:1: ( LeftParenthesis )
            // InternalSQLParser.g:8523:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1__Impl"


    // $ANTLR start "rule__PivotInClause__Group__2"
    // InternalSQLParser.g:8532:1: rule__PivotInClause__Group__2 : rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 ;
    public final void rule__PivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8536:1: ( rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 )
            // InternalSQLParser.g:8537:2: rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__PivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2"


    // $ANTLR start "rule__PivotInClause__Group__2__Impl"
    // InternalSQLParser.g:8544:1: rule__PivotInClause__Group__2__Impl : ( ( rule__PivotInClause__Alternatives_2 ) ) ;
    public final void rule__PivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8548:1: ( ( ( rule__PivotInClause__Alternatives_2 ) ) )
            // InternalSQLParser.g:8549:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            {
            // InternalSQLParser.g:8549:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            // InternalSQLParser.g:8550:2: ( rule__PivotInClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:8551:2: ( rule__PivotInClause__Alternatives_2 )
            // InternalSQLParser.g:8551:3: rule__PivotInClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2__Impl"


    // $ANTLR start "rule__PivotInClause__Group__3"
    // InternalSQLParser.g:8559:1: rule__PivotInClause__Group__3 : rule__PivotInClause__Group__3__Impl ;
    public final void rule__PivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8563:1: ( rule__PivotInClause__Group__3__Impl )
            // InternalSQLParser.g:8564:2: rule__PivotInClause__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3"


    // $ANTLR start "rule__PivotInClause__Group__3__Impl"
    // InternalSQLParser.g:8570:1: rule__PivotInClause__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__PivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8574:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:8575:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:8575:1: ( RightParenthesis )
            // InternalSQLParser.g:8576:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__0"
    // InternalSQLParser.g:8586:1: rule__PivotInClauseAny__Group__0 : rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 ;
    public final void rule__PivotInClauseAny__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8590:1: ( rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 )
            // InternalSQLParser.g:8591:2: rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__PivotInClauseAny__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0"


    // $ANTLR start "rule__PivotInClauseAny__Group__0__Impl"
    // InternalSQLParser.g:8598:1: rule__PivotInClauseAny__Group__0__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8602:1: ( ( ANY ) )
            // InternalSQLParser.g:8603:1: ( ANY )
            {
            // InternalSQLParser.g:8603:1: ( ANY )
            // InternalSQLParser.g:8604:2: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__1"
    // InternalSQLParser.g:8613:1: rule__PivotInClauseAny__Group__1 : rule__PivotInClauseAny__Group__1__Impl ;
    public final void rule__PivotInClauseAny__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8617:1: ( rule__PivotInClauseAny__Group__1__Impl )
            // InternalSQLParser.g:8618:2: rule__PivotInClauseAny__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1"


    // $ANTLR start "rule__PivotInClauseAny__Group__1__Impl"
    // InternalSQLParser.g:8624:1: rule__PivotInClauseAny__Group__1__Impl : ( ( rule__PivotInClauseAny__Group_1__0 )* ) ;
    public final void rule__PivotInClauseAny__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8628:1: ( ( ( rule__PivotInClauseAny__Group_1__0 )* ) )
            // InternalSQLParser.g:8629:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            {
            // InternalSQLParser.g:8629:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            // InternalSQLParser.g:8630:2: ( rule__PivotInClauseAny__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:8631:2: ( rule__PivotInClauseAny__Group_1__0 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==Comma) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalSQLParser.g:8631:3: rule__PivotInClauseAny__Group_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__PivotInClauseAny__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0"
    // InternalSQLParser.g:8640:1: rule__PivotInClauseAny__Group_1__0 : rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 ;
    public final void rule__PivotInClauseAny__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8644:1: ( rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 )
            // InternalSQLParser.g:8645:2: rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1
            {
            pushFollow(FOLLOW_45);
            rule__PivotInClauseAny__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0__Impl"
    // InternalSQLParser.g:8652:1: rule__PivotInClauseAny__Group_1__0__Impl : ( Comma ) ;
    public final void rule__PivotInClauseAny__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8656:1: ( ( Comma ) )
            // InternalSQLParser.g:8657:1: ( Comma )
            {
            // InternalSQLParser.g:8657:1: ( Comma )
            // InternalSQLParser.g:8658:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1"
    // InternalSQLParser.g:8667:1: rule__PivotInClauseAny__Group_1__1 : rule__PivotInClauseAny__Group_1__1__Impl ;
    public final void rule__PivotInClauseAny__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8671:1: ( rule__PivotInClauseAny__Group_1__1__Impl )
            // InternalSQLParser.g:8672:2: rule__PivotInClauseAny__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1__Impl"
    // InternalSQLParser.g:8678:1: rule__PivotInClauseAny__Group_1__1__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8682:1: ( ( ANY ) )
            // InternalSQLParser.g:8683:1: ( ANY )
            {
            // InternalSQLParser.g:8683:1: ( ANY )
            // InternalSQLParser.g:8684:2: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__0"
    // InternalSQLParser.g:8694:1: rule__UnpivotTable__Group__0 : rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 ;
    public final void rule__UnpivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8698:1: ( rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 )
            // InternalSQLParser.g:8699:2: rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__UnpivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0"


    // $ANTLR start "rule__UnpivotTable__Group__0__Impl"
    // InternalSQLParser.g:8706:1: rule__UnpivotTable__Group__0__Impl : ( UNPIVOT ) ;
    public final void rule__UnpivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8710:1: ( ( UNPIVOT ) )
            // InternalSQLParser.g:8711:1: ( UNPIVOT )
            {
            // InternalSQLParser.g:8711:1: ( UNPIVOT )
            // InternalSQLParser.g:8712:2: UNPIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }
            match(input,UNPIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__1"
    // InternalSQLParser.g:8721:1: rule__UnpivotTable__Group__1 : rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 ;
    public final void rule__UnpivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8725:1: ( rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 )
            // InternalSQLParser.g:8726:2: rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__UnpivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1"


    // $ANTLR start "rule__UnpivotTable__Group__1__Impl"
    // InternalSQLParser.g:8733:1: rule__UnpivotTable__Group__1__Impl : ( ( rule__UnpivotTable__Group_1__0 )? ) ;
    public final void rule__UnpivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8737:1: ( ( ( rule__UnpivotTable__Group_1__0 )? ) )
            // InternalSQLParser.g:8738:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            {
            // InternalSQLParser.g:8738:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            // InternalSQLParser.g:8739:2: ( rule__UnpivotTable__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:8740:2: ( rule__UnpivotTable__Group_1__0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==EXCLUDE||LA96_0==INCLUDE) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalSQLParser.g:8740:3: rule__UnpivotTable__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotTable__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__2"
    // InternalSQLParser.g:8748:1: rule__UnpivotTable__Group__2 : rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 ;
    public final void rule__UnpivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8752:1: ( rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 )
            // InternalSQLParser.g:8753:2: rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__UnpivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2"


    // $ANTLR start "rule__UnpivotTable__Group__2__Impl"
    // InternalSQLParser.g:8760:1: rule__UnpivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8764:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:8765:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:8765:1: ( LeftParenthesis )
            // InternalSQLParser.g:8766:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__3"
    // InternalSQLParser.g:8775:1: rule__UnpivotTable__Group__3 : rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 ;
    public final void rule__UnpivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8779:1: ( rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 )
            // InternalSQLParser.g:8780:2: rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4
            {
            pushFollow(FOLLOW_42);
            rule__UnpivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3"


    // $ANTLR start "rule__UnpivotTable__Group__3__Impl"
    // InternalSQLParser.g:8787:1: rule__UnpivotTable__Group__3__Impl : ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) ;
    public final void rule__UnpivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8791:1: ( ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) )
            // InternalSQLParser.g:8792:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            {
            // InternalSQLParser.g:8792:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            // InternalSQLParser.g:8793:2: ( rule__UnpivotTable__PcolsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }
            // InternalSQLParser.g:8794:2: ( rule__UnpivotTable__PcolsAssignment_3 )
            // InternalSQLParser.g:8794:3: rule__UnpivotTable__PcolsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PcolsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__4"
    // InternalSQLParser.g:8802:1: rule__UnpivotTable__Group__4 : rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 ;
    public final void rule__UnpivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8806:1: ( rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 )
            // InternalSQLParser.g:8807:2: rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5
            {
            pushFollow(FOLLOW_43);
            rule__UnpivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4"


    // $ANTLR start "rule__UnpivotTable__Group__4__Impl"
    // InternalSQLParser.g:8814:1: rule__UnpivotTable__Group__4__Impl : ( ( rule__UnpivotTable__PforAssignment_4 ) ) ;
    public final void rule__UnpivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8818:1: ( ( ( rule__UnpivotTable__PforAssignment_4 ) ) )
            // InternalSQLParser.g:8819:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            {
            // InternalSQLParser.g:8819:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            // InternalSQLParser.g:8820:2: ( rule__UnpivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSQLParser.g:8821:2: ( rule__UnpivotTable__PforAssignment_4 )
            // InternalSQLParser.g:8821:3: rule__UnpivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__5"
    // InternalSQLParser.g:8829:1: rule__UnpivotTable__Group__5 : rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 ;
    public final void rule__UnpivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8833:1: ( rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 )
            // InternalSQLParser.g:8834:2: rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6
            {
            pushFollow(FOLLOW_7);
            rule__UnpivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5"


    // $ANTLR start "rule__UnpivotTable__Group__5__Impl"
    // InternalSQLParser.g:8841:1: rule__UnpivotTable__Group__5__Impl : ( ( rule__UnpivotTable__InopAssignment_5 ) ) ;
    public final void rule__UnpivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8845:1: ( ( ( rule__UnpivotTable__InopAssignment_5 ) ) )
            // InternalSQLParser.g:8846:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            {
            // InternalSQLParser.g:8846:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            // InternalSQLParser.g:8847:2: ( rule__UnpivotTable__InopAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }
            // InternalSQLParser.g:8848:2: ( rule__UnpivotTable__InopAssignment_5 )
            // InternalSQLParser.g:8848:3: rule__UnpivotTable__InopAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__InopAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__6"
    // InternalSQLParser.g:8856:1: rule__UnpivotTable__Group__6 : rule__UnpivotTable__Group__6__Impl ;
    public final void rule__UnpivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8860:1: ( rule__UnpivotTable__Group__6__Impl )
            // InternalSQLParser.g:8861:2: rule__UnpivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6"


    // $ANTLR start "rule__UnpivotTable__Group__6__Impl"
    // InternalSQLParser.g:8867:1: rule__UnpivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8871:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:8872:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:8872:1: ( RightParenthesis )
            // InternalSQLParser.g:8873:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__0"
    // InternalSQLParser.g:8883:1: rule__UnpivotTable__Group_1__0 : rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 ;
    public final void rule__UnpivotTable__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8887:1: ( rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 )
            // InternalSQLParser.g:8888:2: rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1
            {
            pushFollow(FOLLOW_47);
            rule__UnpivotTable__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0"


    // $ANTLR start "rule__UnpivotTable__Group_1__0__Impl"
    // InternalSQLParser.g:8895:1: rule__UnpivotTable__Group_1__0__Impl : ( ( rule__UnpivotTable__Alternatives_1_0 ) ) ;
    public final void rule__UnpivotTable__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8899:1: ( ( ( rule__UnpivotTable__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:8900:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:8900:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            // InternalSQLParser.g:8901:2: ( rule__UnpivotTable__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:8902:2: ( rule__UnpivotTable__Alternatives_1_0 )
            // InternalSQLParser.g:8902:3: rule__UnpivotTable__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__1"
    // InternalSQLParser.g:8910:1: rule__UnpivotTable__Group_1__1 : rule__UnpivotTable__Group_1__1__Impl ;
    public final void rule__UnpivotTable__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8914:1: ( rule__UnpivotTable__Group_1__1__Impl )
            // InternalSQLParser.g:8915:2: rule__UnpivotTable__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1"


    // $ANTLR start "rule__UnpivotTable__Group_1__1__Impl"
    // InternalSQLParser.g:8921:1: rule__UnpivotTable__Group_1__1__Impl : ( NULLS ) ;
    public final void rule__UnpivotTable__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8925:1: ( ( NULLS ) )
            // InternalSQLParser.g:8926:1: ( NULLS )
            {
            // InternalSQLParser.g:8926:1: ( NULLS )
            // InternalSQLParser.g:8927:2: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__0"
    // InternalSQLParser.g:8937:1: rule__UnpivotInClause__Group__0 : rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 ;
    public final void rule__UnpivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8941:1: ( rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 )
            // InternalSQLParser.g:8942:2: rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1
            {
            pushFollow(FOLLOW_43);
            rule__UnpivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0"


    // $ANTLR start "rule__UnpivotInClause__Group__0__Impl"
    // InternalSQLParser.g:8949:1: rule__UnpivotInClause__Group__0__Impl : ( () ) ;
    public final void rule__UnpivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8953:1: ( ( () ) )
            // InternalSQLParser.g:8954:1: ( () )
            {
            // InternalSQLParser.g:8954:1: ( () )
            // InternalSQLParser.g:8955:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }
            // InternalSQLParser.g:8956:2: ()
            // InternalSQLParser.g:8956:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__1"
    // InternalSQLParser.g:8964:1: rule__UnpivotInClause__Group__1 : rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 ;
    public final void rule__UnpivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8968:1: ( rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 )
            // InternalSQLParser.g:8969:2: rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1"


    // $ANTLR start "rule__UnpivotInClause__Group__1__Impl"
    // InternalSQLParser.g:8976:1: rule__UnpivotInClause__Group__1__Impl : ( ( rule__UnpivotInClause__OpAssignment_1 ) ) ;
    public final void rule__UnpivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8980:1: ( ( ( rule__UnpivotInClause__OpAssignment_1 ) ) )
            // InternalSQLParser.g:8981:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:8981:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            // InternalSQLParser.g:8982:2: ( rule__UnpivotInClause__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:8983:2: ( rule__UnpivotInClause__OpAssignment_1 )
            // InternalSQLParser.g:8983:3: rule__UnpivotInClause__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__2"
    // InternalSQLParser.g:8991:1: rule__UnpivotInClause__Group__2 : rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 ;
    public final void rule__UnpivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8995:1: ( rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 )
            // InternalSQLParser.g:8996:2: rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__UnpivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2"


    // $ANTLR start "rule__UnpivotInClause__Group__2__Impl"
    // InternalSQLParser.g:9003:1: rule__UnpivotInClause__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9007:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:9008:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:9008:1: ( LeftParenthesis )
            // InternalSQLParser.g:9009:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__3"
    // InternalSQLParser.g:9018:1: rule__UnpivotInClause__Group__3 : rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 ;
    public final void rule__UnpivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9022:1: ( rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 )
            // InternalSQLParser.g:9023:2: rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__UnpivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3"


    // $ANTLR start "rule__UnpivotInClause__Group__3__Impl"
    // InternalSQLParser.g:9030:1: rule__UnpivotInClause__Group__3__Impl : ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) ;
    public final void rule__UnpivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9034:1: ( ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) )
            // InternalSQLParser.g:9035:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            {
            // InternalSQLParser.g:9035:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            // InternalSQLParser.g:9036:2: ( rule__UnpivotInClause__ArgsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }
            // InternalSQLParser.g:9037:2: ( rule__UnpivotInClause__ArgsAssignment_3 )
            // InternalSQLParser.g:9037:3: rule__UnpivotInClause__ArgsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__ArgsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__4"
    // InternalSQLParser.g:9045:1: rule__UnpivotInClause__Group__4 : rule__UnpivotInClause__Group__4__Impl ;
    public final void rule__UnpivotInClause__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9049:1: ( rule__UnpivotInClause__Group__4__Impl )
            // InternalSQLParser.g:9050:2: rule__UnpivotInClause__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4"


    // $ANTLR start "rule__UnpivotInClause__Group__4__Impl"
    // InternalSQLParser.g:9056:1: rule__UnpivotInClause__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotInClause__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9060:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:9061:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:9061:1: ( RightParenthesis )
            // InternalSQLParser.g:9062:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0"
    // InternalSQLParser.g:9072:1: rule__UnpivotInClauseArgs__Group__0 : rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 ;
    public final void rule__UnpivotInClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9076:1: ( rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 )
            // InternalSQLParser.g:9077:2: rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__UnpivotInClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0__Impl"
    // InternalSQLParser.g:9084:1: rule__UnpivotInClauseArgs__Group__0__Impl : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9088:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSQLParser.g:9089:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSQLParser.g:9089:1: ( ruleUnpivotInClauseArg )
            // InternalSQLParser.g:9090:2: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1"
    // InternalSQLParser.g:9099:1: rule__UnpivotInClauseArgs__Group__1 : rule__UnpivotInClauseArgs__Group__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9103:1: ( rule__UnpivotInClauseArgs__Group__1__Impl )
            // InternalSQLParser.g:9104:2: rule__UnpivotInClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1__Impl"
    // InternalSQLParser.g:9110:1: rule__UnpivotInClauseArgs__Group__1__Impl : ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9114:1: ( ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:9115:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:9115:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            // InternalSQLParser.g:9116:2: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9117:2: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==Comma) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalSQLParser.g:9117:3: rule__UnpivotInClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0"
    // InternalSQLParser.g:9126:1: rule__UnpivotInClauseArgs__Group_1__0 : rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9130:1: ( rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 )
            // InternalSQLParser.g:9131:2: rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__UnpivotInClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0__Impl"
    // InternalSQLParser.g:9138:1: rule__UnpivotInClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9142:1: ( ( () ) )
            // InternalSQLParser.g:9143:1: ( () )
            {
            // InternalSQLParser.g:9143:1: ( () )
            // InternalSQLParser.g:9144:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9145:2: ()
            // InternalSQLParser.g:9145:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1"
    // InternalSQLParser.g:9153:1: rule__UnpivotInClauseArgs__Group_1__1 : rule__UnpivotInClauseArgs__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9157:1: ( rule__UnpivotInClauseArgs__Group_1__1__Impl )
            // InternalSQLParser.g:9158:2: rule__UnpivotInClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1__Impl"
    // InternalSQLParser.g:9164:1: rule__UnpivotInClauseArgs__Group_1__1__Impl : ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9168:1: ( ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:9169:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:9169:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:9170:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:9170:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:9171:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9172:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            // InternalSQLParser.g:9172:4: rule__UnpivotInClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__UnpivotInClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:9175:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:9176:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9177:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==Comma) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalSQLParser.g:9177:4: rule__UnpivotInClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__UnpivotInClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0"
    // InternalSQLParser.g:9187:1: rule__UnpivotInClauseArgs__Group_1_1__0 : rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9191:1: ( rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 )
            // InternalSQLParser.g:9192:2: rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__UnpivotInClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:9199:1: rule__UnpivotInClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9203:1: ( ( Comma ) )
            // InternalSQLParser.g:9204:1: ( Comma )
            {
            // InternalSQLParser.g:9204:1: ( Comma )
            // InternalSQLParser.g:9205:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1"
    // InternalSQLParser.g:9214:1: rule__UnpivotInClauseArgs__Group_1_1__1 : rule__UnpivotInClauseArgs__Group_1_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9218:1: ( rule__UnpivotInClauseArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:9219:2: rule__UnpivotInClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:9225:1: rule__UnpivotInClauseArgs__Group_1_1__1__Impl : ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9229:1: ( ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9230:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9230:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9231:2: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9232:2: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9232:3: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0"
    // InternalSQLParser.g:9241:1: rule__UnpivotInClauseArg__Group__0 : rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 ;
    public final void rule__UnpivotInClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9245:1: ( rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 )
            // InternalSQLParser.g:9246:2: rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__UnpivotInClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0__Impl"
    // InternalSQLParser.g:9253:1: rule__UnpivotInClauseArg__Group__0__Impl : ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) ;
    public final void rule__UnpivotInClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9257:1: ( ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) )
            // InternalSQLParser.g:9258:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            {
            // InternalSQLParser.g:9258:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            // InternalSQLParser.g:9259:2: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }
            // InternalSQLParser.g:9260:2: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            // InternalSQLParser.g:9260:3: rule__UnpivotInClauseArg__PcolsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__PcolsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1"
    // InternalSQLParser.g:9268:1: rule__UnpivotInClauseArg__Group__1 : rule__UnpivotInClauseArg__Group__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9272:1: ( rule__UnpivotInClauseArg__Group__1__Impl )
            // InternalSQLParser.g:9273:2: rule__UnpivotInClauseArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1__Impl"
    // InternalSQLParser.g:9279:1: rule__UnpivotInClauseArg__Group__1__Impl : ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9283:1: ( ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) )
            // InternalSQLParser.g:9284:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            {
            // InternalSQLParser.g:9284:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            // InternalSQLParser.g:9285:2: ( rule__UnpivotInClauseArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9286:2: ( rule__UnpivotInClauseArg__Group_1__0 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==AS) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSQLParser.g:9286:3: rule__UnpivotInClauseArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0"
    // InternalSQLParser.g:9295:1: rule__UnpivotInClauseArg__Group_1__0 : rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 ;
    public final void rule__UnpivotInClauseArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9299:1: ( rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 )
            // InternalSQLParser.g:9300:2: rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__UnpivotInClauseArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0__Impl"
    // InternalSQLParser.g:9307:1: rule__UnpivotInClauseArg__Group_1__0__Impl : ( AS ) ;
    public final void rule__UnpivotInClauseArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9311:1: ( ( AS ) )
            // InternalSQLParser.g:9312:1: ( AS )
            {
            // InternalSQLParser.g:9312:1: ( AS )
            // InternalSQLParser.g:9313:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1"
    // InternalSQLParser.g:9322:1: rule__UnpivotInClauseArg__Group_1__1 : rule__UnpivotInClauseArg__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9326:1: ( rule__UnpivotInClauseArg__Group_1__1__Impl )
            // InternalSQLParser.g:9327:2: rule__UnpivotInClauseArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1__Impl"
    // InternalSQLParser.g:9333:1: rule__UnpivotInClauseArg__Group_1__1__Impl : ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) ;
    public final void rule__UnpivotInClauseArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9337:1: ( ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) )
            // InternalSQLParser.g:9338:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            {
            // InternalSQLParser.g:9338:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            // InternalSQLParser.g:9339:2: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }
            // InternalSQLParser.g:9340:2: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            // InternalSQLParser.g:9340:3: rule__UnpivotInClauseArg__CfulsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__CfulsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group__0"
    // InternalSQLParser.g:9349:1: rule__PivotForClause__Group__0 : rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 ;
    public final void rule__PivotForClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9353:1: ( rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 )
            // InternalSQLParser.g:9354:2: rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__PivotForClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0"


    // $ANTLR start "rule__PivotForClause__Group__0__Impl"
    // InternalSQLParser.g:9361:1: rule__PivotForClause__Group__0__Impl : ( FOR ) ;
    public final void rule__PivotForClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9365:1: ( ( FOR ) )
            // InternalSQLParser.g:9366:1: ( FOR )
            {
            // InternalSQLParser.g:9366:1: ( FOR )
            // InternalSQLParser.g:9367:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group__1"
    // InternalSQLParser.g:9376:1: rule__PivotForClause__Group__1 : rule__PivotForClause__Group__1__Impl ;
    public final void rule__PivotForClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9380:1: ( rule__PivotForClause__Group__1__Impl )
            // InternalSQLParser.g:9381:2: rule__PivotForClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1"


    // $ANTLR start "rule__PivotForClause__Group__1__Impl"
    // InternalSQLParser.g:9387:1: rule__PivotForClause__Group__1__Impl : ( ( rule__PivotForClause__Alternatives_1 ) ) ;
    public final void rule__PivotForClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9391:1: ( ( ( rule__PivotForClause__Alternatives_1 ) ) )
            // InternalSQLParser.g:9392:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            {
            // InternalSQLParser.g:9392:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            // InternalSQLParser.g:9393:2: ( rule__PivotForClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:9394:2: ( rule__PivotForClause__Alternatives_1 )
            // InternalSQLParser.g:9394:3: rule__PivotForClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0"
    // InternalSQLParser.g:9403:1: rule__PivotForClause__Group_1_1__0 : rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 ;
    public final void rule__PivotForClause__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9407:1: ( rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 )
            // InternalSQLParser.g:9408:2: rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1
            {
            pushFollow(FOLLOW_17);
            rule__PivotForClause__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0__Impl"
    // InternalSQLParser.g:9415:1: rule__PivotForClause__Group_1_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9419:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:9420:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:9420:1: ( LeftParenthesis )
            // InternalSQLParser.g:9421:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1"
    // InternalSQLParser.g:9430:1: rule__PivotForClause__Group_1_1__1 : rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 ;
    public final void rule__PivotForClause__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9434:1: ( rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 )
            // InternalSQLParser.g:9435:2: rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2
            {
            pushFollow(FOLLOW_7);
            rule__PivotForClause__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1__Impl"
    // InternalSQLParser.g:9442:1: rule__PivotForClause__Group_1_1__1__Impl : ( ruleColumns ) ;
    public final void rule__PivotForClause__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9446:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:9447:1: ( ruleColumns )
            {
            // InternalSQLParser.g:9447:1: ( ruleColumns )
            // InternalSQLParser.g:9448:2: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2"
    // InternalSQLParser.g:9457:1: rule__PivotForClause__Group_1_1__2 : rule__PivotForClause__Group_1_1__2__Impl ;
    public final void rule__PivotForClause__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9461:1: ( rule__PivotForClause__Group_1_1__2__Impl )
            // InternalSQLParser.g:9462:2: rule__PivotForClause__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2__Impl"
    // InternalSQLParser.g:9468:1: rule__PivotForClause__Group_1_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9472:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:9473:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:9473:1: ( RightParenthesis )
            // InternalSQLParser.g:9474:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__0"
    // InternalSQLParser.g:9484:1: rule__PivotColumns__Group_1__0 : rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 ;
    public final void rule__PivotColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9488:1: ( rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 )
            // InternalSQLParser.g:9489:2: rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1
            {
            pushFollow(FOLLOW_4);
            rule__PivotColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0"


    // $ANTLR start "rule__PivotColumns__Group_1__0__Impl"
    // InternalSQLParser.g:9496:1: rule__PivotColumns__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9500:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:9501:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:9501:1: ( LeftParenthesis )
            // InternalSQLParser.g:9502:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__1"
    // InternalSQLParser.g:9511:1: rule__PivotColumns__Group_1__1 : rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 ;
    public final void rule__PivotColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9515:1: ( rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 )
            // InternalSQLParser.g:9516:2: rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2
            {
            pushFollow(FOLLOW_7);
            rule__PivotColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1"


    // $ANTLR start "rule__PivotColumns__Group_1__1__Impl"
    // InternalSQLParser.g:9523:1: rule__PivotColumns__Group_1__1__Impl : ( rulePivotCols ) ;
    public final void rule__PivotColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9527:1: ( ( rulePivotCols ) )
            // InternalSQLParser.g:9528:1: ( rulePivotCols )
            {
            // InternalSQLParser.g:9528:1: ( rulePivotCols )
            // InternalSQLParser.g:9529:2: rulePivotCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__2"
    // InternalSQLParser.g:9538:1: rule__PivotColumns__Group_1__2 : rule__PivotColumns__Group_1__2__Impl ;
    public final void rule__PivotColumns__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9542:1: ( rule__PivotColumns__Group_1__2__Impl )
            // InternalSQLParser.g:9543:2: rule__PivotColumns__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2"


    // $ANTLR start "rule__PivotColumns__Group_1__2__Impl"
    // InternalSQLParser.g:9549:1: rule__PivotColumns__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotColumns__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9553:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:9554:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:9554:1: ( RightParenthesis )
            // InternalSQLParser.g:9555:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2__Impl"


    // $ANTLR start "rule__PivotCols__Group__0"
    // InternalSQLParser.g:9565:1: rule__PivotCols__Group__0 : rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 ;
    public final void rule__PivotCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9569:1: ( rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 )
            // InternalSQLParser.g:9570:2: rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__PivotCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0"


    // $ANTLR start "rule__PivotCols__Group__0__Impl"
    // InternalSQLParser.g:9577:1: rule__PivotCols__Group__0__Impl : ( rulePivotCol ) ;
    public final void rule__PivotCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9581:1: ( ( rulePivotCol ) )
            // InternalSQLParser.g:9582:1: ( rulePivotCol )
            {
            // InternalSQLParser.g:9582:1: ( rulePivotCol )
            // InternalSQLParser.g:9583:2: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0__Impl"


    // $ANTLR start "rule__PivotCols__Group__1"
    // InternalSQLParser.g:9592:1: rule__PivotCols__Group__1 : rule__PivotCols__Group__1__Impl ;
    public final void rule__PivotCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9596:1: ( rule__PivotCols__Group__1__Impl )
            // InternalSQLParser.g:9597:2: rule__PivotCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1"


    // $ANTLR start "rule__PivotCols__Group__1__Impl"
    // InternalSQLParser.g:9603:1: rule__PivotCols__Group__1__Impl : ( ( rule__PivotCols__Group_1__0 )? ) ;
    public final void rule__PivotCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9607:1: ( ( ( rule__PivotCols__Group_1__0 )? ) )
            // InternalSQLParser.g:9608:1: ( ( rule__PivotCols__Group_1__0 )? )
            {
            // InternalSQLParser.g:9608:1: ( ( rule__PivotCols__Group_1__0 )? )
            // InternalSQLParser.g:9609:2: ( rule__PivotCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9610:2: ( rule__PivotCols__Group_1__0 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==Comma) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSQLParser.g:9610:3: rule__PivotCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__0"
    // InternalSQLParser.g:9619:1: rule__PivotCols__Group_1__0 : rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 ;
    public final void rule__PivotCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9623:1: ( rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 )
            // InternalSQLParser.g:9624:2: rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__PivotCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0"


    // $ANTLR start "rule__PivotCols__Group_1__0__Impl"
    // InternalSQLParser.g:9631:1: rule__PivotCols__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9635:1: ( ( () ) )
            // InternalSQLParser.g:9636:1: ( () )
            {
            // InternalSQLParser.g:9636:1: ( () )
            // InternalSQLParser.g:9637:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9638:2: ()
            // InternalSQLParser.g:9638:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__1"
    // InternalSQLParser.g:9646:1: rule__PivotCols__Group_1__1 : rule__PivotCols__Group_1__1__Impl ;
    public final void rule__PivotCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9650:1: ( rule__PivotCols__Group_1__1__Impl )
            // InternalSQLParser.g:9651:2: rule__PivotCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1"


    // $ANTLR start "rule__PivotCols__Group_1__1__Impl"
    // InternalSQLParser.g:9657:1: rule__PivotCols__Group_1__1__Impl : ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9661:1: ( ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:9662:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:9662:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            // InternalSQLParser.g:9663:2: ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:9663:2: ( ( rule__PivotCols__Group_1_1__0 ) )
            // InternalSQLParser.g:9664:3: ( rule__PivotCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9665:3: ( rule__PivotCols__Group_1_1__0 )
            // InternalSQLParser.g:9665:4: rule__PivotCols__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__PivotCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:9668:2: ( ( rule__PivotCols__Group_1_1__0 )* )
            // InternalSQLParser.g:9669:3: ( rule__PivotCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9670:3: ( rule__PivotCols__Group_1_1__0 )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==Comma) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalSQLParser.g:9670:4: rule__PivotCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__PivotCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__0"
    // InternalSQLParser.g:9680:1: rule__PivotCols__Group_1_1__0 : rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 ;
    public final void rule__PivotCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9684:1: ( rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 )
            // InternalSQLParser.g:9685:2: rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__PivotCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0"


    // $ANTLR start "rule__PivotCols__Group_1_1__0__Impl"
    // InternalSQLParser.g:9692:1: rule__PivotCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__PivotCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9696:1: ( ( Comma ) )
            // InternalSQLParser.g:9697:1: ( Comma )
            {
            // InternalSQLParser.g:9697:1: ( Comma )
            // InternalSQLParser.g:9698:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__1"
    // InternalSQLParser.g:9707:1: rule__PivotCols__Group_1_1__1 : rule__PivotCols__Group_1_1__1__Impl ;
    public final void rule__PivotCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9711:1: ( rule__PivotCols__Group_1_1__1__Impl )
            // InternalSQLParser.g:9712:2: rule__PivotCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1"


    // $ANTLR start "rule__PivotCols__Group_1_1__1__Impl"
    // InternalSQLParser.g:9718:1: rule__PivotCols__Group_1_1__1__Impl : ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9722:1: ( ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9723:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9723:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9724:2: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9725:2: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9725:3: rule__PivotCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group__0"
    // InternalSQLParser.g:9734:1: rule__PivotCol__Group__0 : rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 ;
    public final void rule__PivotCol__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9738:1: ( rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 )
            // InternalSQLParser.g:9739:2: rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__PivotCol__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0"


    // $ANTLR start "rule__PivotCol__Group__0__Impl"
    // InternalSQLParser.g:9746:1: rule__PivotCol__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9750:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:9751:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:9751:1: ( ruleDbObjectName )
            // InternalSQLParser.g:9752:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0__Impl"


    // $ANTLR start "rule__PivotCol__Group__1"
    // InternalSQLParser.g:9761:1: rule__PivotCol__Group__1 : rule__PivotCol__Group__1__Impl ;
    public final void rule__PivotCol__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9765:1: ( rule__PivotCol__Group__1__Impl )
            // InternalSQLParser.g:9766:2: rule__PivotCol__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1"


    // $ANTLR start "rule__PivotCol__Group__1__Impl"
    // InternalSQLParser.g:9772:1: rule__PivotCol__Group__1__Impl : ( ( rule__PivotCol__Group_1__0 )? ) ;
    public final void rule__PivotCol__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9776:1: ( ( ( rule__PivotCol__Group_1__0 )? ) )
            // InternalSQLParser.g:9777:1: ( ( rule__PivotCol__Group_1__0 )? )
            {
            // InternalSQLParser.g:9777:1: ( ( rule__PivotCol__Group_1__0 )? )
            // InternalSQLParser.g:9778:2: ( rule__PivotCol__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9779:2: ( rule__PivotCol__Group_1__0 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==FullStop) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSQLParser.g:9779:3: rule__PivotCol__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCol__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__0"
    // InternalSQLParser.g:9788:1: rule__PivotCol__Group_1__0 : rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 ;
    public final void rule__PivotCol__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9792:1: ( rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 )
            // InternalSQLParser.g:9793:2: rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__PivotCol__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0"


    // $ANTLR start "rule__PivotCol__Group_1__0__Impl"
    // InternalSQLParser.g:9800:1: rule__PivotCol__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCol__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9804:1: ( ( () ) )
            // InternalSQLParser.g:9805:1: ( () )
            {
            // InternalSQLParser.g:9805:1: ( () )
            // InternalSQLParser.g:9806:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9807:2: ()
            // InternalSQLParser.g:9807:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__1"
    // InternalSQLParser.g:9815:1: rule__PivotCol__Group_1__1 : rule__PivotCol__Group_1__1__Impl ;
    public final void rule__PivotCol__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9819:1: ( rule__PivotCol__Group_1__1__Impl )
            // InternalSQLParser.g:9820:2: rule__PivotCol__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1"


    // $ANTLR start "rule__PivotCol__Group_1__1__Impl"
    // InternalSQLParser.g:9826:1: rule__PivotCol__Group_1__1__Impl : ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCol__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9830:1: ( ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:9831:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:9831:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            // InternalSQLParser.g:9832:2: ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:9832:2: ( ( rule__PivotCol__Group_1_1__0 ) )
            // InternalSQLParser.g:9833:3: ( rule__PivotCol__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9834:3: ( rule__PivotCol__Group_1_1__0 )
            // InternalSQLParser.g:9834:4: rule__PivotCol__Group_1_1__0
            {
            pushFollow(FOLLOW_32);
            rule__PivotCol__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:9837:2: ( ( rule__PivotCol__Group_1_1__0 )* )
            // InternalSQLParser.g:9838:3: ( rule__PivotCol__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9839:3: ( rule__PivotCol__Group_1_1__0 )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==FullStop) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalSQLParser.g:9839:4: rule__PivotCol__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_32);
            	    rule__PivotCol__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__0"
    // InternalSQLParser.g:9849:1: rule__PivotCol__Group_1_1__0 : rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 ;
    public final void rule__PivotCol__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9853:1: ( rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 )
            // InternalSQLParser.g:9854:2: rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__PivotCol__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0"


    // $ANTLR start "rule__PivotCol__Group_1_1__0__Impl"
    // InternalSQLParser.g:9861:1: rule__PivotCol__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__PivotCol__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9865:1: ( ( FullStop ) )
            // InternalSQLParser.g:9866:1: ( FullStop )
            {
            // InternalSQLParser.g:9866:1: ( FullStop )
            // InternalSQLParser.g:9867:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__1"
    // InternalSQLParser.g:9876:1: rule__PivotCol__Group_1_1__1 : rule__PivotCol__Group_1_1__1__Impl ;
    public final void rule__PivotCol__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9880:1: ( rule__PivotCol__Group_1_1__1__Impl )
            // InternalSQLParser.g:9881:2: rule__PivotCol__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1"


    // $ANTLR start "rule__PivotCol__Group_1_1__1__Impl"
    // InternalSQLParser.g:9887:1: rule__PivotCol__Group_1_1__1__Impl : ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCol__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9891:1: ( ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9892:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9892:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9893:2: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9894:2: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9894:3: rule__PivotCol__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group__0"
    // InternalSQLParser.g:9903:1: rule__TableFull__Group__0 : rule__TableFull__Group__0__Impl rule__TableFull__Group__1 ;
    public final void rule__TableFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9907:1: ( rule__TableFull__Group__0__Impl rule__TableFull__Group__1 )
            // InternalSQLParser.g:9908:2: rule__TableFull__Group__0__Impl rule__TableFull__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__TableFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0"


    // $ANTLR start "rule__TableFull__Group__0__Impl"
    // InternalSQLParser.g:9915:1: rule__TableFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__TableFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9919:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:9920:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:9920:1: ( ruleDbObjectName )
            // InternalSQLParser.g:9921:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0__Impl"


    // $ANTLR start "rule__TableFull__Group__1"
    // InternalSQLParser.g:9930:1: rule__TableFull__Group__1 : rule__TableFull__Group__1__Impl ;
    public final void rule__TableFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9934:1: ( rule__TableFull__Group__1__Impl )
            // InternalSQLParser.g:9935:2: rule__TableFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1"


    // $ANTLR start "rule__TableFull__Group__1__Impl"
    // InternalSQLParser.g:9941:1: rule__TableFull__Group__1__Impl : ( ( rule__TableFull__Group_1__0 )? ) ;
    public final void rule__TableFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9945:1: ( ( ( rule__TableFull__Group_1__0 )? ) )
            // InternalSQLParser.g:9946:1: ( ( rule__TableFull__Group_1__0 )? )
            {
            // InternalSQLParser.g:9946:1: ( ( rule__TableFull__Group_1__0 )? )
            // InternalSQLParser.g:9947:2: ( rule__TableFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9948:2: ( rule__TableFull__Group_1__0 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==FullStop) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSQLParser.g:9948:3: rule__TableFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1__0"
    // InternalSQLParser.g:9957:1: rule__TableFull__Group_1__0 : rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 ;
    public final void rule__TableFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9961:1: ( rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 )
            // InternalSQLParser.g:9962:2: rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__TableFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0"


    // $ANTLR start "rule__TableFull__Group_1__0__Impl"
    // InternalSQLParser.g:9969:1: rule__TableFull__Group_1__0__Impl : ( () ) ;
    public final void rule__TableFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9973:1: ( ( () ) )
            // InternalSQLParser.g:9974:1: ( () )
            {
            // InternalSQLParser.g:9974:1: ( () )
            // InternalSQLParser.g:9975:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9976:2: ()
            // InternalSQLParser.g:9976:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1__1"
    // InternalSQLParser.g:9984:1: rule__TableFull__Group_1__1 : rule__TableFull__Group_1__1__Impl ;
    public final void rule__TableFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9988:1: ( rule__TableFull__Group_1__1__Impl )
            // InternalSQLParser.g:9989:2: rule__TableFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1"


    // $ANTLR start "rule__TableFull__Group_1__1__Impl"
    // InternalSQLParser.g:9995:1: rule__TableFull__Group_1__1__Impl : ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) ;
    public final void rule__TableFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9999:1: ( ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10000:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10000:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10001:2: ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10001:2: ( ( rule__TableFull__Group_1_1__0 ) )
            // InternalSQLParser.g:10002:3: ( rule__TableFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10003:3: ( rule__TableFull__Group_1_1__0 )
            // InternalSQLParser.g:10003:4: rule__TableFull__Group_1_1__0
            {
            pushFollow(FOLLOW_32);
            rule__TableFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10006:2: ( ( rule__TableFull__Group_1_1__0 )* )
            // InternalSQLParser.g:10007:3: ( rule__TableFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10008:3: ( rule__TableFull__Group_1_1__0 )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==FullStop) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalSQLParser.g:10008:4: rule__TableFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_32);
            	    rule__TableFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__0"
    // InternalSQLParser.g:10018:1: rule__TableFull__Group_1_1__0 : rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 ;
    public final void rule__TableFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10022:1: ( rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 )
            // InternalSQLParser.g:10023:2: rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__TableFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0"


    // $ANTLR start "rule__TableFull__Group_1_1__0__Impl"
    // InternalSQLParser.g:10030:1: rule__TableFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__TableFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10034:1: ( ( FullStop ) )
            // InternalSQLParser.g:10035:1: ( FullStop )
            {
            // InternalSQLParser.g:10035:1: ( FullStop )
            // InternalSQLParser.g:10036:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__1"
    // InternalSQLParser.g:10045:1: rule__TableFull__Group_1_1__1 : rule__TableFull__Group_1_1__1__Impl ;
    public final void rule__TableFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10049:1: ( rule__TableFull__Group_1_1__1__Impl )
            // InternalSQLParser.g:10050:2: rule__TableFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1"


    // $ANTLR start "rule__TableFull__Group_1_1__1__Impl"
    // InternalSQLParser.g:10056:1: rule__TableFull__Group_1_1__1__Impl : ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__TableFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10060:1: ( ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10061:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10061:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10062:2: ( rule__TableFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10063:2: ( rule__TableFull__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10063:3: rule__TableFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__0"
    // InternalSQLParser.g:10072:1: rule__DbObjectNameAll__Group__0 : rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 ;
    public final void rule__DbObjectNameAll__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10076:1: ( rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 )
            // InternalSQLParser.g:10077:2: rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__DbObjectNameAll__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0"


    // $ANTLR start "rule__DbObjectNameAll__Group__0__Impl"
    // InternalSQLParser.g:10084:1: rule__DbObjectNameAll__Group__0__Impl : ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) ;
    public final void rule__DbObjectNameAll__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10088:1: ( ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) )
            // InternalSQLParser.g:10089:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            {
            // InternalSQLParser.g:10089:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            // InternalSQLParser.g:10090:2: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }
            // InternalSQLParser.g:10091:2: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            // InternalSQLParser.g:10091:3: rule__DbObjectNameAll__DbnameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__DbnameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__1"
    // InternalSQLParser.g:10099:1: rule__DbObjectNameAll__Group__1 : rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 ;
    public final void rule__DbObjectNameAll__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10103:1: ( rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 )
            // InternalSQLParser.g:10104:2: rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2
            {
            pushFollow(FOLLOW_49);
            rule__DbObjectNameAll__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1"


    // $ANTLR start "rule__DbObjectNameAll__Group__1__Impl"
    // InternalSQLParser.g:10111:1: rule__DbObjectNameAll__Group__1__Impl : ( FullStop ) ;
    public final void rule__DbObjectNameAll__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10115:1: ( ( FullStop ) )
            // InternalSQLParser.g:10116:1: ( FullStop )
            {
            // InternalSQLParser.g:10116:1: ( FullStop )
            // InternalSQLParser.g:10117:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__2"
    // InternalSQLParser.g:10126:1: rule__DbObjectNameAll__Group__2 : rule__DbObjectNameAll__Group__2__Impl ;
    public final void rule__DbObjectNameAll__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10130:1: ( rule__DbObjectNameAll__Group__2__Impl )
            // InternalSQLParser.g:10131:2: rule__DbObjectNameAll__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2"


    // $ANTLR start "rule__DbObjectNameAll__Group__2__Impl"
    // InternalSQLParser.g:10137:1: rule__DbObjectNameAll__Group__2__Impl : ( RULE_STAR ) ;
    public final void rule__DbObjectNameAll__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10141:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:10142:1: ( RULE_STAR )
            {
            // InternalSQLParser.g:10142:1: ( RULE_STAR )
            // InternalSQLParser.g:10143:2: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__0"
    // InternalSQLParser.g:10153:1: rule__OrderByColumns__Group__0 : rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 ;
    public final void rule__OrderByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10157:1: ( rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 )
            // InternalSQLParser.g:10158:2: rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__OrderByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0"


    // $ANTLR start "rule__OrderByColumns__Group__0__Impl"
    // InternalSQLParser.g:10165:1: rule__OrderByColumns__Group__0__Impl : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10169:1: ( ( ruleOrderByColumnFull ) )
            // InternalSQLParser.g:10170:1: ( ruleOrderByColumnFull )
            {
            // InternalSQLParser.g:10170:1: ( ruleOrderByColumnFull )
            // InternalSQLParser.g:10171:2: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__1"
    // InternalSQLParser.g:10180:1: rule__OrderByColumns__Group__1 : rule__OrderByColumns__Group__1__Impl ;
    public final void rule__OrderByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10184:1: ( rule__OrderByColumns__Group__1__Impl )
            // InternalSQLParser.g:10185:2: rule__OrderByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1"


    // $ANTLR start "rule__OrderByColumns__Group__1__Impl"
    // InternalSQLParser.g:10191:1: rule__OrderByColumns__Group__1__Impl : ( ( rule__OrderByColumns__Group_1__0 )? ) ;
    public final void rule__OrderByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10195:1: ( ( ( rule__OrderByColumns__Group_1__0 )? ) )
            // InternalSQLParser.g:10196:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            {
            // InternalSQLParser.g:10196:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            // InternalSQLParser.g:10197:2: ( rule__OrderByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10198:2: ( rule__OrderByColumns__Group_1__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Comma) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSQLParser.g:10198:3: rule__OrderByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__0"
    // InternalSQLParser.g:10207:1: rule__OrderByColumns__Group_1__0 : rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 ;
    public final void rule__OrderByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10211:1: ( rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 )
            // InternalSQLParser.g:10212:2: rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__OrderByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1__0__Impl"
    // InternalSQLParser.g:10219:1: rule__OrderByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10223:1: ( ( () ) )
            // InternalSQLParser.g:10224:1: ( () )
            {
            // InternalSQLParser.g:10224:1: ( () )
            // InternalSQLParser.g:10225:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10226:2: ()
            // InternalSQLParser.g:10226:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__1"
    // InternalSQLParser.g:10234:1: rule__OrderByColumns__Group_1__1 : rule__OrderByColumns__Group_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10238:1: ( rule__OrderByColumns__Group_1__1__Impl )
            // InternalSQLParser.g:10239:2: rule__OrderByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1__1__Impl"
    // InternalSQLParser.g:10245:1: rule__OrderByColumns__Group_1__1__Impl : ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10249:1: ( ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10250:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10250:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10251:2: ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10251:2: ( ( rule__OrderByColumns__Group_1_1__0 ) )
            // InternalSQLParser.g:10252:3: ( rule__OrderByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10253:3: ( rule__OrderByColumns__Group_1_1__0 )
            // InternalSQLParser.g:10253:4: rule__OrderByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__OrderByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10256:2: ( ( rule__OrderByColumns__Group_1_1__0 )* )
            // InternalSQLParser.g:10257:3: ( rule__OrderByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10258:3: ( rule__OrderByColumns__Group_1_1__0 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==Comma) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalSQLParser.g:10258:4: rule__OrderByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__OrderByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0"
    // InternalSQLParser.g:10268:1: rule__OrderByColumns__Group_1_1__0 : rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 ;
    public final void rule__OrderByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10272:1: ( rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 )
            // InternalSQLParser.g:10273:2: rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__OrderByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0__Impl"
    // InternalSQLParser.g:10280:1: rule__OrderByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10284:1: ( ( Comma ) )
            // InternalSQLParser.g:10285:1: ( Comma )
            {
            // InternalSQLParser.g:10285:1: ( Comma )
            // InternalSQLParser.g:10286:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1"
    // InternalSQLParser.g:10295:1: rule__OrderByColumns__Group_1_1__1 : rule__OrderByColumns__Group_1_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10299:1: ( rule__OrderByColumns__Group_1_1__1__Impl )
            // InternalSQLParser.g:10300:2: rule__OrderByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1__Impl"
    // InternalSQLParser.g:10306:1: rule__OrderByColumns__Group_1_1__1__Impl : ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10310:1: ( ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10311:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10311:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10312:2: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10313:2: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10313:3: rule__OrderByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__0"
    // InternalSQLParser.g:10322:1: rule__OrderByColumnFull__Group__0 : rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 ;
    public final void rule__OrderByColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10326:1: ( rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 )
            // InternalSQLParser.g:10327:2: rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__OrderByColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0"


    // $ANTLR start "rule__OrderByColumnFull__Group__0__Impl"
    // InternalSQLParser.g:10334:1: rule__OrderByColumnFull__Group__0__Impl : ( ( rule__OrderByColumnFull__Alternatives_0 ) ) ;
    public final void rule__OrderByColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10338:1: ( ( ( rule__OrderByColumnFull__Alternatives_0 ) ) )
            // InternalSQLParser.g:10339:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            {
            // InternalSQLParser.g:10339:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            // InternalSQLParser.g:10340:2: ( rule__OrderByColumnFull__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:10341:2: ( rule__OrderByColumnFull__Alternatives_0 )
            // InternalSQLParser.g:10341:3: rule__OrderByColumnFull__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__1"
    // InternalSQLParser.g:10349:1: rule__OrderByColumnFull__Group__1 : rule__OrderByColumnFull__Group__1__Impl ;
    public final void rule__OrderByColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10353:1: ( rule__OrderByColumnFull__Group__1__Impl )
            // InternalSQLParser.g:10354:2: rule__OrderByColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1"


    // $ANTLR start "rule__OrderByColumnFull__Group__1__Impl"
    // InternalSQLParser.g:10360:1: rule__OrderByColumnFull__Group__1__Impl : ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) ;
    public final void rule__OrderByColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10364:1: ( ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) )
            // InternalSQLParser.g:10365:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            {
            // InternalSQLParser.g:10365:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            // InternalSQLParser.g:10366:2: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }
            // InternalSQLParser.g:10367:2: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==DESC||LA108_0==ASC) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSQLParser.g:10367:3: rule__OrderByColumnFull__DirectionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__DirectionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__0"
    // InternalSQLParser.g:10376:1: rule__GroupByColumns__Group__0 : rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 ;
    public final void rule__GroupByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10380:1: ( rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 )
            // InternalSQLParser.g:10381:2: rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__GroupByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0"


    // $ANTLR start "rule__GroupByColumns__Group__0__Impl"
    // InternalSQLParser.g:10388:1: rule__GroupByColumns__Group__0__Impl : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10392:1: ( ( ruleGroupByColumnFull ) )
            // InternalSQLParser.g:10393:1: ( ruleGroupByColumnFull )
            {
            // InternalSQLParser.g:10393:1: ( ruleGroupByColumnFull )
            // InternalSQLParser.g:10394:2: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__1"
    // InternalSQLParser.g:10403:1: rule__GroupByColumns__Group__1 : rule__GroupByColumns__Group__1__Impl ;
    public final void rule__GroupByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10407:1: ( rule__GroupByColumns__Group__1__Impl )
            // InternalSQLParser.g:10408:2: rule__GroupByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1"


    // $ANTLR start "rule__GroupByColumns__Group__1__Impl"
    // InternalSQLParser.g:10414:1: rule__GroupByColumns__Group__1__Impl : ( ( rule__GroupByColumns__Group_1__0 )? ) ;
    public final void rule__GroupByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10418:1: ( ( ( rule__GroupByColumns__Group_1__0 )? ) )
            // InternalSQLParser.g:10419:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            {
            // InternalSQLParser.g:10419:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            // InternalSQLParser.g:10420:2: ( rule__GroupByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10421:2: ( rule__GroupByColumns__Group_1__0 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==Comma) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalSQLParser.g:10421:3: rule__GroupByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__0"
    // InternalSQLParser.g:10430:1: rule__GroupByColumns__Group_1__0 : rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 ;
    public final void rule__GroupByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10434:1: ( rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 )
            // InternalSQLParser.g:10435:2: rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__GroupByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1__0__Impl"
    // InternalSQLParser.g:10442:1: rule__GroupByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__GroupByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10446:1: ( ( () ) )
            // InternalSQLParser.g:10447:1: ( () )
            {
            // InternalSQLParser.g:10447:1: ( () )
            // InternalSQLParser.g:10448:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10449:2: ()
            // InternalSQLParser.g:10449:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__1"
    // InternalSQLParser.g:10457:1: rule__GroupByColumns__Group_1__1 : rule__GroupByColumns__Group_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10461:1: ( rule__GroupByColumns__Group_1__1__Impl )
            // InternalSQLParser.g:10462:2: rule__GroupByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1__1__Impl"
    // InternalSQLParser.g:10468:1: rule__GroupByColumns__Group_1__1__Impl : ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__GroupByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10472:1: ( ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10473:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10473:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10474:2: ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10474:2: ( ( rule__GroupByColumns__Group_1_1__0 ) )
            // InternalSQLParser.g:10475:3: ( rule__GroupByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10476:3: ( rule__GroupByColumns__Group_1_1__0 )
            // InternalSQLParser.g:10476:4: rule__GroupByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__GroupByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10479:2: ( ( rule__GroupByColumns__Group_1_1__0 )* )
            // InternalSQLParser.g:10480:3: ( rule__GroupByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10481:3: ( rule__GroupByColumns__Group_1_1__0 )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==Comma) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalSQLParser.g:10481:4: rule__GroupByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__GroupByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0"
    // InternalSQLParser.g:10491:1: rule__GroupByColumns__Group_1_1__0 : rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 ;
    public final void rule__GroupByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10495:1: ( rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 )
            // InternalSQLParser.g:10496:2: rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__GroupByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0__Impl"
    // InternalSQLParser.g:10503:1: rule__GroupByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__GroupByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10507:1: ( ( Comma ) )
            // InternalSQLParser.g:10508:1: ( Comma )
            {
            // InternalSQLParser.g:10508:1: ( Comma )
            // InternalSQLParser.g:10509:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1"
    // InternalSQLParser.g:10518:1: rule__GroupByColumns__Group_1_1__1 : rule__GroupByColumns__Group_1_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10522:1: ( rule__GroupByColumns__Group_1_1__1__Impl )
            // InternalSQLParser.g:10523:2: rule__GroupByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1__Impl"
    // InternalSQLParser.g:10529:1: rule__GroupByColumns__Group_1_1__1__Impl : ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__GroupByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10533:1: ( ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10534:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10534:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10535:2: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10536:2: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10536:3: rule__GroupByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__FullExpression__Group__0"
    // InternalSQLParser.g:10545:1: rule__FullExpression__Group__0 : rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 ;
    public final void rule__FullExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10549:1: ( rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 )
            // InternalSQLParser.g:10550:2: rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__FullExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0"


    // $ANTLR start "rule__FullExpression__Group__0__Impl"
    // InternalSQLParser.g:10557:1: rule__FullExpression__Group__0__Impl : ( ruleExpressionFragment ) ;
    public final void rule__FullExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10561:1: ( ( ruleExpressionFragment ) )
            // InternalSQLParser.g:10562:1: ( ruleExpressionFragment )
            {
            // InternalSQLParser.g:10562:1: ( ruleExpressionFragment )
            // InternalSQLParser.g:10563:2: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0__Impl"


    // $ANTLR start "rule__FullExpression__Group__1"
    // InternalSQLParser.g:10572:1: rule__FullExpression__Group__1 : rule__FullExpression__Group__1__Impl ;
    public final void rule__FullExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10576:1: ( rule__FullExpression__Group__1__Impl )
            // InternalSQLParser.g:10577:2: rule__FullExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1"


    // $ANTLR start "rule__FullExpression__Group__1__Impl"
    // InternalSQLParser.g:10583:1: rule__FullExpression__Group__1__Impl : ( ( rule__FullExpression__Group_1__0 )? ) ;
    public final void rule__FullExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10587:1: ( ( ( rule__FullExpression__Group_1__0 )? ) )
            // InternalSQLParser.g:10588:1: ( ( rule__FullExpression__Group_1__0 )? )
            {
            // InternalSQLParser.g:10588:1: ( ( rule__FullExpression__Group_1__0 )? )
            // InternalSQLParser.g:10589:2: ( rule__FullExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10590:2: ( rule__FullExpression__Group_1__0 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==AND||LA111_0==OR||LA111_0==RULE_JRNPARAM) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalSQLParser.g:10590:3: rule__FullExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FullExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__0"
    // InternalSQLParser.g:10599:1: rule__FullExpression__Group_1__0 : rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 ;
    public final void rule__FullExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10603:1: ( rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 )
            // InternalSQLParser.g:10604:2: rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1
            {
            pushFollow(FOLLOW_51);
            rule__FullExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0"


    // $ANTLR start "rule__FullExpression__Group_1__0__Impl"
    // InternalSQLParser.g:10611:1: rule__FullExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__FullExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10615:1: ( ( () ) )
            // InternalSQLParser.g:10616:1: ( () )
            {
            // InternalSQLParser.g:10616:1: ( () )
            // InternalSQLParser.g:10617:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10618:2: ()
            // InternalSQLParser.g:10618:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__1"
    // InternalSQLParser.g:10626:1: rule__FullExpression__Group_1__1 : rule__FullExpression__Group_1__1__Impl ;
    public final void rule__FullExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10630:1: ( rule__FullExpression__Group_1__1__Impl )
            // InternalSQLParser.g:10631:2: rule__FullExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1"


    // $ANTLR start "rule__FullExpression__Group_1__1__Impl"
    // InternalSQLParser.g:10637:1: rule__FullExpression__Group_1__1__Impl : ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__FullExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10641:1: ( ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) )
            // InternalSQLParser.g:10642:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            {
            // InternalSQLParser.g:10642:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            // InternalSQLParser.g:10643:2: ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            {
            // InternalSQLParser.g:10643:2: ( ( rule__FullExpression__EntriesAssignment_1_1 ) )
            // InternalSQLParser.g:10644:3: ( rule__FullExpression__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:10645:3: ( rule__FullExpression__EntriesAssignment_1_1 )
            // InternalSQLParser.g:10645:4: rule__FullExpression__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_52);
            rule__FullExpression__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSQLParser.g:10648:2: ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            // InternalSQLParser.g:10649:3: ( rule__FullExpression__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:10650:3: ( rule__FullExpression__EntriesAssignment_1_1 )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==AND||LA112_0==OR||LA112_0==RULE_JRNPARAM) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalSQLParser.g:10650:4: rule__FullExpression__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_52);
            	    rule__FullExpression__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0"
    // InternalSQLParser.g:10660:1: rule__ExpressionFragmentSecond__Group_0__0 : rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 ;
    public final void rule__ExpressionFragmentSecond__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10664:1: ( rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 )
            // InternalSQLParser.g:10665:2: rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1
            {
            pushFollow(FOLLOW_24);
            rule__ExpressionFragmentSecond__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0__Impl"
    // InternalSQLParser.g:10672:1: rule__ExpressionFragmentSecond__Group_0__0__Impl : ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10676:1: ( ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) )
            // InternalSQLParser.g:10677:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            {
            // InternalSQLParser.g:10677:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            // InternalSQLParser.g:10678:2: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }
            // InternalSQLParser.g:10679:2: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            // InternalSQLParser.g:10679:3: rule__ExpressionFragmentSecond__CAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1"
    // InternalSQLParser.g:10687:1: rule__ExpressionFragmentSecond__Group_0__1 : rule__ExpressionFragmentSecond__Group_0__1__Impl ;
    public final void rule__ExpressionFragmentSecond__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10691:1: ( rule__ExpressionFragmentSecond__Group_0__1__Impl )
            // InternalSQLParser.g:10692:2: rule__ExpressionFragmentSecond__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1__Impl"
    // InternalSQLParser.g:10698:1: rule__ExpressionFragmentSecond__Group_0__1__Impl : ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10702:1: ( ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) )
            // InternalSQLParser.g:10703:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            {
            // InternalSQLParser.g:10703:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            // InternalSQLParser.g:10704:2: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }
            // InternalSQLParser.g:10705:2: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            // InternalSQLParser.g:10705:3: rule__ExpressionFragmentSecond__EfragAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__EfragAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__0"
    // InternalSQLParser.g:10714:1: rule__ExpressionGroup__Group__0 : rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 ;
    public final void rule__ExpressionGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10718:1: ( rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 )
            // InternalSQLParser.g:10719:2: rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__ExpressionGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0"


    // $ANTLR start "rule__ExpressionGroup__Group__0__Impl"
    // InternalSQLParser.g:10726:1: rule__ExpressionGroup__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10730:1: ( ( () ) )
            // InternalSQLParser.g:10731:1: ( () )
            {
            // InternalSQLParser.g:10731:1: ( () )
            // InternalSQLParser.g:10732:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }
            // InternalSQLParser.g:10733:2: ()
            // InternalSQLParser.g:10733:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__1"
    // InternalSQLParser.g:10741:1: rule__ExpressionGroup__Group__1 : rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 ;
    public final void rule__ExpressionGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10745:1: ( rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 )
            // InternalSQLParser.g:10746:2: rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2
            {
            pushFollow(FOLLOW_53);
            rule__ExpressionGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1"


    // $ANTLR start "rule__ExpressionGroup__Group__1__Impl"
    // InternalSQLParser.g:10753:1: rule__ExpressionGroup__Group__1__Impl : ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) ;
    public final void rule__ExpressionGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10757:1: ( ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) )
            // InternalSQLParser.g:10758:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            {
            // InternalSQLParser.g:10758:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            // InternalSQLParser.g:10759:2: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }
            // InternalSQLParser.g:10760:2: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==NOT_1||LA113_0==NOT) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSQLParser.g:10760:3: rule__ExpressionGroup__IsnotAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionGroup__IsnotAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__2"
    // InternalSQLParser.g:10768:1: rule__ExpressionGroup__Group__2 : rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 ;
    public final void rule__ExpressionGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10772:1: ( rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 )
            // InternalSQLParser.g:10773:2: rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__ExpressionGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2"


    // $ANTLR start "rule__ExpressionGroup__Group__2__Impl"
    // InternalSQLParser.g:10780:1: rule__ExpressionGroup__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__ExpressionGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10784:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10785:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10785:1: ( LeftParenthesis )
            // InternalSQLParser.g:10786:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__3"
    // InternalSQLParser.g:10795:1: rule__ExpressionGroup__Group__3 : rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 ;
    public final void rule__ExpressionGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10799:1: ( rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 )
            // InternalSQLParser.g:10800:2: rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__ExpressionGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3"


    // $ANTLR start "rule__ExpressionGroup__Group__3__Impl"
    // InternalSQLParser.g:10807:1: rule__ExpressionGroup__Group__3__Impl : ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) ;
    public final void rule__ExpressionGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10811:1: ( ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) )
            // InternalSQLParser.g:10812:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            {
            // InternalSQLParser.g:10812:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            // InternalSQLParser.g:10813:2: ( rule__ExpressionGroup__ExprAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }
            // InternalSQLParser.g:10814:2: ( rule__ExpressionGroup__ExprAssignment_3 )
            // InternalSQLParser.g:10814:3: rule__ExpressionGroup__ExprAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__ExprAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__4"
    // InternalSQLParser.g:10822:1: rule__ExpressionGroup__Group__4 : rule__ExpressionGroup__Group__4__Impl ;
    public final void rule__ExpressionGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10826:1: ( rule__ExpressionGroup__Group__4__Impl )
            // InternalSQLParser.g:10827:2: rule__ExpressionGroup__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4"


    // $ANTLR start "rule__ExpressionGroup__Group__4__Impl"
    // InternalSQLParser.g:10833:1: rule__ExpressionGroup__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__ExpressionGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10837:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:10838:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:10838:1: ( RightParenthesis )
            // InternalSQLParser.g:10839:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__0"
    // InternalSQLParser.g:10849:1: rule__XExpression__Group__0 : rule__XExpression__Group__0__Impl rule__XExpression__Group__1 ;
    public final void rule__XExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10853:1: ( rule__XExpression__Group__0__Impl rule__XExpression__Group__1 )
            // InternalSQLParser.g:10854:2: rule__XExpression__Group__0__Impl rule__XExpression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__XExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0"


    // $ANTLR start "rule__XExpression__Group__0__Impl"
    // InternalSQLParser.g:10861:1: rule__XExpression__Group__0__Impl : ( X ) ;
    public final void rule__XExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10865:1: ( ( X ) )
            // InternalSQLParser.g:10866:1: ( X )
            {
            // InternalSQLParser.g:10866:1: ( X )
            // InternalSQLParser.g:10867:2: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0__Impl"


    // $ANTLR start "rule__XExpression__Group__1"
    // InternalSQLParser.g:10876:1: rule__XExpression__Group__1 : rule__XExpression__Group__1__Impl rule__XExpression__Group__2 ;
    public final void rule__XExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10880:1: ( rule__XExpression__Group__1__Impl rule__XExpression__Group__2 )
            // InternalSQLParser.g:10881:2: rule__XExpression__Group__1__Impl rule__XExpression__Group__2
            {
            pushFollow(FOLLOW_54);
            rule__XExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1"


    // $ANTLR start "rule__XExpression__Group__1__Impl"
    // InternalSQLParser.g:10888:1: rule__XExpression__Group__1__Impl : ( () ) ;
    public final void rule__XExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10892:1: ( ( () ) )
            // InternalSQLParser.g:10893:1: ( () )
            {
            // InternalSQLParser.g:10893:1: ( () )
            // InternalSQLParser.g:10894:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }
            // InternalSQLParser.g:10895:2: ()
            // InternalSQLParser.g:10895:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1__Impl"


    // $ANTLR start "rule__XExpression__Group__2"
    // InternalSQLParser.g:10903:1: rule__XExpression__Group__2 : rule__XExpression__Group__2__Impl rule__XExpression__Group__3 ;
    public final void rule__XExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10907:1: ( rule__XExpression__Group__2__Impl rule__XExpression__Group__3 )
            // InternalSQLParser.g:10908:2: rule__XExpression__Group__2__Impl rule__XExpression__Group__3
            {
            pushFollow(FOLLOW_8);
            rule__XExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2"


    // $ANTLR start "rule__XExpression__Group__2__Impl"
    // InternalSQLParser.g:10915:1: rule__XExpression__Group__2__Impl : ( ( rule__XExpression__XfAssignment_2 ) ) ;
    public final void rule__XExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10919:1: ( ( ( rule__XExpression__XfAssignment_2 ) ) )
            // InternalSQLParser.g:10920:1: ( ( rule__XExpression__XfAssignment_2 ) )
            {
            // InternalSQLParser.g:10920:1: ( ( rule__XExpression__XfAssignment_2 ) )
            // InternalSQLParser.g:10921:2: ( rule__XExpression__XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }
            // InternalSQLParser.g:10922:2: ( rule__XExpression__XfAssignment_2 )
            // InternalSQLParser.g:10922:3: rule__XExpression__XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2__Impl"


    // $ANTLR start "rule__XExpression__Group__3"
    // InternalSQLParser.g:10930:1: rule__XExpression__Group__3 : rule__XExpression__Group__3__Impl rule__XExpression__Group__4 ;
    public final void rule__XExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10934:1: ( rule__XExpression__Group__3__Impl rule__XExpression__Group__4 )
            // InternalSQLParser.g:10935:2: rule__XExpression__Group__3__Impl rule__XExpression__Group__4
            {
            pushFollow(FOLLOW_55);
            rule__XExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3"


    // $ANTLR start "rule__XExpression__Group__3__Impl"
    // InternalSQLParser.g:10942:1: rule__XExpression__Group__3__Impl : ( Comma ) ;
    public final void rule__XExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10946:1: ( ( Comma ) )
            // InternalSQLParser.g:10947:1: ( Comma )
            {
            // InternalSQLParser.g:10947:1: ( Comma )
            // InternalSQLParser.g:10948:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3__Impl"


    // $ANTLR start "rule__XExpression__Group__4"
    // InternalSQLParser.g:10957:1: rule__XExpression__Group__4 : rule__XExpression__Group__4__Impl rule__XExpression__Group__5 ;
    public final void rule__XExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10961:1: ( rule__XExpression__Group__4__Impl rule__XExpression__Group__5 )
            // InternalSQLParser.g:10962:2: rule__XExpression__Group__4__Impl rule__XExpression__Group__5
            {
            pushFollow(FOLLOW_56);
            rule__XExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4"


    // $ANTLR start "rule__XExpression__Group__4__Impl"
    // InternalSQLParser.g:10969:1: rule__XExpression__Group__4__Impl : ( ( rule__XExpression__ColAssignment_4 ) ) ;
    public final void rule__XExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10973:1: ( ( ( rule__XExpression__ColAssignment_4 ) ) )
            // InternalSQLParser.g:10974:1: ( ( rule__XExpression__ColAssignment_4 ) )
            {
            // InternalSQLParser.g:10974:1: ( ( rule__XExpression__ColAssignment_4 ) )
            // InternalSQLParser.g:10975:2: ( rule__XExpression__ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }
            // InternalSQLParser.g:10976:2: ( rule__XExpression__ColAssignment_4 )
            // InternalSQLParser.g:10976:3: rule__XExpression__ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__5"
    // InternalSQLParser.g:10984:1: rule__XExpression__Group__5 : rule__XExpression__Group__5__Impl rule__XExpression__Group__6 ;
    public final void rule__XExpression__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10988:1: ( rule__XExpression__Group__5__Impl rule__XExpression__Group__6 )
            // InternalSQLParser.g:10989:2: rule__XExpression__Group__5__Impl rule__XExpression__Group__6
            {
            pushFollow(FOLLOW_56);
            rule__XExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5"


    // $ANTLR start "rule__XExpression__Group__5__Impl"
    // InternalSQLParser.g:10996:1: rule__XExpression__Group__5__Impl : ( ( rule__XExpression__Group_5__0 )? ) ;
    public final void rule__XExpression__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11000:1: ( ( ( rule__XExpression__Group_5__0 )? ) )
            // InternalSQLParser.g:11001:1: ( ( rule__XExpression__Group_5__0 )? )
            {
            // InternalSQLParser.g:11001:1: ( ( rule__XExpression__Group_5__0 )? )
            // InternalSQLParser.g:11002:2: ( rule__XExpression__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }
            // InternalSQLParser.g:11003:2: ( rule__XExpression__Group_5__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==Comma) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSQLParser.g:11003:3: rule__XExpression__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5__Impl"


    // $ANTLR start "rule__XExpression__Group__6"
    // InternalSQLParser.g:11011:1: rule__XExpression__Group__6 : rule__XExpression__Group__6__Impl ;
    public final void rule__XExpression__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11015:1: ( rule__XExpression__Group__6__Impl )
            // InternalSQLParser.g:11016:2: rule__XExpression__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6"


    // $ANTLR start "rule__XExpression__Group__6__Impl"
    // InternalSQLParser.g:11022:1: rule__XExpression__Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11026:1: ( ( RightCurlyBracket ) )
            // InternalSQLParser.g:11027:1: ( RightCurlyBracket )
            {
            // InternalSQLParser.g:11027:1: ( RightCurlyBracket )
            // InternalSQLParser.g:11028:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6__Impl"


    // $ANTLR start "rule__XExpression__Group_5__0"
    // InternalSQLParser.g:11038:1: rule__XExpression__Group_5__0 : rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 ;
    public final void rule__XExpression__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11042:1: ( rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 )
            // InternalSQLParser.g:11043:2: rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1
            {
            pushFollow(FOLLOW_37);
            rule__XExpression__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0"


    // $ANTLR start "rule__XExpression__Group_5__0__Impl"
    // InternalSQLParser.g:11050:1: rule__XExpression__Group_5__0__Impl : ( Comma ) ;
    public final void rule__XExpression__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11054:1: ( ( Comma ) )
            // InternalSQLParser.g:11055:1: ( Comma )
            {
            // InternalSQLParser.g:11055:1: ( Comma )
            // InternalSQLParser.g:11056:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0__Impl"


    // $ANTLR start "rule__XExpression__Group_5__1"
    // InternalSQLParser.g:11065:1: rule__XExpression__Group_5__1 : rule__XExpression__Group_5__1__Impl ;
    public final void rule__XExpression__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11069:1: ( rule__XExpression__Group_5__1__Impl )
            // InternalSQLParser.g:11070:2: rule__XExpression__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1"


    // $ANTLR start "rule__XExpression__Group_5__1__Impl"
    // InternalSQLParser.g:11076:1: rule__XExpression__Group_5__1__Impl : ( ( rule__XExpression__PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11080:1: ( ( ( rule__XExpression__PrmAssignment_5_1 ) ) )
            // InternalSQLParser.g:11081:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            {
            // InternalSQLParser.g:11081:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            // InternalSQLParser.g:11082:2: ( rule__XExpression__PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }
            // InternalSQLParser.g:11083:2: ( rule__XExpression__PrmAssignment_5_1 )
            // InternalSQLParser.g:11083:3: rule__XExpression__PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1__Impl"


    // $ANTLR start "rule__XExpression___Group__0"
    // InternalSQLParser.g:11092:1: rule__XExpression___Group__0 : rule__XExpression___Group__0__Impl rule__XExpression___Group__1 ;
    public final void rule__XExpression___Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11096:1: ( rule__XExpression___Group__0__Impl rule__XExpression___Group__1 )
            // InternalSQLParser.g:11097:2: rule__XExpression___Group__0__Impl rule__XExpression___Group__1
            {
            pushFollow(FOLLOW_54);
            rule__XExpression___Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0"


    // $ANTLR start "rule__XExpression___Group__0__Impl"
    // InternalSQLParser.g:11104:1: rule__XExpression___Group__0__Impl : ( X ) ;
    public final void rule__XExpression___Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11108:1: ( ( X ) )
            // InternalSQLParser.g:11109:1: ( X )
            {
            // InternalSQLParser.g:11109:1: ( X )
            // InternalSQLParser.g:11110:2: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0__Impl"


    // $ANTLR start "rule__XExpression___Group__1"
    // InternalSQLParser.g:11119:1: rule__XExpression___Group__1 : rule__XExpression___Group__1__Impl rule__XExpression___Group__2 ;
    public final void rule__XExpression___Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11123:1: ( rule__XExpression___Group__1__Impl rule__XExpression___Group__2 )
            // InternalSQLParser.g:11124:2: rule__XExpression___Group__1__Impl rule__XExpression___Group__2
            {
            pushFollow(FOLLOW_54);
            rule__XExpression___Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1"


    // $ANTLR start "rule__XExpression___Group__1__Impl"
    // InternalSQLParser.g:11131:1: rule__XExpression___Group__1__Impl : ( () ) ;
    public final void rule__XExpression___Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11135:1: ( ( () ) )
            // InternalSQLParser.g:11136:1: ( () )
            {
            // InternalSQLParser.g:11136:1: ( () )
            // InternalSQLParser.g:11137:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }
            // InternalSQLParser.g:11138:2: ()
            // InternalSQLParser.g:11138:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1__Impl"


    // $ANTLR start "rule__XExpression___Group__2"
    // InternalSQLParser.g:11146:1: rule__XExpression___Group__2 : rule__XExpression___Group__2__Impl rule__XExpression___Group__3 ;
    public final void rule__XExpression___Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11150:1: ( rule__XExpression___Group__2__Impl rule__XExpression___Group__3 )
            // InternalSQLParser.g:11151:2: rule__XExpression___Group__2__Impl rule__XExpression___Group__3
            {
            pushFollow(FOLLOW_57);
            rule__XExpression___Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2"


    // $ANTLR start "rule__XExpression___Group__2__Impl"
    // InternalSQLParser.g:11158:1: rule__XExpression___Group__2__Impl : ( ( rule__XExpression___XfAssignment_2 ) ) ;
    public final void rule__XExpression___Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11162:1: ( ( ( rule__XExpression___XfAssignment_2 ) ) )
            // InternalSQLParser.g:11163:1: ( ( rule__XExpression___XfAssignment_2 ) )
            {
            // InternalSQLParser.g:11163:1: ( ( rule__XExpression___XfAssignment_2 ) )
            // InternalSQLParser.g:11164:2: ( rule__XExpression___XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }
            // InternalSQLParser.g:11165:2: ( rule__XExpression___XfAssignment_2 )
            // InternalSQLParser.g:11165:3: rule__XExpression___XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2__Impl"


    // $ANTLR start "rule__XExpression___Group__3"
    // InternalSQLParser.g:11173:1: rule__XExpression___Group__3 : rule__XExpression___Group__3__Impl rule__XExpression___Group__4 ;
    public final void rule__XExpression___Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11177:1: ( rule__XExpression___Group__3__Impl rule__XExpression___Group__4 )
            // InternalSQLParser.g:11178:2: rule__XExpression___Group__3__Impl rule__XExpression___Group__4
            {
            pushFollow(FOLLOW_55);
            rule__XExpression___Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3"


    // $ANTLR start "rule__XExpression___Group__3__Impl"
    // InternalSQLParser.g:11185:1: rule__XExpression___Group__3__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11189:1: ( ( VerticalLine ) )
            // InternalSQLParser.g:11190:1: ( VerticalLine )
            {
            // InternalSQLParser.g:11190:1: ( VerticalLine )
            // InternalSQLParser.g:11191:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3__Impl"


    // $ANTLR start "rule__XExpression___Group__4"
    // InternalSQLParser.g:11200:1: rule__XExpression___Group__4 : rule__XExpression___Group__4__Impl rule__XExpression___Group__5 ;
    public final void rule__XExpression___Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11204:1: ( rule__XExpression___Group__4__Impl rule__XExpression___Group__5 )
            // InternalSQLParser.g:11205:2: rule__XExpression___Group__4__Impl rule__XExpression___Group__5
            {
            pushFollow(FOLLOW_58);
            rule__XExpression___Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4"


    // $ANTLR start "rule__XExpression___Group__4__Impl"
    // InternalSQLParser.g:11212:1: rule__XExpression___Group__4__Impl : ( ( rule__XExpression___ColAssignment_4 ) ) ;
    public final void rule__XExpression___Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11216:1: ( ( ( rule__XExpression___ColAssignment_4 ) ) )
            // InternalSQLParser.g:11217:1: ( ( rule__XExpression___ColAssignment_4 ) )
            {
            // InternalSQLParser.g:11217:1: ( ( rule__XExpression___ColAssignment_4 ) )
            // InternalSQLParser.g:11218:2: ( rule__XExpression___ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }
            // InternalSQLParser.g:11219:2: ( rule__XExpression___ColAssignment_4 )
            // InternalSQLParser.g:11219:3: rule__XExpression___ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4__Impl"


    // $ANTLR start "rule__XExpression___Group__5"
    // InternalSQLParser.g:11227:1: rule__XExpression___Group__5 : rule__XExpression___Group__5__Impl rule__XExpression___Group__6 ;
    public final void rule__XExpression___Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11231:1: ( rule__XExpression___Group__5__Impl rule__XExpression___Group__6 )
            // InternalSQLParser.g:11232:2: rule__XExpression___Group__5__Impl rule__XExpression___Group__6
            {
            pushFollow(FOLLOW_58);
            rule__XExpression___Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5"


    // $ANTLR start "rule__XExpression___Group__5__Impl"
    // InternalSQLParser.g:11239:1: rule__XExpression___Group__5__Impl : ( ( rule__XExpression___Group_5__0 )? ) ;
    public final void rule__XExpression___Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11243:1: ( ( ( rule__XExpression___Group_5__0 )? ) )
            // InternalSQLParser.g:11244:1: ( ( rule__XExpression___Group_5__0 )? )
            {
            // InternalSQLParser.g:11244:1: ( ( rule__XExpression___Group_5__0 )? )
            // InternalSQLParser.g:11245:2: ( rule__XExpression___Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup_5()); 
            }
            // InternalSQLParser.g:11246:2: ( rule__XExpression___Group_5__0 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==VerticalLine) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSQLParser.g:11246:3: rule__XExpression___Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression___Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5__Impl"


    // $ANTLR start "rule__XExpression___Group__6"
    // InternalSQLParser.g:11254:1: rule__XExpression___Group__6 : rule__XExpression___Group__6__Impl ;
    public final void rule__XExpression___Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11258:1: ( rule__XExpression___Group__6__Impl )
            // InternalSQLParser.g:11259:2: rule__XExpression___Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6"


    // $ANTLR start "rule__XExpression___Group__6__Impl"
    // InternalSQLParser.g:11265:1: rule__XExpression___Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression___Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11269:1: ( ( RightCurlyBracket ) )
            // InternalSQLParser.g:11270:1: ( RightCurlyBracket )
            {
            // InternalSQLParser.g:11270:1: ( RightCurlyBracket )
            // InternalSQLParser.g:11271:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6__Impl"


    // $ANTLR start "rule__XExpression___Group_5__0"
    // InternalSQLParser.g:11281:1: rule__XExpression___Group_5__0 : rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 ;
    public final void rule__XExpression___Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11285:1: ( rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 )
            // InternalSQLParser.g:11286:2: rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1
            {
            pushFollow(FOLLOW_37);
            rule__XExpression___Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0"


    // $ANTLR start "rule__XExpression___Group_5__0__Impl"
    // InternalSQLParser.g:11293:1: rule__XExpression___Group_5__0__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11297:1: ( ( VerticalLine ) )
            // InternalSQLParser.g:11298:1: ( VerticalLine )
            {
            // InternalSQLParser.g:11298:1: ( VerticalLine )
            // InternalSQLParser.g:11299:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0__Impl"


    // $ANTLR start "rule__XExpression___Group_5__1"
    // InternalSQLParser.g:11308:1: rule__XExpression___Group_5__1 : rule__XExpression___Group_5__1__Impl ;
    public final void rule__XExpression___Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11312:1: ( rule__XExpression___Group_5__1__Impl )
            // InternalSQLParser.g:11313:2: rule__XExpression___Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1"


    // $ANTLR start "rule__XExpression___Group_5__1__Impl"
    // InternalSQLParser.g:11319:1: rule__XExpression___Group_5__1__Impl : ( ( rule__XExpression___PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression___Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11323:1: ( ( ( rule__XExpression___PrmAssignment_5_1 ) ) )
            // InternalSQLParser.g:11324:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            {
            // InternalSQLParser.g:11324:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            // InternalSQLParser.g:11325:2: ( rule__XExpression___PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }
            // InternalSQLParser.g:11326:2: ( rule__XExpression___PrmAssignment_5_1 )
            // InternalSQLParser.g:11326:3: rule__XExpression___PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__0"
    // InternalSQLParser.g:11335:1: rule__XExpressionParams__Group__0 : rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 ;
    public final void rule__XExpressionParams__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11339:1: ( rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 )
            // InternalSQLParser.g:11340:2: rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__XExpressionParams__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0"


    // $ANTLR start "rule__XExpressionParams__Group__0__Impl"
    // InternalSQLParser.g:11347:1: rule__XExpressionParams__Group__0__Impl : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11351:1: ( ( ruleJRParameter ) )
            // InternalSQLParser.g:11352:1: ( ruleJRParameter )
            {
            // InternalSQLParser.g:11352:1: ( ruleJRParameter )
            // InternalSQLParser.g:11353:2: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__1"
    // InternalSQLParser.g:11362:1: rule__XExpressionParams__Group__1 : rule__XExpressionParams__Group__1__Impl ;
    public final void rule__XExpressionParams__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11366:1: ( rule__XExpressionParams__Group__1__Impl )
            // InternalSQLParser.g:11367:2: rule__XExpressionParams__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1"


    // $ANTLR start "rule__XExpressionParams__Group__1__Impl"
    // InternalSQLParser.g:11373:1: rule__XExpressionParams__Group__1__Impl : ( ( rule__XExpressionParams__Group_1__0 )? ) ;
    public final void rule__XExpressionParams__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11377:1: ( ( ( rule__XExpressionParams__Group_1__0 )? ) )
            // InternalSQLParser.g:11378:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            {
            // InternalSQLParser.g:11378:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            // InternalSQLParser.g:11379:2: ( rule__XExpressionParams__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11380:2: ( rule__XExpressionParams__Group_1__0 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==Comma) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSQLParser.g:11380:3: rule__XExpressionParams__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpressionParams__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__0"
    // InternalSQLParser.g:11389:1: rule__XExpressionParams__Group_1__0 : rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 ;
    public final void rule__XExpressionParams__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11393:1: ( rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 )
            // InternalSQLParser.g:11394:2: rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__XExpressionParams__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1__0__Impl"
    // InternalSQLParser.g:11401:1: rule__XExpressionParams__Group_1__0__Impl : ( () ) ;
    public final void rule__XExpressionParams__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11405:1: ( ( () ) )
            // InternalSQLParser.g:11406:1: ( () )
            {
            // InternalSQLParser.g:11406:1: ( () )
            // InternalSQLParser.g:11407:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:11408:2: ()
            // InternalSQLParser.g:11408:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__1"
    // InternalSQLParser.g:11416:1: rule__XExpressionParams__Group_1__1 : rule__XExpressionParams__Group_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11420:1: ( rule__XExpressionParams__Group_1__1__Impl )
            // InternalSQLParser.g:11421:2: rule__XExpressionParams__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1__1__Impl"
    // InternalSQLParser.g:11427:1: rule__XExpressionParams__Group_1__1__Impl : ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) ;
    public final void rule__XExpressionParams__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11431:1: ( ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:11432:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:11432:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            // InternalSQLParser.g:11433:2: ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:11433:2: ( ( rule__XExpressionParams__Group_1_1__0 ) )
            // InternalSQLParser.g:11434:3: ( rule__XExpressionParams__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11435:3: ( rule__XExpressionParams__Group_1_1__0 )
            // InternalSQLParser.g:11435:4: rule__XExpressionParams__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__XExpressionParams__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:11438:2: ( ( rule__XExpressionParams__Group_1_1__0 )* )
            // InternalSQLParser.g:11439:3: ( rule__XExpressionParams__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11440:3: ( rule__XExpressionParams__Group_1_1__0 )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==Comma) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalSQLParser.g:11440:4: rule__XExpressionParams__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__XExpressionParams__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0"
    // InternalSQLParser.g:11450:1: rule__XExpressionParams__Group_1_1__0 : rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 ;
    public final void rule__XExpressionParams__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11454:1: ( rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 )
            // InternalSQLParser.g:11455:2: rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1
            {
            pushFollow(FOLLOW_37);
            rule__XExpressionParams__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0__Impl"
    // InternalSQLParser.g:11462:1: rule__XExpressionParams__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__XExpressionParams__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11466:1: ( ( Comma ) )
            // InternalSQLParser.g:11467:1: ( Comma )
            {
            // InternalSQLParser.g:11467:1: ( Comma )
            // InternalSQLParser.g:11468:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1"
    // InternalSQLParser.g:11477:1: rule__XExpressionParams__Group_1_1__1 : rule__XExpressionParams__Group_1_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11481:1: ( rule__XExpressionParams__Group_1_1__1__Impl )
            // InternalSQLParser.g:11482:2: rule__XExpressionParams__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1__Impl"
    // InternalSQLParser.g:11488:1: rule__XExpressionParams__Group_1_1__1__Impl : ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__XExpressionParams__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11492:1: ( ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:11493:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:11493:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:11494:2: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:11495:2: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:11495:3: rule__XExpressionParams__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1__Impl"


    // $ANTLR start "rule__Expression__Group__0"
    // InternalSQLParser.g:11504:1: rule__Expression__Group__0 : rule__Expression__Group__0__Impl rule__Expression__Group__1 ;
    public final void rule__Expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11508:1: ( rule__Expression__Group__0__Impl rule__Expression__Group__1 )
            // InternalSQLParser.g:11509:2: rule__Expression__Group__0__Impl rule__Expression__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__Expression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0"


    // $ANTLR start "rule__Expression__Group__0__Impl"
    // InternalSQLParser.g:11516:1: rule__Expression__Group__0__Impl : ( ( rule__Expression__Op1Assignment_0 ) ) ;
    public final void rule__Expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11520:1: ( ( ( rule__Expression__Op1Assignment_0 ) ) )
            // InternalSQLParser.g:11521:1: ( ( rule__Expression__Op1Assignment_0 ) )
            {
            // InternalSQLParser.g:11521:1: ( ( rule__Expression__Op1Assignment_0 ) )
            // InternalSQLParser.g:11522:2: ( rule__Expression__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }
            // InternalSQLParser.g:11523:2: ( rule__Expression__Op1Assignment_0 )
            // InternalSQLParser.g:11523:3: rule__Expression__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0__Impl"


    // $ANTLR start "rule__Expression__Group__1"
    // InternalSQLParser.g:11531:1: rule__Expression__Group__1 : rule__Expression__Group__1__Impl ;
    public final void rule__Expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11535:1: ( rule__Expression__Group__1__Impl )
            // InternalSQLParser.g:11536:2: rule__Expression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1"


    // $ANTLR start "rule__Expression__Group__1__Impl"
    // InternalSQLParser.g:11542:1: rule__Expression__Group__1__Impl : ( ( rule__Expression__Alternatives_1 ) ) ;
    public final void rule__Expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11546:1: ( ( ( rule__Expression__Alternatives_1 ) ) )
            // InternalSQLParser.g:11547:1: ( ( rule__Expression__Alternatives_1 ) )
            {
            // InternalSQLParser.g:11547:1: ( ( rule__Expression__Alternatives_1 ) )
            // InternalSQLParser.g:11548:2: ( rule__Expression__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:11549:2: ( rule__Expression__Alternatives_1 )
            // InternalSQLParser.g:11549:3: rule__Expression__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__0"
    // InternalSQLParser.g:11558:1: rule__IsNullValue__Group__0 : rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 ;
    public final void rule__IsNullValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11562:1: ( rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 )
            // InternalSQLParser.g:11563:2: rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__IsNullValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0"


    // $ANTLR start "rule__IsNullValue__Group__0__Impl"
    // InternalSQLParser.g:11570:1: rule__IsNullValue__Group__0__Impl : ( IS ) ;
    public final void rule__IsNullValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11574:1: ( ( IS ) )
            // InternalSQLParser.g:11575:1: ( IS )
            {
            // InternalSQLParser.g:11575:1: ( IS )
            // InternalSQLParser.g:11576:2: IS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }
            match(input,IS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0__Impl"


    // $ANTLR start "rule__IsNullValue__Group__1"
    // InternalSQLParser.g:11585:1: rule__IsNullValue__Group__1 : rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 ;
    public final void rule__IsNullValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11589:1: ( rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 )
            // InternalSQLParser.g:11590:2: rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2
            {
            pushFollow(FOLLOW_60);
            rule__IsNullValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1"


    // $ANTLR start "rule__IsNullValue__Group__1__Impl"
    // InternalSQLParser.g:11597:1: rule__IsNullValue__Group__1__Impl : ( ( NOT )? ) ;
    public final void rule__IsNullValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11601:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:11602:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:11602:1: ( ( NOT )? )
            // InternalSQLParser.g:11603:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }
            // InternalSQLParser.g:11604:2: ( NOT )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==NOT) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSQLParser.g:11604:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__2"
    // InternalSQLParser.g:11612:1: rule__IsNullValue__Group__2 : rule__IsNullValue__Group__2__Impl ;
    public final void rule__IsNullValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11616:1: ( rule__IsNullValue__Group__2__Impl )
            // InternalSQLParser.g:11617:2: rule__IsNullValue__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2"


    // $ANTLR start "rule__IsNullValue__Group__2__Impl"
    // InternalSQLParser.g:11623:1: rule__IsNullValue__Group__2__Impl : ( NULL ) ;
    public final void rule__IsNullValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11627:1: ( ( NULL ) )
            // InternalSQLParser.g:11628:1: ( NULL )
            {
            // InternalSQLParser.g:11628:1: ( NULL )
            // InternalSQLParser.g:11629:2: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalSQLParser.g:11639:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11643:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalSQLParser.g:11644:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__Comparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalSQLParser.g:11651:1: rule__Comparison__Group__0__Impl : ( ( rule__Comparison__OperatorAssignment_0 ) ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11655:1: ( ( ( rule__Comparison__OperatorAssignment_0 ) ) )
            // InternalSQLParser.g:11656:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            {
            // InternalSQLParser.g:11656:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            // InternalSQLParser.g:11657:2: ( rule__Comparison__OperatorAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }
            // InternalSQLParser.g:11658:2: ( rule__Comparison__OperatorAssignment_0 )
            // InternalSQLParser.g:11658:3: rule__Comparison__OperatorAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalSQLParser.g:11666:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl rule__Comparison__Group__2 ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11670:1: ( rule__Comparison__Group__1__Impl rule__Comparison__Group__2 )
            // InternalSQLParser.g:11671:2: rule__Comparison__Group__1__Impl rule__Comparison__Group__2
            {
            pushFollow(FOLLOW_61);
            rule__Comparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalSQLParser.g:11678:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__SubOperatorAssignment_1 )? ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11682:1: ( ( ( rule__Comparison__SubOperatorAssignment_1 )? ) )
            // InternalSQLParser.g:11683:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            {
            // InternalSQLParser.g:11683:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            // InternalSQLParser.g:11684:2: ( rule__Comparison__SubOperatorAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }
            // InternalSQLParser.g:11685:2: ( rule__Comparison__SubOperatorAssignment_1 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==SOME||LA119_0==ALL||LA119_0==ANY) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalSQLParser.g:11685:3: rule__Comparison__SubOperatorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Comparison__SubOperatorAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group__2"
    // InternalSQLParser.g:11693:1: rule__Comparison__Group__2 : rule__Comparison__Group__2__Impl ;
    public final void rule__Comparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11697:1: ( rule__Comparison__Group__2__Impl )
            // InternalSQLParser.g:11698:2: rule__Comparison__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2"


    // $ANTLR start "rule__Comparison__Group__2__Impl"
    // InternalSQLParser.g:11704:1: rule__Comparison__Group__2__Impl : ( ( rule__Comparison__Op2Assignment_2 ) ) ;
    public final void rule__Comparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11708:1: ( ( ( rule__Comparison__Op2Assignment_2 ) ) )
            // InternalSQLParser.g:11709:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            {
            // InternalSQLParser.g:11709:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            // InternalSQLParser.g:11710:2: ( rule__Comparison__Op2Assignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }
            // InternalSQLParser.g:11711:2: ( rule__Comparison__Op2Assignment_2 )
            // InternalSQLParser.g:11711:3: rule__Comparison__Op2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Op2Assignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2__Impl"


    // $ANTLR start "rule__Like__Group__0"
    // InternalSQLParser.g:11720:1: rule__Like__Group__0 : rule__Like__Group__0__Impl rule__Like__Group__1 ;
    public final void rule__Like__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11724:1: ( rule__Like__Group__0__Impl rule__Like__Group__1 )
            // InternalSQLParser.g:11725:2: rule__Like__Group__0__Impl rule__Like__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__Like__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Like__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0"


    // $ANTLR start "rule__Like__Group__0__Impl"
    // InternalSQLParser.g:11732:1: rule__Like__Group__0__Impl : ( ( rule__Like__OpLikeAssignment_0 ) ) ;
    public final void rule__Like__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11736:1: ( ( ( rule__Like__OpLikeAssignment_0 ) ) )
            // InternalSQLParser.g:11737:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            {
            // InternalSQLParser.g:11737:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            // InternalSQLParser.g:11738:2: ( rule__Like__OpLikeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }
            // InternalSQLParser.g:11739:2: ( rule__Like__OpLikeAssignment_0 )
            // InternalSQLParser.g:11739:3: rule__Like__OpLikeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Like__OpLikeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0__Impl"


    // $ANTLR start "rule__Like__Group__1"
    // InternalSQLParser.g:11747:1: rule__Like__Group__1 : rule__Like__Group__1__Impl ;
    public final void rule__Like__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11751:1: ( rule__Like__Group__1__Impl )
            // InternalSQLParser.g:11752:2: rule__Like__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1"


    // $ANTLR start "rule__Like__Group__1__Impl"
    // InternalSQLParser.g:11758:1: rule__Like__Group__1__Impl : ( ( rule__Like__Op2Assignment_1 ) ) ;
    public final void rule__Like__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11762:1: ( ( ( rule__Like__Op2Assignment_1 ) ) )
            // InternalSQLParser.g:11763:1: ( ( rule__Like__Op2Assignment_1 ) )
            {
            // InternalSQLParser.g:11763:1: ( ( rule__Like__Op2Assignment_1 ) )
            // InternalSQLParser.g:11764:2: ( rule__Like__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }
            // InternalSQLParser.g:11765:2: ( rule__Like__Op2Assignment_1 )
            // InternalSQLParser.g:11765:3: rule__Like__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Like__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1__Impl"


    // $ANTLR start "rule__LikeValue__Group__0"
    // InternalSQLParser.g:11774:1: rule__LikeValue__Group__0 : rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 ;
    public final void rule__LikeValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11778:1: ( rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 )
            // InternalSQLParser.g:11779:2: rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__LikeValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0"


    // $ANTLR start "rule__LikeValue__Group__0__Impl"
    // InternalSQLParser.g:11786:1: rule__LikeValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__LikeValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11790:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:11791:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:11791:1: ( ( NOT )? )
            // InternalSQLParser.g:11792:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:11793:2: ( NOT )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==NOT) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalSQLParser.g:11793:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0__Impl"


    // $ANTLR start "rule__LikeValue__Group__1"
    // InternalSQLParser.g:11801:1: rule__LikeValue__Group__1 : rule__LikeValue__Group__1__Impl ;
    public final void rule__LikeValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11805:1: ( rule__LikeValue__Group__1__Impl )
            // InternalSQLParser.g:11806:2: rule__LikeValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1"


    // $ANTLR start "rule__LikeValue__Group__1__Impl"
    // InternalSQLParser.g:11812:1: rule__LikeValue__Group__1__Impl : ( LIKE ) ;
    public final void rule__LikeValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11816:1: ( ( LIKE ) )
            // InternalSQLParser.g:11817:1: ( LIKE )
            {
            // InternalSQLParser.g:11817:1: ( LIKE )
            // InternalSQLParser.g:11818:2: LIKE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }
            match(input,LIKE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__0"
    // InternalSQLParser.g:11828:1: rule__Between__Group__0 : rule__Between__Group__0__Impl rule__Between__Group__1 ;
    public final void rule__Between__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11832:1: ( rule__Between__Group__0__Impl rule__Between__Group__1 )
            // InternalSQLParser.g:11833:2: rule__Between__Group__0__Impl rule__Between__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__Between__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0"


    // $ANTLR start "rule__Between__Group__0__Impl"
    // InternalSQLParser.g:11840:1: rule__Between__Group__0__Impl : ( ( rule__Between__OpBetweenAssignment_0 ) ) ;
    public final void rule__Between__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11844:1: ( ( ( rule__Between__OpBetweenAssignment_0 ) ) )
            // InternalSQLParser.g:11845:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            {
            // InternalSQLParser.g:11845:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            // InternalSQLParser.g:11846:2: ( rule__Between__OpBetweenAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }
            // InternalSQLParser.g:11847:2: ( rule__Between__OpBetweenAssignment_0 )
            // InternalSQLParser.g:11847:3: rule__Between__OpBetweenAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Between__OpBetweenAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0__Impl"


    // $ANTLR start "rule__Between__Group__1"
    // InternalSQLParser.g:11855:1: rule__Between__Group__1 : rule__Between__Group__1__Impl rule__Between__Group__2 ;
    public final void rule__Between__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11859:1: ( rule__Between__Group__1__Impl rule__Between__Group__2 )
            // InternalSQLParser.g:11860:2: rule__Between__Group__1__Impl rule__Between__Group__2
            {
            pushFollow(FOLLOW_64);
            rule__Between__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1"


    // $ANTLR start "rule__Between__Group__1__Impl"
    // InternalSQLParser.g:11867:1: rule__Between__Group__1__Impl : ( ( rule__Between__Op2Assignment_1 ) ) ;
    public final void rule__Between__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11871:1: ( ( ( rule__Between__Op2Assignment_1 ) ) )
            // InternalSQLParser.g:11872:1: ( ( rule__Between__Op2Assignment_1 ) )
            {
            // InternalSQLParser.g:11872:1: ( ( rule__Between__Op2Assignment_1 ) )
            // InternalSQLParser.g:11873:2: ( rule__Between__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }
            // InternalSQLParser.g:11874:2: ( rule__Between__Op2Assignment_1 )
            // InternalSQLParser.g:11874:3: rule__Between__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__2"
    // InternalSQLParser.g:11882:1: rule__Between__Group__2 : rule__Between__Group__2__Impl rule__Between__Group__3 ;
    public final void rule__Between__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11886:1: ( rule__Between__Group__2__Impl rule__Between__Group__3 )
            // InternalSQLParser.g:11887:2: rule__Between__Group__2__Impl rule__Between__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__Between__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2"


    // $ANTLR start "rule__Between__Group__2__Impl"
    // InternalSQLParser.g:11894:1: rule__Between__Group__2__Impl : ( AND ) ;
    public final void rule__Between__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11898:1: ( ( AND ) )
            // InternalSQLParser.g:11899:1: ( AND )
            {
            // InternalSQLParser.g:11899:1: ( AND )
            // InternalSQLParser.g:11900:2: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2__Impl"


    // $ANTLR start "rule__Between__Group__3"
    // InternalSQLParser.g:11909:1: rule__Between__Group__3 : rule__Between__Group__3__Impl ;
    public final void rule__Between__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11913:1: ( rule__Between__Group__3__Impl )
            // InternalSQLParser.g:11914:2: rule__Between__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3"


    // $ANTLR start "rule__Between__Group__3__Impl"
    // InternalSQLParser.g:11920:1: rule__Between__Group__3__Impl : ( ( rule__Between__Op3Assignment_3 ) ) ;
    public final void rule__Between__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11924:1: ( ( ( rule__Between__Op3Assignment_3 ) ) )
            // InternalSQLParser.g:11925:1: ( ( rule__Between__Op3Assignment_3 ) )
            {
            // InternalSQLParser.g:11925:1: ( ( rule__Between__Op3Assignment_3 ) )
            // InternalSQLParser.g:11926:2: ( rule__Between__Op3Assignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }
            // InternalSQLParser.g:11927:2: ( rule__Between__Op3Assignment_3 )
            // InternalSQLParser.g:11927:3: rule__Between__Op3Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op3Assignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3__Impl"


    // $ANTLR start "rule__BetweenValue__Group__0"
    // InternalSQLParser.g:11936:1: rule__BetweenValue__Group__0 : rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 ;
    public final void rule__BetweenValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11940:1: ( rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 )
            // InternalSQLParser.g:11941:2: rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__BetweenValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0"


    // $ANTLR start "rule__BetweenValue__Group__0__Impl"
    // InternalSQLParser.g:11948:1: rule__BetweenValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__BetweenValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11952:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:11953:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:11953:1: ( ( NOT )? )
            // InternalSQLParser.g:11954:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:11955:2: ( NOT )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==NOT) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSQLParser.g:11955:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0__Impl"


    // $ANTLR start "rule__BetweenValue__Group__1"
    // InternalSQLParser.g:11963:1: rule__BetweenValue__Group__1 : rule__BetweenValue__Group__1__Impl ;
    public final void rule__BetweenValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11967:1: ( rule__BetweenValue__Group__1__Impl )
            // InternalSQLParser.g:11968:2: rule__BetweenValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1"


    // $ANTLR start "rule__BetweenValue__Group__1__Impl"
    // InternalSQLParser.g:11974:1: rule__BetweenValue__Group__1__Impl : ( BETWEEN ) ;
    public final void rule__BetweenValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11978:1: ( ( BETWEEN ) )
            // InternalSQLParser.g:11979:1: ( BETWEEN )
            {
            // InternalSQLParser.g:11979:1: ( BETWEEN )
            // InternalSQLParser.g:11980:2: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__0"
    // InternalSQLParser.g:11990:1: rule__InOperator__Group__0 : rule__InOperator__Group__0__Impl rule__InOperator__Group__1 ;
    public final void rule__InOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11994:1: ( rule__InOperator__Group__0__Impl rule__InOperator__Group__1 )
            // InternalSQLParser.g:11995:2: rule__InOperator__Group__0__Impl rule__InOperator__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__InOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0"


    // $ANTLR start "rule__InOperator__Group__0__Impl"
    // InternalSQLParser.g:12002:1: rule__InOperator__Group__0__Impl : ( () ) ;
    public final void rule__InOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12006:1: ( ( () ) )
            // InternalSQLParser.g:12007:1: ( () )
            {
            // InternalSQLParser.g:12007:1: ( () )
            // InternalSQLParser.g:12008:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }
            // InternalSQLParser.g:12009:2: ()
            // InternalSQLParser.g:12009:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0__Impl"


    // $ANTLR start "rule__InOperator__Group__1"
    // InternalSQLParser.g:12017:1: rule__InOperator__Group__1 : rule__InOperator__Group__1__Impl rule__InOperator__Group__2 ;
    public final void rule__InOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12021:1: ( rule__InOperator__Group__1__Impl rule__InOperator__Group__2 )
            // InternalSQLParser.g:12022:2: rule__InOperator__Group__1__Impl rule__InOperator__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__InOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1"


    // $ANTLR start "rule__InOperator__Group__1__Impl"
    // InternalSQLParser.g:12029:1: rule__InOperator__Group__1__Impl : ( ( rule__InOperator__OpAssignment_1 ) ) ;
    public final void rule__InOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12033:1: ( ( ( rule__InOperator__OpAssignment_1 ) ) )
            // InternalSQLParser.g:12034:1: ( ( rule__InOperator__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:12034:1: ( ( rule__InOperator__OpAssignment_1 ) )
            // InternalSQLParser.g:12035:2: ( rule__InOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:12036:2: ( rule__InOperator__OpAssignment_1 )
            // InternalSQLParser.g:12036:3: rule__InOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__2"
    // InternalSQLParser.g:12044:1: rule__InOperator__Group__2 : rule__InOperator__Group__2__Impl ;
    public final void rule__InOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12048:1: ( rule__InOperator__Group__2__Impl )
            // InternalSQLParser.g:12049:2: rule__InOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2"


    // $ANTLR start "rule__InOperator__Group__2__Impl"
    // InternalSQLParser.g:12055:1: rule__InOperator__Group__2__Impl : ( ( rule__InOperator__Alternatives_2 ) ) ;
    public final void rule__InOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12059:1: ( ( ( rule__InOperator__Alternatives_2 ) ) )
            // InternalSQLParser.g:12060:1: ( ( rule__InOperator__Alternatives_2 ) )
            {
            // InternalSQLParser.g:12060:1: ( ( rule__InOperator__Alternatives_2 ) )
            // InternalSQLParser.g:12061:2: ( rule__InOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:12062:2: ( rule__InOperator__Alternatives_2 )
            // InternalSQLParser.g:12062:3: rule__InOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2__Impl"


    // $ANTLR start "rule__InValue__Group__0"
    // InternalSQLParser.g:12071:1: rule__InValue__Group__0 : rule__InValue__Group__0__Impl rule__InValue__Group__1 ;
    public final void rule__InValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12075:1: ( rule__InValue__Group__0__Impl rule__InValue__Group__1 )
            // InternalSQLParser.g:12076:2: rule__InValue__Group__0__Impl rule__InValue__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__InValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0"


    // $ANTLR start "rule__InValue__Group__0__Impl"
    // InternalSQLParser.g:12083:1: rule__InValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__InValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12087:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:12088:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:12088:1: ( ( NOT )? )
            // InternalSQLParser.g:12089:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:12090:2: ( NOT )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==NOT) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSQLParser.g:12090:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0__Impl"


    // $ANTLR start "rule__InValue__Group__1"
    // InternalSQLParser.g:12098:1: rule__InValue__Group__1 : rule__InValue__Group__1__Impl ;
    public final void rule__InValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12102:1: ( rule__InValue__Group__1__Impl )
            // InternalSQLParser.g:12103:2: rule__InValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1"


    // $ANTLR start "rule__InValue__Group__1__Impl"
    // InternalSQLParser.g:12109:1: rule__InValue__Group__1__Impl : ( IN ) ;
    public final void rule__InValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12113:1: ( ( IN ) )
            // InternalSQLParser.g:12114:1: ( IN )
            {
            // InternalSQLParser.g:12114:1: ( IN )
            // InternalSQLParser.g:12115:2: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__0"
    // InternalSQLParser.g:12125:1: rule__ExistsOperator__Group__0 : rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 ;
    public final void rule__ExistsOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12129:1: ( rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 )
            // InternalSQLParser.g:12130:2: rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__ExistsOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0"


    // $ANTLR start "rule__ExistsOperator__Group__0__Impl"
    // InternalSQLParser.g:12137:1: rule__ExistsOperator__Group__0__Impl : ( () ) ;
    public final void rule__ExistsOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12141:1: ( ( () ) )
            // InternalSQLParser.g:12142:1: ( () )
            {
            // InternalSQLParser.g:12142:1: ( () )
            // InternalSQLParser.g:12143:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }
            // InternalSQLParser.g:12144:2: ()
            // InternalSQLParser.g:12144:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__1"
    // InternalSQLParser.g:12152:1: rule__ExistsOperator__Group__1 : rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 ;
    public final void rule__ExistsOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12156:1: ( rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 )
            // InternalSQLParser.g:12157:2: rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__ExistsOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1"


    // $ANTLR start "rule__ExistsOperator__Group__1__Impl"
    // InternalSQLParser.g:12164:1: rule__ExistsOperator__Group__1__Impl : ( ( rule__ExistsOperator__OpAssignment_1 ) ) ;
    public final void rule__ExistsOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12168:1: ( ( ( rule__ExistsOperator__OpAssignment_1 ) ) )
            // InternalSQLParser.g:12169:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:12169:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            // InternalSQLParser.g:12170:2: ( rule__ExistsOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:12171:2: ( rule__ExistsOperator__OpAssignment_1 )
            // InternalSQLParser.g:12171:3: rule__ExistsOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__2"
    // InternalSQLParser.g:12179:1: rule__ExistsOperator__Group__2 : rule__ExistsOperator__Group__2__Impl ;
    public final void rule__ExistsOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12183:1: ( rule__ExistsOperator__Group__2__Impl )
            // InternalSQLParser.g:12184:2: rule__ExistsOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2"


    // $ANTLR start "rule__ExistsOperator__Group__2__Impl"
    // InternalSQLParser.g:12190:1: rule__ExistsOperator__Group__2__Impl : ( ( rule__ExistsOperator__Alternatives_2 ) ) ;
    public final void rule__ExistsOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12194:1: ( ( ( rule__ExistsOperator__Alternatives_2 ) ) )
            // InternalSQLParser.g:12195:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            {
            // InternalSQLParser.g:12195:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            // InternalSQLParser.g:12196:2: ( rule__ExistsOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:12197:2: ( rule__ExistsOperator__Alternatives_2 )
            // InternalSQLParser.g:12197:3: rule__ExistsOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2__Impl"


    // $ANTLR start "rule__ExistsValue__Group__0"
    // InternalSQLParser.g:12206:1: rule__ExistsValue__Group__0 : rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 ;
    public final void rule__ExistsValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12210:1: ( rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 )
            // InternalSQLParser.g:12211:2: rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__ExistsValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0"


    // $ANTLR start "rule__ExistsValue__Group__0__Impl"
    // InternalSQLParser.g:12218:1: rule__ExistsValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__ExistsValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12222:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:12223:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:12223:1: ( ( NOT )? )
            // InternalSQLParser.g:12224:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:12225:2: ( NOT )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==NOT) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSQLParser.g:12225:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0__Impl"


    // $ANTLR start "rule__ExistsValue__Group__1"
    // InternalSQLParser.g:12233:1: rule__ExistsValue__Group__1 : rule__ExistsValue__Group__1__Impl ;
    public final void rule__ExistsValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12237:1: ( rule__ExistsValue__Group__1__Impl )
            // InternalSQLParser.g:12238:2: rule__ExistsValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1"


    // $ANTLR start "rule__ExistsValue__Group__1__Impl"
    // InternalSQLParser.g:12244:1: rule__ExistsValue__Group__1__Impl : ( EXISTS ) ;
    public final void rule__ExistsValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12248:1: ( ( EXISTS ) )
            // InternalSQLParser.g:12249:1: ( EXISTS )
            {
            // InternalSQLParser.g:12249:1: ( EXISTS )
            // InternalSQLParser.g:12250:2: EXISTS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }
            match(input,EXISTS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__0"
    // InternalSQLParser.g:12260:1: rule__OperandListGroup__Group__0 : rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 ;
    public final void rule__OperandListGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12264:1: ( rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 )
            // InternalSQLParser.g:12265:2: rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__OperandListGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0"


    // $ANTLR start "rule__OperandListGroup__Group__0__Impl"
    // InternalSQLParser.g:12272:1: rule__OperandListGroup__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandListGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12276:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:12277:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:12277:1: ( LeftParenthesis )
            // InternalSQLParser.g:12278:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__1"
    // InternalSQLParser.g:12287:1: rule__OperandListGroup__Group__1 : rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 ;
    public final void rule__OperandListGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12291:1: ( rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 )
            // InternalSQLParser.g:12292:2: rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__OperandListGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1"


    // $ANTLR start "rule__OperandListGroup__Group__1__Impl"
    // InternalSQLParser.g:12299:1: rule__OperandListGroup__Group__1__Impl : ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) ;
    public final void rule__OperandListGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12303:1: ( ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) )
            // InternalSQLParser.g:12304:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            {
            // InternalSQLParser.g:12304:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            // InternalSQLParser.g:12305:2: ( rule__OperandListGroup__OpGroupAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }
            // InternalSQLParser.g:12306:2: ( rule__OperandListGroup__OpGroupAssignment_1 )
            // InternalSQLParser.g:12306:3: rule__OperandListGroup__OpGroupAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__OpGroupAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__2"
    // InternalSQLParser.g:12314:1: rule__OperandListGroup__Group__2 : rule__OperandListGroup__Group__2__Impl ;
    public final void rule__OperandListGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12318:1: ( rule__OperandListGroup__Group__2__Impl )
            // InternalSQLParser.g:12319:2: rule__OperandListGroup__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2"


    // $ANTLR start "rule__OperandListGroup__Group__2__Impl"
    // InternalSQLParser.g:12325:1: rule__OperandListGroup__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandListGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12329:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:12330:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:12330:1: ( RightParenthesis )
            // InternalSQLParser.g:12331:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2__Impl"


    // $ANTLR start "rule__OperandList__Group__0"
    // InternalSQLParser.g:12341:1: rule__OperandList__Group__0 : rule__OperandList__Group__0__Impl rule__OperandList__Group__1 ;
    public final void rule__OperandList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12345:1: ( rule__OperandList__Group__0__Impl rule__OperandList__Group__1 )
            // InternalSQLParser.g:12346:2: rule__OperandList__Group__0__Impl rule__OperandList__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__OperandList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0"


    // $ANTLR start "rule__OperandList__Group__0__Impl"
    // InternalSQLParser.g:12353:1: rule__OperandList__Group__0__Impl : ( ruleScalarOperand ) ;
    public final void rule__OperandList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12357:1: ( ( ruleScalarOperand ) )
            // InternalSQLParser.g:12358:1: ( ruleScalarOperand )
            {
            // InternalSQLParser.g:12358:1: ( ruleScalarOperand )
            // InternalSQLParser.g:12359:2: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0__Impl"


    // $ANTLR start "rule__OperandList__Group__1"
    // InternalSQLParser.g:12368:1: rule__OperandList__Group__1 : rule__OperandList__Group__1__Impl ;
    public final void rule__OperandList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12372:1: ( rule__OperandList__Group__1__Impl )
            // InternalSQLParser.g:12373:2: rule__OperandList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1"


    // $ANTLR start "rule__OperandList__Group__1__Impl"
    // InternalSQLParser.g:12379:1: rule__OperandList__Group__1__Impl : ( ( rule__OperandList__Group_1__0 )? ) ;
    public final void rule__OperandList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12383:1: ( ( ( rule__OperandList__Group_1__0 )? ) )
            // InternalSQLParser.g:12384:1: ( ( rule__OperandList__Group_1__0 )? )
            {
            // InternalSQLParser.g:12384:1: ( ( rule__OperandList__Group_1__0 )? )
            // InternalSQLParser.g:12385:2: ( rule__OperandList__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12386:2: ( rule__OperandList__Group_1__0 )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==Comma) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSQLParser.g:12386:3: rule__OperandList__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandList__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1__0"
    // InternalSQLParser.g:12395:1: rule__OperandList__Group_1__0 : rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 ;
    public final void rule__OperandList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12399:1: ( rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 )
            // InternalSQLParser.g:12400:2: rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__OperandList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0"


    // $ANTLR start "rule__OperandList__Group_1__0__Impl"
    // InternalSQLParser.g:12407:1: rule__OperandList__Group_1__0__Impl : ( () ) ;
    public final void rule__OperandList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12411:1: ( ( () ) )
            // InternalSQLParser.g:12412:1: ( () )
            {
            // InternalSQLParser.g:12412:1: ( () )
            // InternalSQLParser.g:12413:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:12414:2: ()
            // InternalSQLParser.g:12414:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1__1"
    // InternalSQLParser.g:12422:1: rule__OperandList__Group_1__1 : rule__OperandList__Group_1__1__Impl ;
    public final void rule__OperandList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12426:1: ( rule__OperandList__Group_1__1__Impl )
            // InternalSQLParser.g:12427:2: rule__OperandList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1"


    // $ANTLR start "rule__OperandList__Group_1__1__Impl"
    // InternalSQLParser.g:12433:1: rule__OperandList__Group_1__1__Impl : ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) ;
    public final void rule__OperandList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12437:1: ( ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:12438:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:12438:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            // InternalSQLParser.g:12439:2: ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:12439:2: ( ( rule__OperandList__Group_1_1__0 ) )
            // InternalSQLParser.g:12440:3: ( rule__OperandList__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12441:3: ( rule__OperandList__Group_1_1__0 )
            // InternalSQLParser.g:12441:4: rule__OperandList__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__OperandList__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:12444:2: ( ( rule__OperandList__Group_1_1__0 )* )
            // InternalSQLParser.g:12445:3: ( rule__OperandList__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12446:3: ( rule__OperandList__Group_1_1__0 )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==Comma) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalSQLParser.g:12446:4: rule__OperandList__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__OperandList__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__0"
    // InternalSQLParser.g:12456:1: rule__OperandList__Group_1_1__0 : rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 ;
    public final void rule__OperandList__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12460:1: ( rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 )
            // InternalSQLParser.g:12461:2: rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1
            {
            pushFollow(FOLLOW_67);
            rule__OperandList__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0"


    // $ANTLR start "rule__OperandList__Group_1_1__0__Impl"
    // InternalSQLParser.g:12468:1: rule__OperandList__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OperandList__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12472:1: ( ( Comma ) )
            // InternalSQLParser.g:12473:1: ( Comma )
            {
            // InternalSQLParser.g:12473:1: ( Comma )
            // InternalSQLParser.g:12474:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__1"
    // InternalSQLParser.g:12483:1: rule__OperandList__Group_1_1__1 : rule__OperandList__Group_1_1__1__Impl ;
    public final void rule__OperandList__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12487:1: ( rule__OperandList__Group_1_1__1__Impl )
            // InternalSQLParser.g:12488:2: rule__OperandList__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1"


    // $ANTLR start "rule__OperandList__Group_1_1__1__Impl"
    // InternalSQLParser.g:12494:1: rule__OperandList__Group_1_1__1__Impl : ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OperandList__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12498:1: ( ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:12499:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:12499:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:12500:2: ( rule__OperandList__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:12501:2: ( rule__OperandList__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:12501:3: rule__OperandList__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__0"
    // InternalSQLParser.g:12510:1: rule__OperandGroup__Group_1__0 : rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 ;
    public final void rule__OperandGroup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12514:1: ( rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 )
            // InternalSQLParser.g:12515:2: rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__OperandGroup__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0"


    // $ANTLR start "rule__OperandGroup__Group_1__0__Impl"
    // InternalSQLParser.g:12522:1: rule__OperandGroup__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandGroup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12526:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:12527:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:12527:1: ( LeftParenthesis )
            // InternalSQLParser.g:12528:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__1"
    // InternalSQLParser.g:12537:1: rule__OperandGroup__Group_1__1 : rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 ;
    public final void rule__OperandGroup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12541:1: ( rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 )
            // InternalSQLParser.g:12542:2: rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2
            {
            pushFollow(FOLLOW_7);
            rule__OperandGroup__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1"


    // $ANTLR start "rule__OperandGroup__Group_1__1__Impl"
    // InternalSQLParser.g:12549:1: rule__OperandGroup__Group_1__1__Impl : ( ruleOperand ) ;
    public final void rule__OperandGroup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12553:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:12554:1: ( ruleOperand )
            {
            // InternalSQLParser.g:12554:1: ( ruleOperand )
            // InternalSQLParser.g:12555:2: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__2"
    // InternalSQLParser.g:12564:1: rule__OperandGroup__Group_1__2 : rule__OperandGroup__Group_1__2__Impl ;
    public final void rule__OperandGroup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12568:1: ( rule__OperandGroup__Group_1__2__Impl )
            // InternalSQLParser.g:12569:2: rule__OperandGroup__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2"


    // $ANTLR start "rule__OperandGroup__Group_1__2__Impl"
    // InternalSQLParser.g:12575:1: rule__OperandGroup__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandGroup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12579:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:12580:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:12580:1: ( RightParenthesis )
            // InternalSQLParser.g:12581:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2__Impl"


    // $ANTLR start "rule__Operand__Group__0"
    // InternalSQLParser.g:12591:1: rule__Operand__Group__0 : rule__Operand__Group__0__Impl rule__Operand__Group__1 ;
    public final void rule__Operand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12595:1: ( rule__Operand__Group__0__Impl rule__Operand__Group__1 )
            // InternalSQLParser.g:12596:2: rule__Operand__Group__0__Impl rule__Operand__Group__1
            {
            pushFollow(FOLLOW_68);
            rule__Operand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0"


    // $ANTLR start "rule__Operand__Group__0__Impl"
    // InternalSQLParser.g:12603:1: rule__Operand__Group__0__Impl : ( ( rule__Operand__Op1Assignment_0 ) ) ;
    public final void rule__Operand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12607:1: ( ( ( rule__Operand__Op1Assignment_0 ) ) )
            // InternalSQLParser.g:12608:1: ( ( rule__Operand__Op1Assignment_0 ) )
            {
            // InternalSQLParser.g:12608:1: ( ( rule__Operand__Op1Assignment_0 ) )
            // InternalSQLParser.g:12609:2: ( rule__Operand__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }
            // InternalSQLParser.g:12610:2: ( rule__Operand__Op1Assignment_0 )
            // InternalSQLParser.g:12610:3: rule__Operand__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0__Impl"


    // $ANTLR start "rule__Operand__Group__1"
    // InternalSQLParser.g:12618:1: rule__Operand__Group__1 : rule__Operand__Group__1__Impl ;
    public final void rule__Operand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12622:1: ( rule__Operand__Group__1__Impl )
            // InternalSQLParser.g:12623:2: rule__Operand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1"


    // $ANTLR start "rule__Operand__Group__1__Impl"
    // InternalSQLParser.g:12629:1: rule__Operand__Group__1__Impl : ( ( rule__Operand__Group_1__0 )* ) ;
    public final void rule__Operand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12633:1: ( ( ( rule__Operand__Group_1__0 )* ) )
            // InternalSQLParser.g:12634:1: ( ( rule__Operand__Group_1__0 )* )
            {
            // InternalSQLParser.g:12634:1: ( ( rule__Operand__Group_1__0 )* )
            // InternalSQLParser.g:12635:2: ( rule__Operand__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12636:2: ( rule__Operand__Group_1__0 )*
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( (LA126_0==VerticalLineVerticalLine||LA126_0==PlusSign||LA126_0==HyphenMinus||LA126_0==Solidus||LA126_0==RULE_STAR) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // InternalSQLParser.g:12636:3: rule__Operand__Group_1__0
            	    {
            	    pushFollow(FOLLOW_69);
            	    rule__Operand__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1__Impl"


    // $ANTLR start "rule__Operand__Group_1__0"
    // InternalSQLParser.g:12645:1: rule__Operand__Group_1__0 : rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 ;
    public final void rule__Operand__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12649:1: ( rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 )
            // InternalSQLParser.g:12650:2: rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__Operand__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0"


    // $ANTLR start "rule__Operand__Group_1__0__Impl"
    // InternalSQLParser.g:12657:1: rule__Operand__Group_1__0__Impl : ( ( rule__Operand__Alternatives_1_0 ) ) ;
    public final void rule__Operand__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12661:1: ( ( ( rule__Operand__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:12662:1: ( ( rule__Operand__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:12662:1: ( ( rule__Operand__Alternatives_1_0 ) )
            // InternalSQLParser.g:12663:2: ( rule__Operand__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:12664:2: ( rule__Operand__Alternatives_1_0 )
            // InternalSQLParser.g:12664:3: rule__Operand__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1__1"
    // InternalSQLParser.g:12672:1: rule__Operand__Group_1__1 : rule__Operand__Group_1__1__Impl ;
    public final void rule__Operand__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12676:1: ( rule__Operand__Group_1__1__Impl )
            // InternalSQLParser.g:12677:2: rule__Operand__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1"


    // $ANTLR start "rule__Operand__Group_1__1__Impl"
    // InternalSQLParser.g:12683:1: rule__Operand__Group_1__1__Impl : ( ( rule__Operand__RightAssignment_1_1 ) ) ;
    public final void rule__Operand__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12687:1: ( ( ( rule__Operand__RightAssignment_1_1 ) ) )
            // InternalSQLParser.g:12688:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            {
            // InternalSQLParser.g:12688:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            // InternalSQLParser.g:12689:2: ( rule__Operand__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }
            // InternalSQLParser.g:12690:2: ( rule__Operand__RightAssignment_1_1 )
            // InternalSQLParser.g:12690:3: rule__Operand__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Operand__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__0"
    // InternalSQLParser.g:12699:1: rule__Operand__Group_1_0_0__0 : rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 ;
    public final void rule__Operand__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12703:1: ( rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 )
            // InternalSQLParser.g:12704:2: rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1
            {
            pushFollow(FOLLOW_70);
            rule__Operand__Group_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0"


    // $ANTLR start "rule__Operand__Group_1_0_0__0__Impl"
    // InternalSQLParser.g:12711:1: rule__Operand__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12715:1: ( ( () ) )
            // InternalSQLParser.g:12716:1: ( () )
            {
            // InternalSQLParser.g:12716:1: ( () )
            // InternalSQLParser.g:12717:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }
            // InternalSQLParser.g:12718:2: ()
            // InternalSQLParser.g:12718:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__1"
    // InternalSQLParser.g:12726:1: rule__Operand__Group_1_0_0__1 : rule__Operand__Group_1_0_0__1__Impl ;
    public final void rule__Operand__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12730:1: ( rule__Operand__Group_1_0_0__1__Impl )
            // InternalSQLParser.g:12731:2: rule__Operand__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1"


    // $ANTLR start "rule__Operand__Group_1_0_0__1__Impl"
    // InternalSQLParser.g:12737:1: rule__Operand__Group_1_0_0__1__Impl : ( PlusSign ) ;
    public final void rule__Operand__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12741:1: ( ( PlusSign ) )
            // InternalSQLParser.g:12742:1: ( PlusSign )
            {
            // InternalSQLParser.g:12742:1: ( PlusSign )
            // InternalSQLParser.g:12743:2: PlusSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }
            match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__0"
    // InternalSQLParser.g:12753:1: rule__Operand__Group_1_0_1__0 : rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 ;
    public final void rule__Operand__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12757:1: ( rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 )
            // InternalSQLParser.g:12758:2: rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1
            {
            pushFollow(FOLLOW_71);
            rule__Operand__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0"


    // $ANTLR start "rule__Operand__Group_1_0_1__0__Impl"
    // InternalSQLParser.g:12765:1: rule__Operand__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12769:1: ( ( () ) )
            // InternalSQLParser.g:12770:1: ( () )
            {
            // InternalSQLParser.g:12770:1: ( () )
            // InternalSQLParser.g:12771:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }
            // InternalSQLParser.g:12772:2: ()
            // InternalSQLParser.g:12772:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__1"
    // InternalSQLParser.g:12780:1: rule__Operand__Group_1_0_1__1 : rule__Operand__Group_1_0_1__1__Impl ;
    public final void rule__Operand__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12784:1: ( rule__Operand__Group_1_0_1__1__Impl )
            // InternalSQLParser.g:12785:2: rule__Operand__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1"


    // $ANTLR start "rule__Operand__Group_1_0_1__1__Impl"
    // InternalSQLParser.g:12791:1: rule__Operand__Group_1_0_1__1__Impl : ( HyphenMinus ) ;
    public final void rule__Operand__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12795:1: ( ( HyphenMinus ) )
            // InternalSQLParser.g:12796:1: ( HyphenMinus )
            {
            // InternalSQLParser.g:12796:1: ( HyphenMinus )
            // InternalSQLParser.g:12797:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__0"
    // InternalSQLParser.g:12807:1: rule__Operand__Group_1_0_2__0 : rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 ;
    public final void rule__Operand__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12811:1: ( rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 )
            // InternalSQLParser.g:12812:2: rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1
            {
            pushFollow(FOLLOW_72);
            rule__Operand__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0"


    // $ANTLR start "rule__Operand__Group_1_0_2__0__Impl"
    // InternalSQLParser.g:12819:1: rule__Operand__Group_1_0_2__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12823:1: ( ( () ) )
            // InternalSQLParser.g:12824:1: ( () )
            {
            // InternalSQLParser.g:12824:1: ( () )
            // InternalSQLParser.g:12825:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }
            // InternalSQLParser.g:12826:2: ()
            // InternalSQLParser.g:12826:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__1"
    // InternalSQLParser.g:12834:1: rule__Operand__Group_1_0_2__1 : rule__Operand__Group_1_0_2__1__Impl ;
    public final void rule__Operand__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12838:1: ( rule__Operand__Group_1_0_2__1__Impl )
            // InternalSQLParser.g:12839:2: rule__Operand__Group_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1"


    // $ANTLR start "rule__Operand__Group_1_0_2__1__Impl"
    // InternalSQLParser.g:12845:1: rule__Operand__Group_1_0_2__1__Impl : ( VerticalLineVerticalLine ) ;
    public final void rule__Operand__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12849:1: ( ( VerticalLineVerticalLine ) )
            // InternalSQLParser.g:12850:1: ( VerticalLineVerticalLine )
            {
            // InternalSQLParser.g:12850:1: ( VerticalLineVerticalLine )
            // InternalSQLParser.g:12851:2: VerticalLineVerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }
            match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__0"
    // InternalSQLParser.g:12861:1: rule__Operand__Group_1_0_3__0 : rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 ;
    public final void rule__Operand__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12865:1: ( rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 )
            // InternalSQLParser.g:12866:2: rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1
            {
            pushFollow(FOLLOW_49);
            rule__Operand__Group_1_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0"


    // $ANTLR start "rule__Operand__Group_1_0_3__0__Impl"
    // InternalSQLParser.g:12873:1: rule__Operand__Group_1_0_3__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12877:1: ( ( () ) )
            // InternalSQLParser.g:12878:1: ( () )
            {
            // InternalSQLParser.g:12878:1: ( () )
            // InternalSQLParser.g:12879:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }
            // InternalSQLParser.g:12880:2: ()
            // InternalSQLParser.g:12880:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__1"
    // InternalSQLParser.g:12888:1: rule__Operand__Group_1_0_3__1 : rule__Operand__Group_1_0_3__1__Impl ;
    public final void rule__Operand__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12892:1: ( rule__Operand__Group_1_0_3__1__Impl )
            // InternalSQLParser.g:12893:2: rule__Operand__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1"


    // $ANTLR start "rule__Operand__Group_1_0_3__1__Impl"
    // InternalSQLParser.g:12899:1: rule__Operand__Group_1_0_3__1__Impl : ( RULE_STAR ) ;
    public final void rule__Operand__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12903:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:12904:1: ( RULE_STAR )
            {
            // InternalSQLParser.g:12904:1: ( RULE_STAR )
            // InternalSQLParser.g:12905:2: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__0"
    // InternalSQLParser.g:12915:1: rule__Operand__Group_1_0_4__0 : rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 ;
    public final void rule__Operand__Group_1_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12919:1: ( rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 )
            // InternalSQLParser.g:12920:2: rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1
            {
            pushFollow(FOLLOW_68);
            rule__Operand__Group_1_0_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0"


    // $ANTLR start "rule__Operand__Group_1_0_4__0__Impl"
    // InternalSQLParser.g:12927:1: rule__Operand__Group_1_0_4__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12931:1: ( ( () ) )
            // InternalSQLParser.g:12932:1: ( () )
            {
            // InternalSQLParser.g:12932:1: ( () )
            // InternalSQLParser.g:12933:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }
            // InternalSQLParser.g:12934:2: ()
            // InternalSQLParser.g:12934:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__1"
    // InternalSQLParser.g:12942:1: rule__Operand__Group_1_0_4__1 : rule__Operand__Group_1_0_4__1__Impl ;
    public final void rule__Operand__Group_1_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12946:1: ( rule__Operand__Group_1_0_4__1__Impl )
            // InternalSQLParser.g:12947:2: rule__Operand__Group_1_0_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1"


    // $ANTLR start "rule__Operand__Group_1_0_4__1__Impl"
    // InternalSQLParser.g:12953:1: rule__Operand__Group_1_0_4__1__Impl : ( Solidus ) ;
    public final void rule__Operand__Group_1_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12957:1: ( ( Solidus ) )
            // InternalSQLParser.g:12958:1: ( Solidus )
            {
            // InternalSQLParser.g:12958:1: ( Solidus )
            // InternalSQLParser.g:12959:2: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__0"
    // InternalSQLParser.g:12969:1: rule__OperandFunction__Group__0 : rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 ;
    public final void rule__OperandFunction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12973:1: ( rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 )
            // InternalSQLParser.g:12974:2: rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__OperandFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0"


    // $ANTLR start "rule__OperandFunction__Group__0__Impl"
    // InternalSQLParser.g:12981:1: rule__OperandFunction__Group__0__Impl : ( () ) ;
    public final void rule__OperandFunction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12985:1: ( ( () ) )
            // InternalSQLParser.g:12986:1: ( () )
            {
            // InternalSQLParser.g:12986:1: ( () )
            // InternalSQLParser.g:12987:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }
            // InternalSQLParser.g:12988:2: ()
            // InternalSQLParser.g:12988:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0__Impl"


    // $ANTLR start "rule__OperandFunction__Group__1"
    // InternalSQLParser.g:12996:1: rule__OperandFunction__Group__1 : rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 ;
    public final void rule__OperandFunction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13000:1: ( rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 )
            // InternalSQLParser.g:13001:2: rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2
            {
            pushFollow(FOLLOW_73);
            rule__OperandFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1"


    // $ANTLR start "rule__OperandFunction__Group__1__Impl"
    // InternalSQLParser.g:13008:1: rule__OperandFunction__Group__1__Impl : ( ( rule__OperandFunction__FnameAssignment_1 ) ) ;
    public final void rule__OperandFunction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13012:1: ( ( ( rule__OperandFunction__FnameAssignment_1 ) ) )
            // InternalSQLParser.g:13013:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            {
            // InternalSQLParser.g:13013:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            // InternalSQLParser.g:13014:2: ( rule__OperandFunction__FnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }
            // InternalSQLParser.g:13015:2: ( rule__OperandFunction__FnameAssignment_1 )
            // InternalSQLParser.g:13015:3: rule__OperandFunction__FnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__FnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__2"
    // InternalSQLParser.g:13023:1: rule__OperandFunction__Group__2 : rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 ;
    public final void rule__OperandFunction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13027:1: ( rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 )
            // InternalSQLParser.g:13028:2: rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3
            {
            pushFollow(FOLLOW_73);
            rule__OperandFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2"


    // $ANTLR start "rule__OperandFunction__Group__2__Impl"
    // InternalSQLParser.g:13035:1: rule__OperandFunction__Group__2__Impl : ( ( rule__OperandFunction__Alternatives_2 )? ) ;
    public final void rule__OperandFunction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13039:1: ( ( ( rule__OperandFunction__Alternatives_2 )? ) )
            // InternalSQLParser.g:13040:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            {
            // InternalSQLParser.g:13040:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            // InternalSQLParser.g:13041:2: ( rule__OperandFunction__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:13042:2: ( rule__OperandFunction__Alternatives_2 )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==DISTINCT||LA127_0==EXTRACT||LA127_0==CAST||LA127_0==CASE||LA127_0==ALL||LA127_0==LeftParenthesis||(LA127_0>=RULE_JRPARAM && LA127_0<=RULE_SIGNED_DOUBLE)||(LA127_0>=RULE_STRING_ && LA127_0<=RULE_ID)) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalSQLParser.g:13042:3: rule__OperandFunction__Alternatives_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2__Impl"


    // $ANTLR start "rule__OperandFunction__Group__3"
    // InternalSQLParser.g:13050:1: rule__OperandFunction__Group__3 : rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 ;
    public final void rule__OperandFunction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13054:1: ( rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 )
            // InternalSQLParser.g:13055:2: rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4
            {
            pushFollow(FOLLOW_74);
            rule__OperandFunction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3"


    // $ANTLR start "rule__OperandFunction__Group__3__Impl"
    // InternalSQLParser.g:13062:1: rule__OperandFunction__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__OperandFunction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13066:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:13067:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:13067:1: ( RightParenthesis )
            // InternalSQLParser.g:13068:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3__Impl"


    // $ANTLR start "rule__OperandFunction__Group__4"
    // InternalSQLParser.g:13077:1: rule__OperandFunction__Group__4 : rule__OperandFunction__Group__4__Impl ;
    public final void rule__OperandFunction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13081:1: ( rule__OperandFunction__Group__4__Impl )
            // InternalSQLParser.g:13082:2: rule__OperandFunction__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4"


    // $ANTLR start "rule__OperandFunction__Group__4__Impl"
    // InternalSQLParser.g:13088:1: rule__OperandFunction__Group__4__Impl : ( ( rule__OperandFunction__FanAssignment_4 )? ) ;
    public final void rule__OperandFunction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13092:1: ( ( ( rule__OperandFunction__FanAssignment_4 )? ) )
            // InternalSQLParser.g:13093:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            {
            // InternalSQLParser.g:13093:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            // InternalSQLParser.g:13094:2: ( rule__OperandFunction__FanAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }
            // InternalSQLParser.g:13095:2: ( rule__OperandFunction__FanAssignment_4 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==OVER) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSQLParser.g:13095:3: rule__OperandFunction__FanAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__FanAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__0"
    // InternalSQLParser.g:13104:1: rule__FunctionExtract__Group__0 : rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 ;
    public final void rule__FunctionExtract__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13108:1: ( rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 )
            // InternalSQLParser.g:13109:2: rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FunctionExtract__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0"


    // $ANTLR start "rule__FunctionExtract__Group__0__Impl"
    // InternalSQLParser.g:13116:1: rule__FunctionExtract__Group__0__Impl : ( EXTRACT ) ;
    public final void rule__FunctionExtract__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13120:1: ( ( EXTRACT ) )
            // InternalSQLParser.g:13121:1: ( EXTRACT )
            {
            // InternalSQLParser.g:13121:1: ( EXTRACT )
            // InternalSQLParser.g:13122:2: EXTRACT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }
            match(input,EXTRACT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__1"
    // InternalSQLParser.g:13131:1: rule__FunctionExtract__Group__1 : rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 ;
    public final void rule__FunctionExtract__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13135:1: ( rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 )
            // InternalSQLParser.g:13136:2: rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__FunctionExtract__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1"


    // $ANTLR start "rule__FunctionExtract__Group__1__Impl"
    // InternalSQLParser.g:13143:1: rule__FunctionExtract__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionExtract__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13147:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:13148:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:13148:1: ( LeftParenthesis )
            // InternalSQLParser.g:13149:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__2"
    // InternalSQLParser.g:13158:1: rule__FunctionExtract__Group__2 : rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 ;
    public final void rule__FunctionExtract__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13162:1: ( rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 )
            // InternalSQLParser.g:13163:2: rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__FunctionExtract__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2"


    // $ANTLR start "rule__FunctionExtract__Group__2__Impl"
    // InternalSQLParser.g:13170:1: rule__FunctionExtract__Group__2__Impl : ( ( rule__FunctionExtract__VAssignment_2 ) ) ;
    public final void rule__FunctionExtract__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13174:1: ( ( ( rule__FunctionExtract__VAssignment_2 ) ) )
            // InternalSQLParser.g:13175:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            {
            // InternalSQLParser.g:13175:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            // InternalSQLParser.g:13176:2: ( rule__FunctionExtract__VAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }
            // InternalSQLParser.g:13177:2: ( rule__FunctionExtract__VAssignment_2 )
            // InternalSQLParser.g:13177:3: rule__FunctionExtract__VAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__VAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__3"
    // InternalSQLParser.g:13185:1: rule__FunctionExtract__Group__3 : rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 ;
    public final void rule__FunctionExtract__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13189:1: ( rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 )
            // InternalSQLParser.g:13190:2: rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4
            {
            pushFollow(FOLLOW_55);
            rule__FunctionExtract__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3"


    // $ANTLR start "rule__FunctionExtract__Group__3__Impl"
    // InternalSQLParser.g:13197:1: rule__FunctionExtract__Group__3__Impl : ( FROM ) ;
    public final void rule__FunctionExtract__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13201:1: ( ( FROM ) )
            // InternalSQLParser.g:13202:1: ( FROM )
            {
            // InternalSQLParser.g:13202:1: ( FROM )
            // InternalSQLParser.g:13203:2: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__4"
    // InternalSQLParser.g:13212:1: rule__FunctionExtract__Group__4 : rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 ;
    public final void rule__FunctionExtract__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13216:1: ( rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 )
            // InternalSQLParser.g:13217:2: rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5
            {
            pushFollow(FOLLOW_7);
            rule__FunctionExtract__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4"


    // $ANTLR start "rule__FunctionExtract__Group__4__Impl"
    // InternalSQLParser.g:13224:1: rule__FunctionExtract__Group__4__Impl : ( ( rule__FunctionExtract__OperandAssignment_4 ) ) ;
    public final void rule__FunctionExtract__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13228:1: ( ( ( rule__FunctionExtract__OperandAssignment_4 ) ) )
            // InternalSQLParser.g:13229:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            {
            // InternalSQLParser.g:13229:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            // InternalSQLParser.g:13230:2: ( rule__FunctionExtract__OperandAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }
            // InternalSQLParser.g:13231:2: ( rule__FunctionExtract__OperandAssignment_4 )
            // InternalSQLParser.g:13231:3: rule__FunctionExtract__OperandAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__OperandAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__5"
    // InternalSQLParser.g:13239:1: rule__FunctionExtract__Group__5 : rule__FunctionExtract__Group__5__Impl ;
    public final void rule__FunctionExtract__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13243:1: ( rule__FunctionExtract__Group__5__Impl )
            // InternalSQLParser.g:13244:2: rule__FunctionExtract__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5"


    // $ANTLR start "rule__FunctionExtract__Group__5__Impl"
    // InternalSQLParser.g:13250:1: rule__FunctionExtract__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionExtract__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13254:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:13255:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:13255:1: ( RightParenthesis )
            // InternalSQLParser.g:13256:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__0"
    // InternalSQLParser.g:13266:1: rule__FunctionAnalytical__Group__0 : rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 ;
    public final void rule__FunctionAnalytical__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13270:1: ( rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 )
            // InternalSQLParser.g:13271:2: rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FunctionAnalytical__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0"


    // $ANTLR start "rule__FunctionAnalytical__Group__0__Impl"
    // InternalSQLParser.g:13278:1: rule__FunctionAnalytical__Group__0__Impl : ( OVER ) ;
    public final void rule__FunctionAnalytical__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13282:1: ( ( OVER ) )
            // InternalSQLParser.g:13283:1: ( OVER )
            {
            // InternalSQLParser.g:13283:1: ( OVER )
            // InternalSQLParser.g:13284:2: OVER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }
            match(input,OVER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__1"
    // InternalSQLParser.g:13293:1: rule__FunctionAnalytical__Group__1 : rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 ;
    public final void rule__FunctionAnalytical__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13297:1: ( rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 )
            // InternalSQLParser.g:13298:2: rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__FunctionAnalytical__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1"


    // $ANTLR start "rule__FunctionAnalytical__Group__1__Impl"
    // InternalSQLParser.g:13305:1: rule__FunctionAnalytical__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13309:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:13310:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:13310:1: ( LeftParenthesis )
            // InternalSQLParser.g:13311:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__2"
    // InternalSQLParser.g:13320:1: rule__FunctionAnalytical__Group__2 : rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 ;
    public final void rule__FunctionAnalytical__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13324:1: ( rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 )
            // InternalSQLParser.g:13325:2: rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__FunctionAnalytical__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2"


    // $ANTLR start "rule__FunctionAnalytical__Group__2__Impl"
    // InternalSQLParser.g:13332:1: rule__FunctionAnalytical__Group__2__Impl : ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) ;
    public final void rule__FunctionAnalytical__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13336:1: ( ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) )
            // InternalSQLParser.g:13337:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            {
            // InternalSQLParser.g:13337:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            // InternalSQLParser.g:13338:2: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }
            // InternalSQLParser.g:13339:2: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            // InternalSQLParser.g:13339:3: rule__FunctionAnalytical__AnClauseAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__AnClauseAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__3"
    // InternalSQLParser.g:13347:1: rule__FunctionAnalytical__Group__3 : rule__FunctionAnalytical__Group__3__Impl ;
    public final void rule__FunctionAnalytical__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13351:1: ( rule__FunctionAnalytical__Group__3__Impl )
            // InternalSQLParser.g:13352:2: rule__FunctionAnalytical__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3"


    // $ANTLR start "rule__FunctionAnalytical__Group__3__Impl"
    // InternalSQLParser.g:13358:1: rule__FunctionAnalytical__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13362:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:13363:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:13363:1: ( RightParenthesis )
            // InternalSQLParser.g:13364:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__0"
    // InternalSQLParser.g:13374:1: rule__AnalyticClause__Group__0 : rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 ;
    public final void rule__AnalyticClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13378:1: ( rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 )
            // InternalSQLParser.g:13379:2: rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1
            {
            pushFollow(FOLLOW_76);
            rule__AnalyticClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0"


    // $ANTLR start "rule__AnalyticClause__Group__0__Impl"
    // InternalSQLParser.g:13386:1: rule__AnalyticClause__Group__0__Impl : ( () ) ;
    public final void rule__AnalyticClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13390:1: ( ( () ) )
            // InternalSQLParser.g:13391:1: ( () )
            {
            // InternalSQLParser.g:13391:1: ( () )
            // InternalSQLParser.g:13392:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }
            // InternalSQLParser.g:13393:2: ()
            // InternalSQLParser.g:13393:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__1"
    // InternalSQLParser.g:13401:1: rule__AnalyticClause__Group__1 : rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 ;
    public final void rule__AnalyticClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13405:1: ( rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 )
            // InternalSQLParser.g:13406:2: rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__AnalyticClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1"


    // $ANTLR start "rule__AnalyticClause__Group__1__Impl"
    // InternalSQLParser.g:13413:1: rule__AnalyticClause__Group__1__Impl : ( ( rule__AnalyticClause__AbcAssignment_1 )? ) ;
    public final void rule__AnalyticClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13417:1: ( ( ( rule__AnalyticClause__AbcAssignment_1 )? ) )
            // InternalSQLParser.g:13418:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            {
            // InternalSQLParser.g:13418:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            // InternalSQLParser.g:13419:2: ( rule__AnalyticClause__AbcAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }
            // InternalSQLParser.g:13420:2: ( rule__AnalyticClause__AbcAssignment_1 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==PARTITION) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalSQLParser.g:13420:3: rule__AnalyticClause__AbcAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__AbcAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__2"
    // InternalSQLParser.g:13428:1: rule__AnalyticClause__Group__2 : rule__AnalyticClause__Group__2__Impl ;
    public final void rule__AnalyticClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13432:1: ( rule__AnalyticClause__Group__2__Impl )
            // InternalSQLParser.g:13433:2: rule__AnalyticClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2"


    // $ANTLR start "rule__AnalyticClause__Group__2__Impl"
    // InternalSQLParser.g:13439:1: rule__AnalyticClause__Group__2__Impl : ( ( rule__AnalyticClause__Group_2__0 )? ) ;
    public final void rule__AnalyticClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13443:1: ( ( ( rule__AnalyticClause__Group_2__0 )? ) )
            // InternalSQLParser.g:13444:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            {
            // InternalSQLParser.g:13444:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            // InternalSQLParser.g:13445:2: ( rule__AnalyticClause__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:13446:2: ( rule__AnalyticClause__Group_2__0 )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==ORDER) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalSQLParser.g:13446:3: rule__AnalyticClause__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__0"
    // InternalSQLParser.g:13455:1: rule__AnalyticClause__Group_2__0 : rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 ;
    public final void rule__AnalyticClause__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13459:1: ( rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 )
            // InternalSQLParser.g:13460:2: rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1
            {
            pushFollow(FOLLOW_77);
            rule__AnalyticClause__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0"


    // $ANTLR start "rule__AnalyticClause__Group_2__0__Impl"
    // InternalSQLParser.g:13467:1: rule__AnalyticClause__Group_2__0__Impl : ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) ;
    public final void rule__AnalyticClause__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13471:1: ( ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) )
            // InternalSQLParser.g:13472:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            {
            // InternalSQLParser.g:13472:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            // InternalSQLParser.g:13473:2: ( rule__AnalyticClause__ObcAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }
            // InternalSQLParser.g:13474:2: ( rule__AnalyticClause__ObcAssignment_2_0 )
            // InternalSQLParser.g:13474:3: rule__AnalyticClause__ObcAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__ObcAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__1"
    // InternalSQLParser.g:13482:1: rule__AnalyticClause__Group_2__1 : rule__AnalyticClause__Group_2__1__Impl ;
    public final void rule__AnalyticClause__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13486:1: ( rule__AnalyticClause__Group_2__1__Impl )
            // InternalSQLParser.g:13487:2: rule__AnalyticClause__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1"


    // $ANTLR start "rule__AnalyticClause__Group_2__1__Impl"
    // InternalSQLParser.g:13493:1: rule__AnalyticClause__Group_2__1__Impl : ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) ;
    public final void rule__AnalyticClause__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13497:1: ( ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) )
            // InternalSQLParser.g:13498:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            {
            // InternalSQLParser.g:13498:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            // InternalSQLParser.g:13499:2: ( rule__AnalyticClause__WincAssignment_2_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }
            // InternalSQLParser.g:13500:2: ( rule__AnalyticClause__WincAssignment_2_1 )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==RANGE||LA131_0==ROWS) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSQLParser.g:13500:3: rule__AnalyticClause__WincAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__WincAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1__Impl"


    // $ANTLR start "rule__WindowingClause__Group__0"
    // InternalSQLParser.g:13509:1: rule__WindowingClause__Group__0 : rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 ;
    public final void rule__WindowingClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13513:1: ( rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 )
            // InternalSQLParser.g:13514:2: rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0"


    // $ANTLR start "rule__WindowingClause__Group__0__Impl"
    // InternalSQLParser.g:13521:1: rule__WindowingClause__Group__0__Impl : ( ( rule__WindowingClause__Alternatives_0 ) ) ;
    public final void rule__WindowingClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13525:1: ( ( ( rule__WindowingClause__Alternatives_0 ) ) )
            // InternalSQLParser.g:13526:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            {
            // InternalSQLParser.g:13526:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            // InternalSQLParser.g:13527:2: ( rule__WindowingClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:13528:2: ( rule__WindowingClause__Alternatives_0 )
            // InternalSQLParser.g:13528:3: rule__WindowingClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0__Impl"


    // $ANTLR start "rule__WindowingClause__Group__1"
    // InternalSQLParser.g:13536:1: rule__WindowingClause__Group__1 : rule__WindowingClause__Group__1__Impl ;
    public final void rule__WindowingClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13540:1: ( rule__WindowingClause__Group__1__Impl )
            // InternalSQLParser.g:13541:2: rule__WindowingClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1"


    // $ANTLR start "rule__WindowingClause__Group__1__Impl"
    // InternalSQLParser.g:13547:1: rule__WindowingClause__Group__1__Impl : ( ( rule__WindowingClause__Alternatives_1 ) ) ;
    public final void rule__WindowingClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13551:1: ( ( ( rule__WindowingClause__Alternatives_1 ) ) )
            // InternalSQLParser.g:13552:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            {
            // InternalSQLParser.g:13552:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            // InternalSQLParser.g:13553:2: ( rule__WindowingClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:13554:2: ( rule__WindowingClause__Alternatives_1 )
            // InternalSQLParser.g:13554:3: rule__WindowingClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0"
    // InternalSQLParser.g:13563:1: rule__WindowingClauseBetween__Group__0 : rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 ;
    public final void rule__WindowingClauseBetween__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13567:1: ( rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 )
            // InternalSQLParser.g:13568:2: rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClauseBetween__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0__Impl"
    // InternalSQLParser.g:13575:1: rule__WindowingClauseBetween__Group__0__Impl : ( BETWEEN ) ;
    public final void rule__WindowingClauseBetween__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13579:1: ( ( BETWEEN ) )
            // InternalSQLParser.g:13580:1: ( BETWEEN )
            {
            // InternalSQLParser.g:13580:1: ( BETWEEN )
            // InternalSQLParser.g:13581:2: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1"
    // InternalSQLParser.g:13590:1: rule__WindowingClauseBetween__Group__1 : rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 ;
    public final void rule__WindowingClauseBetween__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13594:1: ( rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 )
            // InternalSQLParser.g:13595:2: rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2
            {
            pushFollow(FOLLOW_64);
            rule__WindowingClauseBetween__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1__Impl"
    // InternalSQLParser.g:13602:1: rule__WindowingClauseBetween__Group__1__Impl : ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) ;
    public final void rule__WindowingClauseBetween__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13606:1: ( ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) )
            // InternalSQLParser.g:13607:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            {
            // InternalSQLParser.g:13607:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            // InternalSQLParser.g:13608:2: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }
            // InternalSQLParser.g:13609:2: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            // InternalSQLParser.g:13609:3: rule__WindowingClauseBetween__WcoPAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoPAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2"
    // InternalSQLParser.g:13617:1: rule__WindowingClauseBetween__Group__2 : rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 ;
    public final void rule__WindowingClauseBetween__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13621:1: ( rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 )
            // InternalSQLParser.g:13622:2: rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClauseBetween__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2__Impl"
    // InternalSQLParser.g:13629:1: rule__WindowingClauseBetween__Group__2__Impl : ( AND ) ;
    public final void rule__WindowingClauseBetween__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13633:1: ( ( AND ) )
            // InternalSQLParser.g:13634:1: ( AND )
            {
            // InternalSQLParser.g:13634:1: ( AND )
            // InternalSQLParser.g:13635:2: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3"
    // InternalSQLParser.g:13644:1: rule__WindowingClauseBetween__Group__3 : rule__WindowingClauseBetween__Group__3__Impl ;
    public final void rule__WindowingClauseBetween__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13648:1: ( rule__WindowingClauseBetween__Group__3__Impl )
            // InternalSQLParser.g:13649:2: rule__WindowingClauseBetween__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3__Impl"
    // InternalSQLParser.g:13655:1: rule__WindowingClauseBetween__Group__3__Impl : ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) ;
    public final void rule__WindowingClauseBetween__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13659:1: ( ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) )
            // InternalSQLParser.g:13660:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            {
            // InternalSQLParser.g:13660:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            // InternalSQLParser.g:13661:2: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }
            // InternalSQLParser.g:13662:2: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            // InternalSQLParser.g:13662:3: rule__WindowingClauseBetween__WcoFAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoFAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0"
    // InternalSQLParser.g:13671:1: rule__WindowingClauseOperandFollowing__Group__0 : rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13675:1: ( rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 )
            // InternalSQLParser.g:13676:2: rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClauseOperandFollowing__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0__Impl"
    // InternalSQLParser.g:13683:1: rule__WindowingClauseOperandFollowing__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13687:1: ( ( () ) )
            // InternalSQLParser.g:13688:1: ( () )
            {
            // InternalSQLParser.g:13688:1: ( () )
            // InternalSQLParser.g:13689:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }
            // InternalSQLParser.g:13690:2: ()
            // InternalSQLParser.g:13690:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1"
    // InternalSQLParser.g:13698:1: rule__WindowingClauseOperandFollowing__Group__1 : rule__WindowingClauseOperandFollowing__Group__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13702:1: ( rule__WindowingClauseOperandFollowing__Group__1__Impl )
            // InternalSQLParser.g:13703:2: rule__WindowingClauseOperandFollowing__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1__Impl"
    // InternalSQLParser.g:13709:1: rule__WindowingClauseOperandFollowing__Group__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13713:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) )
            // InternalSQLParser.g:13714:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            {
            // InternalSQLParser.g:13714:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            // InternalSQLParser.g:13715:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:13716:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            // InternalSQLParser.g:13716:3: rule__WindowingClauseOperandFollowing__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0"
    // InternalSQLParser.g:13725:1: rule__WindowingClauseOperandFollowing__Group_1_0__0 : rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13729:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 )
            // InternalSQLParser.g:13730:2: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1
            {
            pushFollow(FOLLOW_79);
            rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"
    // InternalSQLParser.g:13737:1: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13741:1: ( ( UNBOUNDED ) )
            // InternalSQLParser.g:13742:1: ( UNBOUNDED )
            {
            // InternalSQLParser.g:13742:1: ( UNBOUNDED )
            // InternalSQLParser.g:13743:2: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1"
    // InternalSQLParser.g:13752:1: rule__WindowingClauseOperandFollowing__Group_1_0__1 : rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13756:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl )
            // InternalSQLParser.g:13757:2: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"
    // InternalSQLParser.g:13763:1: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl : ( KW_FOLLOWING ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13767:1: ( ( KW_FOLLOWING ) )
            // InternalSQLParser.g:13768:1: ( KW_FOLLOWING )
            {
            // InternalSQLParser.g:13768:1: ( KW_FOLLOWING )
            // InternalSQLParser.g:13769:2: KW_FOLLOWING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }
            match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0"
    // InternalSQLParser.g:13779:1: rule__WindowingClauseOperandFollowing__Group_1_1__0 : rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13783:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 )
            // InternalSQLParser.g:13784:2: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1
            {
            pushFollow(FOLLOW_80);
            rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"
    // InternalSQLParser.g:13791:1: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13795:1: ( ( CURRENT ) )
            // InternalSQLParser.g:13796:1: ( CURRENT )
            {
            // InternalSQLParser.g:13796:1: ( CURRENT )
            // InternalSQLParser.g:13797:2: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1"
    // InternalSQLParser.g:13806:1: rule__WindowingClauseOperandFollowing__Group_1_1__1 : rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13810:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl )
            // InternalSQLParser.g:13811:2: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"
    // InternalSQLParser.g:13817:1: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13821:1: ( ( ROW ) )
            // InternalSQLParser.g:13822:1: ( ROW )
            {
            // InternalSQLParser.g:13822:1: ( ROW )
            // InternalSQLParser.g:13823:2: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0"
    // InternalSQLParser.g:13833:1: rule__WindowingClauseOperandFollowing__Group_1_2__0 : rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13837:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 )
            // InternalSQLParser.g:13838:2: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1
            {
            pushFollow(FOLLOW_81);
            rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"
    // InternalSQLParser.g:13845:1: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13849:1: ( ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) )
            // InternalSQLParser.g:13850:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            {
            // InternalSQLParser.g:13850:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            // InternalSQLParser.g:13851:2: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }
            // InternalSQLParser.g:13852:2: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            // InternalSQLParser.g:13852:3: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1"
    // InternalSQLParser.g:13860:1: rule__WindowingClauseOperandFollowing__Group_1_2__1 : rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13864:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl )
            // InternalSQLParser.g:13865:2: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"
    // InternalSQLParser.g:13871:1: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13875:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) )
            // InternalSQLParser.g:13876:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            {
            // InternalSQLParser.g:13876:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            // InternalSQLParser.g:13877:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSQLParser.g:13878:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            // InternalSQLParser.g:13878:3: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0"
    // InternalSQLParser.g:13887:1: rule__WindowingClauseOperandPreceding__Group__0 : rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13891:1: ( rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 )
            // InternalSQLParser.g:13892:2: rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClauseOperandPreceding__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0__Impl"
    // InternalSQLParser.g:13899:1: rule__WindowingClauseOperandPreceding__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13903:1: ( ( () ) )
            // InternalSQLParser.g:13904:1: ( () )
            {
            // InternalSQLParser.g:13904:1: ( () )
            // InternalSQLParser.g:13905:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }
            // InternalSQLParser.g:13906:2: ()
            // InternalSQLParser.g:13906:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1"
    // InternalSQLParser.g:13914:1: rule__WindowingClauseOperandPreceding__Group__1 : rule__WindowingClauseOperandPreceding__Group__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13918:1: ( rule__WindowingClauseOperandPreceding__Group__1__Impl )
            // InternalSQLParser.g:13919:2: rule__WindowingClauseOperandPreceding__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1__Impl"
    // InternalSQLParser.g:13925:1: rule__WindowingClauseOperandPreceding__Group__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13929:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) )
            // InternalSQLParser.g:13930:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            {
            // InternalSQLParser.g:13930:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            // InternalSQLParser.g:13931:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:13932:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            // InternalSQLParser.g:13932:3: rule__WindowingClauseOperandPreceding__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0"
    // InternalSQLParser.g:13941:1: rule__WindowingClauseOperandPreceding__Group_1_0__0 : rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13945:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 )
            // InternalSQLParser.g:13946:2: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1
            {
            pushFollow(FOLLOW_82);
            rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"
    // InternalSQLParser.g:13953:1: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13957:1: ( ( UNBOUNDED ) )
            // InternalSQLParser.g:13958:1: ( UNBOUNDED )
            {
            // InternalSQLParser.g:13958:1: ( UNBOUNDED )
            // InternalSQLParser.g:13959:2: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1"
    // InternalSQLParser.g:13968:1: rule__WindowingClauseOperandPreceding__Group_1_0__1 : rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13972:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl )
            // InternalSQLParser.g:13973:2: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"
    // InternalSQLParser.g:13979:1: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl : ( PRECEDING ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13983:1: ( ( PRECEDING ) )
            // InternalSQLParser.g:13984:1: ( PRECEDING )
            {
            // InternalSQLParser.g:13984:1: ( PRECEDING )
            // InternalSQLParser.g:13985:2: PRECEDING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }
            match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0"
    // InternalSQLParser.g:13995:1: rule__WindowingClauseOperandPreceding__Group_1_1__0 : rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13999:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 )
            // InternalSQLParser.g:14000:2: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1
            {
            pushFollow(FOLLOW_80);
            rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"
    // InternalSQLParser.g:14007:1: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14011:1: ( ( CURRENT ) )
            // InternalSQLParser.g:14012:1: ( CURRENT )
            {
            // InternalSQLParser.g:14012:1: ( CURRENT )
            // InternalSQLParser.g:14013:2: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1"
    // InternalSQLParser.g:14022:1: rule__WindowingClauseOperandPreceding__Group_1_1__1 : rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14026:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl )
            // InternalSQLParser.g:14027:2: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"
    // InternalSQLParser.g:14033:1: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14037:1: ( ( ROW ) )
            // InternalSQLParser.g:14038:1: ( ROW )
            {
            // InternalSQLParser.g:14038:1: ( ROW )
            // InternalSQLParser.g:14039:2: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0"
    // InternalSQLParser.g:14049:1: rule__WindowingClauseOperandPreceding__Group_1_2__0 : rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14053:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 )
            // InternalSQLParser.g:14054:2: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1
            {
            pushFollow(FOLLOW_81);
            rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"
    // InternalSQLParser.g:14061:1: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14065:1: ( ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) )
            // InternalSQLParser.g:14066:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            {
            // InternalSQLParser.g:14066:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            // InternalSQLParser.g:14067:2: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }
            // InternalSQLParser.g:14068:2: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            // InternalSQLParser.g:14068:3: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1"
    // InternalSQLParser.g:14076:1: rule__WindowingClauseOperandPreceding__Group_1_2__1 : rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14080:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl )
            // InternalSQLParser.g:14081:2: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"
    // InternalSQLParser.g:14087:1: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14091:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) )
            // InternalSQLParser.g:14092:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            {
            // InternalSQLParser.g:14092:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            // InternalSQLParser.g:14093:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSQLParser.g:14094:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            // InternalSQLParser.g:14094:3: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group__0"
    // InternalSQLParser.g:14103:1: rule__OrderByClause__Group__0 : rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 ;
    public final void rule__OrderByClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14107:1: ( rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 )
            // InternalSQLParser.g:14108:2: rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__OrderByClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0"


    // $ANTLR start "rule__OrderByClause__Group__0__Impl"
    // InternalSQLParser.g:14115:1: rule__OrderByClause__Group__0__Impl : ( ( rule__OrderByClause__Alternatives_0 ) ) ;
    public final void rule__OrderByClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14119:1: ( ( ( rule__OrderByClause__Alternatives_0 ) ) )
            // InternalSQLParser.g:14120:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            {
            // InternalSQLParser.g:14120:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            // InternalSQLParser.g:14121:2: ( rule__OrderByClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:14122:2: ( rule__OrderByClause__Alternatives_0 )
            // InternalSQLParser.g:14122:3: rule__OrderByClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group__1"
    // InternalSQLParser.g:14130:1: rule__OrderByClause__Group__1 : rule__OrderByClause__Group__1__Impl ;
    public final void rule__OrderByClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14134:1: ( rule__OrderByClause__Group__1__Impl )
            // InternalSQLParser.g:14135:2: rule__OrderByClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1"


    // $ANTLR start "rule__OrderByClause__Group__1__Impl"
    // InternalSQLParser.g:14141:1: rule__OrderByClause__Group__1__Impl : ( ( rule__OrderByClause__ArgsAssignment_1 ) ) ;
    public final void rule__OrderByClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14145:1: ( ( ( rule__OrderByClause__ArgsAssignment_1 ) ) )
            // InternalSQLParser.g:14146:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            {
            // InternalSQLParser.g:14146:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            // InternalSQLParser.g:14147:2: ( rule__OrderByClause__ArgsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }
            // InternalSQLParser.g:14148:2: ( rule__OrderByClause__ArgsAssignment_1 )
            // InternalSQLParser.g:14148:3: rule__OrderByClause__ArgsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__ArgsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0"
    // InternalSQLParser.g:14157:1: rule__OrderByClause__Group_0_0__0 : rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 ;
    public final void rule__OrderByClause__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14161:1: ( rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 )
            // InternalSQLParser.g:14162:2: rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1
            {
            pushFollow(FOLLOW_25);
            rule__OrderByClause__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0__Impl"
    // InternalSQLParser.g:14169:1: rule__OrderByClause__Group_0_0__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14173:1: ( ( ORDER ) )
            // InternalSQLParser.g:14174:1: ( ORDER )
            {
            // InternalSQLParser.g:14174:1: ( ORDER )
            // InternalSQLParser.g:14175:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1"
    // InternalSQLParser.g:14184:1: rule__OrderByClause__Group_0_0__1 : rule__OrderByClause__Group_0_0__1__Impl ;
    public final void rule__OrderByClause__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14188:1: ( rule__OrderByClause__Group_0_0__1__Impl )
            // InternalSQLParser.g:14189:2: rule__OrderByClause__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1__Impl"
    // InternalSQLParser.g:14195:1: rule__OrderByClause__Group_0_0__1__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14199:1: ( ( BY ) )
            // InternalSQLParser.g:14200:1: ( BY )
            {
            // InternalSQLParser.g:14200:1: ( BY )
            // InternalSQLParser.g:14201:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0"
    // InternalSQLParser.g:14211:1: rule__OrderByClause__Group_0_1__0 : rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 ;
    public final void rule__OrderByClause__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14215:1: ( rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 )
            // InternalSQLParser.g:14216:2: rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1
            {
            pushFollow(FOLLOW_83);
            rule__OrderByClause__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0__Impl"
    // InternalSQLParser.g:14223:1: rule__OrderByClause__Group_0_1__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14227:1: ( ( ORDER ) )
            // InternalSQLParser.g:14228:1: ( ORDER )
            {
            // InternalSQLParser.g:14228:1: ( ORDER )
            // InternalSQLParser.g:14229:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1"
    // InternalSQLParser.g:14238:1: rule__OrderByClause__Group_0_1__1 : rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 ;
    public final void rule__OrderByClause__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14242:1: ( rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 )
            // InternalSQLParser.g:14243:2: rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2
            {
            pushFollow(FOLLOW_25);
            rule__OrderByClause__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1__Impl"
    // InternalSQLParser.g:14250:1: rule__OrderByClause__Group_0_1__1__Impl : ( SIBLINGS ) ;
    public final void rule__OrderByClause__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14254:1: ( ( SIBLINGS ) )
            // InternalSQLParser.g:14255:1: ( SIBLINGS )
            {
            // InternalSQLParser.g:14255:1: ( SIBLINGS )
            // InternalSQLParser.g:14256:2: SIBLINGS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }
            match(input,SIBLINGS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2"
    // InternalSQLParser.g:14265:1: rule__OrderByClause__Group_0_1__2 : rule__OrderByClause__Group_0_1__2__Impl ;
    public final void rule__OrderByClause__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14269:1: ( rule__OrderByClause__Group_0_1__2__Impl )
            // InternalSQLParser.g:14270:2: rule__OrderByClause__Group_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2__Impl"
    // InternalSQLParser.g:14276:1: rule__OrderByClause__Group_0_1__2__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14280:1: ( ( BY ) )
            // InternalSQLParser.g:14281:1: ( BY )
            {
            // InternalSQLParser.g:14281:1: ( BY )
            // InternalSQLParser.g:14282:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0"
    // InternalSQLParser.g:14292:1: rule__OrderByClauseArgs__Group__0 : rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 ;
    public final void rule__OrderByClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14296:1: ( rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 )
            // InternalSQLParser.g:14297:2: rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__OrderByClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0__Impl"
    // InternalSQLParser.g:14304:1: rule__OrderByClauseArgs__Group__0__Impl : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14308:1: ( ( ruleOrderByClauseArg ) )
            // InternalSQLParser.g:14309:1: ( ruleOrderByClauseArg )
            {
            // InternalSQLParser.g:14309:1: ( ruleOrderByClauseArg )
            // InternalSQLParser.g:14310:2: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1"
    // InternalSQLParser.g:14319:1: rule__OrderByClauseArgs__Group__1 : rule__OrderByClauseArgs__Group__1__Impl ;
    public final void rule__OrderByClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14323:1: ( rule__OrderByClauseArgs__Group__1__Impl )
            // InternalSQLParser.g:14324:2: rule__OrderByClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1__Impl"
    // InternalSQLParser.g:14330:1: rule__OrderByClauseArgs__Group__1__Impl : ( ( rule__OrderByClauseArgs__Group_1__0 )? ) ;
    public final void rule__OrderByClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14334:1: ( ( ( rule__OrderByClauseArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:14335:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:14335:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            // InternalSQLParser.g:14336:2: ( rule__OrderByClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:14337:2: ( rule__OrderByClauseArgs__Group_1__0 )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==Comma) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalSQLParser.g:14337:3: rule__OrderByClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0"
    // InternalSQLParser.g:14346:1: rule__OrderByClauseArgs__Group_1__0 : rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14350:1: ( rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 )
            // InternalSQLParser.g:14351:2: rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__OrderByClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0__Impl"
    // InternalSQLParser.g:14358:1: rule__OrderByClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14362:1: ( ( () ) )
            // InternalSQLParser.g:14363:1: ( () )
            {
            // InternalSQLParser.g:14363:1: ( () )
            // InternalSQLParser.g:14364:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:14365:2: ()
            // InternalSQLParser.g:14365:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1"
    // InternalSQLParser.g:14373:1: rule__OrderByClauseArgs__Group_1__1 : rule__OrderByClauseArgs__Group_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14377:1: ( rule__OrderByClauseArgs__Group_1__1__Impl )
            // InternalSQLParser.g:14378:2: rule__OrderByClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1__Impl"
    // InternalSQLParser.g:14384:1: rule__OrderByClauseArgs__Group_1__1__Impl : ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14388:1: ( ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:14389:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:14389:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:14390:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:14390:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:14391:3: ( rule__OrderByClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14392:3: ( rule__OrderByClauseArgs__Group_1_1__0 )
            // InternalSQLParser.g:14392:4: rule__OrderByClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__OrderByClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:14395:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:14396:3: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14397:3: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==Comma) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalSQLParser.g:14397:4: rule__OrderByClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__OrderByClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0"
    // InternalSQLParser.g:14407:1: rule__OrderByClauseArgs__Group_1_1__0 : rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14411:1: ( rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 )
            // InternalSQLParser.g:14412:2: rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_78);
            rule__OrderByClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:14419:1: rule__OrderByClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14423:1: ( ( Comma ) )
            // InternalSQLParser.g:14424:1: ( Comma )
            {
            // InternalSQLParser.g:14424:1: ( Comma )
            // InternalSQLParser.g:14425:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1"
    // InternalSQLParser.g:14434:1: rule__OrderByClauseArgs__Group_1_1__1 : rule__OrderByClauseArgs__Group_1_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14438:1: ( rule__OrderByClauseArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:14439:2: rule__OrderByClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:14445:1: rule__OrderByClauseArgs__Group_1_1__1__Impl : ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14449:1: ( ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:14450:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:14450:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:14451:2: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:14452:2: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:14452:3: rule__OrderByClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__0"
    // InternalSQLParser.g:14461:1: rule__OrderByClauseArg__Group__0 : rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 ;
    public final void rule__OrderByClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14465:1: ( rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 )
            // InternalSQLParser.g:14466:2: rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1
            {
            pushFollow(FOLLOW_84);
            rule__OrderByClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0"


    // $ANTLR start "rule__OrderByClauseArg__Group__0__Impl"
    // InternalSQLParser.g:14473:1: rule__OrderByClauseArg__Group__0__Impl : ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) ;
    public final void rule__OrderByClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14477:1: ( ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) )
            // InternalSQLParser.g:14478:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            {
            // InternalSQLParser.g:14478:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            // InternalSQLParser.g:14479:2: ( rule__OrderByClauseArg__ColAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }
            // InternalSQLParser.g:14480:2: ( rule__OrderByClauseArg__ColAssignment_0 )
            // InternalSQLParser.g:14480:3: rule__OrderByClauseArg__ColAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__ColAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__1"
    // InternalSQLParser.g:14488:1: rule__OrderByClauseArg__Group__1 : rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 ;
    public final void rule__OrderByClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14492:1: ( rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 )
            // InternalSQLParser.g:14493:2: rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__OrderByClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1"


    // $ANTLR start "rule__OrderByClauseArg__Group__1__Impl"
    // InternalSQLParser.g:14500:1: rule__OrderByClauseArg__Group__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_1 )? ) ;
    public final void rule__OrderByClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14504:1: ( ( ( rule__OrderByClauseArg__Alternatives_1 )? ) )
            // InternalSQLParser.g:14505:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            {
            // InternalSQLParser.g:14505:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            // InternalSQLParser.g:14506:2: ( rule__OrderByClauseArg__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:14507:2: ( rule__OrderByClauseArg__Alternatives_1 )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==DESC||LA134_0==ASC) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSQLParser.g:14507:3: rule__OrderByClauseArg__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__2"
    // InternalSQLParser.g:14515:1: rule__OrderByClauseArg__Group__2 : rule__OrderByClauseArg__Group__2__Impl ;
    public final void rule__OrderByClauseArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14519:1: ( rule__OrderByClauseArg__Group__2__Impl )
            // InternalSQLParser.g:14520:2: rule__OrderByClauseArg__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2"


    // $ANTLR start "rule__OrderByClauseArg__Group__2__Impl"
    // InternalSQLParser.g:14526:1: rule__OrderByClauseArg__Group__2__Impl : ( ( rule__OrderByClauseArg__Group_2__0 )? ) ;
    public final void rule__OrderByClauseArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14530:1: ( ( ( rule__OrderByClauseArg__Group_2__0 )? ) )
            // InternalSQLParser.g:14531:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            {
            // InternalSQLParser.g:14531:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            // InternalSQLParser.g:14532:2: ( rule__OrderByClauseArg__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:14533:2: ( rule__OrderByClauseArg__Group_2__0 )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==NULLS) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSQLParser.g:14533:3: rule__OrderByClauseArg__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0"
    // InternalSQLParser.g:14542:1: rule__OrderByClauseArg__Group_2__0 : rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 ;
    public final void rule__OrderByClauseArg__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14546:1: ( rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 )
            // InternalSQLParser.g:14547:2: rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1
            {
            pushFollow(FOLLOW_85);
            rule__OrderByClauseArg__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0__Impl"
    // InternalSQLParser.g:14554:1: rule__OrderByClauseArg__Group_2__0__Impl : ( NULLS ) ;
    public final void rule__OrderByClauseArg__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14558:1: ( ( NULLS ) )
            // InternalSQLParser.g:14559:1: ( NULLS )
            {
            // InternalSQLParser.g:14559:1: ( NULLS )
            // InternalSQLParser.g:14560:2: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1"
    // InternalSQLParser.g:14569:1: rule__OrderByClauseArg__Group_2__1 : rule__OrderByClauseArg__Group_2__1__Impl ;
    public final void rule__OrderByClauseArg__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14573:1: ( rule__OrderByClauseArg__Group_2__1__Impl )
            // InternalSQLParser.g:14574:2: rule__OrderByClauseArg__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1__Impl"
    // InternalSQLParser.g:14580:1: rule__OrderByClauseArg__Group_2__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) ;
    public final void rule__OrderByClauseArg__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14584:1: ( ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) )
            // InternalSQLParser.g:14585:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            {
            // InternalSQLParser.g:14585:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            // InternalSQLParser.g:14586:2: ( rule__OrderByClauseArg__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }
            // InternalSQLParser.g:14587:2: ( rule__OrderByClauseArg__Alternatives_2_1 )
            // InternalSQLParser.g:14587:3: rule__OrderByClauseArg__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__0"
    // InternalSQLParser.g:14596:1: rule__QueryPartitionClause__Group__0 : rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 ;
    public final void rule__QueryPartitionClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14600:1: ( rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 )
            // InternalSQLParser.g:14601:2: rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__QueryPartitionClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0"


    // $ANTLR start "rule__QueryPartitionClause__Group__0__Impl"
    // InternalSQLParser.g:14608:1: rule__QueryPartitionClause__Group__0__Impl : ( PARTITION ) ;
    public final void rule__QueryPartitionClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14612:1: ( ( PARTITION ) )
            // InternalSQLParser.g:14613:1: ( PARTITION )
            {
            // InternalSQLParser.g:14613:1: ( PARTITION )
            // InternalSQLParser.g:14614:2: PARTITION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }
            match(input,PARTITION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__1"
    // InternalSQLParser.g:14623:1: rule__QueryPartitionClause__Group__1 : rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 ;
    public final void rule__QueryPartitionClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14627:1: ( rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 )
            // InternalSQLParser.g:14628:2: rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2
            {
            pushFollow(FOLLOW_78);
            rule__QueryPartitionClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1"


    // $ANTLR start "rule__QueryPartitionClause__Group__1__Impl"
    // InternalSQLParser.g:14635:1: rule__QueryPartitionClause__Group__1__Impl : ( BY ) ;
    public final void rule__QueryPartitionClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14639:1: ( ( BY ) )
            // InternalSQLParser.g:14640:1: ( BY )
            {
            // InternalSQLParser.g:14640:1: ( BY )
            // InternalSQLParser.g:14641:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__2"
    // InternalSQLParser.g:14650:1: rule__QueryPartitionClause__Group__2 : rule__QueryPartitionClause__Group__2__Impl ;
    public final void rule__QueryPartitionClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14654:1: ( rule__QueryPartitionClause__Group__2__Impl )
            // InternalSQLParser.g:14655:2: rule__QueryPartitionClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2"


    // $ANTLR start "rule__QueryPartitionClause__Group__2__Impl"
    // InternalSQLParser.g:14661:1: rule__QueryPartitionClause__Group__2__Impl : ( ( rule__QueryPartitionClause__Alternatives_2 ) ) ;
    public final void rule__QueryPartitionClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14665:1: ( ( ( rule__QueryPartitionClause__Alternatives_2 ) ) )
            // InternalSQLParser.g:14666:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            {
            // InternalSQLParser.g:14666:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            // InternalSQLParser.g:14667:2: ( rule__QueryPartitionClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:14668:2: ( rule__QueryPartitionClause__Alternatives_2 )
            // InternalSQLParser.g:14668:3: rule__QueryPartitionClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0"
    // InternalSQLParser.g:14677:1: rule__QueryPartitionClause__Group_2_1__0 : rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 ;
    public final void rule__QueryPartitionClause__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14681:1: ( rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 )
            // InternalSQLParser.g:14682:2: rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1
            {
            pushFollow(FOLLOW_78);
            rule__QueryPartitionClause__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0__Impl"
    // InternalSQLParser.g:14689:1: rule__QueryPartitionClause__Group_2_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14693:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:14694:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:14694:1: ( LeftParenthesis )
            // InternalSQLParser.g:14695:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1"
    // InternalSQLParser.g:14704:1: rule__QueryPartitionClause__Group_2_1__1 : rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 ;
    public final void rule__QueryPartitionClause__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14708:1: ( rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 )
            // InternalSQLParser.g:14709:2: rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2
            {
            pushFollow(FOLLOW_7);
            rule__QueryPartitionClause__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1__Impl"
    // InternalSQLParser.g:14716:1: rule__QueryPartitionClause__Group_2_1__1__Impl : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14720:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSQLParser.g:14721:1: ( ruleAnalyticExprArgs )
            {
            // InternalSQLParser.g:14721:1: ( ruleAnalyticExprArgs )
            // InternalSQLParser.g:14722:2: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2"
    // InternalSQLParser.g:14731:1: rule__QueryPartitionClause__Group_2_1__2 : rule__QueryPartitionClause__Group_2_1__2__Impl ;
    public final void rule__QueryPartitionClause__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14735:1: ( rule__QueryPartitionClause__Group_2_1__2__Impl )
            // InternalSQLParser.g:14736:2: rule__QueryPartitionClause__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2__Impl"
    // InternalSQLParser.g:14742:1: rule__QueryPartitionClause__Group_2_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14746:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:14747:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:14747:1: ( RightParenthesis )
            // InternalSQLParser.g:14748:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0"
    // InternalSQLParser.g:14758:1: rule__AnalyticExprArgs__Group__0 : rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 ;
    public final void rule__AnalyticExprArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14762:1: ( rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 )
            // InternalSQLParser.g:14763:2: rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__AnalyticExprArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0__Impl"
    // InternalSQLParser.g:14770:1: rule__AnalyticExprArgs__Group__0__Impl : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14774:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:14775:1: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:14775:1: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:14776:2: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1"
    // InternalSQLParser.g:14785:1: rule__AnalyticExprArgs__Group__1 : rule__AnalyticExprArgs__Group__1__Impl ;
    public final void rule__AnalyticExprArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14789:1: ( rule__AnalyticExprArgs__Group__1__Impl )
            // InternalSQLParser.g:14790:2: rule__AnalyticExprArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1__Impl"
    // InternalSQLParser.g:14796:1: rule__AnalyticExprArgs__Group__1__Impl : ( ( rule__AnalyticExprArgs__Group_1__0 )? ) ;
    public final void rule__AnalyticExprArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14800:1: ( ( ( rule__AnalyticExprArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:14801:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:14801:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            // InternalSQLParser.g:14802:2: ( rule__AnalyticExprArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:14803:2: ( rule__AnalyticExprArgs__Group_1__0 )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==Comma) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSQLParser.g:14803:3: rule__AnalyticExprArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0"
    // InternalSQLParser.g:14812:1: rule__AnalyticExprArgs__Group_1__0 : rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14816:1: ( rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 )
            // InternalSQLParser.g:14817:2: rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__AnalyticExprArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0__Impl"
    // InternalSQLParser.g:14824:1: rule__AnalyticExprArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__AnalyticExprArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14828:1: ( ( () ) )
            // InternalSQLParser.g:14829:1: ( () )
            {
            // InternalSQLParser.g:14829:1: ( () )
            // InternalSQLParser.g:14830:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:14831:2: ()
            // InternalSQLParser.g:14831:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1"
    // InternalSQLParser.g:14839:1: rule__AnalyticExprArgs__Group_1__1 : rule__AnalyticExprArgs__Group_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14843:1: ( rule__AnalyticExprArgs__Group_1__1__Impl )
            // InternalSQLParser.g:14844:2: rule__AnalyticExprArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1__Impl"
    // InternalSQLParser.g:14850:1: rule__AnalyticExprArgs__Group_1__1__Impl : ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) ;
    public final void rule__AnalyticExprArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14854:1: ( ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:14855:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:14855:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:14856:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:14856:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:14857:3: ( rule__AnalyticExprArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14858:3: ( rule__AnalyticExprArgs__Group_1_1__0 )
            // InternalSQLParser.g:14858:4: rule__AnalyticExprArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__AnalyticExprArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:14861:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:14862:3: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14863:3: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==Comma) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // InternalSQLParser.g:14863:4: rule__AnalyticExprArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__AnalyticExprArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0"
    // InternalSQLParser.g:14873:1: rule__AnalyticExprArgs__Group_1_1__0 : rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14877:1: ( rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 )
            // InternalSQLParser.g:14878:2: rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_78);
            rule__AnalyticExprArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:14885:1: rule__AnalyticExprArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14889:1: ( ( Comma ) )
            // InternalSQLParser.g:14890:1: ( Comma )
            {
            // InternalSQLParser.g:14890:1: ( Comma )
            // InternalSQLParser.g:14891:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1"
    // InternalSQLParser.g:14900:1: rule__AnalyticExprArgs__Group_1_1__1 : rule__AnalyticExprArgs__Group_1_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14904:1: ( rule__AnalyticExprArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:14905:2: rule__AnalyticExprArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:14911:1: rule__AnalyticExprArgs__Group_1_1__1__Impl : ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14915:1: ( ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:14916:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:14916:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:14917:2: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:14918:2: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:14918:3: rule__AnalyticExprArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__0"
    // InternalSQLParser.g:14927:1: rule__AnalyticExprArg__Group__0 : rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 ;
    public final void rule__AnalyticExprArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14931:1: ( rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 )
            // InternalSQLParser.g:14932:2: rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__AnalyticExprArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0"


    // $ANTLR start "rule__AnalyticExprArg__Group__0__Impl"
    // InternalSQLParser.g:14939:1: rule__AnalyticExprArg__Group__0__Impl : ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) ;
    public final void rule__AnalyticExprArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14943:1: ( ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) )
            // InternalSQLParser.g:14944:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            {
            // InternalSQLParser.g:14944:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            // InternalSQLParser.g:14945:2: ( rule__AnalyticExprArg__CeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }
            // InternalSQLParser.g:14946:2: ( rule__AnalyticExprArg__CeAssignment_0 )
            // InternalSQLParser.g:14946:3: rule__AnalyticExprArg__CeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__CeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__1"
    // InternalSQLParser.g:14954:1: rule__AnalyticExprArg__Group__1 : rule__AnalyticExprArg__Group__1__Impl ;
    public final void rule__AnalyticExprArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14958:1: ( rule__AnalyticExprArg__Group__1__Impl )
            // InternalSQLParser.g:14959:2: rule__AnalyticExprArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1"


    // $ANTLR start "rule__AnalyticExprArg__Group__1__Impl"
    // InternalSQLParser.g:14965:1: rule__AnalyticExprArg__Group__1__Impl : ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) ;
    public final void rule__AnalyticExprArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14969:1: ( ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) )
            // InternalSQLParser.g:14970:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            {
            // InternalSQLParser.g:14970:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            // InternalSQLParser.g:14971:2: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }
            // InternalSQLParser.g:14972:2: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( ((LA138_0>=RULE_STRING && LA138_0<=RULE_ID)) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSQLParser.g:14972:3: rule__AnalyticExprArg__ColAliasAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArg__ColAliasAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__0"
    // InternalSQLParser.g:14981:1: rule__OpFunctionArg__Group__0 : rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 ;
    public final void rule__OpFunctionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14985:1: ( rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 )
            // InternalSQLParser.g:14986:2: rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__OpFunctionArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0"


    // $ANTLR start "rule__OpFunctionArg__Group__0__Impl"
    // InternalSQLParser.g:14993:1: rule__OpFunctionArg__Group__0__Impl : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14997:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSQLParser.g:14998:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSQLParser.g:14998:1: ( ruleOpFunctionArgOperand )
            // InternalSQLParser.g:14999:2: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__1"
    // InternalSQLParser.g:15008:1: rule__OpFunctionArg__Group__1 : rule__OpFunctionArg__Group__1__Impl ;
    public final void rule__OpFunctionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15012:1: ( rule__OpFunctionArg__Group__1__Impl )
            // InternalSQLParser.g:15013:2: rule__OpFunctionArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1"


    // $ANTLR start "rule__OpFunctionArg__Group__1__Impl"
    // InternalSQLParser.g:15019:1: rule__OpFunctionArg__Group__1__Impl : ( ( rule__OpFunctionArg__Group_1__0 )? ) ;
    public final void rule__OpFunctionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15023:1: ( ( ( rule__OpFunctionArg__Group_1__0 )? ) )
            // InternalSQLParser.g:15024:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            {
            // InternalSQLParser.g:15024:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            // InternalSQLParser.g:15025:2: ( rule__OpFunctionArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:15026:2: ( rule__OpFunctionArg__Group_1__0 )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==Comma) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSQLParser.g:15026:3: rule__OpFunctionArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0"
    // InternalSQLParser.g:15035:1: rule__OpFunctionArg__Group_1__0 : rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 ;
    public final void rule__OpFunctionArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15039:1: ( rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 )
            // InternalSQLParser.g:15040:2: rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__OpFunctionArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0__Impl"
    // InternalSQLParser.g:15047:1: rule__OpFunctionArg__Group_1__0__Impl : ( () ) ;
    public final void rule__OpFunctionArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15051:1: ( ( () ) )
            // InternalSQLParser.g:15052:1: ( () )
            {
            // InternalSQLParser.g:15052:1: ( () )
            // InternalSQLParser.g:15053:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:15054:2: ()
            // InternalSQLParser.g:15054:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1"
    // InternalSQLParser.g:15062:1: rule__OpFunctionArg__Group_1__1 : rule__OpFunctionArg__Group_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15066:1: ( rule__OpFunctionArg__Group_1__1__Impl )
            // InternalSQLParser.g:15067:2: rule__OpFunctionArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1__Impl"
    // InternalSQLParser.g:15073:1: rule__OpFunctionArg__Group_1__1__Impl : ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) ;
    public final void rule__OpFunctionArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15077:1: ( ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:15078:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:15078:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            // InternalSQLParser.g:15079:2: ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:15079:2: ( ( rule__OpFunctionArg__Group_1_1__0 ) )
            // InternalSQLParser.g:15080:3: ( rule__OpFunctionArg__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:15081:3: ( rule__OpFunctionArg__Group_1_1__0 )
            // InternalSQLParser.g:15081:4: rule__OpFunctionArg__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__OpFunctionArg__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:15084:2: ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            // InternalSQLParser.g:15085:3: ( rule__OpFunctionArg__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:15086:3: ( rule__OpFunctionArg__Group_1_1__0 )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==Comma) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalSQLParser.g:15086:4: rule__OpFunctionArg__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__OpFunctionArg__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0"
    // InternalSQLParser.g:15096:1: rule__OpFunctionArg__Group_1_1__0 : rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 ;
    public final void rule__OpFunctionArg__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15100:1: ( rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 )
            // InternalSQLParser.g:15101:2: rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1
            {
            pushFollow(FOLLOW_86);
            rule__OpFunctionArg__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0__Impl"
    // InternalSQLParser.g:15108:1: rule__OpFunctionArg__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionArg__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15112:1: ( ( Comma ) )
            // InternalSQLParser.g:15113:1: ( Comma )
            {
            // InternalSQLParser.g:15113:1: ( Comma )
            // InternalSQLParser.g:15114:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1"
    // InternalSQLParser.g:15123:1: rule__OpFunctionArg__Group_1_1__1 : rule__OpFunctionArg__Group_1_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15127:1: ( rule__OpFunctionArg__Group_1_1__1__Impl )
            // InternalSQLParser.g:15128:2: rule__OpFunctionArg__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1__Impl"
    // InternalSQLParser.g:15134:1: rule__OpFunctionArg__Group_1_1__1__Impl : ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OpFunctionArg__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15138:1: ( ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:15139:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:15139:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:15140:2: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:15141:2: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:15141:3: rule__OpFunctionArg__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__0"
    // InternalSQLParser.g:15150:1: rule__OpFunctionCast__Group__0 : rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 ;
    public final void rule__OpFunctionCast__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15154:1: ( rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 )
            // InternalSQLParser.g:15155:2: rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__OpFunctionCast__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0"


    // $ANTLR start "rule__OpFunctionCast__Group__0__Impl"
    // InternalSQLParser.g:15162:1: rule__OpFunctionCast__Group__0__Impl : ( CAST ) ;
    public final void rule__OpFunctionCast__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15166:1: ( ( CAST ) )
            // InternalSQLParser.g:15167:1: ( CAST )
            {
            // InternalSQLParser.g:15167:1: ( CAST )
            // InternalSQLParser.g:15168:2: CAST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }
            match(input,CAST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__1"
    // InternalSQLParser.g:15177:1: rule__OpFunctionCast__Group__1 : rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 ;
    public final void rule__OpFunctionCast__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15181:1: ( rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 )
            // InternalSQLParser.g:15182:2: rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2
            {
            pushFollow(FOLLOW_48);
            rule__OpFunctionCast__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1"


    // $ANTLR start "rule__OpFunctionCast__Group__1__Impl"
    // InternalSQLParser.g:15189:1: rule__OpFunctionCast__Group__1__Impl : ( ( rule__OpFunctionCast__OpAssignment_1 ) ) ;
    public final void rule__OpFunctionCast__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15193:1: ( ( ( rule__OpFunctionCast__OpAssignment_1 ) ) )
            // InternalSQLParser.g:15194:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:15194:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            // InternalSQLParser.g:15195:2: ( rule__OpFunctionCast__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:15196:2: ( rule__OpFunctionCast__OpAssignment_1 )
            // InternalSQLParser.g:15196:3: rule__OpFunctionCast__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__2"
    // InternalSQLParser.g:15204:1: rule__OpFunctionCast__Group__2 : rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 ;
    public final void rule__OpFunctionCast__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15208:1: ( rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 )
            // InternalSQLParser.g:15209:2: rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__OpFunctionCast__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2"


    // $ANTLR start "rule__OpFunctionCast__Group__2__Impl"
    // InternalSQLParser.g:15216:1: rule__OpFunctionCast__Group__2__Impl : ( AS ) ;
    public final void rule__OpFunctionCast__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15220:1: ( ( AS ) )
            // InternalSQLParser.g:15221:1: ( AS )
            {
            // InternalSQLParser.g:15221:1: ( AS )
            // InternalSQLParser.g:15222:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__3"
    // InternalSQLParser.g:15231:1: rule__OpFunctionCast__Group__3 : rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 ;
    public final void rule__OpFunctionCast__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15235:1: ( rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 )
            // InternalSQLParser.g:15236:2: rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4
            {
            pushFollow(FOLLOW_87);
            rule__OpFunctionCast__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3"


    // $ANTLR start "rule__OpFunctionCast__Group__3__Impl"
    // InternalSQLParser.g:15243:1: rule__OpFunctionCast__Group__3__Impl : ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) ;
    public final void rule__OpFunctionCast__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15247:1: ( ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) )
            // InternalSQLParser.g:15248:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            {
            // InternalSQLParser.g:15248:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            // InternalSQLParser.g:15249:2: ( rule__OpFunctionCast__TypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }
            // InternalSQLParser.g:15250:2: ( rule__OpFunctionCast__TypeAssignment_3 )
            // InternalSQLParser.g:15250:3: rule__OpFunctionCast__TypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__TypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__4"
    // InternalSQLParser.g:15258:1: rule__OpFunctionCast__Group__4 : rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 ;
    public final void rule__OpFunctionCast__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15262:1: ( rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 )
            // InternalSQLParser.g:15263:2: rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5
            {
            pushFollow(FOLLOW_87);
            rule__OpFunctionCast__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4"


    // $ANTLR start "rule__OpFunctionCast__Group__4__Impl"
    // InternalSQLParser.g:15270:1: rule__OpFunctionCast__Group__4__Impl : ( ( rule__OpFunctionCast__Group_4__0 )? ) ;
    public final void rule__OpFunctionCast__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15274:1: ( ( ( rule__OpFunctionCast__Group_4__0 )? ) )
            // InternalSQLParser.g:15275:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            {
            // InternalSQLParser.g:15275:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            // InternalSQLParser.g:15276:2: ( rule__OpFunctionCast__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }
            // InternalSQLParser.g:15277:2: ( rule__OpFunctionCast__Group_4__0 )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==LeftParenthesis) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalSQLParser.g:15277:3: rule__OpFunctionCast__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__5"
    // InternalSQLParser.g:15285:1: rule__OpFunctionCast__Group__5 : rule__OpFunctionCast__Group__5__Impl ;
    public final void rule__OpFunctionCast__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15289:1: ( rule__OpFunctionCast__Group__5__Impl )
            // InternalSQLParser.g:15290:2: rule__OpFunctionCast__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5"


    // $ANTLR start "rule__OpFunctionCast__Group__5__Impl"
    // InternalSQLParser.g:15296:1: rule__OpFunctionCast__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15300:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:15301:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:15301:1: ( RightParenthesis )
            // InternalSQLParser.g:15302:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0"
    // InternalSQLParser.g:15312:1: rule__OpFunctionCast__Group_4__0 : rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 ;
    public final void rule__OpFunctionCast__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15316:1: ( rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 )
            // InternalSQLParser.g:15317:2: rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1
            {
            pushFollow(FOLLOW_13);
            rule__OpFunctionCast__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0__Impl"
    // InternalSQLParser.g:15324:1: rule__OpFunctionCast__Group_4__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15328:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:15329:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:15329:1: ( LeftParenthesis )
            // InternalSQLParser.g:15330:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1"
    // InternalSQLParser.g:15339:1: rule__OpFunctionCast__Group_4__1 : rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 ;
    public final void rule__OpFunctionCast__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15343:1: ( rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 )
            // InternalSQLParser.g:15344:2: rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2
            {
            pushFollow(FOLLOW_88);
            rule__OpFunctionCast__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1__Impl"
    // InternalSQLParser.g:15351:1: rule__OpFunctionCast__Group_4__1__Impl : ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15355:1: ( ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) )
            // InternalSQLParser.g:15356:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            {
            // InternalSQLParser.g:15356:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            // InternalSQLParser.g:15357:2: ( rule__OpFunctionCast__PAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }
            // InternalSQLParser.g:15358:2: ( rule__OpFunctionCast__PAssignment_4_1 )
            // InternalSQLParser.g:15358:3: rule__OpFunctionCast__PAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__PAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2"
    // InternalSQLParser.g:15366:1: rule__OpFunctionCast__Group_4__2 : rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 ;
    public final void rule__OpFunctionCast__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15370:1: ( rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 )
            // InternalSQLParser.g:15371:2: rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3
            {
            pushFollow(FOLLOW_88);
            rule__OpFunctionCast__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2__Impl"
    // InternalSQLParser.g:15378:1: rule__OpFunctionCast__Group_4__2__Impl : ( ( rule__OpFunctionCast__Group_4_2__0 )? ) ;
    public final void rule__OpFunctionCast__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15382:1: ( ( ( rule__OpFunctionCast__Group_4_2__0 )? ) )
            // InternalSQLParser.g:15383:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            {
            // InternalSQLParser.g:15383:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            // InternalSQLParser.g:15384:2: ( rule__OpFunctionCast__Group_4_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }
            // InternalSQLParser.g:15385:2: ( rule__OpFunctionCast__Group_4_2__0 )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==Comma) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalSQLParser.g:15385:3: rule__OpFunctionCast__Group_4_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3"
    // InternalSQLParser.g:15393:1: rule__OpFunctionCast__Group_4__3 : rule__OpFunctionCast__Group_4__3__Impl ;
    public final void rule__OpFunctionCast__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15397:1: ( rule__OpFunctionCast__Group_4__3__Impl )
            // InternalSQLParser.g:15398:2: rule__OpFunctionCast__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3__Impl"
    // InternalSQLParser.g:15404:1: rule__OpFunctionCast__Group_4__3__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15408:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:15409:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:15409:1: ( RightParenthesis )
            // InternalSQLParser.g:15410:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0"
    // InternalSQLParser.g:15420:1: rule__OpFunctionCast__Group_4_2__0 : rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 ;
    public final void rule__OpFunctionCast__Group_4_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15424:1: ( rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 )
            // InternalSQLParser.g:15425:2: rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1
            {
            pushFollow(FOLLOW_13);
            rule__OpFunctionCast__Group_4_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0__Impl"
    // InternalSQLParser.g:15432:1: rule__OpFunctionCast__Group_4_2__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionCast__Group_4_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15436:1: ( ( Comma ) )
            // InternalSQLParser.g:15437:1: ( Comma )
            {
            // InternalSQLParser.g:15437:1: ( Comma )
            // InternalSQLParser.g:15438:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1"
    // InternalSQLParser.g:15447:1: rule__OpFunctionCast__Group_4_2__1 : rule__OpFunctionCast__Group_4_2__1__Impl ;
    public final void rule__OpFunctionCast__Group_4_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15451:1: ( rule__OpFunctionCast__Group_4_2__1__Impl )
            // InternalSQLParser.g:15452:2: rule__OpFunctionCast__Group_4_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1__Impl"
    // InternalSQLParser.g:15458:1: rule__OpFunctionCast__Group_4_2__1__Impl : ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15462:1: ( ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) )
            // InternalSQLParser.g:15463:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            {
            // InternalSQLParser.g:15463:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            // InternalSQLParser.g:15464:2: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }
            // InternalSQLParser.g:15465:2: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            // InternalSQLParser.g:15465:3: rule__OpFunctionCast__P2Assignment_4_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__P2Assignment_4_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0"
    // InternalSQLParser.g:15474:1: rule__OpFunctionArgAgregate__Group__0 : rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 ;
    public final void rule__OpFunctionArgAgregate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15478:1: ( rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 )
            // InternalSQLParser.g:15479:2: rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__OpFunctionArgAgregate__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0__Impl"
    // InternalSQLParser.g:15486:1: rule__OpFunctionArgAgregate__Group__0__Impl : ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) ;
    public final void rule__OpFunctionArgAgregate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15490:1: ( ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) )
            // InternalSQLParser.g:15491:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            {
            // InternalSQLParser.g:15491:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            // InternalSQLParser.g:15492:2: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:15493:2: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            // InternalSQLParser.g:15493:3: rule__OpFunctionArgAgregate__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1"
    // InternalSQLParser.g:15501:1: rule__OpFunctionArgAgregate__Group__1 : rule__OpFunctionArgAgregate__Group__1__Impl ;
    public final void rule__OpFunctionArgAgregate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15505:1: ( rule__OpFunctionArgAgregate__Group__1__Impl )
            // InternalSQLParser.g:15506:2: rule__OpFunctionArgAgregate__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1__Impl"
    // InternalSQLParser.g:15512:1: rule__OpFunctionArgAgregate__Group__1__Impl : ( ruleOperand ) ;
    public final void rule__OpFunctionArgAgregate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15516:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:15517:1: ( ruleOperand )
            {
            // InternalSQLParser.g:15517:1: ( ruleOperand )
            // InternalSQLParser.g:15518:2: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__0"
    // InternalSQLParser.g:15528:1: rule__ColumnOperand__Group__0 : rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 ;
    public final void rule__ColumnOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15532:1: ( rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 )
            // InternalSQLParser.g:15533:2: rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1
            {
            pushFollow(FOLLOW_89);
            rule__ColumnOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0"


    // $ANTLR start "rule__ColumnOperand__Group__0__Impl"
    // InternalSQLParser.g:15540:1: rule__ColumnOperand__Group__0__Impl : ( ( rule__ColumnOperand__CfullAssignment_0 ) ) ;
    public final void rule__ColumnOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15544:1: ( ( ( rule__ColumnOperand__CfullAssignment_0 ) ) )
            // InternalSQLParser.g:15545:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            {
            // InternalSQLParser.g:15545:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            // InternalSQLParser.g:15546:2: ( rule__ColumnOperand__CfullAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }
            // InternalSQLParser.g:15547:2: ( rule__ColumnOperand__CfullAssignment_0 )
            // InternalSQLParser.g:15547:3: rule__ColumnOperand__CfullAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__CfullAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__1"
    // InternalSQLParser.g:15555:1: rule__ColumnOperand__Group__1 : rule__ColumnOperand__Group__1__Impl ;
    public final void rule__ColumnOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15559:1: ( rule__ColumnOperand__Group__1__Impl )
            // InternalSQLParser.g:15560:2: rule__ColumnOperand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1"


    // $ANTLR start "rule__ColumnOperand__Group__1__Impl"
    // InternalSQLParser.g:15566:1: rule__ColumnOperand__Group__1__Impl : ( ( rule__ColumnOperand__OraAssignment_1 )? ) ;
    public final void rule__ColumnOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15570:1: ( ( ( rule__ColumnOperand__OraAssignment_1 )? ) )
            // InternalSQLParser.g:15571:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            {
            // InternalSQLParser.g:15571:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            // InternalSQLParser.g:15572:2: ( rule__ColumnOperand__OraAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }
            // InternalSQLParser.g:15573:2: ( rule__ColumnOperand__OraAssignment_1 )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==LeftParenthesisPlusSignRightParenthesis) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSQLParser.g:15573:3: rule__ColumnOperand__OraAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOperand__OraAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__0"
    // InternalSQLParser.g:15582:1: rule__SubQueryOperand__Group__0 : rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 ;
    public final void rule__SubQueryOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15586:1: ( rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 )
            // InternalSQLParser.g:15587:2: rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__SubQueryOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0"


    // $ANTLR start "rule__SubQueryOperand__Group__0__Impl"
    // InternalSQLParser.g:15594:1: rule__SubQueryOperand__Group__0__Impl : ( () ) ;
    public final void rule__SubQueryOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15598:1: ( ( () ) )
            // InternalSQLParser.g:15599:1: ( () )
            {
            // InternalSQLParser.g:15599:1: ( () )
            // InternalSQLParser.g:15600:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }
            // InternalSQLParser.g:15601:2: ()
            // InternalSQLParser.g:15601:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__1"
    // InternalSQLParser.g:15609:1: rule__SubQueryOperand__Group__1 : rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 ;
    public final void rule__SubQueryOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15613:1: ( rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 )
            // InternalSQLParser.g:15614:2: rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__SubQueryOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1"


    // $ANTLR start "rule__SubQueryOperand__Group__1__Impl"
    // InternalSQLParser.g:15621:1: rule__SubQueryOperand__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__SubQueryOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15625:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:15626:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:15626:1: ( LeftParenthesis )
            // InternalSQLParser.g:15627:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__2"
    // InternalSQLParser.g:15636:1: rule__SubQueryOperand__Group__2 : rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 ;
    public final void rule__SubQueryOperand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15640:1: ( rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 )
            // InternalSQLParser.g:15641:2: rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__SubQueryOperand__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2"


    // $ANTLR start "rule__SubQueryOperand__Group__2__Impl"
    // InternalSQLParser.g:15648:1: rule__SubQueryOperand__Group__2__Impl : ( ( rule__SubQueryOperand__SelAssignment_2 ) ) ;
    public final void rule__SubQueryOperand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15652:1: ( ( ( rule__SubQueryOperand__SelAssignment_2 ) ) )
            // InternalSQLParser.g:15653:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            {
            // InternalSQLParser.g:15653:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            // InternalSQLParser.g:15654:2: ( rule__SubQueryOperand__SelAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }
            // InternalSQLParser.g:15655:2: ( rule__SubQueryOperand__SelAssignment_2 )
            // InternalSQLParser.g:15655:3: rule__SubQueryOperand__SelAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__SelAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__3"
    // InternalSQLParser.g:15663:1: rule__SubQueryOperand__Group__3 : rule__SubQueryOperand__Group__3__Impl ;
    public final void rule__SubQueryOperand__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15667:1: ( rule__SubQueryOperand__Group__3__Impl )
            // InternalSQLParser.g:15668:2: rule__SubQueryOperand__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3"


    // $ANTLR start "rule__SubQueryOperand__Group__3__Impl"
    // InternalSQLParser.g:15674:1: rule__SubQueryOperand__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__SubQueryOperand__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15678:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:15679:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:15679:1: ( RightParenthesis )
            // InternalSQLParser.g:15680:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3__Impl"


    // $ANTLR start "rule__SQLCASE__Group__0"
    // InternalSQLParser.g:15690:1: rule__SQLCASE__Group__0 : rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 ;
    public final void rule__SQLCASE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15694:1: ( rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 )
            // InternalSQLParser.g:15695:2: rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1
            {
            pushFollow(FOLLOW_90);
            rule__SQLCASE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0"


    // $ANTLR start "rule__SQLCASE__Group__0__Impl"
    // InternalSQLParser.g:15702:1: rule__SQLCASE__Group__0__Impl : ( CASE ) ;
    public final void rule__SQLCASE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15706:1: ( ( CASE ) )
            // InternalSQLParser.g:15707:1: ( CASE )
            {
            // InternalSQLParser.g:15707:1: ( CASE )
            // InternalSQLParser.g:15708:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0__Impl"


    // $ANTLR start "rule__SQLCASE__Group__1"
    // InternalSQLParser.g:15717:1: rule__SQLCASE__Group__1 : rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 ;
    public final void rule__SQLCASE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15721:1: ( rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 )
            // InternalSQLParser.g:15722:2: rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2
            {
            pushFollow(FOLLOW_90);
            rule__SQLCASE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1"


    // $ANTLR start "rule__SQLCASE__Group__1__Impl"
    // InternalSQLParser.g:15729:1: rule__SQLCASE__Group__1__Impl : ( ( rule__SQLCASE__Alternatives_1 )? ) ;
    public final void rule__SQLCASE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15733:1: ( ( ( rule__SQLCASE__Alternatives_1 )? ) )
            // InternalSQLParser.g:15734:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            {
            // InternalSQLParser.g:15734:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            // InternalSQLParser.g:15735:2: ( rule__SQLCASE__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:15736:2: ( rule__SQLCASE__Alternatives_1 )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==EXTRACT||LA144_0==EXISTS||LA144_0==CAST||LA144_0==CASE||LA144_0==NOT_1||LA144_0==NOT||LA144_0==X||LA144_0==IN||LA144_0==LeftParenthesis||(LA144_0>=RULE_JRPARAM && LA144_0<=RULE_JRNPARAM)||(LA144_0>=RULE_UNSIGNED && LA144_0<=RULE_SIGNED_DOUBLE)||(LA144_0>=RULE_STRING_ && LA144_0<=RULE_ID)) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalSQLParser.g:15736:3: rule__SQLCASE__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1__Impl"


    // $ANTLR start "rule__SQLCASE__Group__2"
    // InternalSQLParser.g:15744:1: rule__SQLCASE__Group__2 : rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 ;
    public final void rule__SQLCASE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15748:1: ( rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 )
            // InternalSQLParser.g:15749:2: rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3
            {
            pushFollow(FOLLOW_91);
            rule__SQLCASE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2"


    // $ANTLR start "rule__SQLCASE__Group__2__Impl"
    // InternalSQLParser.g:15756:1: rule__SQLCASE__Group__2__Impl : ( ( rule__SQLCASE__WhenAssignment_2 ) ) ;
    public final void rule__SQLCASE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15760:1: ( ( ( rule__SQLCASE__WhenAssignment_2 ) ) )
            // InternalSQLParser.g:15761:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            {
            // InternalSQLParser.g:15761:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            // InternalSQLParser.g:15762:2: ( rule__SQLCASE__WhenAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }
            // InternalSQLParser.g:15763:2: ( rule__SQLCASE__WhenAssignment_2 )
            // InternalSQLParser.g:15763:3: rule__SQLCASE__WhenAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__WhenAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2__Impl"


    // $ANTLR start "rule__SQLCASE__Group__3"
    // InternalSQLParser.g:15771:1: rule__SQLCASE__Group__3 : rule__SQLCASE__Group__3__Impl ;
    public final void rule__SQLCASE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15775:1: ( rule__SQLCASE__Group__3__Impl )
            // InternalSQLParser.g:15776:2: rule__SQLCASE__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3"


    // $ANTLR start "rule__SQLCASE__Group__3__Impl"
    // InternalSQLParser.g:15782:1: rule__SQLCASE__Group__3__Impl : ( END ) ;
    public final void rule__SQLCASE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15786:1: ( ( END ) )
            // InternalSQLParser.g:15787:1: ( END )
            {
            // InternalSQLParser.g:15787:1: ( END )
            // InternalSQLParser.g:15788:2: END
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }
            match(input,END,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__0"
    // InternalSQLParser.g:15798:1: rule__SQLCaseWhens__Group__0 : rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 ;
    public final void rule__SQLCaseWhens__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15802:1: ( rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 )
            // InternalSQLParser.g:15803:2: rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1
            {
            pushFollow(FOLLOW_90);
            rule__SQLCaseWhens__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0"


    // $ANTLR start "rule__SQLCaseWhens__Group__0__Impl"
    // InternalSQLParser.g:15810:1: rule__SQLCaseWhens__Group__0__Impl : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15814:1: ( ( ruleSqlCaseWhen ) )
            // InternalSQLParser.g:15815:1: ( ruleSqlCaseWhen )
            {
            // InternalSQLParser.g:15815:1: ( ruleSqlCaseWhen )
            // InternalSQLParser.g:15816:2: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__1"
    // InternalSQLParser.g:15825:1: rule__SQLCaseWhens__Group__1 : rule__SQLCaseWhens__Group__1__Impl ;
    public final void rule__SQLCaseWhens__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15829:1: ( rule__SQLCaseWhens__Group__1__Impl )
            // InternalSQLParser.g:15830:2: rule__SQLCaseWhens__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1"


    // $ANTLR start "rule__SQLCaseWhens__Group__1__Impl"
    // InternalSQLParser.g:15836:1: rule__SQLCaseWhens__Group__1__Impl : ( ( rule__SQLCaseWhens__Group_1__0 )? ) ;
    public final void rule__SQLCaseWhens__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15840:1: ( ( ( rule__SQLCaseWhens__Group_1__0 )? ) )
            // InternalSQLParser.g:15841:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            {
            // InternalSQLParser.g:15841:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            // InternalSQLParser.g:15842:2: ( rule__SQLCaseWhens__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:15843:2: ( rule__SQLCaseWhens__Group_1__0 )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==WHEN) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalSQLParser.g:15843:3: rule__SQLCaseWhens__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCaseWhens__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0"
    // InternalSQLParser.g:15852:1: rule__SQLCaseWhens__Group_1__0 : rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 ;
    public final void rule__SQLCaseWhens__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15856:1: ( rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 )
            // InternalSQLParser.g:15857:2: rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1
            {
            pushFollow(FOLLOW_90);
            rule__SQLCaseWhens__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0__Impl"
    // InternalSQLParser.g:15864:1: rule__SQLCaseWhens__Group_1__0__Impl : ( () ) ;
    public final void rule__SQLCaseWhens__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15868:1: ( ( () ) )
            // InternalSQLParser.g:15869:1: ( () )
            {
            // InternalSQLParser.g:15869:1: ( () )
            // InternalSQLParser.g:15870:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:15871:2: ()
            // InternalSQLParser.g:15871:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1"
    // InternalSQLParser.g:15879:1: rule__SQLCaseWhens__Group_1__1 : rule__SQLCaseWhens__Group_1__1__Impl ;
    public final void rule__SQLCaseWhens__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15883:1: ( rule__SQLCaseWhens__Group_1__1__Impl )
            // InternalSQLParser.g:15884:2: rule__SQLCaseWhens__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1__Impl"
    // InternalSQLParser.g:15890:1: rule__SQLCaseWhens__Group_1__1__Impl : ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__SQLCaseWhens__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15894:1: ( ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) )
            // InternalSQLParser.g:15895:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            {
            // InternalSQLParser.g:15895:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            // InternalSQLParser.g:15896:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            {
            // InternalSQLParser.g:15896:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) )
            // InternalSQLParser.g:15897:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:15898:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            // InternalSQLParser.g:15898:4: rule__SQLCaseWhens__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_92);
            rule__SQLCaseWhens__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSQLParser.g:15901:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            // InternalSQLParser.g:15902:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:15903:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==WHEN) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalSQLParser.g:15903:4: rule__SQLCaseWhens__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_92);
            	    rule__SQLCaseWhens__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__0"
    // InternalSQLParser.g:15913:1: rule__SqlCaseWhen__Group__0 : rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 ;
    public final void rule__SqlCaseWhen__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15917:1: ( rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 )
            // InternalSQLParser.g:15918:2: rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__SqlCaseWhen__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0"


    // $ANTLR start "rule__SqlCaseWhen__Group__0__Impl"
    // InternalSQLParser.g:15925:1: rule__SqlCaseWhen__Group__0__Impl : ( WHEN ) ;
    public final void rule__SqlCaseWhen__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15929:1: ( ( WHEN ) )
            // InternalSQLParser.g:15930:1: ( WHEN )
            {
            // InternalSQLParser.g:15930:1: ( WHEN )
            // InternalSQLParser.g:15931:2: WHEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }
            match(input,WHEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__1"
    // InternalSQLParser.g:15940:1: rule__SqlCaseWhen__Group__1 : rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 ;
    public final void rule__SqlCaseWhen__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15944:1: ( rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 )
            // InternalSQLParser.g:15945:2: rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2
            {
            pushFollow(FOLLOW_93);
            rule__SqlCaseWhen__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1"


    // $ANTLR start "rule__SqlCaseWhen__Group__1__Impl"
    // InternalSQLParser.g:15952:1: rule__SqlCaseWhen__Group__1__Impl : ( ( rule__SqlCaseWhen__Alternatives_1 ) ) ;
    public final void rule__SqlCaseWhen__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15956:1: ( ( ( rule__SqlCaseWhen__Alternatives_1 ) ) )
            // InternalSQLParser.g:15957:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            {
            // InternalSQLParser.g:15957:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            // InternalSQLParser.g:15958:2: ( rule__SqlCaseWhen__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:15959:2: ( rule__SqlCaseWhen__Alternatives_1 )
            // InternalSQLParser.g:15959:3: rule__SqlCaseWhen__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__2"
    // InternalSQLParser.g:15967:1: rule__SqlCaseWhen__Group__2 : rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 ;
    public final void rule__SqlCaseWhen__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15971:1: ( rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 )
            // InternalSQLParser.g:15972:2: rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__SqlCaseWhen__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2"


    // $ANTLR start "rule__SqlCaseWhen__Group__2__Impl"
    // InternalSQLParser.g:15979:1: rule__SqlCaseWhen__Group__2__Impl : ( THEN ) ;
    public final void rule__SqlCaseWhen__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15983:1: ( ( THEN ) )
            // InternalSQLParser.g:15984:1: ( THEN )
            {
            // InternalSQLParser.g:15984:1: ( THEN )
            // InternalSQLParser.g:15985:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__3"
    // InternalSQLParser.g:15994:1: rule__SqlCaseWhen__Group__3 : rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 ;
    public final void rule__SqlCaseWhen__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15998:1: ( rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 )
            // InternalSQLParser.g:15999:2: rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4
            {
            pushFollow(FOLLOW_94);
            rule__SqlCaseWhen__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3"


    // $ANTLR start "rule__SqlCaseWhen__Group__3__Impl"
    // InternalSQLParser.g:16006:1: rule__SqlCaseWhen__Group__3__Impl : ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) ;
    public final void rule__SqlCaseWhen__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16010:1: ( ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) )
            // InternalSQLParser.g:16011:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            {
            // InternalSQLParser.g:16011:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            // InternalSQLParser.g:16012:2: ( rule__SqlCaseWhen__TexpAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }
            // InternalSQLParser.g:16013:2: ( rule__SqlCaseWhen__TexpAssignment_3 )
            // InternalSQLParser.g:16013:3: rule__SqlCaseWhen__TexpAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__TexpAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__4"
    // InternalSQLParser.g:16021:1: rule__SqlCaseWhen__Group__4 : rule__SqlCaseWhen__Group__4__Impl ;
    public final void rule__SqlCaseWhen__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16025:1: ( rule__SqlCaseWhen__Group__4__Impl )
            // InternalSQLParser.g:16026:2: rule__SqlCaseWhen__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4"


    // $ANTLR start "rule__SqlCaseWhen__Group__4__Impl"
    // InternalSQLParser.g:16032:1: rule__SqlCaseWhen__Group__4__Impl : ( ( rule__SqlCaseWhen__Group_4__0 )? ) ;
    public final void rule__SqlCaseWhen__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16036:1: ( ( ( rule__SqlCaseWhen__Group_4__0 )? ) )
            // InternalSQLParser.g:16037:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            {
            // InternalSQLParser.g:16037:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            // InternalSQLParser.g:16038:2: ( rule__SqlCaseWhen__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }
            // InternalSQLParser.g:16039:2: ( rule__SqlCaseWhen__Group_4__0 )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==ELSE) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalSQLParser.g:16039:3: rule__SqlCaseWhen__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0"
    // InternalSQLParser.g:16048:1: rule__SqlCaseWhen__Group_4__0 : rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 ;
    public final void rule__SqlCaseWhen__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16052:1: ( rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 )
            // InternalSQLParser.g:16053:2: rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1
            {
            pushFollow(FOLLOW_55);
            rule__SqlCaseWhen__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0__Impl"
    // InternalSQLParser.g:16060:1: rule__SqlCaseWhen__Group_4__0__Impl : ( ELSE ) ;
    public final void rule__SqlCaseWhen__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16064:1: ( ( ELSE ) )
            // InternalSQLParser.g:16065:1: ( ELSE )
            {
            // InternalSQLParser.g:16065:1: ( ELSE )
            // InternalSQLParser.g:16066:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1"
    // InternalSQLParser.g:16075:1: rule__SqlCaseWhen__Group_4__1 : rule__SqlCaseWhen__Group_4__1__Impl ;
    public final void rule__SqlCaseWhen__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16079:1: ( rule__SqlCaseWhen__Group_4__1__Impl )
            // InternalSQLParser.g:16080:2: rule__SqlCaseWhen__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1__Impl"
    // InternalSQLParser.g:16086:1: rule__SqlCaseWhen__Group_4__1__Impl : ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) ;
    public final void rule__SqlCaseWhen__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16090:1: ( ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) )
            // InternalSQLParser.g:16091:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            {
            // InternalSQLParser.g:16091:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            // InternalSQLParser.g:16092:2: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }
            // InternalSQLParser.g:16093:2: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            // InternalSQLParser.g:16093:3: rule__SqlCaseWhen__EexpAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__EexpAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1__Impl"


    // $ANTLR start "rule__JoinType__Group__0"
    // InternalSQLParser.g:16102:1: rule__JoinType__Group__0 : rule__JoinType__Group__0__Impl rule__JoinType__Group__1 ;
    public final void rule__JoinType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16106:1: ( rule__JoinType__Group__0__Impl rule__JoinType__Group__1 )
            // InternalSQLParser.g:16107:2: rule__JoinType__Group__0__Impl rule__JoinType__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__JoinType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0"


    // $ANTLR start "rule__JoinType__Group__0__Impl"
    // InternalSQLParser.g:16114:1: rule__JoinType__Group__0__Impl : ( ( NATURAL )? ) ;
    public final void rule__JoinType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16118:1: ( ( ( NATURAL )? ) )
            // InternalSQLParser.g:16119:1: ( ( NATURAL )? )
            {
            // InternalSQLParser.g:16119:1: ( ( NATURAL )? )
            // InternalSQLParser.g:16120:2: ( NATURAL )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }
            // InternalSQLParser.g:16121:2: ( NATURAL )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==NATURAL) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSQLParser.g:16121:3: NATURAL
                    {
                    match(input,NATURAL,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0__Impl"


    // $ANTLR start "rule__JoinType__Group__1"
    // InternalSQLParser.g:16129:1: rule__JoinType__Group__1 : rule__JoinType__Group__1__Impl rule__JoinType__Group__2 ;
    public final void rule__JoinType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16133:1: ( rule__JoinType__Group__1__Impl rule__JoinType__Group__2 )
            // InternalSQLParser.g:16134:2: rule__JoinType__Group__1__Impl rule__JoinType__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__JoinType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1"


    // $ANTLR start "rule__JoinType__Group__1__Impl"
    // InternalSQLParser.g:16141:1: rule__JoinType__Group__1__Impl : ( ( rule__JoinType__Alternatives_1 )? ) ;
    public final void rule__JoinType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16145:1: ( ( ( rule__JoinType__Alternatives_1 )? ) )
            // InternalSQLParser.g:16146:1: ( ( rule__JoinType__Alternatives_1 )? )
            {
            // InternalSQLParser.g:16146:1: ( ( rule__JoinType__Alternatives_1 )? )
            // InternalSQLParser.g:16147:2: ( rule__JoinType__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:16148:2: ( rule__JoinType__Alternatives_1 )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==STRAIGHT_JOIN||LA149_0==CROSS||LA149_0==INNER||LA149_0==RIGHT||LA149_0==FULL||LA149_0==LEFT) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSQLParser.g:16148:3: rule__JoinType__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1__Impl"


    // $ANTLR start "rule__JoinType__Group__2"
    // InternalSQLParser.g:16156:1: rule__JoinType__Group__2 : rule__JoinType__Group__2__Impl ;
    public final void rule__JoinType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16160:1: ( rule__JoinType__Group__2__Impl )
            // InternalSQLParser.g:16161:2: rule__JoinType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2"


    // $ANTLR start "rule__JoinType__Group__2__Impl"
    // InternalSQLParser.g:16167:1: rule__JoinType__Group__2__Impl : ( JOIN ) ;
    public final void rule__JoinType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16171:1: ( ( JOIN ) )
            // InternalSQLParser.g:16172:1: ( JOIN )
            {
            // InternalSQLParser.g:16172:1: ( JOIN )
            // InternalSQLParser.g:16173:2: JOIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }
            match(input,JOIN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__0"
    // InternalSQLParser.g:16183:1: rule__JoinType__Group_1_1__0 : rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 ;
    public final void rule__JoinType__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16187:1: ( rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 )
            // InternalSQLParser.g:16188:2: rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1
            {
            pushFollow(FOLLOW_95);
            rule__JoinType__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0"


    // $ANTLR start "rule__JoinType__Group_1_1__0__Impl"
    // InternalSQLParser.g:16195:1: rule__JoinType__Group_1_1__0__Impl : ( ( rule__JoinType__Alternatives_1_1_0 ) ) ;
    public final void rule__JoinType__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16199:1: ( ( ( rule__JoinType__Alternatives_1_1_0 ) ) )
            // InternalSQLParser.g:16200:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            {
            // InternalSQLParser.g:16200:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            // InternalSQLParser.g:16201:2: ( rule__JoinType__Alternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }
            // InternalSQLParser.g:16202:2: ( rule__JoinType__Alternatives_1_1_0 )
            // InternalSQLParser.g:16202:3: rule__JoinType__Alternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Alternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__1"
    // InternalSQLParser.g:16210:1: rule__JoinType__Group_1_1__1 : rule__JoinType__Group_1_1__1__Impl ;
    public final void rule__JoinType__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16214:1: ( rule__JoinType__Group_1_1__1__Impl )
            // InternalSQLParser.g:16215:2: rule__JoinType__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1"


    // $ANTLR start "rule__JoinType__Group_1_1__1__Impl"
    // InternalSQLParser.g:16221:1: rule__JoinType__Group_1_1__1__Impl : ( ( OUTER )? ) ;
    public final void rule__JoinType__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16225:1: ( ( ( OUTER )? ) )
            // InternalSQLParser.g:16226:1: ( ( OUTER )? )
            {
            // InternalSQLParser.g:16226:1: ( ( OUTER )? )
            // InternalSQLParser.g:16227:2: ( OUTER )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }
            // InternalSQLParser.g:16228:2: ( OUTER )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==OUTER) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalSQLParser.g:16228:3: OUTER
                    {
                    match(input,OUTER,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1__Impl"


    // $ANTLR start "rule__FNAME__Group__0"
    // InternalSQLParser.g:16237:1: rule__FNAME__Group__0 : rule__FNAME__Group__0__Impl rule__FNAME__Group__1 ;
    public final void rule__FNAME__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16241:1: ( rule__FNAME__Group__0__Impl rule__FNAME__Group__1 )
            // InternalSQLParser.g:16242:2: rule__FNAME__Group__0__Impl rule__FNAME__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FNAME__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0"


    // $ANTLR start "rule__FNAME__Group__0__Impl"
    // InternalSQLParser.g:16249:1: rule__FNAME__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FNAME__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16253:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:16254:1: ( RULE_ID )
            {
            // InternalSQLParser.g:16254:1: ( RULE_ID )
            // InternalSQLParser.g:16255:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0__Impl"


    // $ANTLR start "rule__FNAME__Group__1"
    // InternalSQLParser.g:16264:1: rule__FNAME__Group__1 : rule__FNAME__Group__1__Impl ;
    public final void rule__FNAME__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16268:1: ( rule__FNAME__Group__1__Impl )
            // InternalSQLParser.g:16269:2: rule__FNAME__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1"


    // $ANTLR start "rule__FNAME__Group__1__Impl"
    // InternalSQLParser.g:16275:1: rule__FNAME__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FNAME__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16279:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:16280:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:16280:1: ( LeftParenthesis )
            // InternalSQLParser.g:16281:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1__Impl"


    // $ANTLR start "rule__Model__WqAssignment_1"
    // InternalSQLParser.g:16291:1: rule__Model__WqAssignment_1 : ( ruleWithQuery ) ;
    public final void rule__Model__WqAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16295:1: ( ( ruleWithQuery ) )
            // InternalSQLParser.g:16296:2: ( ruleWithQuery )
            {
            // InternalSQLParser.g:16296:2: ( ruleWithQuery )
            // InternalSQLParser.g:16297:3: ruleWithQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getWqWithQueryParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getWqWithQueryParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__WqAssignment_1"


    // $ANTLR start "rule__Model__QueryAssignment_2"
    // InternalSQLParser.g:16306:1: rule__Model__QueryAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__Model__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16310:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:16311:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:16311:2: ( ruleSelectQuery )
            // InternalSQLParser.g:16312:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__QueryAssignment_2"


    // $ANTLR start "rule__WithQuery__WAssignment_0"
    // InternalSQLParser.g:16321:1: rule__WithQuery__WAssignment_0 : ( ( WITH ) ) ;
    public final void rule__WithQuery__WAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16325:1: ( ( ( WITH ) ) )
            // InternalSQLParser.g:16326:2: ( ( WITH ) )
            {
            // InternalSQLParser.g:16326:2: ( ( WITH ) )
            // InternalSQLParser.g:16327:3: ( WITH )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            // InternalSQLParser.g:16328:3: ( WITH )
            // InternalSQLParser.g:16329:4: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WAssignment_0"


    // $ANTLR start "rule__WithQuery__WnameAssignment_1"
    // InternalSQLParser.g:16340:1: rule__WithQuery__WnameAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__WnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16344:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:16345:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:16345:2: ( ruleDbObjectName )
            // InternalSQLParser.g:16346:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WnameAssignment_1"


    // $ANTLR start "rule__WithQuery__WithColsAssignment_2"
    // InternalSQLParser.g:16355:1: rule__WithQuery__WithColsAssignment_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__WithColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16359:1: ( ( ruleWithColumns ) )
            // InternalSQLParser.g:16360:2: ( ruleWithColumns )
            {
            // InternalSQLParser.g:16360:2: ( ruleWithColumns )
            // InternalSQLParser.g:16361:3: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WithColsAssignment_2"


    // $ANTLR start "rule__WithQuery__QueryAssignment_5"
    // InternalSQLParser.g:16370:1: rule__WithQuery__QueryAssignment_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__QueryAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16374:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:16375:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:16375:2: ( ruleSelectQuery )
            // InternalSQLParser.g:16376:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__QueryAssignment_5"


    // $ANTLR start "rule__WithQuery__AdditionalWnameAssignment_7_1"
    // InternalSQLParser.g:16385:1: rule__WithQuery__AdditionalWnameAssignment_7_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__AdditionalWnameAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16389:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:16390:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:16390:2: ( ruleDbObjectName )
            // InternalSQLParser.g:16391:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWnameAssignment_7_1"


    // $ANTLR start "rule__WithQuery__AdditionalWithColsAssignment_7_2"
    // InternalSQLParser.g:16400:1: rule__WithQuery__AdditionalWithColsAssignment_7_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__AdditionalWithColsAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16404:1: ( ( ruleWithColumns ) )
            // InternalSQLParser.g:16405:2: ( ruleWithColumns )
            {
            // InternalSQLParser.g:16405:2: ( ruleWithColumns )
            // InternalSQLParser.g:16406:3: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWithColsAssignment_7_2"


    // $ANTLR start "rule__WithQuery__AdditionalQueriesAssignment_7_5"
    // InternalSQLParser.g:16415:1: rule__WithQuery__AdditionalQueriesAssignment_7_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__AdditionalQueriesAssignment_7_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16419:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:16420:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:16420:2: ( ruleSelectQuery )
            // InternalSQLParser.g:16421:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalQueriesAssignment_7_5"


    // $ANTLR start "rule__FetchFirst__FetchFirstAssignment_0"
    // InternalSQLParser.g:16430:1: rule__FetchFirst__FetchFirstAssignment_0 : ( ruleUnsignedValue ) ;
    public final void rule__FetchFirst__FetchFirstAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16434:1: ( ( ruleUnsignedValue ) )
            // InternalSQLParser.g:16435:2: ( ruleUnsignedValue )
            {
            // InternalSQLParser.g:16435:2: ( ruleUnsignedValue )
            // InternalSQLParser.g:16436:3: ruleUnsignedValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__FetchFirstAssignment_0"


    // $ANTLR start "rule__FetchFirst__RowAssignment_1"
    // InternalSQLParser.g:16445:1: rule__FetchFirst__RowAssignment_1 : ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) ;
    public final void rule__FetchFirst__RowAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16449:1: ( ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) )
            // InternalSQLParser.g:16450:2: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:16450:2: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            // InternalSQLParser.g:16451:3: ( rule__FetchFirst__RowAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }
            // InternalSQLParser.g:16452:3: ( rule__FetchFirst__RowAlternatives_1_0 )
            // InternalSQLParser.g:16452:4: rule__FetchFirst__RowAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAssignment_1"


    // $ANTLR start "rule__Offset__OffsetAssignment"
    // InternalSQLParser.g:16460:1: rule__Offset__OffsetAssignment : ( RULE_INT ) ;
    public final void rule__Offset__OffsetAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16464:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:16465:2: ( RULE_INT )
            {
            // InternalSQLParser.g:16465:2: ( RULE_INT )
            // InternalSQLParser.g:16466:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__OffsetAssignment"


    // $ANTLR start "rule__Limit__L1Assignment_1_0"
    // InternalSQLParser.g:16475:1: rule__Limit__L1Assignment_1_0 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L1Assignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16479:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:16480:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:16480:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:16481:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L1Assignment_1_0"


    // $ANTLR start "rule__Limit__L2Assignment_1_1_1"
    // InternalSQLParser.g:16490:1: rule__Limit__L2Assignment_1_1_1 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L2Assignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16494:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:16495:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:16495:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:16496:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L2Assignment_1_1_1"


    // $ANTLR start "rule__SelectQuery__OpAssignment_1"
    // InternalSQLParser.g:16505:1: rule__SelectQuery__OpAssignment_1 : ( ruleSelectSubSet ) ;
    public final void rule__SelectQuery__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16509:1: ( ( ruleSelectSubSet ) )
            // InternalSQLParser.g:16510:2: ( ruleSelectSubSet )
            {
            // InternalSQLParser.g:16510:2: ( ruleSelectSubSet )
            // InternalSQLParser.g:16511:3: ruleSelectSubSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__OpAssignment_1"


    // $ANTLR start "rule__SelectSubSet__OpAssignment_0"
    // InternalSQLParser.g:16520:1: rule__SelectSubSet__OpAssignment_0 : ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) ;
    public final void rule__SelectSubSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16524:1: ( ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) )
            // InternalSQLParser.g:16525:2: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            {
            // InternalSQLParser.g:16525:2: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            // InternalSQLParser.g:16526:3: ( rule__SelectSubSet__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }
            // InternalSQLParser.g:16527:3: ( rule__SelectSubSet__OpAlternatives_0_0 )
            // InternalSQLParser.g:16527:4: rule__SelectSubSet__OpAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAssignment_0"


    // $ANTLR start "rule__SelectSubSet__AllAssignment_1"
    // InternalSQLParser.g:16535:1: rule__SelectSubSet__AllAssignment_1 : ( ( ALL ) ) ;
    public final void rule__SelectSubSet__AllAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16539:1: ( ( ( ALL ) ) )
            // InternalSQLParser.g:16540:2: ( ( ALL ) )
            {
            // InternalSQLParser.g:16540:2: ( ( ALL ) )
            // InternalSQLParser.g:16541:3: ( ALL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            // InternalSQLParser.g:16542:3: ( ALL )
            // InternalSQLParser.g:16543:4: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__AllAssignment_1"


    // $ANTLR start "rule__SelectSubSet__QueryAssignment_2"
    // InternalSQLParser.g:16554:1: rule__SelectSubSet__QueryAssignment_2 : ( ruleSelect ) ;
    public final void rule__SelectSubSet__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16558:1: ( ( ruleSelect ) )
            // InternalSQLParser.g:16559:2: ( ruleSelect )
            {
            // InternalSQLParser.g:16559:2: ( ruleSelect )
            // InternalSQLParser.g:16560:3: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__QueryAssignment_2"


    // $ANTLR start "rule__Select__SelectAssignment_0"
    // InternalSQLParser.g:16569:1: rule__Select__SelectAssignment_0 : ( ( SELECT ) ) ;
    public final void rule__Select__SelectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16573:1: ( ( ( SELECT ) ) )
            // InternalSQLParser.g:16574:2: ( ( SELECT ) )
            {
            // InternalSQLParser.g:16574:2: ( ( SELECT ) )
            // InternalSQLParser.g:16575:3: ( SELECT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            // InternalSQLParser.g:16576:3: ( SELECT )
            // InternalSQLParser.g:16577:4: SELECT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            match(input,SELECT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__SelectAssignment_0"


    // $ANTLR start "rule__Select__ColsAssignment_3"
    // InternalSQLParser.g:16588:1: rule__Select__ColsAssignment_3 : ( ruleColumns ) ;
    public final void rule__Select__ColsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16592:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:16593:2: ( ruleColumns )
            {
            // InternalSQLParser.g:16593:2: ( ruleColumns )
            // InternalSQLParser.g:16594:3: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__ColsAssignment_3"


    // $ANTLR start "rule__Select__TblAssignment_5"
    // InternalSQLParser.g:16603:1: rule__Select__TblAssignment_5 : ( ruleTables ) ;
    public final void rule__Select__TblAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16607:1: ( ( ruleTables ) )
            // InternalSQLParser.g:16608:2: ( ruleTables )
            {
            // InternalSQLParser.g:16608:2: ( ruleTables )
            // InternalSQLParser.g:16609:3: ruleTables
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__TblAssignment_5"


    // $ANTLR start "rule__Select__WhereExpressionAssignment_6_1"
    // InternalSQLParser.g:16618:1: rule__Select__WhereExpressionAssignment_6_1 : ( ruleFullExpression ) ;
    public final void rule__Select__WhereExpressionAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16622:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:16623:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:16623:2: ( ruleFullExpression )
            // InternalSQLParser.g:16624:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__WhereExpressionAssignment_6_1"


    // $ANTLR start "rule__Select__GroupByEntryAssignment_7_2"
    // InternalSQLParser.g:16633:1: rule__Select__GroupByEntryAssignment_7_2 : ( ruleGroupByColumns ) ;
    public final void rule__Select__GroupByEntryAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16637:1: ( ( ruleGroupByColumns ) )
            // InternalSQLParser.g:16638:2: ( ruleGroupByColumns )
            {
            // InternalSQLParser.g:16638:2: ( ruleGroupByColumns )
            // InternalSQLParser.g:16639:3: ruleGroupByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__GroupByEntryAssignment_7_2"


    // $ANTLR start "rule__Select__HavingEntryAssignment_8_1"
    // InternalSQLParser.g:16648:1: rule__Select__HavingEntryAssignment_8_1 : ( ruleFullExpression ) ;
    public final void rule__Select__HavingEntryAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16652:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:16653:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:16653:2: ( ruleFullExpression )
            // InternalSQLParser.g:16654:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__HavingEntryAssignment_8_1"


    // $ANTLR start "rule__Select__OrderByEntryAssignment_9_2"
    // InternalSQLParser.g:16663:1: rule__Select__OrderByEntryAssignment_9_2 : ( ruleOrderByColumns ) ;
    public final void rule__Select__OrderByEntryAssignment_9_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16667:1: ( ( ruleOrderByColumns ) )
            // InternalSQLParser.g:16668:2: ( ruleOrderByColumns )
            {
            // InternalSQLParser.g:16668:2: ( ruleOrderByColumns )
            // InternalSQLParser.g:16669:3: ruleOrderByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OrderByEntryAssignment_9_2"


    // $ANTLR start "rule__Select__LimAssignment_10_1"
    // InternalSQLParser.g:16678:1: rule__Select__LimAssignment_10_1 : ( ruleLimit ) ;
    public final void rule__Select__LimAssignment_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16682:1: ( ( ruleLimit ) )
            // InternalSQLParser.g:16683:2: ( ruleLimit )
            {
            // InternalSQLParser.g:16683:2: ( ruleLimit )
            // InternalSQLParser.g:16684:3: ruleLimit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__LimAssignment_10_1"


    // $ANTLR start "rule__Select__OffsetAssignment_11_1"
    // InternalSQLParser.g:16693:1: rule__Select__OffsetAssignment_11_1 : ( ruleOffset ) ;
    public final void rule__Select__OffsetAssignment_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16697:1: ( ( ruleOffset ) )
            // InternalSQLParser.g:16698:2: ( ruleOffset )
            {
            // InternalSQLParser.g:16698:2: ( ruleOffset )
            // InternalSQLParser.g:16699:3: ruleOffset
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OffsetAssignment_11_1"


    // $ANTLR start "rule__Select__FetchFirstAssignment_12_2"
    // InternalSQLParser.g:16708:1: rule__Select__FetchFirstAssignment_12_2 : ( ruleFetchFirst ) ;
    public final void rule__Select__FetchFirstAssignment_12_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16712:1: ( ( ruleFetchFirst ) )
            // InternalSQLParser.g:16713:2: ( ruleFetchFirst )
            {
            // InternalSQLParser.g:16713:2: ( ruleFetchFirst )
            // InternalSQLParser.g:16714:3: ruleFetchFirst
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__FetchFirstAssignment_12_2"


    // $ANTLR start "rule__Columns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:16723:1: rule__Columns__EntriesAssignment_1_1_1 : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16727:1: ( ( ruleColumnOrAlias ) )
            // InternalSQLParser.g:16728:2: ( ruleColumnOrAlias )
            {
            // InternalSQLParser.g:16728:2: ( ruleColumnOrAlias )
            // InternalSQLParser.g:16729:3: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnOrAlias__CeAssignment_0_0"
    // InternalSQLParser.g:16738:1: rule__ColumnOrAlias__CeAssignment_0_0 : ( ruleOperandGroup ) ;
    public final void rule__ColumnOrAlias__CeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16742:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:16743:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:16743:2: ( ruleOperandGroup )
            // InternalSQLParser.g:16744:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__CeAssignment_0_0"


    // $ANTLR start "rule__ColumnOrAlias__AliasAssignment_0_1"
    // InternalSQLParser.g:16753:1: rule__ColumnOrAlias__AliasAssignment_0_1 : ( ( AS ) ) ;
    public final void rule__ColumnOrAlias__AliasAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16757:1: ( ( ( AS ) ) )
            // InternalSQLParser.g:16758:2: ( ( AS ) )
            {
            // InternalSQLParser.g:16758:2: ( ( AS ) )
            // InternalSQLParser.g:16759:3: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            // InternalSQLParser.g:16760:3: ( AS )
            // InternalSQLParser.g:16761:4: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AliasAssignment_0_1"


    // $ANTLR start "rule__ColumnOrAlias__ColAliasAssignment_0_2"
    // InternalSQLParser.g:16772:1: rule__ColumnOrAlias__ColAliasAssignment_0_2 : ( ruleDbObjectName ) ;
    public final void rule__ColumnOrAlias__ColAliasAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16776:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:16777:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:16777:2: ( ruleDbObjectName )
            // InternalSQLParser.g:16778:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__ColAliasAssignment_0_2"


    // $ANTLR start "rule__ColumnOrAlias__AllColsAssignment_1"
    // InternalSQLParser.g:16787:1: rule__ColumnOrAlias__AllColsAssignment_1 : ( RULE_STAR ) ;
    public final void rule__ColumnOrAlias__AllColsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16791:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:16792:2: ( RULE_STAR )
            {
            // InternalSQLParser.g:16792:2: ( RULE_STAR )
            // InternalSQLParser.g:16793:3: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AllColsAssignment_1"


    // $ANTLR start "rule__ColumnOrAlias__DbAllColsAssignment_2"
    // InternalSQLParser.g:16802:1: rule__ColumnOrAlias__DbAllColsAssignment_2 : ( ruleDbObjectNameAll ) ;
    public final void rule__ColumnOrAlias__DbAllColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16806:1: ( ( ruleDbObjectNameAll ) )
            // InternalSQLParser.g:16807:2: ( ruleDbObjectNameAll )
            {
            // InternalSQLParser.g:16807:2: ( ruleDbObjectNameAll )
            // InternalSQLParser.g:16808:3: ruleDbObjectNameAll
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__DbAllColsAssignment_2"


    // $ANTLR start "rule__ColumnFull__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:16817:1: rule__ColumnFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16821:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:16822:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:16822:2: ( ruleDbObjectName )
            // InternalSQLParser.g:16823:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Tables__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:16832:1: rule__Tables__EntriesAssignment_1_1_1 : ( ruleFromTable ) ;
    public final void rule__Tables__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16836:1: ( ( ruleFromTable ) )
            // InternalSQLParser.g:16837:2: ( ruleFromTable )
            {
            // InternalSQLParser.g:16837:2: ( ruleFromTable )
            // InternalSQLParser.g:16838:3: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__FromTable__TableAssignment_0"
    // InternalSQLParser.g:16847:1: rule__FromTable__TableAssignment_0 : ( ruleTableOrAlias ) ;
    public final void rule__FromTable__TableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16851:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:16852:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:16852:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:16853:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__TableAssignment_0"


    // $ANTLR start "rule__FromTable__FjoinAssignment_1"
    // InternalSQLParser.g:16862:1: rule__FromTable__FjoinAssignment_1 : ( ruleFromTableJoin ) ;
    public final void rule__FromTable__FjoinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16866:1: ( ( ruleFromTableJoin ) )
            // InternalSQLParser.g:16867:2: ( ruleFromTableJoin )
            {
            // InternalSQLParser.g:16867:2: ( ruleFromTableJoin )
            // InternalSQLParser.g:16868:3: ruleFromTableJoin
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__FjoinAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinAssignment_0"
    // InternalSQLParser.g:16877:1: rule__FromTableJoin__JoinAssignment_0 : ( ruleJoinType ) ;
    public final void rule__FromTableJoin__JoinAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16881:1: ( ( ruleJoinType ) )
            // InternalSQLParser.g:16882:2: ( ruleJoinType )
            {
            // InternalSQLParser.g:16882:2: ( ruleJoinType )
            // InternalSQLParser.g:16883:3: ruleJoinType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinAssignment_0"


    // $ANTLR start "rule__FromTableJoin__OnTableAssignment_1"
    // InternalSQLParser.g:16892:1: rule__FromTableJoin__OnTableAssignment_1 : ( ruleTableOrAlias ) ;
    public final void rule__FromTableJoin__OnTableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16896:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:16897:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:16897:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:16898:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__OnTableAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinExprAssignment_2_0_1"
    // InternalSQLParser.g:16907:1: rule__FromTableJoin__JoinExprAssignment_2_0_1 : ( ruleFullExpression ) ;
    public final void rule__FromTableJoin__JoinExprAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16911:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:16912:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:16912:2: ( ruleFullExpression )
            // InternalSQLParser.g:16913:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinExprAssignment_2_0_1"


    // $ANTLR start "rule__FromTableJoin__JoinCondAssignment_2_1"
    // InternalSQLParser.g:16922:1: rule__FromTableJoin__JoinCondAssignment_2_1 : ( ruleJoinCondition ) ;
    public final void rule__FromTableJoin__JoinCondAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16926:1: ( ( ruleJoinCondition ) )
            // InternalSQLParser.g:16927:2: ( ruleJoinCondition )
            {
            // InternalSQLParser.g:16927:2: ( ruleJoinCondition )
            // InternalSQLParser.g:16928:3: ruleJoinCondition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinCondAssignment_2_1"


    // $ANTLR start "rule__JoinCondition__UseColsAssignment_2"
    // InternalSQLParser.g:16937:1: rule__JoinCondition__UseColsAssignment_2 : ( ruleUsingCols ) ;
    public final void rule__JoinCondition__UseColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16941:1: ( ( ruleUsingCols ) )
            // InternalSQLParser.g:16942:2: ( ruleUsingCols )
            {
            // InternalSQLParser.g:16942:2: ( ruleUsingCols )
            // InternalSQLParser.g:16943:3: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__UseColsAssignment_2"


    // $ANTLR start "rule__UsingCols__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:16952:1: rule__UsingCols__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16956:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:16957:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:16957:2: ( ruleDbObjectName )
            // InternalSQLParser.g:16958:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableOrAlias__TfullAssignment_0_0"
    // InternalSQLParser.g:16967:1: rule__TableOrAlias__TfullAssignment_0_0 : ( ruleTableFull ) ;
    public final void rule__TableOrAlias__TfullAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16971:1: ( ( ruleTableFull ) )
            // InternalSQLParser.g:16972:2: ( ruleTableFull )
            {
            // InternalSQLParser.g:16972:2: ( ruleTableFull )
            // InternalSQLParser.g:16973:3: ruleTableFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TfullAssignment_0_0"


    // $ANTLR start "rule__TableOrAlias__SqAssignment_0_1"
    // InternalSQLParser.g:16982:1: rule__TableOrAlias__SqAssignment_0_1 : ( ruleSubQueryOperand ) ;
    public final void rule__TableOrAlias__SqAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16986:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:16987:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:16987:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:16988:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__SqAssignment_0_1"


    // $ANTLR start "rule__TableOrAlias__ValuesAssignment_0_2"
    // InternalSQLParser.g:16997:1: rule__TableOrAlias__ValuesAssignment_0_2 : ( ruleFromValues ) ;
    public final void rule__TableOrAlias__ValuesAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17001:1: ( ( ruleFromValues ) )
            // InternalSQLParser.g:17002:2: ( ruleFromValues )
            {
            // InternalSQLParser.g:17002:2: ( ruleFromValues )
            // InternalSQLParser.g:17003:3: ruleFromValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__ValuesAssignment_0_2"


    // $ANTLR start "rule__TableOrAlias__PivotAssignment_1_0"
    // InternalSQLParser.g:17012:1: rule__TableOrAlias__PivotAssignment_1_0 : ( rulePivotTable ) ;
    public final void rule__TableOrAlias__PivotAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17016:1: ( ( rulePivotTable ) )
            // InternalSQLParser.g:17017:2: ( rulePivotTable )
            {
            // InternalSQLParser.g:17017:2: ( rulePivotTable )
            // InternalSQLParser.g:17018:3: rulePivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__PivotAssignment_1_0"


    // $ANTLR start "rule__TableOrAlias__UnpivotAssignment_1_1"
    // InternalSQLParser.g:17027:1: rule__TableOrAlias__UnpivotAssignment_1_1 : ( ruleUnpivotTable ) ;
    public final void rule__TableOrAlias__UnpivotAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17031:1: ( ( ruleUnpivotTable ) )
            // InternalSQLParser.g:17032:2: ( ruleUnpivotTable )
            {
            // InternalSQLParser.g:17032:2: ( ruleUnpivotTable )
            // InternalSQLParser.g:17033:3: ruleUnpivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__UnpivotAssignment_1_1"


    // $ANTLR start "rule__TableOrAlias__AliasAssignment_2"
    // InternalSQLParser.g:17042:1: rule__TableOrAlias__AliasAssignment_2 : ( ( AS ) ) ;
    public final void rule__TableOrAlias__AliasAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17046:1: ( ( ( AS ) ) )
            // InternalSQLParser.g:17047:2: ( ( AS ) )
            {
            // InternalSQLParser.g:17047:2: ( ( AS ) )
            // InternalSQLParser.g:17048:3: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            // InternalSQLParser.g:17049:3: ( AS )
            // InternalSQLParser.g:17050:4: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__AliasAssignment_2"


    // $ANTLR start "rule__TableOrAlias__TblAliasAssignment_3"
    // InternalSQLParser.g:17061:1: rule__TableOrAlias__TblAliasAssignment_3 : ( ruleDbObjectName ) ;
    public final void rule__TableOrAlias__TblAliasAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17065:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:17066:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:17066:2: ( ruleDbObjectName )
            // InternalSQLParser.g:17067:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TblAliasAssignment_3"


    // $ANTLR start "rule__FromValues__ValuesAssignment_0"
    // InternalSQLParser.g:17076:1: rule__FromValues__ValuesAssignment_0 : ( ruleValues ) ;
    public final void rule__FromValues__ValuesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17080:1: ( ( ruleValues ) )
            // InternalSQLParser.g:17081:2: ( ruleValues )
            {
            // InternalSQLParser.g:17081:2: ( ruleValues )
            // InternalSQLParser.g:17082:3: ruleValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__ValuesAssignment_0"


    // $ANTLR start "rule__FromValues__CAssignment_1"
    // InternalSQLParser.g:17091:1: rule__FromValues__CAssignment_1 : ( ruleFromValuesColumns ) ;
    public final void rule__FromValues__CAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17095:1: ( ( ruleFromValuesColumns ) )
            // InternalSQLParser.g:17096:2: ( ruleFromValuesColumns )
            {
            // InternalSQLParser.g:17096:2: ( ruleFromValuesColumns )
            // InternalSQLParser.g:17097:3: ruleFromValuesColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__CAssignment_1"


    // $ANTLR start "rule__FromValuesColumns__FvColsAssignment_2"
    // InternalSQLParser.g:17106:1: rule__FromValuesColumns__FvColsAssignment_2 : ( ruleFromValuesColumnNames ) ;
    public final void rule__FromValuesColumns__FvColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17110:1: ( ( ruleFromValuesColumnNames ) )
            // InternalSQLParser.g:17111:2: ( ruleFromValuesColumnNames )
            {
            // InternalSQLParser.g:17111:2: ( ruleFromValuesColumnNames )
            // InternalSQLParser.g:17112:3: ruleFromValuesColumnNames
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__FvColsAssignment_2"


    // $ANTLR start "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17121:1: rule__FromValuesColumnNames__EntriesAssignment_1_1_1 : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17125:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:17126:2: ( ruleColumnName )
            {
            // InternalSQLParser.g:17126:2: ( ruleColumnName )
            // InternalSQLParser.g:17127:3: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnName__ColNameAssignment"
    // InternalSQLParser.g:17136:1: rule__ColumnName__ColNameAssignment : ( RULE_STRING ) ;
    public final void rule__ColumnName__ColNameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17140:1: ( ( RULE_STRING ) )
            // InternalSQLParser.g:17141:2: ( RULE_STRING )
            {
            // InternalSQLParser.g:17141:2: ( RULE_STRING )
            // InternalSQLParser.g:17142:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnName__ColNameAssignment"


    // $ANTLR start "rule__Values__RowsAssignment_2"
    // InternalSQLParser.g:17151:1: rule__Values__RowsAssignment_2 : ( ruleRows ) ;
    public final void rule__Values__RowsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17155:1: ( ( ruleRows ) )
            // InternalSQLParser.g:17156:2: ( ruleRows )
            {
            // InternalSQLParser.g:17156:2: ( ruleRows )
            // InternalSQLParser.g:17157:3: ruleRows
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__RowsAssignment_2"


    // $ANTLR start "rule__Rows__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17166:1: rule__Rows__EntriesAssignment_1_1_1 : ( ruleRow ) ;
    public final void rule__Rows__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17170:1: ( ( ruleRow ) )
            // InternalSQLParser.g:17171:2: ( ruleRow )
            {
            // InternalSQLParser.g:17171:2: ( ruleRow )
            // InternalSQLParser.g:17172:3: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Row__RowValuesAssignment_1"
    // InternalSQLParser.g:17181:1: rule__Row__RowValuesAssignment_1 : ( ruleRowValues ) ;
    public final void rule__Row__RowValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17185:1: ( ( ruleRowValues ) )
            // InternalSQLParser.g:17186:2: ( ruleRowValues )
            {
            // InternalSQLParser.g:17186:2: ( ruleRowValues )
            // InternalSQLParser.g:17187:3: ruleRowValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__RowValuesAssignment_1"


    // $ANTLR start "rule__RowValues__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17196:1: rule__RowValues__EntriesAssignment_1_1_1 : ( ruleRowValue ) ;
    public final void rule__RowValues__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17200:1: ( ( ruleRowValue ) )
            // InternalSQLParser.g:17201:2: ( ruleRowValue )
            {
            // InternalSQLParser.g:17201:2: ( ruleRowValue )
            // InternalSQLParser.g:17202:3: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__RowValue__NullAssignment_1"
    // InternalSQLParser.g:17211:1: rule__RowValue__NullAssignment_1 : ( ( NULL ) ) ;
    public final void rule__RowValue__NullAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17215:1: ( ( ( NULL ) ) )
            // InternalSQLParser.g:17216:2: ( ( NULL ) )
            {
            // InternalSQLParser.g:17216:2: ( ( NULL ) )
            // InternalSQLParser.g:17217:3: ( NULL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            // InternalSQLParser.g:17218:3: ( NULL )
            // InternalSQLParser.g:17219:4: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__NullAssignment_1"


    // $ANTLR start "rule__PivotTable__PfunAssignment_3"
    // InternalSQLParser.g:17230:1: rule__PivotTable__PfunAssignment_3 : ( rulePivotFunctions ) ;
    public final void rule__PivotTable__PfunAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17234:1: ( ( rulePivotFunctions ) )
            // InternalSQLParser.g:17235:2: ( rulePivotFunctions )
            {
            // InternalSQLParser.g:17235:2: ( rulePivotFunctions )
            // InternalSQLParser.g:17236:3: rulePivotFunctions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PfunAssignment_3"


    // $ANTLR start "rule__PivotTable__PforAssignment_4"
    // InternalSQLParser.g:17245:1: rule__PivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__PivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17249:1: ( ( rulePivotForClause ) )
            // InternalSQLParser.g:17250:2: ( rulePivotForClause )
            {
            // InternalSQLParser.g:17250:2: ( rulePivotForClause )
            // InternalSQLParser.g:17251:3: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PforAssignment_4"


    // $ANTLR start "rule__PivotTable__PinAssignment_5"
    // InternalSQLParser.g:17260:1: rule__PivotTable__PinAssignment_5 : ( rulePivotInClause ) ;
    public final void rule__PivotTable__PinAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17264:1: ( ( rulePivotInClause ) )
            // InternalSQLParser.g:17265:2: ( rulePivotInClause )
            {
            // InternalSQLParser.g:17265:2: ( rulePivotInClause )
            // InternalSQLParser.g:17266:3: rulePivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PinAssignment_5"


    // $ANTLR start "rule__PivotFunctions__AbcAssignment"
    // InternalSQLParser.g:17275:1: rule__PivotFunctions__AbcAssignment : ( RULE_ID ) ;
    public final void rule__PivotFunctions__AbcAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17279:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:17280:2: ( RULE_ID )
            {
            // InternalSQLParser.g:17280:2: ( RULE_ID )
            // InternalSQLParser.g:17281:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotFunctions__AbcAssignment"


    // $ANTLR start "rule__PivotInClause__SqAssignment_2_0"
    // InternalSQLParser.g:17290:1: rule__PivotInClause__SqAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__PivotInClause__SqAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17294:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:17295:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:17295:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:17296:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__SqAssignment_2_0"


    // $ANTLR start "rule__PivotInClause__ArgsAssignment_2_1"
    // InternalSQLParser.g:17305:1: rule__PivotInClause__ArgsAssignment_2_1 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__PivotInClause__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17309:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSQLParser.g:17310:2: ( ruleUnpivotInClauseArgs )
            {
            // InternalSQLParser.g:17310:2: ( ruleUnpivotInClauseArgs )
            // InternalSQLParser.g:17311:3: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__ArgsAssignment_2_1"


    // $ANTLR start "rule__PivotInClause__PinanyAssignment_2_2"
    // InternalSQLParser.g:17320:1: rule__PivotInClause__PinanyAssignment_2_2 : ( rulePivotInClauseAny ) ;
    public final void rule__PivotInClause__PinanyAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17324:1: ( ( rulePivotInClauseAny ) )
            // InternalSQLParser.g:17325:2: ( rulePivotInClauseAny )
            {
            // InternalSQLParser.g:17325:2: ( rulePivotInClauseAny )
            // InternalSQLParser.g:17326:3: rulePivotInClauseAny
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__PinanyAssignment_2_2"


    // $ANTLR start "rule__UnpivotTable__PcolsAssignment_3"
    // InternalSQLParser.g:17335:1: rule__UnpivotTable__PcolsAssignment_3 : ( rulePivotColumns ) ;
    public final void rule__UnpivotTable__PcolsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17339:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:17340:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:17340:2: ( rulePivotColumns )
            // InternalSQLParser.g:17341:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PcolsAssignment_3"


    // $ANTLR start "rule__UnpivotTable__PforAssignment_4"
    // InternalSQLParser.g:17350:1: rule__UnpivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__UnpivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17354:1: ( ( rulePivotForClause ) )
            // InternalSQLParser.g:17355:2: ( rulePivotForClause )
            {
            // InternalSQLParser.g:17355:2: ( rulePivotForClause )
            // InternalSQLParser.g:17356:3: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PforAssignment_4"


    // $ANTLR start "rule__UnpivotTable__InopAssignment_5"
    // InternalSQLParser.g:17365:1: rule__UnpivotTable__InopAssignment_5 : ( ruleUnpivotInClause ) ;
    public final void rule__UnpivotTable__InopAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17369:1: ( ( ruleUnpivotInClause ) )
            // InternalSQLParser.g:17370:2: ( ruleUnpivotInClause )
            {
            // InternalSQLParser.g:17370:2: ( ruleUnpivotInClause )
            // InternalSQLParser.g:17371:3: ruleUnpivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__InopAssignment_5"


    // $ANTLR start "rule__UnpivotInClause__OpAssignment_1"
    // InternalSQLParser.g:17380:1: rule__UnpivotInClause__OpAssignment_1 : ( ( IN ) ) ;
    public final void rule__UnpivotInClause__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17384:1: ( ( ( IN ) ) )
            // InternalSQLParser.g:17385:2: ( ( IN ) )
            {
            // InternalSQLParser.g:17385:2: ( ( IN ) )
            // InternalSQLParser.g:17386:3: ( IN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            // InternalSQLParser.g:17387:3: ( IN )
            // InternalSQLParser.g:17388:4: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__OpAssignment_1"


    // $ANTLR start "rule__UnpivotInClause__ArgsAssignment_3"
    // InternalSQLParser.g:17399:1: rule__UnpivotInClause__ArgsAssignment_3 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__UnpivotInClause__ArgsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17403:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSQLParser.g:17404:2: ( ruleUnpivotInClauseArgs )
            {
            // InternalSQLParser.g:17404:2: ( ruleUnpivotInClauseArgs )
            // InternalSQLParser.g:17405:3: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__ArgsAssignment_3"


    // $ANTLR start "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17414:1: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17418:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSQLParser.g:17419:2: ( ruleUnpivotInClauseArg )
            {
            // InternalSQLParser.g:17419:2: ( ruleUnpivotInClauseArg )
            // InternalSQLParser.g:17420:3: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__UnpivotInClauseArg__PcolsAssignment_0"
    // InternalSQLParser.g:17429:1: rule__UnpivotInClauseArg__PcolsAssignment_0 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__PcolsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17433:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:17434:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:17434:2: ( rulePivotColumns )
            // InternalSQLParser.g:17435:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__PcolsAssignment_0"


    // $ANTLR start "rule__UnpivotInClauseArg__CfulsAssignment_1_1"
    // InternalSQLParser.g:17444:1: rule__UnpivotInClauseArg__CfulsAssignment_1_1 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__CfulsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17448:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:17449:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:17449:2: ( rulePivotColumns )
            // InternalSQLParser.g:17450:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__CfulsAssignment_1_1"


    // $ANTLR start "rule__PivotCols__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17459:1: rule__PivotCols__EntriesAssignment_1_1_1 : ( rulePivotCol ) ;
    public final void rule__PivotCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17463:1: ( ( rulePivotCol ) )
            // InternalSQLParser.g:17464:2: ( rulePivotCol )
            {
            // InternalSQLParser.g:17464:2: ( rulePivotCol )
            // InternalSQLParser.g:17465:3: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__PivotCol__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17474:1: rule__PivotCol__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17478:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:17479:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:17479:2: ( ruleDbObjectName )
            // InternalSQLParser.g:17480:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableFull__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17489:1: rule__TableFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__TableFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17493:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:17494:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:17494:2: ( ruleDbObjectName )
            // InternalSQLParser.g:17495:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__DbObjectNameAll__DbnameAssignment_0"
    // InternalSQLParser.g:17504:1: rule__DbObjectNameAll__DbnameAssignment_0 : ( ruleDBID ) ;
    public final void rule__DbObjectNameAll__DbnameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17508:1: ( ( ruleDBID ) )
            // InternalSQLParser.g:17509:2: ( ruleDBID )
            {
            // InternalSQLParser.g:17509:2: ( ruleDBID )
            // InternalSQLParser.g:17510:3: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__DbnameAssignment_0"


    // $ANTLR start "rule__DbObjectName__DbnameAssignment"
    // InternalSQLParser.g:17519:1: rule__DbObjectName__DbnameAssignment : ( ruleDBID ) ;
    public final void rule__DbObjectName__DbnameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17523:1: ( ( ruleDBID ) )
            // InternalSQLParser.g:17524:2: ( ruleDBID )
            {
            // InternalSQLParser.g:17524:2: ( ruleDBID )
            // InternalSQLParser.g:17525:3: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectName__DbnameAssignment"


    // $ANTLR start "rule__OrderByColumns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17534:1: rule__OrderByColumns__EntriesAssignment_1_1_1 : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17538:1: ( ( ruleOrderByColumnFull ) )
            // InternalSQLParser.g:17539:2: ( ruleOrderByColumnFull )
            {
            // InternalSQLParser.g:17539:2: ( ruleOrderByColumnFull )
            // InternalSQLParser.g:17540:3: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderAssignment_0_0"
    // InternalSQLParser.g:17549:1: rule__OrderByColumnFull__ColOrderAssignment_0_0 : ( ruleColumnFull ) ;
    public final void rule__OrderByColumnFull__ColOrderAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17553:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:17554:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:17554:2: ( ruleColumnFull )
            // InternalSQLParser.g:17555:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderAssignment_0_0"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"
    // InternalSQLParser.g:17564:1: rule__OrderByColumnFull__ColOrderIntAssignment_0_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OrderByColumnFull__ColOrderIntAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17568:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:17569:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:17569:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:17570:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAssignment_1"
    // InternalSQLParser.g:17579:1: rule__OrderByColumnFull__DirectionAssignment_1 : ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) ;
    public final void rule__OrderByColumnFull__DirectionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17583:1: ( ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) )
            // InternalSQLParser.g:17584:2: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:17584:2: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            // InternalSQLParser.g:17585:3: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }
            // InternalSQLParser.g:17586:3: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            // InternalSQLParser.g:17586:4: rule__OrderByColumnFull__DirectionAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__DirectionAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAssignment_1"


    // $ANTLR start "rule__GroupByColumns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17594:1: rule__GroupByColumns__EntriesAssignment_1_1_1 : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17598:1: ( ( ruleGroupByColumnFull ) )
            // InternalSQLParser.g:17599:2: ( ruleGroupByColumnFull )
            {
            // InternalSQLParser.g:17599:2: ( ruleGroupByColumnFull )
            // InternalSQLParser.g:17600:3: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__GroupByColumnFull__ColGrByAssignment_0"
    // InternalSQLParser.g:17609:1: rule__GroupByColumnFull__ColGrByAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__GroupByColumnFull__ColGrByAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17613:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:17614:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:17614:2: ( ruleColumnFull )
            // InternalSQLParser.g:17615:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__ColGrByAssignment_0"


    // $ANTLR start "rule__GroupByColumnFull__GbFunctionAssignment_1"
    // InternalSQLParser.g:17624:1: rule__GroupByColumnFull__GbFunctionAssignment_1 : ( ruleOperandFunction ) ;
    public final void rule__GroupByColumnFull__GbFunctionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17628:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:17629:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:17629:2: ( ruleOperandFunction )
            // InternalSQLParser.g:17630:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GbFunctionAssignment_1"


    // $ANTLR start "rule__GroupByColumnFull__GrByIntAssignment_2"
    // InternalSQLParser.g:17639:1: rule__GroupByColumnFull__GrByIntAssignment_2 : ( RULE_UNSIGNED ) ;
    public final void rule__GroupByColumnFull__GrByIntAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17643:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:17644:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:17644:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:17645:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GrByIntAssignment_2"


    // $ANTLR start "rule__FullExpression__EntriesAssignment_1_1"
    // InternalSQLParser.g:17654:1: rule__FullExpression__EntriesAssignment_1_1 : ( ruleExpressionFragmentSecond ) ;
    public final void rule__FullExpression__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17658:1: ( ( ruleExpressionFragmentSecond ) )
            // InternalSQLParser.g:17659:2: ( ruleExpressionFragmentSecond )
            {
            // InternalSQLParser.g:17659:2: ( ruleExpressionFragmentSecond )
            // InternalSQLParser.g:17660:3: ruleExpressionFragmentSecond
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__EntriesAssignment_1_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAssignment_0_0"
    // InternalSQLParser.g:17669:1: rule__ExpressionFragmentSecond__CAssignment_0_0 : ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__CAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17673:1: ( ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) )
            // InternalSQLParser.g:17674:2: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            {
            // InternalSQLParser.g:17674:2: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            // InternalSQLParser.g:17675:3: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }
            // InternalSQLParser.g:17676:3: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            // InternalSQLParser.g:17676:4: rule__ExpressionFragmentSecond__CAlternatives_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAlternatives_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAssignment_0_0"


    // $ANTLR start "rule__ExpressionFragmentSecond__EfragAssignment_0_1"
    // InternalSQLParser.g:17684:1: rule__ExpressionFragmentSecond__EfragAssignment_0_1 : ( ruleExpressionFragment ) ;
    public final void rule__ExpressionFragmentSecond__EfragAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17688:1: ( ( ruleExpressionFragment ) )
            // InternalSQLParser.g:17689:2: ( ruleExpressionFragment )
            {
            // InternalSQLParser.g:17689:2: ( ruleExpressionFragment )
            // InternalSQLParser.g:17690:3: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__EfragAssignment_0_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__NotPrmAssignment_1"
    // InternalSQLParser.g:17699:1: rule__ExpressionFragmentSecond__NotPrmAssignment_1 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragmentSecond__NotPrmAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17703:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:17704:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:17704:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:17705:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__NotPrmAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__ExpgroupAssignment_0"
    // InternalSQLParser.g:17714:1: rule__ExpressionFragment__ExpgroupAssignment_0 : ( ruleExpressionGroup ) ;
    public final void rule__ExpressionFragment__ExpgroupAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17718:1: ( ( ruleExpressionGroup ) )
            // InternalSQLParser.g:17719:2: ( ruleExpressionGroup )
            {
            // InternalSQLParser.g:17719:2: ( ruleExpressionGroup )
            // InternalSQLParser.g:17720:3: ruleExpressionGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpgroupAssignment_0"


    // $ANTLR start "rule__ExpressionFragment__ExpAssignment_1"
    // InternalSQLParser.g:17729:1: rule__ExpressionFragment__ExpAssignment_1 : ( ruleExpression ) ;
    public final void rule__ExpressionFragment__ExpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17733:1: ( ( ruleExpression ) )
            // InternalSQLParser.g:17734:2: ( ruleExpression )
            {
            // InternalSQLParser.g:17734:2: ( ruleExpression )
            // InternalSQLParser.g:17735:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__XexpAssignment_2"
    // InternalSQLParser.g:17744:1: rule__ExpressionFragment__XexpAssignment_2 : ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) ;
    public final void rule__ExpressionFragment__XexpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17748:1: ( ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) )
            // InternalSQLParser.g:17749:2: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            {
            // InternalSQLParser.g:17749:2: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            // InternalSQLParser.g:17750:3: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }
            // InternalSQLParser.g:17751:3: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            // InternalSQLParser.g:17751:4: rule__ExpressionFragment__XexpAlternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__XexpAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAssignment_2"


    // $ANTLR start "rule__ExpressionFragment__NotPrmAssignment_3"
    // InternalSQLParser.g:17759:1: rule__ExpressionFragment__NotPrmAssignment_3 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragment__NotPrmAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17763:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:17764:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:17764:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:17765:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__NotPrmAssignment_3"


    // $ANTLR start "rule__ExpressionFragment__InAssignment_4"
    // InternalSQLParser.g:17774:1: rule__ExpressionFragment__InAssignment_4 : ( ruleInOperator ) ;
    public final void rule__ExpressionFragment__InAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17778:1: ( ( ruleInOperator ) )
            // InternalSQLParser.g:17779:2: ( ruleInOperator )
            {
            // InternalSQLParser.g:17779:2: ( ruleInOperator )
            // InternalSQLParser.g:17780:3: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__InAssignment_4"


    // $ANTLR start "rule__ExpressionFragment__ExistsAssignment_5"
    // InternalSQLParser.g:17789:1: rule__ExpressionFragment__ExistsAssignment_5 : ( ruleExistsOperator ) ;
    public final void rule__ExpressionFragment__ExistsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17793:1: ( ( ruleExistsOperator ) )
            // InternalSQLParser.g:17794:2: ( ruleExistsOperator )
            {
            // InternalSQLParser.g:17794:2: ( ruleExistsOperator )
            // InternalSQLParser.g:17795:3: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExistsAssignment_5"


    // $ANTLR start "rule__ExpressionGroup__IsnotAssignment_1"
    // InternalSQLParser.g:17804:1: rule__ExpressionGroup__IsnotAssignment_1 : ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) ;
    public final void rule__ExpressionGroup__IsnotAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17808:1: ( ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) )
            // InternalSQLParser.g:17809:2: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:17809:2: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            // InternalSQLParser.g:17810:3: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }
            // InternalSQLParser.g:17811:3: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            // InternalSQLParser.g:17811:4: rule__ExpressionGroup__IsnotAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__IsnotAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAssignment_1"


    // $ANTLR start "rule__ExpressionGroup__ExprAssignment_3"
    // InternalSQLParser.g:17819:1: rule__ExpressionGroup__ExprAssignment_3 : ( ruleFullExpression ) ;
    public final void rule__ExpressionGroup__ExprAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17823:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:17824:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:17824:2: ( ruleFullExpression )
            // InternalSQLParser.g:17825:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__ExprAssignment_3"


    // $ANTLR start "rule__XExpression__XfAssignment_2"
    // InternalSQLParser.g:17834:1: rule__XExpression__XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression__XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17838:1: ( ( ruleXFunction ) )
            // InternalSQLParser.g:17839:2: ( ruleXFunction )
            {
            // InternalSQLParser.g:17839:2: ( ruleXFunction )
            // InternalSQLParser.g:17840:3: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__XfAssignment_2"


    // $ANTLR start "rule__XExpression__ColAssignment_4"
    // InternalSQLParser.g:17849:1: rule__XExpression__ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression__ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17853:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:17854:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:17854:2: ( ruleOperandGroup )
            // InternalSQLParser.g:17855:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__ColAssignment_4"


    // $ANTLR start "rule__XExpression__PrmAssignment_5_1"
    // InternalSQLParser.g:17864:1: rule__XExpression__PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression__PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17868:1: ( ( ruleXExpressionParams ) )
            // InternalSQLParser.g:17869:2: ( ruleXExpressionParams )
            {
            // InternalSQLParser.g:17869:2: ( ruleXExpressionParams )
            // InternalSQLParser.g:17870:3: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__PrmAssignment_5_1"


    // $ANTLR start "rule__XExpression___XfAssignment_2"
    // InternalSQLParser.g:17879:1: rule__XExpression___XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression___XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17883:1: ( ( ruleXFunction ) )
            // InternalSQLParser.g:17884:2: ( ruleXFunction )
            {
            // InternalSQLParser.g:17884:2: ( ruleXFunction )
            // InternalSQLParser.g:17885:3: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___XfAssignment_2"


    // $ANTLR start "rule__XExpression___ColAssignment_4"
    // InternalSQLParser.g:17894:1: rule__XExpression___ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression___ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17898:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:17899:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:17899:2: ( ruleOperandGroup )
            // InternalSQLParser.g:17900:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___ColAssignment_4"


    // $ANTLR start "rule__XExpression___PrmAssignment_5_1"
    // InternalSQLParser.g:17909:1: rule__XExpression___PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression___PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17913:1: ( ( ruleXExpressionParams ) )
            // InternalSQLParser.g:17914:2: ( ruleXExpressionParams )
            {
            // InternalSQLParser.g:17914:2: ( ruleXExpressionParams )
            // InternalSQLParser.g:17915:3: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___PrmAssignment_5_1"


    // $ANTLR start "rule__XExpressionParams__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:17924:1: rule__XExpressionParams__EntriesAssignment_1_1_1 : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17928:1: ( ( ruleJRParameter ) )
            // InternalSQLParser.g:17929:2: ( ruleJRParameter )
            {
            // InternalSQLParser.g:17929:2: ( ruleJRParameter )
            // InternalSQLParser.g:17930:3: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__JRParameter__JrprmAssignment"
    // InternalSQLParser.g:17939:1: rule__JRParameter__JrprmAssignment : ( RULE_ID ) ;
    public final void rule__JRParameter__JrprmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17943:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:17944:2: ( RULE_ID )
            {
            // InternalSQLParser.g:17944:2: ( RULE_ID )
            // InternalSQLParser.g:17945:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JRParameter__JrprmAssignment"


    // $ANTLR start "rule__Expression__Op1Assignment_0"
    // InternalSQLParser.g:17954:1: rule__Expression__Op1Assignment_0 : ( ruleOperand ) ;
    public final void rule__Expression__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17958:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:17959:2: ( ruleOperand )
            {
            // InternalSQLParser.g:17959:2: ( ruleOperand )
            // InternalSQLParser.g:17960:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Op1Assignment_0"


    // $ANTLR start "rule__Expression__IsnullAssignment_1_0"
    // InternalSQLParser.g:17969:1: rule__Expression__IsnullAssignment_1_0 : ( ruleIsNullValue ) ;
    public final void rule__Expression__IsnullAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17973:1: ( ( ruleIsNullValue ) )
            // InternalSQLParser.g:17974:2: ( ruleIsNullValue )
            {
            // InternalSQLParser.g:17974:2: ( ruleIsNullValue )
            // InternalSQLParser.g:17975:3: ruleIsNullValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__IsnullAssignment_1_0"


    // $ANTLR start "rule__Expression__InAssignment_1_1"
    // InternalSQLParser.g:17984:1: rule__Expression__InAssignment_1_1 : ( ruleInOperator ) ;
    public final void rule__Expression__InAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17988:1: ( ( ruleInOperator ) )
            // InternalSQLParser.g:17989:2: ( ruleInOperator )
            {
            // InternalSQLParser.g:17989:2: ( ruleInOperator )
            // InternalSQLParser.g:17990:3: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__InAssignment_1_1"


    // $ANTLR start "rule__Expression__ExistsAssignment_1_2"
    // InternalSQLParser.g:17999:1: rule__Expression__ExistsAssignment_1_2 : ( ruleExistsOperator ) ;
    public final void rule__Expression__ExistsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18003:1: ( ( ruleExistsOperator ) )
            // InternalSQLParser.g:18004:2: ( ruleExistsOperator )
            {
            // InternalSQLParser.g:18004:2: ( ruleExistsOperator )
            // InternalSQLParser.g:18005:3: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExistsAssignment_1_2"


    // $ANTLR start "rule__Expression__BetweenAssignment_1_3"
    // InternalSQLParser.g:18014:1: rule__Expression__BetweenAssignment_1_3 : ( ruleBetween ) ;
    public final void rule__Expression__BetweenAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18018:1: ( ( ruleBetween ) )
            // InternalSQLParser.g:18019:2: ( ruleBetween )
            {
            // InternalSQLParser.g:18019:2: ( ruleBetween )
            // InternalSQLParser.g:18020:3: ruleBetween
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__BetweenAssignment_1_3"


    // $ANTLR start "rule__Expression__LikeAssignment_1_4"
    // InternalSQLParser.g:18029:1: rule__Expression__LikeAssignment_1_4 : ( ruleLike ) ;
    public final void rule__Expression__LikeAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18033:1: ( ( ruleLike ) )
            // InternalSQLParser.g:18034:2: ( ruleLike )
            {
            // InternalSQLParser.g:18034:2: ( ruleLike )
            // InternalSQLParser.g:18035:3: ruleLike
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__LikeAssignment_1_4"


    // $ANTLR start "rule__Expression__CompAssignment_1_5"
    // InternalSQLParser.g:18044:1: rule__Expression__CompAssignment_1_5 : ( ruleComparison ) ;
    public final void rule__Expression__CompAssignment_1_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18048:1: ( ( ruleComparison ) )
            // InternalSQLParser.g:18049:2: ( ruleComparison )
            {
            // InternalSQLParser.g:18049:2: ( ruleComparison )
            // InternalSQLParser.g:18050:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__CompAssignment_1_5"


    // $ANTLR start "rule__Comparison__OperatorAssignment_0"
    // InternalSQLParser.g:18059:1: rule__Comparison__OperatorAssignment_0 : ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) ;
    public final void rule__Comparison__OperatorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18063:1: ( ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) )
            // InternalSQLParser.g:18064:2: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            {
            // InternalSQLParser.g:18064:2: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            // InternalSQLParser.g:18065:3: ( rule__Comparison__OperatorAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }
            // InternalSQLParser.g:18066:3: ( rule__Comparison__OperatorAlternatives_0_0 )
            // InternalSQLParser.g:18066:4: rule__Comparison__OperatorAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAssignment_0"


    // $ANTLR start "rule__Comparison__SubOperatorAssignment_1"
    // InternalSQLParser.g:18074:1: rule__Comparison__SubOperatorAssignment_1 : ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) ;
    public final void rule__Comparison__SubOperatorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18078:1: ( ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) )
            // InternalSQLParser.g:18079:2: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:18079:2: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            // InternalSQLParser.g:18080:3: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }
            // InternalSQLParser.g:18081:3: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            // InternalSQLParser.g:18081:4: rule__Comparison__SubOperatorAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__SubOperatorAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAssignment_1"


    // $ANTLR start "rule__Comparison__Op2Assignment_2"
    // InternalSQLParser.g:18089:1: rule__Comparison__Op2Assignment_2 : ( ruleOperand ) ;
    public final void rule__Comparison__Op2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18093:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:18094:2: ( ruleOperand )
            {
            // InternalSQLParser.g:18094:2: ( ruleOperand )
            // InternalSQLParser.g:18095:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Op2Assignment_2"


    // $ANTLR start "rule__Like__OpLikeAssignment_0"
    // InternalSQLParser.g:18104:1: rule__Like__OpLikeAssignment_0 : ( ruleLikeValue ) ;
    public final void rule__Like__OpLikeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18108:1: ( ( ruleLikeValue ) )
            // InternalSQLParser.g:18109:2: ( ruleLikeValue )
            {
            // InternalSQLParser.g:18109:2: ( ruleLikeValue )
            // InternalSQLParser.g:18110:3: ruleLikeValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__OpLikeAssignment_0"


    // $ANTLR start "rule__Like__Op2Assignment_1"
    // InternalSQLParser.g:18119:1: rule__Like__Op2Assignment_1 : ( ruleLikeOperand ) ;
    public final void rule__Like__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18123:1: ( ( ruleLikeOperand ) )
            // InternalSQLParser.g:18124:2: ( ruleLikeOperand )
            {
            // InternalSQLParser.g:18124:2: ( ruleLikeOperand )
            // InternalSQLParser.g:18125:3: ruleLikeOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Op2Assignment_1"


    // $ANTLR start "rule__LikeOperand__Op2Assignment_0"
    // InternalSQLParser.g:18134:1: rule__LikeOperand__Op2Assignment_0 : ( ruleStringOperand ) ;
    public final void rule__LikeOperand__Op2Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18138:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:18139:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:18139:2: ( ruleStringOperand )
            // InternalSQLParser.g:18140:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Op2Assignment_0"


    // $ANTLR start "rule__LikeOperand__Fop2Assignment_1"
    // InternalSQLParser.g:18149:1: rule__LikeOperand__Fop2Assignment_1 : ( ruleOperandFunction ) ;
    public final void rule__LikeOperand__Fop2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18153:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:18154:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:18154:2: ( ruleOperandFunction )
            // InternalSQLParser.g:18155:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Fop2Assignment_1"


    // $ANTLR start "rule__LikeOperand__FcastAssignment_2"
    // InternalSQLParser.g:18164:1: rule__LikeOperand__FcastAssignment_2 : ( ruleOpFunctionCast ) ;
    public final void rule__LikeOperand__FcastAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18168:1: ( ( ruleOpFunctionCast ) )
            // InternalSQLParser.g:18169:2: ( ruleOpFunctionCast )
            {
            // InternalSQLParser.g:18169:2: ( ruleOpFunctionCast )
            // InternalSQLParser.g:18170:3: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FcastAssignment_2"


    // $ANTLR start "rule__LikeOperand__FparamAssignment_3"
    // InternalSQLParser.g:18179:1: rule__LikeOperand__FparamAssignment_3 : ( ruleParameterOperand ) ;
    public final void rule__LikeOperand__FparamAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18183:1: ( ( ruleParameterOperand ) )
            // InternalSQLParser.g:18184:2: ( ruleParameterOperand )
            {
            // InternalSQLParser.g:18184:2: ( ruleParameterOperand )
            // InternalSQLParser.g:18185:3: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FparamAssignment_3"


    // $ANTLR start "rule__Between__OpBetweenAssignment_0"
    // InternalSQLParser.g:18194:1: rule__Between__OpBetweenAssignment_0 : ( ruleBetweenValue ) ;
    public final void rule__Between__OpBetweenAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18198:1: ( ( ruleBetweenValue ) )
            // InternalSQLParser.g:18199:2: ( ruleBetweenValue )
            {
            // InternalSQLParser.g:18199:2: ( ruleBetweenValue )
            // InternalSQLParser.g:18200:3: ruleBetweenValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__OpBetweenAssignment_0"


    // $ANTLR start "rule__Between__Op2Assignment_1"
    // InternalSQLParser.g:18209:1: rule__Between__Op2Assignment_1 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18213:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:18214:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:18214:2: ( ruleOperandGroup )
            // InternalSQLParser.g:18215:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op2Assignment_1"


    // $ANTLR start "rule__Between__Op3Assignment_3"
    // InternalSQLParser.g:18224:1: rule__Between__Op3Assignment_3 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op3Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18228:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:18229:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:18229:2: ( ruleOperandGroup )
            // InternalSQLParser.g:18230:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op3Assignment_3"


    // $ANTLR start "rule__InOperator__OpAssignment_1"
    // InternalSQLParser.g:18239:1: rule__InOperator__OpAssignment_1 : ( ruleInValue ) ;
    public final void rule__InOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18243:1: ( ( ruleInValue ) )
            // InternalSQLParser.g:18244:2: ( ruleInValue )
            {
            // InternalSQLParser.g:18244:2: ( ruleInValue )
            // InternalSQLParser.g:18245:3: ruleInValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpAssignment_1"


    // $ANTLR start "rule__InOperator__SubqueryAssignment_2_0"
    // InternalSQLParser.g:18254:1: rule__InOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__InOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18258:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:18259:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:18259:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:18260:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__InOperator__OpListAssignment_2_1"
    // InternalSQLParser.g:18269:1: rule__InOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__InOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18273:1: ( ( ruleOperandListGroup ) )
            // InternalSQLParser.g:18274:2: ( ruleOperandListGroup )
            {
            // InternalSQLParser.g:18274:2: ( ruleOperandListGroup )
            // InternalSQLParser.g:18275:3: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__ExistsOperator__OpAssignment_1"
    // InternalSQLParser.g:18284:1: rule__ExistsOperator__OpAssignment_1 : ( ruleExistsValue ) ;
    public final void rule__ExistsOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18288:1: ( ( ruleExistsValue ) )
            // InternalSQLParser.g:18289:2: ( ruleExistsValue )
            {
            // InternalSQLParser.g:18289:2: ( ruleExistsValue )
            // InternalSQLParser.g:18290:3: ruleExistsValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpAssignment_1"


    // $ANTLR start "rule__ExistsOperator__SubqueryAssignment_2_0"
    // InternalSQLParser.g:18299:1: rule__ExistsOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__ExistsOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18303:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:18304:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:18304:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:18305:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__ExistsOperator__OpListAssignment_2_1"
    // InternalSQLParser.g:18314:1: rule__ExistsOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__ExistsOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18318:1: ( ( ruleOperandListGroup ) )
            // InternalSQLParser.g:18319:2: ( ruleOperandListGroup )
            {
            // InternalSQLParser.g:18319:2: ( ruleOperandListGroup )
            // InternalSQLParser.g:18320:3: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__OperandListGroup__OpGroupAssignment_1"
    // InternalSQLParser.g:18329:1: rule__OperandListGroup__OpGroupAssignment_1 : ( ruleOperandList ) ;
    public final void rule__OperandListGroup__OpGroupAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18333:1: ( ( ruleOperandList ) )
            // InternalSQLParser.g:18334:2: ( ruleOperandList )
            {
            // InternalSQLParser.g:18334:2: ( ruleOperandList )
            // InternalSQLParser.g:18335:3: ruleOperandList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__OpGroupAssignment_1"


    // $ANTLR start "rule__OperandList__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:18344:1: rule__OperandList__EntriesAssignment_1_1_1 : ( ruleScalarOperand ) ;
    public final void rule__OperandList__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18348:1: ( ( ruleScalarOperand ) )
            // InternalSQLParser.g:18349:2: ( ruleScalarOperand )
            {
            // InternalSQLParser.g:18349:2: ( ruleScalarOperand )
            // InternalSQLParser.g:18350:3: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Operand__Op1Assignment_0"
    // InternalSQLParser.g:18359:1: rule__Operand__Op1Assignment_0 : ( ruleOperandFragment ) ;
    public final void rule__Operand__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18363:1: ( ( ruleOperandFragment ) )
            // InternalSQLParser.g:18364:2: ( ruleOperandFragment )
            {
            // InternalSQLParser.g:18364:2: ( ruleOperandFragment )
            // InternalSQLParser.g:18365:3: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Op1Assignment_0"


    // $ANTLR start "rule__Operand__RightAssignment_1_1"
    // InternalSQLParser.g:18374:1: rule__Operand__RightAssignment_1_1 : ( ruleOperandFragment ) ;
    public final void rule__Operand__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18378:1: ( ( ruleOperandFragment ) )
            // InternalSQLParser.g:18379:2: ( ruleOperandFragment )
            {
            // InternalSQLParser.g:18379:2: ( ruleOperandFragment )
            // InternalSQLParser.g:18380:3: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__RightAssignment_1_1"


    // $ANTLR start "rule__OperandFragment__ColumnAssignment_0"
    // InternalSQLParser.g:18389:1: rule__OperandFragment__ColumnAssignment_0 : ( ruleColumnOperand ) ;
    public final void rule__OperandFragment__ColumnAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18393:1: ( ( ruleColumnOperand ) )
            // InternalSQLParser.g:18394:2: ( ruleColumnOperand )
            {
            // InternalSQLParser.g:18394:2: ( ruleColumnOperand )
            // InternalSQLParser.g:18395:3: ruleColumnOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__ColumnAssignment_0"


    // $ANTLR start "rule__OperandFragment__XopAssignment_1"
    // InternalSQLParser.g:18404:1: rule__OperandFragment__XopAssignment_1 : ( ruleXOperandFragment ) ;
    public final void rule__OperandFragment__XopAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18408:1: ( ( ruleXOperandFragment ) )
            // InternalSQLParser.g:18409:2: ( ruleXOperandFragment )
            {
            // InternalSQLParser.g:18409:2: ( ruleXOperandFragment )
            // InternalSQLParser.g:18410:3: ruleXOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__XopAssignment_1"


    // $ANTLR start "rule__OperandFragment__SubqAssignment_2"
    // InternalSQLParser.g:18419:1: rule__OperandFragment__SubqAssignment_2 : ( ruleSubQueryOperand ) ;
    public final void rule__OperandFragment__SubqAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18423:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:18424:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:18424:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:18425:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SubqAssignment_2"


    // $ANTLR start "rule__OperandFragment__FcastAssignment_3"
    // InternalSQLParser.g:18434:1: rule__OperandFragment__FcastAssignment_3 : ( ruleOpFunctionCast ) ;
    public final void rule__OperandFragment__FcastAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18438:1: ( ( ruleOpFunctionCast ) )
            // InternalSQLParser.g:18439:2: ( ruleOpFunctionCast )
            {
            // InternalSQLParser.g:18439:2: ( ruleOpFunctionCast )
            // InternalSQLParser.g:18440:3: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FcastAssignment_3"


    // $ANTLR start "rule__OperandFragment__FextAssignment_4"
    // InternalSQLParser.g:18449:1: rule__OperandFragment__FextAssignment_4 : ( ruleFunctionExtract ) ;
    public final void rule__OperandFragment__FextAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18453:1: ( ( ruleFunctionExtract ) )
            // InternalSQLParser.g:18454:2: ( ruleFunctionExtract )
            {
            // InternalSQLParser.g:18454:2: ( ruleFunctionExtract )
            // InternalSQLParser.g:18455:3: ruleFunctionExtract
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FextAssignment_4"


    // $ANTLR start "rule__OperandFragment__FuncAssignment_5"
    // InternalSQLParser.g:18464:1: rule__OperandFragment__FuncAssignment_5 : ( ruleOperandFunction ) ;
    public final void rule__OperandFragment__FuncAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18468:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:18469:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:18469:2: ( ruleOperandFunction )
            // InternalSQLParser.g:18470:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FuncAssignment_5"


    // $ANTLR start "rule__OperandFragment__SqlcaseAssignment_6"
    // InternalSQLParser.g:18479:1: rule__OperandFragment__SqlcaseAssignment_6 : ( ruleSQLCASE ) ;
    public final void rule__OperandFragment__SqlcaseAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18483:1: ( ( ruleSQLCASE ) )
            // InternalSQLParser.g:18484:2: ( ruleSQLCASE )
            {
            // InternalSQLParser.g:18484:2: ( ruleSQLCASE )
            // InternalSQLParser.g:18485:3: ruleSQLCASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SqlcaseAssignment_6"


    // $ANTLR start "rule__OperandFunction__FnameAssignment_1"
    // InternalSQLParser.g:18494:1: rule__OperandFunction__FnameAssignment_1 : ( ruleFNAME ) ;
    public final void rule__OperandFunction__FnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18498:1: ( ( ruleFNAME ) )
            // InternalSQLParser.g:18499:2: ( ruleFNAME )
            {
            // InternalSQLParser.g:18499:2: ( ruleFNAME )
            // InternalSQLParser.g:18500:3: ruleFNAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FnameAssignment_1"


    // $ANTLR start "rule__OperandFunction__StarAssignment_2_0"
    // InternalSQLParser.g:18509:1: rule__OperandFunction__StarAssignment_2_0 : ( RULE_STAR ) ;
    public final void rule__OperandFunction__StarAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18513:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:18514:2: ( RULE_STAR )
            {
            // InternalSQLParser.g:18514:2: ( RULE_STAR )
            // InternalSQLParser.g:18515:3: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__StarAssignment_2_0"


    // $ANTLR start "rule__OperandFunction__ArgsAssignment_2_1"
    // InternalSQLParser.g:18524:1: rule__OperandFunction__ArgsAssignment_2_1 : ( ruleOpFunctionArg ) ;
    public final void rule__OperandFunction__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18528:1: ( ( ruleOpFunctionArg ) )
            // InternalSQLParser.g:18529:2: ( ruleOpFunctionArg )
            {
            // InternalSQLParser.g:18529:2: ( ruleOpFunctionArg )
            // InternalSQLParser.g:18530:3: ruleOpFunctionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__ArgsAssignment_2_1"


    // $ANTLR start "rule__OperandFunction__FanAssignment_4"
    // InternalSQLParser.g:18539:1: rule__OperandFunction__FanAssignment_4 : ( ruleFunctionAnalytical ) ;
    public final void rule__OperandFunction__FanAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18543:1: ( ( ruleFunctionAnalytical ) )
            // InternalSQLParser.g:18544:2: ( ruleFunctionAnalytical )
            {
            // InternalSQLParser.g:18544:2: ( ruleFunctionAnalytical )
            // InternalSQLParser.g:18545:3: ruleFunctionAnalytical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FanAssignment_4"


    // $ANTLR start "rule__FunctionExtract__VAssignment_2"
    // InternalSQLParser.g:18554:1: rule__FunctionExtract__VAssignment_2 : ( ruleEXTRACT_VALUES ) ;
    public final void rule__FunctionExtract__VAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18558:1: ( ( ruleEXTRACT_VALUES ) )
            // InternalSQLParser.g:18559:2: ( ruleEXTRACT_VALUES )
            {
            // InternalSQLParser.g:18559:2: ( ruleEXTRACT_VALUES )
            // InternalSQLParser.g:18560:3: ruleEXTRACT_VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEXTRACT_VALUES();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__VAssignment_2"


    // $ANTLR start "rule__FunctionExtract__OperandAssignment_4"
    // InternalSQLParser.g:18569:1: rule__FunctionExtract__OperandAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__FunctionExtract__OperandAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18573:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:18574:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:18574:2: ( ruleOperandGroup )
            // InternalSQLParser.g:18575:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__OperandAssignment_4"


    // $ANTLR start "rule__FunctionAnalytical__AnClauseAssignment_2"
    // InternalSQLParser.g:18584:1: rule__FunctionAnalytical__AnClauseAssignment_2 : ( ruleAnalyticClause ) ;
    public final void rule__FunctionAnalytical__AnClauseAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18588:1: ( ( ruleAnalyticClause ) )
            // InternalSQLParser.g:18589:2: ( ruleAnalyticClause )
            {
            // InternalSQLParser.g:18589:2: ( ruleAnalyticClause )
            // InternalSQLParser.g:18590:3: ruleAnalyticClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__AnClauseAssignment_2"


    // $ANTLR start "rule__AnalyticClause__AbcAssignment_1"
    // InternalSQLParser.g:18599:1: rule__AnalyticClause__AbcAssignment_1 : ( ruleQueryPartitionClause ) ;
    public final void rule__AnalyticClause__AbcAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18603:1: ( ( ruleQueryPartitionClause ) )
            // InternalSQLParser.g:18604:2: ( ruleQueryPartitionClause )
            {
            // InternalSQLParser.g:18604:2: ( ruleQueryPartitionClause )
            // InternalSQLParser.g:18605:3: ruleQueryPartitionClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__AbcAssignment_1"


    // $ANTLR start "rule__AnalyticClause__ObcAssignment_2_0"
    // InternalSQLParser.g:18614:1: rule__AnalyticClause__ObcAssignment_2_0 : ( ruleOrderByClause ) ;
    public final void rule__AnalyticClause__ObcAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18618:1: ( ( ruleOrderByClause ) )
            // InternalSQLParser.g:18619:2: ( ruleOrderByClause )
            {
            // InternalSQLParser.g:18619:2: ( ruleOrderByClause )
            // InternalSQLParser.g:18620:3: ruleOrderByClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__ObcAssignment_2_0"


    // $ANTLR start "rule__AnalyticClause__WincAssignment_2_1"
    // InternalSQLParser.g:18629:1: rule__AnalyticClause__WincAssignment_2_1 : ( ruleWindowingClause ) ;
    public final void rule__AnalyticClause__WincAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18633:1: ( ( ruleWindowingClause ) )
            // InternalSQLParser.g:18634:2: ( ruleWindowingClause )
            {
            // InternalSQLParser.g:18634:2: ( ruleWindowingClause )
            // InternalSQLParser.g:18635:3: ruleWindowingClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__WincAssignment_2_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoPAssignment_1"
    // InternalSQLParser.g:18644:1: rule__WindowingClauseBetween__WcoPAssignment_1 : ( ruleWindowingClauseOperandPreceding ) ;
    public final void rule__WindowingClauseBetween__WcoPAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18648:1: ( ( ruleWindowingClauseOperandPreceding ) )
            // InternalSQLParser.g:18649:2: ( ruleWindowingClauseOperandPreceding )
            {
            // InternalSQLParser.g:18649:2: ( ruleWindowingClauseOperandPreceding )
            // InternalSQLParser.g:18650:3: ruleWindowingClauseOperandPreceding
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoPAssignment_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoFAssignment_3"
    // InternalSQLParser.g:18659:1: rule__WindowingClauseBetween__WcoFAssignment_3 : ( ruleWindowingClauseOperandFollowing ) ;
    public final void rule__WindowingClauseBetween__WcoFAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18663:1: ( ( ruleWindowingClauseOperandFollowing ) )
            // InternalSQLParser.g:18664:2: ( ruleWindowingClauseOperandFollowing )
            {
            // InternalSQLParser.g:18664:2: ( ruleWindowingClauseOperandFollowing )
            // InternalSQLParser.g:18665:3: ruleWindowingClauseOperandFollowing
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoFAssignment_3"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"
    // InternalSQLParser.g:18674:1: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18678:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:18679:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:18679:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:18680:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"
    // InternalSQLParser.g:18689:1: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18693:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:18694:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:18694:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:18695:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"


    // $ANTLR start "rule__OrderByClause__ArgsAssignment_1"
    // InternalSQLParser.g:18704:1: rule__OrderByClause__ArgsAssignment_1 : ( ruleOrderByClauseArgs ) ;
    public final void rule__OrderByClause__ArgsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18708:1: ( ( ruleOrderByClauseArgs ) )
            // InternalSQLParser.g:18709:2: ( ruleOrderByClauseArgs )
            {
            // InternalSQLParser.g:18709:2: ( ruleOrderByClauseArgs )
            // InternalSQLParser.g:18710:3: ruleOrderByClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__ArgsAssignment_1"


    // $ANTLR start "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:18719:1: rule__OrderByClauseArgs__EntriesAssignment_1_1_1 : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18723:1: ( ( ruleOrderByClauseArg ) )
            // InternalSQLParser.g:18724:2: ( ruleOrderByClauseArg )
            {
            // InternalSQLParser.g:18724:2: ( ruleOrderByClauseArg )
            // InternalSQLParser.g:18725:3: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByClauseArg__ColAssignment_0"
    // InternalSQLParser.g:18734:1: rule__OrderByClauseArg__ColAssignment_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__OrderByClauseArg__ColAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18738:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:18739:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:18739:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:18740:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__ColAssignment_0"


    // $ANTLR start "rule__QueryPartitionClause__ArgsAssignment_2_0"
    // InternalSQLParser.g:18749:1: rule__QueryPartitionClause__ArgsAssignment_2_0 : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__ArgsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18753:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSQLParser.g:18754:2: ( ruleAnalyticExprArgs )
            {
            // InternalSQLParser.g:18754:2: ( ruleAnalyticExprArgs )
            // InternalSQLParser.g:18755:3: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__ArgsAssignment_2_0"


    // $ANTLR start "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:18764:1: rule__AnalyticExprArgs__EntriesAssignment_1_1_1 : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18768:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:18769:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:18769:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:18770:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__AnalyticExprArg__CeAssignment_0"
    // InternalSQLParser.g:18779:1: rule__AnalyticExprArg__CeAssignment_0 : ( ruleOperand ) ;
    public final void rule__AnalyticExprArg__CeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18783:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:18784:2: ( ruleOperand )
            {
            // InternalSQLParser.g:18784:2: ( ruleOperand )
            // InternalSQLParser.g:18785:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__CeAssignment_0"


    // $ANTLR start "rule__AnalyticExprArg__ColAliasAssignment_1"
    // InternalSQLParser.g:18794:1: rule__AnalyticExprArg__ColAliasAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__AnalyticExprArg__ColAliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18798:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:18799:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:18799:2: ( ruleDbObjectName )
            // InternalSQLParser.g:18800:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__ColAliasAssignment_1"


    // $ANTLR start "rule__OpFunctionArg__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:18809:1: rule__OpFunctionArg__EntriesAssignment_1_1_1 : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18813:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSQLParser.g:18814:2: ( ruleOpFunctionArgOperand )
            {
            // InternalSQLParser.g:18814:2: ( ruleOpFunctionArgOperand )
            // InternalSQLParser.g:18815:3: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAssignment"
    // InternalSQLParser.g:18824:1: rule__OpFunctionArgOperand__OpAssignment : ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) ;
    public final void rule__OpFunctionArgOperand__OpAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18828:1: ( ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) )
            // InternalSQLParser.g:18829:2: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            {
            // InternalSQLParser.g:18829:2: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            // InternalSQLParser.g:18830:3: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }
            // InternalSQLParser.g:18831:3: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            // InternalSQLParser.g:18831:4: rule__OpFunctionArgOperand__OpAlternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAlternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAssignment"


    // $ANTLR start "rule__OpFunctionCast__OpAssignment_1"
    // InternalSQLParser.g:18839:1: rule__OpFunctionCast__OpAssignment_1 : ( ruleOperandGroup ) ;
    public final void rule__OpFunctionCast__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18843:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:18844:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:18844:2: ( ruleOperandGroup )
            // InternalSQLParser.g:18845:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__OpAssignment_1"


    // $ANTLR start "rule__OpFunctionCast__TypeAssignment_3"
    // InternalSQLParser.g:18854:1: rule__OpFunctionCast__TypeAssignment_3 : ( RULE_ID ) ;
    public final void rule__OpFunctionCast__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18858:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:18859:2: ( RULE_ID )
            {
            // InternalSQLParser.g:18859:2: ( RULE_ID )
            // InternalSQLParser.g:18860:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__TypeAssignment_3"


    // $ANTLR start "rule__OpFunctionCast__PAssignment_4_1"
    // InternalSQLParser.g:18869:1: rule__OpFunctionCast__PAssignment_4_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__PAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18873:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:18874:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:18874:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:18875:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__PAssignment_4_1"


    // $ANTLR start "rule__OpFunctionCast__P2Assignment_4_2_1"
    // InternalSQLParser.g:18884:1: rule__OpFunctionCast__P2Assignment_4_2_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__P2Assignment_4_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18888:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:18889:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:18889:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:18890:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__P2Assignment_4_2_1"


    // $ANTLR start "rule__XOperandFragment__ParamAssignment_0"
    // InternalSQLParser.g:18899:1: rule__XOperandFragment__ParamAssignment_0 : ( ruleParameterOperand ) ;
    public final void rule__XOperandFragment__ParamAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18903:1: ( ( ruleParameterOperand ) )
            // InternalSQLParser.g:18904:2: ( ruleParameterOperand )
            {
            // InternalSQLParser.g:18904:2: ( ruleParameterOperand )
            // InternalSQLParser.g:18905:3: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ParamAssignment_0"


    // $ANTLR start "rule__XOperandFragment__EparamAssignment_1"
    // InternalSQLParser.g:18914:1: rule__XOperandFragment__EparamAssignment_1 : ( ruleExclamationParameterOperand ) ;
    public final void rule__XOperandFragment__EparamAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18918:1: ( ( ruleExclamationParameterOperand ) )
            // InternalSQLParser.g:18919:2: ( ruleExclamationParameterOperand )
            {
            // InternalSQLParser.g:18919:2: ( ruleExclamationParameterOperand )
            // InternalSQLParser.g:18920:3: ruleExclamationParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__EparamAssignment_1"


    // $ANTLR start "rule__XOperandFragment__ScalarAssignment_2"
    // InternalSQLParser.g:18929:1: rule__XOperandFragment__ScalarAssignment_2 : ( ruleScalarNumberOperand ) ;
    public final void rule__XOperandFragment__ScalarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18933:1: ( ( ruleScalarNumberOperand ) )
            // InternalSQLParser.g:18934:2: ( ruleScalarNumberOperand )
            {
            // InternalSQLParser.g:18934:2: ( ruleScalarNumberOperand )
            // InternalSQLParser.g:18935:3: ruleScalarNumberOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ScalarAssignment_2"


    // $ANTLR start "rule__ParameterOperand__PrmAssignment"
    // InternalSQLParser.g:18944:1: rule__ParameterOperand__PrmAssignment : ( RULE_JRPARAM ) ;
    public final void rule__ParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18948:1: ( ( RULE_JRPARAM ) )
            // InternalSQLParser.g:18949:2: ( RULE_JRPARAM )
            {
            // InternalSQLParser.g:18949:2: ( RULE_JRPARAM )
            // InternalSQLParser.g:18950:3: RULE_JRPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ExclamationParameterOperand__PrmAssignment"
    // InternalSQLParser.g:18959:1: rule__ExclamationParameterOperand__PrmAssignment : ( RULE_JRNPARAM ) ;
    public final void rule__ExclamationParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18963:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:18964:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:18964:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:18965:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclamationParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ColumnOperand__CfullAssignment_0"
    // InternalSQLParser.g:18974:1: rule__ColumnOperand__CfullAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__ColumnOperand__CfullAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18978:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:18979:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:18979:2: ( ruleColumnFull )
            // InternalSQLParser.g:18980:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__CfullAssignment_0"


    // $ANTLR start "rule__ColumnOperand__OraAssignment_1"
    // InternalSQLParser.g:18989:1: rule__ColumnOperand__OraAssignment_1 : ( ( LeftParenthesisPlusSignRightParenthesis ) ) ;
    public final void rule__ColumnOperand__OraAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18993:1: ( ( ( LeftParenthesisPlusSignRightParenthesis ) ) )
            // InternalSQLParser.g:18994:2: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            {
            // InternalSQLParser.g:18994:2: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            // InternalSQLParser.g:18995:3: ( LeftParenthesisPlusSignRightParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            // InternalSQLParser.g:18996:3: ( LeftParenthesisPlusSignRightParenthesis )
            // InternalSQLParser.g:18997:4: LeftParenthesisPlusSignRightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesisPlusSignRightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__OraAssignment_1"


    // $ANTLR start "rule__SubQueryOperand__SelAssignment_2"
    // InternalSQLParser.g:19008:1: rule__SubQueryOperand__SelAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__SubQueryOperand__SelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19012:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:19013:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:19013:2: ( ruleSelectQuery )
            // InternalSQLParser.g:19014:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__SelAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SostrAssignment_0"
    // InternalSQLParser.g:19023:1: rule__ScalarOperand__SostrAssignment_0 : ( ruleStringOperand ) ;
    public final void rule__ScalarOperand__SostrAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19027:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:19028:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:19028:2: ( ruleStringOperand )
            // InternalSQLParser.g:19029:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SostrAssignment_0"


    // $ANTLR start "rule__ScalarOperand__SodblAssignment_1"
    // InternalSQLParser.g:19038:1: rule__ScalarOperand__SodblAssignment_1 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarOperand__SodblAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19042:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSQLParser.g:19043:2: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSQLParser.g:19043:2: ( RULE_SIGNED_DOUBLE )
            // InternalSQLParser.g:19044:3: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodblAssignment_1"


    // $ANTLR start "rule__ScalarOperand__SodateAssignment_2"
    // InternalSQLParser.g:19053:1: rule__ScalarOperand__SodateAssignment_2 : ( RULE_DATE ) ;
    public final void rule__ScalarOperand__SodateAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19057:1: ( ( RULE_DATE ) )
            // InternalSQLParser.g:19058:2: ( RULE_DATE )
            {
            // InternalSQLParser.g:19058:2: ( RULE_DATE )
            // InternalSQLParser.g:19059:3: RULE_DATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }
            match(input,RULE_DATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodateAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SotimeAssignment_3"
    // InternalSQLParser.g:19068:1: rule__ScalarOperand__SotimeAssignment_3 : ( RULE_TIME ) ;
    public final void rule__ScalarOperand__SotimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19072:1: ( ( RULE_TIME ) )
            // InternalSQLParser.g:19073:2: ( RULE_TIME )
            {
            // InternalSQLParser.g:19073:2: ( RULE_TIME )
            // InternalSQLParser.g:19074:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SotimeAssignment_3"


    // $ANTLR start "rule__ScalarOperand__SodtAssignment_4"
    // InternalSQLParser.g:19083:1: rule__ScalarOperand__SodtAssignment_4 : ( RULE_TIMESTAMP ) ;
    public final void rule__ScalarOperand__SodtAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19087:1: ( ( RULE_TIMESTAMP ) )
            // InternalSQLParser.g:19088:2: ( RULE_TIMESTAMP )
            {
            // InternalSQLParser.g:19088:2: ( RULE_TIMESTAMP )
            // InternalSQLParser.g:19089:3: RULE_TIMESTAMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }
            match(input,RULE_TIMESTAMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodtAssignment_4"


    // $ANTLR start "rule__ScalarNumberOperand__SoUIntAssignment_0"
    // InternalSQLParser.g:19098:1: rule__ScalarNumberOperand__SoUIntAssignment_0 : ( RULE_UNSIGNED ) ;
    public final void rule__ScalarNumberOperand__SoUIntAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19102:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:19103:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:19103:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:19104:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SoUIntAssignment_0"


    // $ANTLR start "rule__ScalarNumberOperand__SointAssignment_1"
    // InternalSQLParser.g:19113:1: rule__ScalarNumberOperand__SointAssignment_1 : ( RULE_INT ) ;
    public final void rule__ScalarNumberOperand__SointAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19117:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:19118:2: ( RULE_INT )
            {
            // InternalSQLParser.g:19118:2: ( RULE_INT )
            // InternalSQLParser.g:19119:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SointAssignment_1"


    // $ANTLR start "rule__ScalarNumberOperand__SodblAssignment_2"
    // InternalSQLParser.g:19128:1: rule__ScalarNumberOperand__SodblAssignment_2 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarNumberOperand__SodblAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19132:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSQLParser.g:19133:2: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSQLParser.g:19133:2: ( RULE_SIGNED_DOUBLE )
            // InternalSQLParser.g:19134:3: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SodblAssignment_2"


    // $ANTLR start "rule__ScalarNumberOperand__SostrAssignment_3"
    // InternalSQLParser.g:19143:1: rule__ScalarNumberOperand__SostrAssignment_3 : ( ruleStringOperand ) ;
    public final void rule__ScalarNumberOperand__SostrAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19147:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:19148:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:19148:2: ( ruleStringOperand )
            // InternalSQLParser.g:19149:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SostrAssignment_3"


    // $ANTLR start "rule__SQLCASE__WopAssignment_1_0"
    // InternalSQLParser.g:19158:1: rule__SQLCASE__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SQLCASE__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19162:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:19163:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:19163:2: ( ruleOperandGroup )
            // InternalSQLParser.g:19164:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WopAssignment_1_0"


    // $ANTLR start "rule__SQLCASE__ExprAssignment_1_1"
    // InternalSQLParser.g:19173:1: rule__SQLCASE__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SQLCASE__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19177:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:19178:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:19178:2: ( ruleFullExpression )
            // InternalSQLParser.g:19179:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__ExprAssignment_1_1"


    // $ANTLR start "rule__SQLCASE__WhenAssignment_2"
    // InternalSQLParser.g:19188:1: rule__SQLCASE__WhenAssignment_2 : ( ruleSQLCaseWhens ) ;
    public final void rule__SQLCASE__WhenAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19192:1: ( ( ruleSQLCaseWhens ) )
            // InternalSQLParser.g:19193:2: ( ruleSQLCaseWhens )
            {
            // InternalSQLParser.g:19193:2: ( ruleSQLCaseWhens )
            // InternalSQLParser.g:19194:3: ruleSQLCaseWhens
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WhenAssignment_2"


    // $ANTLR start "rule__SQLCaseWhens__EntriesAssignment_1_1"
    // InternalSQLParser.g:19203:1: rule__SQLCaseWhens__EntriesAssignment_1_1 : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19207:1: ( ( ruleSqlCaseWhen ) )
            // InternalSQLParser.g:19208:2: ( ruleSqlCaseWhen )
            {
            // InternalSQLParser.g:19208:2: ( ruleSqlCaseWhen )
            // InternalSQLParser.g:19209:3: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__EntriesAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__WopAssignment_1_0"
    // InternalSQLParser.g:19218:1: rule__SqlCaseWhen__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19222:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:19223:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:19223:2: ( ruleOperandGroup )
            // InternalSQLParser.g:19224:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__WopAssignment_1_0"


    // $ANTLR start "rule__SqlCaseWhen__ExprAssignment_1_1"
    // InternalSQLParser.g:19233:1: rule__SqlCaseWhen__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SqlCaseWhen__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19237:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:19238:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:19238:2: ( ruleFullExpression )
            // InternalSQLParser.g:19239:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__ExprAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__TexpAssignment_3"
    // InternalSQLParser.g:19248:1: rule__SqlCaseWhen__TexpAssignment_3 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__TexpAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19252:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:19253:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:19253:2: ( ruleOperandGroup )
            // InternalSQLParser.g:19254:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__TexpAssignment_3"


    // $ANTLR start "rule__SqlCaseWhen__EexpAssignment_4_1"
    // InternalSQLParser.g:19263:1: rule__SqlCaseWhen__EexpAssignment_4_1 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__EexpAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19267:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:19268:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:19268:2: ( ruleOperandGroup )
            // InternalSQLParser.g:19269:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__EexpAssignment_4_1"


    // $ANTLR start "rule__UnsignedValue__IntegerAssignment"
    // InternalSQLParser.g:19278:1: rule__UnsignedValue__IntegerAssignment : ( RULE_UNSIGNED ) ;
    public final void rule__UnsignedValue__IntegerAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19282:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:19283:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:19283:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:19284:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnsignedValue__IntegerAssignment"

    // $ANTLR start synpred86_InternalSQLParser
    public final void synpred86_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:4018:2: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) )
        // InternalSQLParser.g:4018:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        {
        // InternalSQLParser.g:4018:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        // InternalSQLParser.g:4019:3: ( rule__SQLCASE__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
        }
        // InternalSQLParser.g:4020:3: ( rule__SQLCASE__WopAssignment_1_0 )
        // InternalSQLParser.g:4020:4: rule__SQLCASE__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SQLCASE__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred86_InternalSQLParser

    // $ANTLR start synpred87_InternalSQLParser
    public final void synpred87_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:4039:2: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) )
        // InternalSQLParser.g:4039:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        {
        // InternalSQLParser.g:4039:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        // InternalSQLParser.g:4040:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
        }
        // InternalSQLParser.g:4041:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        // InternalSQLParser.g:4041:4: rule__SqlCaseWhen__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SqlCaseWhen__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred87_InternalSQLParser

    // Delegated rules

    public final boolean synpred86_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA19 dfa19 = new DFA19(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA48 dfa48 = new DFA48(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\5\uffff\1\11\4\uffff";
    static final String dfa_3s = "\1\42\1\51\1\uffff\1\42\1\uffff\1\11\4\uffff";
    static final String dfa_4s = "\1\u008f\1\166\1\uffff\1\u008f\1\uffff\1\u0084\4\uffff";
    static final String dfa_5s = "\2\uffff\1\1\1\uffff\1\2\1\uffff\1\3\1\5\1\6\1\4";
    static final String dfa_6s = "\12\uffff}>";
    static final String[] dfa_7s = {
            "\1\4\6\uffff\1\10\11\uffff\1\4\22\uffff\1\4\11\uffff\1\2\23\uffff\1\1\5\uffff\1\6\5\uffff\1\7\5\uffff\1\3\13\uffff\1\4\1\5\1\uffff\3\4\4\uffff\4\4",
            "\1\10\106\uffff\1\7\5\uffff\1\2",
            "",
            "\1\2\6\uffff\1\2\4\uffff\1\4\4\uffff\1\2\22\uffff\1\2\11\uffff\1\2\23\uffff\1\2\5\uffff\1\2\5\uffff\1\2\5\uffff\1\2\13\uffff\2\2\1\uffff\3\2\4\uffff\4\2",
            "",
            "\1\11\10\uffff\1\11\14\uffff\1\4\4\uffff\1\11\3\uffff\1\11\1\4\1\11\1\uffff\1\11\7\uffff\2\11\1\uffff\4\11\2\uffff\1\11\3\uffff\2\11\1\uffff\1\11\5\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\4\6\uffff\1\11\2\uffff\1\11\4\uffff\1\11\5\uffff\1\4\4\uffff\1\4\1\uffff\3\4\2\uffff\2\4\1\uffff\1\11\2\4\1\uffff\1\11\1\4\1\11\1\4\1\uffff\4\4\3\uffff\1\11\1\4",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "3227:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );";
        }
    }
    static final String dfa_8s = "\20\uffff";
    static final String dfa_9s = "\1\152\1\20\14\171\2\uffff";
    static final String dfa_10s = "\1\152\1\150\14\u0080\2\uffff";
    static final String dfa_11s = "\16\uffff\1\2\1\1";
    static final String dfa_12s = "\20\uffff}>";
    static final String[] dfa_13s = {
            "\1\1",
            "\1\13\5\uffff\1\15\1\5\1\14\1\10\3\uffff\1\12\1\11\21\uffff\1\4\1\7\1\3\22\uffff\1\6\42\uffff\1\2",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "3272:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );";
        }
    }
    static final String dfa_14s = "\24\uffff";
    static final String dfa_15s = "\1\42\15\0\6\uffff";
    static final String dfa_16s = "\1\u008f\15\0\6\uffff";
    static final String dfa_17s = "\16\uffff\1\2\4\uffff\1\1";
    static final String dfa_18s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\uffff}>";
    static final String[] dfa_19s = {
            "\1\14\6\uffff\1\16\11\uffff\1\13\22\uffff\1\15\11\uffff\1\16\23\uffff\1\16\5\uffff\1\16\5\uffff\1\16\5\uffff\1\12\13\uffff\1\4\1\5\1\uffff\1\6\1\7\1\10\4\uffff\1\11\1\3\1\2\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4013:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_1 = input.LA(1);

                         
                        int index47_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA47_2 = input.LA(1);

                         
                        int index47_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA47_3 = input.LA(1);

                         
                        int index47_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA47_4 = input.LA(1);

                         
                        int index47_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA47_5 = input.LA(1);

                         
                        int index47_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA47_6 = input.LA(1);

                         
                        int index47_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA47_7 = input.LA(1);

                         
                        int index47_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA47_8 = input.LA(1);

                         
                        int index47_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA47_9 = input.LA(1);

                         
                        int index47_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA47_10 = input.LA(1);

                         
                        int index47_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA47_11 = input.LA(1);

                         
                        int index47_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA47_12 = input.LA(1);

                         
                        int index47_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA47_13 = input.LA(1);

                         
                        int index47_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4034:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_2 = input.LA(1);

                         
                        int index48_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA48_3 = input.LA(1);

                         
                        int index48_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA48_4 = input.LA(1);

                         
                        int index48_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA48_5 = input.LA(1);

                         
                        int index48_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA48_6 = input.LA(1);

                         
                        int index48_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA48_7 = input.LA(1);

                         
                        int index48_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA48_8 = input.LA(1);

                         
                        int index48_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA48_9 = input.LA(1);

                         
                        int index48_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA48_10 = input.LA(1);

                         
                        int index48_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA48_11 = input.LA(1);

                         
                        int index48_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA48_12 = input.LA(1);

                         
                        int index48_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA48_13 = input.LA(1);

                         
                        int index48_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000400000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0040400000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000002000100000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0400010000040000L,0x0000000000000004L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0400010000040002L,0x0000000000000004L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000400000000000L,0x0000000024000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0008000408000000L,0x0040004000000040L,0x000000000000F0FCL});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x22A0140000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000002000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0008020400000000L,0x0041041000010040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000E020L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0110001000000200L,0x0000000000005402L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0110001000000202L,0x0000000000005402L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000008L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x8000008000000000L,0x0000400000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L,0x00000000000010ECL});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0040008000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0040000080000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000A00000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000080L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0008000040000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000002L,0x0008000040000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0040001000010000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0007000063C10000L,0x0000010000000020L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0008000400000000L,0x0040000000000040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0008020480000000L,0xE0533E1000018040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000001000020000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0008000400000000L,0x00400000A0200040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000000L,0x00000000000090ECL});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000001000008000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000080000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0001001000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000000017ECL});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x1520000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x1520000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0008000408000000L,0x00C0000020000040L,0x000000000000F0FCL});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x080028400400FDF0L,0x0000000209000800L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x2000000000080000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100001L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0008000580200000L,0x0040000000000040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000120000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x1000000000000000L,0x0000000100000080L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0040000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0008000408000000L,0x0040000020000040L,0x000000000000F0FCL});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0280000000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0008020400000000L,0x0041041002010040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0008020400000002L,0x0041041002010040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x4000000000000000L});

}