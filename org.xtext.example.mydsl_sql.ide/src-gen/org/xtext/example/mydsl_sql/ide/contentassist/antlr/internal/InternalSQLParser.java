package org.xtext.example.mydsl_sql.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl_sql.services.SQLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSQLParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "MINUTE_MICROSECOND", "SECOND_MICROSECOND", "HOUR_MICROSECOND", "DAY_MICROSECOND", "MINUTE_SECOND", "STRAIGHT_JOIN", "HOUR_MINUTE", "HOUR_SECOND", "MICROSECOND", "DAY_MINUTE", "DAY_SECOND", "YEAR_MONTH", "BETWEEN_4", "KW_FOLLOWING", "INTERSECT", "PARTITION", "PRECEDING", "UNBOUNDED", "BETWEEN_2", "NOTEQUAL", "BETWEEN_3", "GREATER_1", "DAY_HOUR", "DISTINCT", "SIBLINGS", "BETWEEN_1", "GREATER", "BETWEEN", "BOOLEAN", "CURRENT", "EXCLUDE", "EXTRACT", "INCLUDE", "INTEGER", "NATURAL", "PERCENT", "PRIMARY", "QUARTER", "REGIONS", "UNPIVOT", "CREATE", "DOUBLE", "EXCEPT", "EXISTS", "HAVING", "INSERT", "MINUTE", "NUMBER", "OFFSET", "SECOND", "SELECT", "STRING", "VALUES", "EQUAL", "LESS_1", "NOTIN", "CAST", "CROSS", "FETCH", "FIRST", "FLOAT", "GROUP", "HOURS", "INNER", "LIMIT", "MINUS", "MONTH", "NULLS", "ORDER", "OUTER", "PIVOT", "RANGE", "RIGHT", "SHARD", "TABLE", "UNION", "USING", "WHERE", "LESS", "CASE", "DAYS", "DESC", "ELSE", "FROM", "FULL", "HOUR", "INTO", "JOIN", "JSON", "LAST", "LEFT", "LIKE", "LONG", "NOT_1", "NULL", "ONLY", "OVER", "ROWS", "SOME", "THEN", "TIES", "WEEK", "WHEN", "WITH", "YEAR", "LeftParenthesisPlusSignRightParenthesis", "ALL", "AND", "ANY", "ASC", "DAY", "END", "FOR", "KEY", "NOT", "ROW", "TOP", "TTL", "XML", "IN_1", "ExclamationMarkEqualsSign", "X", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AS", "BY", "IF", "IN", "IS", "ON", "OR", "CircumflexAccentEqualsSign", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "LessThanSign", "EqualsSign", "GreaterThanSign", "VerticalLine", "RightCurlyBracket", "RULE_JRPARAM", "RULE_JRNPARAM", "RULE_STAR", "RULE_UNSIGNED", "RULE_INT", "RULE_SIGNED_DOUBLE", "RULE_DATE", "RULE_TIME", "RULE_TIMESTAMP", "RULE_STRING_CORE", "RULE_STRING_", "RULE_STRING", "RULE_DBNAME", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LessThanSignGreaterThanSign=127;
    public static final int MONTH=70;
    public static final int CREATE=44;
    public static final int JOIN=91;
    public static final int BETWEEN=31;
    public static final int SHARD=77;
    public static final int LessThanSign=145;
    public static final int MINUS=69;
    public static final int LeftParenthesisPlusSignRightParenthesis=109;
    public static final int TABLE=78;
    public static final int WHEN=106;
    public static final int QUARTER=41;
    public static final int LeftParenthesis=138;
    public static final int YEAR=108;
    public static final int ELSE=86;
    public static final int RULE_TIME=157;
    public static final int HOUR_MINUTE=10;
    public static final int PARTITION=19;
    public static final int INCLUDE=36;
    public static final int IF=131;
    public static final int DAY_MINUTE=13;
    public static final int INNER=67;
    public static final int CAST=60;
    public static final int GreaterThanSign=147;
    public static final int LEFT=94;
    public static final int RULE_ID=163;
    public static final int IN=132;
    public static final int DISTINCT=27;
    public static final int IS=133;
    public static final int WHERE=81;
    public static final int CASE=83;
    public static final int GreaterThanSignEqualsSign=128;
    public static final int AS=129;
    public static final int RULE_DATE=156;
    public static final int TOP=120;
    public static final int VerticalLine=148;
    public static final int PlusSign=140;
    public static final int RULE_INT=154;
    public static final int RULE_ML_COMMENT=164;
    public static final int THEN=103;
    public static final int UNPIVOT=43;
    public static final int KEY=117;
    public static final int INTO=90;
    public static final int RULE_JRPARAM=150;
    public static final int MICROSECOND=12;
    public static final int VerticalLineVerticalLine=137;
    public static final int DAY_HOUR=26;
    public static final int DAYS=84;
    public static final int RULE_DBNAME=162;
    public static final int GROUP=65;
    public static final int ORDER=72;
    public static final int ASC=113;
    public static final int Comma=141;
    public static final int HyphenMinus=142;
    public static final int STRAIGHT_JOIN=9;
    public static final int REGIONS=42;
    public static final int BY=130;
    public static final int X=125;
    public static final int OFFSET=52;
    public static final int RIGHT=76;
    public static final int VALUES=56;
    public static final int DOUBLE=45;
    public static final int LessThanSignEqualsSign=126;
    public static final int Solidus=144;
    public static final int RightCurlyBracket=149;
    public static final int LONG=96;
    public static final int RULE_SIGNED_DOUBLE=155;
    public static final int FETCH=62;
    public static final int FullStop=143;
    public static final int RULE_UNSIGNED=153;
    public static final int SIBLINGS=28;
    public static final int GREATER=30;
    public static final int NOTIN=59;
    public static final int SECOND_MICROSECOND=5;
    public static final int FIRST=63;
    public static final int RULE_STRING_=160;
    public static final int SELECT=54;
    public static final int PRECEDING=20;
    public static final int RULE_JRNPARAM=151;
    public static final int PERCENT=39;
    public static final int STRING=55;
    public static final int ExclamationMarkEqualsSign=124;
    public static final int UNION=79;
    public static final int DAY=114;
    public static final int ALL=110;
    public static final int ONLY=99;
    public static final int FROM=87;
    public static final int DESC=85;
    public static final int MINUTE_MICROSECOND=4;
    public static final int UNBOUNDED=21;
    public static final int KW_FOLLOWING=17;
    public static final int MINUTE=50;
    public static final int RULE_STAR=152;
    public static final int HOUR_MICROSECOND=6;
    public static final int EXTRACT=35;
    public static final int INTEGER=37;
    public static final int NUMBER=51;
    public static final int NULL=98;
    public static final int DAY_MICROSECOND=7;
    public static final int LESS_1=58;
    public static final int FOR=116;
    public static final int RightParenthesis=139;
    public static final int PIVOT=74;
    public static final int EXCEPT=46;
    public static final int BOOLEAN=32;
    public static final int CURRENT=33;
    public static final int FULL=88;
    public static final int NOTEQUAL=23;
    public static final int USING=80;
    public static final int NOT=118;
    public static final int LIKE=95;
    public static final int LAST=93;
    public static final int IN_1=123;
    public static final int EXCLUDE=34;
    public static final int AND=111;
    public static final int CircumflexAccentEqualsSign=136;
    public static final int MINUTE_SECOND=8;
    public static final int YEAR_MONTH=15;
    public static final int INSERT=49;
    public static final int LESS=82;
    public static final int END=115;
    public static final int ROW=119;
    public static final int HAVING=48;
    public static final int DAY_SECOND=14;
    public static final int RANGE=75;
    public static final int FLOAT=64;
    public static final int TIES=104;
    public static final int HOUR=89;
    public static final int LIMIT=68;
    public static final int JSON=92;
    public static final int RULE_STRING=161;
    public static final int ANY=112;
    public static final int TTL=121;
    public static final int RULE_SL_COMMENT=165;
    public static final int NATURAL=38;
    public static final int EqualsSign=146;
    public static final int SOME=102;
    public static final int NOT_1=97;
    public static final int BETWEEN_2=22;
    public static final int GREATER_1=25;
    public static final int BETWEEN_1=29;
    public static final int OUTER=73;
    public static final int WEEK=105;
    public static final int EOF=-1;
    public static final int BETWEEN_4=16;
    public static final int NULLS=71;
    public static final int BETWEEN_3=24;
    public static final int ON=134;
    public static final int OR=135;
    public static final int EXISTS=47;
    public static final int RULE_WS=166;
    public static final int EQUAL=57;
    public static final int PRIMARY=40;
    public static final int RULE_ANY_OTHER=167;
    public static final int INTERSECT=18;
    public static final int WITH=107;
    public static final int OVER=100;
    public static final int HOURS=66;
    public static final int CROSS=61;
    public static final int XML=122;
    public static final int SECOND=53;
    public static final int RULE_STRING_CORE=159;
    public static final int HOUR_SECOND=11;
    public static final int RULE_TIMESTAMP=158;
    public static final int ROWS=101;

    // delegates
    // delegators


        public InternalSQLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSQLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSQLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSQLParser.g"; }


    	private SQLGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("VerticalLine", "'|'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
    		tokenNameToValue.put("X", "'\\u0024X'");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AS", "'AS'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("IN", "'IN'");
    		tokenNameToValue.put("IS", "'IS'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("CircumflexAccentEqualsSign", "'^='");
    		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
    		tokenNameToValue.put("LeftParenthesisPlusSignRightParenthesis", "'(+)'");
    		tokenNameToValue.put("ALL", "'ALL'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("ANY", "'ANY'");
    		tokenNameToValue.put("ASC", "'ASC'");
    		tokenNameToValue.put("DAY", "'DAY'");
    		tokenNameToValue.put("END", "'END'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("KEY", "'KEY'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("ROW", "'ROW'");
    		tokenNameToValue.put("TOP", "'TOP'");
    		tokenNameToValue.put("TTL", "'TTL'");
    		tokenNameToValue.put("XML", "'XML'");
    		tokenNameToValue.put("IN_1", "'{IN'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("DAYS", "'DAYS'");
    		tokenNameToValue.put("DESC", "'DESC'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("FULL", "'FULL'");
    		tokenNameToValue.put("HOUR", "'HOUR'");
    		tokenNameToValue.put("INTO", "'INTO'");
    		tokenNameToValue.put("JOIN", "'JOIN'");
    		tokenNameToValue.put("JSON", "'JSON'");
    		tokenNameToValue.put("LAST", "'LAST'");
    		tokenNameToValue.put("LEFT", "'LEFT'");
    		tokenNameToValue.put("LIKE", "'LIKE'");
    		tokenNameToValue.put("LONG", "'LONG'");
    		tokenNameToValue.put("NOT_1", "'NOT\n'");
    		tokenNameToValue.put("NULL", "'NULL'");
    		tokenNameToValue.put("ONLY", "'ONLY'");
    		tokenNameToValue.put("OVER", "'OVER'");
    		tokenNameToValue.put("ROWS", "'ROWS'");
    		tokenNameToValue.put("SOME", "'SOME'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TIES", "'TIES'");
    		tokenNameToValue.put("WEEK", "'WEEK'");
    		tokenNameToValue.put("WHEN", "'WHEN'");
    		tokenNameToValue.put("WITH", "'WITH'");
    		tokenNameToValue.put("YEAR", "'YEAR'");
    		tokenNameToValue.put("CAST", "'CAST('");
    		tokenNameToValue.put("CROSS", "'CROSS'");
    		tokenNameToValue.put("FETCH", "'FETCH'");
    		tokenNameToValue.put("FIRST", "'FIRST'");
    		tokenNameToValue.put("FLOAT", "'FLOAT'");
    		tokenNameToValue.put("GROUP", "'GROUP'");
    		tokenNameToValue.put("HOURS", "'HOURS'");
    		tokenNameToValue.put("INNER", "'INNER'");
    		tokenNameToValue.put("LIMIT", "'LIMIT'");
    		tokenNameToValue.put("MINUS", "'MINUS'");
    		tokenNameToValue.put("MONTH", "'MONTH'");
    		tokenNameToValue.put("NULLS", "'NULLS'");
    		tokenNameToValue.put("ORDER", "'ORDER'");
    		tokenNameToValue.put("OUTER", "'OUTER'");
    		tokenNameToValue.put("PIVOT", "'PIVOT'");
    		tokenNameToValue.put("RANGE", "'RANGE'");
    		tokenNameToValue.put("RIGHT", "'RIGHT'");
    		tokenNameToValue.put("SHARD", "'SHARD'");
    		tokenNameToValue.put("TABLE", "'TABLE'");
    		tokenNameToValue.put("UNION", "'UNION'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("WHERE", "'WHERE'");
    		tokenNameToValue.put("LESS", "'{LESS'");
    		tokenNameToValue.put("CREATE", "'CREATE'");
    		tokenNameToValue.put("DOUBLE", "'DOUBLE'");
    		tokenNameToValue.put("EXCEPT", "'EXCEPT'");
    		tokenNameToValue.put("EXISTS", "'EXISTS'");
    		tokenNameToValue.put("HAVING", "'HAVING'");
    		tokenNameToValue.put("INSERT", "'INSERT'");
    		tokenNameToValue.put("MINUTE", "'MINUTE'");
    		tokenNameToValue.put("NUMBER", "'NUMBER'");
    		tokenNameToValue.put("OFFSET", "'OFFSET'");
    		tokenNameToValue.put("SECOND", "'SECOND'");
    		tokenNameToValue.put("SELECT", "'SELECT'");
    		tokenNameToValue.put("STRING", "'STRING'");
    		tokenNameToValue.put("VALUES", "'VALUES'");
    		tokenNameToValue.put("EQUAL", "'{EQUAL'");
    		tokenNameToValue.put("LESS_1", "'{LESS]'");
    		tokenNameToValue.put("NOTIN", "'{NOTIN'");
    		tokenNameToValue.put("BETWEEN", "'BETWEEN'");
    		tokenNameToValue.put("BOOLEAN", "'BOOLEAN'");
    		tokenNameToValue.put("CURRENT", "'CURRENT'");
    		tokenNameToValue.put("EXCLUDE", "'EXCLUDE'");
    		tokenNameToValue.put("EXTRACT", "'EXTRACT'");
    		tokenNameToValue.put("INCLUDE", "'INCLUDE'");
    		tokenNameToValue.put("INTEGER", "'INTEGER'");
    		tokenNameToValue.put("NATURAL", "'NATURAL'");
    		tokenNameToValue.put("PERCENT", "'PERCENT'");
    		tokenNameToValue.put("PRIMARY", "'PRIMARY'");
    		tokenNameToValue.put("QUARTER", "'QUARTER'");
    		tokenNameToValue.put("REGIONS", "'REGIONS'");
    		tokenNameToValue.put("UNPIVOT", "'UNPIVOT'");
    		tokenNameToValue.put("DAY_HOUR", "'DAY_HOUR'");
    		tokenNameToValue.put("DISTINCT", "'DISTINCT'");
    		tokenNameToValue.put("SIBLINGS", "'SIBLINGS'");
    		tokenNameToValue.put("BETWEEN_1", "'{BETWEEN'");
    		tokenNameToValue.put("GREATER", "'{GREATER'");
    		tokenNameToValue.put("KW_FOLLOWING", "'FOLLOWING'");
    		tokenNameToValue.put("INTERSECT", "'INTERSECT'");
    		tokenNameToValue.put("PARTITION", "'PARTITION'");
    		tokenNameToValue.put("PRECEDING", "'PRECEDING'");
    		tokenNameToValue.put("UNBOUNDED", "'UNBOUNDED'");
    		tokenNameToValue.put("BETWEEN_2", "'{BETWEEN]'");
    		tokenNameToValue.put("NOTEQUAL", "'{NOTEQUAL'");
    		tokenNameToValue.put("BETWEEN_3", "'{[BETWEEN'");
    		tokenNameToValue.put("GREATER_1", "'{[GREATER'");
    		tokenNameToValue.put("DAY_MINUTE", "'DAY_MINUTE'");
    		tokenNameToValue.put("DAY_SECOND", "'DAY_SECOND'");
    		tokenNameToValue.put("YEAR_MONTH", "'YEAR_MONTH'");
    		tokenNameToValue.put("BETWEEN_4", "'{[BETWEEN]'");
    		tokenNameToValue.put("HOUR_MINUTE", "'HOUR_MINUTE'");
    		tokenNameToValue.put("HOUR_SECOND", "'HOUR_SECOND'");
    		tokenNameToValue.put("MICROSECOND", "'MICROSECOND'");
    		tokenNameToValue.put("MINUTE_SECOND", "'MINUTE_SECOND'");
    		tokenNameToValue.put("STRAIGHT_JOIN", "'STRAIGHT_JOIN'");
    		tokenNameToValue.put("DAY_MICROSECOND", "'DAY_MICROSECOND'");
    		tokenNameToValue.put("HOUR_MICROSECOND", "'HOUR_MICROSECOND'");
    		tokenNameToValue.put("MINUTE_MICROSECOND", "'MINUTE_MICROSECOND'");
    		tokenNameToValue.put("SECOND_MICROSECOND", "'SECOND_MICROSECOND'");
    	}

    	public void setGrammarAccess(SQLGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalSQLParser.g:202:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalSQLParser.g:203:1: ( ruleModel EOF )
            // InternalSQLParser.g:204:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalSQLParser.g:211:1: ruleModel : ( ( rule__Model__Group__0 ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:215:2: ( ( ( rule__Model__Group__0 ) ) )
            // InternalSQLParser.g:216:2: ( ( rule__Model__Group__0 ) )
            {
            // InternalSQLParser.g:216:2: ( ( rule__Model__Group__0 ) )
            // InternalSQLParser.g:217:3: ( rule__Model__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getGroup()); 
            }
            // InternalSQLParser.g:218:3: ( rule__Model__Group__0 )
            // InternalSQLParser.g:218:4: rule__Model__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleInsertStatement"
    // InternalSQLParser.g:227:1: entryRuleInsertStatement : ruleInsertStatement EOF ;
    public final void entryRuleInsertStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:228:1: ( ruleInsertStatement EOF )
            // InternalSQLParser.g:229:1: ruleInsertStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInsertStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInsertStatement"


    // $ANTLR start "ruleInsertStatement"
    // InternalSQLParser.g:236:1: ruleInsertStatement : ( ( rule__InsertStatement__Group__0 ) ) ;
    public final void ruleInsertStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:240:2: ( ( ( rule__InsertStatement__Group__0 ) ) )
            // InternalSQLParser.g:241:2: ( ( rule__InsertStatement__Group__0 ) )
            {
            // InternalSQLParser.g:241:2: ( ( rule__InsertStatement__Group__0 ) )
            // InternalSQLParser.g:242:3: ( rule__InsertStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getGroup()); 
            }
            // InternalSQLParser.g:243:3: ( rule__InsertStatement__Group__0 )
            // InternalSQLParser.g:243:4: rule__InsertStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInsertStatement"


    // $ANTLR start "entryRuleCreateTableStatement"
    // InternalSQLParser.g:252:1: entryRuleCreateTableStatement : ruleCreateTableStatement EOF ;
    public final void entryRuleCreateTableStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:253:1: ( ruleCreateTableStatement EOF )
            // InternalSQLParser.g:254:1: ruleCreateTableStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCreateTableStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCreateTableStatement"


    // $ANTLR start "ruleCreateTableStatement"
    // InternalSQLParser.g:261:1: ruleCreateTableStatement : ( ( rule__CreateTableStatement__Group__0 ) ) ;
    public final void ruleCreateTableStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:265:2: ( ( ( rule__CreateTableStatement__Group__0 ) ) )
            // InternalSQLParser.g:266:2: ( ( rule__CreateTableStatement__Group__0 ) )
            {
            // InternalSQLParser.g:266:2: ( ( rule__CreateTableStatement__Group__0 ) )
            // InternalSQLParser.g:267:3: ( rule__CreateTableStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getGroup()); 
            }
            // InternalSQLParser.g:268:3: ( rule__CreateTableStatement__Group__0 )
            // InternalSQLParser.g:268:4: rule__CreateTableStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCreateTableStatement"


    // $ANTLR start "entryRuleTableDefinition"
    // InternalSQLParser.g:277:1: entryRuleTableDefinition : ruleTableDefinition EOF ;
    public final void entryRuleTableDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:278:1: ( ruleTableDefinition EOF )
            // InternalSQLParser.g:279:1: ruleTableDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableDefinition"


    // $ANTLR start "ruleTableDefinition"
    // InternalSQLParser.g:286:1: ruleTableDefinition : ( ( rule__TableDefinition__Group__0 ) ) ;
    public final void ruleTableDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:290:2: ( ( ( rule__TableDefinition__Group__0 ) ) )
            // InternalSQLParser.g:291:2: ( ( rule__TableDefinition__Group__0 ) )
            {
            // InternalSQLParser.g:291:2: ( ( rule__TableDefinition__Group__0 ) )
            // InternalSQLParser.g:292:3: ( rule__TableDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionAccess().getGroup()); 
            }
            // InternalSQLParser.g:293:3: ( rule__TableDefinition__Group__0 )
            // InternalSQLParser.g:293:4: rule__TableDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableDefinition"


    // $ANTLR start "entryRuleColumnDefinition"
    // InternalSQLParser.g:302:1: entryRuleColumnDefinition : ruleColumnDefinition EOF ;
    public final void entryRuleColumnDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:303:1: ( ruleColumnDefinition EOF )
            // InternalSQLParser.g:304:1: ruleColumnDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnDefinition"


    // $ANTLR start "ruleColumnDefinition"
    // InternalSQLParser.g:311:1: ruleColumnDefinition : ( ( rule__ColumnDefinition__Group__0 ) ) ;
    public final void ruleColumnDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:315:2: ( ( ( rule__ColumnDefinition__Group__0 ) ) )
            // InternalSQLParser.g:316:2: ( ( rule__ColumnDefinition__Group__0 ) )
            {
            // InternalSQLParser.g:316:2: ( ( rule__ColumnDefinition__Group__0 ) )
            // InternalSQLParser.g:317:3: ( rule__ColumnDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getGroup()); 
            }
            // InternalSQLParser.g:318:3: ( rule__ColumnDefinition__Group__0 )
            // InternalSQLParser.g:318:4: rule__ColumnDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnDefinition"


    // $ANTLR start "entryRuleKeyDefinition"
    // InternalSQLParser.g:327:1: entryRuleKeyDefinition : ruleKeyDefinition EOF ;
    public final void entryRuleKeyDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:328:1: ( ruleKeyDefinition EOF )
            // InternalSQLParser.g:329:1: ruleKeyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleKeyDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleKeyDefinition"


    // $ANTLR start "ruleKeyDefinition"
    // InternalSQLParser.g:336:1: ruleKeyDefinition : ( ( rule__KeyDefinition__Group__0 ) ) ;
    public final void ruleKeyDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:340:2: ( ( ( rule__KeyDefinition__Group__0 ) ) )
            // InternalSQLParser.g:341:2: ( ( rule__KeyDefinition__Group__0 ) )
            {
            // InternalSQLParser.g:341:2: ( ( rule__KeyDefinition__Group__0 ) )
            // InternalSQLParser.g:342:3: ( rule__KeyDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getGroup()); 
            }
            // InternalSQLParser.g:343:3: ( rule__KeyDefinition__Group__0 )
            // InternalSQLParser.g:343:4: rule__KeyDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleKeyDefinition"


    // $ANTLR start "entryRuleIDListWithSize"
    // InternalSQLParser.g:352:1: entryRuleIDListWithSize : ruleIDListWithSize EOF ;
    public final void entryRuleIDListWithSize() throws RecognitionException {
        try {
            // InternalSQLParser.g:353:1: ( ruleIDListWithSize EOF )
            // InternalSQLParser.g:354:1: ruleIDListWithSize EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDListWithSizeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIDListWithSize();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDListWithSizeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIDListWithSize"


    // $ANTLR start "ruleIDListWithSize"
    // InternalSQLParser.g:361:1: ruleIDListWithSize : ( ( rule__IDListWithSize__Group__0 ) ) ;
    public final void ruleIDListWithSize() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:365:2: ( ( ( rule__IDListWithSize__Group__0 ) ) )
            // InternalSQLParser.g:366:2: ( ( rule__IDListWithSize__Group__0 ) )
            {
            // InternalSQLParser.g:366:2: ( ( rule__IDListWithSize__Group__0 ) )
            // InternalSQLParser.g:367:3: ( rule__IDListWithSize__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDListWithSizeAccess().getGroup()); 
            }
            // InternalSQLParser.g:368:3: ( rule__IDListWithSize__Group__0 )
            // InternalSQLParser.g:368:4: rule__IDListWithSize__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IDListWithSize__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDListWithSizeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIDListWithSize"


    // $ANTLR start "entryRuleIDWithSize"
    // InternalSQLParser.g:377:1: entryRuleIDWithSize : ruleIDWithSize EOF ;
    public final void entryRuleIDWithSize() throws RecognitionException {
        try {
            // InternalSQLParser.g:378:1: ( ruleIDWithSize EOF )
            // InternalSQLParser.g:379:1: ruleIDWithSize EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDWithSizeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIDWithSize();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDWithSizeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIDWithSize"


    // $ANTLR start "ruleIDWithSize"
    // InternalSQLParser.g:386:1: ruleIDWithSize : ( ( rule__IDWithSize__Group__0 ) ) ;
    public final void ruleIDWithSize() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:390:2: ( ( ( rule__IDWithSize__Group__0 ) ) )
            // InternalSQLParser.g:391:2: ( ( rule__IDWithSize__Group__0 ) )
            {
            // InternalSQLParser.g:391:2: ( ( rule__IDWithSize__Group__0 ) )
            // InternalSQLParser.g:392:3: ( rule__IDWithSize__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDWithSizeAccess().getGroup()); 
            }
            // InternalSQLParser.g:393:3: ( rule__IDWithSize__Group__0 )
            // InternalSQLParser.g:393:4: rule__IDWithSize__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IDWithSize__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDWithSizeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIDWithSize"


    // $ANTLR start "entryRuleStorageSize"
    // InternalSQLParser.g:402:1: entryRuleStorageSize : ruleStorageSize EOF ;
    public final void entryRuleStorageSize() throws RecognitionException {
        try {
            // InternalSQLParser.g:403:1: ( ruleStorageSize EOF )
            // InternalSQLParser.g:404:1: ruleStorageSize EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStorageSizeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStorageSize();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStorageSizeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStorageSize"


    // $ANTLR start "ruleStorageSize"
    // InternalSQLParser.g:411:1: ruleStorageSize : ( ( rule__StorageSize__Group__0 ) ) ;
    public final void ruleStorageSize() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:415:2: ( ( ( rule__StorageSize__Group__0 ) ) )
            // InternalSQLParser.g:416:2: ( ( rule__StorageSize__Group__0 ) )
            {
            // InternalSQLParser.g:416:2: ( ( rule__StorageSize__Group__0 ) )
            // InternalSQLParser.g:417:3: ( rule__StorageSize__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStorageSizeAccess().getGroup()); 
            }
            // InternalSQLParser.g:418:3: ( rule__StorageSize__Group__0 )
            // InternalSQLParser.g:418:4: rule__StorageSize__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__StorageSize__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStorageSizeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStorageSize"


    // $ANTLR start "entryRuleShardKeyDefinition"
    // InternalSQLParser.g:427:1: entryRuleShardKeyDefinition : ruleShardKeyDefinition EOF ;
    public final void entryRuleShardKeyDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:428:1: ( ruleShardKeyDefinition EOF )
            // InternalSQLParser.g:429:1: ruleShardKeyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShardKeyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleShardKeyDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShardKeyDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleShardKeyDefinition"


    // $ANTLR start "ruleShardKeyDefinition"
    // InternalSQLParser.g:436:1: ruleShardKeyDefinition : ( ( rule__ShardKeyDefinition__Group__0 ) ) ;
    public final void ruleShardKeyDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:440:2: ( ( ( rule__ShardKeyDefinition__Group__0 ) ) )
            // InternalSQLParser.g:441:2: ( ( rule__ShardKeyDefinition__Group__0 ) )
            {
            // InternalSQLParser.g:441:2: ( ( rule__ShardKeyDefinition__Group__0 ) )
            // InternalSQLParser.g:442:3: ( rule__ShardKeyDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShardKeyDefinitionAccess().getGroup()); 
            }
            // InternalSQLParser.g:443:3: ( rule__ShardKeyDefinition__Group__0 )
            // InternalSQLParser.g:443:4: rule__ShardKeyDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ShardKeyDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShardKeyDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleShardKeyDefinition"


    // $ANTLR start "entryRuleTtlDefinition"
    // InternalSQLParser.g:452:1: entryRuleTtlDefinition : ruleTtlDefinition EOF ;
    public final void entryRuleTtlDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:453:1: ( ruleTtlDefinition EOF )
            // InternalSQLParser.g:454:1: ruleTtlDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTtlDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTtlDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTtlDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTtlDefinition"


    // $ANTLR start "ruleTtlDefinition"
    // InternalSQLParser.g:461:1: ruleTtlDefinition : ( ( rule__TtlDefinition__Group__0 ) ) ;
    public final void ruleTtlDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:465:2: ( ( ( rule__TtlDefinition__Group__0 ) ) )
            // InternalSQLParser.g:466:2: ( ( rule__TtlDefinition__Group__0 ) )
            {
            // InternalSQLParser.g:466:2: ( ( rule__TtlDefinition__Group__0 ) )
            // InternalSQLParser.g:467:3: ( rule__TtlDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTtlDefinitionAccess().getGroup()); 
            }
            // InternalSQLParser.g:468:3: ( rule__TtlDefinition__Group__0 )
            // InternalSQLParser.g:468:4: rule__TtlDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TtlDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTtlDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTtlDefinition"


    // $ANTLR start "entryRuleTypeDefinition"
    // InternalSQLParser.g:477:1: entryRuleTypeDefinition : ruleTypeDefinition EOF ;
    public final void entryRuleTypeDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:478:1: ( ruleTypeDefinition EOF )
            // InternalSQLParser.g:479:1: ruleTypeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTypeDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeDefinition"


    // $ANTLR start "ruleTypeDefinition"
    // InternalSQLParser.g:486:1: ruleTypeDefinition : ( ( rule__TypeDefinition__Alternatives ) ) ;
    public final void ruleTypeDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:490:2: ( ( ( rule__TypeDefinition__Alternatives ) ) )
            // InternalSQLParser.g:491:2: ( ( rule__TypeDefinition__Alternatives ) )
            {
            // InternalSQLParser.g:491:2: ( ( rule__TypeDefinition__Alternatives ) )
            // InternalSQLParser.g:492:3: ( rule__TypeDefinition__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeDefinitionAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:493:3: ( rule__TypeDefinition__Alternatives )
            // InternalSQLParser.g:493:4: rule__TypeDefinition__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TypeDefinition__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeDefinitionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeDefinition"


    // $ANTLR start "entryRuleWithQuery"
    // InternalSQLParser.g:502:1: entryRuleWithQuery : ruleWithQuery EOF ;
    public final void entryRuleWithQuery() throws RecognitionException {
        try {
            // InternalSQLParser.g:503:1: ( ruleWithQuery EOF )
            // InternalSQLParser.g:504:1: ruleWithQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithQuery"


    // $ANTLR start "ruleWithQuery"
    // InternalSQLParser.g:511:1: ruleWithQuery : ( ( rule__WithQuery__Group__0 ) ) ;
    public final void ruleWithQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:515:2: ( ( ( rule__WithQuery__Group__0 ) ) )
            // InternalSQLParser.g:516:2: ( ( rule__WithQuery__Group__0 ) )
            {
            // InternalSQLParser.g:516:2: ( ( rule__WithQuery__Group__0 ) )
            // InternalSQLParser.g:517:3: ( rule__WithQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup()); 
            }
            // InternalSQLParser.g:518:3: ( rule__WithQuery__Group__0 )
            // InternalSQLParser.g:518:4: rule__WithQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithQuery"


    // $ANTLR start "entryRuleWithColumns"
    // InternalSQLParser.g:527:1: entryRuleWithColumns : ruleWithColumns EOF ;
    public final void entryRuleWithColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:528:1: ( ruleWithColumns EOF )
            // InternalSQLParser.g:529:1: ruleWithColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithColumns"


    // $ANTLR start "ruleWithColumns"
    // InternalSQLParser.g:536:1: ruleWithColumns : ( ( rule__WithColumns__Group__0 ) ) ;
    public final void ruleWithColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:540:2: ( ( ( rule__WithColumns__Group__0 ) ) )
            // InternalSQLParser.g:541:2: ( ( rule__WithColumns__Group__0 ) )
            {
            // InternalSQLParser.g:541:2: ( ( rule__WithColumns__Group__0 ) )
            // InternalSQLParser.g:542:3: ( rule__WithColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:543:3: ( rule__WithColumns__Group__0 )
            // InternalSQLParser.g:543:4: rule__WithColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithColumns"


    // $ANTLR start "entryRuleFetchFirst"
    // InternalSQLParser.g:552:1: entryRuleFetchFirst : ruleFetchFirst EOF ;
    public final void entryRuleFetchFirst() throws RecognitionException {
        try {
            // InternalSQLParser.g:553:1: ( ruleFetchFirst EOF )
            // InternalSQLParser.g:554:1: ruleFetchFirst EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFetchFirst"


    // $ANTLR start "ruleFetchFirst"
    // InternalSQLParser.g:561:1: ruleFetchFirst : ( ( rule__FetchFirst__Group__0 ) ) ;
    public final void ruleFetchFirst() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:565:2: ( ( ( rule__FetchFirst__Group__0 ) ) )
            // InternalSQLParser.g:566:2: ( ( rule__FetchFirst__Group__0 ) )
            {
            // InternalSQLParser.g:566:2: ( ( rule__FetchFirst__Group__0 ) )
            // InternalSQLParser.g:567:3: ( rule__FetchFirst__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getGroup()); 
            }
            // InternalSQLParser.g:568:3: ( rule__FetchFirst__Group__0 )
            // InternalSQLParser.g:568:4: rule__FetchFirst__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFetchFirst"


    // $ANTLR start "entryRuleOffset"
    // InternalSQLParser.g:577:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // InternalSQLParser.g:578:1: ( ruleOffset EOF )
            // InternalSQLParser.g:579:1: ruleOffset EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // InternalSQLParser.g:586:1: ruleOffset : ( ( rule__Offset__OffsetAssignment ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:590:2: ( ( ( rule__Offset__OffsetAssignment ) ) )
            // InternalSQLParser.g:591:2: ( ( rule__Offset__OffsetAssignment ) )
            {
            // InternalSQLParser.g:591:2: ( ( rule__Offset__OffsetAssignment ) )
            // InternalSQLParser.g:592:3: ( rule__Offset__OffsetAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }
            // InternalSQLParser.g:593:3: ( rule__Offset__OffsetAssignment )
            // InternalSQLParser.g:593:4: rule__Offset__OffsetAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Offset__OffsetAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleLimit"
    // InternalSQLParser.g:602:1: entryRuleLimit : ruleLimit EOF ;
    public final void entryRuleLimit() throws RecognitionException {
        try {
            // InternalSQLParser.g:603:1: ( ruleLimit EOF )
            // InternalSQLParser.g:604:1: ruleLimit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLimit"


    // $ANTLR start "ruleLimit"
    // InternalSQLParser.g:611:1: ruleLimit : ( ( rule__Limit__Alternatives ) ) ;
    public final void ruleLimit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:615:2: ( ( ( rule__Limit__Alternatives ) ) )
            // InternalSQLParser.g:616:2: ( ( rule__Limit__Alternatives ) )
            {
            // InternalSQLParser.g:616:2: ( ( rule__Limit__Alternatives ) )
            // InternalSQLParser.g:617:3: ( rule__Limit__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:618:3: ( rule__Limit__Alternatives )
            // InternalSQLParser.g:618:4: rule__Limit__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLimit"


    // $ANTLR start "entryRuleSelectQuery"
    // InternalSQLParser.g:627:1: entryRuleSelectQuery : ruleSelectQuery EOF ;
    public final void entryRuleSelectQuery() throws RecognitionException {
        try {
            // InternalSQLParser.g:628:1: ( ruleSelectQuery EOF )
            // InternalSQLParser.g:629:1: ruleSelectQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectQuery"


    // $ANTLR start "ruleSelectQuery"
    // InternalSQLParser.g:636:1: ruleSelectQuery : ( ( rule__SelectQuery__Group__0 ) ) ;
    public final void ruleSelectQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:640:2: ( ( ( rule__SelectQuery__Group__0 ) ) )
            // InternalSQLParser.g:641:2: ( ( rule__SelectQuery__Group__0 ) )
            {
            // InternalSQLParser.g:641:2: ( ( rule__SelectQuery__Group__0 ) )
            // InternalSQLParser.g:642:3: ( rule__SelectQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getGroup()); 
            }
            // InternalSQLParser.g:643:3: ( rule__SelectQuery__Group__0 )
            // InternalSQLParser.g:643:4: rule__SelectQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectQuery"


    // $ANTLR start "entryRuleSelectSubSet"
    // InternalSQLParser.g:652:1: entryRuleSelectSubSet : ruleSelectSubSet EOF ;
    public final void entryRuleSelectSubSet() throws RecognitionException {
        try {
            // InternalSQLParser.g:653:1: ( ruleSelectSubSet EOF )
            // InternalSQLParser.g:654:1: ruleSelectSubSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectSubSet"


    // $ANTLR start "ruleSelectSubSet"
    // InternalSQLParser.g:661:1: ruleSelectSubSet : ( ( rule__SelectSubSet__Group__0 ) ) ;
    public final void ruleSelectSubSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:665:2: ( ( ( rule__SelectSubSet__Group__0 ) ) )
            // InternalSQLParser.g:666:2: ( ( rule__SelectSubSet__Group__0 ) )
            {
            // InternalSQLParser.g:666:2: ( ( rule__SelectSubSet__Group__0 ) )
            // InternalSQLParser.g:667:3: ( rule__SelectSubSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }
            // InternalSQLParser.g:668:3: ( rule__SelectSubSet__Group__0 )
            // InternalSQLParser.g:668:4: rule__SelectSubSet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectSubSet"


    // $ANTLR start "entryRuleSelect"
    // InternalSQLParser.g:677:1: entryRuleSelect : ruleSelect EOF ;
    public final void entryRuleSelect() throws RecognitionException {
        try {
            // InternalSQLParser.g:678:1: ( ruleSelect EOF )
            // InternalSQLParser.g:679:1: ruleSelect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelect"


    // $ANTLR start "ruleSelect"
    // InternalSQLParser.g:686:1: ruleSelect : ( ( rule__Select__Group__0 ) ) ;
    public final void ruleSelect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:690:2: ( ( ( rule__Select__Group__0 ) ) )
            // InternalSQLParser.g:691:2: ( ( rule__Select__Group__0 ) )
            {
            // InternalSQLParser.g:691:2: ( ( rule__Select__Group__0 ) )
            // InternalSQLParser.g:692:3: ( rule__Select__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup()); 
            }
            // InternalSQLParser.g:693:3: ( rule__Select__Group__0 )
            // InternalSQLParser.g:693:4: rule__Select__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelect"


    // $ANTLR start "entryRuleColumns"
    // InternalSQLParser.g:702:1: entryRuleColumns : ruleColumns EOF ;
    public final void entryRuleColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:703:1: ( ruleColumns EOF )
            // InternalSQLParser.g:704:1: ruleColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumns"


    // $ANTLR start "ruleColumns"
    // InternalSQLParser.g:711:1: ruleColumns : ( ( rule__Columns__Group__0 ) ) ;
    public final void ruleColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:715:2: ( ( ( rule__Columns__Group__0 ) ) )
            // InternalSQLParser.g:716:2: ( ( rule__Columns__Group__0 ) )
            {
            // InternalSQLParser.g:716:2: ( ( rule__Columns__Group__0 ) )
            // InternalSQLParser.g:717:3: ( rule__Columns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:718:3: ( rule__Columns__Group__0 )
            // InternalSQLParser.g:718:4: rule__Columns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumns"


    // $ANTLR start "entryRuleColumnOrAlias"
    // InternalSQLParser.g:727:1: entryRuleColumnOrAlias : ruleColumnOrAlias EOF ;
    public final void entryRuleColumnOrAlias() throws RecognitionException {
        try {
            // InternalSQLParser.g:728:1: ( ruleColumnOrAlias EOF )
            // InternalSQLParser.g:729:1: ruleColumnOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOrAlias"


    // $ANTLR start "ruleColumnOrAlias"
    // InternalSQLParser.g:736:1: ruleColumnOrAlias : ( ( rule__ColumnOrAlias__Alternatives ) ) ;
    public final void ruleColumnOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:740:2: ( ( ( rule__ColumnOrAlias__Alternatives ) ) )
            // InternalSQLParser.g:741:2: ( ( rule__ColumnOrAlias__Alternatives ) )
            {
            // InternalSQLParser.g:741:2: ( ( rule__ColumnOrAlias__Alternatives ) )
            // InternalSQLParser.g:742:3: ( rule__ColumnOrAlias__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:743:3: ( rule__ColumnOrAlias__Alternatives )
            // InternalSQLParser.g:743:4: rule__ColumnOrAlias__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOrAlias"


    // $ANTLR start "entryRuleColumnFull"
    // InternalSQLParser.g:752:1: entryRuleColumnFull : ruleColumnFull EOF ;
    public final void entryRuleColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:753:1: ( ruleColumnFull EOF )
            // InternalSQLParser.g:754:1: ruleColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnFull"


    // $ANTLR start "ruleColumnFull"
    // InternalSQLParser.g:761:1: ruleColumnFull : ( ( rule__ColumnFull__Group__0 ) ) ;
    public final void ruleColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:765:2: ( ( ( rule__ColumnFull__Group__0 ) ) )
            // InternalSQLParser.g:766:2: ( ( rule__ColumnFull__Group__0 ) )
            {
            // InternalSQLParser.g:766:2: ( ( rule__ColumnFull__Group__0 ) )
            // InternalSQLParser.g:767:3: ( rule__ColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:768:3: ( rule__ColumnFull__Group__0 )
            // InternalSQLParser.g:768:4: rule__ColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnFull"


    // $ANTLR start "entryRuleTables"
    // InternalSQLParser.g:777:1: entryRuleTables : ruleTables EOF ;
    public final void entryRuleTables() throws RecognitionException {
        try {
            // InternalSQLParser.g:778:1: ( ruleTables EOF )
            // InternalSQLParser.g:779:1: ruleTables EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTables"


    // $ANTLR start "ruleTables"
    // InternalSQLParser.g:786:1: ruleTables : ( ( rule__Tables__Group__0 ) ) ;
    public final void ruleTables() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:790:2: ( ( ( rule__Tables__Group__0 ) ) )
            // InternalSQLParser.g:791:2: ( ( rule__Tables__Group__0 ) )
            {
            // InternalSQLParser.g:791:2: ( ( rule__Tables__Group__0 ) )
            // InternalSQLParser.g:792:3: ( rule__Tables__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup()); 
            }
            // InternalSQLParser.g:793:3: ( rule__Tables__Group__0 )
            // InternalSQLParser.g:793:4: rule__Tables__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTables"


    // $ANTLR start "entryRuleFromTable"
    // InternalSQLParser.g:802:1: entryRuleFromTable : ruleFromTable EOF ;
    public final void entryRuleFromTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:803:1: ( ruleFromTable EOF )
            // InternalSQLParser.g:804:1: ruleFromTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTable"


    // $ANTLR start "ruleFromTable"
    // InternalSQLParser.g:811:1: ruleFromTable : ( ( rule__FromTable__Group__0 ) ) ;
    public final void ruleFromTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:815:2: ( ( ( rule__FromTable__Group__0 ) ) )
            // InternalSQLParser.g:816:2: ( ( rule__FromTable__Group__0 ) )
            {
            // InternalSQLParser.g:816:2: ( ( rule__FromTable__Group__0 ) )
            // InternalSQLParser.g:817:3: ( rule__FromTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:818:3: ( rule__FromTable__Group__0 )
            // InternalSQLParser.g:818:4: rule__FromTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTable"


    // $ANTLR start "entryRuleFromTableJoin"
    // InternalSQLParser.g:827:1: entryRuleFromTableJoin : ruleFromTableJoin EOF ;
    public final void entryRuleFromTableJoin() throws RecognitionException {
        try {
            // InternalSQLParser.g:828:1: ( ruleFromTableJoin EOF )
            // InternalSQLParser.g:829:1: ruleFromTableJoin EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTableJoin"


    // $ANTLR start "ruleFromTableJoin"
    // InternalSQLParser.g:836:1: ruleFromTableJoin : ( ( rule__FromTableJoin__Group__0 ) ) ;
    public final void ruleFromTableJoin() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:840:2: ( ( ( rule__FromTableJoin__Group__0 ) ) )
            // InternalSQLParser.g:841:2: ( ( rule__FromTableJoin__Group__0 ) )
            {
            // InternalSQLParser.g:841:2: ( ( rule__FromTableJoin__Group__0 ) )
            // InternalSQLParser.g:842:3: ( rule__FromTableJoin__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }
            // InternalSQLParser.g:843:3: ( rule__FromTableJoin__Group__0 )
            // InternalSQLParser.g:843:4: rule__FromTableJoin__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTableJoin"


    // $ANTLR start "entryRuleJoinCondition"
    // InternalSQLParser.g:852:1: entryRuleJoinCondition : ruleJoinCondition EOF ;
    public final void entryRuleJoinCondition() throws RecognitionException {
        try {
            // InternalSQLParser.g:853:1: ( ruleJoinCondition EOF )
            // InternalSQLParser.g:854:1: ruleJoinCondition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinCondition"


    // $ANTLR start "ruleJoinCondition"
    // InternalSQLParser.g:861:1: ruleJoinCondition : ( ( rule__JoinCondition__Group__0 ) ) ;
    public final void ruleJoinCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:865:2: ( ( ( rule__JoinCondition__Group__0 ) ) )
            // InternalSQLParser.g:866:2: ( ( rule__JoinCondition__Group__0 ) )
            {
            // InternalSQLParser.g:866:2: ( ( rule__JoinCondition__Group__0 ) )
            // InternalSQLParser.g:867:3: ( rule__JoinCondition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getGroup()); 
            }
            // InternalSQLParser.g:868:3: ( rule__JoinCondition__Group__0 )
            // InternalSQLParser.g:868:4: rule__JoinCondition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinCondition"


    // $ANTLR start "entryRuleUsingCols"
    // InternalSQLParser.g:877:1: entryRuleUsingCols : ruleUsingCols EOF ;
    public final void entryRuleUsingCols() throws RecognitionException {
        try {
            // InternalSQLParser.g:878:1: ( ruleUsingCols EOF )
            // InternalSQLParser.g:879:1: ruleUsingCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUsingCols"


    // $ANTLR start "ruleUsingCols"
    // InternalSQLParser.g:886:1: ruleUsingCols : ( ( rule__UsingCols__Group__0 ) ) ;
    public final void ruleUsingCols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:890:2: ( ( ( rule__UsingCols__Group__0 ) ) )
            // InternalSQLParser.g:891:2: ( ( rule__UsingCols__Group__0 ) )
            {
            // InternalSQLParser.g:891:2: ( ( rule__UsingCols__Group__0 ) )
            // InternalSQLParser.g:892:3: ( rule__UsingCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup()); 
            }
            // InternalSQLParser.g:893:3: ( rule__UsingCols__Group__0 )
            // InternalSQLParser.g:893:4: rule__UsingCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUsingCols"


    // $ANTLR start "entryRuleTableOrAlias"
    // InternalSQLParser.g:902:1: entryRuleTableOrAlias : ruleTableOrAlias EOF ;
    public final void entryRuleTableOrAlias() throws RecognitionException {
        try {
            // InternalSQLParser.g:903:1: ( ruleTableOrAlias EOF )
            // InternalSQLParser.g:904:1: ruleTableOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableOrAlias"


    // $ANTLR start "ruleTableOrAlias"
    // InternalSQLParser.g:911:1: ruleTableOrAlias : ( ( rule__TableOrAlias__Group__0 ) ) ;
    public final void ruleTableOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:915:2: ( ( ( rule__TableOrAlias__Group__0 ) ) )
            // InternalSQLParser.g:916:2: ( ( rule__TableOrAlias__Group__0 ) )
            {
            // InternalSQLParser.g:916:2: ( ( rule__TableOrAlias__Group__0 ) )
            // InternalSQLParser.g:917:3: ( rule__TableOrAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }
            // InternalSQLParser.g:918:3: ( rule__TableOrAlias__Group__0 )
            // InternalSQLParser.g:918:4: rule__TableOrAlias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableOrAlias"


    // $ANTLR start "entryRuleFromValues"
    // InternalSQLParser.g:927:1: entryRuleFromValues : ruleFromValues EOF ;
    public final void entryRuleFromValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:928:1: ( ruleFromValues EOF )
            // InternalSQLParser.g:929:1: ruleFromValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValues"


    // $ANTLR start "ruleFromValues"
    // InternalSQLParser.g:936:1: ruleFromValues : ( ( rule__FromValues__Group__0 ) ) ;
    public final void ruleFromValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:940:2: ( ( ( rule__FromValues__Group__0 ) ) )
            // InternalSQLParser.g:941:2: ( ( rule__FromValues__Group__0 ) )
            {
            // InternalSQLParser.g:941:2: ( ( rule__FromValues__Group__0 ) )
            // InternalSQLParser.g:942:3: ( rule__FromValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:943:3: ( rule__FromValues__Group__0 )
            // InternalSQLParser.g:943:4: rule__FromValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValues"


    // $ANTLR start "entryRuleFromValuesColumns"
    // InternalSQLParser.g:952:1: entryRuleFromValuesColumns : ruleFromValuesColumns EOF ;
    public final void entryRuleFromValuesColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:953:1: ( ruleFromValuesColumns EOF )
            // InternalSQLParser.g:954:1: ruleFromValuesColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumns"


    // $ANTLR start "ruleFromValuesColumns"
    // InternalSQLParser.g:961:1: ruleFromValuesColumns : ( ( rule__FromValuesColumns__Group__0 ) ) ;
    public final void ruleFromValuesColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:965:2: ( ( ( rule__FromValuesColumns__Group__0 ) ) )
            // InternalSQLParser.g:966:2: ( ( rule__FromValuesColumns__Group__0 ) )
            {
            // InternalSQLParser.g:966:2: ( ( rule__FromValuesColumns__Group__0 ) )
            // InternalSQLParser.g:967:3: ( rule__FromValuesColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:968:3: ( rule__FromValuesColumns__Group__0 )
            // InternalSQLParser.g:968:4: rule__FromValuesColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumns"


    // $ANTLR start "entryRuleFromValuesColumnNames"
    // InternalSQLParser.g:977:1: entryRuleFromValuesColumnNames : ruleFromValuesColumnNames EOF ;
    public final void entryRuleFromValuesColumnNames() throws RecognitionException {
        try {
            // InternalSQLParser.g:978:1: ( ruleFromValuesColumnNames EOF )
            // InternalSQLParser.g:979:1: ruleFromValuesColumnNames EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumnNames"


    // $ANTLR start "ruleFromValuesColumnNames"
    // InternalSQLParser.g:986:1: ruleFromValuesColumnNames : ( ( rule__FromValuesColumnNames__Group__0 ) ) ;
    public final void ruleFromValuesColumnNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:990:2: ( ( ( rule__FromValuesColumnNames__Group__0 ) ) )
            // InternalSQLParser.g:991:2: ( ( rule__FromValuesColumnNames__Group__0 ) )
            {
            // InternalSQLParser.g:991:2: ( ( rule__FromValuesColumnNames__Group__0 ) )
            // InternalSQLParser.g:992:3: ( rule__FromValuesColumnNames__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }
            // InternalSQLParser.g:993:3: ( rule__FromValuesColumnNames__Group__0 )
            // InternalSQLParser.g:993:4: rule__FromValuesColumnNames__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumnNames"


    // $ANTLR start "entryRuleColumnName"
    // InternalSQLParser.g:1002:1: entryRuleColumnName : ruleColumnName EOF ;
    public final void entryRuleColumnName() throws RecognitionException {
        try {
            // InternalSQLParser.g:1003:1: ( ruleColumnName EOF )
            // InternalSQLParser.g:1004:1: ruleColumnName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnName"


    // $ANTLR start "ruleColumnName"
    // InternalSQLParser.g:1011:1: ruleColumnName : ( ( rule__ColumnName__ColNameAssignment ) ) ;
    public final void ruleColumnName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1015:2: ( ( ( rule__ColumnName__ColNameAssignment ) ) )
            // InternalSQLParser.g:1016:2: ( ( rule__ColumnName__ColNameAssignment ) )
            {
            // InternalSQLParser.g:1016:2: ( ( rule__ColumnName__ColNameAssignment ) )
            // InternalSQLParser.g:1017:3: ( rule__ColumnName__ColNameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }
            // InternalSQLParser.g:1018:3: ( rule__ColumnName__ColNameAssignment )
            // InternalSQLParser.g:1018:4: rule__ColumnName__ColNameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ColumnName__ColNameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnName"


    // $ANTLR start "entryRuleValues"
    // InternalSQLParser.g:1027:1: entryRuleValues : ruleValues EOF ;
    public final void entryRuleValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:1028:1: ( ruleValues EOF )
            // InternalSQLParser.g:1029:1: ruleValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValues"


    // $ANTLR start "ruleValues"
    // InternalSQLParser.g:1036:1: ruleValues : ( ( rule__Values__Group__0 ) ) ;
    public final void ruleValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1040:2: ( ( ( rule__Values__Group__0 ) ) )
            // InternalSQLParser.g:1041:2: ( ( rule__Values__Group__0 ) )
            {
            // InternalSQLParser.g:1041:2: ( ( rule__Values__Group__0 ) )
            // InternalSQLParser.g:1042:3: ( rule__Values__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1043:3: ( rule__Values__Group__0 )
            // InternalSQLParser.g:1043:4: rule__Values__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValues"


    // $ANTLR start "entryRuleRows"
    // InternalSQLParser.g:1052:1: entryRuleRows : ruleRows EOF ;
    public final void entryRuleRows() throws RecognitionException {
        try {
            // InternalSQLParser.g:1053:1: ( ruleRows EOF )
            // InternalSQLParser.g:1054:1: ruleRows EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRows"


    // $ANTLR start "ruleRows"
    // InternalSQLParser.g:1061:1: ruleRows : ( ( rule__Rows__Group__0 ) ) ;
    public final void ruleRows() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1065:2: ( ( ( rule__Rows__Group__0 ) ) )
            // InternalSQLParser.g:1066:2: ( ( rule__Rows__Group__0 ) )
            {
            // InternalSQLParser.g:1066:2: ( ( rule__Rows__Group__0 ) )
            // InternalSQLParser.g:1067:3: ( rule__Rows__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1068:3: ( rule__Rows__Group__0 )
            // InternalSQLParser.g:1068:4: rule__Rows__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRows"


    // $ANTLR start "entryRuleRow"
    // InternalSQLParser.g:1077:1: entryRuleRow : ruleRow EOF ;
    public final void entryRuleRow() throws RecognitionException {
        try {
            // InternalSQLParser.g:1078:1: ( ruleRow EOF )
            // InternalSQLParser.g:1079:1: ruleRow EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRow"


    // $ANTLR start "ruleRow"
    // InternalSQLParser.g:1086:1: ruleRow : ( ( rule__Row__Group__0 ) ) ;
    public final void ruleRow() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1090:2: ( ( ( rule__Row__Group__0 ) ) )
            // InternalSQLParser.g:1091:2: ( ( rule__Row__Group__0 ) )
            {
            // InternalSQLParser.g:1091:2: ( ( rule__Row__Group__0 ) )
            // InternalSQLParser.g:1092:3: ( rule__Row__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getGroup()); 
            }
            // InternalSQLParser.g:1093:3: ( rule__Row__Group__0 )
            // InternalSQLParser.g:1093:4: rule__Row__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRow"


    // $ANTLR start "entryRuleRowValues"
    // InternalSQLParser.g:1102:1: entryRuleRowValues : ruleRowValues EOF ;
    public final void entryRuleRowValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:1103:1: ( ruleRowValues EOF )
            // InternalSQLParser.g:1104:1: ruleRowValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValues"


    // $ANTLR start "ruleRowValues"
    // InternalSQLParser.g:1111:1: ruleRowValues : ( ( rule__RowValues__Group__0 ) ) ;
    public final void ruleRowValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1115:2: ( ( ( rule__RowValues__Group__0 ) ) )
            // InternalSQLParser.g:1116:2: ( ( rule__RowValues__Group__0 ) )
            {
            // InternalSQLParser.g:1116:2: ( ( rule__RowValues__Group__0 ) )
            // InternalSQLParser.g:1117:3: ( rule__RowValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1118:3: ( rule__RowValues__Group__0 )
            // InternalSQLParser.g:1118:4: rule__RowValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValues"


    // $ANTLR start "entryRuleRowValue"
    // InternalSQLParser.g:1127:1: entryRuleRowValue : ruleRowValue EOF ;
    public final void entryRuleRowValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1128:1: ( ruleRowValue EOF )
            // InternalSQLParser.g:1129:1: ruleRowValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValue"


    // $ANTLR start "ruleRowValue"
    // InternalSQLParser.g:1136:1: ruleRowValue : ( ( rule__RowValue__Alternatives ) ) ;
    public final void ruleRowValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1140:2: ( ( ( rule__RowValue__Alternatives ) ) )
            // InternalSQLParser.g:1141:2: ( ( rule__RowValue__Alternatives ) )
            {
            // InternalSQLParser.g:1141:2: ( ( rule__RowValue__Alternatives ) )
            // InternalSQLParser.g:1142:3: ( rule__RowValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1143:3: ( rule__RowValue__Alternatives )
            // InternalSQLParser.g:1143:4: rule__RowValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RowValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValue"


    // $ANTLR start "entryRulePivotTable"
    // InternalSQLParser.g:1152:1: entryRulePivotTable : rulePivotTable EOF ;
    public final void entryRulePivotTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:1153:1: ( rulePivotTable EOF )
            // InternalSQLParser.g:1154:1: rulePivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotTable"


    // $ANTLR start "rulePivotTable"
    // InternalSQLParser.g:1161:1: rulePivotTable : ( ( rule__PivotTable__Group__0 ) ) ;
    public final void rulePivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1165:2: ( ( ( rule__PivotTable__Group__0 ) ) )
            // InternalSQLParser.g:1166:2: ( ( rule__PivotTable__Group__0 ) )
            {
            // InternalSQLParser.g:1166:2: ( ( rule__PivotTable__Group__0 ) )
            // InternalSQLParser.g:1167:3: ( rule__PivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:1168:3: ( rule__PivotTable__Group__0 )
            // InternalSQLParser.g:1168:4: rule__PivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotTable"


    // $ANTLR start "entryRulePivotFunctions"
    // InternalSQLParser.g:1177:1: entryRulePivotFunctions : rulePivotFunctions EOF ;
    public final void entryRulePivotFunctions() throws RecognitionException {
        try {
            // InternalSQLParser.g:1178:1: ( rulePivotFunctions EOF )
            // InternalSQLParser.g:1179:1: rulePivotFunctions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotFunctions"


    // $ANTLR start "rulePivotFunctions"
    // InternalSQLParser.g:1186:1: rulePivotFunctions : ( ( rule__PivotFunctions__AbcAssignment ) ) ;
    public final void rulePivotFunctions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1190:2: ( ( ( rule__PivotFunctions__AbcAssignment ) ) )
            // InternalSQLParser.g:1191:2: ( ( rule__PivotFunctions__AbcAssignment ) )
            {
            // InternalSQLParser.g:1191:2: ( ( rule__PivotFunctions__AbcAssignment ) )
            // InternalSQLParser.g:1192:3: ( rule__PivotFunctions__AbcAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }
            // InternalSQLParser.g:1193:3: ( rule__PivotFunctions__AbcAssignment )
            // InternalSQLParser.g:1193:4: rule__PivotFunctions__AbcAssignment
            {
            pushFollow(FOLLOW_2);
            rule__PivotFunctions__AbcAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotFunctions"


    // $ANTLR start "entryRulePivotInClause"
    // InternalSQLParser.g:1202:1: entryRulePivotInClause : rulePivotInClause EOF ;
    public final void entryRulePivotInClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1203:1: ( rulePivotInClause EOF )
            // InternalSQLParser.g:1204:1: rulePivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClause"


    // $ANTLR start "rulePivotInClause"
    // InternalSQLParser.g:1211:1: rulePivotInClause : ( ( rule__PivotInClause__Group__0 ) ) ;
    public final void rulePivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1215:2: ( ( ( rule__PivotInClause__Group__0 ) ) )
            // InternalSQLParser.g:1216:2: ( ( rule__PivotInClause__Group__0 ) )
            {
            // InternalSQLParser.g:1216:2: ( ( rule__PivotInClause__Group__0 ) )
            // InternalSQLParser.g:1217:3: ( rule__PivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1218:3: ( rule__PivotInClause__Group__0 )
            // InternalSQLParser.g:1218:4: rule__PivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClause"


    // $ANTLR start "entryRulePivotInClauseAny"
    // InternalSQLParser.g:1227:1: entryRulePivotInClauseAny : rulePivotInClauseAny EOF ;
    public final void entryRulePivotInClauseAny() throws RecognitionException {
        try {
            // InternalSQLParser.g:1228:1: ( rulePivotInClauseAny EOF )
            // InternalSQLParser.g:1229:1: rulePivotInClauseAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClauseAny"


    // $ANTLR start "rulePivotInClauseAny"
    // InternalSQLParser.g:1236:1: rulePivotInClauseAny : ( ( rule__PivotInClauseAny__Group__0 ) ) ;
    public final void rulePivotInClauseAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1240:2: ( ( ( rule__PivotInClauseAny__Group__0 ) ) )
            // InternalSQLParser.g:1241:2: ( ( rule__PivotInClauseAny__Group__0 ) )
            {
            // InternalSQLParser.g:1241:2: ( ( rule__PivotInClauseAny__Group__0 ) )
            // InternalSQLParser.g:1242:3: ( rule__PivotInClauseAny__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }
            // InternalSQLParser.g:1243:3: ( rule__PivotInClauseAny__Group__0 )
            // InternalSQLParser.g:1243:4: rule__PivotInClauseAny__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClauseAny"


    // $ANTLR start "entryRuleUnpivotTable"
    // InternalSQLParser.g:1252:1: entryRuleUnpivotTable : ruleUnpivotTable EOF ;
    public final void entryRuleUnpivotTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:1253:1: ( ruleUnpivotTable EOF )
            // InternalSQLParser.g:1254:1: ruleUnpivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotTable"


    // $ANTLR start "ruleUnpivotTable"
    // InternalSQLParser.g:1261:1: ruleUnpivotTable : ( ( rule__UnpivotTable__Group__0 ) ) ;
    public final void ruleUnpivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1265:2: ( ( ( rule__UnpivotTable__Group__0 ) ) )
            // InternalSQLParser.g:1266:2: ( ( rule__UnpivotTable__Group__0 ) )
            {
            // InternalSQLParser.g:1266:2: ( ( rule__UnpivotTable__Group__0 ) )
            // InternalSQLParser.g:1267:3: ( rule__UnpivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:1268:3: ( rule__UnpivotTable__Group__0 )
            // InternalSQLParser.g:1268:4: rule__UnpivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotTable"


    // $ANTLR start "entryRuleUnpivotInClause"
    // InternalSQLParser.g:1277:1: entryRuleUnpivotInClause : ruleUnpivotInClause EOF ;
    public final void entryRuleUnpivotInClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1278:1: ( ruleUnpivotInClause EOF )
            // InternalSQLParser.g:1279:1: ruleUnpivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClause"


    // $ANTLR start "ruleUnpivotInClause"
    // InternalSQLParser.g:1286:1: ruleUnpivotInClause : ( ( rule__UnpivotInClause__Group__0 ) ) ;
    public final void ruleUnpivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1290:2: ( ( ( rule__UnpivotInClause__Group__0 ) ) )
            // InternalSQLParser.g:1291:2: ( ( rule__UnpivotInClause__Group__0 ) )
            {
            // InternalSQLParser.g:1291:2: ( ( rule__UnpivotInClause__Group__0 ) )
            // InternalSQLParser.g:1292:3: ( rule__UnpivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1293:3: ( rule__UnpivotInClause__Group__0 )
            // InternalSQLParser.g:1293:4: rule__UnpivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClause"


    // $ANTLR start "entryRuleUnpivotInClauseArgs"
    // InternalSQLParser.g:1302:1: entryRuleUnpivotInClauseArgs : ruleUnpivotInClauseArgs EOF ;
    public final void entryRuleUnpivotInClauseArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:1303:1: ( ruleUnpivotInClauseArgs EOF )
            // InternalSQLParser.g:1304:1: ruleUnpivotInClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArgs"


    // $ANTLR start "ruleUnpivotInClauseArgs"
    // InternalSQLParser.g:1311:1: ruleUnpivotInClauseArgs : ( ( rule__UnpivotInClauseArgs__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1315:2: ( ( ( rule__UnpivotInClauseArgs__Group__0 ) ) )
            // InternalSQLParser.g:1316:2: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            {
            // InternalSQLParser.g:1316:2: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            // InternalSQLParser.g:1317:3: ( rule__UnpivotInClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1318:3: ( rule__UnpivotInClauseArgs__Group__0 )
            // InternalSQLParser.g:1318:4: rule__UnpivotInClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArgs"


    // $ANTLR start "entryRuleUnpivotInClauseArg"
    // InternalSQLParser.g:1327:1: entryRuleUnpivotInClauseArg : ruleUnpivotInClauseArg EOF ;
    public final void entryRuleUnpivotInClauseArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:1328:1: ( ruleUnpivotInClauseArg EOF )
            // InternalSQLParser.g:1329:1: ruleUnpivotInClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArg"


    // $ANTLR start "ruleUnpivotInClauseArg"
    // InternalSQLParser.g:1336:1: ruleUnpivotInClauseArg : ( ( rule__UnpivotInClauseArg__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1340:2: ( ( ( rule__UnpivotInClauseArg__Group__0 ) ) )
            // InternalSQLParser.g:1341:2: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            {
            // InternalSQLParser.g:1341:2: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            // InternalSQLParser.g:1342:3: ( rule__UnpivotInClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:1343:3: ( rule__UnpivotInClauseArg__Group__0 )
            // InternalSQLParser.g:1343:4: rule__UnpivotInClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArg"


    // $ANTLR start "entryRulePivotForClause"
    // InternalSQLParser.g:1352:1: entryRulePivotForClause : rulePivotForClause EOF ;
    public final void entryRulePivotForClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1353:1: ( rulePivotForClause EOF )
            // InternalSQLParser.g:1354:1: rulePivotForClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotForClause"


    // $ANTLR start "rulePivotForClause"
    // InternalSQLParser.g:1361:1: rulePivotForClause : ( ( rule__PivotForClause__Group__0 ) ) ;
    public final void rulePivotForClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1365:2: ( ( ( rule__PivotForClause__Group__0 ) ) )
            // InternalSQLParser.g:1366:2: ( ( rule__PivotForClause__Group__0 ) )
            {
            // InternalSQLParser.g:1366:2: ( ( rule__PivotForClause__Group__0 ) )
            // InternalSQLParser.g:1367:3: ( rule__PivotForClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1368:3: ( rule__PivotForClause__Group__0 )
            // InternalSQLParser.g:1368:4: rule__PivotForClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotForClause"


    // $ANTLR start "entryRulePivotColumns"
    // InternalSQLParser.g:1377:1: entryRulePivotColumns : rulePivotColumns EOF ;
    public final void entryRulePivotColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1378:1: ( rulePivotColumns EOF )
            // InternalSQLParser.g:1379:1: rulePivotColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotColumns"


    // $ANTLR start "rulePivotColumns"
    // InternalSQLParser.g:1386:1: rulePivotColumns : ( ( rule__PivotColumns__Alternatives ) ) ;
    public final void rulePivotColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1390:2: ( ( ( rule__PivotColumns__Alternatives ) ) )
            // InternalSQLParser.g:1391:2: ( ( rule__PivotColumns__Alternatives ) )
            {
            // InternalSQLParser.g:1391:2: ( ( rule__PivotColumns__Alternatives ) )
            // InternalSQLParser.g:1392:3: ( rule__PivotColumns__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1393:3: ( rule__PivotColumns__Alternatives )
            // InternalSQLParser.g:1393:4: rule__PivotColumns__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotColumns"


    // $ANTLR start "entryRulePivotCols"
    // InternalSQLParser.g:1402:1: entryRulePivotCols : rulePivotCols EOF ;
    public final void entryRulePivotCols() throws RecognitionException {
        try {
            // InternalSQLParser.g:1403:1: ( rulePivotCols EOF )
            // InternalSQLParser.g:1404:1: rulePivotCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCols"


    // $ANTLR start "rulePivotCols"
    // InternalSQLParser.g:1411:1: rulePivotCols : ( ( rule__PivotCols__Group__0 ) ) ;
    public final void rulePivotCols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1415:2: ( ( ( rule__PivotCols__Group__0 ) ) )
            // InternalSQLParser.g:1416:2: ( ( rule__PivotCols__Group__0 ) )
            {
            // InternalSQLParser.g:1416:2: ( ( rule__PivotCols__Group__0 ) )
            // InternalSQLParser.g:1417:3: ( rule__PivotCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1418:3: ( rule__PivotCols__Group__0 )
            // InternalSQLParser.g:1418:4: rule__PivotCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCols"


    // $ANTLR start "entryRulePivotCol"
    // InternalSQLParser.g:1427:1: entryRulePivotCol : rulePivotCol EOF ;
    public final void entryRulePivotCol() throws RecognitionException {
        try {
            // InternalSQLParser.g:1428:1: ( rulePivotCol EOF )
            // InternalSQLParser.g:1429:1: rulePivotCol EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCol"


    // $ANTLR start "rulePivotCol"
    // InternalSQLParser.g:1436:1: rulePivotCol : ( ( rule__PivotCol__Group__0 ) ) ;
    public final void rulePivotCol() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1440:2: ( ( ( rule__PivotCol__Group__0 ) ) )
            // InternalSQLParser.g:1441:2: ( ( rule__PivotCol__Group__0 ) )
            {
            // InternalSQLParser.g:1441:2: ( ( rule__PivotCol__Group__0 ) )
            // InternalSQLParser.g:1442:3: ( rule__PivotCol__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup()); 
            }
            // InternalSQLParser.g:1443:3: ( rule__PivotCol__Group__0 )
            // InternalSQLParser.g:1443:4: rule__PivotCol__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCol"


    // $ANTLR start "entryRuleTableFull"
    // InternalSQLParser.g:1452:1: entryRuleTableFull : ruleTableFull EOF ;
    public final void entryRuleTableFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1453:1: ( ruleTableFull EOF )
            // InternalSQLParser.g:1454:1: ruleTableFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableFull"


    // $ANTLR start "ruleTableFull"
    // InternalSQLParser.g:1461:1: ruleTableFull : ( ( rule__TableFull__Group__0 ) ) ;
    public final void ruleTableFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1465:2: ( ( ( rule__TableFull__Group__0 ) ) )
            // InternalSQLParser.g:1466:2: ( ( rule__TableFull__Group__0 ) )
            {
            // InternalSQLParser.g:1466:2: ( ( rule__TableFull__Group__0 ) )
            // InternalSQLParser.g:1467:3: ( rule__TableFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:1468:3: ( rule__TableFull__Group__0 )
            // InternalSQLParser.g:1468:4: rule__TableFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableFull"


    // $ANTLR start "entryRuleDbObjectNameAll"
    // InternalSQLParser.g:1477:1: entryRuleDbObjectNameAll : ruleDbObjectNameAll EOF ;
    public final void entryRuleDbObjectNameAll() throws RecognitionException {
        try {
            // InternalSQLParser.g:1478:1: ( ruleDbObjectNameAll EOF )
            // InternalSQLParser.g:1479:1: ruleDbObjectNameAll EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectNameAll"


    // $ANTLR start "ruleDbObjectNameAll"
    // InternalSQLParser.g:1486:1: ruleDbObjectNameAll : ( ( rule__DbObjectNameAll__Group__0 ) ) ;
    public final void ruleDbObjectNameAll() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1490:2: ( ( ( rule__DbObjectNameAll__Group__0 ) ) )
            // InternalSQLParser.g:1491:2: ( ( rule__DbObjectNameAll__Group__0 ) )
            {
            // InternalSQLParser.g:1491:2: ( ( rule__DbObjectNameAll__Group__0 ) )
            // InternalSQLParser.g:1492:3: ( rule__DbObjectNameAll__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }
            // InternalSQLParser.g:1493:3: ( rule__DbObjectNameAll__Group__0 )
            // InternalSQLParser.g:1493:4: rule__DbObjectNameAll__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectNameAll"


    // $ANTLR start "entryRuleDbObjectName"
    // InternalSQLParser.g:1502:1: entryRuleDbObjectName : ruleDbObjectName EOF ;
    public final void entryRuleDbObjectName() throws RecognitionException {
        try {
            // InternalSQLParser.g:1503:1: ( ruleDbObjectName EOF )
            // InternalSQLParser.g:1504:1: ruleDbObjectName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectName"


    // $ANTLR start "ruleDbObjectName"
    // InternalSQLParser.g:1511:1: ruleDbObjectName : ( ( rule__DbObjectName__DbnameAssignment ) ) ;
    public final void ruleDbObjectName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1515:2: ( ( ( rule__DbObjectName__DbnameAssignment ) ) )
            // InternalSQLParser.g:1516:2: ( ( rule__DbObjectName__DbnameAssignment ) )
            {
            // InternalSQLParser.g:1516:2: ( ( rule__DbObjectName__DbnameAssignment ) )
            // InternalSQLParser.g:1517:3: ( rule__DbObjectName__DbnameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }
            // InternalSQLParser.g:1518:3: ( rule__DbObjectName__DbnameAssignment )
            // InternalSQLParser.g:1518:4: rule__DbObjectName__DbnameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectName__DbnameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectName"


    // $ANTLR start "entryRuleOrderByColumns"
    // InternalSQLParser.g:1527:1: entryRuleOrderByColumns : ruleOrderByColumns EOF ;
    public final void entryRuleOrderByColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1528:1: ( ruleOrderByColumns EOF )
            // InternalSQLParser.g:1529:1: ruleOrderByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumns"


    // $ANTLR start "ruleOrderByColumns"
    // InternalSQLParser.g:1536:1: ruleOrderByColumns : ( ( rule__OrderByColumns__Group__0 ) ) ;
    public final void ruleOrderByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1540:2: ( ( ( rule__OrderByColumns__Group__0 ) ) )
            // InternalSQLParser.g:1541:2: ( ( rule__OrderByColumns__Group__0 ) )
            {
            // InternalSQLParser.g:1541:2: ( ( rule__OrderByColumns__Group__0 ) )
            // InternalSQLParser.g:1542:3: ( rule__OrderByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1543:3: ( rule__OrderByColumns__Group__0 )
            // InternalSQLParser.g:1543:4: rule__OrderByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumns"


    // $ANTLR start "entryRuleOrderByColumnFull"
    // InternalSQLParser.g:1552:1: entryRuleOrderByColumnFull : ruleOrderByColumnFull EOF ;
    public final void entryRuleOrderByColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1553:1: ( ruleOrderByColumnFull EOF )
            // InternalSQLParser.g:1554:1: ruleOrderByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumnFull"


    // $ANTLR start "ruleOrderByColumnFull"
    // InternalSQLParser.g:1561:1: ruleOrderByColumnFull : ( ( rule__OrderByColumnFull__Group__0 ) ) ;
    public final void ruleOrderByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1565:2: ( ( ( rule__OrderByColumnFull__Group__0 ) ) )
            // InternalSQLParser.g:1566:2: ( ( rule__OrderByColumnFull__Group__0 ) )
            {
            // InternalSQLParser.g:1566:2: ( ( rule__OrderByColumnFull__Group__0 ) )
            // InternalSQLParser.g:1567:3: ( rule__OrderByColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:1568:3: ( rule__OrderByColumnFull__Group__0 )
            // InternalSQLParser.g:1568:4: rule__OrderByColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumnFull"


    // $ANTLR start "entryRuleGroupByColumns"
    // InternalSQLParser.g:1577:1: entryRuleGroupByColumns : ruleGroupByColumns EOF ;
    public final void entryRuleGroupByColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1578:1: ( ruleGroupByColumns EOF )
            // InternalSQLParser.g:1579:1: ruleGroupByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumns"


    // $ANTLR start "ruleGroupByColumns"
    // InternalSQLParser.g:1586:1: ruleGroupByColumns : ( ( rule__GroupByColumns__Group__0 ) ) ;
    public final void ruleGroupByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1590:2: ( ( ( rule__GroupByColumns__Group__0 ) ) )
            // InternalSQLParser.g:1591:2: ( ( rule__GroupByColumns__Group__0 ) )
            {
            // InternalSQLParser.g:1591:2: ( ( rule__GroupByColumns__Group__0 ) )
            // InternalSQLParser.g:1592:3: ( rule__GroupByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1593:3: ( rule__GroupByColumns__Group__0 )
            // InternalSQLParser.g:1593:4: rule__GroupByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumns"


    // $ANTLR start "entryRuleGroupByColumnFull"
    // InternalSQLParser.g:1602:1: entryRuleGroupByColumnFull : ruleGroupByColumnFull EOF ;
    public final void entryRuleGroupByColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1603:1: ( ruleGroupByColumnFull EOF )
            // InternalSQLParser.g:1604:1: ruleGroupByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumnFull"


    // $ANTLR start "ruleGroupByColumnFull"
    // InternalSQLParser.g:1611:1: ruleGroupByColumnFull : ( ( rule__GroupByColumnFull__Alternatives ) ) ;
    public final void ruleGroupByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1615:2: ( ( ( rule__GroupByColumnFull__Alternatives ) ) )
            // InternalSQLParser.g:1616:2: ( ( rule__GroupByColumnFull__Alternatives ) )
            {
            // InternalSQLParser.g:1616:2: ( ( rule__GroupByColumnFull__Alternatives ) )
            // InternalSQLParser.g:1617:3: ( rule__GroupByColumnFull__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1618:3: ( rule__GroupByColumnFull__Alternatives )
            // InternalSQLParser.g:1618:4: rule__GroupByColumnFull__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumnFull__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumnFull"


    // $ANTLR start "entryRuleFullExpression"
    // InternalSQLParser.g:1627:1: entryRuleFullExpression : ruleFullExpression EOF ;
    public final void entryRuleFullExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:1628:1: ( ruleFullExpression EOF )
            // InternalSQLParser.g:1629:1: ruleFullExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFullExpression"


    // $ANTLR start "ruleFullExpression"
    // InternalSQLParser.g:1636:1: ruleFullExpression : ( ( rule__FullExpression__Group__0 ) ) ;
    public final void ruleFullExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1640:2: ( ( ( rule__FullExpression__Group__0 ) ) )
            // InternalSQLParser.g:1641:2: ( ( rule__FullExpression__Group__0 ) )
            {
            // InternalSQLParser.g:1641:2: ( ( rule__FullExpression__Group__0 ) )
            // InternalSQLParser.g:1642:3: ( rule__FullExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1643:3: ( rule__FullExpression__Group__0 )
            // InternalSQLParser.g:1643:4: rule__FullExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFullExpression"


    // $ANTLR start "entryRuleExpressionFragmentSecond"
    // InternalSQLParser.g:1652:1: entryRuleExpressionFragmentSecond : ruleExpressionFragmentSecond EOF ;
    public final void entryRuleExpressionFragmentSecond() throws RecognitionException {
        try {
            // InternalSQLParser.g:1653:1: ( ruleExpressionFragmentSecond EOF )
            // InternalSQLParser.g:1654:1: ruleExpressionFragmentSecond EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragmentSecond"


    // $ANTLR start "ruleExpressionFragmentSecond"
    // InternalSQLParser.g:1661:1: ruleExpressionFragmentSecond : ( ( rule__ExpressionFragmentSecond__Alternatives ) ) ;
    public final void ruleExpressionFragmentSecond() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1665:2: ( ( ( rule__ExpressionFragmentSecond__Alternatives ) ) )
            // InternalSQLParser.g:1666:2: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            {
            // InternalSQLParser.g:1666:2: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            // InternalSQLParser.g:1667:3: ( rule__ExpressionFragmentSecond__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1668:3: ( rule__ExpressionFragmentSecond__Alternatives )
            // InternalSQLParser.g:1668:4: rule__ExpressionFragmentSecond__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragmentSecond"


    // $ANTLR start "entryRuleExpressionFragment"
    // InternalSQLParser.g:1677:1: entryRuleExpressionFragment : ruleExpressionFragment EOF ;
    public final void entryRuleExpressionFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:1678:1: ( ruleExpressionFragment EOF )
            // InternalSQLParser.g:1679:1: ruleExpressionFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragment"


    // $ANTLR start "ruleExpressionFragment"
    // InternalSQLParser.g:1686:1: ruleExpressionFragment : ( ( rule__ExpressionFragment__Alternatives ) ) ;
    public final void ruleExpressionFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1690:2: ( ( ( rule__ExpressionFragment__Alternatives ) ) )
            // InternalSQLParser.g:1691:2: ( ( rule__ExpressionFragment__Alternatives ) )
            {
            // InternalSQLParser.g:1691:2: ( ( rule__ExpressionFragment__Alternatives ) )
            // InternalSQLParser.g:1692:3: ( rule__ExpressionFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1693:3: ( rule__ExpressionFragment__Alternatives )
            // InternalSQLParser.g:1693:4: rule__ExpressionFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragment"


    // $ANTLR start "entryRuleExpressionGroup"
    // InternalSQLParser.g:1702:1: entryRuleExpressionGroup : ruleExpressionGroup EOF ;
    public final void entryRuleExpressionGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:1703:1: ( ruleExpressionGroup EOF )
            // InternalSQLParser.g:1704:1: ruleExpressionGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionGroup"


    // $ANTLR start "ruleExpressionGroup"
    // InternalSQLParser.g:1711:1: ruleExpressionGroup : ( ( rule__ExpressionGroup__Group__0 ) ) ;
    public final void ruleExpressionGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1715:2: ( ( ( rule__ExpressionGroup__Group__0 ) ) )
            // InternalSQLParser.g:1716:2: ( ( rule__ExpressionGroup__Group__0 ) )
            {
            // InternalSQLParser.g:1716:2: ( ( rule__ExpressionGroup__Group__0 ) )
            // InternalSQLParser.g:1717:3: ( rule__ExpressionGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }
            // InternalSQLParser.g:1718:3: ( rule__ExpressionGroup__Group__0 )
            // InternalSQLParser.g:1718:4: rule__ExpressionGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionGroup"


    // $ANTLR start "entryRuleXExpression"
    // InternalSQLParser.g:1727:1: entryRuleXExpression : ruleXExpression EOF ;
    public final void entryRuleXExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:1728:1: ( ruleXExpression EOF )
            // InternalSQLParser.g:1729:1: ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalSQLParser.g:1736:1: ruleXExpression : ( ( rule__XExpression__Group__0 ) ) ;
    public final void ruleXExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1740:2: ( ( ( rule__XExpression__Group__0 ) ) )
            // InternalSQLParser.g:1741:2: ( ( rule__XExpression__Group__0 ) )
            {
            // InternalSQLParser.g:1741:2: ( ( rule__XExpression__Group__0 ) )
            // InternalSQLParser.g:1742:3: ( rule__XExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1743:3: ( rule__XExpression__Group__0 )
            // InternalSQLParser.g:1743:4: rule__XExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXExpression_"
    // InternalSQLParser.g:1752:1: entryRuleXExpression_ : ruleXExpression_ EOF ;
    public final void entryRuleXExpression_() throws RecognitionException {
        try {
            // InternalSQLParser.g:1753:1: ( ruleXExpression_ EOF )
            // InternalSQLParser.g:1754:1: ruleXExpression_ EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Rule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Rule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression_"


    // $ANTLR start "ruleXExpression_"
    // InternalSQLParser.g:1761:1: ruleXExpression_ : ( ( rule__XExpression___Group__0 ) ) ;
    public final void ruleXExpression_() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1765:2: ( ( ( rule__XExpression___Group__0 ) ) )
            // InternalSQLParser.g:1766:2: ( ( rule__XExpression___Group__0 ) )
            {
            // InternalSQLParser.g:1766:2: ( ( rule__XExpression___Group__0 ) )
            // InternalSQLParser.g:1767:3: ( rule__XExpression___Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup()); 
            }
            // InternalSQLParser.g:1768:3: ( rule__XExpression___Group__0 )
            // InternalSQLParser.g:1768:4: rule__XExpression___Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression_"


    // $ANTLR start "entryRuleXExpressionParams"
    // InternalSQLParser.g:1777:1: entryRuleXExpressionParams : ruleXExpressionParams EOF ;
    public final void entryRuleXExpressionParams() throws RecognitionException {
        try {
            // InternalSQLParser.g:1778:1: ( ruleXExpressionParams EOF )
            // InternalSQLParser.g:1779:1: ruleXExpressionParams EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionParams"


    // $ANTLR start "ruleXExpressionParams"
    // InternalSQLParser.g:1786:1: ruleXExpressionParams : ( ( rule__XExpressionParams__Group__0 ) ) ;
    public final void ruleXExpressionParams() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1790:2: ( ( ( rule__XExpressionParams__Group__0 ) ) )
            // InternalSQLParser.g:1791:2: ( ( rule__XExpressionParams__Group__0 ) )
            {
            // InternalSQLParser.g:1791:2: ( ( rule__XExpressionParams__Group__0 ) )
            // InternalSQLParser.g:1792:3: ( rule__XExpressionParams__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1793:3: ( rule__XExpressionParams__Group__0 )
            // InternalSQLParser.g:1793:4: rule__XExpressionParams__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpressionParams"


    // $ANTLR start "entryRuleJRParameter"
    // InternalSQLParser.g:1802:1: entryRuleJRParameter : ruleJRParameter EOF ;
    public final void entryRuleJRParameter() throws RecognitionException {
        try {
            // InternalSQLParser.g:1803:1: ( ruleJRParameter EOF )
            // InternalSQLParser.g:1804:1: ruleJRParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJRParameter"


    // $ANTLR start "ruleJRParameter"
    // InternalSQLParser.g:1811:1: ruleJRParameter : ( ( rule__JRParameter__JrprmAssignment ) ) ;
    public final void ruleJRParameter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1815:2: ( ( ( rule__JRParameter__JrprmAssignment ) ) )
            // InternalSQLParser.g:1816:2: ( ( rule__JRParameter__JrprmAssignment ) )
            {
            // InternalSQLParser.g:1816:2: ( ( rule__JRParameter__JrprmAssignment ) )
            // InternalSQLParser.g:1817:3: ( rule__JRParameter__JrprmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }
            // InternalSQLParser.g:1818:3: ( rule__JRParameter__JrprmAssignment )
            // InternalSQLParser.g:1818:4: rule__JRParameter__JrprmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__JRParameter__JrprmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJRParameter"


    // $ANTLR start "entryRuleExpression"
    // InternalSQLParser.g:1827:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:1828:1: ( ruleExpression EOF )
            // InternalSQLParser.g:1829:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSQLParser.g:1836:1: ruleExpression : ( ( rule__Expression__Group__0 ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1840:2: ( ( ( rule__Expression__Group__0 ) ) )
            // InternalSQLParser.g:1841:2: ( ( rule__Expression__Group__0 ) )
            {
            // InternalSQLParser.g:1841:2: ( ( rule__Expression__Group__0 ) )
            // InternalSQLParser.g:1842:3: ( rule__Expression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1843:3: ( rule__Expression__Group__0 )
            // InternalSQLParser.g:1843:4: rule__Expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleIsNullValue"
    // InternalSQLParser.g:1852:1: entryRuleIsNullValue : ruleIsNullValue EOF ;
    public final void entryRuleIsNullValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1853:1: ( ruleIsNullValue EOF )
            // InternalSQLParser.g:1854:1: ruleIsNullValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsNullValue"


    // $ANTLR start "ruleIsNullValue"
    // InternalSQLParser.g:1861:1: ruleIsNullValue : ( ( rule__IsNullValue__Group__0 ) ) ;
    public final void ruleIsNullValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1865:2: ( ( ( rule__IsNullValue__Group__0 ) ) )
            // InternalSQLParser.g:1866:2: ( ( rule__IsNullValue__Group__0 ) )
            {
            // InternalSQLParser.g:1866:2: ( ( rule__IsNullValue__Group__0 ) )
            // InternalSQLParser.g:1867:3: ( rule__IsNullValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:1868:3: ( rule__IsNullValue__Group__0 )
            // InternalSQLParser.g:1868:4: rule__IsNullValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsNullValue"


    // $ANTLR start "entryRuleComparison"
    // InternalSQLParser.g:1877:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalSQLParser.g:1878:1: ( ruleComparison EOF )
            // InternalSQLParser.g:1879:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalSQLParser.g:1886:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1890:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalSQLParser.g:1891:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalSQLParser.g:1891:2: ( ( rule__Comparison__Group__0 ) )
            // InternalSQLParser.g:1892:3: ( rule__Comparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup()); 
            }
            // InternalSQLParser.g:1893:3: ( rule__Comparison__Group__0 )
            // InternalSQLParser.g:1893:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleLike"
    // InternalSQLParser.g:1902:1: entryRuleLike : ruleLike EOF ;
    public final void entryRuleLike() throws RecognitionException {
        try {
            // InternalSQLParser.g:1903:1: ( ruleLike EOF )
            // InternalSQLParser.g:1904:1: ruleLike EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLike"


    // $ANTLR start "ruleLike"
    // InternalSQLParser.g:1911:1: ruleLike : ( ( rule__Like__Group__0 ) ) ;
    public final void ruleLike() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1915:2: ( ( ( rule__Like__Group__0 ) ) )
            // InternalSQLParser.g:1916:2: ( ( rule__Like__Group__0 ) )
            {
            // InternalSQLParser.g:1916:2: ( ( rule__Like__Group__0 ) )
            // InternalSQLParser.g:1917:3: ( rule__Like__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getGroup()); 
            }
            // InternalSQLParser.g:1918:3: ( rule__Like__Group__0 )
            // InternalSQLParser.g:1918:4: rule__Like__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLike"


    // $ANTLR start "entryRuleLikeValue"
    // InternalSQLParser.g:1927:1: entryRuleLikeValue : ruleLikeValue EOF ;
    public final void entryRuleLikeValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1928:1: ( ruleLikeValue EOF )
            // InternalSQLParser.g:1929:1: ruleLikeValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeValue"


    // $ANTLR start "ruleLikeValue"
    // InternalSQLParser.g:1936:1: ruleLikeValue : ( ( rule__LikeValue__Group__0 ) ) ;
    public final void ruleLikeValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1940:2: ( ( ( rule__LikeValue__Group__0 ) ) )
            // InternalSQLParser.g:1941:2: ( ( rule__LikeValue__Group__0 ) )
            {
            // InternalSQLParser.g:1941:2: ( ( rule__LikeValue__Group__0 ) )
            // InternalSQLParser.g:1942:3: ( rule__LikeValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:1943:3: ( rule__LikeValue__Group__0 )
            // InternalSQLParser.g:1943:4: rule__LikeValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeValue"


    // $ANTLR start "entryRuleLikeOperand"
    // InternalSQLParser.g:1952:1: entryRuleLikeOperand : ruleLikeOperand EOF ;
    public final void entryRuleLikeOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:1953:1: ( ruleLikeOperand EOF )
            // InternalSQLParser.g:1954:1: ruleLikeOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeOperand"


    // $ANTLR start "ruleLikeOperand"
    // InternalSQLParser.g:1961:1: ruleLikeOperand : ( ( rule__LikeOperand__Alternatives ) ) ;
    public final void ruleLikeOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1965:2: ( ( ( rule__LikeOperand__Alternatives ) ) )
            // InternalSQLParser.g:1966:2: ( ( rule__LikeOperand__Alternatives ) )
            {
            // InternalSQLParser.g:1966:2: ( ( rule__LikeOperand__Alternatives ) )
            // InternalSQLParser.g:1967:3: ( rule__LikeOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1968:3: ( rule__LikeOperand__Alternatives )
            // InternalSQLParser.g:1968:4: rule__LikeOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LikeOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeOperand"


    // $ANTLR start "entryRuleBetween"
    // InternalSQLParser.g:1977:1: entryRuleBetween : ruleBetween EOF ;
    public final void entryRuleBetween() throws RecognitionException {
        try {
            // InternalSQLParser.g:1978:1: ( ruleBetween EOF )
            // InternalSQLParser.g:1979:1: ruleBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetween"


    // $ANTLR start "ruleBetween"
    // InternalSQLParser.g:1986:1: ruleBetween : ( ( rule__Between__Group__0 ) ) ;
    public final void ruleBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1990:2: ( ( ( rule__Between__Group__0 ) ) )
            // InternalSQLParser.g:1991:2: ( ( rule__Between__Group__0 ) )
            {
            // InternalSQLParser.g:1991:2: ( ( rule__Between__Group__0 ) )
            // InternalSQLParser.g:1992:3: ( rule__Between__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getGroup()); 
            }
            // InternalSQLParser.g:1993:3: ( rule__Between__Group__0 )
            // InternalSQLParser.g:1993:4: rule__Between__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetween"


    // $ANTLR start "entryRuleBetweenValue"
    // InternalSQLParser.g:2002:1: entryRuleBetweenValue : ruleBetweenValue EOF ;
    public final void entryRuleBetweenValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2003:1: ( ruleBetweenValue EOF )
            // InternalSQLParser.g:2004:1: ruleBetweenValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetweenValue"


    // $ANTLR start "ruleBetweenValue"
    // InternalSQLParser.g:2011:1: ruleBetweenValue : ( ( rule__BetweenValue__Group__0 ) ) ;
    public final void ruleBetweenValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2015:2: ( ( ( rule__BetweenValue__Group__0 ) ) )
            // InternalSQLParser.g:2016:2: ( ( rule__BetweenValue__Group__0 ) )
            {
            // InternalSQLParser.g:2016:2: ( ( rule__BetweenValue__Group__0 ) )
            // InternalSQLParser.g:2017:3: ( rule__BetweenValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2018:3: ( rule__BetweenValue__Group__0 )
            // InternalSQLParser.g:2018:4: rule__BetweenValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetweenValue"


    // $ANTLR start "entryRuleInOperator"
    // InternalSQLParser.g:2027:1: entryRuleInOperator : ruleInOperator EOF ;
    public final void entryRuleInOperator() throws RecognitionException {
        try {
            // InternalSQLParser.g:2028:1: ( ruleInOperator EOF )
            // InternalSQLParser.g:2029:1: ruleInOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInOperator"


    // $ANTLR start "ruleInOperator"
    // InternalSQLParser.g:2036:1: ruleInOperator : ( ( rule__InOperator__Group__0 ) ) ;
    public final void ruleInOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2040:2: ( ( ( rule__InOperator__Group__0 ) ) )
            // InternalSQLParser.g:2041:2: ( ( rule__InOperator__Group__0 ) )
            {
            // InternalSQLParser.g:2041:2: ( ( rule__InOperator__Group__0 ) )
            // InternalSQLParser.g:2042:3: ( rule__InOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getGroup()); 
            }
            // InternalSQLParser.g:2043:3: ( rule__InOperator__Group__0 )
            // InternalSQLParser.g:2043:4: rule__InOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInOperator"


    // $ANTLR start "entryRuleInValue"
    // InternalSQLParser.g:2052:1: entryRuleInValue : ruleInValue EOF ;
    public final void entryRuleInValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2053:1: ( ruleInValue EOF )
            // InternalSQLParser.g:2054:1: ruleInValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInValue"


    // $ANTLR start "ruleInValue"
    // InternalSQLParser.g:2061:1: ruleInValue : ( ( rule__InValue__Group__0 ) ) ;
    public final void ruleInValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2065:2: ( ( ( rule__InValue__Group__0 ) ) )
            // InternalSQLParser.g:2066:2: ( ( rule__InValue__Group__0 ) )
            {
            // InternalSQLParser.g:2066:2: ( ( rule__InValue__Group__0 ) )
            // InternalSQLParser.g:2067:3: ( rule__InValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2068:3: ( rule__InValue__Group__0 )
            // InternalSQLParser.g:2068:4: rule__InValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInValue"


    // $ANTLR start "entryRuleExistsOperator"
    // InternalSQLParser.g:2077:1: entryRuleExistsOperator : ruleExistsOperator EOF ;
    public final void entryRuleExistsOperator() throws RecognitionException {
        try {
            // InternalSQLParser.g:2078:1: ( ruleExistsOperator EOF )
            // InternalSQLParser.g:2079:1: ruleExistsOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsOperator"


    // $ANTLR start "ruleExistsOperator"
    // InternalSQLParser.g:2086:1: ruleExistsOperator : ( ( rule__ExistsOperator__Group__0 ) ) ;
    public final void ruleExistsOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2090:2: ( ( ( rule__ExistsOperator__Group__0 ) ) )
            // InternalSQLParser.g:2091:2: ( ( rule__ExistsOperator__Group__0 ) )
            {
            // InternalSQLParser.g:2091:2: ( ( rule__ExistsOperator__Group__0 ) )
            // InternalSQLParser.g:2092:3: ( rule__ExistsOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }
            // InternalSQLParser.g:2093:3: ( rule__ExistsOperator__Group__0 )
            // InternalSQLParser.g:2093:4: rule__ExistsOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsOperator"


    // $ANTLR start "entryRuleExistsValue"
    // InternalSQLParser.g:2102:1: entryRuleExistsValue : ruleExistsValue EOF ;
    public final void entryRuleExistsValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2103:1: ( ruleExistsValue EOF )
            // InternalSQLParser.g:2104:1: ruleExistsValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsValue"


    // $ANTLR start "ruleExistsValue"
    // InternalSQLParser.g:2111:1: ruleExistsValue : ( ( rule__ExistsValue__Group__0 ) ) ;
    public final void ruleExistsValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2115:2: ( ( ( rule__ExistsValue__Group__0 ) ) )
            // InternalSQLParser.g:2116:2: ( ( rule__ExistsValue__Group__0 ) )
            {
            // InternalSQLParser.g:2116:2: ( ( rule__ExistsValue__Group__0 ) )
            // InternalSQLParser.g:2117:3: ( rule__ExistsValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2118:3: ( rule__ExistsValue__Group__0 )
            // InternalSQLParser.g:2118:4: rule__ExistsValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsValue"


    // $ANTLR start "entryRuleOperandListGroup"
    // InternalSQLParser.g:2127:1: entryRuleOperandListGroup : ruleOperandListGroup EOF ;
    public final void entryRuleOperandListGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:2128:1: ( ruleOperandListGroup EOF )
            // InternalSQLParser.g:2129:1: ruleOperandListGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandListGroup"


    // $ANTLR start "ruleOperandListGroup"
    // InternalSQLParser.g:2136:1: ruleOperandListGroup : ( ( rule__OperandListGroup__Group__0 ) ) ;
    public final void ruleOperandListGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2140:2: ( ( ( rule__OperandListGroup__Group__0 ) ) )
            // InternalSQLParser.g:2141:2: ( ( rule__OperandListGroup__Group__0 ) )
            {
            // InternalSQLParser.g:2141:2: ( ( rule__OperandListGroup__Group__0 ) )
            // InternalSQLParser.g:2142:3: ( rule__OperandListGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }
            // InternalSQLParser.g:2143:3: ( rule__OperandListGroup__Group__0 )
            // InternalSQLParser.g:2143:4: rule__OperandListGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandListGroup"


    // $ANTLR start "entryRuleOperandList"
    // InternalSQLParser.g:2152:1: entryRuleOperandList : ruleOperandList EOF ;
    public final void entryRuleOperandList() throws RecognitionException {
        try {
            // InternalSQLParser.g:2153:1: ( ruleOperandList EOF )
            // InternalSQLParser.g:2154:1: ruleOperandList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandList"


    // $ANTLR start "ruleOperandList"
    // InternalSQLParser.g:2161:1: ruleOperandList : ( ( rule__OperandList__Group__0 ) ) ;
    public final void ruleOperandList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2165:2: ( ( ( rule__OperandList__Group__0 ) ) )
            // InternalSQLParser.g:2166:2: ( ( rule__OperandList__Group__0 ) )
            {
            // InternalSQLParser.g:2166:2: ( ( rule__OperandList__Group__0 ) )
            // InternalSQLParser.g:2167:3: ( rule__OperandList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup()); 
            }
            // InternalSQLParser.g:2168:3: ( rule__OperandList__Group__0 )
            // InternalSQLParser.g:2168:4: rule__OperandList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandList"


    // $ANTLR start "entryRuleOperandGroup"
    // InternalSQLParser.g:2177:1: entryRuleOperandGroup : ruleOperandGroup EOF ;
    public final void entryRuleOperandGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:2178:1: ( ruleOperandGroup EOF )
            // InternalSQLParser.g:2179:1: ruleOperandGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandGroup"


    // $ANTLR start "ruleOperandGroup"
    // InternalSQLParser.g:2186:1: ruleOperandGroup : ( ( rule__OperandGroup__Alternatives ) ) ;
    public final void ruleOperandGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2190:2: ( ( ( rule__OperandGroup__Alternatives ) ) )
            // InternalSQLParser.g:2191:2: ( ( rule__OperandGroup__Alternatives ) )
            {
            // InternalSQLParser.g:2191:2: ( ( rule__OperandGroup__Alternatives ) )
            // InternalSQLParser.g:2192:3: ( rule__OperandGroup__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2193:3: ( rule__OperandGroup__Alternatives )
            // InternalSQLParser.g:2193:4: rule__OperandGroup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandGroup"


    // $ANTLR start "entryRuleOperand"
    // InternalSQLParser.g:2202:1: entryRuleOperand : ruleOperand EOF ;
    public final void entryRuleOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2203:1: ( ruleOperand EOF )
            // InternalSQLParser.g:2204:1: ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalSQLParser.g:2211:1: ruleOperand : ( ( rule__Operand__Group__0 ) ) ;
    public final void ruleOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2215:2: ( ( ( rule__Operand__Group__0 ) ) )
            // InternalSQLParser.g:2216:2: ( ( rule__Operand__Group__0 ) )
            {
            // InternalSQLParser.g:2216:2: ( ( rule__Operand__Group__0 ) )
            // InternalSQLParser.g:2217:3: ( rule__Operand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:2218:3: ( rule__Operand__Group__0 )
            // InternalSQLParser.g:2218:4: rule__Operand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleOperandFragment"
    // InternalSQLParser.g:2227:1: entryRuleOperandFragment : ruleOperandFragment EOF ;
    public final void entryRuleOperandFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:2228:1: ( ruleOperandFragment EOF )
            // InternalSQLParser.g:2229:1: ruleOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFragment"


    // $ANTLR start "ruleOperandFragment"
    // InternalSQLParser.g:2236:1: ruleOperandFragment : ( ( rule__OperandFragment__Alternatives ) ) ;
    public final void ruleOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2240:2: ( ( ( rule__OperandFragment__Alternatives ) ) )
            // InternalSQLParser.g:2241:2: ( ( rule__OperandFragment__Alternatives ) )
            {
            // InternalSQLParser.g:2241:2: ( ( rule__OperandFragment__Alternatives ) )
            // InternalSQLParser.g:2242:3: ( rule__OperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2243:3: ( rule__OperandFragment__Alternatives )
            // InternalSQLParser.g:2243:4: rule__OperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFragment"


    // $ANTLR start "entryRuleOperandFunction"
    // InternalSQLParser.g:2252:1: entryRuleOperandFunction : ruleOperandFunction EOF ;
    public final void entryRuleOperandFunction() throws RecognitionException {
        try {
            // InternalSQLParser.g:2253:1: ( ruleOperandFunction EOF )
            // InternalSQLParser.g:2254:1: ruleOperandFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFunction"


    // $ANTLR start "ruleOperandFunction"
    // InternalSQLParser.g:2261:1: ruleOperandFunction : ( ( rule__OperandFunction__Group__0 ) ) ;
    public final void ruleOperandFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2265:2: ( ( ( rule__OperandFunction__Group__0 ) ) )
            // InternalSQLParser.g:2266:2: ( ( rule__OperandFunction__Group__0 ) )
            {
            // InternalSQLParser.g:2266:2: ( ( rule__OperandFunction__Group__0 ) )
            // InternalSQLParser.g:2267:3: ( rule__OperandFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }
            // InternalSQLParser.g:2268:3: ( rule__OperandFunction__Group__0 )
            // InternalSQLParser.g:2268:4: rule__OperandFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFunction"


    // $ANTLR start "entryRuleFunctionExtract"
    // InternalSQLParser.g:2277:1: entryRuleFunctionExtract : ruleFunctionExtract EOF ;
    public final void entryRuleFunctionExtract() throws RecognitionException {
        try {
            // InternalSQLParser.g:2278:1: ( ruleFunctionExtract EOF )
            // InternalSQLParser.g:2279:1: ruleFunctionExtract EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionExtract"


    // $ANTLR start "ruleFunctionExtract"
    // InternalSQLParser.g:2286:1: ruleFunctionExtract : ( ( rule__FunctionExtract__Group__0 ) ) ;
    public final void ruleFunctionExtract() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2290:2: ( ( ( rule__FunctionExtract__Group__0 ) ) )
            // InternalSQLParser.g:2291:2: ( ( rule__FunctionExtract__Group__0 ) )
            {
            // InternalSQLParser.g:2291:2: ( ( rule__FunctionExtract__Group__0 ) )
            // InternalSQLParser.g:2292:3: ( rule__FunctionExtract__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }
            // InternalSQLParser.g:2293:3: ( rule__FunctionExtract__Group__0 )
            // InternalSQLParser.g:2293:4: rule__FunctionExtract__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionExtract"


    // $ANTLR start "entryRuleFunctionAnalytical"
    // InternalSQLParser.g:2302:1: entryRuleFunctionAnalytical : ruleFunctionAnalytical EOF ;
    public final void entryRuleFunctionAnalytical() throws RecognitionException {
        try {
            // InternalSQLParser.g:2303:1: ( ruleFunctionAnalytical EOF )
            // InternalSQLParser.g:2304:1: ruleFunctionAnalytical EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionAnalytical"


    // $ANTLR start "ruleFunctionAnalytical"
    // InternalSQLParser.g:2311:1: ruleFunctionAnalytical : ( ( rule__FunctionAnalytical__Group__0 ) ) ;
    public final void ruleFunctionAnalytical() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2315:2: ( ( ( rule__FunctionAnalytical__Group__0 ) ) )
            // InternalSQLParser.g:2316:2: ( ( rule__FunctionAnalytical__Group__0 ) )
            {
            // InternalSQLParser.g:2316:2: ( ( rule__FunctionAnalytical__Group__0 ) )
            // InternalSQLParser.g:2317:3: ( rule__FunctionAnalytical__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }
            // InternalSQLParser.g:2318:3: ( rule__FunctionAnalytical__Group__0 )
            // InternalSQLParser.g:2318:4: rule__FunctionAnalytical__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionAnalytical"


    // $ANTLR start "entryRuleAnalyticClause"
    // InternalSQLParser.g:2327:1: entryRuleAnalyticClause : ruleAnalyticClause EOF ;
    public final void entryRuleAnalyticClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2328:1: ( ruleAnalyticClause EOF )
            // InternalSQLParser.g:2329:1: ruleAnalyticClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticClause"


    // $ANTLR start "ruleAnalyticClause"
    // InternalSQLParser.g:2336:1: ruleAnalyticClause : ( ( rule__AnalyticClause__Group__0 ) ) ;
    public final void ruleAnalyticClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2340:2: ( ( ( rule__AnalyticClause__Group__0 ) ) )
            // InternalSQLParser.g:2341:2: ( ( rule__AnalyticClause__Group__0 ) )
            {
            // InternalSQLParser.g:2341:2: ( ( rule__AnalyticClause__Group__0 ) )
            // InternalSQLParser.g:2342:3: ( rule__AnalyticClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2343:3: ( rule__AnalyticClause__Group__0 )
            // InternalSQLParser.g:2343:4: rule__AnalyticClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticClause"


    // $ANTLR start "entryRuleWindowingClause"
    // InternalSQLParser.g:2352:1: entryRuleWindowingClause : ruleWindowingClause EOF ;
    public final void entryRuleWindowingClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2353:1: ( ruleWindowingClause EOF )
            // InternalSQLParser.g:2354:1: ruleWindowingClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClause"


    // $ANTLR start "ruleWindowingClause"
    // InternalSQLParser.g:2361:1: ruleWindowingClause : ( ( rule__WindowingClause__Group__0 ) ) ;
    public final void ruleWindowingClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2365:2: ( ( ( rule__WindowingClause__Group__0 ) ) )
            // InternalSQLParser.g:2366:2: ( ( rule__WindowingClause__Group__0 ) )
            {
            // InternalSQLParser.g:2366:2: ( ( rule__WindowingClause__Group__0 ) )
            // InternalSQLParser.g:2367:3: ( rule__WindowingClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2368:3: ( rule__WindowingClause__Group__0 )
            // InternalSQLParser.g:2368:4: rule__WindowingClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClause"


    // $ANTLR start "entryRuleWindowingClauseBetween"
    // InternalSQLParser.g:2377:1: entryRuleWindowingClauseBetween : ruleWindowingClauseBetween EOF ;
    public final void entryRuleWindowingClauseBetween() throws RecognitionException {
        try {
            // InternalSQLParser.g:2378:1: ( ruleWindowingClauseBetween EOF )
            // InternalSQLParser.g:2379:1: ruleWindowingClauseBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseBetween"


    // $ANTLR start "ruleWindowingClauseBetween"
    // InternalSQLParser.g:2386:1: ruleWindowingClauseBetween : ( ( rule__WindowingClauseBetween__Group__0 ) ) ;
    public final void ruleWindowingClauseBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2390:2: ( ( ( rule__WindowingClauseBetween__Group__0 ) ) )
            // InternalSQLParser.g:2391:2: ( ( rule__WindowingClauseBetween__Group__0 ) )
            {
            // InternalSQLParser.g:2391:2: ( ( rule__WindowingClauseBetween__Group__0 ) )
            // InternalSQLParser.g:2392:3: ( rule__WindowingClauseBetween__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }
            // InternalSQLParser.g:2393:3: ( rule__WindowingClauseBetween__Group__0 )
            // InternalSQLParser.g:2393:4: rule__WindowingClauseBetween__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseBetween"


    // $ANTLR start "entryRuleWindowingClauseOperandFollowing"
    // InternalSQLParser.g:2402:1: entryRuleWindowingClauseOperandFollowing : ruleWindowingClauseOperandFollowing EOF ;
    public final void entryRuleWindowingClauseOperandFollowing() throws RecognitionException {
        try {
            // InternalSQLParser.g:2403:1: ( ruleWindowingClauseOperandFollowing EOF )
            // InternalSQLParser.g:2404:1: ruleWindowingClauseOperandFollowing EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandFollowing"


    // $ANTLR start "ruleWindowingClauseOperandFollowing"
    // InternalSQLParser.g:2411:1: ruleWindowingClauseOperandFollowing : ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandFollowing() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2415:2: ( ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) )
            // InternalSQLParser.g:2416:2: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            {
            // InternalSQLParser.g:2416:2: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            // InternalSQLParser.g:2417:3: ( rule__WindowingClauseOperandFollowing__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }
            // InternalSQLParser.g:2418:3: ( rule__WindowingClauseOperandFollowing__Group__0 )
            // InternalSQLParser.g:2418:4: rule__WindowingClauseOperandFollowing__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandFollowing"


    // $ANTLR start "entryRuleWindowingClauseOperandPreceding"
    // InternalSQLParser.g:2427:1: entryRuleWindowingClauseOperandPreceding : ruleWindowingClauseOperandPreceding EOF ;
    public final void entryRuleWindowingClauseOperandPreceding() throws RecognitionException {
        try {
            // InternalSQLParser.g:2428:1: ( ruleWindowingClauseOperandPreceding EOF )
            // InternalSQLParser.g:2429:1: ruleWindowingClauseOperandPreceding EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandPreceding"


    // $ANTLR start "ruleWindowingClauseOperandPreceding"
    // InternalSQLParser.g:2436:1: ruleWindowingClauseOperandPreceding : ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandPreceding() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2440:2: ( ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) )
            // InternalSQLParser.g:2441:2: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            {
            // InternalSQLParser.g:2441:2: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            // InternalSQLParser.g:2442:3: ( rule__WindowingClauseOperandPreceding__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }
            // InternalSQLParser.g:2443:3: ( rule__WindowingClauseOperandPreceding__Group__0 )
            // InternalSQLParser.g:2443:4: rule__WindowingClauseOperandPreceding__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandPreceding"


    // $ANTLR start "entryRuleOrderByClause"
    // InternalSQLParser.g:2452:1: entryRuleOrderByClause : ruleOrderByClause EOF ;
    public final void entryRuleOrderByClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2453:1: ( ruleOrderByClause EOF )
            // InternalSQLParser.g:2454:1: ruleOrderByClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClause"


    // $ANTLR start "ruleOrderByClause"
    // InternalSQLParser.g:2461:1: ruleOrderByClause : ( ( rule__OrderByClause__Group__0 ) ) ;
    public final void ruleOrderByClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2465:2: ( ( ( rule__OrderByClause__Group__0 ) ) )
            // InternalSQLParser.g:2466:2: ( ( rule__OrderByClause__Group__0 ) )
            {
            // InternalSQLParser.g:2466:2: ( ( rule__OrderByClause__Group__0 ) )
            // InternalSQLParser.g:2467:3: ( rule__OrderByClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2468:3: ( rule__OrderByClause__Group__0 )
            // InternalSQLParser.g:2468:4: rule__OrderByClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClause"


    // $ANTLR start "entryRuleOrderByClauseArgs"
    // InternalSQLParser.g:2477:1: entryRuleOrderByClauseArgs : ruleOrderByClauseArgs EOF ;
    public final void entryRuleOrderByClauseArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:2478:1: ( ruleOrderByClauseArgs EOF )
            // InternalSQLParser.g:2479:1: ruleOrderByClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArgs"


    // $ANTLR start "ruleOrderByClauseArgs"
    // InternalSQLParser.g:2486:1: ruleOrderByClauseArgs : ( ( rule__OrderByClauseArgs__Group__0 ) ) ;
    public final void ruleOrderByClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2490:2: ( ( ( rule__OrderByClauseArgs__Group__0 ) ) )
            // InternalSQLParser.g:2491:2: ( ( rule__OrderByClauseArgs__Group__0 ) )
            {
            // InternalSQLParser.g:2491:2: ( ( rule__OrderByClauseArgs__Group__0 ) )
            // InternalSQLParser.g:2492:3: ( rule__OrderByClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2493:3: ( rule__OrderByClauseArgs__Group__0 )
            // InternalSQLParser.g:2493:4: rule__OrderByClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArgs"


    // $ANTLR start "entryRuleOrderByClauseArg"
    // InternalSQLParser.g:2502:1: entryRuleOrderByClauseArg : ruleOrderByClauseArg EOF ;
    public final void entryRuleOrderByClauseArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:2503:1: ( ruleOrderByClauseArg EOF )
            // InternalSQLParser.g:2504:1: ruleOrderByClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArg"


    // $ANTLR start "ruleOrderByClauseArg"
    // InternalSQLParser.g:2511:1: ruleOrderByClauseArg : ( ( rule__OrderByClauseArg__Group__0 ) ) ;
    public final void ruleOrderByClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2515:2: ( ( ( rule__OrderByClauseArg__Group__0 ) ) )
            // InternalSQLParser.g:2516:2: ( ( rule__OrderByClauseArg__Group__0 ) )
            {
            // InternalSQLParser.g:2516:2: ( ( rule__OrderByClauseArg__Group__0 ) )
            // InternalSQLParser.g:2517:3: ( rule__OrderByClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:2518:3: ( rule__OrderByClauseArg__Group__0 )
            // InternalSQLParser.g:2518:4: rule__OrderByClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArg"


    // $ANTLR start "entryRuleQueryPartitionClause"
    // InternalSQLParser.g:2527:1: entryRuleQueryPartitionClause : ruleQueryPartitionClause EOF ;
    public final void entryRuleQueryPartitionClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2528:1: ( ruleQueryPartitionClause EOF )
            // InternalSQLParser.g:2529:1: ruleQueryPartitionClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQueryPartitionClause"


    // $ANTLR start "ruleQueryPartitionClause"
    // InternalSQLParser.g:2536:1: ruleQueryPartitionClause : ( ( rule__QueryPartitionClause__Group__0 ) ) ;
    public final void ruleQueryPartitionClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2540:2: ( ( ( rule__QueryPartitionClause__Group__0 ) ) )
            // InternalSQLParser.g:2541:2: ( ( rule__QueryPartitionClause__Group__0 ) )
            {
            // InternalSQLParser.g:2541:2: ( ( rule__QueryPartitionClause__Group__0 ) )
            // InternalSQLParser.g:2542:3: ( rule__QueryPartitionClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2543:3: ( rule__QueryPartitionClause__Group__0 )
            // InternalSQLParser.g:2543:4: rule__QueryPartitionClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQueryPartitionClause"


    // $ANTLR start "entryRuleAnalyticExprArgs"
    // InternalSQLParser.g:2552:1: entryRuleAnalyticExprArgs : ruleAnalyticExprArgs EOF ;
    public final void entryRuleAnalyticExprArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:2553:1: ( ruleAnalyticExprArgs EOF )
            // InternalSQLParser.g:2554:1: ruleAnalyticExprArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArgs"


    // $ANTLR start "ruleAnalyticExprArgs"
    // InternalSQLParser.g:2561:1: ruleAnalyticExprArgs : ( ( rule__AnalyticExprArgs__Group__0 ) ) ;
    public final void ruleAnalyticExprArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2565:2: ( ( ( rule__AnalyticExprArgs__Group__0 ) ) )
            // InternalSQLParser.g:2566:2: ( ( rule__AnalyticExprArgs__Group__0 ) )
            {
            // InternalSQLParser.g:2566:2: ( ( rule__AnalyticExprArgs__Group__0 ) )
            // InternalSQLParser.g:2567:3: ( rule__AnalyticExprArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2568:3: ( rule__AnalyticExprArgs__Group__0 )
            // InternalSQLParser.g:2568:4: rule__AnalyticExprArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArgs"


    // $ANTLR start "entryRuleAnalyticExprArg"
    // InternalSQLParser.g:2577:1: entryRuleAnalyticExprArg : ruleAnalyticExprArg EOF ;
    public final void entryRuleAnalyticExprArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:2578:1: ( ruleAnalyticExprArg EOF )
            // InternalSQLParser.g:2579:1: ruleAnalyticExprArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArg"


    // $ANTLR start "ruleAnalyticExprArg"
    // InternalSQLParser.g:2586:1: ruleAnalyticExprArg : ( ( rule__AnalyticExprArg__Group__0 ) ) ;
    public final void ruleAnalyticExprArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2590:2: ( ( ( rule__AnalyticExprArg__Group__0 ) ) )
            // InternalSQLParser.g:2591:2: ( ( rule__AnalyticExprArg__Group__0 ) )
            {
            // InternalSQLParser.g:2591:2: ( ( rule__AnalyticExprArg__Group__0 ) )
            // InternalSQLParser.g:2592:3: ( rule__AnalyticExprArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:2593:3: ( rule__AnalyticExprArg__Group__0 )
            // InternalSQLParser.g:2593:4: rule__AnalyticExprArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArg"


    // $ANTLR start "entryRuleOpFunctionArg"
    // InternalSQLParser.g:2602:1: entryRuleOpFunctionArg : ruleOpFunctionArg EOF ;
    public final void entryRuleOpFunctionArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:2603:1: ( ruleOpFunctionArg EOF )
            // InternalSQLParser.g:2604:1: ruleOpFunctionArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArg"


    // $ANTLR start "ruleOpFunctionArg"
    // InternalSQLParser.g:2611:1: ruleOpFunctionArg : ( ( rule__OpFunctionArg__Group__0 ) ) ;
    public final void ruleOpFunctionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2615:2: ( ( ( rule__OpFunctionArg__Group__0 ) ) )
            // InternalSQLParser.g:2616:2: ( ( rule__OpFunctionArg__Group__0 ) )
            {
            // InternalSQLParser.g:2616:2: ( ( rule__OpFunctionArg__Group__0 ) )
            // InternalSQLParser.g:2617:3: ( rule__OpFunctionArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:2618:3: ( rule__OpFunctionArg__Group__0 )
            // InternalSQLParser.g:2618:4: rule__OpFunctionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArg"


    // $ANTLR start "entryRuleOpFunctionArgOperand"
    // InternalSQLParser.g:2627:1: entryRuleOpFunctionArgOperand : ruleOpFunctionArgOperand EOF ;
    public final void entryRuleOpFunctionArgOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2628:1: ( ruleOpFunctionArgOperand EOF )
            // InternalSQLParser.g:2629:1: ruleOpFunctionArgOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgOperand"


    // $ANTLR start "ruleOpFunctionArgOperand"
    // InternalSQLParser.g:2636:1: ruleOpFunctionArgOperand : ( ( rule__OpFunctionArgOperand__OpAssignment ) ) ;
    public final void ruleOpFunctionArgOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2640:2: ( ( ( rule__OpFunctionArgOperand__OpAssignment ) ) )
            // InternalSQLParser.g:2641:2: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            {
            // InternalSQLParser.g:2641:2: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            // InternalSQLParser.g:2642:3: ( rule__OpFunctionArgOperand__OpAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }
            // InternalSQLParser.g:2643:3: ( rule__OpFunctionArgOperand__OpAssignment )
            // InternalSQLParser.g:2643:4: rule__OpFunctionArgOperand__OpAssignment
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgOperand"


    // $ANTLR start "entryRuleOpFunctionCast"
    // InternalSQLParser.g:2652:1: entryRuleOpFunctionCast : ruleOpFunctionCast EOF ;
    public final void entryRuleOpFunctionCast() throws RecognitionException {
        try {
            // InternalSQLParser.g:2653:1: ( ruleOpFunctionCast EOF )
            // InternalSQLParser.g:2654:1: ruleOpFunctionCast EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionCast"


    // $ANTLR start "ruleOpFunctionCast"
    // InternalSQLParser.g:2661:1: ruleOpFunctionCast : ( ( rule__OpFunctionCast__Group__0 ) ) ;
    public final void ruleOpFunctionCast() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2665:2: ( ( ( rule__OpFunctionCast__Group__0 ) ) )
            // InternalSQLParser.g:2666:2: ( ( rule__OpFunctionCast__Group__0 ) )
            {
            // InternalSQLParser.g:2666:2: ( ( rule__OpFunctionCast__Group__0 ) )
            // InternalSQLParser.g:2667:3: ( rule__OpFunctionCast__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }
            // InternalSQLParser.g:2668:3: ( rule__OpFunctionCast__Group__0 )
            // InternalSQLParser.g:2668:4: rule__OpFunctionCast__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionCast"


    // $ANTLR start "entryRuleOpFunctionArgAgregate"
    // InternalSQLParser.g:2677:1: entryRuleOpFunctionArgAgregate : ruleOpFunctionArgAgregate EOF ;
    public final void entryRuleOpFunctionArgAgregate() throws RecognitionException {
        try {
            // InternalSQLParser.g:2678:1: ( ruleOpFunctionArgAgregate EOF )
            // InternalSQLParser.g:2679:1: ruleOpFunctionArgAgregate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgAgregate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgAgregate"


    // $ANTLR start "ruleOpFunctionArgAgregate"
    // InternalSQLParser.g:2686:1: ruleOpFunctionArgAgregate : ( ( rule__OpFunctionArgAgregate__Group__0 ) ) ;
    public final void ruleOpFunctionArgAgregate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2690:2: ( ( ( rule__OpFunctionArgAgregate__Group__0 ) ) )
            // InternalSQLParser.g:2691:2: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            {
            // InternalSQLParser.g:2691:2: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            // InternalSQLParser.g:2692:3: ( rule__OpFunctionArgAgregate__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }
            // InternalSQLParser.g:2693:3: ( rule__OpFunctionArgAgregate__Group__0 )
            // InternalSQLParser.g:2693:4: rule__OpFunctionArgAgregate__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgAgregate"


    // $ANTLR start "entryRuleXOperandFragment"
    // InternalSQLParser.g:2702:1: entryRuleXOperandFragment : ruleXOperandFragment EOF ;
    public final void entryRuleXOperandFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:2703:1: ( ruleXOperandFragment EOF )
            // InternalSQLParser.g:2704:1: ruleXOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXOperandFragment"


    // $ANTLR start "ruleXOperandFragment"
    // InternalSQLParser.g:2711:1: ruleXOperandFragment : ( ( rule__XOperandFragment__Alternatives ) ) ;
    public final void ruleXOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2715:2: ( ( ( rule__XOperandFragment__Alternatives ) ) )
            // InternalSQLParser.g:2716:2: ( ( rule__XOperandFragment__Alternatives ) )
            {
            // InternalSQLParser.g:2716:2: ( ( rule__XOperandFragment__Alternatives ) )
            // InternalSQLParser.g:2717:3: ( rule__XOperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2718:3: ( rule__XOperandFragment__Alternatives )
            // InternalSQLParser.g:2718:4: rule__XOperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XOperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXOperandFragment"


    // $ANTLR start "entryRuleParameterOperand"
    // InternalSQLParser.g:2727:1: entryRuleParameterOperand : ruleParameterOperand EOF ;
    public final void entryRuleParameterOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2728:1: ( ruleParameterOperand EOF )
            // InternalSQLParser.g:2729:1: ruleParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterOperand"


    // $ANTLR start "ruleParameterOperand"
    // InternalSQLParser.g:2736:1: ruleParameterOperand : ( ( rule__ParameterOperand__PrmAssignment ) ) ;
    public final void ruleParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2740:2: ( ( ( rule__ParameterOperand__PrmAssignment ) ) )
            // InternalSQLParser.g:2741:2: ( ( rule__ParameterOperand__PrmAssignment ) )
            {
            // InternalSQLParser.g:2741:2: ( ( rule__ParameterOperand__PrmAssignment ) )
            // InternalSQLParser.g:2742:3: ( rule__ParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSQLParser.g:2743:3: ( rule__ParameterOperand__PrmAssignment )
            // InternalSQLParser.g:2743:4: rule__ParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterOperand"


    // $ANTLR start "entryRuleExclamationParameterOperand"
    // InternalSQLParser.g:2752:1: entryRuleExclamationParameterOperand : ruleExclamationParameterOperand EOF ;
    public final void entryRuleExclamationParameterOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2753:1: ( ruleExclamationParameterOperand EOF )
            // InternalSQLParser.g:2754:1: ruleExclamationParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclamationParameterOperand"


    // $ANTLR start "ruleExclamationParameterOperand"
    // InternalSQLParser.g:2761:1: ruleExclamationParameterOperand : ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) ;
    public final void ruleExclamationParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2765:2: ( ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) )
            // InternalSQLParser.g:2766:2: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            {
            // InternalSQLParser.g:2766:2: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            // InternalSQLParser.g:2767:3: ( rule__ExclamationParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSQLParser.g:2768:3: ( rule__ExclamationParameterOperand__PrmAssignment )
            // InternalSQLParser.g:2768:4: rule__ExclamationParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExclamationParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclamationParameterOperand"


    // $ANTLR start "entryRuleColumnOperand"
    // InternalSQLParser.g:2777:1: entryRuleColumnOperand : ruleColumnOperand EOF ;
    public final void entryRuleColumnOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2778:1: ( ruleColumnOperand EOF )
            // InternalSQLParser.g:2779:1: ruleColumnOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOperand"


    // $ANTLR start "ruleColumnOperand"
    // InternalSQLParser.g:2786:1: ruleColumnOperand : ( ( rule__ColumnOperand__Group__0 ) ) ;
    public final void ruleColumnOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2790:2: ( ( ( rule__ColumnOperand__Group__0 ) ) )
            // InternalSQLParser.g:2791:2: ( ( rule__ColumnOperand__Group__0 ) )
            {
            // InternalSQLParser.g:2791:2: ( ( rule__ColumnOperand__Group__0 ) )
            // InternalSQLParser.g:2792:3: ( rule__ColumnOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:2793:3: ( rule__ColumnOperand__Group__0 )
            // InternalSQLParser.g:2793:4: rule__ColumnOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOperand"


    // $ANTLR start "entryRuleSubQueryOperand"
    // InternalSQLParser.g:2802:1: entryRuleSubQueryOperand : ruleSubQueryOperand EOF ;
    public final void entryRuleSubQueryOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2803:1: ( ruleSubQueryOperand EOF )
            // InternalSQLParser.g:2804:1: ruleSubQueryOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubQueryOperand"


    // $ANTLR start "ruleSubQueryOperand"
    // InternalSQLParser.g:2811:1: ruleSubQueryOperand : ( ( rule__SubQueryOperand__Group__0 ) ) ;
    public final void ruleSubQueryOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2815:2: ( ( ( rule__SubQueryOperand__Group__0 ) ) )
            // InternalSQLParser.g:2816:2: ( ( rule__SubQueryOperand__Group__0 ) )
            {
            // InternalSQLParser.g:2816:2: ( ( rule__SubQueryOperand__Group__0 ) )
            // InternalSQLParser.g:2817:3: ( rule__SubQueryOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:2818:3: ( rule__SubQueryOperand__Group__0 )
            // InternalSQLParser.g:2818:4: rule__SubQueryOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubQueryOperand"


    // $ANTLR start "entryRuleScalarOperand"
    // InternalSQLParser.g:2827:1: entryRuleScalarOperand : ruleScalarOperand EOF ;
    public final void entryRuleScalarOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2828:1: ( ruleScalarOperand EOF )
            // InternalSQLParser.g:2829:1: ruleScalarOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarOperand"


    // $ANTLR start "ruleScalarOperand"
    // InternalSQLParser.g:2836:1: ruleScalarOperand : ( ( rule__ScalarOperand__Alternatives ) ) ;
    public final void ruleScalarOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2840:2: ( ( ( rule__ScalarOperand__Alternatives ) ) )
            // InternalSQLParser.g:2841:2: ( ( rule__ScalarOperand__Alternatives ) )
            {
            // InternalSQLParser.g:2841:2: ( ( rule__ScalarOperand__Alternatives ) )
            // InternalSQLParser.g:2842:3: ( rule__ScalarOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2843:3: ( rule__ScalarOperand__Alternatives )
            // InternalSQLParser.g:2843:4: rule__ScalarOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarOperand"


    // $ANTLR start "entryRuleScalarNumberOperand"
    // InternalSQLParser.g:2852:1: entryRuleScalarNumberOperand : ruleScalarNumberOperand EOF ;
    public final void entryRuleScalarNumberOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2853:1: ( ruleScalarNumberOperand EOF )
            // InternalSQLParser.g:2854:1: ruleScalarNumberOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarNumberOperand"


    // $ANTLR start "ruleScalarNumberOperand"
    // InternalSQLParser.g:2861:1: ruleScalarNumberOperand : ( ( rule__ScalarNumberOperand__Alternatives ) ) ;
    public final void ruleScalarNumberOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2865:2: ( ( ( rule__ScalarNumberOperand__Alternatives ) ) )
            // InternalSQLParser.g:2866:2: ( ( rule__ScalarNumberOperand__Alternatives ) )
            {
            // InternalSQLParser.g:2866:2: ( ( rule__ScalarNumberOperand__Alternatives ) )
            // InternalSQLParser.g:2867:3: ( rule__ScalarNumberOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2868:3: ( rule__ScalarNumberOperand__Alternatives )
            // InternalSQLParser.g:2868:4: rule__ScalarNumberOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarNumberOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarNumberOperand"


    // $ANTLR start "entryRuleSQLCASE"
    // InternalSQLParser.g:2877:1: entryRuleSQLCASE : ruleSQLCASE EOF ;
    public final void entryRuleSQLCASE() throws RecognitionException {
        try {
            // InternalSQLParser.g:2878:1: ( ruleSQLCASE EOF )
            // InternalSQLParser.g:2879:1: ruleSQLCASE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCASE"


    // $ANTLR start "ruleSQLCASE"
    // InternalSQLParser.g:2886:1: ruleSQLCASE : ( ( rule__SQLCASE__Group__0 ) ) ;
    public final void ruleSQLCASE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2890:2: ( ( ( rule__SQLCASE__Group__0 ) ) )
            // InternalSQLParser.g:2891:2: ( ( rule__SQLCASE__Group__0 ) )
            {
            // InternalSQLParser.g:2891:2: ( ( rule__SQLCASE__Group__0 ) )
            // InternalSQLParser.g:2892:3: ( rule__SQLCASE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getGroup()); 
            }
            // InternalSQLParser.g:2893:3: ( rule__SQLCASE__Group__0 )
            // InternalSQLParser.g:2893:4: rule__SQLCASE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCASE"


    // $ANTLR start "entryRuleSQLCaseWhens"
    // InternalSQLParser.g:2902:1: entryRuleSQLCaseWhens : ruleSQLCaseWhens EOF ;
    public final void entryRuleSQLCaseWhens() throws RecognitionException {
        try {
            // InternalSQLParser.g:2903:1: ( ruleSQLCaseWhens EOF )
            // InternalSQLParser.g:2904:1: ruleSQLCaseWhens EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCaseWhens"


    // $ANTLR start "ruleSQLCaseWhens"
    // InternalSQLParser.g:2911:1: ruleSQLCaseWhens : ( ( rule__SQLCaseWhens__Group__0 ) ) ;
    public final void ruleSQLCaseWhens() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2915:2: ( ( ( rule__SQLCaseWhens__Group__0 ) ) )
            // InternalSQLParser.g:2916:2: ( ( rule__SQLCaseWhens__Group__0 ) )
            {
            // InternalSQLParser.g:2916:2: ( ( rule__SQLCaseWhens__Group__0 ) )
            // InternalSQLParser.g:2917:3: ( rule__SQLCaseWhens__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }
            // InternalSQLParser.g:2918:3: ( rule__SQLCaseWhens__Group__0 )
            // InternalSQLParser.g:2918:4: rule__SQLCaseWhens__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCaseWhens"


    // $ANTLR start "entryRuleSqlCaseWhen"
    // InternalSQLParser.g:2927:1: entryRuleSqlCaseWhen : ruleSqlCaseWhen EOF ;
    public final void entryRuleSqlCaseWhen() throws RecognitionException {
        try {
            // InternalSQLParser.g:2928:1: ( ruleSqlCaseWhen EOF )
            // InternalSQLParser.g:2929:1: ruleSqlCaseWhen EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSqlCaseWhen"


    // $ANTLR start "ruleSqlCaseWhen"
    // InternalSQLParser.g:2936:1: ruleSqlCaseWhen : ( ( rule__SqlCaseWhen__Group__0 ) ) ;
    public final void ruleSqlCaseWhen() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2940:2: ( ( ( rule__SqlCaseWhen__Group__0 ) ) )
            // InternalSQLParser.g:2941:2: ( ( rule__SqlCaseWhen__Group__0 ) )
            {
            // InternalSQLParser.g:2941:2: ( ( rule__SqlCaseWhen__Group__0 ) )
            // InternalSQLParser.g:2942:3: ( rule__SqlCaseWhen__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }
            // InternalSQLParser.g:2943:3: ( rule__SqlCaseWhen__Group__0 )
            // InternalSQLParser.g:2943:4: rule__SqlCaseWhen__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSqlCaseWhen"


    // $ANTLR start "entryRuleJoinType"
    // InternalSQLParser.g:2952:1: entryRuleJoinType : ruleJoinType EOF ;
    public final void entryRuleJoinType() throws RecognitionException {
        try {
            // InternalSQLParser.g:2953:1: ( ruleJoinType EOF )
            // InternalSQLParser.g:2954:1: ruleJoinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinType"


    // $ANTLR start "ruleJoinType"
    // InternalSQLParser.g:2961:1: ruleJoinType : ( ( rule__JoinType__Group__0 ) ) ;
    public final void ruleJoinType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2965:2: ( ( ( rule__JoinType__Group__0 ) ) )
            // InternalSQLParser.g:2966:2: ( ( rule__JoinType__Group__0 ) )
            {
            // InternalSQLParser.g:2966:2: ( ( rule__JoinType__Group__0 ) )
            // InternalSQLParser.g:2967:3: ( rule__JoinType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getGroup()); 
            }
            // InternalSQLParser.g:2968:3: ( rule__JoinType__Group__0 )
            // InternalSQLParser.g:2968:4: rule__JoinType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinType"


    // $ANTLR start "entryRuleDBID"
    // InternalSQLParser.g:2977:1: entryRuleDBID : ruleDBID EOF ;
    public final void entryRuleDBID() throws RecognitionException {
        try {
            // InternalSQLParser.g:2978:1: ( ruleDBID EOF )
            // InternalSQLParser.g:2979:1: ruleDBID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDBID"


    // $ANTLR start "ruleDBID"
    // InternalSQLParser.g:2986:1: ruleDBID : ( ( rule__DBID__Alternatives ) ) ;
    public final void ruleDBID() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2990:2: ( ( ( rule__DBID__Alternatives ) ) )
            // InternalSQLParser.g:2991:2: ( ( rule__DBID__Alternatives ) )
            {
            // InternalSQLParser.g:2991:2: ( ( rule__DBID__Alternatives ) )
            // InternalSQLParser.g:2992:3: ( rule__DBID__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2993:3: ( rule__DBID__Alternatives )
            // InternalSQLParser.g:2993:4: rule__DBID__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DBID__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDBID"


    // $ANTLR start "entryRuleStringOperand"
    // InternalSQLParser.g:3002:1: entryRuleStringOperand : ruleStringOperand EOF ;
    public final void entryRuleStringOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3003:1: ( ruleStringOperand EOF )
            // InternalSQLParser.g:3004:1: ruleStringOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringOperand"


    // $ANTLR start "ruleStringOperand"
    // InternalSQLParser.g:3011:1: ruleStringOperand : ( RULE_STRING_ ) ;
    public final void ruleStringOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3015:2: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:3016:2: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:3016:2: ( RULE_STRING_ )
            // InternalSQLParser.g:3017:3: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringOperand"


    // $ANTLR start "entryRuleFNAME"
    // InternalSQLParser.g:3027:1: entryRuleFNAME : ruleFNAME EOF ;
    public final void entryRuleFNAME() throws RecognitionException {
        try {
            // InternalSQLParser.g:3028:1: ( ruleFNAME EOF )
            // InternalSQLParser.g:3029:1: ruleFNAME EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFNAME"


    // $ANTLR start "ruleFNAME"
    // InternalSQLParser.g:3036:1: ruleFNAME : ( ( rule__FNAME__Group__0 ) ) ;
    public final void ruleFNAME() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3040:2: ( ( ( rule__FNAME__Group__0 ) ) )
            // InternalSQLParser.g:3041:2: ( ( rule__FNAME__Group__0 ) )
            {
            // InternalSQLParser.g:3041:2: ( ( rule__FNAME__Group__0 ) )
            // InternalSQLParser.g:3042:3: ( rule__FNAME__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getGroup()); 
            }
            // InternalSQLParser.g:3043:3: ( rule__FNAME__Group__0 )
            // InternalSQLParser.g:3043:4: rule__FNAME__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFNAME"


    // $ANTLR start "entryRuleIntegerValue"
    // InternalSQLParser.g:3052:1: entryRuleIntegerValue : ruleIntegerValue EOF ;
    public final void entryRuleIntegerValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:3053:1: ( ruleIntegerValue EOF )
            // InternalSQLParser.g:3054:1: ruleIntegerValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValue"


    // $ANTLR start "ruleIntegerValue"
    // InternalSQLParser.g:3061:1: ruleIntegerValue : ( ( rule__IntegerValue__IntegerAssignment ) ) ;
    public final void ruleIntegerValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3065:2: ( ( ( rule__IntegerValue__IntegerAssignment ) ) )
            // InternalSQLParser.g:3066:2: ( ( rule__IntegerValue__IntegerAssignment ) )
            {
            // InternalSQLParser.g:3066:2: ( ( rule__IntegerValue__IntegerAssignment ) )
            // InternalSQLParser.g:3067:3: ( rule__IntegerValue__IntegerAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getIntegerAssignment()); 
            }
            // InternalSQLParser.g:3068:3: ( rule__IntegerValue__IntegerAssignment )
            // InternalSQLParser.g:3068:4: rule__IntegerValue__IntegerAssignment
            {
            pushFollow(FOLLOW_2);
            rule__IntegerValue__IntegerAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getIntegerAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValue"


    // $ANTLR start "entryRuleUnsignedValue"
    // InternalSQLParser.g:3077:1: entryRuleUnsignedValue : ruleUnsignedValue EOF ;
    public final void entryRuleUnsignedValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:3078:1: ( ruleUnsignedValue EOF )
            // InternalSQLParser.g:3079:1: ruleUnsignedValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnsignedValue"


    // $ANTLR start "ruleUnsignedValue"
    // InternalSQLParser.g:3086:1: ruleUnsignedValue : ( ( rule__UnsignedValue__IntegerAssignment ) ) ;
    public final void ruleUnsignedValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3090:2: ( ( ( rule__UnsignedValue__IntegerAssignment ) ) )
            // InternalSQLParser.g:3091:2: ( ( rule__UnsignedValue__IntegerAssignment ) )
            {
            // InternalSQLParser.g:3091:2: ( ( rule__UnsignedValue__IntegerAssignment ) )
            // InternalSQLParser.g:3092:3: ( rule__UnsignedValue__IntegerAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }
            // InternalSQLParser.g:3093:3: ( rule__UnsignedValue__IntegerAssignment )
            // InternalSQLParser.g:3093:4: rule__UnsignedValue__IntegerAssignment
            {
            pushFollow(FOLLOW_2);
            rule__UnsignedValue__IntegerAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnsignedValue"


    // $ANTLR start "ruleXFunction"
    // InternalSQLParser.g:3102:1: ruleXFunction : ( ( rule__XFunction__Alternatives ) ) ;
    public final void ruleXFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3106:1: ( ( ( rule__XFunction__Alternatives ) ) )
            // InternalSQLParser.g:3107:2: ( ( rule__XFunction__Alternatives ) )
            {
            // InternalSQLParser.g:3107:2: ( ( rule__XFunction__Alternatives ) )
            // InternalSQLParser.g:3108:3: ( rule__XFunction__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3109:3: ( rule__XFunction__Alternatives )
            // InternalSQLParser.g:3109:4: rule__XFunction__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XFunction__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXFunction"


    // $ANTLR start "ruleEXTRACT_VALUES"
    // InternalSQLParser.g:3118:1: ruleEXTRACT_VALUES : ( ( rule__EXTRACT_VALUES__Alternatives ) ) ;
    public final void ruleEXTRACT_VALUES() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3122:1: ( ( ( rule__EXTRACT_VALUES__Alternatives ) ) )
            // InternalSQLParser.g:3123:2: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            {
            // InternalSQLParser.g:3123:2: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            // InternalSQLParser.g:3124:3: ( rule__EXTRACT_VALUES__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3125:3: ( rule__EXTRACT_VALUES__Alternatives )
            // InternalSQLParser.g:3125:4: rule__EXTRACT_VALUES__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EXTRACT_VALUES__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEXTRACT_VALUES"


    // $ANTLR start "rule__Model__Alternatives_2"
    // InternalSQLParser.g:3133:1: rule__Model__Alternatives_2 : ( ( ( rule__Model__QueryAssignment_2_0 ) ) | ( ( rule__Model__InsertAssignment_2_1 ) ) | ( ( rule__Model__CreateAssignment_2_2 ) ) );
    public final void rule__Model__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3137:1: ( ( ( rule__Model__QueryAssignment_2_0 ) ) | ( ( rule__Model__InsertAssignment_2_1 ) ) | ( ( rule__Model__CreateAssignment_2_2 ) ) )
            int alt1=3;
            switch ( input.LA(1) ) {
            case SELECT:
                {
                alt1=1;
                }
                break;
            case INSERT:
                {
                alt1=2;
                }
                break;
            case CREATE:
                {
                alt1=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }

            switch (alt1) {
                case 1 :
                    // InternalSQLParser.g:3138:2: ( ( rule__Model__QueryAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:3138:2: ( ( rule__Model__QueryAssignment_2_0 ) )
                    // InternalSQLParser.g:3139:3: ( rule__Model__QueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getQueryAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:3140:3: ( rule__Model__QueryAssignment_2_0 )
                    // InternalSQLParser.g:3140:4: rule__Model__QueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Model__QueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getQueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3144:2: ( ( rule__Model__InsertAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:3144:2: ( ( rule__Model__InsertAssignment_2_1 ) )
                    // InternalSQLParser.g:3145:3: ( rule__Model__InsertAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getInsertAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:3146:3: ( rule__Model__InsertAssignment_2_1 )
                    // InternalSQLParser.g:3146:4: rule__Model__InsertAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Model__InsertAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getInsertAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3150:2: ( ( rule__Model__CreateAssignment_2_2 ) )
                    {
                    // InternalSQLParser.g:3150:2: ( ( rule__Model__CreateAssignment_2_2 ) )
                    // InternalSQLParser.g:3151:3: ( rule__Model__CreateAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getModelAccess().getCreateAssignment_2_2()); 
                    }
                    // InternalSQLParser.g:3152:3: ( rule__Model__CreateAssignment_2_2 )
                    // InternalSQLParser.g:3152:4: rule__Model__CreateAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Model__CreateAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getModelAccess().getCreateAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Alternatives_2"


    // $ANTLR start "rule__TableDefinition__Alternatives_0"
    // InternalSQLParser.g:3160:1: rule__TableDefinition__Alternatives_0 : ( ( ( rule__TableDefinition__Column_definitionAssignment_0_0 ) ) | ( ( rule__TableDefinition__Key_definitionAssignment_0_1 ) ) );
    public final void rule__TableDefinition__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3164:1: ( ( ( rule__TableDefinition__Column_definitionAssignment_0_0 ) ) | ( ( rule__TableDefinition__Key_definitionAssignment_0_1 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==RULE_ID) ) {
                alt2=1;
            }
            else if ( (LA2_0==PRIMARY) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSQLParser.g:3165:2: ( ( rule__TableDefinition__Column_definitionAssignment_0_0 ) )
                    {
                    // InternalSQLParser.g:3165:2: ( ( rule__TableDefinition__Column_definitionAssignment_0_0 ) )
                    // InternalSQLParser.g:3166:3: ( rule__TableDefinition__Column_definitionAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableDefinitionAccess().getColumn_definitionAssignment_0_0()); 
                    }
                    // InternalSQLParser.g:3167:3: ( rule__TableDefinition__Column_definitionAssignment_0_0 )
                    // InternalSQLParser.g:3167:4: rule__TableDefinition__Column_definitionAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableDefinition__Column_definitionAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableDefinitionAccess().getColumn_definitionAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3171:2: ( ( rule__TableDefinition__Key_definitionAssignment_0_1 ) )
                    {
                    // InternalSQLParser.g:3171:2: ( ( rule__TableDefinition__Key_definitionAssignment_0_1 ) )
                    // InternalSQLParser.g:3172:3: ( rule__TableDefinition__Key_definitionAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableDefinitionAccess().getKey_definitionAssignment_0_1()); 
                    }
                    // InternalSQLParser.g:3173:3: ( rule__TableDefinition__Key_definitionAssignment_0_1 )
                    // InternalSQLParser.g:3173:4: rule__TableDefinition__Key_definitionAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableDefinition__Key_definitionAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableDefinitionAccess().getKey_definitionAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Alternatives_0"


    // $ANTLR start "rule__TableDefinition__Alternatives_1_1"
    // InternalSQLParser.g:3181:1: rule__TableDefinition__Alternatives_1_1 : ( ( ( rule__TableDefinition__Column_definitionAssignment_1_1_0 ) ) | ( ( rule__TableDefinition__Key_definitionAssignment_1_1_1 ) ) );
    public final void rule__TableDefinition__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3185:1: ( ( ( rule__TableDefinition__Column_definitionAssignment_1_1_0 ) ) | ( ( rule__TableDefinition__Key_definitionAssignment_1_1_1 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==RULE_ID) ) {
                alt3=1;
            }
            else if ( (LA3_0==PRIMARY) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSQLParser.g:3186:2: ( ( rule__TableDefinition__Column_definitionAssignment_1_1_0 ) )
                    {
                    // InternalSQLParser.g:3186:2: ( ( rule__TableDefinition__Column_definitionAssignment_1_1_0 ) )
                    // InternalSQLParser.g:3187:3: ( rule__TableDefinition__Column_definitionAssignment_1_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableDefinitionAccess().getColumn_definitionAssignment_1_1_0()); 
                    }
                    // InternalSQLParser.g:3188:3: ( rule__TableDefinition__Column_definitionAssignment_1_1_0 )
                    // InternalSQLParser.g:3188:4: rule__TableDefinition__Column_definitionAssignment_1_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableDefinition__Column_definitionAssignment_1_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableDefinitionAccess().getColumn_definitionAssignment_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3192:2: ( ( rule__TableDefinition__Key_definitionAssignment_1_1_1 ) )
                    {
                    // InternalSQLParser.g:3192:2: ( ( rule__TableDefinition__Key_definitionAssignment_1_1_1 ) )
                    // InternalSQLParser.g:3193:3: ( rule__TableDefinition__Key_definitionAssignment_1_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableDefinitionAccess().getKey_definitionAssignment_1_1_1()); 
                    }
                    // InternalSQLParser.g:3194:3: ( rule__TableDefinition__Key_definitionAssignment_1_1_1 )
                    // InternalSQLParser.g:3194:4: rule__TableDefinition__Key_definitionAssignment_1_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableDefinition__Key_definitionAssignment_1_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableDefinitionAccess().getKey_definitionAssignment_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Alternatives_1_1"


    // $ANTLR start "rule__TtlDefinition__Alternatives_3"
    // InternalSQLParser.g:3202:1: rule__TtlDefinition__Alternatives_3 : ( ( HOURS ) | ( DAYS ) );
    public final void rule__TtlDefinition__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3206:1: ( ( HOURS ) | ( DAYS ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==HOURS) ) {
                alt4=1;
            }
            else if ( (LA4_0==DAYS) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSQLParser.g:3207:2: ( HOURS )
                    {
                    // InternalSQLParser.g:3207:2: ( HOURS )
                    // InternalSQLParser.g:3208:3: HOURS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTtlDefinitionAccess().getHOURSKeyword_3_0()); 
                    }
                    match(input,HOURS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTtlDefinitionAccess().getHOURSKeyword_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3213:2: ( DAYS )
                    {
                    // InternalSQLParser.g:3213:2: ( DAYS )
                    // InternalSQLParser.g:3214:3: DAYS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTtlDefinitionAccess().getDAYSKeyword_3_1()); 
                    }
                    match(input,DAYS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTtlDefinitionAccess().getDAYSKeyword_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TtlDefinition__Alternatives_3"


    // $ANTLR start "rule__TypeDefinition__Alternatives"
    // InternalSQLParser.g:3223:1: rule__TypeDefinition__Alternatives : ( ( INTEGER ) | ( LONG ) | ( FLOAT ) | ( DOUBLE ) | ( NUMBER ) | ( STRING ) | ( BOOLEAN ) | ( ANY ) | ( JSON ) );
    public final void rule__TypeDefinition__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3227:1: ( ( INTEGER ) | ( LONG ) | ( FLOAT ) | ( DOUBLE ) | ( NUMBER ) | ( STRING ) | ( BOOLEAN ) | ( ANY ) | ( JSON ) )
            int alt5=9;
            switch ( input.LA(1) ) {
            case INTEGER:
                {
                alt5=1;
                }
                break;
            case LONG:
                {
                alt5=2;
                }
                break;
            case FLOAT:
                {
                alt5=3;
                }
                break;
            case DOUBLE:
                {
                alt5=4;
                }
                break;
            case NUMBER:
                {
                alt5=5;
                }
                break;
            case STRING:
                {
                alt5=6;
                }
                break;
            case BOOLEAN:
                {
                alt5=7;
                }
                break;
            case ANY:
                {
                alt5=8;
                }
                break;
            case JSON:
                {
                alt5=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSQLParser.g:3228:2: ( INTEGER )
                    {
                    // InternalSQLParser.g:3228:2: ( INTEGER )
                    // InternalSQLParser.g:3229:3: INTEGER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDefinitionAccess().getINTEGERKeyword_0()); 
                    }
                    match(input,INTEGER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDefinitionAccess().getINTEGERKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3234:2: ( LONG )
                    {
                    // InternalSQLParser.g:3234:2: ( LONG )
                    // InternalSQLParser.g:3235:3: LONG
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDefinitionAccess().getLONGKeyword_1()); 
                    }
                    match(input,LONG,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDefinitionAccess().getLONGKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3240:2: ( FLOAT )
                    {
                    // InternalSQLParser.g:3240:2: ( FLOAT )
                    // InternalSQLParser.g:3241:3: FLOAT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDefinitionAccess().getFLOATKeyword_2()); 
                    }
                    match(input,FLOAT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDefinitionAccess().getFLOATKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3246:2: ( DOUBLE )
                    {
                    // InternalSQLParser.g:3246:2: ( DOUBLE )
                    // InternalSQLParser.g:3247:3: DOUBLE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDefinitionAccess().getDOUBLEKeyword_3()); 
                    }
                    match(input,DOUBLE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDefinitionAccess().getDOUBLEKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3252:2: ( NUMBER )
                    {
                    // InternalSQLParser.g:3252:2: ( NUMBER )
                    // InternalSQLParser.g:3253:3: NUMBER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDefinitionAccess().getNUMBERKeyword_4()); 
                    }
                    match(input,NUMBER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDefinitionAccess().getNUMBERKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3258:2: ( STRING )
                    {
                    // InternalSQLParser.g:3258:2: ( STRING )
                    // InternalSQLParser.g:3259:3: STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDefinitionAccess().getSTRINGKeyword_5()); 
                    }
                    match(input,STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDefinitionAccess().getSTRINGKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:3264:2: ( BOOLEAN )
                    {
                    // InternalSQLParser.g:3264:2: ( BOOLEAN )
                    // InternalSQLParser.g:3265:3: BOOLEAN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDefinitionAccess().getBOOLEANKeyword_6()); 
                    }
                    match(input,BOOLEAN,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDefinitionAccess().getBOOLEANKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:3270:2: ( ANY )
                    {
                    // InternalSQLParser.g:3270:2: ( ANY )
                    // InternalSQLParser.g:3271:3: ANY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDefinitionAccess().getANYKeyword_7()); 
                    }
                    match(input,ANY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDefinitionAccess().getANYKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:3276:2: ( JSON )
                    {
                    // InternalSQLParser.g:3276:2: ( JSON )
                    // InternalSQLParser.g:3277:3: JSON
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeDefinitionAccess().getJSONKeyword_8()); 
                    }
                    match(input,JSON,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeDefinitionAccess().getJSONKeyword_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeDefinition__Alternatives"


    // $ANTLR start "rule__FetchFirst__RowAlternatives_1_0"
    // InternalSQLParser.g:3286:1: rule__FetchFirst__RowAlternatives_1_0 : ( ( ROW ) | ( ROWS ) );
    public final void rule__FetchFirst__RowAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3290:1: ( ( ROW ) | ( ROWS ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==ROW) ) {
                alt6=1;
            }
            else if ( (LA6_0==ROWS) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSQLParser.g:3291:2: ( ROW )
                    {
                    // InternalSQLParser.g:3291:2: ( ROW )
                    // InternalSQLParser.g:3292:3: ROW
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }
                    match(input,ROW,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3297:2: ( ROWS )
                    {
                    // InternalSQLParser.g:3297:2: ( ROWS )
                    // InternalSQLParser.g:3298:3: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAlternatives_1_0"


    // $ANTLR start "rule__Limit__Alternatives"
    // InternalSQLParser.g:3307:1: rule__Limit__Alternatives : ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) );
    public final void rule__Limit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3311:1: ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==ALL) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_UNSIGNED) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSQLParser.g:3312:2: ( ( rule__Limit__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:3312:2: ( ( rule__Limit__Group_0__0 ) )
                    // InternalSQLParser.g:3313:3: ( rule__Limit__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:3314:3: ( rule__Limit__Group_0__0 )
                    // InternalSQLParser.g:3314:4: rule__Limit__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3318:2: ( ( rule__Limit__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:3318:2: ( ( rule__Limit__Group_1__0 ) )
                    // InternalSQLParser.g:3319:3: ( rule__Limit__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:3320:3: ( rule__Limit__Group_1__0 )
                    // InternalSQLParser.g:3320:4: rule__Limit__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Alternatives"


    // $ANTLR start "rule__SelectSubSet__OpAlternatives_0_0"
    // InternalSQLParser.g:3328:1: rule__SelectSubSet__OpAlternatives_0_0 : ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) );
    public final void rule__SelectSubSet__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3332:1: ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) )
            int alt8=4;
            switch ( input.LA(1) ) {
            case UNION:
                {
                alt8=1;
                }
                break;
            case INTERSECT:
                {
                alt8=2;
                }
                break;
            case MINUS:
                {
                alt8=3;
                }
                break;
            case EXCEPT:
                {
                alt8=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalSQLParser.g:3333:2: ( UNION )
                    {
                    // InternalSQLParser.g:3333:2: ( UNION )
                    // InternalSQLParser.g:3334:3: UNION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }
                    match(input,UNION,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3339:2: ( INTERSECT )
                    {
                    // InternalSQLParser.g:3339:2: ( INTERSECT )
                    // InternalSQLParser.g:3340:3: INTERSECT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }
                    match(input,INTERSECT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3345:2: ( MINUS )
                    {
                    // InternalSQLParser.g:3345:2: ( MINUS )
                    // InternalSQLParser.g:3346:3: MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }
                    match(input,MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3351:2: ( EXCEPT )
                    {
                    // InternalSQLParser.g:3351:2: ( EXCEPT )
                    // InternalSQLParser.g:3352:3: EXCEPT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }
                    match(input,EXCEPT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAlternatives_0_0"


    // $ANTLR start "rule__Select__Alternatives_2_1"
    // InternalSQLParser.g:3361:1: rule__Select__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) );
    public final void rule__Select__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3365:1: ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_INT) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_SIGNED_DOUBLE) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSQLParser.g:3366:2: ( RULE_INT )
                    {
                    // InternalSQLParser.g:3366:2: ( RULE_INT )
                    // InternalSQLParser.g:3367:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3372:2: ( RULE_SIGNED_DOUBLE )
                    {
                    // InternalSQLParser.g:3372:2: ( RULE_SIGNED_DOUBLE )
                    // InternalSQLParser.g:3373:3: RULE_SIGNED_DOUBLE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Alternatives_2_1"


    // $ANTLR start "rule__ColumnOrAlias__Alternatives"
    // InternalSQLParser.g:3382:1: rule__ColumnOrAlias__Alternatives : ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) );
    public final void rule__ColumnOrAlias__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3386:1: ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==FullStop) ) {
                    int LA10_6 = input.LA(3);

                    if ( (LA10_6==RULE_STAR) ) {
                        alt10=3;
                    }
                    else if ( ((LA10_6>=RULE_STRING && LA10_6<=RULE_ID)) ) {
                        alt10=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 10, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA10_1==EOF||LA10_1==FROM||LA10_1==LeftParenthesisPlusSignRightParenthesis||LA10_1==AS||(LA10_1>=VerticalLineVerticalLine && LA10_1<=HyphenMinus)||LA10_1==Solidus||LA10_1==RULE_STAR||(LA10_1>=RULE_STRING && LA10_1<=RULE_ID)) ) {
                    alt10=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DBNAME:
                {
                int LA10_2 = input.LA(2);

                if ( (LA10_2==FullStop) ) {
                    int LA10_6 = input.LA(3);

                    if ( (LA10_6==RULE_STAR) ) {
                        alt10=3;
                    }
                    else if ( ((LA10_6>=RULE_STRING && LA10_6<=RULE_ID)) ) {
                        alt10=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 10, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA10_2==EOF||LA10_2==FROM||LA10_2==LeftParenthesisPlusSignRightParenthesis||LA10_2==AS||(LA10_2>=VerticalLineVerticalLine && LA10_2<=HyphenMinus)||LA10_2==Solidus||LA10_2==RULE_STAR||(LA10_2>=RULE_STRING && LA10_2<=RULE_ID)) ) {
                    alt10=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
                {
                int LA10_3 = input.LA(2);

                if ( (LA10_3==FullStop) ) {
                    int LA10_6 = input.LA(3);

                    if ( (LA10_6==RULE_STAR) ) {
                        alt10=3;
                    }
                    else if ( ((LA10_6>=RULE_STRING && LA10_6<=RULE_ID)) ) {
                        alt10=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 10, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA10_3==EOF||LA10_3==FROM||LA10_3==LeftParenthesisPlusSignRightParenthesis||LA10_3==AS||(LA10_3>=VerticalLineVerticalLine && LA10_3<=HyphenMinus)||LA10_3==Solidus||LA10_3==RULE_STAR||(LA10_3>=RULE_STRING && LA10_3<=RULE_ID)) ) {
                    alt10=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 3, input);

                    throw nvae;
                }
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt10=1;
                }
                break;
            case RULE_STAR:
                {
                alt10=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalSQLParser.g:3387:2: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:3387:2: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    // InternalSQLParser.g:3388:3: ( rule__ColumnOrAlias__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:3389:3: ( rule__ColumnOrAlias__Group_0__0 )
                    // InternalSQLParser.g:3389:4: rule__ColumnOrAlias__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3393:2: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3393:2: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    // InternalSQLParser.g:3394:3: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }
                    // InternalSQLParser.g:3395:3: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    // InternalSQLParser.g:3395:4: rule__ColumnOrAlias__AllColsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AllColsAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3399:2: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3399:2: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    // InternalSQLParser.g:3400:3: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }
                    // InternalSQLParser.g:3401:3: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    // InternalSQLParser.g:3401:4: rule__ColumnOrAlias__DbAllColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__DbAllColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Alternatives"


    // $ANTLR start "rule__FromTableJoin__Alternatives_2"
    // InternalSQLParser.g:3409:1: rule__FromTableJoin__Alternatives_2 : ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) );
    public final void rule__FromTableJoin__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3413:1: ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==ON) ) {
                alt11=1;
            }
            else if ( (LA11_0==USING) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSQLParser.g:3414:2: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    {
                    // InternalSQLParser.g:3414:2: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    // InternalSQLParser.g:3415:3: ( rule__FromTableJoin__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }
                    // InternalSQLParser.g:3416:3: ( rule__FromTableJoin__Group_2_0__0 )
                    // InternalSQLParser.g:3416:4: rule__FromTableJoin__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3420:2: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:3420:2: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    // InternalSQLParser.g:3421:3: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:3422:3: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    // InternalSQLParser.g:3422:4: rule__FromTableJoin__JoinCondAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__JoinCondAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Alternatives_2"


    // $ANTLR start "rule__TableOrAlias__Alternatives_0"
    // InternalSQLParser.g:3430:1: rule__TableOrAlias__Alternatives_0 : ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) );
    public final void rule__TableOrAlias__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3434:1: ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) )
            int alt12=3;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=RULE_STRING && LA12_0<=RULE_ID)) ) {
                alt12=1;
            }
            else if ( (LA12_0==LeftParenthesis) ) {
                int LA12_2 = input.LA(2);

                if ( (LA12_2==SELECT) ) {
                    alt12=2;
                }
                else if ( (LA12_2==VALUES) ) {
                    alt12=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalSQLParser.g:3435:2: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    {
                    // InternalSQLParser.g:3435:2: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    // InternalSQLParser.g:3436:3: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }
                    // InternalSQLParser.g:3437:3: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    // InternalSQLParser.g:3437:4: rule__TableOrAlias__TfullAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TfullAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3441:2: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    {
                    // InternalSQLParser.g:3441:2: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    // InternalSQLParser.g:3442:3: ( rule__TableOrAlias__SqAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }
                    // InternalSQLParser.g:3443:3: ( rule__TableOrAlias__SqAssignment_0_1 )
                    // InternalSQLParser.g:3443:4: rule__TableOrAlias__SqAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__SqAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3447:2: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    {
                    // InternalSQLParser.g:3447:2: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    // InternalSQLParser.g:3448:3: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }
                    // InternalSQLParser.g:3449:3: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    // InternalSQLParser.g:3449:4: rule__TableOrAlias__ValuesAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__ValuesAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_0"


    // $ANTLR start "rule__TableOrAlias__Alternatives_1"
    // InternalSQLParser.g:3457:1: rule__TableOrAlias__Alternatives_1 : ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) );
    public final void rule__TableOrAlias__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3461:1: ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==PIVOT) ) {
                alt13=1;
            }
            else if ( (LA13_0==UNPIVOT) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalSQLParser.g:3462:2: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:3462:2: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    // InternalSQLParser.g:3463:3: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:3464:3: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    // InternalSQLParser.g:3464:4: rule__TableOrAlias__PivotAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__PivotAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3468:2: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:3468:2: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    // InternalSQLParser.g:3469:3: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:3470:3: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    // InternalSQLParser.g:3470:4: rule__TableOrAlias__UnpivotAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__UnpivotAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_1"


    // $ANTLR start "rule__RowValue__Alternatives"
    // InternalSQLParser.g:3478:1: rule__RowValue__Alternatives : ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) );
    public final void rule__RowValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3482:1: ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0>=RULE_UNSIGNED && LA14_0<=RULE_SIGNED_DOUBLE)||LA14_0==RULE_STRING_) ) {
                alt14=1;
            }
            else if ( (LA14_0==NULL) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSQLParser.g:3483:2: ( ruleScalarNumberOperand )
                    {
                    // InternalSQLParser.g:3483:2: ( ruleScalarNumberOperand )
                    // InternalSQLParser.g:3484:3: ruleScalarNumberOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarNumberOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3489:2: ( ( rule__RowValue__NullAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3489:2: ( ( rule__RowValue__NullAssignment_1 ) )
                    // InternalSQLParser.g:3490:3: ( rule__RowValue__NullAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }
                    // InternalSQLParser.g:3491:3: ( rule__RowValue__NullAssignment_1 )
                    // InternalSQLParser.g:3491:4: rule__RowValue__NullAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValue__NullAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__Alternatives"


    // $ANTLR start "rule__PivotInClause__Alternatives_2"
    // InternalSQLParser.g:3499:1: rule__PivotInClause__Alternatives_2 : ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) );
    public final void rule__PivotInClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3503:1: ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA15_1 = input.LA(2);

                if ( ((LA15_1>=RULE_STRING && LA15_1<=RULE_ID)) ) {
                    alt15=2;
                }
                else if ( (LA15_1==SELECT) ) {
                    alt15=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt15=2;
                }
                break;
            case ANY:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSQLParser.g:3504:2: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:3504:2: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    // InternalSQLParser.g:3505:3: ( rule__PivotInClause__SqAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:3506:3: ( rule__PivotInClause__SqAssignment_2_0 )
                    // InternalSQLParser.g:3506:4: rule__PivotInClause__SqAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__SqAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3510:2: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:3510:2: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    // InternalSQLParser.g:3511:3: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:3512:3: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    // InternalSQLParser.g:3512:4: rule__PivotInClause__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3516:2: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    {
                    // InternalSQLParser.g:3516:2: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    // InternalSQLParser.g:3517:3: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }
                    // InternalSQLParser.g:3518:3: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    // InternalSQLParser.g:3518:4: rule__PivotInClause__PinanyAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__PinanyAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Alternatives_2"


    // $ANTLR start "rule__UnpivotTable__Alternatives_1_0"
    // InternalSQLParser.g:3526:1: rule__UnpivotTable__Alternatives_1_0 : ( ( INCLUDE ) | ( EXCLUDE ) );
    public final void rule__UnpivotTable__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3530:1: ( ( INCLUDE ) | ( EXCLUDE ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==INCLUDE) ) {
                alt16=1;
            }
            else if ( (LA16_0==EXCLUDE) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSQLParser.g:3531:2: ( INCLUDE )
                    {
                    // InternalSQLParser.g:3531:2: ( INCLUDE )
                    // InternalSQLParser.g:3532:3: INCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }
                    match(input,INCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3537:2: ( EXCLUDE )
                    {
                    // InternalSQLParser.g:3537:2: ( EXCLUDE )
                    // InternalSQLParser.g:3538:3: EXCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }
                    match(input,EXCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Alternatives_1_0"


    // $ANTLR start "rule__PivotForClause__Alternatives_1"
    // InternalSQLParser.g:3547:1: rule__PivotForClause__Alternatives_1 : ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) );
    public final void rule__PivotForClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3551:1: ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=RULE_STRING && LA17_0<=RULE_ID)) ) {
                alt17=1;
            }
            else if ( (LA17_0==LeftParenthesis) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSQLParser.g:3552:2: ( ruleColumnFull )
                    {
                    // InternalSQLParser.g:3552:2: ( ruleColumnFull )
                    // InternalSQLParser.g:3553:3: ruleColumnFull
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleColumnFull();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3558:2: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:3558:2: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    // InternalSQLParser.g:3559:3: ( rule__PivotForClause__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:3560:3: ( rule__PivotForClause__Group_1_1__0 )
                    // InternalSQLParser.g:3560:4: rule__PivotForClause__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotForClause__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Alternatives_1"


    // $ANTLR start "rule__PivotColumns__Alternatives"
    // InternalSQLParser.g:3568:1: rule__PivotColumns__Alternatives : ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) );
    public final void rule__PivotColumns__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3572:1: ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( ((LA18_0>=RULE_STRING && LA18_0<=RULE_ID)) ) {
                alt18=1;
            }
            else if ( (LA18_0==LeftParenthesis) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSQLParser.g:3573:2: ( rulePivotCol )
                    {
                    // InternalSQLParser.g:3573:2: ( rulePivotCol )
                    // InternalSQLParser.g:3574:3: rulePivotCol
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePivotCol();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3579:2: ( ( rule__PivotColumns__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:3579:2: ( ( rule__PivotColumns__Group_1__0 ) )
                    // InternalSQLParser.g:3580:3: ( rule__PivotColumns__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:3581:3: ( rule__PivotColumns__Group_1__0 )
                    // InternalSQLParser.g:3581:4: rule__PivotColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Alternatives"


    // $ANTLR start "rule__OrderByColumnFull__Alternatives_0"
    // InternalSQLParser.g:3589:1: rule__OrderByColumnFull__Alternatives_0 : ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) );
    public final void rule__OrderByColumnFull__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3593:1: ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( ((LA19_0>=RULE_STRING && LA19_0<=RULE_ID)) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_UNSIGNED) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSQLParser.g:3594:2: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    {
                    // InternalSQLParser.g:3594:2: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    // InternalSQLParser.g:3595:3: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }
                    // InternalSQLParser.g:3596:3: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    // InternalSQLParser.g:3596:4: rule__OrderByColumnFull__ColOrderAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3600:2: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    {
                    // InternalSQLParser.g:3600:2: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    // InternalSQLParser.g:3601:3: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }
                    // InternalSQLParser.g:3602:3: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    // InternalSQLParser.g:3602:4: rule__OrderByColumnFull__ColOrderIntAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderIntAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Alternatives_0"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAlternatives_1_0"
    // InternalSQLParser.g:3610:1: rule__OrderByColumnFull__DirectionAlternatives_1_0 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByColumnFull__DirectionAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3614:1: ( ( ASC ) | ( DESC ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==ASC) ) {
                alt20=1;
            }
            else if ( (LA20_0==DESC) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalSQLParser.g:3615:2: ( ASC )
                    {
                    // InternalSQLParser.g:3615:2: ( ASC )
                    // InternalSQLParser.g:3616:3: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3621:2: ( DESC )
                    {
                    // InternalSQLParser.g:3621:2: ( DESC )
                    // InternalSQLParser.g:3622:3: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAlternatives_1_0"


    // $ANTLR start "rule__GroupByColumnFull__Alternatives"
    // InternalSQLParser.g:3631:1: rule__GroupByColumnFull__Alternatives : ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) );
    public final void rule__GroupByColumnFull__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3635:1: ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) )
            int alt21=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA21_1 = input.LA(2);

                if ( (LA21_1==EOF||LA21_1==INTERSECT||LA21_1==EXCEPT||LA21_1==HAVING||LA21_1==OFFSET||LA21_1==FETCH||(LA21_1>=LIMIT && LA21_1<=MINUS)||LA21_1==ORDER||LA21_1==UNION||LA21_1==RightParenthesis||LA21_1==Comma||LA21_1==FullStop) ) {
                    alt21=1;
                }
                else if ( (LA21_1==LeftParenthesis) ) {
                    alt21=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 21, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt21=1;
                }
                break;
            case RULE_UNSIGNED:
                {
                alt21=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSQLParser.g:3636:2: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3636:2: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    // InternalSQLParser.g:3637:3: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }
                    // InternalSQLParser.g:3638:3: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    // InternalSQLParser.g:3638:4: rule__GroupByColumnFull__ColGrByAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__ColGrByAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3642:2: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3642:2: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    // InternalSQLParser.g:3643:3: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }
                    // InternalSQLParser.g:3644:3: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    // InternalSQLParser.g:3644:4: rule__GroupByColumnFull__GbFunctionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GbFunctionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3648:2: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3648:2: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    // InternalSQLParser.g:3649:3: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }
                    // InternalSQLParser.g:3650:3: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    // InternalSQLParser.g:3650:4: rule__GroupByColumnFull__GrByIntAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GrByIntAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__Alternatives"
    // InternalSQLParser.g:3658:1: rule__ExpressionFragmentSecond__Alternatives : ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) );
    public final void rule__ExpressionFragmentSecond__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3662:1: ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==AND||LA22_0==OR) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_JRNPARAM) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalSQLParser.g:3663:2: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:3663:2: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    // InternalSQLParser.g:3664:3: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:3665:3: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    // InternalSQLParser.g:3665:4: rule__ExpressionFragmentSecond__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3669:2: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3669:2: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    // InternalSQLParser.g:3670:3: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }
                    // InternalSQLParser.g:3671:3: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    // InternalSQLParser.g:3671:4: rule__ExpressionFragmentSecond__NotPrmAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__NotPrmAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"
    // InternalSQLParser.g:3679:1: rule__ExpressionFragmentSecond__CAlternatives_0_0_0 : ( ( AND ) | ( OR ) );
    public final void rule__ExpressionFragmentSecond__CAlternatives_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3683:1: ( ( AND ) | ( OR ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==AND) ) {
                alt23=1;
            }
            else if ( (LA23_0==OR) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSQLParser.g:3684:2: ( AND )
                    {
                    // InternalSQLParser.g:3684:2: ( AND )
                    // InternalSQLParser.g:3685:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3690:2: ( OR )
                    {
                    // InternalSQLParser.g:3690:2: ( OR )
                    // InternalSQLParser.g:3691:3: OR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }
                    match(input,OR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"


    // $ANTLR start "rule__ExpressionFragment__Alternatives"
    // InternalSQLParser.g:3700:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );
    public final void rule__ExpressionFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3704:1: ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) )
            int alt24=6;
            alt24 = dfa24.predict(input);
            switch (alt24) {
                case 1 :
                    // InternalSQLParser.g:3705:2: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3705:2: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    // InternalSQLParser.g:3706:3: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }
                    // InternalSQLParser.g:3707:3: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    // InternalSQLParser.g:3707:4: rule__ExpressionFragment__ExpgroupAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpgroupAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3711:2: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3711:2: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    // InternalSQLParser.g:3712:3: ( rule__ExpressionFragment__ExpAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }
                    // InternalSQLParser.g:3713:3: ( rule__ExpressionFragment__ExpAssignment_1 )
                    // InternalSQLParser.g:3713:4: rule__ExpressionFragment__ExpAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3717:2: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3717:2: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    // InternalSQLParser.g:3718:3: ( rule__ExpressionFragment__XexpAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }
                    // InternalSQLParser.g:3719:3: ( rule__ExpressionFragment__XexpAssignment_2 )
                    // InternalSQLParser.g:3719:4: rule__ExpressionFragment__XexpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__XexpAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3723:2: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    {
                    // InternalSQLParser.g:3723:2: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    // InternalSQLParser.g:3724:3: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }
                    // InternalSQLParser.g:3725:3: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    // InternalSQLParser.g:3725:4: rule__ExpressionFragment__NotPrmAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__NotPrmAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3729:2: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    {
                    // InternalSQLParser.g:3729:2: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    // InternalSQLParser.g:3730:3: ( rule__ExpressionFragment__InAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }
                    // InternalSQLParser.g:3731:3: ( rule__ExpressionFragment__InAssignment_4 )
                    // InternalSQLParser.g:3731:4: rule__ExpressionFragment__InAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__InAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3735:2: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    {
                    // InternalSQLParser.g:3735:2: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    // InternalSQLParser.g:3736:3: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }
                    // InternalSQLParser.g:3737:3: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    // InternalSQLParser.g:3737:4: rule__ExpressionFragment__ExistsAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExistsAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__Alternatives"


    // $ANTLR start "rule__ExpressionFragment__XexpAlternatives_2_0"
    // InternalSQLParser.g:3745:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );
    public final void rule__ExpressionFragment__XexpAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3749:1: ( ( ruleXExpression ) | ( ruleXExpression_ ) )
            int alt25=2;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalSQLParser.g:3750:2: ( ruleXExpression )
                    {
                    // InternalSQLParser.g:3750:2: ( ruleXExpression )
                    // InternalSQLParser.g:3751:3: ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3756:2: ( ruleXExpression_ )
                    {
                    // InternalSQLParser.g:3756:2: ( ruleXExpression_ )
                    // InternalSQLParser.g:3757:3: ruleXExpression_
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression_();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAlternatives_2_0"


    // $ANTLR start "rule__ExpressionGroup__IsnotAlternatives_1_0"
    // InternalSQLParser.g:3766:1: rule__ExpressionGroup__IsnotAlternatives_1_0 : ( ( NOT ) | ( NOT_1 ) );
    public final void rule__ExpressionGroup__IsnotAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3770:1: ( ( NOT ) | ( NOT_1 ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==NOT) ) {
                alt26=1;
            }
            else if ( (LA26_0==NOT_1) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSQLParser.g:3771:2: ( NOT )
                    {
                    // InternalSQLParser.g:3771:2: ( NOT )
                    // InternalSQLParser.g:3772:3: NOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3777:2: ( NOT_1 )
                    {
                    // InternalSQLParser.g:3777:2: ( NOT_1 )
                    // InternalSQLParser.g:3778:3: NOT_1
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }
                    match(input,NOT_1,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAlternatives_1_0"


    // $ANTLR start "rule__Expression__Alternatives_1"
    // InternalSQLParser.g:3787:1: rule__Expression__Alternatives_1 : ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) );
    public final void rule__Expression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3791:1: ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) )
            int alt27=6;
            switch ( input.LA(1) ) {
            case IS:
                {
                alt27=1;
                }
                break;
            case NOT:
                {
                switch ( input.LA(2) ) {
                case IN:
                    {
                    alt27=2;
                    }
                    break;
                case EXISTS:
                    {
                    alt27=3;
                    }
                    break;
                case BETWEEN:
                    {
                    alt27=4;
                    }
                    break;
                case LIKE:
                    {
                    alt27=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 2, input);

                    throw nvae;
                }

                }
                break;
            case IN:
                {
                alt27=2;
                }
                break;
            case EXISTS:
                {
                alt27=3;
                }
                break;
            case BETWEEN:
                {
                alt27=4;
                }
                break;
            case LIKE:
                {
                alt27=5;
                }
                break;
            case ExclamationMarkEqualsSign:
            case LessThanSignEqualsSign:
            case LessThanSignGreaterThanSign:
            case GreaterThanSignEqualsSign:
            case CircumflexAccentEqualsSign:
            case LessThanSign:
            case EqualsSign:
            case GreaterThanSign:
                {
                alt27=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalSQLParser.g:3792:2: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:3792:2: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    // InternalSQLParser.g:3793:3: ( rule__Expression__IsnullAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:3794:3: ( rule__Expression__IsnullAssignment_1_0 )
                    // InternalSQLParser.g:3794:4: rule__Expression__IsnullAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__IsnullAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3798:2: ( ( rule__Expression__InAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:3798:2: ( ( rule__Expression__InAssignment_1_1 ) )
                    // InternalSQLParser.g:3799:3: ( rule__Expression__InAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:3800:3: ( rule__Expression__InAssignment_1_1 )
                    // InternalSQLParser.g:3800:4: rule__Expression__InAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__InAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3804:2: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    {
                    // InternalSQLParser.g:3804:2: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    // InternalSQLParser.g:3805:3: ( rule__Expression__ExistsAssignment_1_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }
                    // InternalSQLParser.g:3806:3: ( rule__Expression__ExistsAssignment_1_2 )
                    // InternalSQLParser.g:3806:4: rule__Expression__ExistsAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__ExistsAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3810:2: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    {
                    // InternalSQLParser.g:3810:2: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    // InternalSQLParser.g:3811:3: ( rule__Expression__BetweenAssignment_1_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }
                    // InternalSQLParser.g:3812:3: ( rule__Expression__BetweenAssignment_1_3 )
                    // InternalSQLParser.g:3812:4: rule__Expression__BetweenAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__BetweenAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3816:2: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    {
                    // InternalSQLParser.g:3816:2: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    // InternalSQLParser.g:3817:3: ( rule__Expression__LikeAssignment_1_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }
                    // InternalSQLParser.g:3818:3: ( rule__Expression__LikeAssignment_1_4 )
                    // InternalSQLParser.g:3818:4: rule__Expression__LikeAssignment_1_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__LikeAssignment_1_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3822:2: ( ( rule__Expression__CompAssignment_1_5 ) )
                    {
                    // InternalSQLParser.g:3822:2: ( ( rule__Expression__CompAssignment_1_5 ) )
                    // InternalSQLParser.g:3823:3: ( rule__Expression__CompAssignment_1_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }
                    // InternalSQLParser.g:3824:3: ( rule__Expression__CompAssignment_1_5 )
                    // InternalSQLParser.g:3824:4: rule__Expression__CompAssignment_1_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__CompAssignment_1_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives_1"


    // $ANTLR start "rule__Comparison__OperatorAlternatives_0_0"
    // InternalSQLParser.g:3832:1: rule__Comparison__OperatorAlternatives_0_0 : ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) );
    public final void rule__Comparison__OperatorAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3836:1: ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) )
            int alt28=8;
            switch ( input.LA(1) ) {
            case GreaterThanSign:
                {
                alt28=1;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt28=2;
                }
                break;
            case LessThanSign:
                {
                alt28=3;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt28=4;
                }
                break;
            case EqualsSign:
                {
                alt28=5;
                }
                break;
            case LessThanSignGreaterThanSign:
                {
                alt28=6;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt28=7;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt28=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalSQLParser.g:3837:2: ( GreaterThanSign )
                    {
                    // InternalSQLParser.g:3837:2: ( GreaterThanSign )
                    // InternalSQLParser.g:3838:3: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3843:2: ( GreaterThanSignEqualsSign )
                    {
                    // InternalSQLParser.g:3843:2: ( GreaterThanSignEqualsSign )
                    // InternalSQLParser.g:3844:3: GreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3849:2: ( LessThanSign )
                    {
                    // InternalSQLParser.g:3849:2: ( LessThanSign )
                    // InternalSQLParser.g:3850:3: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3855:2: ( LessThanSignEqualsSign )
                    {
                    // InternalSQLParser.g:3855:2: ( LessThanSignEqualsSign )
                    // InternalSQLParser.g:3856:3: LessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3861:2: ( EqualsSign )
                    {
                    // InternalSQLParser.g:3861:2: ( EqualsSign )
                    // InternalSQLParser.g:3862:3: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3867:2: ( LessThanSignGreaterThanSign )
                    {
                    // InternalSQLParser.g:3867:2: ( LessThanSignGreaterThanSign )
                    // InternalSQLParser.g:3868:3: LessThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:3873:2: ( ExclamationMarkEqualsSign )
                    {
                    // InternalSQLParser.g:3873:2: ( ExclamationMarkEqualsSign )
                    // InternalSQLParser.g:3874:3: ExclamationMarkEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }
                    match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:3879:2: ( CircumflexAccentEqualsSign )
                    {
                    // InternalSQLParser.g:3879:2: ( CircumflexAccentEqualsSign )
                    // InternalSQLParser.g:3880:3: CircumflexAccentEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }
                    match(input,CircumflexAccentEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAlternatives_0_0"


    // $ANTLR start "rule__Comparison__SubOperatorAlternatives_1_0"
    // InternalSQLParser.g:3889:1: rule__Comparison__SubOperatorAlternatives_1_0 : ( ( ANY ) | ( ALL ) | ( SOME ) );
    public final void rule__Comparison__SubOperatorAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3893:1: ( ( ANY ) | ( ALL ) | ( SOME ) )
            int alt29=3;
            switch ( input.LA(1) ) {
            case ANY:
                {
                alt29=1;
                }
                break;
            case ALL:
                {
                alt29=2;
                }
                break;
            case SOME:
                {
                alt29=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalSQLParser.g:3894:2: ( ANY )
                    {
                    // InternalSQLParser.g:3894:2: ( ANY )
                    // InternalSQLParser.g:3895:3: ANY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }
                    match(input,ANY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3900:2: ( ALL )
                    {
                    // InternalSQLParser.g:3900:2: ( ALL )
                    // InternalSQLParser.g:3901:3: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3906:2: ( SOME )
                    {
                    // InternalSQLParser.g:3906:2: ( SOME )
                    // InternalSQLParser.g:3907:3: SOME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }
                    match(input,SOME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAlternatives_1_0"


    // $ANTLR start "rule__LikeOperand__Alternatives"
    // InternalSQLParser.g:3916:1: rule__LikeOperand__Alternatives : ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) );
    public final void rule__LikeOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3920:1: ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) )
            int alt30=4;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt30=1;
                }
                break;
            case RULE_ID:
                {
                alt30=2;
                }
                break;
            case CAST:
                {
                alt30=3;
                }
                break;
            case RULE_JRPARAM:
                {
                alt30=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalSQLParser.g:3921:2: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    {
                    // InternalSQLParser.g:3921:2: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    // InternalSQLParser.g:3922:3: ( rule__LikeOperand__Op2Assignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }
                    // InternalSQLParser.g:3923:3: ( rule__LikeOperand__Op2Assignment_0 )
                    // InternalSQLParser.g:3923:4: rule__LikeOperand__Op2Assignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Op2Assignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3927:2: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    {
                    // InternalSQLParser.g:3927:2: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    // InternalSQLParser.g:3928:3: ( rule__LikeOperand__Fop2Assignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }
                    // InternalSQLParser.g:3929:3: ( rule__LikeOperand__Fop2Assignment_1 )
                    // InternalSQLParser.g:3929:4: rule__LikeOperand__Fop2Assignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Fop2Assignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3933:2: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3933:2: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    // InternalSQLParser.g:3934:3: ( rule__LikeOperand__FcastAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }
                    // InternalSQLParser.g:3935:3: ( rule__LikeOperand__FcastAssignment_2 )
                    // InternalSQLParser.g:3935:4: rule__LikeOperand__FcastAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FcastAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3939:2: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    {
                    // InternalSQLParser.g:3939:2: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    // InternalSQLParser.g:3940:3: ( rule__LikeOperand__FparamAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }
                    // InternalSQLParser.g:3941:3: ( rule__LikeOperand__FparamAssignment_3 )
                    // InternalSQLParser.g:3941:4: rule__LikeOperand__FparamAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FparamAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Alternatives"


    // $ANTLR start "rule__InOperator__Alternatives_2"
    // InternalSQLParser.g:3949:1: rule__InOperator__Alternatives_2 : ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) );
    public final void rule__InOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3953:1: ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==LeftParenthesis) ) {
                int LA31_1 = input.LA(2);

                if ( ((LA31_1>=RULE_SIGNED_DOUBLE && LA31_1<=RULE_TIMESTAMP)||LA31_1==RULE_STRING_) ) {
                    alt31=2;
                }
                else if ( (LA31_1==SELECT) ) {
                    alt31=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 31, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalSQLParser.g:3954:2: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:3954:2: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    // InternalSQLParser.g:3955:3: ( rule__InOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:3956:3: ( rule__InOperator__SubqueryAssignment_2_0 )
                    // InternalSQLParser.g:3956:4: rule__InOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3960:2: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:3960:2: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    // InternalSQLParser.g:3961:3: ( rule__InOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:3962:3: ( rule__InOperator__OpListAssignment_2_1 )
                    // InternalSQLParser.g:3962:4: rule__InOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Alternatives_2"


    // $ANTLR start "rule__ExistsOperator__Alternatives_2"
    // InternalSQLParser.g:3970:1: rule__ExistsOperator__Alternatives_2 : ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) );
    public final void rule__ExistsOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3974:1: ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==LeftParenthesis) ) {
                int LA32_1 = input.LA(2);

                if ( ((LA32_1>=RULE_SIGNED_DOUBLE && LA32_1<=RULE_TIMESTAMP)||LA32_1==RULE_STRING_) ) {
                    alt32=2;
                }
                else if ( (LA32_1==SELECT) ) {
                    alt32=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 32, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSQLParser.g:3975:2: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:3975:2: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    // InternalSQLParser.g:3976:3: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:3977:3: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    // InternalSQLParser.g:3977:4: rule__ExistsOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3981:2: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:3981:2: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    // InternalSQLParser.g:3982:3: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:3983:3: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    // InternalSQLParser.g:3983:4: rule__ExistsOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Alternatives_2"


    // $ANTLR start "rule__OperandGroup__Alternatives"
    // InternalSQLParser.g:3991:1: rule__OperandGroup__Alternatives : ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) );
    public final void rule__OperandGroup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3995:1: ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==EXTRACT||LA33_0==CAST||LA33_0==CASE||(LA33_0>=RULE_JRPARAM && LA33_0<=RULE_JRNPARAM)||(LA33_0>=RULE_UNSIGNED && LA33_0<=RULE_SIGNED_DOUBLE)||(LA33_0>=RULE_STRING_ && LA33_0<=RULE_ID)) ) {
                alt33=1;
            }
            else if ( (LA33_0==LeftParenthesis) ) {
                int LA33_2 = input.LA(2);

                if ( (LA33_2==SELECT) ) {
                    alt33=1;
                }
                else if ( (LA33_2==EXTRACT||LA33_2==CAST||LA33_2==CASE||LA33_2==LeftParenthesis||(LA33_2>=RULE_JRPARAM && LA33_2<=RULE_JRNPARAM)||(LA33_2>=RULE_UNSIGNED && LA33_2<=RULE_SIGNED_DOUBLE)||(LA33_2>=RULE_STRING_ && LA33_2<=RULE_ID)) ) {
                    alt33=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 33, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSQLParser.g:3996:2: ( ruleOperand )
                    {
                    // InternalSQLParser.g:3996:2: ( ruleOperand )
                    // InternalSQLParser.g:3997:3: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4002:2: ( ( rule__OperandGroup__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:4002:2: ( ( rule__OperandGroup__Group_1__0 ) )
                    // InternalSQLParser.g:4003:3: ( rule__OperandGroup__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:4004:3: ( rule__OperandGroup__Group_1__0 )
                    // InternalSQLParser.g:4004:4: rule__OperandGroup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandGroup__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Alternatives"


    // $ANTLR start "rule__Operand__Alternatives_1_0"
    // InternalSQLParser.g:4012:1: rule__Operand__Alternatives_1_0 : ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) );
    public final void rule__Operand__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4016:1: ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) )
            int alt34=5;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                alt34=1;
                }
                break;
            case HyphenMinus:
                {
                alt34=2;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt34=3;
                }
                break;
            case RULE_STAR:
                {
                alt34=4;
                }
                break;
            case Solidus:
                {
                alt34=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalSQLParser.g:4017:2: ( ( rule__Operand__Group_1_0_0__0 ) )
                    {
                    // InternalSQLParser.g:4017:2: ( ( rule__Operand__Group_1_0_0__0 ) )
                    // InternalSQLParser.g:4018:3: ( rule__Operand__Group_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }
                    // InternalSQLParser.g:4019:3: ( rule__Operand__Group_1_0_0__0 )
                    // InternalSQLParser.g:4019:4: rule__Operand__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4023:2: ( ( rule__Operand__Group_1_0_1__0 ) )
                    {
                    // InternalSQLParser.g:4023:2: ( ( rule__Operand__Group_1_0_1__0 ) )
                    // InternalSQLParser.g:4024:3: ( rule__Operand__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }
                    // InternalSQLParser.g:4025:3: ( rule__Operand__Group_1_0_1__0 )
                    // InternalSQLParser.g:4025:4: rule__Operand__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4029:2: ( ( rule__Operand__Group_1_0_2__0 ) )
                    {
                    // InternalSQLParser.g:4029:2: ( ( rule__Operand__Group_1_0_2__0 ) )
                    // InternalSQLParser.g:4030:3: ( rule__Operand__Group_1_0_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }
                    // InternalSQLParser.g:4031:3: ( rule__Operand__Group_1_0_2__0 )
                    // InternalSQLParser.g:4031:4: rule__Operand__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4035:2: ( ( rule__Operand__Group_1_0_3__0 ) )
                    {
                    // InternalSQLParser.g:4035:2: ( ( rule__Operand__Group_1_0_3__0 ) )
                    // InternalSQLParser.g:4036:3: ( rule__Operand__Group_1_0_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }
                    // InternalSQLParser.g:4037:3: ( rule__Operand__Group_1_0_3__0 )
                    // InternalSQLParser.g:4037:4: rule__Operand__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4041:2: ( ( rule__Operand__Group_1_0_4__0 ) )
                    {
                    // InternalSQLParser.g:4041:2: ( ( rule__Operand__Group_1_0_4__0 ) )
                    // InternalSQLParser.g:4042:3: ( rule__Operand__Group_1_0_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }
                    // InternalSQLParser.g:4043:3: ( rule__Operand__Group_1_0_4__0 )
                    // InternalSQLParser.g:4043:4: rule__Operand__Group_1_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Alternatives_1_0"


    // $ANTLR start "rule__OperandFragment__Alternatives"
    // InternalSQLParser.g:4051:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) );
    public final void rule__OperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4055:1: ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) )
            int alt35=7;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // InternalSQLParser.g:4056:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4056:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    // InternalSQLParser.g:4057:3: ( rule__OperandFragment__ColumnAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }
                    // InternalSQLParser.g:4058:3: ( rule__OperandFragment__ColumnAssignment_0 )
                    // InternalSQLParser.g:4058:4: rule__OperandFragment__ColumnAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__ColumnAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4062:2: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4062:2: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    // InternalSQLParser.g:4063:3: ( rule__OperandFragment__XopAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }
                    // InternalSQLParser.g:4064:3: ( rule__OperandFragment__XopAssignment_1 )
                    // InternalSQLParser.g:4064:4: rule__OperandFragment__XopAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__XopAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4068:2: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4068:2: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    // InternalSQLParser.g:4069:3: ( rule__OperandFragment__SubqAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }
                    // InternalSQLParser.g:4070:3: ( rule__OperandFragment__SubqAssignment_2 )
                    // InternalSQLParser.g:4070:4: rule__OperandFragment__SubqAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SubqAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4074:2: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4074:2: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    // InternalSQLParser.g:4075:3: ( rule__OperandFragment__FcastAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }
                    // InternalSQLParser.g:4076:3: ( rule__OperandFragment__FcastAssignment_3 )
                    // InternalSQLParser.g:4076:4: rule__OperandFragment__FcastAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FcastAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4080:2: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    {
                    // InternalSQLParser.g:4080:2: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    // InternalSQLParser.g:4081:3: ( rule__OperandFragment__FextAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }
                    // InternalSQLParser.g:4082:3: ( rule__OperandFragment__FextAssignment_4 )
                    // InternalSQLParser.g:4082:4: rule__OperandFragment__FextAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FextAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4086:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    {
                    // InternalSQLParser.g:4086:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    // InternalSQLParser.g:4087:3: ( rule__OperandFragment__FuncAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }
                    // InternalSQLParser.g:4088:3: ( rule__OperandFragment__FuncAssignment_5 )
                    // InternalSQLParser.g:4088:4: rule__OperandFragment__FuncAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FuncAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:4092:2: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    {
                    // InternalSQLParser.g:4092:2: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    // InternalSQLParser.g:4093:3: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }
                    // InternalSQLParser.g:4094:3: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    // InternalSQLParser.g:4094:4: rule__OperandFragment__SqlcaseAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SqlcaseAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__Alternatives"


    // $ANTLR start "rule__OperandFunction__Alternatives_2"
    // InternalSQLParser.g:4102:1: rule__OperandFunction__Alternatives_2 : ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) );
    public final void rule__OperandFunction__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4106:1: ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_STAR) ) {
                alt36=1;
            }
            else if ( (LA36_0==DISTINCT||LA36_0==EXTRACT||LA36_0==CAST||LA36_0==CASE||LA36_0==ALL||LA36_0==LeftParenthesis||(LA36_0>=RULE_JRPARAM && LA36_0<=RULE_JRNPARAM)||(LA36_0>=RULE_UNSIGNED && LA36_0<=RULE_SIGNED_DOUBLE)||(LA36_0>=RULE_STRING_ && LA36_0<=RULE_ID)) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalSQLParser.g:4107:2: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4107:2: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    // InternalSQLParser.g:4108:3: ( rule__OperandFunction__StarAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4109:3: ( rule__OperandFunction__StarAssignment_2_0 )
                    // InternalSQLParser.g:4109:4: rule__OperandFunction__StarAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__StarAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4113:2: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4113:2: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    // InternalSQLParser.g:4114:3: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4115:3: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    // InternalSQLParser.g:4115:4: rule__OperandFunction__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Alternatives_2"


    // $ANTLR start "rule__WindowingClause__Alternatives_0"
    // InternalSQLParser.g:4123:1: rule__WindowingClause__Alternatives_0 : ( ( ROWS ) | ( RANGE ) );
    public final void rule__WindowingClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4127:1: ( ( ROWS ) | ( RANGE ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==ROWS) ) {
                alt37=1;
            }
            else if ( (LA37_0==RANGE) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalSQLParser.g:4128:2: ( ROWS )
                    {
                    // InternalSQLParser.g:4128:2: ( ROWS )
                    // InternalSQLParser.g:4129:3: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4134:2: ( RANGE )
                    {
                    // InternalSQLParser.g:4134:2: ( RANGE )
                    // InternalSQLParser.g:4135:3: RANGE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }
                    match(input,RANGE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_0"


    // $ANTLR start "rule__WindowingClause__Alternatives_1"
    // InternalSQLParser.g:4144:1: rule__WindowingClause__Alternatives_1 : ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) );
    public final void rule__WindowingClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4148:1: ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==BETWEEN) ) {
                alt38=1;
            }
            else if ( (LA38_0==UNBOUNDED||LA38_0==CURRENT||LA38_0==EXTRACT||LA38_0==CAST||LA38_0==CASE||LA38_0==LeftParenthesis||(LA38_0>=RULE_JRPARAM && LA38_0<=RULE_JRNPARAM)||(LA38_0>=RULE_UNSIGNED && LA38_0<=RULE_SIGNED_DOUBLE)||(LA38_0>=RULE_STRING_ && LA38_0<=RULE_ID)) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalSQLParser.g:4149:2: ( ruleWindowingClauseBetween )
                    {
                    // InternalSQLParser.g:4149:2: ( ruleWindowingClauseBetween )
                    // InternalSQLParser.g:4150:3: ruleWindowingClauseBetween
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseBetween();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4155:2: ( ruleWindowingClauseOperandPreceding )
                    {
                    // InternalSQLParser.g:4155:2: ( ruleWindowingClauseOperandPreceding )
                    // InternalSQLParser.g:4156:3: ruleWindowingClauseOperandPreceding
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseOperandPreceding();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1"
    // InternalSQLParser.g:4165:1: rule__WindowingClauseOperandFollowing__Alternatives_1 : ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4169:1: ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) )
            int alt39=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt39=1;
                }
                break;
            case CURRENT:
                {
                alt39=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalSQLParser.g:4170:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    {
                    // InternalSQLParser.g:4170:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    // InternalSQLParser.g:4171:3: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }
                    // InternalSQLParser.g:4172:3: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    // InternalSQLParser.g:4172:4: rule__WindowingClauseOperandFollowing__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4176:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:4176:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    // InternalSQLParser.g:4177:3: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:4178:3: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    // InternalSQLParser.g:4178:4: rule__WindowingClauseOperandFollowing__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4182:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    {
                    // InternalSQLParser.g:4182:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    // InternalSQLParser.g:4183:3: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }
                    // InternalSQLParser.g:4184:3: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    // InternalSQLParser.g:4184:4: rule__WindowingClauseOperandFollowing__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"
    // InternalSQLParser.g:4192:1: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4196:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==PRECEDING) ) {
                alt40=1;
            }
            else if ( (LA40_0==KW_FOLLOWING) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalSQLParser.g:4197:2: ( PRECEDING )
                    {
                    // InternalSQLParser.g:4197:2: ( PRECEDING )
                    // InternalSQLParser.g:4198:3: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4203:2: ( KW_FOLLOWING )
                    {
                    // InternalSQLParser.g:4203:2: ( KW_FOLLOWING )
                    // InternalSQLParser.g:4204:3: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1"
    // InternalSQLParser.g:4213:1: rule__WindowingClauseOperandPreceding__Alternatives_1 : ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4217:1: ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) )
            int alt41=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt41=1;
                }
                break;
            case CURRENT:
                {
                alt41=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt41=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalSQLParser.g:4218:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    {
                    // InternalSQLParser.g:4218:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    // InternalSQLParser.g:4219:3: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }
                    // InternalSQLParser.g:4220:3: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    // InternalSQLParser.g:4220:4: rule__WindowingClauseOperandPreceding__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4224:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:4224:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    // InternalSQLParser.g:4225:3: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:4226:3: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    // InternalSQLParser.g:4226:4: rule__WindowingClauseOperandPreceding__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4230:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    {
                    // InternalSQLParser.g:4230:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    // InternalSQLParser.g:4231:3: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }
                    // InternalSQLParser.g:4232:3: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    // InternalSQLParser.g:4232:4: rule__WindowingClauseOperandPreceding__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"
    // InternalSQLParser.g:4240:1: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4244:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==PRECEDING) ) {
                alt42=1;
            }
            else if ( (LA42_0==KW_FOLLOWING) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalSQLParser.g:4245:2: ( PRECEDING )
                    {
                    // InternalSQLParser.g:4245:2: ( PRECEDING )
                    // InternalSQLParser.g:4246:3: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4251:2: ( KW_FOLLOWING )
                    {
                    // InternalSQLParser.g:4251:2: ( KW_FOLLOWING )
                    // InternalSQLParser.g:4252:3: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"


    // $ANTLR start "rule__OrderByClause__Alternatives_0"
    // InternalSQLParser.g:4261:1: rule__OrderByClause__Alternatives_0 : ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) );
    public final void rule__OrderByClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4265:1: ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==ORDER) ) {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==BY) ) {
                    alt43=1;
                }
                else if ( (LA43_1==SIBLINGS) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalSQLParser.g:4266:2: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    {
                    // InternalSQLParser.g:4266:2: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    // InternalSQLParser.g:4267:3: ( rule__OrderByClause__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }
                    // InternalSQLParser.g:4268:3: ( rule__OrderByClause__Group_0_0__0 )
                    // InternalSQLParser.g:4268:4: rule__OrderByClause__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4272:2: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    {
                    // InternalSQLParser.g:4272:2: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    // InternalSQLParser.g:4273:3: ( rule__OrderByClause__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }
                    // InternalSQLParser.g:4274:3: ( rule__OrderByClause__Group_0_1__0 )
                    // InternalSQLParser.g:4274:4: rule__OrderByClause__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Alternatives_0"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_1"
    // InternalSQLParser.g:4282:1: rule__OrderByClauseArg__Alternatives_1 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByClauseArg__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4286:1: ( ( ASC ) | ( DESC ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==ASC) ) {
                alt44=1;
            }
            else if ( (LA44_0==DESC) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalSQLParser.g:4287:2: ( ASC )
                    {
                    // InternalSQLParser.g:4287:2: ( ASC )
                    // InternalSQLParser.g:4288:3: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4293:2: ( DESC )
                    {
                    // InternalSQLParser.g:4293:2: ( DESC )
                    // InternalSQLParser.g:4294:3: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_1"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_2_1"
    // InternalSQLParser.g:4303:1: rule__OrderByClauseArg__Alternatives_2_1 : ( ( FIRST ) | ( LAST ) );
    public final void rule__OrderByClauseArg__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4307:1: ( ( FIRST ) | ( LAST ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==FIRST) ) {
                alt45=1;
            }
            else if ( (LA45_0==LAST) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalSQLParser.g:4308:2: ( FIRST )
                    {
                    // InternalSQLParser.g:4308:2: ( FIRST )
                    // InternalSQLParser.g:4309:3: FIRST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }
                    match(input,FIRST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4314:2: ( LAST )
                    {
                    // InternalSQLParser.g:4314:2: ( LAST )
                    // InternalSQLParser.g:4315:3: LAST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }
                    match(input,LAST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_2_1"


    // $ANTLR start "rule__QueryPartitionClause__Alternatives_2"
    // InternalSQLParser.g:4324:1: rule__QueryPartitionClause__Alternatives_2 : ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) );
    public final void rule__QueryPartitionClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4328:1: ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==EXTRACT||LA46_0==CAST||LA46_0==CASE||(LA46_0>=RULE_JRPARAM && LA46_0<=RULE_JRNPARAM)||(LA46_0>=RULE_UNSIGNED && LA46_0<=RULE_SIGNED_DOUBLE)||(LA46_0>=RULE_STRING_ && LA46_0<=RULE_ID)) ) {
                alt46=1;
            }
            else if ( (LA46_0==LeftParenthesis) ) {
                int LA46_2 = input.LA(2);

                if ( (LA46_2==EXTRACT||LA46_2==CAST||LA46_2==CASE||LA46_2==LeftParenthesis||(LA46_2>=RULE_JRPARAM && LA46_2<=RULE_JRNPARAM)||(LA46_2>=RULE_UNSIGNED && LA46_2<=RULE_SIGNED_DOUBLE)||(LA46_2>=RULE_STRING_ && LA46_2<=RULE_ID)) ) {
                    alt46=2;
                }
                else if ( (LA46_2==SELECT) ) {
                    alt46=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalSQLParser.g:4329:2: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4329:2: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    // InternalSQLParser.g:4330:3: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4331:3: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    // InternalSQLParser.g:4331:4: rule__QueryPartitionClause__ArgsAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__ArgsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4335:2: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    {
                    // InternalSQLParser.g:4335:2: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    // InternalSQLParser.g:4336:3: ( rule__QueryPartitionClause__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }
                    // InternalSQLParser.g:4337:3: ( rule__QueryPartitionClause__Group_2_1__0 )
                    // InternalSQLParser.g:4337:4: rule__QueryPartitionClause__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Alternatives_2"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAlternatives_0"
    // InternalSQLParser.g:4345:1: rule__OpFunctionArgOperand__OpAlternatives_0 : ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) );
    public final void rule__OpFunctionArgOperand__OpAlternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4349:1: ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==DISTINCT||LA47_0==ALL) ) {
                alt47=1;
            }
            else if ( (LA47_0==EXTRACT||LA47_0==CAST||LA47_0==CASE||LA47_0==LeftParenthesis||(LA47_0>=RULE_JRPARAM && LA47_0<=RULE_JRNPARAM)||(LA47_0>=RULE_UNSIGNED && LA47_0<=RULE_SIGNED_DOUBLE)||(LA47_0>=RULE_STRING_ && LA47_0<=RULE_ID)) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalSQLParser.g:4350:2: ( ruleOpFunctionArgAgregate )
                    {
                    // InternalSQLParser.g:4350:2: ( ruleOpFunctionArgAgregate )
                    // InternalSQLParser.g:4351:3: ruleOpFunctionArgAgregate
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpFunctionArgAgregate();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4356:2: ( ruleOperand )
                    {
                    // InternalSQLParser.g:4356:2: ( ruleOperand )
                    // InternalSQLParser.g:4357:3: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAlternatives_0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Alternatives_0"
    // InternalSQLParser.g:4366:1: rule__OpFunctionArgAgregate__Alternatives_0 : ( ( ALL ) | ( DISTINCT ) );
    public final void rule__OpFunctionArgAgregate__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4370:1: ( ( ALL ) | ( DISTINCT ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==ALL) ) {
                alt48=1;
            }
            else if ( (LA48_0==DISTINCT) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalSQLParser.g:4371:2: ( ALL )
                    {
                    // InternalSQLParser.g:4371:2: ( ALL )
                    // InternalSQLParser.g:4372:3: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4377:2: ( DISTINCT )
                    {
                    // InternalSQLParser.g:4377:2: ( DISTINCT )
                    // InternalSQLParser.g:4378:3: DISTINCT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Alternatives_0"


    // $ANTLR start "rule__XOperandFragment__Alternatives"
    // InternalSQLParser.g:4387:1: rule__XOperandFragment__Alternatives : ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) );
    public final void rule__XOperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4391:1: ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) )
            int alt49=3;
            switch ( input.LA(1) ) {
            case RULE_JRPARAM:
                {
                alt49=1;
                }
                break;
            case RULE_JRNPARAM:
                {
                alt49=2;
                }
                break;
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt49=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalSQLParser.g:4392:2: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4392:2: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    // InternalSQLParser.g:4393:3: ( rule__XOperandFragment__ParamAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }
                    // InternalSQLParser.g:4394:3: ( rule__XOperandFragment__ParamAssignment_0 )
                    // InternalSQLParser.g:4394:4: rule__XOperandFragment__ParamAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ParamAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4398:2: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4398:2: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    // InternalSQLParser.g:4399:3: ( rule__XOperandFragment__EparamAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }
                    // InternalSQLParser.g:4400:3: ( rule__XOperandFragment__EparamAssignment_1 )
                    // InternalSQLParser.g:4400:4: rule__XOperandFragment__EparamAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__EparamAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4404:2: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4404:2: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    // InternalSQLParser.g:4405:3: ( rule__XOperandFragment__ScalarAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }
                    // InternalSQLParser.g:4406:3: ( rule__XOperandFragment__ScalarAssignment_2 )
                    // InternalSQLParser.g:4406:4: rule__XOperandFragment__ScalarAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ScalarAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__Alternatives"


    // $ANTLR start "rule__ScalarOperand__Alternatives"
    // InternalSQLParser.g:4414:1: rule__ScalarOperand__Alternatives : ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) );
    public final void rule__ScalarOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4418:1: ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) )
            int alt50=5;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt50=1;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt50=2;
                }
                break;
            case RULE_DATE:
                {
                alt50=3;
                }
                break;
            case RULE_TIME:
                {
                alt50=4;
                }
                break;
            case RULE_TIMESTAMP:
                {
                alt50=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalSQLParser.g:4419:2: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4419:2: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    // InternalSQLParser.g:4420:3: ( rule__ScalarOperand__SostrAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }
                    // InternalSQLParser.g:4421:3: ( rule__ScalarOperand__SostrAssignment_0 )
                    // InternalSQLParser.g:4421:4: rule__ScalarOperand__SostrAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SostrAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4425:2: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4425:2: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    // InternalSQLParser.g:4426:3: ( rule__ScalarOperand__SodblAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }
                    // InternalSQLParser.g:4427:3: ( rule__ScalarOperand__SodblAssignment_1 )
                    // InternalSQLParser.g:4427:4: rule__ScalarOperand__SodblAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodblAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4431:2: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4431:2: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    // InternalSQLParser.g:4432:3: ( rule__ScalarOperand__SodateAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }
                    // InternalSQLParser.g:4433:3: ( rule__ScalarOperand__SodateAssignment_2 )
                    // InternalSQLParser.g:4433:4: rule__ScalarOperand__SodateAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodateAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4437:2: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4437:2: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    // InternalSQLParser.g:4438:3: ( rule__ScalarOperand__SotimeAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }
                    // InternalSQLParser.g:4439:3: ( rule__ScalarOperand__SotimeAssignment_3 )
                    // InternalSQLParser.g:4439:4: rule__ScalarOperand__SotimeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SotimeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4443:2: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    {
                    // InternalSQLParser.g:4443:2: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    // InternalSQLParser.g:4444:3: ( rule__ScalarOperand__SodtAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }
                    // InternalSQLParser.g:4445:3: ( rule__ScalarOperand__SodtAssignment_4 )
                    // InternalSQLParser.g:4445:4: rule__ScalarOperand__SodtAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodtAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__Alternatives"


    // $ANTLR start "rule__ScalarNumberOperand__Alternatives"
    // InternalSQLParser.g:4453:1: rule__ScalarNumberOperand__Alternatives : ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) );
    public final void rule__ScalarNumberOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4457:1: ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) )
            int alt51=4;
            switch ( input.LA(1) ) {
            case RULE_UNSIGNED:
                {
                alt51=1;
                }
                break;
            case RULE_INT:
                {
                alt51=2;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt51=3;
                }
                break;
            case RULE_STRING_:
                {
                alt51=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // InternalSQLParser.g:4458:2: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4458:2: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    // InternalSQLParser.g:4459:3: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }
                    // InternalSQLParser.g:4460:3: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    // InternalSQLParser.g:4460:4: rule__ScalarNumberOperand__SoUIntAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SoUIntAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4464:2: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4464:2: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    // InternalSQLParser.g:4465:3: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }
                    // InternalSQLParser.g:4466:3: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    // InternalSQLParser.g:4466:4: rule__ScalarNumberOperand__SointAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SointAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4470:2: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4470:2: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    // InternalSQLParser.g:4471:3: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }
                    // InternalSQLParser.g:4472:3: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    // InternalSQLParser.g:4472:4: rule__ScalarNumberOperand__SodblAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SodblAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4476:2: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4476:2: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    // InternalSQLParser.g:4477:3: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }
                    // InternalSQLParser.g:4478:3: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    // InternalSQLParser.g:4478:4: rule__ScalarNumberOperand__SostrAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SostrAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__Alternatives"


    // $ANTLR start "rule__SQLCASE__Alternatives_1"
    // InternalSQLParser.g:4486:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );
    public final void rule__SQLCASE__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4490:1: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) )
            int alt52=2;
            alt52 = dfa52.predict(input);
            switch (alt52) {
                case 1 :
                    // InternalSQLParser.g:4491:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:4491:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    // InternalSQLParser.g:4492:3: ( rule__SQLCASE__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:4493:3: ( rule__SQLCASE__WopAssignment_1_0 )
                    // InternalSQLParser.g:4493:4: rule__SQLCASE__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4497:2: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:4497:2: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    // InternalSQLParser.g:4498:3: ( rule__SQLCASE__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:4499:3: ( rule__SQLCASE__ExprAssignment_1_1 )
                    // InternalSQLParser.g:4499:4: rule__SQLCASE__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Alternatives_1"


    // $ANTLR start "rule__SqlCaseWhen__Alternatives_1"
    // InternalSQLParser.g:4507:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );
    public final void rule__SqlCaseWhen__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4511:1: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) )
            int alt53=2;
            alt53 = dfa53.predict(input);
            switch (alt53) {
                case 1 :
                    // InternalSQLParser.g:4512:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:4512:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    // InternalSQLParser.g:4513:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:4514:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    // InternalSQLParser.g:4514:4: rule__SqlCaseWhen__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4518:2: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:4518:2: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    // InternalSQLParser.g:4519:3: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:4520:3: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    // InternalSQLParser.g:4520:4: rule__SqlCaseWhen__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1"
    // InternalSQLParser.g:4528:1: rule__JoinType__Alternatives_1 : ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) );
    public final void rule__JoinType__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4532:1: ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) )
            int alt54=4;
            switch ( input.LA(1) ) {
            case INNER:
                {
                alt54=1;
                }
                break;
            case RIGHT:
            case FULL:
            case LEFT:
                {
                alt54=2;
                }
                break;
            case CROSS:
                {
                alt54=3;
                }
                break;
            case STRAIGHT_JOIN:
                {
                alt54=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalSQLParser.g:4533:2: ( INNER )
                    {
                    // InternalSQLParser.g:4533:2: ( INNER )
                    // InternalSQLParser.g:4534:3: INNER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }
                    match(input,INNER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4539:2: ( ( rule__JoinType__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:4539:2: ( ( rule__JoinType__Group_1_1__0 ) )
                    // InternalSQLParser.g:4540:3: ( rule__JoinType__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:4541:3: ( rule__JoinType__Group_1_1__0 )
                    // InternalSQLParser.g:4541:4: rule__JoinType__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4545:2: ( CROSS )
                    {
                    // InternalSQLParser.g:4545:2: ( CROSS )
                    // InternalSQLParser.g:4546:3: CROSS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }
                    match(input,CROSS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4551:2: ( STRAIGHT_JOIN )
                    {
                    // InternalSQLParser.g:4551:2: ( STRAIGHT_JOIN )
                    // InternalSQLParser.g:4552:3: STRAIGHT_JOIN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }
                    match(input,STRAIGHT_JOIN,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1_1_0"
    // InternalSQLParser.g:4561:1: rule__JoinType__Alternatives_1_1_0 : ( ( LEFT ) | ( RIGHT ) | ( FULL ) );
    public final void rule__JoinType__Alternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4565:1: ( ( LEFT ) | ( RIGHT ) | ( FULL ) )
            int alt55=3;
            switch ( input.LA(1) ) {
            case LEFT:
                {
                alt55=1;
                }
                break;
            case RIGHT:
                {
                alt55=2;
                }
                break;
            case FULL:
                {
                alt55=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalSQLParser.g:4566:2: ( LEFT )
                    {
                    // InternalSQLParser.g:4566:2: ( LEFT )
                    // InternalSQLParser.g:4567:3: LEFT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }
                    match(input,LEFT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4572:2: ( RIGHT )
                    {
                    // InternalSQLParser.g:4572:2: ( RIGHT )
                    // InternalSQLParser.g:4573:3: RIGHT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }
                    match(input,RIGHT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4578:2: ( FULL )
                    {
                    // InternalSQLParser.g:4578:2: ( FULL )
                    // InternalSQLParser.g:4579:3: FULL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }
                    match(input,FULL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1_1_0"


    // $ANTLR start "rule__DBID__Alternatives"
    // InternalSQLParser.g:4588:1: rule__DBID__Alternatives : ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) );
    public final void rule__DBID__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4592:1: ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) )
            int alt56=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt56=1;
                }
                break;
            case RULE_DBNAME:
                {
                alt56=2;
                }
                break;
            case RULE_STRING:
                {
                alt56=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // InternalSQLParser.g:4593:2: ( RULE_ID )
                    {
                    // InternalSQLParser.g:4593:2: ( RULE_ID )
                    // InternalSQLParser.g:4594:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4599:2: ( RULE_DBNAME )
                    {
                    // InternalSQLParser.g:4599:2: ( RULE_DBNAME )
                    // InternalSQLParser.g:4600:3: RULE_DBNAME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }
                    match(input,RULE_DBNAME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4605:2: ( RULE_STRING )
                    {
                    // InternalSQLParser.g:4605:2: ( RULE_STRING )
                    // InternalSQLParser.g:4606:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DBID__Alternatives"


    // $ANTLR start "rule__XFunction__Alternatives"
    // InternalSQLParser.g:4615:1: rule__XFunction__Alternatives : ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) );
    public final void rule__XFunction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4619:1: ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) )
            int alt57=12;
            switch ( input.LA(1) ) {
            case IN_1:
                {
                alt57=1;
                }
                break;
            case NOTIN:
                {
                alt57=2;
                }
                break;
            case EQUAL:
                {
                alt57=3;
                }
                break;
            case NOTEQUAL:
                {
                alt57=4;
                }
                break;
            case LESS:
                {
                alt57=5;
                }
                break;
            case LESS_1:
                {
                alt57=6;
                }
                break;
            case GREATER_1:
                {
                alt57=7;
                }
                break;
            case GREATER:
                {
                alt57=8;
                }
                break;
            case BETWEEN_1:
                {
                alt57=9;
                }
                break;
            case BETWEEN_4:
                {
                alt57=10;
                }
                break;
            case BETWEEN_3:
                {
                alt57=11;
                }
                break;
            case BETWEEN_2:
                {
                alt57=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // InternalSQLParser.g:4620:2: ( ( IN_1 ) )
                    {
                    // InternalSQLParser.g:4620:2: ( ( IN_1 ) )
                    // InternalSQLParser.g:4621:3: ( IN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }
                    // InternalSQLParser.g:4622:3: ( IN_1 )
                    // InternalSQLParser.g:4622:4: IN_1
                    {
                    match(input,IN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4626:2: ( ( NOTIN ) )
                    {
                    // InternalSQLParser.g:4626:2: ( ( NOTIN ) )
                    // InternalSQLParser.g:4627:3: ( NOTIN )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }
                    // InternalSQLParser.g:4628:3: ( NOTIN )
                    // InternalSQLParser.g:4628:4: NOTIN
                    {
                    match(input,NOTIN,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4632:2: ( ( EQUAL ) )
                    {
                    // InternalSQLParser.g:4632:2: ( ( EQUAL ) )
                    // InternalSQLParser.g:4633:3: ( EQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }
                    // InternalSQLParser.g:4634:3: ( EQUAL )
                    // InternalSQLParser.g:4634:4: EQUAL
                    {
                    match(input,EQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4638:2: ( ( NOTEQUAL ) )
                    {
                    // InternalSQLParser.g:4638:2: ( ( NOTEQUAL ) )
                    // InternalSQLParser.g:4639:3: ( NOTEQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }
                    // InternalSQLParser.g:4640:3: ( NOTEQUAL )
                    // InternalSQLParser.g:4640:4: NOTEQUAL
                    {
                    match(input,NOTEQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4644:2: ( ( LESS ) )
                    {
                    // InternalSQLParser.g:4644:2: ( ( LESS ) )
                    // InternalSQLParser.g:4645:3: ( LESS )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }
                    // InternalSQLParser.g:4646:3: ( LESS )
                    // InternalSQLParser.g:4646:4: LESS
                    {
                    match(input,LESS,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4650:2: ( ( LESS_1 ) )
                    {
                    // InternalSQLParser.g:4650:2: ( ( LESS_1 ) )
                    // InternalSQLParser.g:4651:3: ( LESS_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }
                    // InternalSQLParser.g:4652:3: ( LESS_1 )
                    // InternalSQLParser.g:4652:4: LESS_1
                    {
                    match(input,LESS_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:4656:2: ( ( GREATER_1 ) )
                    {
                    // InternalSQLParser.g:4656:2: ( ( GREATER_1 ) )
                    // InternalSQLParser.g:4657:3: ( GREATER_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }
                    // InternalSQLParser.g:4658:3: ( GREATER_1 )
                    // InternalSQLParser.g:4658:4: GREATER_1
                    {
                    match(input,GREATER_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:4662:2: ( ( GREATER ) )
                    {
                    // InternalSQLParser.g:4662:2: ( ( GREATER ) )
                    // InternalSQLParser.g:4663:3: ( GREATER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }
                    // InternalSQLParser.g:4664:3: ( GREATER )
                    // InternalSQLParser.g:4664:4: GREATER
                    {
                    match(input,GREATER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:4668:2: ( ( BETWEEN_1 ) )
                    {
                    // InternalSQLParser.g:4668:2: ( ( BETWEEN_1 ) )
                    // InternalSQLParser.g:4669:3: ( BETWEEN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }
                    // InternalSQLParser.g:4670:3: ( BETWEEN_1 )
                    // InternalSQLParser.g:4670:4: BETWEEN_1
                    {
                    match(input,BETWEEN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:4674:2: ( ( BETWEEN_4 ) )
                    {
                    // InternalSQLParser.g:4674:2: ( ( BETWEEN_4 ) )
                    // InternalSQLParser.g:4675:3: ( BETWEEN_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }
                    // InternalSQLParser.g:4676:3: ( BETWEEN_4 )
                    // InternalSQLParser.g:4676:4: BETWEEN_4
                    {
                    match(input,BETWEEN_4,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:4680:2: ( ( BETWEEN_3 ) )
                    {
                    // InternalSQLParser.g:4680:2: ( ( BETWEEN_3 ) )
                    // InternalSQLParser.g:4681:3: ( BETWEEN_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }
                    // InternalSQLParser.g:4682:3: ( BETWEEN_3 )
                    // InternalSQLParser.g:4682:4: BETWEEN_3
                    {
                    match(input,BETWEEN_3,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:4686:2: ( ( BETWEEN_2 ) )
                    {
                    // InternalSQLParser.g:4686:2: ( ( BETWEEN_2 ) )
                    // InternalSQLParser.g:4687:3: ( BETWEEN_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }
                    // InternalSQLParser.g:4688:3: ( BETWEEN_2 )
                    // InternalSQLParser.g:4688:4: BETWEEN_2
                    {
                    match(input,BETWEEN_2,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XFunction__Alternatives"


    // $ANTLR start "rule__EXTRACT_VALUES__Alternatives"
    // InternalSQLParser.g:4696:1: rule__EXTRACT_VALUES__Alternatives : ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) );
    public final void rule__EXTRACT_VALUES__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4700:1: ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) )
            int alt58=20;
            switch ( input.LA(1) ) {
            case MICROSECOND:
                {
                alt58=1;
                }
                break;
            case SECOND:
                {
                alt58=2;
                }
                break;
            case MINUTE:
                {
                alt58=3;
                }
                break;
            case HOUR:
                {
                alt58=4;
                }
                break;
            case DAY:
                {
                alt58=5;
                }
                break;
            case WEEK:
                {
                alt58=6;
                }
                break;
            case MONTH:
                {
                alt58=7;
                }
                break;
            case QUARTER:
                {
                alt58=8;
                }
                break;
            case YEAR:
                {
                alt58=9;
                }
                break;
            case SECOND_MICROSECOND:
                {
                alt58=10;
                }
                break;
            case MINUTE_MICROSECOND:
                {
                alt58=11;
                }
                break;
            case MINUTE_SECOND:
                {
                alt58=12;
                }
                break;
            case HOUR_MICROSECOND:
                {
                alt58=13;
                }
                break;
            case HOUR_SECOND:
                {
                alt58=14;
                }
                break;
            case HOUR_MINUTE:
                {
                alt58=15;
                }
                break;
            case DAY_MICROSECOND:
                {
                alt58=16;
                }
                break;
            case DAY_SECOND:
                {
                alt58=17;
                }
                break;
            case DAY_MINUTE:
                {
                alt58=18;
                }
                break;
            case DAY_HOUR:
                {
                alt58=19;
                }
                break;
            case YEAR_MONTH:
                {
                alt58=20;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }

            switch (alt58) {
                case 1 :
                    // InternalSQLParser.g:4701:2: ( ( MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4701:2: ( ( MICROSECOND ) )
                    // InternalSQLParser.g:4702:3: ( MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }
                    // InternalSQLParser.g:4703:3: ( MICROSECOND )
                    // InternalSQLParser.g:4703:4: MICROSECOND
                    {
                    match(input,MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4707:2: ( ( SECOND ) )
                    {
                    // InternalSQLParser.g:4707:2: ( ( SECOND ) )
                    // InternalSQLParser.g:4708:3: ( SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSQLParser.g:4709:3: ( SECOND )
                    // InternalSQLParser.g:4709:4: SECOND
                    {
                    match(input,SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4713:2: ( ( MINUTE ) )
                    {
                    // InternalSQLParser.g:4713:2: ( ( MINUTE ) )
                    // InternalSQLParser.g:4714:3: ( MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }
                    // InternalSQLParser.g:4715:3: ( MINUTE )
                    // InternalSQLParser.g:4715:4: MINUTE
                    {
                    match(input,MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4719:2: ( ( HOUR ) )
                    {
                    // InternalSQLParser.g:4719:2: ( ( HOUR ) )
                    // InternalSQLParser.g:4720:3: ( HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }
                    // InternalSQLParser.g:4721:3: ( HOUR )
                    // InternalSQLParser.g:4721:4: HOUR
                    {
                    match(input,HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4725:2: ( ( DAY ) )
                    {
                    // InternalSQLParser.g:4725:2: ( ( DAY ) )
                    // InternalSQLParser.g:4726:3: ( DAY )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }
                    // InternalSQLParser.g:4727:3: ( DAY )
                    // InternalSQLParser.g:4727:4: DAY
                    {
                    match(input,DAY,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4731:2: ( ( WEEK ) )
                    {
                    // InternalSQLParser.g:4731:2: ( ( WEEK ) )
                    // InternalSQLParser.g:4732:3: ( WEEK )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }
                    // InternalSQLParser.g:4733:3: ( WEEK )
                    // InternalSQLParser.g:4733:4: WEEK
                    {
                    match(input,WEEK,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:4737:2: ( ( MONTH ) )
                    {
                    // InternalSQLParser.g:4737:2: ( ( MONTH ) )
                    // InternalSQLParser.g:4738:3: ( MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }
                    // InternalSQLParser.g:4739:3: ( MONTH )
                    // InternalSQLParser.g:4739:4: MONTH
                    {
                    match(input,MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:4743:2: ( ( QUARTER ) )
                    {
                    // InternalSQLParser.g:4743:2: ( ( QUARTER ) )
                    // InternalSQLParser.g:4744:3: ( QUARTER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }
                    // InternalSQLParser.g:4745:3: ( QUARTER )
                    // InternalSQLParser.g:4745:4: QUARTER
                    {
                    match(input,QUARTER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:4749:2: ( ( YEAR ) )
                    {
                    // InternalSQLParser.g:4749:2: ( ( YEAR ) )
                    // InternalSQLParser.g:4750:3: ( YEAR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }
                    // InternalSQLParser.g:4751:3: ( YEAR )
                    // InternalSQLParser.g:4751:4: YEAR
                    {
                    match(input,YEAR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:4755:2: ( ( SECOND_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4755:2: ( ( SECOND_MICROSECOND ) )
                    // InternalSQLParser.g:4756:3: ( SECOND_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }
                    // InternalSQLParser.g:4757:3: ( SECOND_MICROSECOND )
                    // InternalSQLParser.g:4757:4: SECOND_MICROSECOND
                    {
                    match(input,SECOND_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:4761:2: ( ( MINUTE_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4761:2: ( ( MINUTE_MICROSECOND ) )
                    // InternalSQLParser.g:4762:3: ( MINUTE_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }
                    // InternalSQLParser.g:4763:3: ( MINUTE_MICROSECOND )
                    // InternalSQLParser.g:4763:4: MINUTE_MICROSECOND
                    {
                    match(input,MINUTE_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:4767:2: ( ( MINUTE_SECOND ) )
                    {
                    // InternalSQLParser.g:4767:2: ( ( MINUTE_SECOND ) )
                    // InternalSQLParser.g:4768:3: ( MINUTE_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }
                    // InternalSQLParser.g:4769:3: ( MINUTE_SECOND )
                    // InternalSQLParser.g:4769:4: MINUTE_SECOND
                    {
                    match(input,MINUTE_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSQLParser.g:4773:2: ( ( HOUR_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4773:2: ( ( HOUR_MICROSECOND ) )
                    // InternalSQLParser.g:4774:3: ( HOUR_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }
                    // InternalSQLParser.g:4775:3: ( HOUR_MICROSECOND )
                    // InternalSQLParser.g:4775:4: HOUR_MICROSECOND
                    {
                    match(input,HOUR_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSQLParser.g:4779:2: ( ( HOUR_SECOND ) )
                    {
                    // InternalSQLParser.g:4779:2: ( ( HOUR_SECOND ) )
                    // InternalSQLParser.g:4780:3: ( HOUR_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }
                    // InternalSQLParser.g:4781:3: ( HOUR_SECOND )
                    // InternalSQLParser.g:4781:4: HOUR_SECOND
                    {
                    match(input,HOUR_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSQLParser.g:4785:2: ( ( HOUR_MINUTE ) )
                    {
                    // InternalSQLParser.g:4785:2: ( ( HOUR_MINUTE ) )
                    // InternalSQLParser.g:4786:3: ( HOUR_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }
                    // InternalSQLParser.g:4787:3: ( HOUR_MINUTE )
                    // InternalSQLParser.g:4787:4: HOUR_MINUTE
                    {
                    match(input,HOUR_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalSQLParser.g:4791:2: ( ( DAY_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:4791:2: ( ( DAY_MICROSECOND ) )
                    // InternalSQLParser.g:4792:3: ( DAY_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }
                    // InternalSQLParser.g:4793:3: ( DAY_MICROSECOND )
                    // InternalSQLParser.g:4793:4: DAY_MICROSECOND
                    {
                    match(input,DAY_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalSQLParser.g:4797:2: ( ( DAY_SECOND ) )
                    {
                    // InternalSQLParser.g:4797:2: ( ( DAY_SECOND ) )
                    // InternalSQLParser.g:4798:3: ( DAY_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }
                    // InternalSQLParser.g:4799:3: ( DAY_SECOND )
                    // InternalSQLParser.g:4799:4: DAY_SECOND
                    {
                    match(input,DAY_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalSQLParser.g:4803:2: ( ( DAY_MINUTE ) )
                    {
                    // InternalSQLParser.g:4803:2: ( ( DAY_MINUTE ) )
                    // InternalSQLParser.g:4804:3: ( DAY_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }
                    // InternalSQLParser.g:4805:3: ( DAY_MINUTE )
                    // InternalSQLParser.g:4805:4: DAY_MINUTE
                    {
                    match(input,DAY_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalSQLParser.g:4809:2: ( ( DAY_HOUR ) )
                    {
                    // InternalSQLParser.g:4809:2: ( ( DAY_HOUR ) )
                    // InternalSQLParser.g:4810:3: ( DAY_HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }
                    // InternalSQLParser.g:4811:3: ( DAY_HOUR )
                    // InternalSQLParser.g:4811:4: DAY_HOUR
                    {
                    match(input,DAY_HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalSQLParser.g:4815:2: ( ( YEAR_MONTH ) )
                    {
                    // InternalSQLParser.g:4815:2: ( ( YEAR_MONTH ) )
                    // InternalSQLParser.g:4816:3: ( YEAR_MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }
                    // InternalSQLParser.g:4817:3: ( YEAR_MONTH )
                    // InternalSQLParser.g:4817:4: YEAR_MONTH
                    {
                    match(input,YEAR_MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EXTRACT_VALUES__Alternatives"


    // $ANTLR start "rule__Model__Group__0"
    // InternalSQLParser.g:4825:1: rule__Model__Group__0 : rule__Model__Group__0__Impl rule__Model__Group__1 ;
    public final void rule__Model__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4829:1: ( rule__Model__Group__0__Impl rule__Model__Group__1 )
            // InternalSQLParser.g:4830:2: rule__Model__Group__0__Impl rule__Model__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Model__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Model__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0"


    // $ANTLR start "rule__Model__Group__0__Impl"
    // InternalSQLParser.g:4837:1: rule__Model__Group__0__Impl : ( ( RULE_JRNPARAM )? ) ;
    public final void rule__Model__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4841:1: ( ( ( RULE_JRNPARAM )? ) )
            // InternalSQLParser.g:4842:1: ( ( RULE_JRNPARAM )? )
            {
            // InternalSQLParser.g:4842:1: ( ( RULE_JRNPARAM )? )
            // InternalSQLParser.g:4843:2: ( RULE_JRNPARAM )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 
            }
            // InternalSQLParser.g:4844:2: ( RULE_JRNPARAM )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_JRNPARAM) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalSQLParser.g:4844:3: RULE_JRNPARAM
                    {
                    match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0__Impl"


    // $ANTLR start "rule__Model__Group__1"
    // InternalSQLParser.g:4852:1: rule__Model__Group__1 : rule__Model__Group__1__Impl rule__Model__Group__2 ;
    public final void rule__Model__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4856:1: ( rule__Model__Group__1__Impl rule__Model__Group__2 )
            // InternalSQLParser.g:4857:2: rule__Model__Group__1__Impl rule__Model__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__Model__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Model__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1"


    // $ANTLR start "rule__Model__Group__1__Impl"
    // InternalSQLParser.g:4864:1: rule__Model__Group__1__Impl : ( ( rule__Model__WqAssignment_1 )? ) ;
    public final void rule__Model__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4868:1: ( ( ( rule__Model__WqAssignment_1 )? ) )
            // InternalSQLParser.g:4869:1: ( ( rule__Model__WqAssignment_1 )? )
            {
            // InternalSQLParser.g:4869:1: ( ( rule__Model__WqAssignment_1 )? )
            // InternalSQLParser.g:4870:2: ( rule__Model__WqAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getWqAssignment_1()); 
            }
            // InternalSQLParser.g:4871:2: ( rule__Model__WqAssignment_1 )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==WITH) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSQLParser.g:4871:3: rule__Model__WqAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Model__WqAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getWqAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1__Impl"


    // $ANTLR start "rule__Model__Group__2"
    // InternalSQLParser.g:4879:1: rule__Model__Group__2 : rule__Model__Group__2__Impl ;
    public final void rule__Model__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4883:1: ( rule__Model__Group__2__Impl )
            // InternalSQLParser.g:4884:2: rule__Model__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__2"


    // $ANTLR start "rule__Model__Group__2__Impl"
    // InternalSQLParser.g:4890:1: rule__Model__Group__2__Impl : ( ( rule__Model__Alternatives_2 ) ) ;
    public final void rule__Model__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4894:1: ( ( ( rule__Model__Alternatives_2 ) ) )
            // InternalSQLParser.g:4895:1: ( ( rule__Model__Alternatives_2 ) )
            {
            // InternalSQLParser.g:4895:1: ( ( rule__Model__Alternatives_2 ) )
            // InternalSQLParser.g:4896:2: ( rule__Model__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:4897:2: ( rule__Model__Alternatives_2 )
            // InternalSQLParser.g:4897:3: rule__Model__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__Model__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__2__Impl"


    // $ANTLR start "rule__InsertStatement__Group__0"
    // InternalSQLParser.g:4906:1: rule__InsertStatement__Group__0 : rule__InsertStatement__Group__0__Impl rule__InsertStatement__Group__1 ;
    public final void rule__InsertStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4910:1: ( rule__InsertStatement__Group__0__Impl rule__InsertStatement__Group__1 )
            // InternalSQLParser.g:4911:2: rule__InsertStatement__Group__0__Impl rule__InsertStatement__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__InsertStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__0"


    // $ANTLR start "rule__InsertStatement__Group__0__Impl"
    // InternalSQLParser.g:4918:1: rule__InsertStatement__Group__0__Impl : ( INSERT ) ;
    public final void rule__InsertStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4922:1: ( ( INSERT ) )
            // InternalSQLParser.g:4923:1: ( INSERT )
            {
            // InternalSQLParser.g:4923:1: ( INSERT )
            // InternalSQLParser.g:4924:2: INSERT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getINSERTKeyword_0()); 
            }
            match(input,INSERT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getINSERTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__0__Impl"


    // $ANTLR start "rule__InsertStatement__Group__1"
    // InternalSQLParser.g:4933:1: rule__InsertStatement__Group__1 : rule__InsertStatement__Group__1__Impl rule__InsertStatement__Group__2 ;
    public final void rule__InsertStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4937:1: ( rule__InsertStatement__Group__1__Impl rule__InsertStatement__Group__2 )
            // InternalSQLParser.g:4938:2: rule__InsertStatement__Group__1__Impl rule__InsertStatement__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__InsertStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__1"


    // $ANTLR start "rule__InsertStatement__Group__1__Impl"
    // InternalSQLParser.g:4945:1: rule__InsertStatement__Group__1__Impl : ( INTO ) ;
    public final void rule__InsertStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4949:1: ( ( INTO ) )
            // InternalSQLParser.g:4950:1: ( INTO )
            {
            // InternalSQLParser.g:4950:1: ( INTO )
            // InternalSQLParser.g:4951:2: INTO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getINTOKeyword_1()); 
            }
            match(input,INTO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getINTOKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__1__Impl"


    // $ANTLR start "rule__InsertStatement__Group__2"
    // InternalSQLParser.g:4960:1: rule__InsertStatement__Group__2 : rule__InsertStatement__Group__2__Impl rule__InsertStatement__Group__3 ;
    public final void rule__InsertStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4964:1: ( rule__InsertStatement__Group__2__Impl rule__InsertStatement__Group__3 )
            // InternalSQLParser.g:4965:2: rule__InsertStatement__Group__2__Impl rule__InsertStatement__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__InsertStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__2"


    // $ANTLR start "rule__InsertStatement__Group__2__Impl"
    // InternalSQLParser.g:4972:1: rule__InsertStatement__Group__2__Impl : ( ( rule__InsertStatement__TblAssignment_2 ) ) ;
    public final void rule__InsertStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4976:1: ( ( ( rule__InsertStatement__TblAssignment_2 ) ) )
            // InternalSQLParser.g:4977:1: ( ( rule__InsertStatement__TblAssignment_2 ) )
            {
            // InternalSQLParser.g:4977:1: ( ( rule__InsertStatement__TblAssignment_2 ) )
            // InternalSQLParser.g:4978:2: ( rule__InsertStatement__TblAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getTblAssignment_2()); 
            }
            // InternalSQLParser.g:4979:2: ( rule__InsertStatement__TblAssignment_2 )
            // InternalSQLParser.g:4979:3: rule__InsertStatement__TblAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__TblAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getTblAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__2__Impl"


    // $ANTLR start "rule__InsertStatement__Group__3"
    // InternalSQLParser.g:4987:1: rule__InsertStatement__Group__3 : rule__InsertStatement__Group__3__Impl rule__InsertStatement__Group__4 ;
    public final void rule__InsertStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4991:1: ( rule__InsertStatement__Group__3__Impl rule__InsertStatement__Group__4 )
            // InternalSQLParser.g:4992:2: rule__InsertStatement__Group__3__Impl rule__InsertStatement__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__InsertStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__3"


    // $ANTLR start "rule__InsertStatement__Group__3__Impl"
    // InternalSQLParser.g:4999:1: rule__InsertStatement__Group__3__Impl : ( ( rule__InsertStatement__ColsAssignment_3 ) ) ;
    public final void rule__InsertStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5003:1: ( ( ( rule__InsertStatement__ColsAssignment_3 ) ) )
            // InternalSQLParser.g:5004:1: ( ( rule__InsertStatement__ColsAssignment_3 ) )
            {
            // InternalSQLParser.g:5004:1: ( ( rule__InsertStatement__ColsAssignment_3 ) )
            // InternalSQLParser.g:5005:2: ( rule__InsertStatement__ColsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getColsAssignment_3()); 
            }
            // InternalSQLParser.g:5006:2: ( rule__InsertStatement__ColsAssignment_3 )
            // InternalSQLParser.g:5006:3: rule__InsertStatement__ColsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__ColsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getColsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__3__Impl"


    // $ANTLR start "rule__InsertStatement__Group__4"
    // InternalSQLParser.g:5014:1: rule__InsertStatement__Group__4 : rule__InsertStatement__Group__4__Impl ;
    public final void rule__InsertStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5018:1: ( rule__InsertStatement__Group__4__Impl )
            // InternalSQLParser.g:5019:2: rule__InsertStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__4"


    // $ANTLR start "rule__InsertStatement__Group__4__Impl"
    // InternalSQLParser.g:5025:1: rule__InsertStatement__Group__4__Impl : ( ( rule__InsertStatement__ValsAssignment_4 ) ) ;
    public final void rule__InsertStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5029:1: ( ( ( rule__InsertStatement__ValsAssignment_4 ) ) )
            // InternalSQLParser.g:5030:1: ( ( rule__InsertStatement__ValsAssignment_4 ) )
            {
            // InternalSQLParser.g:5030:1: ( ( rule__InsertStatement__ValsAssignment_4 ) )
            // InternalSQLParser.g:5031:2: ( rule__InsertStatement__ValsAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getValsAssignment_4()); 
            }
            // InternalSQLParser.g:5032:2: ( rule__InsertStatement__ValsAssignment_4 )
            // InternalSQLParser.g:5032:3: rule__InsertStatement__ValsAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__ValsAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getValsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__4__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group__0"
    // InternalSQLParser.g:5041:1: rule__CreateTableStatement__Group__0 : rule__CreateTableStatement__Group__0__Impl rule__CreateTableStatement__Group__1 ;
    public final void rule__CreateTableStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5045:1: ( rule__CreateTableStatement__Group__0__Impl rule__CreateTableStatement__Group__1 )
            // InternalSQLParser.g:5046:2: rule__CreateTableStatement__Group__0__Impl rule__CreateTableStatement__Group__1
            {
            pushFollow(FOLLOW_7);
            rule__CreateTableStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__0"


    // $ANTLR start "rule__CreateTableStatement__Group__0__Impl"
    // InternalSQLParser.g:5053:1: rule__CreateTableStatement__Group__0__Impl : ( CREATE ) ;
    public final void rule__CreateTableStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5057:1: ( ( CREATE ) )
            // InternalSQLParser.g:5058:1: ( CREATE )
            {
            // InternalSQLParser.g:5058:1: ( CREATE )
            // InternalSQLParser.g:5059:2: CREATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getCREATEKeyword_0()); 
            }
            match(input,CREATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getCREATEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__0__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group__1"
    // InternalSQLParser.g:5068:1: rule__CreateTableStatement__Group__1 : rule__CreateTableStatement__Group__1__Impl rule__CreateTableStatement__Group__2 ;
    public final void rule__CreateTableStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5072:1: ( rule__CreateTableStatement__Group__1__Impl rule__CreateTableStatement__Group__2 )
            // InternalSQLParser.g:5073:2: rule__CreateTableStatement__Group__1__Impl rule__CreateTableStatement__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__CreateTableStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__1"


    // $ANTLR start "rule__CreateTableStatement__Group__1__Impl"
    // InternalSQLParser.g:5080:1: rule__CreateTableStatement__Group__1__Impl : ( TABLE ) ;
    public final void rule__CreateTableStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5084:1: ( ( TABLE ) )
            // InternalSQLParser.g:5085:1: ( TABLE )
            {
            // InternalSQLParser.g:5085:1: ( TABLE )
            // InternalSQLParser.g:5086:2: TABLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getTABLEKeyword_1()); 
            }
            match(input,TABLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getTABLEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__1__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group__2"
    // InternalSQLParser.g:5095:1: rule__CreateTableStatement__Group__2 : rule__CreateTableStatement__Group__2__Impl rule__CreateTableStatement__Group__3 ;
    public final void rule__CreateTableStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5099:1: ( rule__CreateTableStatement__Group__2__Impl rule__CreateTableStatement__Group__3 )
            // InternalSQLParser.g:5100:2: rule__CreateTableStatement__Group__2__Impl rule__CreateTableStatement__Group__3
            {
            pushFollow(FOLLOW_8);
            rule__CreateTableStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__2"


    // $ANTLR start "rule__CreateTableStatement__Group__2__Impl"
    // InternalSQLParser.g:5107:1: rule__CreateTableStatement__Group__2__Impl : ( ( rule__CreateTableStatement__Group_2__0 )? ) ;
    public final void rule__CreateTableStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5111:1: ( ( ( rule__CreateTableStatement__Group_2__0 )? ) )
            // InternalSQLParser.g:5112:1: ( ( rule__CreateTableStatement__Group_2__0 )? )
            {
            // InternalSQLParser.g:5112:1: ( ( rule__CreateTableStatement__Group_2__0 )? )
            // InternalSQLParser.g:5113:2: ( rule__CreateTableStatement__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:5114:2: ( rule__CreateTableStatement__Group_2__0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==IF) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSQLParser.g:5114:3: rule__CreateTableStatement__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__CreateTableStatement__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__2__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group__3"
    // InternalSQLParser.g:5122:1: rule__CreateTableStatement__Group__3 : rule__CreateTableStatement__Group__3__Impl rule__CreateTableStatement__Group__4 ;
    public final void rule__CreateTableStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5126:1: ( rule__CreateTableStatement__Group__3__Impl rule__CreateTableStatement__Group__4 )
            // InternalSQLParser.g:5127:2: rule__CreateTableStatement__Group__3__Impl rule__CreateTableStatement__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__CreateTableStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__3"


    // $ANTLR start "rule__CreateTableStatement__Group__3__Impl"
    // InternalSQLParser.g:5134:1: rule__CreateTableStatement__Group__3__Impl : ( ( rule__CreateTableStatement__TblAssignment_3 ) ) ;
    public final void rule__CreateTableStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5138:1: ( ( ( rule__CreateTableStatement__TblAssignment_3 ) ) )
            // InternalSQLParser.g:5139:1: ( ( rule__CreateTableStatement__TblAssignment_3 ) )
            {
            // InternalSQLParser.g:5139:1: ( ( rule__CreateTableStatement__TblAssignment_3 ) )
            // InternalSQLParser.g:5140:2: ( rule__CreateTableStatement__TblAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getTblAssignment_3()); 
            }
            // InternalSQLParser.g:5141:2: ( rule__CreateTableStatement__TblAssignment_3 )
            // InternalSQLParser.g:5141:3: rule__CreateTableStatement__TblAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__TblAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getTblAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__3__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group__4"
    // InternalSQLParser.g:5149:1: rule__CreateTableStatement__Group__4 : rule__CreateTableStatement__Group__4__Impl rule__CreateTableStatement__Group__5 ;
    public final void rule__CreateTableStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5153:1: ( rule__CreateTableStatement__Group__4__Impl rule__CreateTableStatement__Group__5 )
            // InternalSQLParser.g:5154:2: rule__CreateTableStatement__Group__4__Impl rule__CreateTableStatement__Group__5
            {
            pushFollow(FOLLOW_10);
            rule__CreateTableStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__4"


    // $ANTLR start "rule__CreateTableStatement__Group__4__Impl"
    // InternalSQLParser.g:5161:1: rule__CreateTableStatement__Group__4__Impl : ( LeftParenthesis ) ;
    public final void rule__CreateTableStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5165:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:5166:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:5166:1: ( LeftParenthesis )
            // InternalSQLParser.g:5167:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getLeftParenthesisKeyword_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getLeftParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__4__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group__5"
    // InternalSQLParser.g:5176:1: rule__CreateTableStatement__Group__5 : rule__CreateTableStatement__Group__5__Impl rule__CreateTableStatement__Group__6 ;
    public final void rule__CreateTableStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5180:1: ( rule__CreateTableStatement__Group__5__Impl rule__CreateTableStatement__Group__6 )
            // InternalSQLParser.g:5181:2: rule__CreateTableStatement__Group__5__Impl rule__CreateTableStatement__Group__6
            {
            pushFollow(FOLLOW_11);
            rule__CreateTableStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__5"


    // $ANTLR start "rule__CreateTableStatement__Group__5__Impl"
    // InternalSQLParser.g:5188:1: rule__CreateTableStatement__Group__5__Impl : ( ( rule__CreateTableStatement__Table_definitionAssignment_5 ) ) ;
    public final void rule__CreateTableStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5192:1: ( ( ( rule__CreateTableStatement__Table_definitionAssignment_5 ) ) )
            // InternalSQLParser.g:5193:1: ( ( rule__CreateTableStatement__Table_definitionAssignment_5 ) )
            {
            // InternalSQLParser.g:5193:1: ( ( rule__CreateTableStatement__Table_definitionAssignment_5 ) )
            // InternalSQLParser.g:5194:2: ( rule__CreateTableStatement__Table_definitionAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getTable_definitionAssignment_5()); 
            }
            // InternalSQLParser.g:5195:2: ( rule__CreateTableStatement__Table_definitionAssignment_5 )
            // InternalSQLParser.g:5195:3: rule__CreateTableStatement__Table_definitionAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Table_definitionAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getTable_definitionAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__5__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group__6"
    // InternalSQLParser.g:5203:1: rule__CreateTableStatement__Group__6 : rule__CreateTableStatement__Group__6__Impl rule__CreateTableStatement__Group__7 ;
    public final void rule__CreateTableStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5207:1: ( rule__CreateTableStatement__Group__6__Impl rule__CreateTableStatement__Group__7 )
            // InternalSQLParser.g:5208:2: rule__CreateTableStatement__Group__6__Impl rule__CreateTableStatement__Group__7
            {
            pushFollow(FOLLOW_12);
            rule__CreateTableStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__6"


    // $ANTLR start "rule__CreateTableStatement__Group__6__Impl"
    // InternalSQLParser.g:5215:1: rule__CreateTableStatement__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__CreateTableStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5219:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:5220:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:5220:1: ( RightParenthesis )
            // InternalSQLParser.g:5221:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__6__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group__7"
    // InternalSQLParser.g:5230:1: rule__CreateTableStatement__Group__7 : rule__CreateTableStatement__Group__7__Impl ;
    public final void rule__CreateTableStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5234:1: ( rule__CreateTableStatement__Group__7__Impl )
            // InternalSQLParser.g:5235:2: rule__CreateTableStatement__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__7"


    // $ANTLR start "rule__CreateTableStatement__Group__7__Impl"
    // InternalSQLParser.g:5241:1: rule__CreateTableStatement__Group__7__Impl : ( ( rule__CreateTableStatement__Ttl_definitionAssignment_7 )? ) ;
    public final void rule__CreateTableStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5245:1: ( ( ( rule__CreateTableStatement__Ttl_definitionAssignment_7 )? ) )
            // InternalSQLParser.g:5246:1: ( ( rule__CreateTableStatement__Ttl_definitionAssignment_7 )? )
            {
            // InternalSQLParser.g:5246:1: ( ( rule__CreateTableStatement__Ttl_definitionAssignment_7 )? )
            // InternalSQLParser.g:5247:2: ( rule__CreateTableStatement__Ttl_definitionAssignment_7 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getTtl_definitionAssignment_7()); 
            }
            // InternalSQLParser.g:5248:2: ( rule__CreateTableStatement__Ttl_definitionAssignment_7 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==USING) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSQLParser.g:5248:3: rule__CreateTableStatement__Ttl_definitionAssignment_7
                    {
                    pushFollow(FOLLOW_2);
                    rule__CreateTableStatement__Ttl_definitionAssignment_7();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getTtl_definitionAssignment_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group__7__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group_2__0"
    // InternalSQLParser.g:5257:1: rule__CreateTableStatement__Group_2__0 : rule__CreateTableStatement__Group_2__0__Impl rule__CreateTableStatement__Group_2__1 ;
    public final void rule__CreateTableStatement__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5261:1: ( rule__CreateTableStatement__Group_2__0__Impl rule__CreateTableStatement__Group_2__1 )
            // InternalSQLParser.g:5262:2: rule__CreateTableStatement__Group_2__0__Impl rule__CreateTableStatement__Group_2__1
            {
            pushFollow(FOLLOW_13);
            rule__CreateTableStatement__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group_2__0"


    // $ANTLR start "rule__CreateTableStatement__Group_2__0__Impl"
    // InternalSQLParser.g:5269:1: rule__CreateTableStatement__Group_2__0__Impl : ( IF ) ;
    public final void rule__CreateTableStatement__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5273:1: ( ( IF ) )
            // InternalSQLParser.g:5274:1: ( IF )
            {
            // InternalSQLParser.g:5274:1: ( IF )
            // InternalSQLParser.g:5275:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getIFKeyword_2_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getIFKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group_2__0__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group_2__1"
    // InternalSQLParser.g:5284:1: rule__CreateTableStatement__Group_2__1 : rule__CreateTableStatement__Group_2__1__Impl rule__CreateTableStatement__Group_2__2 ;
    public final void rule__CreateTableStatement__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5288:1: ( rule__CreateTableStatement__Group_2__1__Impl rule__CreateTableStatement__Group_2__2 )
            // InternalSQLParser.g:5289:2: rule__CreateTableStatement__Group_2__1__Impl rule__CreateTableStatement__Group_2__2
            {
            pushFollow(FOLLOW_14);
            rule__CreateTableStatement__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group_2__1"


    // $ANTLR start "rule__CreateTableStatement__Group_2__1__Impl"
    // InternalSQLParser.g:5296:1: rule__CreateTableStatement__Group_2__1__Impl : ( NOT ) ;
    public final void rule__CreateTableStatement__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5300:1: ( ( NOT ) )
            // InternalSQLParser.g:5301:1: ( NOT )
            {
            // InternalSQLParser.g:5301:1: ( NOT )
            // InternalSQLParser.g:5302:2: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getNOTKeyword_2_1()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getNOTKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group_2__1__Impl"


    // $ANTLR start "rule__CreateTableStatement__Group_2__2"
    // InternalSQLParser.g:5311:1: rule__CreateTableStatement__Group_2__2 : rule__CreateTableStatement__Group_2__2__Impl ;
    public final void rule__CreateTableStatement__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5315:1: ( rule__CreateTableStatement__Group_2__2__Impl )
            // InternalSQLParser.g:5316:2: rule__CreateTableStatement__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CreateTableStatement__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group_2__2"


    // $ANTLR start "rule__CreateTableStatement__Group_2__2__Impl"
    // InternalSQLParser.g:5322:1: rule__CreateTableStatement__Group_2__2__Impl : ( EXISTS ) ;
    public final void rule__CreateTableStatement__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5326:1: ( ( EXISTS ) )
            // InternalSQLParser.g:5327:1: ( EXISTS )
            {
            // InternalSQLParser.g:5327:1: ( EXISTS )
            // InternalSQLParser.g:5328:2: EXISTS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getEXISTSKeyword_2_2()); 
            }
            match(input,EXISTS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getEXISTSKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Group_2__2__Impl"


    // $ANTLR start "rule__TableDefinition__Group__0"
    // InternalSQLParser.g:5338:1: rule__TableDefinition__Group__0 : rule__TableDefinition__Group__0__Impl rule__TableDefinition__Group__1 ;
    public final void rule__TableDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5342:1: ( rule__TableDefinition__Group__0__Impl rule__TableDefinition__Group__1 )
            // InternalSQLParser.g:5343:2: rule__TableDefinition__Group__0__Impl rule__TableDefinition__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__TableDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Group__0"


    // $ANTLR start "rule__TableDefinition__Group__0__Impl"
    // InternalSQLParser.g:5350:1: rule__TableDefinition__Group__0__Impl : ( ( rule__TableDefinition__Alternatives_0 ) ) ;
    public final void rule__TableDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5354:1: ( ( ( rule__TableDefinition__Alternatives_0 ) ) )
            // InternalSQLParser.g:5355:1: ( ( rule__TableDefinition__Alternatives_0 ) )
            {
            // InternalSQLParser.g:5355:1: ( ( rule__TableDefinition__Alternatives_0 ) )
            // InternalSQLParser.g:5356:2: ( rule__TableDefinition__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:5357:2: ( rule__TableDefinition__Alternatives_0 )
            // InternalSQLParser.g:5357:3: rule__TableDefinition__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__TableDefinition__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Group__0__Impl"


    // $ANTLR start "rule__TableDefinition__Group__1"
    // InternalSQLParser.g:5365:1: rule__TableDefinition__Group__1 : rule__TableDefinition__Group__1__Impl ;
    public final void rule__TableDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5369:1: ( rule__TableDefinition__Group__1__Impl )
            // InternalSQLParser.g:5370:2: rule__TableDefinition__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Group__1"


    // $ANTLR start "rule__TableDefinition__Group__1__Impl"
    // InternalSQLParser.g:5376:1: rule__TableDefinition__Group__1__Impl : ( ( rule__TableDefinition__Group_1__0 )* ) ;
    public final void rule__TableDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5380:1: ( ( ( rule__TableDefinition__Group_1__0 )* ) )
            // InternalSQLParser.g:5381:1: ( ( rule__TableDefinition__Group_1__0 )* )
            {
            // InternalSQLParser.g:5381:1: ( ( rule__TableDefinition__Group_1__0 )* )
            // InternalSQLParser.g:5382:2: ( rule__TableDefinition__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:5383:2: ( rule__TableDefinition__Group_1__0 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==Comma) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalSQLParser.g:5383:3: rule__TableDefinition__Group_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__TableDefinition__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Group__1__Impl"


    // $ANTLR start "rule__TableDefinition__Group_1__0"
    // InternalSQLParser.g:5392:1: rule__TableDefinition__Group_1__0 : rule__TableDefinition__Group_1__0__Impl rule__TableDefinition__Group_1__1 ;
    public final void rule__TableDefinition__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5396:1: ( rule__TableDefinition__Group_1__0__Impl rule__TableDefinition__Group_1__1 )
            // InternalSQLParser.g:5397:2: rule__TableDefinition__Group_1__0__Impl rule__TableDefinition__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__TableDefinition__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableDefinition__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Group_1__0"


    // $ANTLR start "rule__TableDefinition__Group_1__0__Impl"
    // InternalSQLParser.g:5404:1: rule__TableDefinition__Group_1__0__Impl : ( Comma ) ;
    public final void rule__TableDefinition__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5408:1: ( ( Comma ) )
            // InternalSQLParser.g:5409:1: ( Comma )
            {
            // InternalSQLParser.g:5409:1: ( Comma )
            // InternalSQLParser.g:5410:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Group_1__0__Impl"


    // $ANTLR start "rule__TableDefinition__Group_1__1"
    // InternalSQLParser.g:5419:1: rule__TableDefinition__Group_1__1 : rule__TableDefinition__Group_1__1__Impl ;
    public final void rule__TableDefinition__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5423:1: ( rule__TableDefinition__Group_1__1__Impl )
            // InternalSQLParser.g:5424:2: rule__TableDefinition__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableDefinition__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Group_1__1"


    // $ANTLR start "rule__TableDefinition__Group_1__1__Impl"
    // InternalSQLParser.g:5430:1: rule__TableDefinition__Group_1__1__Impl : ( ( rule__TableDefinition__Alternatives_1_1 ) ) ;
    public final void rule__TableDefinition__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5434:1: ( ( ( rule__TableDefinition__Alternatives_1_1 ) ) )
            // InternalSQLParser.g:5435:1: ( ( rule__TableDefinition__Alternatives_1_1 ) )
            {
            // InternalSQLParser.g:5435:1: ( ( rule__TableDefinition__Alternatives_1_1 ) )
            // InternalSQLParser.g:5436:2: ( rule__TableDefinition__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionAccess().getAlternatives_1_1()); 
            }
            // InternalSQLParser.g:5437:2: ( rule__TableDefinition__Alternatives_1_1 )
            // InternalSQLParser.g:5437:3: rule__TableDefinition__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableDefinition__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnDefinition__Group__0"
    // InternalSQLParser.g:5446:1: rule__ColumnDefinition__Group__0 : rule__ColumnDefinition__Group__0__Impl rule__ColumnDefinition__Group__1 ;
    public final void rule__ColumnDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5450:1: ( rule__ColumnDefinition__Group__0__Impl rule__ColumnDefinition__Group__1 )
            // InternalSQLParser.g:5451:2: rule__ColumnDefinition__Group__0__Impl rule__ColumnDefinition__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__ColumnDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__0"


    // $ANTLR start "rule__ColumnDefinition__Group__0__Impl"
    // InternalSQLParser.g:5458:1: rule__ColumnDefinition__Group__0__Impl : ( ( rule__ColumnDefinition__IdAssignment_0 ) ) ;
    public final void rule__ColumnDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5462:1: ( ( ( rule__ColumnDefinition__IdAssignment_0 ) ) )
            // InternalSQLParser.g:5463:1: ( ( rule__ColumnDefinition__IdAssignment_0 ) )
            {
            // InternalSQLParser.g:5463:1: ( ( rule__ColumnDefinition__IdAssignment_0 ) )
            // InternalSQLParser.g:5464:2: ( rule__ColumnDefinition__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getIdAssignment_0()); 
            }
            // InternalSQLParser.g:5465:2: ( rule__ColumnDefinition__IdAssignment_0 )
            // InternalSQLParser.g:5465:3: rule__ColumnDefinition__IdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__0__Impl"


    // $ANTLR start "rule__ColumnDefinition__Group__1"
    // InternalSQLParser.g:5473:1: rule__ColumnDefinition__Group__1 : rule__ColumnDefinition__Group__1__Impl ;
    public final void rule__ColumnDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5477:1: ( rule__ColumnDefinition__Group__1__Impl )
            // InternalSQLParser.g:5478:2: rule__ColumnDefinition__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__1"


    // $ANTLR start "rule__ColumnDefinition__Group__1__Impl"
    // InternalSQLParser.g:5484:1: rule__ColumnDefinition__Group__1__Impl : ( ( rule__ColumnDefinition__Type_definitionAssignment_1 ) ) ;
    public final void rule__ColumnDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5488:1: ( ( ( rule__ColumnDefinition__Type_definitionAssignment_1 ) ) )
            // InternalSQLParser.g:5489:1: ( ( rule__ColumnDefinition__Type_definitionAssignment_1 ) )
            {
            // InternalSQLParser.g:5489:1: ( ( rule__ColumnDefinition__Type_definitionAssignment_1 ) )
            // InternalSQLParser.g:5490:2: ( rule__ColumnDefinition__Type_definitionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getType_definitionAssignment_1()); 
            }
            // InternalSQLParser.g:5491:2: ( rule__ColumnDefinition__Type_definitionAssignment_1 )
            // InternalSQLParser.g:5491:3: rule__ColumnDefinition__Type_definitionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Type_definitionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getType_definitionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__1__Impl"


    // $ANTLR start "rule__KeyDefinition__Group__0"
    // InternalSQLParser.g:5500:1: rule__KeyDefinition__Group__0 : rule__KeyDefinition__Group__0__Impl rule__KeyDefinition__Group__1 ;
    public final void rule__KeyDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5504:1: ( rule__KeyDefinition__Group__0__Impl rule__KeyDefinition__Group__1 )
            // InternalSQLParser.g:5505:2: rule__KeyDefinition__Group__0__Impl rule__KeyDefinition__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__KeyDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__0"


    // $ANTLR start "rule__KeyDefinition__Group__0__Impl"
    // InternalSQLParser.g:5512:1: rule__KeyDefinition__Group__0__Impl : ( () ) ;
    public final void rule__KeyDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5516:1: ( ( () ) )
            // InternalSQLParser.g:5517:1: ( () )
            {
            // InternalSQLParser.g:5517:1: ( () )
            // InternalSQLParser.g:5518:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getKeyDefinitionAction_0()); 
            }
            // InternalSQLParser.g:5519:2: ()
            // InternalSQLParser.g:5519:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getKeyDefinitionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__0__Impl"


    // $ANTLR start "rule__KeyDefinition__Group__1"
    // InternalSQLParser.g:5527:1: rule__KeyDefinition__Group__1 : rule__KeyDefinition__Group__1__Impl rule__KeyDefinition__Group__2 ;
    public final void rule__KeyDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5531:1: ( rule__KeyDefinition__Group__1__Impl rule__KeyDefinition__Group__2 )
            // InternalSQLParser.g:5532:2: rule__KeyDefinition__Group__1__Impl rule__KeyDefinition__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__KeyDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__1"


    // $ANTLR start "rule__KeyDefinition__Group__1__Impl"
    // InternalSQLParser.g:5539:1: rule__KeyDefinition__Group__1__Impl : ( PRIMARY ) ;
    public final void rule__KeyDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5543:1: ( ( PRIMARY ) )
            // InternalSQLParser.g:5544:1: ( PRIMARY )
            {
            // InternalSQLParser.g:5544:1: ( PRIMARY )
            // InternalSQLParser.g:5545:2: PRIMARY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getPRIMARYKeyword_1()); 
            }
            match(input,PRIMARY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getPRIMARYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__1__Impl"


    // $ANTLR start "rule__KeyDefinition__Group__2"
    // InternalSQLParser.g:5554:1: rule__KeyDefinition__Group__2 : rule__KeyDefinition__Group__2__Impl rule__KeyDefinition__Group__3 ;
    public final void rule__KeyDefinition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5558:1: ( rule__KeyDefinition__Group__2__Impl rule__KeyDefinition__Group__3 )
            // InternalSQLParser.g:5559:2: rule__KeyDefinition__Group__2__Impl rule__KeyDefinition__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__KeyDefinition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__2"


    // $ANTLR start "rule__KeyDefinition__Group__2__Impl"
    // InternalSQLParser.g:5566:1: rule__KeyDefinition__Group__2__Impl : ( KEY ) ;
    public final void rule__KeyDefinition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5570:1: ( ( KEY ) )
            // InternalSQLParser.g:5571:1: ( KEY )
            {
            // InternalSQLParser.g:5571:1: ( KEY )
            // InternalSQLParser.g:5572:2: KEY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getKEYKeyword_2()); 
            }
            match(input,KEY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getKEYKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__2__Impl"


    // $ANTLR start "rule__KeyDefinition__Group__3"
    // InternalSQLParser.g:5581:1: rule__KeyDefinition__Group__3 : rule__KeyDefinition__Group__3__Impl rule__KeyDefinition__Group__4 ;
    public final void rule__KeyDefinition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5585:1: ( rule__KeyDefinition__Group__3__Impl rule__KeyDefinition__Group__4 )
            // InternalSQLParser.g:5586:2: rule__KeyDefinition__Group__3__Impl rule__KeyDefinition__Group__4
            {
            pushFollow(FOLLOW_19);
            rule__KeyDefinition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__3"


    // $ANTLR start "rule__KeyDefinition__Group__3__Impl"
    // InternalSQLParser.g:5593:1: rule__KeyDefinition__Group__3__Impl : ( LeftParenthesis ) ;
    public final void rule__KeyDefinition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5597:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:5598:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:5598:1: ( LeftParenthesis )
            // InternalSQLParser.g:5599:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getLeftParenthesisKeyword_3()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getLeftParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__3__Impl"


    // $ANTLR start "rule__KeyDefinition__Group__4"
    // InternalSQLParser.g:5608:1: rule__KeyDefinition__Group__4 : rule__KeyDefinition__Group__4__Impl rule__KeyDefinition__Group__5 ;
    public final void rule__KeyDefinition__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5612:1: ( rule__KeyDefinition__Group__4__Impl rule__KeyDefinition__Group__5 )
            // InternalSQLParser.g:5613:2: rule__KeyDefinition__Group__4__Impl rule__KeyDefinition__Group__5
            {
            pushFollow(FOLLOW_19);
            rule__KeyDefinition__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__4"


    // $ANTLR start "rule__KeyDefinition__Group__4__Impl"
    // InternalSQLParser.g:5620:1: rule__KeyDefinition__Group__4__Impl : ( ( rule__KeyDefinition__Group_4__0 )? ) ;
    public final void rule__KeyDefinition__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5624:1: ( ( ( rule__KeyDefinition__Group_4__0 )? ) )
            // InternalSQLParser.g:5625:1: ( ( rule__KeyDefinition__Group_4__0 )? )
            {
            // InternalSQLParser.g:5625:1: ( ( rule__KeyDefinition__Group_4__0 )? )
            // InternalSQLParser.g:5626:2: ( rule__KeyDefinition__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getGroup_4()); 
            }
            // InternalSQLParser.g:5627:2: ( rule__KeyDefinition__Group_4__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==SHARD) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSQLParser.g:5627:3: rule__KeyDefinition__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__KeyDefinition__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__4__Impl"


    // $ANTLR start "rule__KeyDefinition__Group__5"
    // InternalSQLParser.g:5635:1: rule__KeyDefinition__Group__5 : rule__KeyDefinition__Group__5__Impl rule__KeyDefinition__Group__6 ;
    public final void rule__KeyDefinition__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5639:1: ( rule__KeyDefinition__Group__5__Impl rule__KeyDefinition__Group__6 )
            // InternalSQLParser.g:5640:2: rule__KeyDefinition__Group__5__Impl rule__KeyDefinition__Group__6
            {
            pushFollow(FOLLOW_19);
            rule__KeyDefinition__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__5"


    // $ANTLR start "rule__KeyDefinition__Group__5__Impl"
    // InternalSQLParser.g:5647:1: rule__KeyDefinition__Group__5__Impl : ( ( rule__KeyDefinition__Id_list_with_sizeAssignment_5 )? ) ;
    public final void rule__KeyDefinition__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5651:1: ( ( ( rule__KeyDefinition__Id_list_with_sizeAssignment_5 )? ) )
            // InternalSQLParser.g:5652:1: ( ( rule__KeyDefinition__Id_list_with_sizeAssignment_5 )? )
            {
            // InternalSQLParser.g:5652:1: ( ( rule__KeyDefinition__Id_list_with_sizeAssignment_5 )? )
            // InternalSQLParser.g:5653:2: ( rule__KeyDefinition__Id_list_with_sizeAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getId_list_with_sizeAssignment_5()); 
            }
            // InternalSQLParser.g:5654:2: ( rule__KeyDefinition__Id_list_with_sizeAssignment_5 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_ID) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalSQLParser.g:5654:3: rule__KeyDefinition__Id_list_with_sizeAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__KeyDefinition__Id_list_with_sizeAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getId_list_with_sizeAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__5__Impl"


    // $ANTLR start "rule__KeyDefinition__Group__6"
    // InternalSQLParser.g:5662:1: rule__KeyDefinition__Group__6 : rule__KeyDefinition__Group__6__Impl rule__KeyDefinition__Group__7 ;
    public final void rule__KeyDefinition__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5666:1: ( rule__KeyDefinition__Group__6__Impl rule__KeyDefinition__Group__7 )
            // InternalSQLParser.g:5667:2: rule__KeyDefinition__Group__6__Impl rule__KeyDefinition__Group__7
            {
            pushFollow(FOLLOW_12);
            rule__KeyDefinition__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__6"


    // $ANTLR start "rule__KeyDefinition__Group__6__Impl"
    // InternalSQLParser.g:5674:1: rule__KeyDefinition__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__KeyDefinition__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5678:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:5679:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:5679:1: ( RightParenthesis )
            // InternalSQLParser.g:5680:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__6__Impl"


    // $ANTLR start "rule__KeyDefinition__Group__7"
    // InternalSQLParser.g:5689:1: rule__KeyDefinition__Group__7 : rule__KeyDefinition__Group__7__Impl ;
    public final void rule__KeyDefinition__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5693:1: ( rule__KeyDefinition__Group__7__Impl )
            // InternalSQLParser.g:5694:2: rule__KeyDefinition__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__7"


    // $ANTLR start "rule__KeyDefinition__Group__7__Impl"
    // InternalSQLParser.g:5700:1: rule__KeyDefinition__Group__7__Impl : ( ( rule__KeyDefinition__Ttl_definitionAssignment_7 )? ) ;
    public final void rule__KeyDefinition__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5704:1: ( ( ( rule__KeyDefinition__Ttl_definitionAssignment_7 )? ) )
            // InternalSQLParser.g:5705:1: ( ( rule__KeyDefinition__Ttl_definitionAssignment_7 )? )
            {
            // InternalSQLParser.g:5705:1: ( ( rule__KeyDefinition__Ttl_definitionAssignment_7 )? )
            // InternalSQLParser.g:5706:2: ( rule__KeyDefinition__Ttl_definitionAssignment_7 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getTtl_definitionAssignment_7()); 
            }
            // InternalSQLParser.g:5707:2: ( rule__KeyDefinition__Ttl_definitionAssignment_7 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==USING) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSQLParser.g:5707:3: rule__KeyDefinition__Ttl_definitionAssignment_7
                    {
                    pushFollow(FOLLOW_2);
                    rule__KeyDefinition__Ttl_definitionAssignment_7();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getTtl_definitionAssignment_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group__7__Impl"


    // $ANTLR start "rule__KeyDefinition__Group_4__0"
    // InternalSQLParser.g:5716:1: rule__KeyDefinition__Group_4__0 : rule__KeyDefinition__Group_4__0__Impl rule__KeyDefinition__Group_4__1 ;
    public final void rule__KeyDefinition__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5720:1: ( rule__KeyDefinition__Group_4__0__Impl rule__KeyDefinition__Group_4__1 )
            // InternalSQLParser.g:5721:2: rule__KeyDefinition__Group_4__0__Impl rule__KeyDefinition__Group_4__1
            {
            pushFollow(FOLLOW_15);
            rule__KeyDefinition__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group_4__0"


    // $ANTLR start "rule__KeyDefinition__Group_4__0__Impl"
    // InternalSQLParser.g:5728:1: rule__KeyDefinition__Group_4__0__Impl : ( ( rule__KeyDefinition__Shard_key_definitionAssignment_4_0 ) ) ;
    public final void rule__KeyDefinition__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5732:1: ( ( ( rule__KeyDefinition__Shard_key_definitionAssignment_4_0 ) ) )
            // InternalSQLParser.g:5733:1: ( ( rule__KeyDefinition__Shard_key_definitionAssignment_4_0 ) )
            {
            // InternalSQLParser.g:5733:1: ( ( rule__KeyDefinition__Shard_key_definitionAssignment_4_0 ) )
            // InternalSQLParser.g:5734:2: ( rule__KeyDefinition__Shard_key_definitionAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getShard_key_definitionAssignment_4_0()); 
            }
            // InternalSQLParser.g:5735:2: ( rule__KeyDefinition__Shard_key_definitionAssignment_4_0 )
            // InternalSQLParser.g:5735:3: rule__KeyDefinition__Shard_key_definitionAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Shard_key_definitionAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getShard_key_definitionAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group_4__0__Impl"


    // $ANTLR start "rule__KeyDefinition__Group_4__1"
    // InternalSQLParser.g:5743:1: rule__KeyDefinition__Group_4__1 : rule__KeyDefinition__Group_4__1__Impl ;
    public final void rule__KeyDefinition__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5747:1: ( rule__KeyDefinition__Group_4__1__Impl )
            // InternalSQLParser.g:5748:2: rule__KeyDefinition__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__KeyDefinition__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group_4__1"


    // $ANTLR start "rule__KeyDefinition__Group_4__1__Impl"
    // InternalSQLParser.g:5754:1: rule__KeyDefinition__Group_4__1__Impl : ( ( Comma )? ) ;
    public final void rule__KeyDefinition__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5758:1: ( ( ( Comma )? ) )
            // InternalSQLParser.g:5759:1: ( ( Comma )? )
            {
            // InternalSQLParser.g:5759:1: ( ( Comma )? )
            // InternalSQLParser.g:5760:2: ( Comma )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getCommaKeyword_4_1()); 
            }
            // InternalSQLParser.g:5761:2: ( Comma )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Comma) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSQLParser.g:5761:3: Comma
                    {
                    match(input,Comma,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getCommaKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Group_4__1__Impl"


    // $ANTLR start "rule__IDListWithSize__Group__0"
    // InternalSQLParser.g:5770:1: rule__IDListWithSize__Group__0 : rule__IDListWithSize__Group__0__Impl rule__IDListWithSize__Group__1 ;
    public final void rule__IDListWithSize__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5774:1: ( rule__IDListWithSize__Group__0__Impl rule__IDListWithSize__Group__1 )
            // InternalSQLParser.g:5775:2: rule__IDListWithSize__Group__0__Impl rule__IDListWithSize__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__IDListWithSize__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IDListWithSize__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Group__0"


    // $ANTLR start "rule__IDListWithSize__Group__0__Impl"
    // InternalSQLParser.g:5782:1: rule__IDListWithSize__Group__0__Impl : ( ( rule__IDListWithSize__Id_with_sizeAssignment_0 ) ) ;
    public final void rule__IDListWithSize__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5786:1: ( ( ( rule__IDListWithSize__Id_with_sizeAssignment_0 ) ) )
            // InternalSQLParser.g:5787:1: ( ( rule__IDListWithSize__Id_with_sizeAssignment_0 ) )
            {
            // InternalSQLParser.g:5787:1: ( ( rule__IDListWithSize__Id_with_sizeAssignment_0 ) )
            // InternalSQLParser.g:5788:2: ( rule__IDListWithSize__Id_with_sizeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDListWithSizeAccess().getId_with_sizeAssignment_0()); 
            }
            // InternalSQLParser.g:5789:2: ( rule__IDListWithSize__Id_with_sizeAssignment_0 )
            // InternalSQLParser.g:5789:3: rule__IDListWithSize__Id_with_sizeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__IDListWithSize__Id_with_sizeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDListWithSizeAccess().getId_with_sizeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Group__0__Impl"


    // $ANTLR start "rule__IDListWithSize__Group__1"
    // InternalSQLParser.g:5797:1: rule__IDListWithSize__Group__1 : rule__IDListWithSize__Group__1__Impl ;
    public final void rule__IDListWithSize__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5801:1: ( rule__IDListWithSize__Group__1__Impl )
            // InternalSQLParser.g:5802:2: rule__IDListWithSize__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IDListWithSize__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Group__1"


    // $ANTLR start "rule__IDListWithSize__Group__1__Impl"
    // InternalSQLParser.g:5808:1: rule__IDListWithSize__Group__1__Impl : ( ( rule__IDListWithSize__Group_1__0 )* ) ;
    public final void rule__IDListWithSize__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5812:1: ( ( ( rule__IDListWithSize__Group_1__0 )* ) )
            // InternalSQLParser.g:5813:1: ( ( rule__IDListWithSize__Group_1__0 )* )
            {
            // InternalSQLParser.g:5813:1: ( ( rule__IDListWithSize__Group_1__0 )* )
            // InternalSQLParser.g:5814:2: ( rule__IDListWithSize__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDListWithSizeAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:5815:2: ( rule__IDListWithSize__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==Comma) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalSQLParser.g:5815:3: rule__IDListWithSize__Group_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__IDListWithSize__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDListWithSizeAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Group__1__Impl"


    // $ANTLR start "rule__IDListWithSize__Group_1__0"
    // InternalSQLParser.g:5824:1: rule__IDListWithSize__Group_1__0 : rule__IDListWithSize__Group_1__0__Impl rule__IDListWithSize__Group_1__1 ;
    public final void rule__IDListWithSize__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5828:1: ( rule__IDListWithSize__Group_1__0__Impl rule__IDListWithSize__Group_1__1 )
            // InternalSQLParser.g:5829:2: rule__IDListWithSize__Group_1__0__Impl rule__IDListWithSize__Group_1__1
            {
            pushFollow(FOLLOW_20);
            rule__IDListWithSize__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IDListWithSize__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Group_1__0"


    // $ANTLR start "rule__IDListWithSize__Group_1__0__Impl"
    // InternalSQLParser.g:5836:1: rule__IDListWithSize__Group_1__0__Impl : ( Comma ) ;
    public final void rule__IDListWithSize__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5840:1: ( ( Comma ) )
            // InternalSQLParser.g:5841:1: ( Comma )
            {
            // InternalSQLParser.g:5841:1: ( Comma )
            // InternalSQLParser.g:5842:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDListWithSizeAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDListWithSizeAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Group_1__0__Impl"


    // $ANTLR start "rule__IDListWithSize__Group_1__1"
    // InternalSQLParser.g:5851:1: rule__IDListWithSize__Group_1__1 : rule__IDListWithSize__Group_1__1__Impl ;
    public final void rule__IDListWithSize__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5855:1: ( rule__IDListWithSize__Group_1__1__Impl )
            // InternalSQLParser.g:5856:2: rule__IDListWithSize__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IDListWithSize__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Group_1__1"


    // $ANTLR start "rule__IDListWithSize__Group_1__1__Impl"
    // InternalSQLParser.g:5862:1: rule__IDListWithSize__Group_1__1__Impl : ( ( rule__IDListWithSize__Id_with_sizeAssignment_1_1 ) ) ;
    public final void rule__IDListWithSize__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5866:1: ( ( ( rule__IDListWithSize__Id_with_sizeAssignment_1_1 ) ) )
            // InternalSQLParser.g:5867:1: ( ( rule__IDListWithSize__Id_with_sizeAssignment_1_1 ) )
            {
            // InternalSQLParser.g:5867:1: ( ( rule__IDListWithSize__Id_with_sizeAssignment_1_1 ) )
            // InternalSQLParser.g:5868:2: ( rule__IDListWithSize__Id_with_sizeAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDListWithSizeAccess().getId_with_sizeAssignment_1_1()); 
            }
            // InternalSQLParser.g:5869:2: ( rule__IDListWithSize__Id_with_sizeAssignment_1_1 )
            // InternalSQLParser.g:5869:3: rule__IDListWithSize__Id_with_sizeAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__IDListWithSize__Id_with_sizeAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDListWithSizeAccess().getId_with_sizeAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Group_1__1__Impl"


    // $ANTLR start "rule__IDWithSize__Group__0"
    // InternalSQLParser.g:5878:1: rule__IDWithSize__Group__0 : rule__IDWithSize__Group__0__Impl rule__IDWithSize__Group__1 ;
    public final void rule__IDWithSize__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5882:1: ( rule__IDWithSize__Group__0__Impl rule__IDWithSize__Group__1 )
            // InternalSQLParser.g:5883:2: rule__IDWithSize__Group__0__Impl rule__IDWithSize__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__IDWithSize__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IDWithSize__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDWithSize__Group__0"


    // $ANTLR start "rule__IDWithSize__Group__0__Impl"
    // InternalSQLParser.g:5890:1: rule__IDWithSize__Group__0__Impl : ( ( rule__IDWithSize__IdAssignment_0 ) ) ;
    public final void rule__IDWithSize__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5894:1: ( ( ( rule__IDWithSize__IdAssignment_0 ) ) )
            // InternalSQLParser.g:5895:1: ( ( rule__IDWithSize__IdAssignment_0 ) )
            {
            // InternalSQLParser.g:5895:1: ( ( rule__IDWithSize__IdAssignment_0 ) )
            // InternalSQLParser.g:5896:2: ( rule__IDWithSize__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDWithSizeAccess().getIdAssignment_0()); 
            }
            // InternalSQLParser.g:5897:2: ( rule__IDWithSize__IdAssignment_0 )
            // InternalSQLParser.g:5897:3: rule__IDWithSize__IdAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__IDWithSize__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDWithSizeAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDWithSize__Group__0__Impl"


    // $ANTLR start "rule__IDWithSize__Group__1"
    // InternalSQLParser.g:5905:1: rule__IDWithSize__Group__1 : rule__IDWithSize__Group__1__Impl ;
    public final void rule__IDWithSize__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5909:1: ( rule__IDWithSize__Group__1__Impl )
            // InternalSQLParser.g:5910:2: rule__IDWithSize__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IDWithSize__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDWithSize__Group__1"


    // $ANTLR start "rule__IDWithSize__Group__1__Impl"
    // InternalSQLParser.g:5916:1: rule__IDWithSize__Group__1__Impl : ( ( rule__IDWithSize__Storage_sizeAssignment_1 )? ) ;
    public final void rule__IDWithSize__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5920:1: ( ( ( rule__IDWithSize__Storage_sizeAssignment_1 )? ) )
            // InternalSQLParser.g:5921:1: ( ( rule__IDWithSize__Storage_sizeAssignment_1 )? )
            {
            // InternalSQLParser.g:5921:1: ( ( rule__IDWithSize__Storage_sizeAssignment_1 )? )
            // InternalSQLParser.g:5922:2: ( rule__IDWithSize__Storage_sizeAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDWithSizeAccess().getStorage_sizeAssignment_1()); 
            }
            // InternalSQLParser.g:5923:2: ( rule__IDWithSize__Storage_sizeAssignment_1 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==LeftParenthesis) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSQLParser.g:5923:3: rule__IDWithSize__Storage_sizeAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__IDWithSize__Storage_sizeAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDWithSizeAccess().getStorage_sizeAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDWithSize__Group__1__Impl"


    // $ANTLR start "rule__StorageSize__Group__0"
    // InternalSQLParser.g:5932:1: rule__StorageSize__Group__0 : rule__StorageSize__Group__0__Impl rule__StorageSize__Group__1 ;
    public final void rule__StorageSize__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5936:1: ( rule__StorageSize__Group__0__Impl rule__StorageSize__Group__1 )
            // InternalSQLParser.g:5937:2: rule__StorageSize__Group__0__Impl rule__StorageSize__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__StorageSize__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StorageSize__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StorageSize__Group__0"


    // $ANTLR start "rule__StorageSize__Group__0__Impl"
    // InternalSQLParser.g:5944:1: rule__StorageSize__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__StorageSize__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5948:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:5949:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:5949:1: ( LeftParenthesis )
            // InternalSQLParser.g:5950:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStorageSizeAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStorageSizeAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StorageSize__Group__0__Impl"


    // $ANTLR start "rule__StorageSize__Group__1"
    // InternalSQLParser.g:5959:1: rule__StorageSize__Group__1 : rule__StorageSize__Group__1__Impl rule__StorageSize__Group__2 ;
    public final void rule__StorageSize__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5963:1: ( rule__StorageSize__Group__1__Impl rule__StorageSize__Group__2 )
            // InternalSQLParser.g:5964:2: rule__StorageSize__Group__1__Impl rule__StorageSize__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__StorageSize__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__StorageSize__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StorageSize__Group__1"


    // $ANTLR start "rule__StorageSize__Group__1__Impl"
    // InternalSQLParser.g:5971:1: rule__StorageSize__Group__1__Impl : ( ruleIntegerValue ) ;
    public final void rule__StorageSize__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5975:1: ( ( ruleIntegerValue ) )
            // InternalSQLParser.g:5976:1: ( ruleIntegerValue )
            {
            // InternalSQLParser.g:5976:1: ( ruleIntegerValue )
            // InternalSQLParser.g:5977:2: ruleIntegerValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStorageSizeAccess().getIntegerValueParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStorageSizeAccess().getIntegerValueParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StorageSize__Group__1__Impl"


    // $ANTLR start "rule__StorageSize__Group__2"
    // InternalSQLParser.g:5986:1: rule__StorageSize__Group__2 : rule__StorageSize__Group__2__Impl ;
    public final void rule__StorageSize__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5990:1: ( rule__StorageSize__Group__2__Impl )
            // InternalSQLParser.g:5991:2: rule__StorageSize__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__StorageSize__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StorageSize__Group__2"


    // $ANTLR start "rule__StorageSize__Group__2__Impl"
    // InternalSQLParser.g:5997:1: rule__StorageSize__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__StorageSize__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6001:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6002:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6002:1: ( RightParenthesis )
            // InternalSQLParser.g:6003:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStorageSizeAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStorageSizeAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StorageSize__Group__2__Impl"


    // $ANTLR start "rule__ShardKeyDefinition__Group__0"
    // InternalSQLParser.g:6013:1: rule__ShardKeyDefinition__Group__0 : rule__ShardKeyDefinition__Group__0__Impl rule__ShardKeyDefinition__Group__1 ;
    public final void rule__ShardKeyDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6017:1: ( rule__ShardKeyDefinition__Group__0__Impl rule__ShardKeyDefinition__Group__1 )
            // InternalSQLParser.g:6018:2: rule__ShardKeyDefinition__Group__0__Impl rule__ShardKeyDefinition__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__ShardKeyDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ShardKeyDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShardKeyDefinition__Group__0"


    // $ANTLR start "rule__ShardKeyDefinition__Group__0__Impl"
    // InternalSQLParser.g:6025:1: rule__ShardKeyDefinition__Group__0__Impl : ( SHARD ) ;
    public final void rule__ShardKeyDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6029:1: ( ( SHARD ) )
            // InternalSQLParser.g:6030:1: ( SHARD )
            {
            // InternalSQLParser.g:6030:1: ( SHARD )
            // InternalSQLParser.g:6031:2: SHARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShardKeyDefinitionAccess().getSHARDKeyword_0()); 
            }
            match(input,SHARD,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShardKeyDefinitionAccess().getSHARDKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShardKeyDefinition__Group__0__Impl"


    // $ANTLR start "rule__ShardKeyDefinition__Group__1"
    // InternalSQLParser.g:6040:1: rule__ShardKeyDefinition__Group__1 : rule__ShardKeyDefinition__Group__1__Impl rule__ShardKeyDefinition__Group__2 ;
    public final void rule__ShardKeyDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6044:1: ( rule__ShardKeyDefinition__Group__1__Impl rule__ShardKeyDefinition__Group__2 )
            // InternalSQLParser.g:6045:2: rule__ShardKeyDefinition__Group__1__Impl rule__ShardKeyDefinition__Group__2
            {
            pushFollow(FOLLOW_20);
            rule__ShardKeyDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ShardKeyDefinition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShardKeyDefinition__Group__1"


    // $ANTLR start "rule__ShardKeyDefinition__Group__1__Impl"
    // InternalSQLParser.g:6052:1: rule__ShardKeyDefinition__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__ShardKeyDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6056:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6057:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6057:1: ( LeftParenthesis )
            // InternalSQLParser.g:6058:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShardKeyDefinitionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShardKeyDefinitionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShardKeyDefinition__Group__1__Impl"


    // $ANTLR start "rule__ShardKeyDefinition__Group__2"
    // InternalSQLParser.g:6067:1: rule__ShardKeyDefinition__Group__2 : rule__ShardKeyDefinition__Group__2__Impl rule__ShardKeyDefinition__Group__3 ;
    public final void rule__ShardKeyDefinition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6071:1: ( rule__ShardKeyDefinition__Group__2__Impl rule__ShardKeyDefinition__Group__3 )
            // InternalSQLParser.g:6072:2: rule__ShardKeyDefinition__Group__2__Impl rule__ShardKeyDefinition__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__ShardKeyDefinition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ShardKeyDefinition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShardKeyDefinition__Group__2"


    // $ANTLR start "rule__ShardKeyDefinition__Group__2__Impl"
    // InternalSQLParser.g:6079:1: rule__ShardKeyDefinition__Group__2__Impl : ( ( rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2 ) ) ;
    public final void rule__ShardKeyDefinition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6083:1: ( ( ( rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2 ) ) )
            // InternalSQLParser.g:6084:1: ( ( rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2 ) )
            {
            // InternalSQLParser.g:6084:1: ( ( rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2 ) )
            // InternalSQLParser.g:6085:2: ( rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShardKeyDefinitionAccess().getId_list_with_sizeAssignment_2()); 
            }
            // InternalSQLParser.g:6086:2: ( rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2 )
            // InternalSQLParser.g:6086:3: rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getShardKeyDefinitionAccess().getId_list_with_sizeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShardKeyDefinition__Group__2__Impl"


    // $ANTLR start "rule__ShardKeyDefinition__Group__3"
    // InternalSQLParser.g:6094:1: rule__ShardKeyDefinition__Group__3 : rule__ShardKeyDefinition__Group__3__Impl ;
    public final void rule__ShardKeyDefinition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6098:1: ( rule__ShardKeyDefinition__Group__3__Impl )
            // InternalSQLParser.g:6099:2: rule__ShardKeyDefinition__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ShardKeyDefinition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShardKeyDefinition__Group__3"


    // $ANTLR start "rule__ShardKeyDefinition__Group__3__Impl"
    // InternalSQLParser.g:6105:1: rule__ShardKeyDefinition__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__ShardKeyDefinition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6109:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6110:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6110:1: ( RightParenthesis )
            // InternalSQLParser.g:6111:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShardKeyDefinitionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShardKeyDefinitionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShardKeyDefinition__Group__3__Impl"


    // $ANTLR start "rule__TtlDefinition__Group__0"
    // InternalSQLParser.g:6121:1: rule__TtlDefinition__Group__0 : rule__TtlDefinition__Group__0__Impl rule__TtlDefinition__Group__1 ;
    public final void rule__TtlDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6125:1: ( rule__TtlDefinition__Group__0__Impl rule__TtlDefinition__Group__1 )
            // InternalSQLParser.g:6126:2: rule__TtlDefinition__Group__0__Impl rule__TtlDefinition__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__TtlDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TtlDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TtlDefinition__Group__0"


    // $ANTLR start "rule__TtlDefinition__Group__0__Impl"
    // InternalSQLParser.g:6133:1: rule__TtlDefinition__Group__0__Impl : ( USING ) ;
    public final void rule__TtlDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6137:1: ( ( USING ) )
            // InternalSQLParser.g:6138:1: ( USING )
            {
            // InternalSQLParser.g:6138:1: ( USING )
            // InternalSQLParser.g:6139:2: USING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTtlDefinitionAccess().getUSINGKeyword_0()); 
            }
            match(input,USING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTtlDefinitionAccess().getUSINGKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TtlDefinition__Group__0__Impl"


    // $ANTLR start "rule__TtlDefinition__Group__1"
    // InternalSQLParser.g:6148:1: rule__TtlDefinition__Group__1 : rule__TtlDefinition__Group__1__Impl rule__TtlDefinition__Group__2 ;
    public final void rule__TtlDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6152:1: ( rule__TtlDefinition__Group__1__Impl rule__TtlDefinition__Group__2 )
            // InternalSQLParser.g:6153:2: rule__TtlDefinition__Group__1__Impl rule__TtlDefinition__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__TtlDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TtlDefinition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TtlDefinition__Group__1"


    // $ANTLR start "rule__TtlDefinition__Group__1__Impl"
    // InternalSQLParser.g:6160:1: rule__TtlDefinition__Group__1__Impl : ( TTL ) ;
    public final void rule__TtlDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6164:1: ( ( TTL ) )
            // InternalSQLParser.g:6165:1: ( TTL )
            {
            // InternalSQLParser.g:6165:1: ( TTL )
            // InternalSQLParser.g:6166:2: TTL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTtlDefinitionAccess().getTTLKeyword_1()); 
            }
            match(input,TTL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTtlDefinitionAccess().getTTLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TtlDefinition__Group__1__Impl"


    // $ANTLR start "rule__TtlDefinition__Group__2"
    // InternalSQLParser.g:6175:1: rule__TtlDefinition__Group__2 : rule__TtlDefinition__Group__2__Impl rule__TtlDefinition__Group__3 ;
    public final void rule__TtlDefinition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6179:1: ( rule__TtlDefinition__Group__2__Impl rule__TtlDefinition__Group__3 )
            // InternalSQLParser.g:6180:2: rule__TtlDefinition__Group__2__Impl rule__TtlDefinition__Group__3
            {
            pushFollow(FOLLOW_23);
            rule__TtlDefinition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TtlDefinition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TtlDefinition__Group__2"


    // $ANTLR start "rule__TtlDefinition__Group__2__Impl"
    // InternalSQLParser.g:6187:1: rule__TtlDefinition__Group__2__Impl : ( ruleIntegerValue ) ;
    public final void rule__TtlDefinition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6191:1: ( ( ruleIntegerValue ) )
            // InternalSQLParser.g:6192:1: ( ruleIntegerValue )
            {
            // InternalSQLParser.g:6192:1: ( ruleIntegerValue )
            // InternalSQLParser.g:6193:2: ruleIntegerValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTtlDefinitionAccess().getIntegerValueParserRuleCall_2()); 
            }
            pushFollow(FOLLOW_2);
            ruleIntegerValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTtlDefinitionAccess().getIntegerValueParserRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TtlDefinition__Group__2__Impl"


    // $ANTLR start "rule__TtlDefinition__Group__3"
    // InternalSQLParser.g:6202:1: rule__TtlDefinition__Group__3 : rule__TtlDefinition__Group__3__Impl ;
    public final void rule__TtlDefinition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6206:1: ( rule__TtlDefinition__Group__3__Impl )
            // InternalSQLParser.g:6207:2: rule__TtlDefinition__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TtlDefinition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TtlDefinition__Group__3"


    // $ANTLR start "rule__TtlDefinition__Group__3__Impl"
    // InternalSQLParser.g:6213:1: rule__TtlDefinition__Group__3__Impl : ( ( rule__TtlDefinition__Alternatives_3 ) ) ;
    public final void rule__TtlDefinition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6217:1: ( ( ( rule__TtlDefinition__Alternatives_3 ) ) )
            // InternalSQLParser.g:6218:1: ( ( rule__TtlDefinition__Alternatives_3 ) )
            {
            // InternalSQLParser.g:6218:1: ( ( rule__TtlDefinition__Alternatives_3 ) )
            // InternalSQLParser.g:6219:2: ( rule__TtlDefinition__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTtlDefinitionAccess().getAlternatives_3()); 
            }
            // InternalSQLParser.g:6220:2: ( rule__TtlDefinition__Alternatives_3 )
            // InternalSQLParser.g:6220:3: rule__TtlDefinition__Alternatives_3
            {
            pushFollow(FOLLOW_2);
            rule__TtlDefinition__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTtlDefinitionAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TtlDefinition__Group__3__Impl"


    // $ANTLR start "rule__WithQuery__Group__0"
    // InternalSQLParser.g:6229:1: rule__WithQuery__Group__0 : rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 ;
    public final void rule__WithQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6233:1: ( rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 )
            // InternalSQLParser.g:6234:2: rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__WithQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0"


    // $ANTLR start "rule__WithQuery__Group__0__Impl"
    // InternalSQLParser.g:6241:1: rule__WithQuery__Group__0__Impl : ( ( rule__WithQuery__WAssignment_0 ) ) ;
    public final void rule__WithQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6245:1: ( ( ( rule__WithQuery__WAssignment_0 ) ) )
            // InternalSQLParser.g:6246:1: ( ( rule__WithQuery__WAssignment_0 ) )
            {
            // InternalSQLParser.g:6246:1: ( ( rule__WithQuery__WAssignment_0 ) )
            // InternalSQLParser.g:6247:2: ( rule__WithQuery__WAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }
            // InternalSQLParser.g:6248:2: ( rule__WithQuery__WAssignment_0 )
            // InternalSQLParser.g:6248:3: rule__WithQuery__WAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0__Impl"


    // $ANTLR start "rule__WithQuery__Group__1"
    // InternalSQLParser.g:6256:1: rule__WithQuery__Group__1 : rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 ;
    public final void rule__WithQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6260:1: ( rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 )
            // InternalSQLParser.g:6261:2: rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2
            {
            pushFollow(FOLLOW_25);
            rule__WithQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1"


    // $ANTLR start "rule__WithQuery__Group__1__Impl"
    // InternalSQLParser.g:6268:1: rule__WithQuery__Group__1__Impl : ( ( rule__WithQuery__WnameAssignment_1 ) ) ;
    public final void rule__WithQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6272:1: ( ( ( rule__WithQuery__WnameAssignment_1 ) ) )
            // InternalSQLParser.g:6273:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            {
            // InternalSQLParser.g:6273:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            // InternalSQLParser.g:6274:2: ( rule__WithQuery__WnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }
            // InternalSQLParser.g:6275:2: ( rule__WithQuery__WnameAssignment_1 )
            // InternalSQLParser.g:6275:3: rule__WithQuery__WnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1__Impl"


    // $ANTLR start "rule__WithQuery__Group__2"
    // InternalSQLParser.g:6283:1: rule__WithQuery__Group__2 : rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 ;
    public final void rule__WithQuery__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6287:1: ( rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 )
            // InternalSQLParser.g:6288:2: rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3
            {
            pushFollow(FOLLOW_25);
            rule__WithQuery__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2"


    // $ANTLR start "rule__WithQuery__Group__2__Impl"
    // InternalSQLParser.g:6295:1: rule__WithQuery__Group__2__Impl : ( ( rule__WithQuery__WithColsAssignment_2 )? ) ;
    public final void rule__WithQuery__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6299:1: ( ( ( rule__WithQuery__WithColsAssignment_2 )? ) )
            // InternalSQLParser.g:6300:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            {
            // InternalSQLParser.g:6300:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            // InternalSQLParser.g:6301:2: ( rule__WithQuery__WithColsAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }
            // InternalSQLParser.g:6302:2: ( rule__WithQuery__WithColsAssignment_2 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==LeftParenthesis) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSQLParser.g:6302:3: rule__WithQuery__WithColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__WithColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2__Impl"


    // $ANTLR start "rule__WithQuery__Group__3"
    // InternalSQLParser.g:6310:1: rule__WithQuery__Group__3 : rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 ;
    public final void rule__WithQuery__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6314:1: ( rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 )
            // InternalSQLParser.g:6315:2: rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__WithQuery__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3"


    // $ANTLR start "rule__WithQuery__Group__3__Impl"
    // InternalSQLParser.g:6322:1: rule__WithQuery__Group__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6326:1: ( ( AS ) )
            // InternalSQLParser.g:6327:1: ( AS )
            {
            // InternalSQLParser.g:6327:1: ( AS )
            // InternalSQLParser.g:6328:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3__Impl"


    // $ANTLR start "rule__WithQuery__Group__4"
    // InternalSQLParser.g:6337:1: rule__WithQuery__Group__4 : rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 ;
    public final void rule__WithQuery__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6341:1: ( rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 )
            // InternalSQLParser.g:6342:2: rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5
            {
            pushFollow(FOLLOW_26);
            rule__WithQuery__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4"


    // $ANTLR start "rule__WithQuery__Group__4__Impl"
    // InternalSQLParser.g:6349:1: rule__WithQuery__Group__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6353:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6354:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6354:1: ( LeftParenthesis )
            // InternalSQLParser.g:6355:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4__Impl"


    // $ANTLR start "rule__WithQuery__Group__5"
    // InternalSQLParser.g:6364:1: rule__WithQuery__Group__5 : rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 ;
    public final void rule__WithQuery__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6368:1: ( rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 )
            // InternalSQLParser.g:6369:2: rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6
            {
            pushFollow(FOLLOW_11);
            rule__WithQuery__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5"


    // $ANTLR start "rule__WithQuery__Group__5__Impl"
    // InternalSQLParser.g:6376:1: rule__WithQuery__Group__5__Impl : ( ( rule__WithQuery__QueryAssignment_5 ) ) ;
    public final void rule__WithQuery__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6380:1: ( ( ( rule__WithQuery__QueryAssignment_5 ) ) )
            // InternalSQLParser.g:6381:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            {
            // InternalSQLParser.g:6381:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            // InternalSQLParser.g:6382:2: ( rule__WithQuery__QueryAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }
            // InternalSQLParser.g:6383:2: ( rule__WithQuery__QueryAssignment_5 )
            // InternalSQLParser.g:6383:3: rule__WithQuery__QueryAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__QueryAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5__Impl"


    // $ANTLR start "rule__WithQuery__Group__6"
    // InternalSQLParser.g:6391:1: rule__WithQuery__Group__6 : rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 ;
    public final void rule__WithQuery__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6395:1: ( rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 )
            // InternalSQLParser.g:6396:2: rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7
            {
            pushFollow(FOLLOW_15);
            rule__WithQuery__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6"


    // $ANTLR start "rule__WithQuery__Group__6__Impl"
    // InternalSQLParser.g:6403:1: rule__WithQuery__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6407:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6408:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6408:1: ( RightParenthesis )
            // InternalSQLParser.g:6409:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6__Impl"


    // $ANTLR start "rule__WithQuery__Group__7"
    // InternalSQLParser.g:6418:1: rule__WithQuery__Group__7 : rule__WithQuery__Group__7__Impl ;
    public final void rule__WithQuery__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6422:1: ( rule__WithQuery__Group__7__Impl )
            // InternalSQLParser.g:6423:2: rule__WithQuery__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7"


    // $ANTLR start "rule__WithQuery__Group__7__Impl"
    // InternalSQLParser.g:6429:1: rule__WithQuery__Group__7__Impl : ( ( rule__WithQuery__Group_7__0 )* ) ;
    public final void rule__WithQuery__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6433:1: ( ( ( rule__WithQuery__Group_7__0 )* ) )
            // InternalSQLParser.g:6434:1: ( ( rule__WithQuery__Group_7__0 )* )
            {
            // InternalSQLParser.g:6434:1: ( ( rule__WithQuery__Group_7__0 )* )
            // InternalSQLParser.g:6435:2: ( rule__WithQuery__Group_7__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }
            // InternalSQLParser.g:6436:2: ( rule__WithQuery__Group_7__0 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==Comma) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalSQLParser.g:6436:3: rule__WithQuery__Group_7__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__WithQuery__Group_7__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__0"
    // InternalSQLParser.g:6445:1: rule__WithQuery__Group_7__0 : rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 ;
    public final void rule__WithQuery__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6449:1: ( rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 )
            // InternalSQLParser.g:6450:2: rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1
            {
            pushFollow(FOLLOW_24);
            rule__WithQuery__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0"


    // $ANTLR start "rule__WithQuery__Group_7__0__Impl"
    // InternalSQLParser.g:6457:1: rule__WithQuery__Group_7__0__Impl : ( Comma ) ;
    public final void rule__WithQuery__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6461:1: ( ( Comma ) )
            // InternalSQLParser.g:6462:1: ( Comma )
            {
            // InternalSQLParser.g:6462:1: ( Comma )
            // InternalSQLParser.g:6463:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__1"
    // InternalSQLParser.g:6472:1: rule__WithQuery__Group_7__1 : rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 ;
    public final void rule__WithQuery__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6476:1: ( rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 )
            // InternalSQLParser.g:6477:2: rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2
            {
            pushFollow(FOLLOW_25);
            rule__WithQuery__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1"


    // $ANTLR start "rule__WithQuery__Group_7__1__Impl"
    // InternalSQLParser.g:6484:1: rule__WithQuery__Group_7__1__Impl : ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) ;
    public final void rule__WithQuery__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6488:1: ( ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) )
            // InternalSQLParser.g:6489:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            {
            // InternalSQLParser.g:6489:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            // InternalSQLParser.g:6490:2: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }
            // InternalSQLParser.g:6491:2: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            // InternalSQLParser.g:6491:3: rule__WithQuery__AdditionalWnameAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalWnameAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__2"
    // InternalSQLParser.g:6499:1: rule__WithQuery__Group_7__2 : rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 ;
    public final void rule__WithQuery__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6503:1: ( rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 )
            // InternalSQLParser.g:6504:2: rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3
            {
            pushFollow(FOLLOW_25);
            rule__WithQuery__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2"


    // $ANTLR start "rule__WithQuery__Group_7__2__Impl"
    // InternalSQLParser.g:6511:1: rule__WithQuery__Group_7__2__Impl : ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) ;
    public final void rule__WithQuery__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6515:1: ( ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) )
            // InternalSQLParser.g:6516:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            {
            // InternalSQLParser.g:6516:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            // InternalSQLParser.g:6517:2: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }
            // InternalSQLParser.g:6518:2: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==LeftParenthesis) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSQLParser.g:6518:3: rule__WithQuery__AdditionalWithColsAssignment_7_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__AdditionalWithColsAssignment_7_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__3"
    // InternalSQLParser.g:6526:1: rule__WithQuery__Group_7__3 : rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 ;
    public final void rule__WithQuery__Group_7__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6530:1: ( rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 )
            // InternalSQLParser.g:6531:2: rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4
            {
            pushFollow(FOLLOW_9);
            rule__WithQuery__Group_7__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3"


    // $ANTLR start "rule__WithQuery__Group_7__3__Impl"
    // InternalSQLParser.g:6538:1: rule__WithQuery__Group_7__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group_7__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6542:1: ( ( AS ) )
            // InternalSQLParser.g:6543:1: ( AS )
            {
            // InternalSQLParser.g:6543:1: ( AS )
            // InternalSQLParser.g:6544:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__4"
    // InternalSQLParser.g:6553:1: rule__WithQuery__Group_7__4 : rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 ;
    public final void rule__WithQuery__Group_7__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6557:1: ( rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 )
            // InternalSQLParser.g:6558:2: rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5
            {
            pushFollow(FOLLOW_26);
            rule__WithQuery__Group_7__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4"


    // $ANTLR start "rule__WithQuery__Group_7__4__Impl"
    // InternalSQLParser.g:6565:1: rule__WithQuery__Group_7__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group_7__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6569:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6570:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6570:1: ( LeftParenthesis )
            // InternalSQLParser.g:6571:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__5"
    // InternalSQLParser.g:6580:1: rule__WithQuery__Group_7__5 : rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 ;
    public final void rule__WithQuery__Group_7__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6584:1: ( rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 )
            // InternalSQLParser.g:6585:2: rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6
            {
            pushFollow(FOLLOW_11);
            rule__WithQuery__Group_7__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5"


    // $ANTLR start "rule__WithQuery__Group_7__5__Impl"
    // InternalSQLParser.g:6592:1: rule__WithQuery__Group_7__5__Impl : ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) ;
    public final void rule__WithQuery__Group_7__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6596:1: ( ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) )
            // InternalSQLParser.g:6597:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            {
            // InternalSQLParser.g:6597:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            // InternalSQLParser.g:6598:2: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }
            // InternalSQLParser.g:6599:2: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            // InternalSQLParser.g:6599:3: rule__WithQuery__AdditionalQueriesAssignment_7_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalQueriesAssignment_7_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__6"
    // InternalSQLParser.g:6607:1: rule__WithQuery__Group_7__6 : rule__WithQuery__Group_7__6__Impl ;
    public final void rule__WithQuery__Group_7__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6611:1: ( rule__WithQuery__Group_7__6__Impl )
            // InternalSQLParser.g:6612:2: rule__WithQuery__Group_7__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6"


    // $ANTLR start "rule__WithQuery__Group_7__6__Impl"
    // InternalSQLParser.g:6618:1: rule__WithQuery__Group_7__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group_7__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6622:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6623:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6623:1: ( RightParenthesis )
            // InternalSQLParser.g:6624:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6__Impl"


    // $ANTLR start "rule__WithColumns__Group__0"
    // InternalSQLParser.g:6634:1: rule__WithColumns__Group__0 : rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 ;
    public final void rule__WithColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6638:1: ( rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 )
            // InternalSQLParser.g:6639:2: rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__WithColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0"


    // $ANTLR start "rule__WithColumns__Group__0__Impl"
    // InternalSQLParser.g:6646:1: rule__WithColumns__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__WithColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6650:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6651:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6651:1: ( LeftParenthesis )
            // InternalSQLParser.g:6652:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0__Impl"


    // $ANTLR start "rule__WithColumns__Group__1"
    // InternalSQLParser.g:6661:1: rule__WithColumns__Group__1 : rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 ;
    public final void rule__WithColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6665:1: ( rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 )
            // InternalSQLParser.g:6666:2: rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__WithColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1"


    // $ANTLR start "rule__WithColumns__Group__1__Impl"
    // InternalSQLParser.g:6673:1: rule__WithColumns__Group__1__Impl : ( ruleUsingCols ) ;
    public final void rule__WithColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6677:1: ( ( ruleUsingCols ) )
            // InternalSQLParser.g:6678:1: ( ruleUsingCols )
            {
            // InternalSQLParser.g:6678:1: ( ruleUsingCols )
            // InternalSQLParser.g:6679:2: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1__Impl"


    // $ANTLR start "rule__WithColumns__Group__2"
    // InternalSQLParser.g:6688:1: rule__WithColumns__Group__2 : rule__WithColumns__Group__2__Impl ;
    public final void rule__WithColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6692:1: ( rule__WithColumns__Group__2__Impl )
            // InternalSQLParser.g:6693:2: rule__WithColumns__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2"


    // $ANTLR start "rule__WithColumns__Group__2__Impl"
    // InternalSQLParser.g:6699:1: rule__WithColumns__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__WithColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6703:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6704:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6704:1: ( RightParenthesis )
            // InternalSQLParser.g:6705:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2__Impl"


    // $ANTLR start "rule__FetchFirst__Group__0"
    // InternalSQLParser.g:6715:1: rule__FetchFirst__Group__0 : rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 ;
    public final void rule__FetchFirst__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6719:1: ( rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 )
            // InternalSQLParser.g:6720:2: rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__FetchFirst__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0"


    // $ANTLR start "rule__FetchFirst__Group__0__Impl"
    // InternalSQLParser.g:6727:1: rule__FetchFirst__Group__0__Impl : ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) ;
    public final void rule__FetchFirst__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6731:1: ( ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) )
            // InternalSQLParser.g:6732:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            {
            // InternalSQLParser.g:6732:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            // InternalSQLParser.g:6733:2: ( rule__FetchFirst__FetchFirstAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }
            // InternalSQLParser.g:6734:2: ( rule__FetchFirst__FetchFirstAssignment_0 )
            // InternalSQLParser.g:6734:3: rule__FetchFirst__FetchFirstAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__FetchFirstAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0__Impl"


    // $ANTLR start "rule__FetchFirst__Group__1"
    // InternalSQLParser.g:6742:1: rule__FetchFirst__Group__1 : rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 ;
    public final void rule__FetchFirst__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6746:1: ( rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 )
            // InternalSQLParser.g:6747:2: rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2
            {
            pushFollow(FOLLOW_28);
            rule__FetchFirst__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1"


    // $ANTLR start "rule__FetchFirst__Group__1__Impl"
    // InternalSQLParser.g:6754:1: rule__FetchFirst__Group__1__Impl : ( ( rule__FetchFirst__RowAssignment_1 ) ) ;
    public final void rule__FetchFirst__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6758:1: ( ( ( rule__FetchFirst__RowAssignment_1 ) ) )
            // InternalSQLParser.g:6759:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            {
            // InternalSQLParser.g:6759:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            // InternalSQLParser.g:6760:2: ( rule__FetchFirst__RowAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }
            // InternalSQLParser.g:6761:2: ( rule__FetchFirst__RowAssignment_1 )
            // InternalSQLParser.g:6761:3: rule__FetchFirst__RowAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1__Impl"


    // $ANTLR start "rule__FetchFirst__Group__2"
    // InternalSQLParser.g:6769:1: rule__FetchFirst__Group__2 : rule__FetchFirst__Group__2__Impl ;
    public final void rule__FetchFirst__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6773:1: ( rule__FetchFirst__Group__2__Impl )
            // InternalSQLParser.g:6774:2: rule__FetchFirst__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2"


    // $ANTLR start "rule__FetchFirst__Group__2__Impl"
    // InternalSQLParser.g:6780:1: rule__FetchFirst__Group__2__Impl : ( ONLY ) ;
    public final void rule__FetchFirst__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6784:1: ( ( ONLY ) )
            // InternalSQLParser.g:6785:1: ( ONLY )
            {
            // InternalSQLParser.g:6785:1: ( ONLY )
            // InternalSQLParser.g:6786:2: ONLY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }
            match(input,ONLY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2__Impl"


    // $ANTLR start "rule__Limit__Group_0__0"
    // InternalSQLParser.g:6796:1: rule__Limit__Group_0__0 : rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 ;
    public final void rule__Limit__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6800:1: ( rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 )
            // InternalSQLParser.g:6801:2: rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1
            {
            pushFollow(FOLLOW_29);
            rule__Limit__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0"


    // $ANTLR start "rule__Limit__Group_0__0__Impl"
    // InternalSQLParser.g:6808:1: rule__Limit__Group_0__0__Impl : ( () ) ;
    public final void rule__Limit__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6812:1: ( ( () ) )
            // InternalSQLParser.g:6813:1: ( () )
            {
            // InternalSQLParser.g:6813:1: ( () )
            // InternalSQLParser.g:6814:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }
            // InternalSQLParser.g:6815:2: ()
            // InternalSQLParser.g:6815:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0__Impl"


    // $ANTLR start "rule__Limit__Group_0__1"
    // InternalSQLParser.g:6823:1: rule__Limit__Group_0__1 : rule__Limit__Group_0__1__Impl ;
    public final void rule__Limit__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6827:1: ( rule__Limit__Group_0__1__Impl )
            // InternalSQLParser.g:6828:2: rule__Limit__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1"


    // $ANTLR start "rule__Limit__Group_0__1__Impl"
    // InternalSQLParser.g:6834:1: rule__Limit__Group_0__1__Impl : ( ALL ) ;
    public final void rule__Limit__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6838:1: ( ( ALL ) )
            // InternalSQLParser.g:6839:1: ( ALL )
            {
            // InternalSQLParser.g:6839:1: ( ALL )
            // InternalSQLParser.g:6840:2: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1__Impl"


    // $ANTLR start "rule__Limit__Group_1__0"
    // InternalSQLParser.g:6850:1: rule__Limit__Group_1__0 : rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 ;
    public final void rule__Limit__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6854:1: ( rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 )
            // InternalSQLParser.g:6855:2: rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__Limit__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0"


    // $ANTLR start "rule__Limit__Group_1__0__Impl"
    // InternalSQLParser.g:6862:1: rule__Limit__Group_1__0__Impl : ( ( rule__Limit__L1Assignment_1_0 ) ) ;
    public final void rule__Limit__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6866:1: ( ( ( rule__Limit__L1Assignment_1_0 ) ) )
            // InternalSQLParser.g:6867:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            {
            // InternalSQLParser.g:6867:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            // InternalSQLParser.g:6868:2: ( rule__Limit__L1Assignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }
            // InternalSQLParser.g:6869:2: ( rule__Limit__L1Assignment_1_0 )
            // InternalSQLParser.g:6869:3: rule__Limit__L1Assignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L1Assignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1__1"
    // InternalSQLParser.g:6877:1: rule__Limit__Group_1__1 : rule__Limit__Group_1__1__Impl ;
    public final void rule__Limit__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6881:1: ( rule__Limit__Group_1__1__Impl )
            // InternalSQLParser.g:6882:2: rule__Limit__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1"


    // $ANTLR start "rule__Limit__Group_1__1__Impl"
    // InternalSQLParser.g:6888:1: rule__Limit__Group_1__1__Impl : ( ( rule__Limit__Group_1_1__0 )? ) ;
    public final void rule__Limit__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6892:1: ( ( ( rule__Limit__Group_1_1__0 )? ) )
            // InternalSQLParser.g:6893:1: ( ( rule__Limit__Group_1_1__0 )? )
            {
            // InternalSQLParser.g:6893:1: ( ( rule__Limit__Group_1_1__0 )? )
            // InternalSQLParser.g:6894:2: ( rule__Limit__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:6895:2: ( rule__Limit__Group_1_1__0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==Comma) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSQLParser.g:6895:3: rule__Limit__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__0"
    // InternalSQLParser.g:6904:1: rule__Limit__Group_1_1__0 : rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 ;
    public final void rule__Limit__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6908:1: ( rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 )
            // InternalSQLParser.g:6909:2: rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1
            {
            pushFollow(FOLLOW_30);
            rule__Limit__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0"


    // $ANTLR start "rule__Limit__Group_1_1__0__Impl"
    // InternalSQLParser.g:6916:1: rule__Limit__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Limit__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6920:1: ( ( Comma ) )
            // InternalSQLParser.g:6921:1: ( Comma )
            {
            // InternalSQLParser.g:6921:1: ( Comma )
            // InternalSQLParser.g:6922:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__1"
    // InternalSQLParser.g:6931:1: rule__Limit__Group_1_1__1 : rule__Limit__Group_1_1__1__Impl ;
    public final void rule__Limit__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6935:1: ( rule__Limit__Group_1_1__1__Impl )
            // InternalSQLParser.g:6936:2: rule__Limit__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1"


    // $ANTLR start "rule__Limit__Group_1_1__1__Impl"
    // InternalSQLParser.g:6942:1: rule__Limit__Group_1_1__1__Impl : ( ( rule__Limit__L2Assignment_1_1_1 ) ) ;
    public final void rule__Limit__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6946:1: ( ( ( rule__Limit__L2Assignment_1_1_1 ) ) )
            // InternalSQLParser.g:6947:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            {
            // InternalSQLParser.g:6947:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            // InternalSQLParser.g:6948:2: ( rule__Limit__L2Assignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }
            // InternalSQLParser.g:6949:2: ( rule__Limit__L2Assignment_1_1_1 )
            // InternalSQLParser.g:6949:3: rule__Limit__L2Assignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L2Assignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1__Impl"


    // $ANTLR start "rule__SelectQuery__Group__0"
    // InternalSQLParser.g:6958:1: rule__SelectQuery__Group__0 : rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 ;
    public final void rule__SelectQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6962:1: ( rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 )
            // InternalSQLParser.g:6963:2: rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__SelectQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0"


    // $ANTLR start "rule__SelectQuery__Group__0__Impl"
    // InternalSQLParser.g:6970:1: rule__SelectQuery__Group__0__Impl : ( ruleSelect ) ;
    public final void rule__SelectQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6974:1: ( ( ruleSelect ) )
            // InternalSQLParser.g:6975:1: ( ruleSelect )
            {
            // InternalSQLParser.g:6975:1: ( ruleSelect )
            // InternalSQLParser.g:6976:2: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0__Impl"


    // $ANTLR start "rule__SelectQuery__Group__1"
    // InternalSQLParser.g:6985:1: rule__SelectQuery__Group__1 : rule__SelectQuery__Group__1__Impl ;
    public final void rule__SelectQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6989:1: ( rule__SelectQuery__Group__1__Impl )
            // InternalSQLParser.g:6990:2: rule__SelectQuery__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1"


    // $ANTLR start "rule__SelectQuery__Group__1__Impl"
    // InternalSQLParser.g:6996:1: rule__SelectQuery__Group__1__Impl : ( ( rule__SelectQuery__OpAssignment_1 )* ) ;
    public final void rule__SelectQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7000:1: ( ( ( rule__SelectQuery__OpAssignment_1 )* ) )
            // InternalSQLParser.g:7001:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            {
            // InternalSQLParser.g:7001:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            // InternalSQLParser.g:7002:2: ( rule__SelectQuery__OpAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:7003:2: ( rule__SelectQuery__OpAssignment_1 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==INTERSECT||LA74_0==EXCEPT||LA74_0==MINUS||LA74_0==UNION) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSQLParser.g:7003:3: rule__SelectQuery__OpAssignment_1
            	    {
            	    pushFollow(FOLLOW_32);
            	    rule__SelectQuery__OpAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__0"
    // InternalSQLParser.g:7012:1: rule__SelectSubSet__Group__0 : rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 ;
    public final void rule__SelectSubSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7016:1: ( rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 )
            // InternalSQLParser.g:7017:2: rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__SelectSubSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0"


    // $ANTLR start "rule__SelectSubSet__Group__0__Impl"
    // InternalSQLParser.g:7024:1: rule__SelectSubSet__Group__0__Impl : ( ( rule__SelectSubSet__OpAssignment_0 ) ) ;
    public final void rule__SelectSubSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7028:1: ( ( ( rule__SelectSubSet__OpAssignment_0 ) ) )
            // InternalSQLParser.g:7029:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            {
            // InternalSQLParser.g:7029:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            // InternalSQLParser.g:7030:2: ( rule__SelectSubSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }
            // InternalSQLParser.g:7031:2: ( rule__SelectSubSet__OpAssignment_0 )
            // InternalSQLParser.g:7031:3: rule__SelectSubSet__OpAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__1"
    // InternalSQLParser.g:7039:1: rule__SelectSubSet__Group__1 : rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 ;
    public final void rule__SelectSubSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7043:1: ( rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 )
            // InternalSQLParser.g:7044:2: rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__SelectSubSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1"


    // $ANTLR start "rule__SelectSubSet__Group__1__Impl"
    // InternalSQLParser.g:7051:1: rule__SelectSubSet__Group__1__Impl : ( ( rule__SelectSubSet__AllAssignment_1 )? ) ;
    public final void rule__SelectSubSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7055:1: ( ( ( rule__SelectSubSet__AllAssignment_1 )? ) )
            // InternalSQLParser.g:7056:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            {
            // InternalSQLParser.g:7056:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            // InternalSQLParser.g:7057:2: ( rule__SelectSubSet__AllAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }
            // InternalSQLParser.g:7058:2: ( rule__SelectSubSet__AllAssignment_1 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==ALL) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSQLParser.g:7058:3: rule__SelectSubSet__AllAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SelectSubSet__AllAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__2"
    // InternalSQLParser.g:7066:1: rule__SelectSubSet__Group__2 : rule__SelectSubSet__Group__2__Impl ;
    public final void rule__SelectSubSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7070:1: ( rule__SelectSubSet__Group__2__Impl )
            // InternalSQLParser.g:7071:2: rule__SelectSubSet__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2"


    // $ANTLR start "rule__SelectSubSet__Group__2__Impl"
    // InternalSQLParser.g:7077:1: rule__SelectSubSet__Group__2__Impl : ( ( rule__SelectSubSet__QueryAssignment_2 ) ) ;
    public final void rule__SelectSubSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7081:1: ( ( ( rule__SelectSubSet__QueryAssignment_2 ) ) )
            // InternalSQLParser.g:7082:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            {
            // InternalSQLParser.g:7082:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            // InternalSQLParser.g:7083:2: ( rule__SelectSubSet__QueryAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }
            // InternalSQLParser.g:7084:2: ( rule__SelectSubSet__QueryAssignment_2 )
            // InternalSQLParser.g:7084:3: rule__SelectSubSet__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__QueryAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__0"
    // InternalSQLParser.g:7093:1: rule__Select__Group__0 : rule__Select__Group__0__Impl rule__Select__Group__1 ;
    public final void rule__Select__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7097:1: ( rule__Select__Group__0__Impl rule__Select__Group__1 )
            // InternalSQLParser.g:7098:2: rule__Select__Group__0__Impl rule__Select__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__Select__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0"


    // $ANTLR start "rule__Select__Group__0__Impl"
    // InternalSQLParser.g:7105:1: rule__Select__Group__0__Impl : ( ( rule__Select__SelectAssignment_0 ) ) ;
    public final void rule__Select__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7109:1: ( ( ( rule__Select__SelectAssignment_0 ) ) )
            // InternalSQLParser.g:7110:1: ( ( rule__Select__SelectAssignment_0 ) )
            {
            // InternalSQLParser.g:7110:1: ( ( rule__Select__SelectAssignment_0 ) )
            // InternalSQLParser.g:7111:2: ( rule__Select__SelectAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }
            // InternalSQLParser.g:7112:2: ( rule__Select__SelectAssignment_0 )
            // InternalSQLParser.g:7112:3: rule__Select__SelectAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Select__SelectAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0__Impl"


    // $ANTLR start "rule__Select__Group__1"
    // InternalSQLParser.g:7120:1: rule__Select__Group__1 : rule__Select__Group__1__Impl rule__Select__Group__2 ;
    public final void rule__Select__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7124:1: ( rule__Select__Group__1__Impl rule__Select__Group__2 )
            // InternalSQLParser.g:7125:2: rule__Select__Group__1__Impl rule__Select__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__Select__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1"


    // $ANTLR start "rule__Select__Group__1__Impl"
    // InternalSQLParser.g:7132:1: rule__Select__Group__1__Impl : ( ( DISTINCT )? ) ;
    public final void rule__Select__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7136:1: ( ( ( DISTINCT )? ) )
            // InternalSQLParser.g:7137:1: ( ( DISTINCT )? )
            {
            // InternalSQLParser.g:7137:1: ( ( DISTINCT )? )
            // InternalSQLParser.g:7138:2: ( DISTINCT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }
            // InternalSQLParser.g:7139:2: ( DISTINCT )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==DISTINCT) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSQLParser.g:7139:3: DISTINCT
                    {
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1__Impl"


    // $ANTLR start "rule__Select__Group__2"
    // InternalSQLParser.g:7147:1: rule__Select__Group__2 : rule__Select__Group__2__Impl rule__Select__Group__3 ;
    public final void rule__Select__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7151:1: ( rule__Select__Group__2__Impl rule__Select__Group__3 )
            // InternalSQLParser.g:7152:2: rule__Select__Group__2__Impl rule__Select__Group__3
            {
            pushFollow(FOLLOW_34);
            rule__Select__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2"


    // $ANTLR start "rule__Select__Group__2__Impl"
    // InternalSQLParser.g:7159:1: rule__Select__Group__2__Impl : ( ( rule__Select__Group_2__0 )? ) ;
    public final void rule__Select__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7163:1: ( ( ( rule__Select__Group_2__0 )? ) )
            // InternalSQLParser.g:7164:1: ( ( rule__Select__Group_2__0 )? )
            {
            // InternalSQLParser.g:7164:1: ( ( rule__Select__Group_2__0 )? )
            // InternalSQLParser.g:7165:2: ( rule__Select__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:7166:2: ( rule__Select__Group_2__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==TOP) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSQLParser.g:7166:3: rule__Select__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__3"
    // InternalSQLParser.g:7174:1: rule__Select__Group__3 : rule__Select__Group__3__Impl rule__Select__Group__4 ;
    public final void rule__Select__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7178:1: ( rule__Select__Group__3__Impl rule__Select__Group__4 )
            // InternalSQLParser.g:7179:2: rule__Select__Group__3__Impl rule__Select__Group__4
            {
            pushFollow(FOLLOW_35);
            rule__Select__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3"


    // $ANTLR start "rule__Select__Group__3__Impl"
    // InternalSQLParser.g:7186:1: rule__Select__Group__3__Impl : ( ( rule__Select__ColsAssignment_3 ) ) ;
    public final void rule__Select__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7190:1: ( ( ( rule__Select__ColsAssignment_3 ) ) )
            // InternalSQLParser.g:7191:1: ( ( rule__Select__ColsAssignment_3 ) )
            {
            // InternalSQLParser.g:7191:1: ( ( rule__Select__ColsAssignment_3 ) )
            // InternalSQLParser.g:7192:2: ( rule__Select__ColsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }
            // InternalSQLParser.g:7193:2: ( rule__Select__ColsAssignment_3 )
            // InternalSQLParser.g:7193:3: rule__Select__ColsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Select__ColsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3__Impl"


    // $ANTLR start "rule__Select__Group__4"
    // InternalSQLParser.g:7201:1: rule__Select__Group__4 : rule__Select__Group__4__Impl rule__Select__Group__5 ;
    public final void rule__Select__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7205:1: ( rule__Select__Group__4__Impl rule__Select__Group__5 )
            // InternalSQLParser.g:7206:2: rule__Select__Group__4__Impl rule__Select__Group__5
            {
            pushFollow(FOLLOW_5);
            rule__Select__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4"


    // $ANTLR start "rule__Select__Group__4__Impl"
    // InternalSQLParser.g:7213:1: rule__Select__Group__4__Impl : ( FROM ) ;
    public final void rule__Select__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7217:1: ( ( FROM ) )
            // InternalSQLParser.g:7218:1: ( FROM )
            {
            // InternalSQLParser.g:7218:1: ( FROM )
            // InternalSQLParser.g:7219:2: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4__Impl"


    // $ANTLR start "rule__Select__Group__5"
    // InternalSQLParser.g:7228:1: rule__Select__Group__5 : rule__Select__Group__5__Impl rule__Select__Group__6 ;
    public final void rule__Select__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7232:1: ( rule__Select__Group__5__Impl rule__Select__Group__6 )
            // InternalSQLParser.g:7233:2: rule__Select__Group__5__Impl rule__Select__Group__6
            {
            pushFollow(FOLLOW_36);
            rule__Select__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5"


    // $ANTLR start "rule__Select__Group__5__Impl"
    // InternalSQLParser.g:7240:1: rule__Select__Group__5__Impl : ( ( rule__Select__TblAssignment_5 ) ) ;
    public final void rule__Select__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7244:1: ( ( ( rule__Select__TblAssignment_5 ) ) )
            // InternalSQLParser.g:7245:1: ( ( rule__Select__TblAssignment_5 ) )
            {
            // InternalSQLParser.g:7245:1: ( ( rule__Select__TblAssignment_5 ) )
            // InternalSQLParser.g:7246:2: ( rule__Select__TblAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }
            // InternalSQLParser.g:7247:2: ( rule__Select__TblAssignment_5 )
            // InternalSQLParser.g:7247:3: rule__Select__TblAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Select__TblAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5__Impl"


    // $ANTLR start "rule__Select__Group__6"
    // InternalSQLParser.g:7255:1: rule__Select__Group__6 : rule__Select__Group__6__Impl rule__Select__Group__7 ;
    public final void rule__Select__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7259:1: ( rule__Select__Group__6__Impl rule__Select__Group__7 )
            // InternalSQLParser.g:7260:2: rule__Select__Group__6__Impl rule__Select__Group__7
            {
            pushFollow(FOLLOW_36);
            rule__Select__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6"


    // $ANTLR start "rule__Select__Group__6__Impl"
    // InternalSQLParser.g:7267:1: rule__Select__Group__6__Impl : ( ( rule__Select__Group_6__0 )? ) ;
    public final void rule__Select__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7271:1: ( ( ( rule__Select__Group_6__0 )? ) )
            // InternalSQLParser.g:7272:1: ( ( rule__Select__Group_6__0 )? )
            {
            // InternalSQLParser.g:7272:1: ( ( rule__Select__Group_6__0 )? )
            // InternalSQLParser.g:7273:2: ( rule__Select__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_6()); 
            }
            // InternalSQLParser.g:7274:2: ( rule__Select__Group_6__0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==WHERE) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSQLParser.g:7274:3: rule__Select__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6__Impl"


    // $ANTLR start "rule__Select__Group__7"
    // InternalSQLParser.g:7282:1: rule__Select__Group__7 : rule__Select__Group__7__Impl rule__Select__Group__8 ;
    public final void rule__Select__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7286:1: ( rule__Select__Group__7__Impl rule__Select__Group__8 )
            // InternalSQLParser.g:7287:2: rule__Select__Group__7__Impl rule__Select__Group__8
            {
            pushFollow(FOLLOW_36);
            rule__Select__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7"


    // $ANTLR start "rule__Select__Group__7__Impl"
    // InternalSQLParser.g:7294:1: rule__Select__Group__7__Impl : ( ( rule__Select__Group_7__0 )? ) ;
    public final void rule__Select__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7298:1: ( ( ( rule__Select__Group_7__0 )? ) )
            // InternalSQLParser.g:7299:1: ( ( rule__Select__Group_7__0 )? )
            {
            // InternalSQLParser.g:7299:1: ( ( rule__Select__Group_7__0 )? )
            // InternalSQLParser.g:7300:2: ( rule__Select__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_7()); 
            }
            // InternalSQLParser.g:7301:2: ( rule__Select__Group_7__0 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==GROUP) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSQLParser.g:7301:3: rule__Select__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7__Impl"


    // $ANTLR start "rule__Select__Group__8"
    // InternalSQLParser.g:7309:1: rule__Select__Group__8 : rule__Select__Group__8__Impl rule__Select__Group__9 ;
    public final void rule__Select__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7313:1: ( rule__Select__Group__8__Impl rule__Select__Group__9 )
            // InternalSQLParser.g:7314:2: rule__Select__Group__8__Impl rule__Select__Group__9
            {
            pushFollow(FOLLOW_36);
            rule__Select__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8"


    // $ANTLR start "rule__Select__Group__8__Impl"
    // InternalSQLParser.g:7321:1: rule__Select__Group__8__Impl : ( ( rule__Select__Group_8__0 )? ) ;
    public final void rule__Select__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7325:1: ( ( ( rule__Select__Group_8__0 )? ) )
            // InternalSQLParser.g:7326:1: ( ( rule__Select__Group_8__0 )? )
            {
            // InternalSQLParser.g:7326:1: ( ( rule__Select__Group_8__0 )? )
            // InternalSQLParser.g:7327:2: ( rule__Select__Group_8__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_8()); 
            }
            // InternalSQLParser.g:7328:2: ( rule__Select__Group_8__0 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==HAVING) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSQLParser.g:7328:3: rule__Select__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8__Impl"


    // $ANTLR start "rule__Select__Group__9"
    // InternalSQLParser.g:7336:1: rule__Select__Group__9 : rule__Select__Group__9__Impl rule__Select__Group__10 ;
    public final void rule__Select__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7340:1: ( rule__Select__Group__9__Impl rule__Select__Group__10 )
            // InternalSQLParser.g:7341:2: rule__Select__Group__9__Impl rule__Select__Group__10
            {
            pushFollow(FOLLOW_36);
            rule__Select__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9"


    // $ANTLR start "rule__Select__Group__9__Impl"
    // InternalSQLParser.g:7348:1: rule__Select__Group__9__Impl : ( ( rule__Select__Group_9__0 )? ) ;
    public final void rule__Select__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7352:1: ( ( ( rule__Select__Group_9__0 )? ) )
            // InternalSQLParser.g:7353:1: ( ( rule__Select__Group_9__0 )? )
            {
            // InternalSQLParser.g:7353:1: ( ( rule__Select__Group_9__0 )? )
            // InternalSQLParser.g:7354:2: ( rule__Select__Group_9__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_9()); 
            }
            // InternalSQLParser.g:7355:2: ( rule__Select__Group_9__0 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==ORDER) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSQLParser.g:7355:3: rule__Select__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9__Impl"


    // $ANTLR start "rule__Select__Group__10"
    // InternalSQLParser.g:7363:1: rule__Select__Group__10 : rule__Select__Group__10__Impl rule__Select__Group__11 ;
    public final void rule__Select__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7367:1: ( rule__Select__Group__10__Impl rule__Select__Group__11 )
            // InternalSQLParser.g:7368:2: rule__Select__Group__10__Impl rule__Select__Group__11
            {
            pushFollow(FOLLOW_36);
            rule__Select__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10"


    // $ANTLR start "rule__Select__Group__10__Impl"
    // InternalSQLParser.g:7375:1: rule__Select__Group__10__Impl : ( ( rule__Select__Group_10__0 )? ) ;
    public final void rule__Select__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7379:1: ( ( ( rule__Select__Group_10__0 )? ) )
            // InternalSQLParser.g:7380:1: ( ( rule__Select__Group_10__0 )? )
            {
            // InternalSQLParser.g:7380:1: ( ( rule__Select__Group_10__0 )? )
            // InternalSQLParser.g:7381:2: ( rule__Select__Group_10__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_10()); 
            }
            // InternalSQLParser.g:7382:2: ( rule__Select__Group_10__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==LIMIT) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSQLParser.g:7382:3: rule__Select__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_10__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10__Impl"


    // $ANTLR start "rule__Select__Group__11"
    // InternalSQLParser.g:7390:1: rule__Select__Group__11 : rule__Select__Group__11__Impl rule__Select__Group__12 ;
    public final void rule__Select__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7394:1: ( rule__Select__Group__11__Impl rule__Select__Group__12 )
            // InternalSQLParser.g:7395:2: rule__Select__Group__11__Impl rule__Select__Group__12
            {
            pushFollow(FOLLOW_36);
            rule__Select__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__12();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11"


    // $ANTLR start "rule__Select__Group__11__Impl"
    // InternalSQLParser.g:7402:1: rule__Select__Group__11__Impl : ( ( rule__Select__Group_11__0 )? ) ;
    public final void rule__Select__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7406:1: ( ( ( rule__Select__Group_11__0 )? ) )
            // InternalSQLParser.g:7407:1: ( ( rule__Select__Group_11__0 )? )
            {
            // InternalSQLParser.g:7407:1: ( ( rule__Select__Group_11__0 )? )
            // InternalSQLParser.g:7408:2: ( rule__Select__Group_11__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_11()); 
            }
            // InternalSQLParser.g:7409:2: ( rule__Select__Group_11__0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==OFFSET) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSQLParser.g:7409:3: rule__Select__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11__Impl"


    // $ANTLR start "rule__Select__Group__12"
    // InternalSQLParser.g:7417:1: rule__Select__Group__12 : rule__Select__Group__12__Impl ;
    public final void rule__Select__Group__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7421:1: ( rule__Select__Group__12__Impl )
            // InternalSQLParser.g:7422:2: rule__Select__Group__12__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__12__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12"


    // $ANTLR start "rule__Select__Group__12__Impl"
    // InternalSQLParser.g:7428:1: rule__Select__Group__12__Impl : ( ( rule__Select__Group_12__0 )? ) ;
    public final void rule__Select__Group__12__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7432:1: ( ( ( rule__Select__Group_12__0 )? ) )
            // InternalSQLParser.g:7433:1: ( ( rule__Select__Group_12__0 )? )
            {
            // InternalSQLParser.g:7433:1: ( ( rule__Select__Group_12__0 )? )
            // InternalSQLParser.g:7434:2: ( rule__Select__Group_12__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_12()); 
            }
            // InternalSQLParser.g:7435:2: ( rule__Select__Group_12__0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==FETCH) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSQLParser.g:7435:3: rule__Select__Group_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_12__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_12()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12__Impl"


    // $ANTLR start "rule__Select__Group_2__0"
    // InternalSQLParser.g:7444:1: rule__Select__Group_2__0 : rule__Select__Group_2__0__Impl rule__Select__Group_2__1 ;
    public final void rule__Select__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7448:1: ( rule__Select__Group_2__0__Impl rule__Select__Group_2__1 )
            // InternalSQLParser.g:7449:2: rule__Select__Group_2__0__Impl rule__Select__Group_2__1
            {
            pushFollow(FOLLOW_37);
            rule__Select__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0"


    // $ANTLR start "rule__Select__Group_2__0__Impl"
    // InternalSQLParser.g:7456:1: rule__Select__Group_2__0__Impl : ( TOP ) ;
    public final void rule__Select__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7460:1: ( ( TOP ) )
            // InternalSQLParser.g:7461:1: ( TOP )
            {
            // InternalSQLParser.g:7461:1: ( TOP )
            // InternalSQLParser.g:7462:2: TOP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }
            match(input,TOP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0__Impl"


    // $ANTLR start "rule__Select__Group_2__1"
    // InternalSQLParser.g:7471:1: rule__Select__Group_2__1 : rule__Select__Group_2__1__Impl rule__Select__Group_2__2 ;
    public final void rule__Select__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7475:1: ( rule__Select__Group_2__1__Impl rule__Select__Group_2__2 )
            // InternalSQLParser.g:7476:2: rule__Select__Group_2__1__Impl rule__Select__Group_2__2
            {
            pushFollow(FOLLOW_38);
            rule__Select__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1"


    // $ANTLR start "rule__Select__Group_2__1__Impl"
    // InternalSQLParser.g:7483:1: rule__Select__Group_2__1__Impl : ( ( rule__Select__Alternatives_2_1 ) ) ;
    public final void rule__Select__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7487:1: ( ( ( rule__Select__Alternatives_2_1 ) ) )
            // InternalSQLParser.g:7488:1: ( ( rule__Select__Alternatives_2_1 ) )
            {
            // InternalSQLParser.g:7488:1: ( ( rule__Select__Alternatives_2_1 ) )
            // InternalSQLParser.g:7489:2: ( rule__Select__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }
            // InternalSQLParser.g:7490:2: ( rule__Select__Alternatives_2_1 )
            // InternalSQLParser.g:7490:3: rule__Select__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1__Impl"


    // $ANTLR start "rule__Select__Group_2__2"
    // InternalSQLParser.g:7498:1: rule__Select__Group_2__2 : rule__Select__Group_2__2__Impl rule__Select__Group_2__3 ;
    public final void rule__Select__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7502:1: ( rule__Select__Group_2__2__Impl rule__Select__Group_2__3 )
            // InternalSQLParser.g:7503:2: rule__Select__Group_2__2__Impl rule__Select__Group_2__3
            {
            pushFollow(FOLLOW_38);
            rule__Select__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2"


    // $ANTLR start "rule__Select__Group_2__2__Impl"
    // InternalSQLParser.g:7510:1: rule__Select__Group_2__2__Impl : ( ( PERCENT )? ) ;
    public final void rule__Select__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7514:1: ( ( ( PERCENT )? ) )
            // InternalSQLParser.g:7515:1: ( ( PERCENT )? )
            {
            // InternalSQLParser.g:7515:1: ( ( PERCENT )? )
            // InternalSQLParser.g:7516:2: ( PERCENT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }
            // InternalSQLParser.g:7517:2: ( PERCENT )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==PERCENT) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSQLParser.g:7517:3: PERCENT
                    {
                    match(input,PERCENT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2__Impl"


    // $ANTLR start "rule__Select__Group_2__3"
    // InternalSQLParser.g:7525:1: rule__Select__Group_2__3 : rule__Select__Group_2__3__Impl ;
    public final void rule__Select__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7529:1: ( rule__Select__Group_2__3__Impl )
            // InternalSQLParser.g:7530:2: rule__Select__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3"


    // $ANTLR start "rule__Select__Group_2__3__Impl"
    // InternalSQLParser.g:7536:1: rule__Select__Group_2__3__Impl : ( ( rule__Select__Group_2_3__0 )? ) ;
    public final void rule__Select__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7540:1: ( ( ( rule__Select__Group_2_3__0 )? ) )
            // InternalSQLParser.g:7541:1: ( ( rule__Select__Group_2_3__0 )? )
            {
            // InternalSQLParser.g:7541:1: ( ( rule__Select__Group_2_3__0 )? )
            // InternalSQLParser.g:7542:2: ( rule__Select__Group_2_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }
            // InternalSQLParser.g:7543:2: ( rule__Select__Group_2_3__0 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==WITH) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalSQLParser.g:7543:3: rule__Select__Group_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3__Impl"


    // $ANTLR start "rule__Select__Group_2_3__0"
    // InternalSQLParser.g:7552:1: rule__Select__Group_2_3__0 : rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 ;
    public final void rule__Select__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7556:1: ( rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 )
            // InternalSQLParser.g:7557:2: rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1
            {
            pushFollow(FOLLOW_39);
            rule__Select__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0"


    // $ANTLR start "rule__Select__Group_2_3__0__Impl"
    // InternalSQLParser.g:7564:1: rule__Select__Group_2_3__0__Impl : ( WITH ) ;
    public final void rule__Select__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7568:1: ( ( WITH ) )
            // InternalSQLParser.g:7569:1: ( WITH )
            {
            // InternalSQLParser.g:7569:1: ( WITH )
            // InternalSQLParser.g:7570:2: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0__Impl"


    // $ANTLR start "rule__Select__Group_2_3__1"
    // InternalSQLParser.g:7579:1: rule__Select__Group_2_3__1 : rule__Select__Group_2_3__1__Impl ;
    public final void rule__Select__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7583:1: ( rule__Select__Group_2_3__1__Impl )
            // InternalSQLParser.g:7584:2: rule__Select__Group_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1"


    // $ANTLR start "rule__Select__Group_2_3__1__Impl"
    // InternalSQLParser.g:7590:1: rule__Select__Group_2_3__1__Impl : ( TIES ) ;
    public final void rule__Select__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7594:1: ( ( TIES ) )
            // InternalSQLParser.g:7595:1: ( TIES )
            {
            // InternalSQLParser.g:7595:1: ( TIES )
            // InternalSQLParser.g:7596:2: TIES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }
            match(input,TIES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1__Impl"


    // $ANTLR start "rule__Select__Group_6__0"
    // InternalSQLParser.g:7606:1: rule__Select__Group_6__0 : rule__Select__Group_6__0__Impl rule__Select__Group_6__1 ;
    public final void rule__Select__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7610:1: ( rule__Select__Group_6__0__Impl rule__Select__Group_6__1 )
            // InternalSQLParser.g:7611:2: rule__Select__Group_6__0__Impl rule__Select__Group_6__1
            {
            pushFollow(FOLLOW_40);
            rule__Select__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0"


    // $ANTLR start "rule__Select__Group_6__0__Impl"
    // InternalSQLParser.g:7618:1: rule__Select__Group_6__0__Impl : ( WHERE ) ;
    public final void rule__Select__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7622:1: ( ( WHERE ) )
            // InternalSQLParser.g:7623:1: ( WHERE )
            {
            // InternalSQLParser.g:7623:1: ( WHERE )
            // InternalSQLParser.g:7624:2: WHERE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }
            match(input,WHERE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0__Impl"


    // $ANTLR start "rule__Select__Group_6__1"
    // InternalSQLParser.g:7633:1: rule__Select__Group_6__1 : rule__Select__Group_6__1__Impl ;
    public final void rule__Select__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7637:1: ( rule__Select__Group_6__1__Impl )
            // InternalSQLParser.g:7638:2: rule__Select__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1"


    // $ANTLR start "rule__Select__Group_6__1__Impl"
    // InternalSQLParser.g:7644:1: rule__Select__Group_6__1__Impl : ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) ;
    public final void rule__Select__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7648:1: ( ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) )
            // InternalSQLParser.g:7649:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            {
            // InternalSQLParser.g:7649:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            // InternalSQLParser.g:7650:2: ( rule__Select__WhereExpressionAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }
            // InternalSQLParser.g:7651:2: ( rule__Select__WhereExpressionAssignment_6_1 )
            // InternalSQLParser.g:7651:3: rule__Select__WhereExpressionAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__WhereExpressionAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1__Impl"


    // $ANTLR start "rule__Select__Group_7__0"
    // InternalSQLParser.g:7660:1: rule__Select__Group_7__0 : rule__Select__Group_7__0__Impl rule__Select__Group_7__1 ;
    public final void rule__Select__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7664:1: ( rule__Select__Group_7__0__Impl rule__Select__Group_7__1 )
            // InternalSQLParser.g:7665:2: rule__Select__Group_7__0__Impl rule__Select__Group_7__1
            {
            pushFollow(FOLLOW_41);
            rule__Select__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0"


    // $ANTLR start "rule__Select__Group_7__0__Impl"
    // InternalSQLParser.g:7672:1: rule__Select__Group_7__0__Impl : ( GROUP ) ;
    public final void rule__Select__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7676:1: ( ( GROUP ) )
            // InternalSQLParser.g:7677:1: ( GROUP )
            {
            // InternalSQLParser.g:7677:1: ( GROUP )
            // InternalSQLParser.g:7678:2: GROUP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }
            match(input,GROUP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0__Impl"


    // $ANTLR start "rule__Select__Group_7__1"
    // InternalSQLParser.g:7687:1: rule__Select__Group_7__1 : rule__Select__Group_7__1__Impl rule__Select__Group_7__2 ;
    public final void rule__Select__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7691:1: ( rule__Select__Group_7__1__Impl rule__Select__Group_7__2 )
            // InternalSQLParser.g:7692:2: rule__Select__Group_7__1__Impl rule__Select__Group_7__2
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1"


    // $ANTLR start "rule__Select__Group_7__1__Impl"
    // InternalSQLParser.g:7699:1: rule__Select__Group_7__1__Impl : ( BY ) ;
    public final void rule__Select__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7703:1: ( ( BY ) )
            // InternalSQLParser.g:7704:1: ( BY )
            {
            // InternalSQLParser.g:7704:1: ( BY )
            // InternalSQLParser.g:7705:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1__Impl"


    // $ANTLR start "rule__Select__Group_7__2"
    // InternalSQLParser.g:7714:1: rule__Select__Group_7__2 : rule__Select__Group_7__2__Impl ;
    public final void rule__Select__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7718:1: ( rule__Select__Group_7__2__Impl )
            // InternalSQLParser.g:7719:2: rule__Select__Group_7__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2"


    // $ANTLR start "rule__Select__Group_7__2__Impl"
    // InternalSQLParser.g:7725:1: rule__Select__Group_7__2__Impl : ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) ;
    public final void rule__Select__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7729:1: ( ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) )
            // InternalSQLParser.g:7730:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            {
            // InternalSQLParser.g:7730:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            // InternalSQLParser.g:7731:2: ( rule__Select__GroupByEntryAssignment_7_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }
            // InternalSQLParser.g:7732:2: ( rule__Select__GroupByEntryAssignment_7_2 )
            // InternalSQLParser.g:7732:3: rule__Select__GroupByEntryAssignment_7_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__GroupByEntryAssignment_7_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2__Impl"


    // $ANTLR start "rule__Select__Group_8__0"
    // InternalSQLParser.g:7741:1: rule__Select__Group_8__0 : rule__Select__Group_8__0__Impl rule__Select__Group_8__1 ;
    public final void rule__Select__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7745:1: ( rule__Select__Group_8__0__Impl rule__Select__Group_8__1 )
            // InternalSQLParser.g:7746:2: rule__Select__Group_8__0__Impl rule__Select__Group_8__1
            {
            pushFollow(FOLLOW_40);
            rule__Select__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0"


    // $ANTLR start "rule__Select__Group_8__0__Impl"
    // InternalSQLParser.g:7753:1: rule__Select__Group_8__0__Impl : ( HAVING ) ;
    public final void rule__Select__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7757:1: ( ( HAVING ) )
            // InternalSQLParser.g:7758:1: ( HAVING )
            {
            // InternalSQLParser.g:7758:1: ( HAVING )
            // InternalSQLParser.g:7759:2: HAVING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }
            match(input,HAVING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0__Impl"


    // $ANTLR start "rule__Select__Group_8__1"
    // InternalSQLParser.g:7768:1: rule__Select__Group_8__1 : rule__Select__Group_8__1__Impl ;
    public final void rule__Select__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7772:1: ( rule__Select__Group_8__1__Impl )
            // InternalSQLParser.g:7773:2: rule__Select__Group_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1"


    // $ANTLR start "rule__Select__Group_8__1__Impl"
    // InternalSQLParser.g:7779:1: rule__Select__Group_8__1__Impl : ( ( rule__Select__HavingEntryAssignment_8_1 ) ) ;
    public final void rule__Select__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7783:1: ( ( ( rule__Select__HavingEntryAssignment_8_1 ) ) )
            // InternalSQLParser.g:7784:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            {
            // InternalSQLParser.g:7784:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            // InternalSQLParser.g:7785:2: ( rule__Select__HavingEntryAssignment_8_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }
            // InternalSQLParser.g:7786:2: ( rule__Select__HavingEntryAssignment_8_1 )
            // InternalSQLParser.g:7786:3: rule__Select__HavingEntryAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__HavingEntryAssignment_8_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1__Impl"


    // $ANTLR start "rule__Select__Group_9__0"
    // InternalSQLParser.g:7795:1: rule__Select__Group_9__0 : rule__Select__Group_9__0__Impl rule__Select__Group_9__1 ;
    public final void rule__Select__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7799:1: ( rule__Select__Group_9__0__Impl rule__Select__Group_9__1 )
            // InternalSQLParser.g:7800:2: rule__Select__Group_9__0__Impl rule__Select__Group_9__1
            {
            pushFollow(FOLLOW_41);
            rule__Select__Group_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0"


    // $ANTLR start "rule__Select__Group_9__0__Impl"
    // InternalSQLParser.g:7807:1: rule__Select__Group_9__0__Impl : ( ORDER ) ;
    public final void rule__Select__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7811:1: ( ( ORDER ) )
            // InternalSQLParser.g:7812:1: ( ORDER )
            {
            // InternalSQLParser.g:7812:1: ( ORDER )
            // InternalSQLParser.g:7813:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0__Impl"


    // $ANTLR start "rule__Select__Group_9__1"
    // InternalSQLParser.g:7822:1: rule__Select__Group_9__1 : rule__Select__Group_9__1__Impl rule__Select__Group_9__2 ;
    public final void rule__Select__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7826:1: ( rule__Select__Group_9__1__Impl rule__Select__Group_9__2 )
            // InternalSQLParser.g:7827:2: rule__Select__Group_9__1__Impl rule__Select__Group_9__2
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1"


    // $ANTLR start "rule__Select__Group_9__1__Impl"
    // InternalSQLParser.g:7834:1: rule__Select__Group_9__1__Impl : ( BY ) ;
    public final void rule__Select__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7838:1: ( ( BY ) )
            // InternalSQLParser.g:7839:1: ( BY )
            {
            // InternalSQLParser.g:7839:1: ( BY )
            // InternalSQLParser.g:7840:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1__Impl"


    // $ANTLR start "rule__Select__Group_9__2"
    // InternalSQLParser.g:7849:1: rule__Select__Group_9__2 : rule__Select__Group_9__2__Impl ;
    public final void rule__Select__Group_9__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7853:1: ( rule__Select__Group_9__2__Impl )
            // InternalSQLParser.g:7854:2: rule__Select__Group_9__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2"


    // $ANTLR start "rule__Select__Group_9__2__Impl"
    // InternalSQLParser.g:7860:1: rule__Select__Group_9__2__Impl : ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) ;
    public final void rule__Select__Group_9__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7864:1: ( ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) )
            // InternalSQLParser.g:7865:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            {
            // InternalSQLParser.g:7865:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            // InternalSQLParser.g:7866:2: ( rule__Select__OrderByEntryAssignment_9_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }
            // InternalSQLParser.g:7867:2: ( rule__Select__OrderByEntryAssignment_9_2 )
            // InternalSQLParser.g:7867:3: rule__Select__OrderByEntryAssignment_9_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__OrderByEntryAssignment_9_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2__Impl"


    // $ANTLR start "rule__Select__Group_10__0"
    // InternalSQLParser.g:7876:1: rule__Select__Group_10__0 : rule__Select__Group_10__0__Impl rule__Select__Group_10__1 ;
    public final void rule__Select__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7880:1: ( rule__Select__Group_10__0__Impl rule__Select__Group_10__1 )
            // InternalSQLParser.g:7881:2: rule__Select__Group_10__0__Impl rule__Select__Group_10__1
            {
            pushFollow(FOLLOW_43);
            rule__Select__Group_10__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0"


    // $ANTLR start "rule__Select__Group_10__0__Impl"
    // InternalSQLParser.g:7888:1: rule__Select__Group_10__0__Impl : ( LIMIT ) ;
    public final void rule__Select__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7892:1: ( ( LIMIT ) )
            // InternalSQLParser.g:7893:1: ( LIMIT )
            {
            // InternalSQLParser.g:7893:1: ( LIMIT )
            // InternalSQLParser.g:7894:2: LIMIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }
            match(input,LIMIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0__Impl"


    // $ANTLR start "rule__Select__Group_10__1"
    // InternalSQLParser.g:7903:1: rule__Select__Group_10__1 : rule__Select__Group_10__1__Impl ;
    public final void rule__Select__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7907:1: ( rule__Select__Group_10__1__Impl )
            // InternalSQLParser.g:7908:2: rule__Select__Group_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1"


    // $ANTLR start "rule__Select__Group_10__1__Impl"
    // InternalSQLParser.g:7914:1: rule__Select__Group_10__1__Impl : ( ( rule__Select__LimAssignment_10_1 ) ) ;
    public final void rule__Select__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7918:1: ( ( ( rule__Select__LimAssignment_10_1 ) ) )
            // InternalSQLParser.g:7919:1: ( ( rule__Select__LimAssignment_10_1 ) )
            {
            // InternalSQLParser.g:7919:1: ( ( rule__Select__LimAssignment_10_1 ) )
            // InternalSQLParser.g:7920:2: ( rule__Select__LimAssignment_10_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }
            // InternalSQLParser.g:7921:2: ( rule__Select__LimAssignment_10_1 )
            // InternalSQLParser.g:7921:3: rule__Select__LimAssignment_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__LimAssignment_10_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1__Impl"


    // $ANTLR start "rule__Select__Group_11__0"
    // InternalSQLParser.g:7930:1: rule__Select__Group_11__0 : rule__Select__Group_11__0__Impl rule__Select__Group_11__1 ;
    public final void rule__Select__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7934:1: ( rule__Select__Group_11__0__Impl rule__Select__Group_11__1 )
            // InternalSQLParser.g:7935:2: rule__Select__Group_11__0__Impl rule__Select__Group_11__1
            {
            pushFollow(FOLLOW_21);
            rule__Select__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0"


    // $ANTLR start "rule__Select__Group_11__0__Impl"
    // InternalSQLParser.g:7942:1: rule__Select__Group_11__0__Impl : ( OFFSET ) ;
    public final void rule__Select__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7946:1: ( ( OFFSET ) )
            // InternalSQLParser.g:7947:1: ( OFFSET )
            {
            // InternalSQLParser.g:7947:1: ( OFFSET )
            // InternalSQLParser.g:7948:2: OFFSET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }
            match(input,OFFSET,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0__Impl"


    // $ANTLR start "rule__Select__Group_11__1"
    // InternalSQLParser.g:7957:1: rule__Select__Group_11__1 : rule__Select__Group_11__1__Impl ;
    public final void rule__Select__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7961:1: ( rule__Select__Group_11__1__Impl )
            // InternalSQLParser.g:7962:2: rule__Select__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1"


    // $ANTLR start "rule__Select__Group_11__1__Impl"
    // InternalSQLParser.g:7968:1: rule__Select__Group_11__1__Impl : ( ( rule__Select__OffsetAssignment_11_1 ) ) ;
    public final void rule__Select__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7972:1: ( ( ( rule__Select__OffsetAssignment_11_1 ) ) )
            // InternalSQLParser.g:7973:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            {
            // InternalSQLParser.g:7973:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            // InternalSQLParser.g:7974:2: ( rule__Select__OffsetAssignment_11_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }
            // InternalSQLParser.g:7975:2: ( rule__Select__OffsetAssignment_11_1 )
            // InternalSQLParser.g:7975:3: rule__Select__OffsetAssignment_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__OffsetAssignment_11_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1__Impl"


    // $ANTLR start "rule__Select__Group_12__0"
    // InternalSQLParser.g:7984:1: rule__Select__Group_12__0 : rule__Select__Group_12__0__Impl rule__Select__Group_12__1 ;
    public final void rule__Select__Group_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7988:1: ( rule__Select__Group_12__0__Impl rule__Select__Group_12__1 )
            // InternalSQLParser.g:7989:2: rule__Select__Group_12__0__Impl rule__Select__Group_12__1
            {
            pushFollow(FOLLOW_44);
            rule__Select__Group_12__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0"


    // $ANTLR start "rule__Select__Group_12__0__Impl"
    // InternalSQLParser.g:7996:1: rule__Select__Group_12__0__Impl : ( FETCH ) ;
    public final void rule__Select__Group_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8000:1: ( ( FETCH ) )
            // InternalSQLParser.g:8001:1: ( FETCH )
            {
            // InternalSQLParser.g:8001:1: ( FETCH )
            // InternalSQLParser.g:8002:2: FETCH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }
            match(input,FETCH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0__Impl"


    // $ANTLR start "rule__Select__Group_12__1"
    // InternalSQLParser.g:8011:1: rule__Select__Group_12__1 : rule__Select__Group_12__1__Impl rule__Select__Group_12__2 ;
    public final void rule__Select__Group_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8015:1: ( rule__Select__Group_12__1__Impl rule__Select__Group_12__2 )
            // InternalSQLParser.g:8016:2: rule__Select__Group_12__1__Impl rule__Select__Group_12__2
            {
            pushFollow(FOLLOW_30);
            rule__Select__Group_12__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1"


    // $ANTLR start "rule__Select__Group_12__1__Impl"
    // InternalSQLParser.g:8023:1: rule__Select__Group_12__1__Impl : ( FIRST ) ;
    public final void rule__Select__Group_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8027:1: ( ( FIRST ) )
            // InternalSQLParser.g:8028:1: ( FIRST )
            {
            // InternalSQLParser.g:8028:1: ( FIRST )
            // InternalSQLParser.g:8029:2: FIRST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }
            match(input,FIRST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1__Impl"


    // $ANTLR start "rule__Select__Group_12__2"
    // InternalSQLParser.g:8038:1: rule__Select__Group_12__2 : rule__Select__Group_12__2__Impl ;
    public final void rule__Select__Group_12__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8042:1: ( rule__Select__Group_12__2__Impl )
            // InternalSQLParser.g:8043:2: rule__Select__Group_12__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2"


    // $ANTLR start "rule__Select__Group_12__2__Impl"
    // InternalSQLParser.g:8049:1: rule__Select__Group_12__2__Impl : ( ( rule__Select__FetchFirstAssignment_12_2 ) ) ;
    public final void rule__Select__Group_12__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8053:1: ( ( ( rule__Select__FetchFirstAssignment_12_2 ) ) )
            // InternalSQLParser.g:8054:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            {
            // InternalSQLParser.g:8054:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            // InternalSQLParser.g:8055:2: ( rule__Select__FetchFirstAssignment_12_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }
            // InternalSQLParser.g:8056:2: ( rule__Select__FetchFirstAssignment_12_2 )
            // InternalSQLParser.g:8056:3: rule__Select__FetchFirstAssignment_12_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__FetchFirstAssignment_12_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2__Impl"


    // $ANTLR start "rule__Columns__Group__0"
    // InternalSQLParser.g:8065:1: rule__Columns__Group__0 : rule__Columns__Group__0__Impl rule__Columns__Group__1 ;
    public final void rule__Columns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8069:1: ( rule__Columns__Group__0__Impl rule__Columns__Group__1 )
            // InternalSQLParser.g:8070:2: rule__Columns__Group__0__Impl rule__Columns__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Columns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0"


    // $ANTLR start "rule__Columns__Group__0__Impl"
    // InternalSQLParser.g:8077:1: rule__Columns__Group__0__Impl : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8081:1: ( ( ruleColumnOrAlias ) )
            // InternalSQLParser.g:8082:1: ( ruleColumnOrAlias )
            {
            // InternalSQLParser.g:8082:1: ( ruleColumnOrAlias )
            // InternalSQLParser.g:8083:2: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0__Impl"


    // $ANTLR start "rule__Columns__Group__1"
    // InternalSQLParser.g:8092:1: rule__Columns__Group__1 : rule__Columns__Group__1__Impl ;
    public final void rule__Columns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8096:1: ( rule__Columns__Group__1__Impl )
            // InternalSQLParser.g:8097:2: rule__Columns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1"


    // $ANTLR start "rule__Columns__Group__1__Impl"
    // InternalSQLParser.g:8103:1: rule__Columns__Group__1__Impl : ( ( rule__Columns__Group_1__0 )? ) ;
    public final void rule__Columns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8107:1: ( ( ( rule__Columns__Group_1__0 )? ) )
            // InternalSQLParser.g:8108:1: ( ( rule__Columns__Group_1__0 )? )
            {
            // InternalSQLParser.g:8108:1: ( ( rule__Columns__Group_1__0 )? )
            // InternalSQLParser.g:8109:2: ( rule__Columns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:8110:2: ( rule__Columns__Group_1__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==Comma) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSQLParser.g:8110:3: rule__Columns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Columns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1__Impl"


    // $ANTLR start "rule__Columns__Group_1__0"
    // InternalSQLParser.g:8119:1: rule__Columns__Group_1__0 : rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 ;
    public final void rule__Columns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8123:1: ( rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 )
            // InternalSQLParser.g:8124:2: rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__Columns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0"


    // $ANTLR start "rule__Columns__Group_1__0__Impl"
    // InternalSQLParser.g:8131:1: rule__Columns__Group_1__0__Impl : ( () ) ;
    public final void rule__Columns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8135:1: ( ( () ) )
            // InternalSQLParser.g:8136:1: ( () )
            {
            // InternalSQLParser.g:8136:1: ( () )
            // InternalSQLParser.g:8137:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:8138:2: ()
            // InternalSQLParser.g:8138:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1__1"
    // InternalSQLParser.g:8146:1: rule__Columns__Group_1__1 : rule__Columns__Group_1__1__Impl ;
    public final void rule__Columns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8150:1: ( rule__Columns__Group_1__1__Impl )
            // InternalSQLParser.g:8151:2: rule__Columns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1"


    // $ANTLR start "rule__Columns__Group_1__1__Impl"
    // InternalSQLParser.g:8157:1: rule__Columns__Group_1__1__Impl : ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) ;
    public final void rule__Columns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8161:1: ( ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:8162:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:8162:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:8163:2: ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:8163:2: ( ( rule__Columns__Group_1_1__0 ) )
            // InternalSQLParser.g:8164:3: ( rule__Columns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8165:3: ( rule__Columns__Group_1_1__0 )
            // InternalSQLParser.g:8165:4: rule__Columns__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__Columns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:8168:2: ( ( rule__Columns__Group_1_1__0 )* )
            // InternalSQLParser.g:8169:3: ( rule__Columns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8170:3: ( rule__Columns__Group_1_1__0 )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==Comma) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalSQLParser.g:8170:4: rule__Columns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__Columns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__0"
    // InternalSQLParser.g:8180:1: rule__Columns__Group_1_1__0 : rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 ;
    public final void rule__Columns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8184:1: ( rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 )
            // InternalSQLParser.g:8185:2: rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Columns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0"


    // $ANTLR start "rule__Columns__Group_1_1__0__Impl"
    // InternalSQLParser.g:8192:1: rule__Columns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Columns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8196:1: ( ( Comma ) )
            // InternalSQLParser.g:8197:1: ( Comma )
            {
            // InternalSQLParser.g:8197:1: ( Comma )
            // InternalSQLParser.g:8198:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__1"
    // InternalSQLParser.g:8207:1: rule__Columns__Group_1_1__1 : rule__Columns__Group_1_1__1__Impl ;
    public final void rule__Columns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8211:1: ( rule__Columns__Group_1_1__1__Impl )
            // InternalSQLParser.g:8212:2: rule__Columns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1"


    // $ANTLR start "rule__Columns__Group_1_1__1__Impl"
    // InternalSQLParser.g:8218:1: rule__Columns__Group_1_1__1__Impl : ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Columns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8222:1: ( ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:8223:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:8223:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:8224:2: ( rule__Columns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:8225:2: ( rule__Columns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:8225:3: rule__Columns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Columns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0"
    // InternalSQLParser.g:8234:1: rule__ColumnOrAlias__Group_0__0 : rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 ;
    public final void rule__ColumnOrAlias__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8238:1: ( rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 )
            // InternalSQLParser.g:8239:2: rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1
            {
            pushFollow(FOLLOW_45);
            rule__ColumnOrAlias__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0__Impl"
    // InternalSQLParser.g:8246:1: rule__ColumnOrAlias__Group_0__0__Impl : ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) ;
    public final void rule__ColumnOrAlias__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8250:1: ( ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) )
            // InternalSQLParser.g:8251:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            {
            // InternalSQLParser.g:8251:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            // InternalSQLParser.g:8252:2: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }
            // InternalSQLParser.g:8253:2: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            // InternalSQLParser.g:8253:3: rule__ColumnOrAlias__CeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__CeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1"
    // InternalSQLParser.g:8261:1: rule__ColumnOrAlias__Group_0__1 : rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 ;
    public final void rule__ColumnOrAlias__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8265:1: ( rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 )
            // InternalSQLParser.g:8266:2: rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2
            {
            pushFollow(FOLLOW_45);
            rule__ColumnOrAlias__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1__Impl"
    // InternalSQLParser.g:8273:1: rule__ColumnOrAlias__Group_0__1__Impl : ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8277:1: ( ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) )
            // InternalSQLParser.g:8278:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            {
            // InternalSQLParser.g:8278:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            // InternalSQLParser.g:8279:2: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }
            // InternalSQLParser.g:8280:2: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==AS) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalSQLParser.g:8280:3: rule__ColumnOrAlias__AliasAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AliasAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2"
    // InternalSQLParser.g:8288:1: rule__ColumnOrAlias__Group_0__2 : rule__ColumnOrAlias__Group_0__2__Impl ;
    public final void rule__ColumnOrAlias__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8292:1: ( rule__ColumnOrAlias__Group_0__2__Impl )
            // InternalSQLParser.g:8293:2: rule__ColumnOrAlias__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2__Impl"
    // InternalSQLParser.g:8299:1: rule__ColumnOrAlias__Group_0__2__Impl : ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8303:1: ( ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) )
            // InternalSQLParser.g:8304:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            {
            // InternalSQLParser.g:8304:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            // InternalSQLParser.g:8305:2: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }
            // InternalSQLParser.g:8306:2: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( ((LA90_0>=RULE_STRING && LA90_0<=RULE_ID)) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSQLParser.g:8306:3: rule__ColumnOrAlias__ColAliasAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__ColAliasAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2__Impl"


    // $ANTLR start "rule__ColumnFull__Group__0"
    // InternalSQLParser.g:8315:1: rule__ColumnFull__Group__0 : rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 ;
    public final void rule__ColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8319:1: ( rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 )
            // InternalSQLParser.g:8320:2: rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__ColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0"


    // $ANTLR start "rule__ColumnFull__Group__0__Impl"
    // InternalSQLParser.g:8327:1: rule__ColumnFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8331:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:8332:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:8332:1: ( ruleDbObjectName )
            // InternalSQLParser.g:8333:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group__1"
    // InternalSQLParser.g:8342:1: rule__ColumnFull__Group__1 : rule__ColumnFull__Group__1__Impl ;
    public final void rule__ColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8346:1: ( rule__ColumnFull__Group__1__Impl )
            // InternalSQLParser.g:8347:2: rule__ColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1"


    // $ANTLR start "rule__ColumnFull__Group__1__Impl"
    // InternalSQLParser.g:8353:1: rule__ColumnFull__Group__1__Impl : ( ( rule__ColumnFull__Group_1__0 )? ) ;
    public final void rule__ColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8357:1: ( ( ( rule__ColumnFull__Group_1__0 )? ) )
            // InternalSQLParser.g:8358:1: ( ( rule__ColumnFull__Group_1__0 )? )
            {
            // InternalSQLParser.g:8358:1: ( ( rule__ColumnFull__Group_1__0 )? )
            // InternalSQLParser.g:8359:2: ( rule__ColumnFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:8360:2: ( rule__ColumnFull__Group_1__0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==FullStop) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalSQLParser.g:8360:3: rule__ColumnFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__0"
    // InternalSQLParser.g:8369:1: rule__ColumnFull__Group_1__0 : rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 ;
    public final void rule__ColumnFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8373:1: ( rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 )
            // InternalSQLParser.g:8374:2: rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1
            {
            pushFollow(FOLLOW_46);
            rule__ColumnFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1__0__Impl"
    // InternalSQLParser.g:8381:1: rule__ColumnFull__Group_1__0__Impl : ( () ) ;
    public final void rule__ColumnFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8385:1: ( ( () ) )
            // InternalSQLParser.g:8386:1: ( () )
            {
            // InternalSQLParser.g:8386:1: ( () )
            // InternalSQLParser.g:8387:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:8388:2: ()
            // InternalSQLParser.g:8388:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__1"
    // InternalSQLParser.g:8396:1: rule__ColumnFull__Group_1__1 : rule__ColumnFull__Group_1__1__Impl ;
    public final void rule__ColumnFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8400:1: ( rule__ColumnFull__Group_1__1__Impl )
            // InternalSQLParser.g:8401:2: rule__ColumnFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1__1__Impl"
    // InternalSQLParser.g:8407:1: rule__ColumnFull__Group_1__1__Impl : ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) ;
    public final void rule__ColumnFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8411:1: ( ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:8412:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:8412:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            // InternalSQLParser.g:8413:2: ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:8413:2: ( ( rule__ColumnFull__Group_1_1__0 ) )
            // InternalSQLParser.g:8414:3: ( rule__ColumnFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8415:3: ( rule__ColumnFull__Group_1_1__0 )
            // InternalSQLParser.g:8415:4: rule__ColumnFull__Group_1_1__0
            {
            pushFollow(FOLLOW_47);
            rule__ColumnFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:8418:2: ( ( rule__ColumnFull__Group_1_1__0 )* )
            // InternalSQLParser.g:8419:3: ( rule__ColumnFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8420:3: ( rule__ColumnFull__Group_1_1__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==FullStop) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalSQLParser.g:8420:4: rule__ColumnFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__ColumnFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0"
    // InternalSQLParser.g:8430:1: rule__ColumnFull__Group_1_1__0 : rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 ;
    public final void rule__ColumnFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8434:1: ( rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 )
            // InternalSQLParser.g:8435:2: rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__ColumnFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0__Impl"
    // InternalSQLParser.g:8442:1: rule__ColumnFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__ColumnFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8446:1: ( ( FullStop ) )
            // InternalSQLParser.g:8447:1: ( FullStop )
            {
            // InternalSQLParser.g:8447:1: ( FullStop )
            // InternalSQLParser.g:8448:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1"
    // InternalSQLParser.g:8457:1: rule__ColumnFull__Group_1_1__1 : rule__ColumnFull__Group_1_1__1__Impl ;
    public final void rule__ColumnFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8461:1: ( rule__ColumnFull__Group_1_1__1__Impl )
            // InternalSQLParser.g:8462:2: rule__ColumnFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1__Impl"
    // InternalSQLParser.g:8468:1: rule__ColumnFull__Group_1_1__1__Impl : ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__ColumnFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8472:1: ( ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:8473:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:8473:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:8474:2: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:8475:2: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:8475:3: rule__ColumnFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__Tables__Group__0"
    // InternalSQLParser.g:8484:1: rule__Tables__Group__0 : rule__Tables__Group__0__Impl rule__Tables__Group__1 ;
    public final void rule__Tables__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8488:1: ( rule__Tables__Group__0__Impl rule__Tables__Group__1 )
            // InternalSQLParser.g:8489:2: rule__Tables__Group__0__Impl rule__Tables__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Tables__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0"


    // $ANTLR start "rule__Tables__Group__0__Impl"
    // InternalSQLParser.g:8496:1: rule__Tables__Group__0__Impl : ( ruleFromTable ) ;
    public final void rule__Tables__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8500:1: ( ( ruleFromTable ) )
            // InternalSQLParser.g:8501:1: ( ruleFromTable )
            {
            // InternalSQLParser.g:8501:1: ( ruleFromTable )
            // InternalSQLParser.g:8502:2: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0__Impl"


    // $ANTLR start "rule__Tables__Group__1"
    // InternalSQLParser.g:8511:1: rule__Tables__Group__1 : rule__Tables__Group__1__Impl ;
    public final void rule__Tables__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8515:1: ( rule__Tables__Group__1__Impl )
            // InternalSQLParser.g:8516:2: rule__Tables__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1"


    // $ANTLR start "rule__Tables__Group__1__Impl"
    // InternalSQLParser.g:8522:1: rule__Tables__Group__1__Impl : ( ( rule__Tables__Group_1__0 )? ) ;
    public final void rule__Tables__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8526:1: ( ( ( rule__Tables__Group_1__0 )? ) )
            // InternalSQLParser.g:8527:1: ( ( rule__Tables__Group_1__0 )? )
            {
            // InternalSQLParser.g:8527:1: ( ( rule__Tables__Group_1__0 )? )
            // InternalSQLParser.g:8528:2: ( rule__Tables__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:8529:2: ( rule__Tables__Group_1__0 )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==Comma) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalSQLParser.g:8529:3: rule__Tables__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Tables__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1__Impl"


    // $ANTLR start "rule__Tables__Group_1__0"
    // InternalSQLParser.g:8538:1: rule__Tables__Group_1__0 : rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 ;
    public final void rule__Tables__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8542:1: ( rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 )
            // InternalSQLParser.g:8543:2: rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__Tables__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0"


    // $ANTLR start "rule__Tables__Group_1__0__Impl"
    // InternalSQLParser.g:8550:1: rule__Tables__Group_1__0__Impl : ( () ) ;
    public final void rule__Tables__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8554:1: ( ( () ) )
            // InternalSQLParser.g:8555:1: ( () )
            {
            // InternalSQLParser.g:8555:1: ( () )
            // InternalSQLParser.g:8556:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:8557:2: ()
            // InternalSQLParser.g:8557:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1__1"
    // InternalSQLParser.g:8565:1: rule__Tables__Group_1__1 : rule__Tables__Group_1__1__Impl ;
    public final void rule__Tables__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8569:1: ( rule__Tables__Group_1__1__Impl )
            // InternalSQLParser.g:8570:2: rule__Tables__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1"


    // $ANTLR start "rule__Tables__Group_1__1__Impl"
    // InternalSQLParser.g:8576:1: rule__Tables__Group_1__1__Impl : ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) ;
    public final void rule__Tables__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8580:1: ( ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:8581:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:8581:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            // InternalSQLParser.g:8582:2: ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:8582:2: ( ( rule__Tables__Group_1_1__0 ) )
            // InternalSQLParser.g:8583:3: ( rule__Tables__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8584:3: ( rule__Tables__Group_1_1__0 )
            // InternalSQLParser.g:8584:4: rule__Tables__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__Tables__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:8587:2: ( ( rule__Tables__Group_1_1__0 )* )
            // InternalSQLParser.g:8588:3: ( rule__Tables__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8589:3: ( rule__Tables__Group_1_1__0 )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==Comma) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalSQLParser.g:8589:4: rule__Tables__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__Tables__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__0"
    // InternalSQLParser.g:8599:1: rule__Tables__Group_1_1__0 : rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 ;
    public final void rule__Tables__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8603:1: ( rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 )
            // InternalSQLParser.g:8604:2: rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1
            {
            pushFollow(FOLLOW_5);
            rule__Tables__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0"


    // $ANTLR start "rule__Tables__Group_1_1__0__Impl"
    // InternalSQLParser.g:8611:1: rule__Tables__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Tables__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8615:1: ( ( Comma ) )
            // InternalSQLParser.g:8616:1: ( Comma )
            {
            // InternalSQLParser.g:8616:1: ( Comma )
            // InternalSQLParser.g:8617:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__1"
    // InternalSQLParser.g:8626:1: rule__Tables__Group_1_1__1 : rule__Tables__Group_1_1__1__Impl ;
    public final void rule__Tables__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8630:1: ( rule__Tables__Group_1_1__1__Impl )
            // InternalSQLParser.g:8631:2: rule__Tables__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1"


    // $ANTLR start "rule__Tables__Group_1_1__1__Impl"
    // InternalSQLParser.g:8637:1: rule__Tables__Group_1_1__1__Impl : ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Tables__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8641:1: ( ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:8642:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:8642:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:8643:2: ( rule__Tables__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:8644:2: ( rule__Tables__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:8644:3: rule__Tables__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Tables__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1__Impl"


    // $ANTLR start "rule__FromTable__Group__0"
    // InternalSQLParser.g:8653:1: rule__FromTable__Group__0 : rule__FromTable__Group__0__Impl rule__FromTable__Group__1 ;
    public final void rule__FromTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8657:1: ( rule__FromTable__Group__0__Impl rule__FromTable__Group__1 )
            // InternalSQLParser.g:8658:2: rule__FromTable__Group__0__Impl rule__FromTable__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__FromTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0"


    // $ANTLR start "rule__FromTable__Group__0__Impl"
    // InternalSQLParser.g:8665:1: rule__FromTable__Group__0__Impl : ( ( rule__FromTable__TableAssignment_0 ) ) ;
    public final void rule__FromTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8669:1: ( ( ( rule__FromTable__TableAssignment_0 ) ) )
            // InternalSQLParser.g:8670:1: ( ( rule__FromTable__TableAssignment_0 ) )
            {
            // InternalSQLParser.g:8670:1: ( ( rule__FromTable__TableAssignment_0 ) )
            // InternalSQLParser.g:8671:2: ( rule__FromTable__TableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }
            // InternalSQLParser.g:8672:2: ( rule__FromTable__TableAssignment_0 )
            // InternalSQLParser.g:8672:3: rule__FromTable__TableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__TableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0__Impl"


    // $ANTLR start "rule__FromTable__Group__1"
    // InternalSQLParser.g:8680:1: rule__FromTable__Group__1 : rule__FromTable__Group__1__Impl ;
    public final void rule__FromTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8684:1: ( rule__FromTable__Group__1__Impl )
            // InternalSQLParser.g:8685:2: rule__FromTable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1"


    // $ANTLR start "rule__FromTable__Group__1__Impl"
    // InternalSQLParser.g:8691:1: rule__FromTable__Group__1__Impl : ( ( rule__FromTable__FjoinAssignment_1 )* ) ;
    public final void rule__FromTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8695:1: ( ( ( rule__FromTable__FjoinAssignment_1 )* ) )
            // InternalSQLParser.g:8696:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            {
            // InternalSQLParser.g:8696:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            // InternalSQLParser.g:8697:2: ( rule__FromTable__FjoinAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }
            // InternalSQLParser.g:8698:2: ( rule__FromTable__FjoinAssignment_1 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==STRAIGHT_JOIN||LA95_0==NATURAL||LA95_0==CROSS||LA95_0==INNER||LA95_0==RIGHT||LA95_0==FULL||LA95_0==JOIN||LA95_0==LEFT) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalSQLParser.g:8698:3: rule__FromTable__FjoinAssignment_1
            	    {
            	    pushFollow(FOLLOW_49);
            	    rule__FromTable__FjoinAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__0"
    // InternalSQLParser.g:8707:1: rule__FromTableJoin__Group__0 : rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 ;
    public final void rule__FromTableJoin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8711:1: ( rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 )
            // InternalSQLParser.g:8712:2: rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__FromTableJoin__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0"


    // $ANTLR start "rule__FromTableJoin__Group__0__Impl"
    // InternalSQLParser.g:8719:1: rule__FromTableJoin__Group__0__Impl : ( ( rule__FromTableJoin__JoinAssignment_0 ) ) ;
    public final void rule__FromTableJoin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8723:1: ( ( ( rule__FromTableJoin__JoinAssignment_0 ) ) )
            // InternalSQLParser.g:8724:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            {
            // InternalSQLParser.g:8724:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            // InternalSQLParser.g:8725:2: ( rule__FromTableJoin__JoinAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }
            // InternalSQLParser.g:8726:2: ( rule__FromTableJoin__JoinAssignment_0 )
            // InternalSQLParser.g:8726:3: rule__FromTableJoin__JoinAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__1"
    // InternalSQLParser.g:8734:1: rule__FromTableJoin__Group__1 : rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 ;
    public final void rule__FromTableJoin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8738:1: ( rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 )
            // InternalSQLParser.g:8739:2: rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2
            {
            pushFollow(FOLLOW_50);
            rule__FromTableJoin__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1"


    // $ANTLR start "rule__FromTableJoin__Group__1__Impl"
    // InternalSQLParser.g:8746:1: rule__FromTableJoin__Group__1__Impl : ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) ;
    public final void rule__FromTableJoin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8750:1: ( ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) )
            // InternalSQLParser.g:8751:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            {
            // InternalSQLParser.g:8751:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            // InternalSQLParser.g:8752:2: ( rule__FromTableJoin__OnTableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }
            // InternalSQLParser.g:8753:2: ( rule__FromTableJoin__OnTableAssignment_1 )
            // InternalSQLParser.g:8753:3: rule__FromTableJoin__OnTableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__OnTableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__2"
    // InternalSQLParser.g:8761:1: rule__FromTableJoin__Group__2 : rule__FromTableJoin__Group__2__Impl ;
    public final void rule__FromTableJoin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8765:1: ( rule__FromTableJoin__Group__2__Impl )
            // InternalSQLParser.g:8766:2: rule__FromTableJoin__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2"


    // $ANTLR start "rule__FromTableJoin__Group__2__Impl"
    // InternalSQLParser.g:8772:1: rule__FromTableJoin__Group__2__Impl : ( ( rule__FromTableJoin__Alternatives_2 ) ) ;
    public final void rule__FromTableJoin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8776:1: ( ( ( rule__FromTableJoin__Alternatives_2 ) ) )
            // InternalSQLParser.g:8777:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            {
            // InternalSQLParser.g:8777:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            // InternalSQLParser.g:8778:2: ( rule__FromTableJoin__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:8779:2: ( rule__FromTableJoin__Alternatives_2 )
            // InternalSQLParser.g:8779:3: rule__FromTableJoin__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0"
    // InternalSQLParser.g:8788:1: rule__FromTableJoin__Group_2_0__0 : rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 ;
    public final void rule__FromTableJoin__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8792:1: ( rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 )
            // InternalSQLParser.g:8793:2: rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1
            {
            pushFollow(FOLLOW_40);
            rule__FromTableJoin__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0__Impl"
    // InternalSQLParser.g:8800:1: rule__FromTableJoin__Group_2_0__0__Impl : ( ON ) ;
    public final void rule__FromTableJoin__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8804:1: ( ( ON ) )
            // InternalSQLParser.g:8805:1: ( ON )
            {
            // InternalSQLParser.g:8805:1: ( ON )
            // InternalSQLParser.g:8806:2: ON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }
            match(input,ON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1"
    // InternalSQLParser.g:8815:1: rule__FromTableJoin__Group_2_0__1 : rule__FromTableJoin__Group_2_0__1__Impl ;
    public final void rule__FromTableJoin__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8819:1: ( rule__FromTableJoin__Group_2_0__1__Impl )
            // InternalSQLParser.g:8820:2: rule__FromTableJoin__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1__Impl"
    // InternalSQLParser.g:8826:1: rule__FromTableJoin__Group_2_0__1__Impl : ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) ;
    public final void rule__FromTableJoin__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8830:1: ( ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) )
            // InternalSQLParser.g:8831:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            {
            // InternalSQLParser.g:8831:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            // InternalSQLParser.g:8832:2: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }
            // InternalSQLParser.g:8833:2: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            // InternalSQLParser.g:8833:3: rule__FromTableJoin__JoinExprAssignment_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinExprAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__0"
    // InternalSQLParser.g:8842:1: rule__JoinCondition__Group__0 : rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 ;
    public final void rule__JoinCondition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8846:1: ( rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 )
            // InternalSQLParser.g:8847:2: rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__JoinCondition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0"


    // $ANTLR start "rule__JoinCondition__Group__0__Impl"
    // InternalSQLParser.g:8854:1: rule__JoinCondition__Group__0__Impl : ( USING ) ;
    public final void rule__JoinCondition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8858:1: ( ( USING ) )
            // InternalSQLParser.g:8859:1: ( USING )
            {
            // InternalSQLParser.g:8859:1: ( USING )
            // InternalSQLParser.g:8860:2: USING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }
            match(input,USING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0__Impl"


    // $ANTLR start "rule__JoinCondition__Group__1"
    // InternalSQLParser.g:8869:1: rule__JoinCondition__Group__1 : rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 ;
    public final void rule__JoinCondition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8873:1: ( rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 )
            // InternalSQLParser.g:8874:2: rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2
            {
            pushFollow(FOLLOW_24);
            rule__JoinCondition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1"


    // $ANTLR start "rule__JoinCondition__Group__1__Impl"
    // InternalSQLParser.g:8881:1: rule__JoinCondition__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__JoinCondition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8885:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:8886:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:8886:1: ( LeftParenthesis )
            // InternalSQLParser.g:8887:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__2"
    // InternalSQLParser.g:8896:1: rule__JoinCondition__Group__2 : rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 ;
    public final void rule__JoinCondition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8900:1: ( rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 )
            // InternalSQLParser.g:8901:2: rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__JoinCondition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2"


    // $ANTLR start "rule__JoinCondition__Group__2__Impl"
    // InternalSQLParser.g:8908:1: rule__JoinCondition__Group__2__Impl : ( ( rule__JoinCondition__UseColsAssignment_2 ) ) ;
    public final void rule__JoinCondition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8912:1: ( ( ( rule__JoinCondition__UseColsAssignment_2 ) ) )
            // InternalSQLParser.g:8913:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            {
            // InternalSQLParser.g:8913:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            // InternalSQLParser.g:8914:2: ( rule__JoinCondition__UseColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }
            // InternalSQLParser.g:8915:2: ( rule__JoinCondition__UseColsAssignment_2 )
            // InternalSQLParser.g:8915:3: rule__JoinCondition__UseColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__UseColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2__Impl"


    // $ANTLR start "rule__JoinCondition__Group__3"
    // InternalSQLParser.g:8923:1: rule__JoinCondition__Group__3 : rule__JoinCondition__Group__3__Impl ;
    public final void rule__JoinCondition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8927:1: ( rule__JoinCondition__Group__3__Impl )
            // InternalSQLParser.g:8928:2: rule__JoinCondition__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3"


    // $ANTLR start "rule__JoinCondition__Group__3__Impl"
    // InternalSQLParser.g:8934:1: rule__JoinCondition__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__JoinCondition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8938:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:8939:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:8939:1: ( RightParenthesis )
            // InternalSQLParser.g:8940:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3__Impl"


    // $ANTLR start "rule__UsingCols__Group__0"
    // InternalSQLParser.g:8950:1: rule__UsingCols__Group__0 : rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 ;
    public final void rule__UsingCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8954:1: ( rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 )
            // InternalSQLParser.g:8955:2: rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__UsingCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0"


    // $ANTLR start "rule__UsingCols__Group__0__Impl"
    // InternalSQLParser.g:8962:1: rule__UsingCols__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8966:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:8967:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:8967:1: ( ruleDbObjectName )
            // InternalSQLParser.g:8968:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0__Impl"


    // $ANTLR start "rule__UsingCols__Group__1"
    // InternalSQLParser.g:8977:1: rule__UsingCols__Group__1 : rule__UsingCols__Group__1__Impl ;
    public final void rule__UsingCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8981:1: ( rule__UsingCols__Group__1__Impl )
            // InternalSQLParser.g:8982:2: rule__UsingCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1"


    // $ANTLR start "rule__UsingCols__Group__1__Impl"
    // InternalSQLParser.g:8988:1: rule__UsingCols__Group__1__Impl : ( ( rule__UsingCols__Group_1__0 )? ) ;
    public final void rule__UsingCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8992:1: ( ( ( rule__UsingCols__Group_1__0 )? ) )
            // InternalSQLParser.g:8993:1: ( ( rule__UsingCols__Group_1__0 )? )
            {
            // InternalSQLParser.g:8993:1: ( ( rule__UsingCols__Group_1__0 )? )
            // InternalSQLParser.g:8994:2: ( rule__UsingCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:8995:2: ( rule__UsingCols__Group_1__0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==Comma) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalSQLParser.g:8995:3: rule__UsingCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UsingCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__0"
    // InternalSQLParser.g:9004:1: rule__UsingCols__Group_1__0 : rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 ;
    public final void rule__UsingCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9008:1: ( rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 )
            // InternalSQLParser.g:9009:2: rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__UsingCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0"


    // $ANTLR start "rule__UsingCols__Group_1__0__Impl"
    // InternalSQLParser.g:9016:1: rule__UsingCols__Group_1__0__Impl : ( () ) ;
    public final void rule__UsingCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9020:1: ( ( () ) )
            // InternalSQLParser.g:9021:1: ( () )
            {
            // InternalSQLParser.g:9021:1: ( () )
            // InternalSQLParser.g:9022:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9023:2: ()
            // InternalSQLParser.g:9023:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__1"
    // InternalSQLParser.g:9031:1: rule__UsingCols__Group_1__1 : rule__UsingCols__Group_1__1__Impl ;
    public final void rule__UsingCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9035:1: ( rule__UsingCols__Group_1__1__Impl )
            // InternalSQLParser.g:9036:2: rule__UsingCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1"


    // $ANTLR start "rule__UsingCols__Group_1__1__Impl"
    // InternalSQLParser.g:9042:1: rule__UsingCols__Group_1__1__Impl : ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) ;
    public final void rule__UsingCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9046:1: ( ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:9047:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:9047:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            // InternalSQLParser.g:9048:2: ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:9048:2: ( ( rule__UsingCols__Group_1_1__0 ) )
            // InternalSQLParser.g:9049:3: ( rule__UsingCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9050:3: ( rule__UsingCols__Group_1_1__0 )
            // InternalSQLParser.g:9050:4: rule__UsingCols__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__UsingCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:9053:2: ( ( rule__UsingCols__Group_1_1__0 )* )
            // InternalSQLParser.g:9054:3: ( rule__UsingCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9055:3: ( rule__UsingCols__Group_1_1__0 )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==Comma) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalSQLParser.g:9055:4: rule__UsingCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__UsingCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__0"
    // InternalSQLParser.g:9065:1: rule__UsingCols__Group_1_1__0 : rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 ;
    public final void rule__UsingCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9069:1: ( rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 )
            // InternalSQLParser.g:9070:2: rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__UsingCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0"


    // $ANTLR start "rule__UsingCols__Group_1_1__0__Impl"
    // InternalSQLParser.g:9077:1: rule__UsingCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UsingCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9081:1: ( ( Comma ) )
            // InternalSQLParser.g:9082:1: ( Comma )
            {
            // InternalSQLParser.g:9082:1: ( Comma )
            // InternalSQLParser.g:9083:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__1"
    // InternalSQLParser.g:9092:1: rule__UsingCols__Group_1_1__1 : rule__UsingCols__Group_1_1__1__Impl ;
    public final void rule__UsingCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9096:1: ( rule__UsingCols__Group_1_1__1__Impl )
            // InternalSQLParser.g:9097:2: rule__UsingCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1"


    // $ANTLR start "rule__UsingCols__Group_1_1__1__Impl"
    // InternalSQLParser.g:9103:1: rule__UsingCols__Group_1_1__1__Impl : ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UsingCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9107:1: ( ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9108:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9108:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9109:2: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9110:2: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9110:3: rule__UsingCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__0"
    // InternalSQLParser.g:9119:1: rule__TableOrAlias__Group__0 : rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 ;
    public final void rule__TableOrAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9123:1: ( rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 )
            // InternalSQLParser.g:9124:2: rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__TableOrAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0"


    // $ANTLR start "rule__TableOrAlias__Group__0__Impl"
    // InternalSQLParser.g:9131:1: rule__TableOrAlias__Group__0__Impl : ( ( rule__TableOrAlias__Alternatives_0 ) ) ;
    public final void rule__TableOrAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9135:1: ( ( ( rule__TableOrAlias__Alternatives_0 ) ) )
            // InternalSQLParser.g:9136:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            {
            // InternalSQLParser.g:9136:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            // InternalSQLParser.g:9137:2: ( rule__TableOrAlias__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:9138:2: ( rule__TableOrAlias__Alternatives_0 )
            // InternalSQLParser.g:9138:3: rule__TableOrAlias__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__1"
    // InternalSQLParser.g:9146:1: rule__TableOrAlias__Group__1 : rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 ;
    public final void rule__TableOrAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9150:1: ( rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 )
            // InternalSQLParser.g:9151:2: rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2
            {
            pushFollow(FOLLOW_51);
            rule__TableOrAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1"


    // $ANTLR start "rule__TableOrAlias__Group__1__Impl"
    // InternalSQLParser.g:9158:1: rule__TableOrAlias__Group__1__Impl : ( ( rule__TableOrAlias__Alternatives_1 )? ) ;
    public final void rule__TableOrAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9162:1: ( ( ( rule__TableOrAlias__Alternatives_1 )? ) )
            // InternalSQLParser.g:9163:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            {
            // InternalSQLParser.g:9163:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            // InternalSQLParser.g:9164:2: ( rule__TableOrAlias__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:9165:2: ( rule__TableOrAlias__Alternatives_1 )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==UNPIVOT||LA98_0==PIVOT) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalSQLParser.g:9165:3: rule__TableOrAlias__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__2"
    // InternalSQLParser.g:9173:1: rule__TableOrAlias__Group__2 : rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 ;
    public final void rule__TableOrAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9177:1: ( rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 )
            // InternalSQLParser.g:9178:2: rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3
            {
            pushFollow(FOLLOW_51);
            rule__TableOrAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2"


    // $ANTLR start "rule__TableOrAlias__Group__2__Impl"
    // InternalSQLParser.g:9185:1: rule__TableOrAlias__Group__2__Impl : ( ( rule__TableOrAlias__AliasAssignment_2 )? ) ;
    public final void rule__TableOrAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9189:1: ( ( ( rule__TableOrAlias__AliasAssignment_2 )? ) )
            // InternalSQLParser.g:9190:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            {
            // InternalSQLParser.g:9190:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            // InternalSQLParser.g:9191:2: ( rule__TableOrAlias__AliasAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }
            // InternalSQLParser.g:9192:2: ( rule__TableOrAlias__AliasAssignment_2 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==AS) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSQLParser.g:9192:3: rule__TableOrAlias__AliasAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__AliasAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__3"
    // InternalSQLParser.g:9200:1: rule__TableOrAlias__Group__3 : rule__TableOrAlias__Group__3__Impl ;
    public final void rule__TableOrAlias__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9204:1: ( rule__TableOrAlias__Group__3__Impl )
            // InternalSQLParser.g:9205:2: rule__TableOrAlias__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3"


    // $ANTLR start "rule__TableOrAlias__Group__3__Impl"
    // InternalSQLParser.g:9211:1: rule__TableOrAlias__Group__3__Impl : ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) ;
    public final void rule__TableOrAlias__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9215:1: ( ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) )
            // InternalSQLParser.g:9216:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            {
            // InternalSQLParser.g:9216:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            // InternalSQLParser.g:9217:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }
            // InternalSQLParser.g:9218:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            int alt100=2;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalSQLParser.g:9218:3: rule__TableOrAlias__TblAliasAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TblAliasAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3__Impl"


    // $ANTLR start "rule__FromValues__Group__0"
    // InternalSQLParser.g:9227:1: rule__FromValues__Group__0 : rule__FromValues__Group__0__Impl rule__FromValues__Group__1 ;
    public final void rule__FromValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9231:1: ( rule__FromValues__Group__0__Impl rule__FromValues__Group__1 )
            // InternalSQLParser.g:9232:2: rule__FromValues__Group__0__Impl rule__FromValues__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__FromValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0"


    // $ANTLR start "rule__FromValues__Group__0__Impl"
    // InternalSQLParser.g:9239:1: rule__FromValues__Group__0__Impl : ( ( rule__FromValues__ValuesAssignment_0 ) ) ;
    public final void rule__FromValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9243:1: ( ( ( rule__FromValues__ValuesAssignment_0 ) ) )
            // InternalSQLParser.g:9244:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            {
            // InternalSQLParser.g:9244:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            // InternalSQLParser.g:9245:2: ( rule__FromValues__ValuesAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }
            // InternalSQLParser.g:9246:2: ( rule__FromValues__ValuesAssignment_0 )
            // InternalSQLParser.g:9246:3: rule__FromValues__ValuesAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__ValuesAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0__Impl"


    // $ANTLR start "rule__FromValues__Group__1"
    // InternalSQLParser.g:9254:1: rule__FromValues__Group__1 : rule__FromValues__Group__1__Impl ;
    public final void rule__FromValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9258:1: ( rule__FromValues__Group__1__Impl )
            // InternalSQLParser.g:9259:2: rule__FromValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1"


    // $ANTLR start "rule__FromValues__Group__1__Impl"
    // InternalSQLParser.g:9265:1: rule__FromValues__Group__1__Impl : ( ( rule__FromValues__CAssignment_1 )? ) ;
    public final void rule__FromValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9269:1: ( ( ( rule__FromValues__CAssignment_1 )? ) )
            // InternalSQLParser.g:9270:1: ( ( rule__FromValues__CAssignment_1 )? )
            {
            // InternalSQLParser.g:9270:1: ( ( rule__FromValues__CAssignment_1 )? )
            // InternalSQLParser.g:9271:2: ( rule__FromValues__CAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }
            // InternalSQLParser.g:9272:2: ( rule__FromValues__CAssignment_1 )?
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalSQLParser.g:9272:3: rule__FromValues__CAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValues__CAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__0"
    // InternalSQLParser.g:9281:1: rule__FromValuesColumns__Group__0 : rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 ;
    public final void rule__FromValuesColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9285:1: ( rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 )
            // InternalSQLParser.g:9286:2: rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FromValuesColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0"


    // $ANTLR start "rule__FromValuesColumns__Group__0__Impl"
    // InternalSQLParser.g:9293:1: rule__FromValuesColumns__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FromValuesColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9297:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:9298:1: ( RULE_ID )
            {
            // InternalSQLParser.g:9298:1: ( RULE_ID )
            // InternalSQLParser.g:9299:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__1"
    // InternalSQLParser.g:9308:1: rule__FromValuesColumns__Group__1 : rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 ;
    public final void rule__FromValuesColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9312:1: ( rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 )
            // InternalSQLParser.g:9313:2: rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2
            {
            pushFollow(FOLLOW_52);
            rule__FromValuesColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1"


    // $ANTLR start "rule__FromValuesColumns__Group__1__Impl"
    // InternalSQLParser.g:9320:1: rule__FromValuesColumns__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FromValuesColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9324:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:9325:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:9325:1: ( LeftParenthesis )
            // InternalSQLParser.g:9326:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__2"
    // InternalSQLParser.g:9335:1: rule__FromValuesColumns__Group__2 : rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 ;
    public final void rule__FromValuesColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9339:1: ( rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 )
            // InternalSQLParser.g:9340:2: rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__FromValuesColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2"


    // $ANTLR start "rule__FromValuesColumns__Group__2__Impl"
    // InternalSQLParser.g:9347:1: rule__FromValuesColumns__Group__2__Impl : ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) ;
    public final void rule__FromValuesColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9351:1: ( ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) )
            // InternalSQLParser.g:9352:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            {
            // InternalSQLParser.g:9352:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            // InternalSQLParser.g:9353:2: ( rule__FromValuesColumns__FvColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }
            // InternalSQLParser.g:9354:2: ( rule__FromValuesColumns__FvColsAssignment_2 )
            // InternalSQLParser.g:9354:3: rule__FromValuesColumns__FvColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__FvColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__3"
    // InternalSQLParser.g:9362:1: rule__FromValuesColumns__Group__3 : rule__FromValuesColumns__Group__3__Impl ;
    public final void rule__FromValuesColumns__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9366:1: ( rule__FromValuesColumns__Group__3__Impl )
            // InternalSQLParser.g:9367:2: rule__FromValuesColumns__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3"


    // $ANTLR start "rule__FromValuesColumns__Group__3__Impl"
    // InternalSQLParser.g:9373:1: rule__FromValuesColumns__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FromValuesColumns__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9377:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:9378:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:9378:1: ( RightParenthesis )
            // InternalSQLParser.g:9379:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0"
    // InternalSQLParser.g:9389:1: rule__FromValuesColumnNames__Group__0 : rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 ;
    public final void rule__FromValuesColumnNames__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9393:1: ( rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 )
            // InternalSQLParser.g:9394:2: rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__FromValuesColumnNames__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0__Impl"
    // InternalSQLParser.g:9401:1: rule__FromValuesColumnNames__Group__0__Impl : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9405:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:9406:1: ( ruleColumnName )
            {
            // InternalSQLParser.g:9406:1: ( ruleColumnName )
            // InternalSQLParser.g:9407:2: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1"
    // InternalSQLParser.g:9416:1: rule__FromValuesColumnNames__Group__1 : rule__FromValuesColumnNames__Group__1__Impl ;
    public final void rule__FromValuesColumnNames__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9420:1: ( rule__FromValuesColumnNames__Group__1__Impl )
            // InternalSQLParser.g:9421:2: rule__FromValuesColumnNames__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1__Impl"
    // InternalSQLParser.g:9427:1: rule__FromValuesColumnNames__Group__1__Impl : ( ( rule__FromValuesColumnNames__Group_1__0 )? ) ;
    public final void rule__FromValuesColumnNames__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9431:1: ( ( ( rule__FromValuesColumnNames__Group_1__0 )? ) )
            // InternalSQLParser.g:9432:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            {
            // InternalSQLParser.g:9432:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            // InternalSQLParser.g:9433:2: ( rule__FromValuesColumnNames__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9434:2: ( rule__FromValuesColumnNames__Group_1__0 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==Comma) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSQLParser.g:9434:3: rule__FromValuesColumnNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValuesColumnNames__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0"
    // InternalSQLParser.g:9443:1: rule__FromValuesColumnNames__Group_1__0 : rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9447:1: ( rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 )
            // InternalSQLParser.g:9448:2: rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__FromValuesColumnNames__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0__Impl"
    // InternalSQLParser.g:9455:1: rule__FromValuesColumnNames__Group_1__0__Impl : ( () ) ;
    public final void rule__FromValuesColumnNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9459:1: ( ( () ) )
            // InternalSQLParser.g:9460:1: ( () )
            {
            // InternalSQLParser.g:9460:1: ( () )
            // InternalSQLParser.g:9461:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9462:2: ()
            // InternalSQLParser.g:9462:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1"
    // InternalSQLParser.g:9470:1: rule__FromValuesColumnNames__Group_1__1 : rule__FromValuesColumnNames__Group_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9474:1: ( rule__FromValuesColumnNames__Group_1__1__Impl )
            // InternalSQLParser.g:9475:2: rule__FromValuesColumnNames__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1__Impl"
    // InternalSQLParser.g:9481:1: rule__FromValuesColumnNames__Group_1__1__Impl : ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) ;
    public final void rule__FromValuesColumnNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9485:1: ( ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:9486:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:9486:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            // InternalSQLParser.g:9487:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:9487:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) )
            // InternalSQLParser.g:9488:3: ( rule__FromValuesColumnNames__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9489:3: ( rule__FromValuesColumnNames__Group_1_1__0 )
            // InternalSQLParser.g:9489:4: rule__FromValuesColumnNames__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__FromValuesColumnNames__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:9492:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            // InternalSQLParser.g:9493:3: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9494:3: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==Comma) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalSQLParser.g:9494:4: rule__FromValuesColumnNames__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__FromValuesColumnNames__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0"
    // InternalSQLParser.g:9504:1: rule__FromValuesColumnNames__Group_1_1__0 : rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9508:1: ( rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 )
            // InternalSQLParser.g:9509:2: rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1
            {
            pushFollow(FOLLOW_52);
            rule__FromValuesColumnNames__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0__Impl"
    // InternalSQLParser.g:9516:1: rule__FromValuesColumnNames__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9520:1: ( ( Comma ) )
            // InternalSQLParser.g:9521:1: ( Comma )
            {
            // InternalSQLParser.g:9521:1: ( Comma )
            // InternalSQLParser.g:9522:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1"
    // InternalSQLParser.g:9531:1: rule__FromValuesColumnNames__Group_1_1__1 : rule__FromValuesColumnNames__Group_1_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9535:1: ( rule__FromValuesColumnNames__Group_1_1__1__Impl )
            // InternalSQLParser.g:9536:2: rule__FromValuesColumnNames__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1__Impl"
    // InternalSQLParser.g:9542:1: rule__FromValuesColumnNames__Group_1_1__1__Impl : ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9546:1: ( ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9547:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9547:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9548:2: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9549:2: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9549:3: rule__FromValuesColumnNames__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1__Impl"


    // $ANTLR start "rule__Values__Group__0"
    // InternalSQLParser.g:9558:1: rule__Values__Group__0 : rule__Values__Group__0__Impl rule__Values__Group__1 ;
    public final void rule__Values__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9562:1: ( rule__Values__Group__0__Impl rule__Values__Group__1 )
            // InternalSQLParser.g:9563:2: rule__Values__Group__0__Impl rule__Values__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__Values__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0"


    // $ANTLR start "rule__Values__Group__0__Impl"
    // InternalSQLParser.g:9570:1: rule__Values__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Values__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9574:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:9575:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:9575:1: ( LeftParenthesis )
            // InternalSQLParser.g:9576:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0__Impl"


    // $ANTLR start "rule__Values__Group__1"
    // InternalSQLParser.g:9585:1: rule__Values__Group__1 : rule__Values__Group__1__Impl rule__Values__Group__2 ;
    public final void rule__Values__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9589:1: ( rule__Values__Group__1__Impl rule__Values__Group__2 )
            // InternalSQLParser.g:9590:2: rule__Values__Group__1__Impl rule__Values__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__Values__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1"


    // $ANTLR start "rule__Values__Group__1__Impl"
    // InternalSQLParser.g:9597:1: rule__Values__Group__1__Impl : ( VALUES ) ;
    public final void rule__Values__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9601:1: ( ( VALUES ) )
            // InternalSQLParser.g:9602:1: ( VALUES )
            {
            // InternalSQLParser.g:9602:1: ( VALUES )
            // InternalSQLParser.g:9603:2: VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }
            match(input,VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1__Impl"


    // $ANTLR start "rule__Values__Group__2"
    // InternalSQLParser.g:9612:1: rule__Values__Group__2 : rule__Values__Group__2__Impl rule__Values__Group__3 ;
    public final void rule__Values__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9616:1: ( rule__Values__Group__2__Impl rule__Values__Group__3 )
            // InternalSQLParser.g:9617:2: rule__Values__Group__2__Impl rule__Values__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__Values__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2"


    // $ANTLR start "rule__Values__Group__2__Impl"
    // InternalSQLParser.g:9624:1: rule__Values__Group__2__Impl : ( ( rule__Values__RowsAssignment_2 ) ) ;
    public final void rule__Values__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9628:1: ( ( ( rule__Values__RowsAssignment_2 ) ) )
            // InternalSQLParser.g:9629:1: ( ( rule__Values__RowsAssignment_2 ) )
            {
            // InternalSQLParser.g:9629:1: ( ( rule__Values__RowsAssignment_2 ) )
            // InternalSQLParser.g:9630:2: ( rule__Values__RowsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }
            // InternalSQLParser.g:9631:2: ( rule__Values__RowsAssignment_2 )
            // InternalSQLParser.g:9631:3: rule__Values__RowsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Values__RowsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2__Impl"


    // $ANTLR start "rule__Values__Group__3"
    // InternalSQLParser.g:9639:1: rule__Values__Group__3 : rule__Values__Group__3__Impl ;
    public final void rule__Values__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9643:1: ( rule__Values__Group__3__Impl )
            // InternalSQLParser.g:9644:2: rule__Values__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3"


    // $ANTLR start "rule__Values__Group__3__Impl"
    // InternalSQLParser.g:9650:1: rule__Values__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__Values__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9654:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:9655:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:9655:1: ( RightParenthesis )
            // InternalSQLParser.g:9656:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3__Impl"


    // $ANTLR start "rule__Rows__Group__0"
    // InternalSQLParser.g:9666:1: rule__Rows__Group__0 : rule__Rows__Group__0__Impl rule__Rows__Group__1 ;
    public final void rule__Rows__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9670:1: ( rule__Rows__Group__0__Impl rule__Rows__Group__1 )
            // InternalSQLParser.g:9671:2: rule__Rows__Group__0__Impl rule__Rows__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__Rows__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0"


    // $ANTLR start "rule__Rows__Group__0__Impl"
    // InternalSQLParser.g:9678:1: rule__Rows__Group__0__Impl : ( ruleRow ) ;
    public final void rule__Rows__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9682:1: ( ( ruleRow ) )
            // InternalSQLParser.g:9683:1: ( ruleRow )
            {
            // InternalSQLParser.g:9683:1: ( ruleRow )
            // InternalSQLParser.g:9684:2: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0__Impl"


    // $ANTLR start "rule__Rows__Group__1"
    // InternalSQLParser.g:9693:1: rule__Rows__Group__1 : rule__Rows__Group__1__Impl ;
    public final void rule__Rows__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9697:1: ( rule__Rows__Group__1__Impl )
            // InternalSQLParser.g:9698:2: rule__Rows__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1"


    // $ANTLR start "rule__Rows__Group__1__Impl"
    // InternalSQLParser.g:9704:1: rule__Rows__Group__1__Impl : ( ( rule__Rows__Group_1__0 )? ) ;
    public final void rule__Rows__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9708:1: ( ( ( rule__Rows__Group_1__0 )? ) )
            // InternalSQLParser.g:9709:1: ( ( rule__Rows__Group_1__0 )? )
            {
            // InternalSQLParser.g:9709:1: ( ( rule__Rows__Group_1__0 )? )
            // InternalSQLParser.g:9710:2: ( rule__Rows__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9711:2: ( rule__Rows__Group_1__0 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==Comma) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSQLParser.g:9711:3: rule__Rows__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Rows__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1__Impl"


    // $ANTLR start "rule__Rows__Group_1__0"
    // InternalSQLParser.g:9720:1: rule__Rows__Group_1__0 : rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 ;
    public final void rule__Rows__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9724:1: ( rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 )
            // InternalSQLParser.g:9725:2: rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__Rows__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0"


    // $ANTLR start "rule__Rows__Group_1__0__Impl"
    // InternalSQLParser.g:9732:1: rule__Rows__Group_1__0__Impl : ( () ) ;
    public final void rule__Rows__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9736:1: ( ( () ) )
            // InternalSQLParser.g:9737:1: ( () )
            {
            // InternalSQLParser.g:9737:1: ( () )
            // InternalSQLParser.g:9738:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9739:2: ()
            // InternalSQLParser.g:9739:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1__1"
    // InternalSQLParser.g:9747:1: rule__Rows__Group_1__1 : rule__Rows__Group_1__1__Impl ;
    public final void rule__Rows__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9751:1: ( rule__Rows__Group_1__1__Impl )
            // InternalSQLParser.g:9752:2: rule__Rows__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1"


    // $ANTLR start "rule__Rows__Group_1__1__Impl"
    // InternalSQLParser.g:9758:1: rule__Rows__Group_1__1__Impl : ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) ;
    public final void rule__Rows__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9762:1: ( ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:9763:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:9763:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            // InternalSQLParser.g:9764:2: ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:9764:2: ( ( rule__Rows__Group_1_1__0 ) )
            // InternalSQLParser.g:9765:3: ( rule__Rows__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9766:3: ( rule__Rows__Group_1_1__0 )
            // InternalSQLParser.g:9766:4: rule__Rows__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__Rows__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:9769:2: ( ( rule__Rows__Group_1_1__0 )* )
            // InternalSQLParser.g:9770:3: ( rule__Rows__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9771:3: ( rule__Rows__Group_1_1__0 )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==Comma) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalSQLParser.g:9771:4: rule__Rows__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__Rows__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__0"
    // InternalSQLParser.g:9781:1: rule__Rows__Group_1_1__0 : rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 ;
    public final void rule__Rows__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9785:1: ( rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 )
            // InternalSQLParser.g:9786:2: rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__Rows__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0"


    // $ANTLR start "rule__Rows__Group_1_1__0__Impl"
    // InternalSQLParser.g:9793:1: rule__Rows__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Rows__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9797:1: ( ( Comma ) )
            // InternalSQLParser.g:9798:1: ( Comma )
            {
            // InternalSQLParser.g:9798:1: ( Comma )
            // InternalSQLParser.g:9799:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__1"
    // InternalSQLParser.g:9808:1: rule__Rows__Group_1_1__1 : rule__Rows__Group_1_1__1__Impl ;
    public final void rule__Rows__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9812:1: ( rule__Rows__Group_1_1__1__Impl )
            // InternalSQLParser.g:9813:2: rule__Rows__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1"


    // $ANTLR start "rule__Rows__Group_1_1__1__Impl"
    // InternalSQLParser.g:9819:1: rule__Rows__Group_1_1__1__Impl : ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Rows__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9823:1: ( ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9824:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9824:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9825:2: ( rule__Rows__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9826:2: ( rule__Rows__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9826:3: rule__Rows__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Rows__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1__Impl"


    // $ANTLR start "rule__Row__Group__0"
    // InternalSQLParser.g:9835:1: rule__Row__Group__0 : rule__Row__Group__0__Impl rule__Row__Group__1 ;
    public final void rule__Row__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9839:1: ( rule__Row__Group__0__Impl rule__Row__Group__1 )
            // InternalSQLParser.g:9840:2: rule__Row__Group__0__Impl rule__Row__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__Row__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0"


    // $ANTLR start "rule__Row__Group__0__Impl"
    // InternalSQLParser.g:9847:1: rule__Row__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Row__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9851:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:9852:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:9852:1: ( LeftParenthesis )
            // InternalSQLParser.g:9853:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0__Impl"


    // $ANTLR start "rule__Row__Group__1"
    // InternalSQLParser.g:9862:1: rule__Row__Group__1 : rule__Row__Group__1__Impl rule__Row__Group__2 ;
    public final void rule__Row__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9866:1: ( rule__Row__Group__1__Impl rule__Row__Group__2 )
            // InternalSQLParser.g:9867:2: rule__Row__Group__1__Impl rule__Row__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__Row__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1"


    // $ANTLR start "rule__Row__Group__1__Impl"
    // InternalSQLParser.g:9874:1: rule__Row__Group__1__Impl : ( ( rule__Row__RowValuesAssignment_1 ) ) ;
    public final void rule__Row__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9878:1: ( ( ( rule__Row__RowValuesAssignment_1 ) ) )
            // InternalSQLParser.g:9879:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            {
            // InternalSQLParser.g:9879:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            // InternalSQLParser.g:9880:2: ( rule__Row__RowValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }
            // InternalSQLParser.g:9881:2: ( rule__Row__RowValuesAssignment_1 )
            // InternalSQLParser.g:9881:3: rule__Row__RowValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Row__RowValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1__Impl"


    // $ANTLR start "rule__Row__Group__2"
    // InternalSQLParser.g:9889:1: rule__Row__Group__2 : rule__Row__Group__2__Impl ;
    public final void rule__Row__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9893:1: ( rule__Row__Group__2__Impl )
            // InternalSQLParser.g:9894:2: rule__Row__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2"


    // $ANTLR start "rule__Row__Group__2__Impl"
    // InternalSQLParser.g:9900:1: rule__Row__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__Row__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9904:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:9905:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:9905:1: ( RightParenthesis )
            // InternalSQLParser.g:9906:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2__Impl"


    // $ANTLR start "rule__RowValues__Group__0"
    // InternalSQLParser.g:9916:1: rule__RowValues__Group__0 : rule__RowValues__Group__0__Impl rule__RowValues__Group__1 ;
    public final void rule__RowValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9920:1: ( rule__RowValues__Group__0__Impl rule__RowValues__Group__1 )
            // InternalSQLParser.g:9921:2: rule__RowValues__Group__0__Impl rule__RowValues__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__RowValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0"


    // $ANTLR start "rule__RowValues__Group__0__Impl"
    // InternalSQLParser.g:9928:1: rule__RowValues__Group__0__Impl : ( ruleRowValue ) ;
    public final void rule__RowValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9932:1: ( ( ruleRowValue ) )
            // InternalSQLParser.g:9933:1: ( ruleRowValue )
            {
            // InternalSQLParser.g:9933:1: ( ruleRowValue )
            // InternalSQLParser.g:9934:2: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0__Impl"


    // $ANTLR start "rule__RowValues__Group__1"
    // InternalSQLParser.g:9943:1: rule__RowValues__Group__1 : rule__RowValues__Group__1__Impl ;
    public final void rule__RowValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9947:1: ( rule__RowValues__Group__1__Impl )
            // InternalSQLParser.g:9948:2: rule__RowValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1"


    // $ANTLR start "rule__RowValues__Group__1__Impl"
    // InternalSQLParser.g:9954:1: rule__RowValues__Group__1__Impl : ( ( rule__RowValues__Group_1__0 )? ) ;
    public final void rule__RowValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9958:1: ( ( ( rule__RowValues__Group_1__0 )? ) )
            // InternalSQLParser.g:9959:1: ( ( rule__RowValues__Group_1__0 )? )
            {
            // InternalSQLParser.g:9959:1: ( ( rule__RowValues__Group_1__0 )? )
            // InternalSQLParser.g:9960:2: ( rule__RowValues__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9961:2: ( rule__RowValues__Group_1__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Comma) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSQLParser.g:9961:3: rule__RowValues__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValues__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1__0"
    // InternalSQLParser.g:9970:1: rule__RowValues__Group_1__0 : rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 ;
    public final void rule__RowValues__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9974:1: ( rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 )
            // InternalSQLParser.g:9975:2: rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__RowValues__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0"


    // $ANTLR start "rule__RowValues__Group_1__0__Impl"
    // InternalSQLParser.g:9982:1: rule__RowValues__Group_1__0__Impl : ( () ) ;
    public final void rule__RowValues__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9986:1: ( ( () ) )
            // InternalSQLParser.g:9987:1: ( () )
            {
            // InternalSQLParser.g:9987:1: ( () )
            // InternalSQLParser.g:9988:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9989:2: ()
            // InternalSQLParser.g:9989:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1__1"
    // InternalSQLParser.g:9997:1: rule__RowValues__Group_1__1 : rule__RowValues__Group_1__1__Impl ;
    public final void rule__RowValues__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10001:1: ( rule__RowValues__Group_1__1__Impl )
            // InternalSQLParser.g:10002:2: rule__RowValues__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1"


    // $ANTLR start "rule__RowValues__Group_1__1__Impl"
    // InternalSQLParser.g:10008:1: rule__RowValues__Group_1__1__Impl : ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) ;
    public final void rule__RowValues__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10012:1: ( ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10013:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10013:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10014:2: ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10014:2: ( ( rule__RowValues__Group_1_1__0 ) )
            // InternalSQLParser.g:10015:3: ( rule__RowValues__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10016:3: ( rule__RowValues__Group_1_1__0 )
            // InternalSQLParser.g:10016:4: rule__RowValues__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__RowValues__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10019:2: ( ( rule__RowValues__Group_1_1__0 )* )
            // InternalSQLParser.g:10020:3: ( rule__RowValues__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10021:3: ( rule__RowValues__Group_1_1__0 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==Comma) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalSQLParser.g:10021:4: rule__RowValues__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__RowValues__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__0"
    // InternalSQLParser.g:10031:1: rule__RowValues__Group_1_1__0 : rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 ;
    public final void rule__RowValues__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10035:1: ( rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 )
            // InternalSQLParser.g:10036:2: rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1
            {
            pushFollow(FOLLOW_54);
            rule__RowValues__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0"


    // $ANTLR start "rule__RowValues__Group_1_1__0__Impl"
    // InternalSQLParser.g:10043:1: rule__RowValues__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__RowValues__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10047:1: ( ( Comma ) )
            // InternalSQLParser.g:10048:1: ( Comma )
            {
            // InternalSQLParser.g:10048:1: ( Comma )
            // InternalSQLParser.g:10049:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__1"
    // InternalSQLParser.g:10058:1: rule__RowValues__Group_1_1__1 : rule__RowValues__Group_1_1__1__Impl ;
    public final void rule__RowValues__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10062:1: ( rule__RowValues__Group_1_1__1__Impl )
            // InternalSQLParser.g:10063:2: rule__RowValues__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1"


    // $ANTLR start "rule__RowValues__Group_1_1__1__Impl"
    // InternalSQLParser.g:10069:1: rule__RowValues__Group_1_1__1__Impl : ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__RowValues__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10073:1: ( ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10074:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10074:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10075:2: ( rule__RowValues__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10076:2: ( rule__RowValues__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10076:3: rule__RowValues__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__0"
    // InternalSQLParser.g:10085:1: rule__PivotTable__Group__0 : rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 ;
    public final void rule__PivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10089:1: ( rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 )
            // InternalSQLParser.g:10090:2: rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__PivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0"


    // $ANTLR start "rule__PivotTable__Group__0__Impl"
    // InternalSQLParser.g:10097:1: rule__PivotTable__Group__0__Impl : ( PIVOT ) ;
    public final void rule__PivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10101:1: ( ( PIVOT ) )
            // InternalSQLParser.g:10102:1: ( PIVOT )
            {
            // InternalSQLParser.g:10102:1: ( PIVOT )
            // InternalSQLParser.g:10103:2: PIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }
            match(input,PIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0__Impl"


    // $ANTLR start "rule__PivotTable__Group__1"
    // InternalSQLParser.g:10112:1: rule__PivotTable__Group__1 : rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 ;
    public final void rule__PivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10116:1: ( rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 )
            // InternalSQLParser.g:10117:2: rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__PivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1"


    // $ANTLR start "rule__PivotTable__Group__1__Impl"
    // InternalSQLParser.g:10124:1: rule__PivotTable__Group__1__Impl : ( ( XML )? ) ;
    public final void rule__PivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10128:1: ( ( ( XML )? ) )
            // InternalSQLParser.g:10129:1: ( ( XML )? )
            {
            // InternalSQLParser.g:10129:1: ( ( XML )? )
            // InternalSQLParser.g:10130:2: ( XML )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }
            // InternalSQLParser.g:10131:2: ( XML )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==XML) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSQLParser.g:10131:3: XML
                    {
                    match(input,XML,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__2"
    // InternalSQLParser.g:10139:1: rule__PivotTable__Group__2 : rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 ;
    public final void rule__PivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10143:1: ( rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 )
            // InternalSQLParser.g:10144:2: rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__PivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2"


    // $ANTLR start "rule__PivotTable__Group__2__Impl"
    // InternalSQLParser.g:10151:1: rule__PivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10155:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10156:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10156:1: ( LeftParenthesis )
            // InternalSQLParser.g:10157:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2__Impl"


    // $ANTLR start "rule__PivotTable__Group__3"
    // InternalSQLParser.g:10166:1: rule__PivotTable__Group__3 : rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 ;
    public final void rule__PivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10170:1: ( rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 )
            // InternalSQLParser.g:10171:2: rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4
            {
            pushFollow(FOLLOW_56);
            rule__PivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3"


    // $ANTLR start "rule__PivotTable__Group__3__Impl"
    // InternalSQLParser.g:10178:1: rule__PivotTable__Group__3__Impl : ( ( rule__PivotTable__PfunAssignment_3 ) ) ;
    public final void rule__PivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10182:1: ( ( ( rule__PivotTable__PfunAssignment_3 ) ) )
            // InternalSQLParser.g:10183:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            {
            // InternalSQLParser.g:10183:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            // InternalSQLParser.g:10184:2: ( rule__PivotTable__PfunAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }
            // InternalSQLParser.g:10185:2: ( rule__PivotTable__PfunAssignment_3 )
            // InternalSQLParser.g:10185:3: rule__PivotTable__PfunAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PfunAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3__Impl"


    // $ANTLR start "rule__PivotTable__Group__4"
    // InternalSQLParser.g:10193:1: rule__PivotTable__Group__4 : rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 ;
    public final void rule__PivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10197:1: ( rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 )
            // InternalSQLParser.g:10198:2: rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5
            {
            pushFollow(FOLLOW_57);
            rule__PivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4"


    // $ANTLR start "rule__PivotTable__Group__4__Impl"
    // InternalSQLParser.g:10205:1: rule__PivotTable__Group__4__Impl : ( ( rule__PivotTable__PforAssignment_4 ) ) ;
    public final void rule__PivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10209:1: ( ( ( rule__PivotTable__PforAssignment_4 ) ) )
            // InternalSQLParser.g:10210:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            {
            // InternalSQLParser.g:10210:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            // InternalSQLParser.g:10211:2: ( rule__PivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSQLParser.g:10212:2: ( rule__PivotTable__PforAssignment_4 )
            // InternalSQLParser.g:10212:3: rule__PivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4__Impl"


    // $ANTLR start "rule__PivotTable__Group__5"
    // InternalSQLParser.g:10220:1: rule__PivotTable__Group__5 : rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 ;
    public final void rule__PivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10224:1: ( rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 )
            // InternalSQLParser.g:10225:2: rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6
            {
            pushFollow(FOLLOW_11);
            rule__PivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5"


    // $ANTLR start "rule__PivotTable__Group__5__Impl"
    // InternalSQLParser.g:10232:1: rule__PivotTable__Group__5__Impl : ( ( rule__PivotTable__PinAssignment_5 ) ) ;
    public final void rule__PivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10236:1: ( ( ( rule__PivotTable__PinAssignment_5 ) ) )
            // InternalSQLParser.g:10237:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            {
            // InternalSQLParser.g:10237:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            // InternalSQLParser.g:10238:2: ( rule__PivotTable__PinAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }
            // InternalSQLParser.g:10239:2: ( rule__PivotTable__PinAssignment_5 )
            // InternalSQLParser.g:10239:3: rule__PivotTable__PinAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PinAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5__Impl"


    // $ANTLR start "rule__PivotTable__Group__6"
    // InternalSQLParser.g:10247:1: rule__PivotTable__Group__6 : rule__PivotTable__Group__6__Impl ;
    public final void rule__PivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10251:1: ( rule__PivotTable__Group__6__Impl )
            // InternalSQLParser.g:10252:2: rule__PivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6"


    // $ANTLR start "rule__PivotTable__Group__6__Impl"
    // InternalSQLParser.g:10258:1: rule__PivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__PivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10262:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:10263:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:10263:1: ( RightParenthesis )
            // InternalSQLParser.g:10264:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6__Impl"


    // $ANTLR start "rule__PivotInClause__Group__0"
    // InternalSQLParser.g:10274:1: rule__PivotInClause__Group__0 : rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 ;
    public final void rule__PivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10278:1: ( rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 )
            // InternalSQLParser.g:10279:2: rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__PivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0"


    // $ANTLR start "rule__PivotInClause__Group__0__Impl"
    // InternalSQLParser.g:10286:1: rule__PivotInClause__Group__0__Impl : ( IN ) ;
    public final void rule__PivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10290:1: ( ( IN ) )
            // InternalSQLParser.g:10291:1: ( IN )
            {
            // InternalSQLParser.g:10291:1: ( IN )
            // InternalSQLParser.g:10292:2: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0__Impl"


    // $ANTLR start "rule__PivotInClause__Group__1"
    // InternalSQLParser.g:10301:1: rule__PivotInClause__Group__1 : rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 ;
    public final void rule__PivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10305:1: ( rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 )
            // InternalSQLParser.g:10306:2: rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2
            {
            pushFollow(FOLLOW_58);
            rule__PivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1"


    // $ANTLR start "rule__PivotInClause__Group__1__Impl"
    // InternalSQLParser.g:10313:1: rule__PivotInClause__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10317:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10318:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10318:1: ( LeftParenthesis )
            // InternalSQLParser.g:10319:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1__Impl"


    // $ANTLR start "rule__PivotInClause__Group__2"
    // InternalSQLParser.g:10328:1: rule__PivotInClause__Group__2 : rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 ;
    public final void rule__PivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10332:1: ( rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 )
            // InternalSQLParser.g:10333:2: rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__PivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2"


    // $ANTLR start "rule__PivotInClause__Group__2__Impl"
    // InternalSQLParser.g:10340:1: rule__PivotInClause__Group__2__Impl : ( ( rule__PivotInClause__Alternatives_2 ) ) ;
    public final void rule__PivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10344:1: ( ( ( rule__PivotInClause__Alternatives_2 ) ) )
            // InternalSQLParser.g:10345:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            {
            // InternalSQLParser.g:10345:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            // InternalSQLParser.g:10346:2: ( rule__PivotInClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:10347:2: ( rule__PivotInClause__Alternatives_2 )
            // InternalSQLParser.g:10347:3: rule__PivotInClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2__Impl"


    // $ANTLR start "rule__PivotInClause__Group__3"
    // InternalSQLParser.g:10355:1: rule__PivotInClause__Group__3 : rule__PivotInClause__Group__3__Impl ;
    public final void rule__PivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10359:1: ( rule__PivotInClause__Group__3__Impl )
            // InternalSQLParser.g:10360:2: rule__PivotInClause__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3"


    // $ANTLR start "rule__PivotInClause__Group__3__Impl"
    // InternalSQLParser.g:10366:1: rule__PivotInClause__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__PivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10370:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:10371:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:10371:1: ( RightParenthesis )
            // InternalSQLParser.g:10372:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__0"
    // InternalSQLParser.g:10382:1: rule__PivotInClauseAny__Group__0 : rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 ;
    public final void rule__PivotInClauseAny__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10386:1: ( rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 )
            // InternalSQLParser.g:10387:2: rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__PivotInClauseAny__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0"


    // $ANTLR start "rule__PivotInClauseAny__Group__0__Impl"
    // InternalSQLParser.g:10394:1: rule__PivotInClauseAny__Group__0__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10398:1: ( ( ANY ) )
            // InternalSQLParser.g:10399:1: ( ANY )
            {
            // InternalSQLParser.g:10399:1: ( ANY )
            // InternalSQLParser.g:10400:2: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__1"
    // InternalSQLParser.g:10409:1: rule__PivotInClauseAny__Group__1 : rule__PivotInClauseAny__Group__1__Impl ;
    public final void rule__PivotInClauseAny__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10413:1: ( rule__PivotInClauseAny__Group__1__Impl )
            // InternalSQLParser.g:10414:2: rule__PivotInClauseAny__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1"


    // $ANTLR start "rule__PivotInClauseAny__Group__1__Impl"
    // InternalSQLParser.g:10420:1: rule__PivotInClauseAny__Group__1__Impl : ( ( rule__PivotInClauseAny__Group_1__0 )* ) ;
    public final void rule__PivotInClauseAny__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10424:1: ( ( ( rule__PivotInClauseAny__Group_1__0 )* ) )
            // InternalSQLParser.g:10425:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            {
            // InternalSQLParser.g:10425:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            // InternalSQLParser.g:10426:2: ( rule__PivotInClauseAny__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10427:2: ( rule__PivotInClauseAny__Group_1__0 )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==Comma) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalSQLParser.g:10427:3: rule__PivotInClauseAny__Group_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__PivotInClauseAny__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0"
    // InternalSQLParser.g:10436:1: rule__PivotInClauseAny__Group_1__0 : rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 ;
    public final void rule__PivotInClauseAny__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10440:1: ( rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 )
            // InternalSQLParser.g:10441:2: rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1
            {
            pushFollow(FOLLOW_59);
            rule__PivotInClauseAny__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0__Impl"
    // InternalSQLParser.g:10448:1: rule__PivotInClauseAny__Group_1__0__Impl : ( Comma ) ;
    public final void rule__PivotInClauseAny__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10452:1: ( ( Comma ) )
            // InternalSQLParser.g:10453:1: ( Comma )
            {
            // InternalSQLParser.g:10453:1: ( Comma )
            // InternalSQLParser.g:10454:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1"
    // InternalSQLParser.g:10463:1: rule__PivotInClauseAny__Group_1__1 : rule__PivotInClauseAny__Group_1__1__Impl ;
    public final void rule__PivotInClauseAny__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10467:1: ( rule__PivotInClauseAny__Group_1__1__Impl )
            // InternalSQLParser.g:10468:2: rule__PivotInClauseAny__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1__Impl"
    // InternalSQLParser.g:10474:1: rule__PivotInClauseAny__Group_1__1__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10478:1: ( ( ANY ) )
            // InternalSQLParser.g:10479:1: ( ANY )
            {
            // InternalSQLParser.g:10479:1: ( ANY )
            // InternalSQLParser.g:10480:2: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__0"
    // InternalSQLParser.g:10490:1: rule__UnpivotTable__Group__0 : rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 ;
    public final void rule__UnpivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10494:1: ( rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 )
            // InternalSQLParser.g:10495:2: rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__UnpivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0"


    // $ANTLR start "rule__UnpivotTable__Group__0__Impl"
    // InternalSQLParser.g:10502:1: rule__UnpivotTable__Group__0__Impl : ( UNPIVOT ) ;
    public final void rule__UnpivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10506:1: ( ( UNPIVOT ) )
            // InternalSQLParser.g:10507:1: ( UNPIVOT )
            {
            // InternalSQLParser.g:10507:1: ( UNPIVOT )
            // InternalSQLParser.g:10508:2: UNPIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }
            match(input,UNPIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__1"
    // InternalSQLParser.g:10517:1: rule__UnpivotTable__Group__1 : rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 ;
    public final void rule__UnpivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10521:1: ( rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 )
            // InternalSQLParser.g:10522:2: rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2
            {
            pushFollow(FOLLOW_60);
            rule__UnpivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1"


    // $ANTLR start "rule__UnpivotTable__Group__1__Impl"
    // InternalSQLParser.g:10529:1: rule__UnpivotTable__Group__1__Impl : ( ( rule__UnpivotTable__Group_1__0 )? ) ;
    public final void rule__UnpivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10533:1: ( ( ( rule__UnpivotTable__Group_1__0 )? ) )
            // InternalSQLParser.g:10534:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            {
            // InternalSQLParser.g:10534:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            // InternalSQLParser.g:10535:2: ( rule__UnpivotTable__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10536:2: ( rule__UnpivotTable__Group_1__0 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==EXCLUDE||LA110_0==INCLUDE) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSQLParser.g:10536:3: rule__UnpivotTable__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotTable__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__2"
    // InternalSQLParser.g:10544:1: rule__UnpivotTable__Group__2 : rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 ;
    public final void rule__UnpivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10548:1: ( rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 )
            // InternalSQLParser.g:10549:2: rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__UnpivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2"


    // $ANTLR start "rule__UnpivotTable__Group__2__Impl"
    // InternalSQLParser.g:10556:1: rule__UnpivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10560:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10561:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10561:1: ( LeftParenthesis )
            // InternalSQLParser.g:10562:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__3"
    // InternalSQLParser.g:10571:1: rule__UnpivotTable__Group__3 : rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 ;
    public final void rule__UnpivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10575:1: ( rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 )
            // InternalSQLParser.g:10576:2: rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4
            {
            pushFollow(FOLLOW_56);
            rule__UnpivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3"


    // $ANTLR start "rule__UnpivotTable__Group__3__Impl"
    // InternalSQLParser.g:10583:1: rule__UnpivotTable__Group__3__Impl : ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) ;
    public final void rule__UnpivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10587:1: ( ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) )
            // InternalSQLParser.g:10588:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            {
            // InternalSQLParser.g:10588:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            // InternalSQLParser.g:10589:2: ( rule__UnpivotTable__PcolsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }
            // InternalSQLParser.g:10590:2: ( rule__UnpivotTable__PcolsAssignment_3 )
            // InternalSQLParser.g:10590:3: rule__UnpivotTable__PcolsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PcolsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__4"
    // InternalSQLParser.g:10598:1: rule__UnpivotTable__Group__4 : rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 ;
    public final void rule__UnpivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10602:1: ( rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 )
            // InternalSQLParser.g:10603:2: rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5
            {
            pushFollow(FOLLOW_57);
            rule__UnpivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4"


    // $ANTLR start "rule__UnpivotTable__Group__4__Impl"
    // InternalSQLParser.g:10610:1: rule__UnpivotTable__Group__4__Impl : ( ( rule__UnpivotTable__PforAssignment_4 ) ) ;
    public final void rule__UnpivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10614:1: ( ( ( rule__UnpivotTable__PforAssignment_4 ) ) )
            // InternalSQLParser.g:10615:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            {
            // InternalSQLParser.g:10615:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            // InternalSQLParser.g:10616:2: ( rule__UnpivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSQLParser.g:10617:2: ( rule__UnpivotTable__PforAssignment_4 )
            // InternalSQLParser.g:10617:3: rule__UnpivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__5"
    // InternalSQLParser.g:10625:1: rule__UnpivotTable__Group__5 : rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 ;
    public final void rule__UnpivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10629:1: ( rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 )
            // InternalSQLParser.g:10630:2: rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6
            {
            pushFollow(FOLLOW_11);
            rule__UnpivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5"


    // $ANTLR start "rule__UnpivotTable__Group__5__Impl"
    // InternalSQLParser.g:10637:1: rule__UnpivotTable__Group__5__Impl : ( ( rule__UnpivotTable__InopAssignment_5 ) ) ;
    public final void rule__UnpivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10641:1: ( ( ( rule__UnpivotTable__InopAssignment_5 ) ) )
            // InternalSQLParser.g:10642:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            {
            // InternalSQLParser.g:10642:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            // InternalSQLParser.g:10643:2: ( rule__UnpivotTable__InopAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }
            // InternalSQLParser.g:10644:2: ( rule__UnpivotTable__InopAssignment_5 )
            // InternalSQLParser.g:10644:3: rule__UnpivotTable__InopAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__InopAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__6"
    // InternalSQLParser.g:10652:1: rule__UnpivotTable__Group__6 : rule__UnpivotTable__Group__6__Impl ;
    public final void rule__UnpivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10656:1: ( rule__UnpivotTable__Group__6__Impl )
            // InternalSQLParser.g:10657:2: rule__UnpivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6"


    // $ANTLR start "rule__UnpivotTable__Group__6__Impl"
    // InternalSQLParser.g:10663:1: rule__UnpivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10667:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:10668:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:10668:1: ( RightParenthesis )
            // InternalSQLParser.g:10669:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__0"
    // InternalSQLParser.g:10679:1: rule__UnpivotTable__Group_1__0 : rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 ;
    public final void rule__UnpivotTable__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10683:1: ( rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 )
            // InternalSQLParser.g:10684:2: rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1
            {
            pushFollow(FOLLOW_61);
            rule__UnpivotTable__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0"


    // $ANTLR start "rule__UnpivotTable__Group_1__0__Impl"
    // InternalSQLParser.g:10691:1: rule__UnpivotTable__Group_1__0__Impl : ( ( rule__UnpivotTable__Alternatives_1_0 ) ) ;
    public final void rule__UnpivotTable__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10695:1: ( ( ( rule__UnpivotTable__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:10696:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:10696:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            // InternalSQLParser.g:10697:2: ( rule__UnpivotTable__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:10698:2: ( rule__UnpivotTable__Alternatives_1_0 )
            // InternalSQLParser.g:10698:3: rule__UnpivotTable__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__1"
    // InternalSQLParser.g:10706:1: rule__UnpivotTable__Group_1__1 : rule__UnpivotTable__Group_1__1__Impl ;
    public final void rule__UnpivotTable__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10710:1: ( rule__UnpivotTable__Group_1__1__Impl )
            // InternalSQLParser.g:10711:2: rule__UnpivotTable__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1"


    // $ANTLR start "rule__UnpivotTable__Group_1__1__Impl"
    // InternalSQLParser.g:10717:1: rule__UnpivotTable__Group_1__1__Impl : ( NULLS ) ;
    public final void rule__UnpivotTable__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10721:1: ( ( NULLS ) )
            // InternalSQLParser.g:10722:1: ( NULLS )
            {
            // InternalSQLParser.g:10722:1: ( NULLS )
            // InternalSQLParser.g:10723:2: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__0"
    // InternalSQLParser.g:10733:1: rule__UnpivotInClause__Group__0 : rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 ;
    public final void rule__UnpivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10737:1: ( rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 )
            // InternalSQLParser.g:10738:2: rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__UnpivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0"


    // $ANTLR start "rule__UnpivotInClause__Group__0__Impl"
    // InternalSQLParser.g:10745:1: rule__UnpivotInClause__Group__0__Impl : ( () ) ;
    public final void rule__UnpivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10749:1: ( ( () ) )
            // InternalSQLParser.g:10750:1: ( () )
            {
            // InternalSQLParser.g:10750:1: ( () )
            // InternalSQLParser.g:10751:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }
            // InternalSQLParser.g:10752:2: ()
            // InternalSQLParser.g:10752:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__1"
    // InternalSQLParser.g:10760:1: rule__UnpivotInClause__Group__1 : rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 ;
    public final void rule__UnpivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10764:1: ( rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 )
            // InternalSQLParser.g:10765:2: rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__UnpivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1"


    // $ANTLR start "rule__UnpivotInClause__Group__1__Impl"
    // InternalSQLParser.g:10772:1: rule__UnpivotInClause__Group__1__Impl : ( ( rule__UnpivotInClause__OpAssignment_1 ) ) ;
    public final void rule__UnpivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10776:1: ( ( ( rule__UnpivotInClause__OpAssignment_1 ) ) )
            // InternalSQLParser.g:10777:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:10777:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            // InternalSQLParser.g:10778:2: ( rule__UnpivotInClause__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:10779:2: ( rule__UnpivotInClause__OpAssignment_1 )
            // InternalSQLParser.g:10779:3: rule__UnpivotInClause__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__2"
    // InternalSQLParser.g:10787:1: rule__UnpivotInClause__Group__2 : rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 ;
    public final void rule__UnpivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10791:1: ( rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 )
            // InternalSQLParser.g:10792:2: rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__UnpivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2"


    // $ANTLR start "rule__UnpivotInClause__Group__2__Impl"
    // InternalSQLParser.g:10799:1: rule__UnpivotInClause__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10803:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10804:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10804:1: ( LeftParenthesis )
            // InternalSQLParser.g:10805:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__3"
    // InternalSQLParser.g:10814:1: rule__UnpivotInClause__Group__3 : rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 ;
    public final void rule__UnpivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10818:1: ( rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 )
            // InternalSQLParser.g:10819:2: rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__UnpivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3"


    // $ANTLR start "rule__UnpivotInClause__Group__3__Impl"
    // InternalSQLParser.g:10826:1: rule__UnpivotInClause__Group__3__Impl : ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) ;
    public final void rule__UnpivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10830:1: ( ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) )
            // InternalSQLParser.g:10831:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            {
            // InternalSQLParser.g:10831:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            // InternalSQLParser.g:10832:2: ( rule__UnpivotInClause__ArgsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }
            // InternalSQLParser.g:10833:2: ( rule__UnpivotInClause__ArgsAssignment_3 )
            // InternalSQLParser.g:10833:3: rule__UnpivotInClause__ArgsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__ArgsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__4"
    // InternalSQLParser.g:10841:1: rule__UnpivotInClause__Group__4 : rule__UnpivotInClause__Group__4__Impl ;
    public final void rule__UnpivotInClause__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10845:1: ( rule__UnpivotInClause__Group__4__Impl )
            // InternalSQLParser.g:10846:2: rule__UnpivotInClause__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4"


    // $ANTLR start "rule__UnpivotInClause__Group__4__Impl"
    // InternalSQLParser.g:10852:1: rule__UnpivotInClause__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotInClause__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10856:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:10857:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:10857:1: ( RightParenthesis )
            // InternalSQLParser.g:10858:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0"
    // InternalSQLParser.g:10868:1: rule__UnpivotInClauseArgs__Group__0 : rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 ;
    public final void rule__UnpivotInClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10872:1: ( rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 )
            // InternalSQLParser.g:10873:2: rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__UnpivotInClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0__Impl"
    // InternalSQLParser.g:10880:1: rule__UnpivotInClauseArgs__Group__0__Impl : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10884:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSQLParser.g:10885:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSQLParser.g:10885:1: ( ruleUnpivotInClauseArg )
            // InternalSQLParser.g:10886:2: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1"
    // InternalSQLParser.g:10895:1: rule__UnpivotInClauseArgs__Group__1 : rule__UnpivotInClauseArgs__Group__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10899:1: ( rule__UnpivotInClauseArgs__Group__1__Impl )
            // InternalSQLParser.g:10900:2: rule__UnpivotInClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1__Impl"
    // InternalSQLParser.g:10906:1: rule__UnpivotInClauseArgs__Group__1__Impl : ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10910:1: ( ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:10911:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:10911:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            // InternalSQLParser.g:10912:2: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10913:2: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==Comma) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalSQLParser.g:10913:3: rule__UnpivotInClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0"
    // InternalSQLParser.g:10922:1: rule__UnpivotInClauseArgs__Group_1__0 : rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10926:1: ( rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 )
            // InternalSQLParser.g:10927:2: rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__UnpivotInClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0__Impl"
    // InternalSQLParser.g:10934:1: rule__UnpivotInClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10938:1: ( ( () ) )
            // InternalSQLParser.g:10939:1: ( () )
            {
            // InternalSQLParser.g:10939:1: ( () )
            // InternalSQLParser.g:10940:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10941:2: ()
            // InternalSQLParser.g:10941:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1"
    // InternalSQLParser.g:10949:1: rule__UnpivotInClauseArgs__Group_1__1 : rule__UnpivotInClauseArgs__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10953:1: ( rule__UnpivotInClauseArgs__Group_1__1__Impl )
            // InternalSQLParser.g:10954:2: rule__UnpivotInClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1__Impl"
    // InternalSQLParser.g:10960:1: rule__UnpivotInClauseArgs__Group_1__1__Impl : ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10964:1: ( ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10965:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10965:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10966:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10966:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:10967:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10968:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            // InternalSQLParser.g:10968:4: rule__UnpivotInClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__UnpivotInClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10971:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:10972:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10973:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==Comma) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalSQLParser.g:10973:4: rule__UnpivotInClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__UnpivotInClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0"
    // InternalSQLParser.g:10983:1: rule__UnpivotInClauseArgs__Group_1_1__0 : rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10987:1: ( rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 )
            // InternalSQLParser.g:10988:2: rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_5);
            rule__UnpivotInClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:10995:1: rule__UnpivotInClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10999:1: ( ( Comma ) )
            // InternalSQLParser.g:11000:1: ( Comma )
            {
            // InternalSQLParser.g:11000:1: ( Comma )
            // InternalSQLParser.g:11001:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1"
    // InternalSQLParser.g:11010:1: rule__UnpivotInClauseArgs__Group_1_1__1 : rule__UnpivotInClauseArgs__Group_1_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11014:1: ( rule__UnpivotInClauseArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:11015:2: rule__UnpivotInClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:11021:1: rule__UnpivotInClauseArgs__Group_1_1__1__Impl : ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11025:1: ( ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:11026:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:11026:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:11027:2: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:11028:2: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:11028:3: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0"
    // InternalSQLParser.g:11037:1: rule__UnpivotInClauseArg__Group__0 : rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 ;
    public final void rule__UnpivotInClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11041:1: ( rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 )
            // InternalSQLParser.g:11042:2: rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__UnpivotInClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0__Impl"
    // InternalSQLParser.g:11049:1: rule__UnpivotInClauseArg__Group__0__Impl : ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) ;
    public final void rule__UnpivotInClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11053:1: ( ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) )
            // InternalSQLParser.g:11054:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            {
            // InternalSQLParser.g:11054:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            // InternalSQLParser.g:11055:2: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }
            // InternalSQLParser.g:11056:2: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            // InternalSQLParser.g:11056:3: rule__UnpivotInClauseArg__PcolsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__PcolsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1"
    // InternalSQLParser.g:11064:1: rule__UnpivotInClauseArg__Group__1 : rule__UnpivotInClauseArg__Group__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11068:1: ( rule__UnpivotInClauseArg__Group__1__Impl )
            // InternalSQLParser.g:11069:2: rule__UnpivotInClauseArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1__Impl"
    // InternalSQLParser.g:11075:1: rule__UnpivotInClauseArg__Group__1__Impl : ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11079:1: ( ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) )
            // InternalSQLParser.g:11080:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            {
            // InternalSQLParser.g:11080:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            // InternalSQLParser.g:11081:2: ( rule__UnpivotInClauseArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11082:2: ( rule__UnpivotInClauseArg__Group_1__0 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==AS) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSQLParser.g:11082:3: rule__UnpivotInClauseArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0"
    // InternalSQLParser.g:11091:1: rule__UnpivotInClauseArg__Group_1__0 : rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 ;
    public final void rule__UnpivotInClauseArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11095:1: ( rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 )
            // InternalSQLParser.g:11096:2: rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1
            {
            pushFollow(FOLLOW_5);
            rule__UnpivotInClauseArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0__Impl"
    // InternalSQLParser.g:11103:1: rule__UnpivotInClauseArg__Group_1__0__Impl : ( AS ) ;
    public final void rule__UnpivotInClauseArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11107:1: ( ( AS ) )
            // InternalSQLParser.g:11108:1: ( AS )
            {
            // InternalSQLParser.g:11108:1: ( AS )
            // InternalSQLParser.g:11109:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1"
    // InternalSQLParser.g:11118:1: rule__UnpivotInClauseArg__Group_1__1 : rule__UnpivotInClauseArg__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11122:1: ( rule__UnpivotInClauseArg__Group_1__1__Impl )
            // InternalSQLParser.g:11123:2: rule__UnpivotInClauseArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1__Impl"
    // InternalSQLParser.g:11129:1: rule__UnpivotInClauseArg__Group_1__1__Impl : ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) ;
    public final void rule__UnpivotInClauseArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11133:1: ( ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) )
            // InternalSQLParser.g:11134:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            {
            // InternalSQLParser.g:11134:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            // InternalSQLParser.g:11135:2: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }
            // InternalSQLParser.g:11136:2: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            // InternalSQLParser.g:11136:3: rule__UnpivotInClauseArg__CfulsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__CfulsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group__0"
    // InternalSQLParser.g:11145:1: rule__PivotForClause__Group__0 : rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 ;
    public final void rule__PivotForClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11149:1: ( rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 )
            // InternalSQLParser.g:11150:2: rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__PivotForClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0"


    // $ANTLR start "rule__PivotForClause__Group__0__Impl"
    // InternalSQLParser.g:11157:1: rule__PivotForClause__Group__0__Impl : ( FOR ) ;
    public final void rule__PivotForClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11161:1: ( ( FOR ) )
            // InternalSQLParser.g:11162:1: ( FOR )
            {
            // InternalSQLParser.g:11162:1: ( FOR )
            // InternalSQLParser.g:11163:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group__1"
    // InternalSQLParser.g:11172:1: rule__PivotForClause__Group__1 : rule__PivotForClause__Group__1__Impl ;
    public final void rule__PivotForClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11176:1: ( rule__PivotForClause__Group__1__Impl )
            // InternalSQLParser.g:11177:2: rule__PivotForClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1"


    // $ANTLR start "rule__PivotForClause__Group__1__Impl"
    // InternalSQLParser.g:11183:1: rule__PivotForClause__Group__1__Impl : ( ( rule__PivotForClause__Alternatives_1 ) ) ;
    public final void rule__PivotForClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11187:1: ( ( ( rule__PivotForClause__Alternatives_1 ) ) )
            // InternalSQLParser.g:11188:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            {
            // InternalSQLParser.g:11188:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            // InternalSQLParser.g:11189:2: ( rule__PivotForClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:11190:2: ( rule__PivotForClause__Alternatives_1 )
            // InternalSQLParser.g:11190:3: rule__PivotForClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0"
    // InternalSQLParser.g:11199:1: rule__PivotForClause__Group_1_1__0 : rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 ;
    public final void rule__PivotForClause__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11203:1: ( rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 )
            // InternalSQLParser.g:11204:2: rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1
            {
            pushFollow(FOLLOW_6);
            rule__PivotForClause__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0__Impl"
    // InternalSQLParser.g:11211:1: rule__PivotForClause__Group_1_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11215:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:11216:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:11216:1: ( LeftParenthesis )
            // InternalSQLParser.g:11217:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1"
    // InternalSQLParser.g:11226:1: rule__PivotForClause__Group_1_1__1 : rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 ;
    public final void rule__PivotForClause__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11230:1: ( rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 )
            // InternalSQLParser.g:11231:2: rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__PivotForClause__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1__Impl"
    // InternalSQLParser.g:11238:1: rule__PivotForClause__Group_1_1__1__Impl : ( ruleColumns ) ;
    public final void rule__PivotForClause__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11242:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:11243:1: ( ruleColumns )
            {
            // InternalSQLParser.g:11243:1: ( ruleColumns )
            // InternalSQLParser.g:11244:2: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2"
    // InternalSQLParser.g:11253:1: rule__PivotForClause__Group_1_1__2 : rule__PivotForClause__Group_1_1__2__Impl ;
    public final void rule__PivotForClause__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11257:1: ( rule__PivotForClause__Group_1_1__2__Impl )
            // InternalSQLParser.g:11258:2: rule__PivotForClause__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2__Impl"
    // InternalSQLParser.g:11264:1: rule__PivotForClause__Group_1_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11268:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11269:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11269:1: ( RightParenthesis )
            // InternalSQLParser.g:11270:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__0"
    // InternalSQLParser.g:11280:1: rule__PivotColumns__Group_1__0 : rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 ;
    public final void rule__PivotColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11284:1: ( rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 )
            // InternalSQLParser.g:11285:2: rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1
            {
            pushFollow(FOLLOW_24);
            rule__PivotColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0"


    // $ANTLR start "rule__PivotColumns__Group_1__0__Impl"
    // InternalSQLParser.g:11292:1: rule__PivotColumns__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11296:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:11297:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:11297:1: ( LeftParenthesis )
            // InternalSQLParser.g:11298:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__1"
    // InternalSQLParser.g:11307:1: rule__PivotColumns__Group_1__1 : rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 ;
    public final void rule__PivotColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11311:1: ( rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 )
            // InternalSQLParser.g:11312:2: rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2
            {
            pushFollow(FOLLOW_11);
            rule__PivotColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1"


    // $ANTLR start "rule__PivotColumns__Group_1__1__Impl"
    // InternalSQLParser.g:11319:1: rule__PivotColumns__Group_1__1__Impl : ( rulePivotCols ) ;
    public final void rule__PivotColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11323:1: ( ( rulePivotCols ) )
            // InternalSQLParser.g:11324:1: ( rulePivotCols )
            {
            // InternalSQLParser.g:11324:1: ( rulePivotCols )
            // InternalSQLParser.g:11325:2: rulePivotCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__2"
    // InternalSQLParser.g:11334:1: rule__PivotColumns__Group_1__2 : rule__PivotColumns__Group_1__2__Impl ;
    public final void rule__PivotColumns__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11338:1: ( rule__PivotColumns__Group_1__2__Impl )
            // InternalSQLParser.g:11339:2: rule__PivotColumns__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2"


    // $ANTLR start "rule__PivotColumns__Group_1__2__Impl"
    // InternalSQLParser.g:11345:1: rule__PivotColumns__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotColumns__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11349:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11350:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11350:1: ( RightParenthesis )
            // InternalSQLParser.g:11351:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2__Impl"


    // $ANTLR start "rule__PivotCols__Group__0"
    // InternalSQLParser.g:11361:1: rule__PivotCols__Group__0 : rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 ;
    public final void rule__PivotCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11365:1: ( rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 )
            // InternalSQLParser.g:11366:2: rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__PivotCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0"


    // $ANTLR start "rule__PivotCols__Group__0__Impl"
    // InternalSQLParser.g:11373:1: rule__PivotCols__Group__0__Impl : ( rulePivotCol ) ;
    public final void rule__PivotCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11377:1: ( ( rulePivotCol ) )
            // InternalSQLParser.g:11378:1: ( rulePivotCol )
            {
            // InternalSQLParser.g:11378:1: ( rulePivotCol )
            // InternalSQLParser.g:11379:2: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0__Impl"


    // $ANTLR start "rule__PivotCols__Group__1"
    // InternalSQLParser.g:11388:1: rule__PivotCols__Group__1 : rule__PivotCols__Group__1__Impl ;
    public final void rule__PivotCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11392:1: ( rule__PivotCols__Group__1__Impl )
            // InternalSQLParser.g:11393:2: rule__PivotCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1"


    // $ANTLR start "rule__PivotCols__Group__1__Impl"
    // InternalSQLParser.g:11399:1: rule__PivotCols__Group__1__Impl : ( ( rule__PivotCols__Group_1__0 )? ) ;
    public final void rule__PivotCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11403:1: ( ( ( rule__PivotCols__Group_1__0 )? ) )
            // InternalSQLParser.g:11404:1: ( ( rule__PivotCols__Group_1__0 )? )
            {
            // InternalSQLParser.g:11404:1: ( ( rule__PivotCols__Group_1__0 )? )
            // InternalSQLParser.g:11405:2: ( rule__PivotCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11406:2: ( rule__PivotCols__Group_1__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==Comma) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSQLParser.g:11406:3: rule__PivotCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__0"
    // InternalSQLParser.g:11415:1: rule__PivotCols__Group_1__0 : rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 ;
    public final void rule__PivotCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11419:1: ( rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 )
            // InternalSQLParser.g:11420:2: rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__PivotCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0"


    // $ANTLR start "rule__PivotCols__Group_1__0__Impl"
    // InternalSQLParser.g:11427:1: rule__PivotCols__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11431:1: ( ( () ) )
            // InternalSQLParser.g:11432:1: ( () )
            {
            // InternalSQLParser.g:11432:1: ( () )
            // InternalSQLParser.g:11433:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:11434:2: ()
            // InternalSQLParser.g:11434:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__1"
    // InternalSQLParser.g:11442:1: rule__PivotCols__Group_1__1 : rule__PivotCols__Group_1__1__Impl ;
    public final void rule__PivotCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11446:1: ( rule__PivotCols__Group_1__1__Impl )
            // InternalSQLParser.g:11447:2: rule__PivotCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1"


    // $ANTLR start "rule__PivotCols__Group_1__1__Impl"
    // InternalSQLParser.g:11453:1: rule__PivotCols__Group_1__1__Impl : ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11457:1: ( ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:11458:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:11458:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            // InternalSQLParser.g:11459:2: ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:11459:2: ( ( rule__PivotCols__Group_1_1__0 ) )
            // InternalSQLParser.g:11460:3: ( rule__PivotCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11461:3: ( rule__PivotCols__Group_1_1__0 )
            // InternalSQLParser.g:11461:4: rule__PivotCols__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__PivotCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:11464:2: ( ( rule__PivotCols__Group_1_1__0 )* )
            // InternalSQLParser.g:11465:3: ( rule__PivotCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11466:3: ( rule__PivotCols__Group_1_1__0 )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==Comma) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalSQLParser.g:11466:4: rule__PivotCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__PivotCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__0"
    // InternalSQLParser.g:11476:1: rule__PivotCols__Group_1_1__0 : rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 ;
    public final void rule__PivotCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11480:1: ( rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 )
            // InternalSQLParser.g:11481:2: rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__PivotCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0"


    // $ANTLR start "rule__PivotCols__Group_1_1__0__Impl"
    // InternalSQLParser.g:11488:1: rule__PivotCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__PivotCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11492:1: ( ( Comma ) )
            // InternalSQLParser.g:11493:1: ( Comma )
            {
            // InternalSQLParser.g:11493:1: ( Comma )
            // InternalSQLParser.g:11494:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__1"
    // InternalSQLParser.g:11503:1: rule__PivotCols__Group_1_1__1 : rule__PivotCols__Group_1_1__1__Impl ;
    public final void rule__PivotCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11507:1: ( rule__PivotCols__Group_1_1__1__Impl )
            // InternalSQLParser.g:11508:2: rule__PivotCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1"


    // $ANTLR start "rule__PivotCols__Group_1_1__1__Impl"
    // InternalSQLParser.g:11514:1: rule__PivotCols__Group_1_1__1__Impl : ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11518:1: ( ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:11519:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:11519:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:11520:2: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:11521:2: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:11521:3: rule__PivotCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group__0"
    // InternalSQLParser.g:11530:1: rule__PivotCol__Group__0 : rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 ;
    public final void rule__PivotCol__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11534:1: ( rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 )
            // InternalSQLParser.g:11535:2: rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__PivotCol__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0"


    // $ANTLR start "rule__PivotCol__Group__0__Impl"
    // InternalSQLParser.g:11542:1: rule__PivotCol__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11546:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:11547:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:11547:1: ( ruleDbObjectName )
            // InternalSQLParser.g:11548:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0__Impl"


    // $ANTLR start "rule__PivotCol__Group__1"
    // InternalSQLParser.g:11557:1: rule__PivotCol__Group__1 : rule__PivotCol__Group__1__Impl ;
    public final void rule__PivotCol__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11561:1: ( rule__PivotCol__Group__1__Impl )
            // InternalSQLParser.g:11562:2: rule__PivotCol__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1"


    // $ANTLR start "rule__PivotCol__Group__1__Impl"
    // InternalSQLParser.g:11568:1: rule__PivotCol__Group__1__Impl : ( ( rule__PivotCol__Group_1__0 )? ) ;
    public final void rule__PivotCol__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11572:1: ( ( ( rule__PivotCol__Group_1__0 )? ) )
            // InternalSQLParser.g:11573:1: ( ( rule__PivotCol__Group_1__0 )? )
            {
            // InternalSQLParser.g:11573:1: ( ( rule__PivotCol__Group_1__0 )? )
            // InternalSQLParser.g:11574:2: ( rule__PivotCol__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11575:2: ( rule__PivotCol__Group_1__0 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==FullStop) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSQLParser.g:11575:3: rule__PivotCol__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCol__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__0"
    // InternalSQLParser.g:11584:1: rule__PivotCol__Group_1__0 : rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 ;
    public final void rule__PivotCol__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11588:1: ( rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 )
            // InternalSQLParser.g:11589:2: rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1
            {
            pushFollow(FOLLOW_46);
            rule__PivotCol__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0"


    // $ANTLR start "rule__PivotCol__Group_1__0__Impl"
    // InternalSQLParser.g:11596:1: rule__PivotCol__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCol__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11600:1: ( ( () ) )
            // InternalSQLParser.g:11601:1: ( () )
            {
            // InternalSQLParser.g:11601:1: ( () )
            // InternalSQLParser.g:11602:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:11603:2: ()
            // InternalSQLParser.g:11603:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__1"
    // InternalSQLParser.g:11611:1: rule__PivotCol__Group_1__1 : rule__PivotCol__Group_1__1__Impl ;
    public final void rule__PivotCol__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11615:1: ( rule__PivotCol__Group_1__1__Impl )
            // InternalSQLParser.g:11616:2: rule__PivotCol__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1"


    // $ANTLR start "rule__PivotCol__Group_1__1__Impl"
    // InternalSQLParser.g:11622:1: rule__PivotCol__Group_1__1__Impl : ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCol__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11626:1: ( ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:11627:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:11627:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            // InternalSQLParser.g:11628:2: ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:11628:2: ( ( rule__PivotCol__Group_1_1__0 ) )
            // InternalSQLParser.g:11629:3: ( rule__PivotCol__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11630:3: ( rule__PivotCol__Group_1_1__0 )
            // InternalSQLParser.g:11630:4: rule__PivotCol__Group_1_1__0
            {
            pushFollow(FOLLOW_47);
            rule__PivotCol__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:11633:2: ( ( rule__PivotCol__Group_1_1__0 )* )
            // InternalSQLParser.g:11634:3: ( rule__PivotCol__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11635:3: ( rule__PivotCol__Group_1_1__0 )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==FullStop) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalSQLParser.g:11635:4: rule__PivotCol__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__PivotCol__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__0"
    // InternalSQLParser.g:11645:1: rule__PivotCol__Group_1_1__0 : rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 ;
    public final void rule__PivotCol__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11649:1: ( rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 )
            // InternalSQLParser.g:11650:2: rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__PivotCol__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0"


    // $ANTLR start "rule__PivotCol__Group_1_1__0__Impl"
    // InternalSQLParser.g:11657:1: rule__PivotCol__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__PivotCol__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11661:1: ( ( FullStop ) )
            // InternalSQLParser.g:11662:1: ( FullStop )
            {
            // InternalSQLParser.g:11662:1: ( FullStop )
            // InternalSQLParser.g:11663:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__1"
    // InternalSQLParser.g:11672:1: rule__PivotCol__Group_1_1__1 : rule__PivotCol__Group_1_1__1__Impl ;
    public final void rule__PivotCol__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11676:1: ( rule__PivotCol__Group_1_1__1__Impl )
            // InternalSQLParser.g:11677:2: rule__PivotCol__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1"


    // $ANTLR start "rule__PivotCol__Group_1_1__1__Impl"
    // InternalSQLParser.g:11683:1: rule__PivotCol__Group_1_1__1__Impl : ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCol__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11687:1: ( ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:11688:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:11688:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:11689:2: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:11690:2: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:11690:3: rule__PivotCol__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group__0"
    // InternalSQLParser.g:11699:1: rule__TableFull__Group__0 : rule__TableFull__Group__0__Impl rule__TableFull__Group__1 ;
    public final void rule__TableFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11703:1: ( rule__TableFull__Group__0__Impl rule__TableFull__Group__1 )
            // InternalSQLParser.g:11704:2: rule__TableFull__Group__0__Impl rule__TableFull__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__TableFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0"


    // $ANTLR start "rule__TableFull__Group__0__Impl"
    // InternalSQLParser.g:11711:1: rule__TableFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__TableFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11715:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:11716:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:11716:1: ( ruleDbObjectName )
            // InternalSQLParser.g:11717:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0__Impl"


    // $ANTLR start "rule__TableFull__Group__1"
    // InternalSQLParser.g:11726:1: rule__TableFull__Group__1 : rule__TableFull__Group__1__Impl ;
    public final void rule__TableFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11730:1: ( rule__TableFull__Group__1__Impl )
            // InternalSQLParser.g:11731:2: rule__TableFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1"


    // $ANTLR start "rule__TableFull__Group__1__Impl"
    // InternalSQLParser.g:11737:1: rule__TableFull__Group__1__Impl : ( ( rule__TableFull__Group_1__0 )? ) ;
    public final void rule__TableFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11741:1: ( ( ( rule__TableFull__Group_1__0 )? ) )
            // InternalSQLParser.g:11742:1: ( ( rule__TableFull__Group_1__0 )? )
            {
            // InternalSQLParser.g:11742:1: ( ( rule__TableFull__Group_1__0 )? )
            // InternalSQLParser.g:11743:2: ( rule__TableFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11744:2: ( rule__TableFull__Group_1__0 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==FullStop) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSQLParser.g:11744:3: rule__TableFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1__0"
    // InternalSQLParser.g:11753:1: rule__TableFull__Group_1__0 : rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 ;
    public final void rule__TableFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11757:1: ( rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 )
            // InternalSQLParser.g:11758:2: rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1
            {
            pushFollow(FOLLOW_46);
            rule__TableFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0"


    // $ANTLR start "rule__TableFull__Group_1__0__Impl"
    // InternalSQLParser.g:11765:1: rule__TableFull__Group_1__0__Impl : ( () ) ;
    public final void rule__TableFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11769:1: ( ( () ) )
            // InternalSQLParser.g:11770:1: ( () )
            {
            // InternalSQLParser.g:11770:1: ( () )
            // InternalSQLParser.g:11771:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:11772:2: ()
            // InternalSQLParser.g:11772:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1__1"
    // InternalSQLParser.g:11780:1: rule__TableFull__Group_1__1 : rule__TableFull__Group_1__1__Impl ;
    public final void rule__TableFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11784:1: ( rule__TableFull__Group_1__1__Impl )
            // InternalSQLParser.g:11785:2: rule__TableFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1"


    // $ANTLR start "rule__TableFull__Group_1__1__Impl"
    // InternalSQLParser.g:11791:1: rule__TableFull__Group_1__1__Impl : ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) ;
    public final void rule__TableFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11795:1: ( ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:11796:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:11796:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            // InternalSQLParser.g:11797:2: ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:11797:2: ( ( rule__TableFull__Group_1_1__0 ) )
            // InternalSQLParser.g:11798:3: ( rule__TableFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11799:3: ( rule__TableFull__Group_1_1__0 )
            // InternalSQLParser.g:11799:4: rule__TableFull__Group_1_1__0
            {
            pushFollow(FOLLOW_47);
            rule__TableFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:11802:2: ( ( rule__TableFull__Group_1_1__0 )* )
            // InternalSQLParser.g:11803:3: ( rule__TableFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11804:3: ( rule__TableFull__Group_1_1__0 )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==FullStop) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalSQLParser.g:11804:4: rule__TableFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_47);
            	    rule__TableFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__0"
    // InternalSQLParser.g:11814:1: rule__TableFull__Group_1_1__0 : rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 ;
    public final void rule__TableFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11818:1: ( rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 )
            // InternalSQLParser.g:11819:2: rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__TableFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0"


    // $ANTLR start "rule__TableFull__Group_1_1__0__Impl"
    // InternalSQLParser.g:11826:1: rule__TableFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__TableFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11830:1: ( ( FullStop ) )
            // InternalSQLParser.g:11831:1: ( FullStop )
            {
            // InternalSQLParser.g:11831:1: ( FullStop )
            // InternalSQLParser.g:11832:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__1"
    // InternalSQLParser.g:11841:1: rule__TableFull__Group_1_1__1 : rule__TableFull__Group_1_1__1__Impl ;
    public final void rule__TableFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11845:1: ( rule__TableFull__Group_1_1__1__Impl )
            // InternalSQLParser.g:11846:2: rule__TableFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1"


    // $ANTLR start "rule__TableFull__Group_1_1__1__Impl"
    // InternalSQLParser.g:11852:1: rule__TableFull__Group_1_1__1__Impl : ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__TableFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11856:1: ( ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:11857:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:11857:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:11858:2: ( rule__TableFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:11859:2: ( rule__TableFull__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:11859:3: rule__TableFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__0"
    // InternalSQLParser.g:11868:1: rule__DbObjectNameAll__Group__0 : rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 ;
    public final void rule__DbObjectNameAll__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11872:1: ( rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 )
            // InternalSQLParser.g:11873:2: rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__DbObjectNameAll__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0"


    // $ANTLR start "rule__DbObjectNameAll__Group__0__Impl"
    // InternalSQLParser.g:11880:1: rule__DbObjectNameAll__Group__0__Impl : ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) ;
    public final void rule__DbObjectNameAll__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11884:1: ( ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) )
            // InternalSQLParser.g:11885:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            {
            // InternalSQLParser.g:11885:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            // InternalSQLParser.g:11886:2: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }
            // InternalSQLParser.g:11887:2: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            // InternalSQLParser.g:11887:3: rule__DbObjectNameAll__DbnameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__DbnameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__1"
    // InternalSQLParser.g:11895:1: rule__DbObjectNameAll__Group__1 : rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 ;
    public final void rule__DbObjectNameAll__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11899:1: ( rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 )
            // InternalSQLParser.g:11900:2: rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2
            {
            pushFollow(FOLLOW_63);
            rule__DbObjectNameAll__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1"


    // $ANTLR start "rule__DbObjectNameAll__Group__1__Impl"
    // InternalSQLParser.g:11907:1: rule__DbObjectNameAll__Group__1__Impl : ( FullStop ) ;
    public final void rule__DbObjectNameAll__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11911:1: ( ( FullStop ) )
            // InternalSQLParser.g:11912:1: ( FullStop )
            {
            // InternalSQLParser.g:11912:1: ( FullStop )
            // InternalSQLParser.g:11913:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__2"
    // InternalSQLParser.g:11922:1: rule__DbObjectNameAll__Group__2 : rule__DbObjectNameAll__Group__2__Impl ;
    public final void rule__DbObjectNameAll__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11926:1: ( rule__DbObjectNameAll__Group__2__Impl )
            // InternalSQLParser.g:11927:2: rule__DbObjectNameAll__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2"


    // $ANTLR start "rule__DbObjectNameAll__Group__2__Impl"
    // InternalSQLParser.g:11933:1: rule__DbObjectNameAll__Group__2__Impl : ( RULE_STAR ) ;
    public final void rule__DbObjectNameAll__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11937:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:11938:1: ( RULE_STAR )
            {
            // InternalSQLParser.g:11938:1: ( RULE_STAR )
            // InternalSQLParser.g:11939:2: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__0"
    // InternalSQLParser.g:11949:1: rule__OrderByColumns__Group__0 : rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 ;
    public final void rule__OrderByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11953:1: ( rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 )
            // InternalSQLParser.g:11954:2: rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__OrderByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0"


    // $ANTLR start "rule__OrderByColumns__Group__0__Impl"
    // InternalSQLParser.g:11961:1: rule__OrderByColumns__Group__0__Impl : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11965:1: ( ( ruleOrderByColumnFull ) )
            // InternalSQLParser.g:11966:1: ( ruleOrderByColumnFull )
            {
            // InternalSQLParser.g:11966:1: ( ruleOrderByColumnFull )
            // InternalSQLParser.g:11967:2: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__1"
    // InternalSQLParser.g:11976:1: rule__OrderByColumns__Group__1 : rule__OrderByColumns__Group__1__Impl ;
    public final void rule__OrderByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11980:1: ( rule__OrderByColumns__Group__1__Impl )
            // InternalSQLParser.g:11981:2: rule__OrderByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1"


    // $ANTLR start "rule__OrderByColumns__Group__1__Impl"
    // InternalSQLParser.g:11987:1: rule__OrderByColumns__Group__1__Impl : ( ( rule__OrderByColumns__Group_1__0 )? ) ;
    public final void rule__OrderByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11991:1: ( ( ( rule__OrderByColumns__Group_1__0 )? ) )
            // InternalSQLParser.g:11992:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            {
            // InternalSQLParser.g:11992:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            // InternalSQLParser.g:11993:2: ( rule__OrderByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11994:2: ( rule__OrderByColumns__Group_1__0 )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==Comma) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalSQLParser.g:11994:3: rule__OrderByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__0"
    // InternalSQLParser.g:12003:1: rule__OrderByColumns__Group_1__0 : rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 ;
    public final void rule__OrderByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12007:1: ( rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 )
            // InternalSQLParser.g:12008:2: rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__OrderByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1__0__Impl"
    // InternalSQLParser.g:12015:1: rule__OrderByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12019:1: ( ( () ) )
            // InternalSQLParser.g:12020:1: ( () )
            {
            // InternalSQLParser.g:12020:1: ( () )
            // InternalSQLParser.g:12021:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:12022:2: ()
            // InternalSQLParser.g:12022:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__1"
    // InternalSQLParser.g:12030:1: rule__OrderByColumns__Group_1__1 : rule__OrderByColumns__Group_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12034:1: ( rule__OrderByColumns__Group_1__1__Impl )
            // InternalSQLParser.g:12035:2: rule__OrderByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1__1__Impl"
    // InternalSQLParser.g:12041:1: rule__OrderByColumns__Group_1__1__Impl : ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12045:1: ( ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:12046:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:12046:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:12047:2: ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:12047:2: ( ( rule__OrderByColumns__Group_1_1__0 ) )
            // InternalSQLParser.g:12048:3: ( rule__OrderByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12049:3: ( rule__OrderByColumns__Group_1_1__0 )
            // InternalSQLParser.g:12049:4: rule__OrderByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__OrderByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:12052:2: ( ( rule__OrderByColumns__Group_1_1__0 )* )
            // InternalSQLParser.g:12053:3: ( rule__OrderByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12054:3: ( rule__OrderByColumns__Group_1_1__0 )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==Comma) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // InternalSQLParser.g:12054:4: rule__OrderByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__OrderByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0"
    // InternalSQLParser.g:12064:1: rule__OrderByColumns__Group_1_1__0 : rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 ;
    public final void rule__OrderByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12068:1: ( rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 )
            // InternalSQLParser.g:12069:2: rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_42);
            rule__OrderByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0__Impl"
    // InternalSQLParser.g:12076:1: rule__OrderByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12080:1: ( ( Comma ) )
            // InternalSQLParser.g:12081:1: ( Comma )
            {
            // InternalSQLParser.g:12081:1: ( Comma )
            // InternalSQLParser.g:12082:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1"
    // InternalSQLParser.g:12091:1: rule__OrderByColumns__Group_1_1__1 : rule__OrderByColumns__Group_1_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12095:1: ( rule__OrderByColumns__Group_1_1__1__Impl )
            // InternalSQLParser.g:12096:2: rule__OrderByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1__Impl"
    // InternalSQLParser.g:12102:1: rule__OrderByColumns__Group_1_1__1__Impl : ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12106:1: ( ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:12107:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:12107:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:12108:2: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:12109:2: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:12109:3: rule__OrderByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__0"
    // InternalSQLParser.g:12118:1: rule__OrderByColumnFull__Group__0 : rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 ;
    public final void rule__OrderByColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12122:1: ( rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 )
            // InternalSQLParser.g:12123:2: rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__OrderByColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0"


    // $ANTLR start "rule__OrderByColumnFull__Group__0__Impl"
    // InternalSQLParser.g:12130:1: rule__OrderByColumnFull__Group__0__Impl : ( ( rule__OrderByColumnFull__Alternatives_0 ) ) ;
    public final void rule__OrderByColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12134:1: ( ( ( rule__OrderByColumnFull__Alternatives_0 ) ) )
            // InternalSQLParser.g:12135:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            {
            // InternalSQLParser.g:12135:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            // InternalSQLParser.g:12136:2: ( rule__OrderByColumnFull__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:12137:2: ( rule__OrderByColumnFull__Alternatives_0 )
            // InternalSQLParser.g:12137:3: rule__OrderByColumnFull__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__1"
    // InternalSQLParser.g:12145:1: rule__OrderByColumnFull__Group__1 : rule__OrderByColumnFull__Group__1__Impl ;
    public final void rule__OrderByColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12149:1: ( rule__OrderByColumnFull__Group__1__Impl )
            // InternalSQLParser.g:12150:2: rule__OrderByColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1"


    // $ANTLR start "rule__OrderByColumnFull__Group__1__Impl"
    // InternalSQLParser.g:12156:1: rule__OrderByColumnFull__Group__1__Impl : ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) ;
    public final void rule__OrderByColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12160:1: ( ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) )
            // InternalSQLParser.g:12161:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            {
            // InternalSQLParser.g:12161:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            // InternalSQLParser.g:12162:2: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }
            // InternalSQLParser.g:12163:2: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==DESC||LA122_0==ASC) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSQLParser.g:12163:3: rule__OrderByColumnFull__DirectionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__DirectionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__0"
    // InternalSQLParser.g:12172:1: rule__GroupByColumns__Group__0 : rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 ;
    public final void rule__GroupByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12176:1: ( rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 )
            // InternalSQLParser.g:12177:2: rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__GroupByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0"


    // $ANTLR start "rule__GroupByColumns__Group__0__Impl"
    // InternalSQLParser.g:12184:1: rule__GroupByColumns__Group__0__Impl : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12188:1: ( ( ruleGroupByColumnFull ) )
            // InternalSQLParser.g:12189:1: ( ruleGroupByColumnFull )
            {
            // InternalSQLParser.g:12189:1: ( ruleGroupByColumnFull )
            // InternalSQLParser.g:12190:2: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__1"
    // InternalSQLParser.g:12199:1: rule__GroupByColumns__Group__1 : rule__GroupByColumns__Group__1__Impl ;
    public final void rule__GroupByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12203:1: ( rule__GroupByColumns__Group__1__Impl )
            // InternalSQLParser.g:12204:2: rule__GroupByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1"


    // $ANTLR start "rule__GroupByColumns__Group__1__Impl"
    // InternalSQLParser.g:12210:1: rule__GroupByColumns__Group__1__Impl : ( ( rule__GroupByColumns__Group_1__0 )? ) ;
    public final void rule__GroupByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12214:1: ( ( ( rule__GroupByColumns__Group_1__0 )? ) )
            // InternalSQLParser.g:12215:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            {
            // InternalSQLParser.g:12215:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            // InternalSQLParser.g:12216:2: ( rule__GroupByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12217:2: ( rule__GroupByColumns__Group_1__0 )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==Comma) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSQLParser.g:12217:3: rule__GroupByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__0"
    // InternalSQLParser.g:12226:1: rule__GroupByColumns__Group_1__0 : rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 ;
    public final void rule__GroupByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12230:1: ( rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 )
            // InternalSQLParser.g:12231:2: rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__GroupByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1__0__Impl"
    // InternalSQLParser.g:12238:1: rule__GroupByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__GroupByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12242:1: ( ( () ) )
            // InternalSQLParser.g:12243:1: ( () )
            {
            // InternalSQLParser.g:12243:1: ( () )
            // InternalSQLParser.g:12244:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:12245:2: ()
            // InternalSQLParser.g:12245:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__1"
    // InternalSQLParser.g:12253:1: rule__GroupByColumns__Group_1__1 : rule__GroupByColumns__Group_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12257:1: ( rule__GroupByColumns__Group_1__1__Impl )
            // InternalSQLParser.g:12258:2: rule__GroupByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1__1__Impl"
    // InternalSQLParser.g:12264:1: rule__GroupByColumns__Group_1__1__Impl : ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__GroupByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12268:1: ( ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:12269:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:12269:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:12270:2: ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:12270:2: ( ( rule__GroupByColumns__Group_1_1__0 ) )
            // InternalSQLParser.g:12271:3: ( rule__GroupByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12272:3: ( rule__GroupByColumns__Group_1_1__0 )
            // InternalSQLParser.g:12272:4: rule__GroupByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__GroupByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:12275:2: ( ( rule__GroupByColumns__Group_1_1__0 )* )
            // InternalSQLParser.g:12276:3: ( rule__GroupByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12277:3: ( rule__GroupByColumns__Group_1_1__0 )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==Comma) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalSQLParser.g:12277:4: rule__GroupByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__GroupByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0"
    // InternalSQLParser.g:12287:1: rule__GroupByColumns__Group_1_1__0 : rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 ;
    public final void rule__GroupByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12291:1: ( rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 )
            // InternalSQLParser.g:12292:2: rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_42);
            rule__GroupByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0__Impl"
    // InternalSQLParser.g:12299:1: rule__GroupByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__GroupByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12303:1: ( ( Comma ) )
            // InternalSQLParser.g:12304:1: ( Comma )
            {
            // InternalSQLParser.g:12304:1: ( Comma )
            // InternalSQLParser.g:12305:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1"
    // InternalSQLParser.g:12314:1: rule__GroupByColumns__Group_1_1__1 : rule__GroupByColumns__Group_1_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12318:1: ( rule__GroupByColumns__Group_1_1__1__Impl )
            // InternalSQLParser.g:12319:2: rule__GroupByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1__Impl"
    // InternalSQLParser.g:12325:1: rule__GroupByColumns__Group_1_1__1__Impl : ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__GroupByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12329:1: ( ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:12330:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:12330:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:12331:2: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:12332:2: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:12332:3: rule__GroupByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__FullExpression__Group__0"
    // InternalSQLParser.g:12341:1: rule__FullExpression__Group__0 : rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 ;
    public final void rule__FullExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12345:1: ( rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 )
            // InternalSQLParser.g:12346:2: rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__FullExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0"


    // $ANTLR start "rule__FullExpression__Group__0__Impl"
    // InternalSQLParser.g:12353:1: rule__FullExpression__Group__0__Impl : ( ruleExpressionFragment ) ;
    public final void rule__FullExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12357:1: ( ( ruleExpressionFragment ) )
            // InternalSQLParser.g:12358:1: ( ruleExpressionFragment )
            {
            // InternalSQLParser.g:12358:1: ( ruleExpressionFragment )
            // InternalSQLParser.g:12359:2: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0__Impl"


    // $ANTLR start "rule__FullExpression__Group__1"
    // InternalSQLParser.g:12368:1: rule__FullExpression__Group__1 : rule__FullExpression__Group__1__Impl ;
    public final void rule__FullExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12372:1: ( rule__FullExpression__Group__1__Impl )
            // InternalSQLParser.g:12373:2: rule__FullExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1"


    // $ANTLR start "rule__FullExpression__Group__1__Impl"
    // InternalSQLParser.g:12379:1: rule__FullExpression__Group__1__Impl : ( ( rule__FullExpression__Group_1__0 )? ) ;
    public final void rule__FullExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12383:1: ( ( ( rule__FullExpression__Group_1__0 )? ) )
            // InternalSQLParser.g:12384:1: ( ( rule__FullExpression__Group_1__0 )? )
            {
            // InternalSQLParser.g:12384:1: ( ( rule__FullExpression__Group_1__0 )? )
            // InternalSQLParser.g:12385:2: ( rule__FullExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12386:2: ( rule__FullExpression__Group_1__0 )?
            int alt125=2;
            alt125 = dfa125.predict(input);
            switch (alt125) {
                case 1 :
                    // InternalSQLParser.g:12386:3: rule__FullExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FullExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__0"
    // InternalSQLParser.g:12395:1: rule__FullExpression__Group_1__0 : rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 ;
    public final void rule__FullExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12399:1: ( rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 )
            // InternalSQLParser.g:12400:2: rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1
            {
            pushFollow(FOLLOW_65);
            rule__FullExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0"


    // $ANTLR start "rule__FullExpression__Group_1__0__Impl"
    // InternalSQLParser.g:12407:1: rule__FullExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__FullExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12411:1: ( ( () ) )
            // InternalSQLParser.g:12412:1: ( () )
            {
            // InternalSQLParser.g:12412:1: ( () )
            // InternalSQLParser.g:12413:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:12414:2: ()
            // InternalSQLParser.g:12414:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__1"
    // InternalSQLParser.g:12422:1: rule__FullExpression__Group_1__1 : rule__FullExpression__Group_1__1__Impl ;
    public final void rule__FullExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12426:1: ( rule__FullExpression__Group_1__1__Impl )
            // InternalSQLParser.g:12427:2: rule__FullExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1"


    // $ANTLR start "rule__FullExpression__Group_1__1__Impl"
    // InternalSQLParser.g:12433:1: rule__FullExpression__Group_1__1__Impl : ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__FullExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12437:1: ( ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) )
            // InternalSQLParser.g:12438:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            {
            // InternalSQLParser.g:12438:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            // InternalSQLParser.g:12439:2: ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            {
            // InternalSQLParser.g:12439:2: ( ( rule__FullExpression__EntriesAssignment_1_1 ) )
            // InternalSQLParser.g:12440:3: ( rule__FullExpression__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:12441:3: ( rule__FullExpression__EntriesAssignment_1_1 )
            // InternalSQLParser.g:12441:4: rule__FullExpression__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_66);
            rule__FullExpression__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSQLParser.g:12444:2: ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            // InternalSQLParser.g:12445:3: ( rule__FullExpression__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:12446:3: ( rule__FullExpression__EntriesAssignment_1_1 )*
            loop126:
            do {
                int alt126=2;
                alt126 = dfa126.predict(input);
                switch (alt126) {
            	case 1 :
            	    // InternalSQLParser.g:12446:4: rule__FullExpression__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_66);
            	    rule__FullExpression__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0"
    // InternalSQLParser.g:12456:1: rule__ExpressionFragmentSecond__Group_0__0 : rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 ;
    public final void rule__ExpressionFragmentSecond__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12460:1: ( rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 )
            // InternalSQLParser.g:12461:2: rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1
            {
            pushFollow(FOLLOW_40);
            rule__ExpressionFragmentSecond__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0__Impl"
    // InternalSQLParser.g:12468:1: rule__ExpressionFragmentSecond__Group_0__0__Impl : ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12472:1: ( ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) )
            // InternalSQLParser.g:12473:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            {
            // InternalSQLParser.g:12473:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            // InternalSQLParser.g:12474:2: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }
            // InternalSQLParser.g:12475:2: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            // InternalSQLParser.g:12475:3: rule__ExpressionFragmentSecond__CAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1"
    // InternalSQLParser.g:12483:1: rule__ExpressionFragmentSecond__Group_0__1 : rule__ExpressionFragmentSecond__Group_0__1__Impl ;
    public final void rule__ExpressionFragmentSecond__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12487:1: ( rule__ExpressionFragmentSecond__Group_0__1__Impl )
            // InternalSQLParser.g:12488:2: rule__ExpressionFragmentSecond__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1__Impl"
    // InternalSQLParser.g:12494:1: rule__ExpressionFragmentSecond__Group_0__1__Impl : ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12498:1: ( ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) )
            // InternalSQLParser.g:12499:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            {
            // InternalSQLParser.g:12499:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            // InternalSQLParser.g:12500:2: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }
            // InternalSQLParser.g:12501:2: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            // InternalSQLParser.g:12501:3: rule__ExpressionFragmentSecond__EfragAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__EfragAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__0"
    // InternalSQLParser.g:12510:1: rule__ExpressionGroup__Group__0 : rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 ;
    public final void rule__ExpressionGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12514:1: ( rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 )
            // InternalSQLParser.g:12515:2: rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__ExpressionGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0"


    // $ANTLR start "rule__ExpressionGroup__Group__0__Impl"
    // InternalSQLParser.g:12522:1: rule__ExpressionGroup__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12526:1: ( ( () ) )
            // InternalSQLParser.g:12527:1: ( () )
            {
            // InternalSQLParser.g:12527:1: ( () )
            // InternalSQLParser.g:12528:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }
            // InternalSQLParser.g:12529:2: ()
            // InternalSQLParser.g:12529:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__1"
    // InternalSQLParser.g:12537:1: rule__ExpressionGroup__Group__1 : rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 ;
    public final void rule__ExpressionGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12541:1: ( rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 )
            // InternalSQLParser.g:12542:2: rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2
            {
            pushFollow(FOLLOW_67);
            rule__ExpressionGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1"


    // $ANTLR start "rule__ExpressionGroup__Group__1__Impl"
    // InternalSQLParser.g:12549:1: rule__ExpressionGroup__Group__1__Impl : ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) ;
    public final void rule__ExpressionGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12553:1: ( ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) )
            // InternalSQLParser.g:12554:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            {
            // InternalSQLParser.g:12554:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            // InternalSQLParser.g:12555:2: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }
            // InternalSQLParser.g:12556:2: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==NOT_1||LA127_0==NOT) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalSQLParser.g:12556:3: rule__ExpressionGroup__IsnotAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionGroup__IsnotAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__2"
    // InternalSQLParser.g:12564:1: rule__ExpressionGroup__Group__2 : rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 ;
    public final void rule__ExpressionGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12568:1: ( rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 )
            // InternalSQLParser.g:12569:2: rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3
            {
            pushFollow(FOLLOW_40);
            rule__ExpressionGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2"


    // $ANTLR start "rule__ExpressionGroup__Group__2__Impl"
    // InternalSQLParser.g:12576:1: rule__ExpressionGroup__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__ExpressionGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12580:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:12581:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:12581:1: ( LeftParenthesis )
            // InternalSQLParser.g:12582:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__3"
    // InternalSQLParser.g:12591:1: rule__ExpressionGroup__Group__3 : rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 ;
    public final void rule__ExpressionGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12595:1: ( rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 )
            // InternalSQLParser.g:12596:2: rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__ExpressionGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3"


    // $ANTLR start "rule__ExpressionGroup__Group__3__Impl"
    // InternalSQLParser.g:12603:1: rule__ExpressionGroup__Group__3__Impl : ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) ;
    public final void rule__ExpressionGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12607:1: ( ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) )
            // InternalSQLParser.g:12608:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            {
            // InternalSQLParser.g:12608:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            // InternalSQLParser.g:12609:2: ( rule__ExpressionGroup__ExprAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }
            // InternalSQLParser.g:12610:2: ( rule__ExpressionGroup__ExprAssignment_3 )
            // InternalSQLParser.g:12610:3: rule__ExpressionGroup__ExprAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__ExprAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__4"
    // InternalSQLParser.g:12618:1: rule__ExpressionGroup__Group__4 : rule__ExpressionGroup__Group__4__Impl ;
    public final void rule__ExpressionGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12622:1: ( rule__ExpressionGroup__Group__4__Impl )
            // InternalSQLParser.g:12623:2: rule__ExpressionGroup__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4"


    // $ANTLR start "rule__ExpressionGroup__Group__4__Impl"
    // InternalSQLParser.g:12629:1: rule__ExpressionGroup__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__ExpressionGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12633:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:12634:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:12634:1: ( RightParenthesis )
            // InternalSQLParser.g:12635:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__0"
    // InternalSQLParser.g:12645:1: rule__XExpression__Group__0 : rule__XExpression__Group__0__Impl rule__XExpression__Group__1 ;
    public final void rule__XExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12649:1: ( rule__XExpression__Group__0__Impl rule__XExpression__Group__1 )
            // InternalSQLParser.g:12650:2: rule__XExpression__Group__0__Impl rule__XExpression__Group__1
            {
            pushFollow(FOLLOW_68);
            rule__XExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0"


    // $ANTLR start "rule__XExpression__Group__0__Impl"
    // InternalSQLParser.g:12657:1: rule__XExpression__Group__0__Impl : ( X ) ;
    public final void rule__XExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12661:1: ( ( X ) )
            // InternalSQLParser.g:12662:1: ( X )
            {
            // InternalSQLParser.g:12662:1: ( X )
            // InternalSQLParser.g:12663:2: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0__Impl"


    // $ANTLR start "rule__XExpression__Group__1"
    // InternalSQLParser.g:12672:1: rule__XExpression__Group__1 : rule__XExpression__Group__1__Impl rule__XExpression__Group__2 ;
    public final void rule__XExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12676:1: ( rule__XExpression__Group__1__Impl rule__XExpression__Group__2 )
            // InternalSQLParser.g:12677:2: rule__XExpression__Group__1__Impl rule__XExpression__Group__2
            {
            pushFollow(FOLLOW_68);
            rule__XExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1"


    // $ANTLR start "rule__XExpression__Group__1__Impl"
    // InternalSQLParser.g:12684:1: rule__XExpression__Group__1__Impl : ( () ) ;
    public final void rule__XExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12688:1: ( ( () ) )
            // InternalSQLParser.g:12689:1: ( () )
            {
            // InternalSQLParser.g:12689:1: ( () )
            // InternalSQLParser.g:12690:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }
            // InternalSQLParser.g:12691:2: ()
            // InternalSQLParser.g:12691:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1__Impl"


    // $ANTLR start "rule__XExpression__Group__2"
    // InternalSQLParser.g:12699:1: rule__XExpression__Group__2 : rule__XExpression__Group__2__Impl rule__XExpression__Group__3 ;
    public final void rule__XExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12703:1: ( rule__XExpression__Group__2__Impl rule__XExpression__Group__3 )
            // InternalSQLParser.g:12704:2: rule__XExpression__Group__2__Impl rule__XExpression__Group__3
            {
            pushFollow(FOLLOW_15);
            rule__XExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2"


    // $ANTLR start "rule__XExpression__Group__2__Impl"
    // InternalSQLParser.g:12711:1: rule__XExpression__Group__2__Impl : ( ( rule__XExpression__XfAssignment_2 ) ) ;
    public final void rule__XExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12715:1: ( ( ( rule__XExpression__XfAssignment_2 ) ) )
            // InternalSQLParser.g:12716:1: ( ( rule__XExpression__XfAssignment_2 ) )
            {
            // InternalSQLParser.g:12716:1: ( ( rule__XExpression__XfAssignment_2 ) )
            // InternalSQLParser.g:12717:2: ( rule__XExpression__XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }
            // InternalSQLParser.g:12718:2: ( rule__XExpression__XfAssignment_2 )
            // InternalSQLParser.g:12718:3: rule__XExpression__XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2__Impl"


    // $ANTLR start "rule__XExpression__Group__3"
    // InternalSQLParser.g:12726:1: rule__XExpression__Group__3 : rule__XExpression__Group__3__Impl rule__XExpression__Group__4 ;
    public final void rule__XExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12730:1: ( rule__XExpression__Group__3__Impl rule__XExpression__Group__4 )
            // InternalSQLParser.g:12731:2: rule__XExpression__Group__3__Impl rule__XExpression__Group__4
            {
            pushFollow(FOLLOW_69);
            rule__XExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3"


    // $ANTLR start "rule__XExpression__Group__3__Impl"
    // InternalSQLParser.g:12738:1: rule__XExpression__Group__3__Impl : ( Comma ) ;
    public final void rule__XExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12742:1: ( ( Comma ) )
            // InternalSQLParser.g:12743:1: ( Comma )
            {
            // InternalSQLParser.g:12743:1: ( Comma )
            // InternalSQLParser.g:12744:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3__Impl"


    // $ANTLR start "rule__XExpression__Group__4"
    // InternalSQLParser.g:12753:1: rule__XExpression__Group__4 : rule__XExpression__Group__4__Impl rule__XExpression__Group__5 ;
    public final void rule__XExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12757:1: ( rule__XExpression__Group__4__Impl rule__XExpression__Group__5 )
            // InternalSQLParser.g:12758:2: rule__XExpression__Group__4__Impl rule__XExpression__Group__5
            {
            pushFollow(FOLLOW_70);
            rule__XExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4"


    // $ANTLR start "rule__XExpression__Group__4__Impl"
    // InternalSQLParser.g:12765:1: rule__XExpression__Group__4__Impl : ( ( rule__XExpression__ColAssignment_4 ) ) ;
    public final void rule__XExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12769:1: ( ( ( rule__XExpression__ColAssignment_4 ) ) )
            // InternalSQLParser.g:12770:1: ( ( rule__XExpression__ColAssignment_4 ) )
            {
            // InternalSQLParser.g:12770:1: ( ( rule__XExpression__ColAssignment_4 ) )
            // InternalSQLParser.g:12771:2: ( rule__XExpression__ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }
            // InternalSQLParser.g:12772:2: ( rule__XExpression__ColAssignment_4 )
            // InternalSQLParser.g:12772:3: rule__XExpression__ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__5"
    // InternalSQLParser.g:12780:1: rule__XExpression__Group__5 : rule__XExpression__Group__5__Impl rule__XExpression__Group__6 ;
    public final void rule__XExpression__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12784:1: ( rule__XExpression__Group__5__Impl rule__XExpression__Group__6 )
            // InternalSQLParser.g:12785:2: rule__XExpression__Group__5__Impl rule__XExpression__Group__6
            {
            pushFollow(FOLLOW_70);
            rule__XExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5"


    // $ANTLR start "rule__XExpression__Group__5__Impl"
    // InternalSQLParser.g:12792:1: rule__XExpression__Group__5__Impl : ( ( rule__XExpression__Group_5__0 )? ) ;
    public final void rule__XExpression__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12796:1: ( ( ( rule__XExpression__Group_5__0 )? ) )
            // InternalSQLParser.g:12797:1: ( ( rule__XExpression__Group_5__0 )? )
            {
            // InternalSQLParser.g:12797:1: ( ( rule__XExpression__Group_5__0 )? )
            // InternalSQLParser.g:12798:2: ( rule__XExpression__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }
            // InternalSQLParser.g:12799:2: ( rule__XExpression__Group_5__0 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==Comma) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSQLParser.g:12799:3: rule__XExpression__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5__Impl"


    // $ANTLR start "rule__XExpression__Group__6"
    // InternalSQLParser.g:12807:1: rule__XExpression__Group__6 : rule__XExpression__Group__6__Impl ;
    public final void rule__XExpression__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12811:1: ( rule__XExpression__Group__6__Impl )
            // InternalSQLParser.g:12812:2: rule__XExpression__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6"


    // $ANTLR start "rule__XExpression__Group__6__Impl"
    // InternalSQLParser.g:12818:1: rule__XExpression__Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12822:1: ( ( RightCurlyBracket ) )
            // InternalSQLParser.g:12823:1: ( RightCurlyBracket )
            {
            // InternalSQLParser.g:12823:1: ( RightCurlyBracket )
            // InternalSQLParser.g:12824:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6__Impl"


    // $ANTLR start "rule__XExpression__Group_5__0"
    // InternalSQLParser.g:12834:1: rule__XExpression__Group_5__0 : rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 ;
    public final void rule__XExpression__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12838:1: ( rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 )
            // InternalSQLParser.g:12839:2: rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1
            {
            pushFollow(FOLLOW_20);
            rule__XExpression__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0"


    // $ANTLR start "rule__XExpression__Group_5__0__Impl"
    // InternalSQLParser.g:12846:1: rule__XExpression__Group_5__0__Impl : ( Comma ) ;
    public final void rule__XExpression__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12850:1: ( ( Comma ) )
            // InternalSQLParser.g:12851:1: ( Comma )
            {
            // InternalSQLParser.g:12851:1: ( Comma )
            // InternalSQLParser.g:12852:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0__Impl"


    // $ANTLR start "rule__XExpression__Group_5__1"
    // InternalSQLParser.g:12861:1: rule__XExpression__Group_5__1 : rule__XExpression__Group_5__1__Impl ;
    public final void rule__XExpression__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12865:1: ( rule__XExpression__Group_5__1__Impl )
            // InternalSQLParser.g:12866:2: rule__XExpression__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1"


    // $ANTLR start "rule__XExpression__Group_5__1__Impl"
    // InternalSQLParser.g:12872:1: rule__XExpression__Group_5__1__Impl : ( ( rule__XExpression__PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12876:1: ( ( ( rule__XExpression__PrmAssignment_5_1 ) ) )
            // InternalSQLParser.g:12877:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            {
            // InternalSQLParser.g:12877:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            // InternalSQLParser.g:12878:2: ( rule__XExpression__PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }
            // InternalSQLParser.g:12879:2: ( rule__XExpression__PrmAssignment_5_1 )
            // InternalSQLParser.g:12879:3: rule__XExpression__PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1__Impl"


    // $ANTLR start "rule__XExpression___Group__0"
    // InternalSQLParser.g:12888:1: rule__XExpression___Group__0 : rule__XExpression___Group__0__Impl rule__XExpression___Group__1 ;
    public final void rule__XExpression___Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12892:1: ( rule__XExpression___Group__0__Impl rule__XExpression___Group__1 )
            // InternalSQLParser.g:12893:2: rule__XExpression___Group__0__Impl rule__XExpression___Group__1
            {
            pushFollow(FOLLOW_68);
            rule__XExpression___Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0"


    // $ANTLR start "rule__XExpression___Group__0__Impl"
    // InternalSQLParser.g:12900:1: rule__XExpression___Group__0__Impl : ( X ) ;
    public final void rule__XExpression___Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12904:1: ( ( X ) )
            // InternalSQLParser.g:12905:1: ( X )
            {
            // InternalSQLParser.g:12905:1: ( X )
            // InternalSQLParser.g:12906:2: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0__Impl"


    // $ANTLR start "rule__XExpression___Group__1"
    // InternalSQLParser.g:12915:1: rule__XExpression___Group__1 : rule__XExpression___Group__1__Impl rule__XExpression___Group__2 ;
    public final void rule__XExpression___Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12919:1: ( rule__XExpression___Group__1__Impl rule__XExpression___Group__2 )
            // InternalSQLParser.g:12920:2: rule__XExpression___Group__1__Impl rule__XExpression___Group__2
            {
            pushFollow(FOLLOW_68);
            rule__XExpression___Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1"


    // $ANTLR start "rule__XExpression___Group__1__Impl"
    // InternalSQLParser.g:12927:1: rule__XExpression___Group__1__Impl : ( () ) ;
    public final void rule__XExpression___Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12931:1: ( ( () ) )
            // InternalSQLParser.g:12932:1: ( () )
            {
            // InternalSQLParser.g:12932:1: ( () )
            // InternalSQLParser.g:12933:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }
            // InternalSQLParser.g:12934:2: ()
            // InternalSQLParser.g:12934:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1__Impl"


    // $ANTLR start "rule__XExpression___Group__2"
    // InternalSQLParser.g:12942:1: rule__XExpression___Group__2 : rule__XExpression___Group__2__Impl rule__XExpression___Group__3 ;
    public final void rule__XExpression___Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12946:1: ( rule__XExpression___Group__2__Impl rule__XExpression___Group__3 )
            // InternalSQLParser.g:12947:2: rule__XExpression___Group__2__Impl rule__XExpression___Group__3
            {
            pushFollow(FOLLOW_71);
            rule__XExpression___Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2"


    // $ANTLR start "rule__XExpression___Group__2__Impl"
    // InternalSQLParser.g:12954:1: rule__XExpression___Group__2__Impl : ( ( rule__XExpression___XfAssignment_2 ) ) ;
    public final void rule__XExpression___Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12958:1: ( ( ( rule__XExpression___XfAssignment_2 ) ) )
            // InternalSQLParser.g:12959:1: ( ( rule__XExpression___XfAssignment_2 ) )
            {
            // InternalSQLParser.g:12959:1: ( ( rule__XExpression___XfAssignment_2 ) )
            // InternalSQLParser.g:12960:2: ( rule__XExpression___XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }
            // InternalSQLParser.g:12961:2: ( rule__XExpression___XfAssignment_2 )
            // InternalSQLParser.g:12961:3: rule__XExpression___XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2__Impl"


    // $ANTLR start "rule__XExpression___Group__3"
    // InternalSQLParser.g:12969:1: rule__XExpression___Group__3 : rule__XExpression___Group__3__Impl rule__XExpression___Group__4 ;
    public final void rule__XExpression___Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12973:1: ( rule__XExpression___Group__3__Impl rule__XExpression___Group__4 )
            // InternalSQLParser.g:12974:2: rule__XExpression___Group__3__Impl rule__XExpression___Group__4
            {
            pushFollow(FOLLOW_69);
            rule__XExpression___Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3"


    // $ANTLR start "rule__XExpression___Group__3__Impl"
    // InternalSQLParser.g:12981:1: rule__XExpression___Group__3__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12985:1: ( ( VerticalLine ) )
            // InternalSQLParser.g:12986:1: ( VerticalLine )
            {
            // InternalSQLParser.g:12986:1: ( VerticalLine )
            // InternalSQLParser.g:12987:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3__Impl"


    // $ANTLR start "rule__XExpression___Group__4"
    // InternalSQLParser.g:12996:1: rule__XExpression___Group__4 : rule__XExpression___Group__4__Impl rule__XExpression___Group__5 ;
    public final void rule__XExpression___Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13000:1: ( rule__XExpression___Group__4__Impl rule__XExpression___Group__5 )
            // InternalSQLParser.g:13001:2: rule__XExpression___Group__4__Impl rule__XExpression___Group__5
            {
            pushFollow(FOLLOW_72);
            rule__XExpression___Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4"


    // $ANTLR start "rule__XExpression___Group__4__Impl"
    // InternalSQLParser.g:13008:1: rule__XExpression___Group__4__Impl : ( ( rule__XExpression___ColAssignment_4 ) ) ;
    public final void rule__XExpression___Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13012:1: ( ( ( rule__XExpression___ColAssignment_4 ) ) )
            // InternalSQLParser.g:13013:1: ( ( rule__XExpression___ColAssignment_4 ) )
            {
            // InternalSQLParser.g:13013:1: ( ( rule__XExpression___ColAssignment_4 ) )
            // InternalSQLParser.g:13014:2: ( rule__XExpression___ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }
            // InternalSQLParser.g:13015:2: ( rule__XExpression___ColAssignment_4 )
            // InternalSQLParser.g:13015:3: rule__XExpression___ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4__Impl"


    // $ANTLR start "rule__XExpression___Group__5"
    // InternalSQLParser.g:13023:1: rule__XExpression___Group__5 : rule__XExpression___Group__5__Impl rule__XExpression___Group__6 ;
    public final void rule__XExpression___Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13027:1: ( rule__XExpression___Group__5__Impl rule__XExpression___Group__6 )
            // InternalSQLParser.g:13028:2: rule__XExpression___Group__5__Impl rule__XExpression___Group__6
            {
            pushFollow(FOLLOW_72);
            rule__XExpression___Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5"


    // $ANTLR start "rule__XExpression___Group__5__Impl"
    // InternalSQLParser.g:13035:1: rule__XExpression___Group__5__Impl : ( ( rule__XExpression___Group_5__0 )? ) ;
    public final void rule__XExpression___Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13039:1: ( ( ( rule__XExpression___Group_5__0 )? ) )
            // InternalSQLParser.g:13040:1: ( ( rule__XExpression___Group_5__0 )? )
            {
            // InternalSQLParser.g:13040:1: ( ( rule__XExpression___Group_5__0 )? )
            // InternalSQLParser.g:13041:2: ( rule__XExpression___Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup_5()); 
            }
            // InternalSQLParser.g:13042:2: ( rule__XExpression___Group_5__0 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==VerticalLine) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalSQLParser.g:13042:3: rule__XExpression___Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression___Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5__Impl"


    // $ANTLR start "rule__XExpression___Group__6"
    // InternalSQLParser.g:13050:1: rule__XExpression___Group__6 : rule__XExpression___Group__6__Impl ;
    public final void rule__XExpression___Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13054:1: ( rule__XExpression___Group__6__Impl )
            // InternalSQLParser.g:13055:2: rule__XExpression___Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6"


    // $ANTLR start "rule__XExpression___Group__6__Impl"
    // InternalSQLParser.g:13061:1: rule__XExpression___Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression___Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13065:1: ( ( RightCurlyBracket ) )
            // InternalSQLParser.g:13066:1: ( RightCurlyBracket )
            {
            // InternalSQLParser.g:13066:1: ( RightCurlyBracket )
            // InternalSQLParser.g:13067:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6__Impl"


    // $ANTLR start "rule__XExpression___Group_5__0"
    // InternalSQLParser.g:13077:1: rule__XExpression___Group_5__0 : rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 ;
    public final void rule__XExpression___Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13081:1: ( rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 )
            // InternalSQLParser.g:13082:2: rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1
            {
            pushFollow(FOLLOW_20);
            rule__XExpression___Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0"


    // $ANTLR start "rule__XExpression___Group_5__0__Impl"
    // InternalSQLParser.g:13089:1: rule__XExpression___Group_5__0__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13093:1: ( ( VerticalLine ) )
            // InternalSQLParser.g:13094:1: ( VerticalLine )
            {
            // InternalSQLParser.g:13094:1: ( VerticalLine )
            // InternalSQLParser.g:13095:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0__Impl"


    // $ANTLR start "rule__XExpression___Group_5__1"
    // InternalSQLParser.g:13104:1: rule__XExpression___Group_5__1 : rule__XExpression___Group_5__1__Impl ;
    public final void rule__XExpression___Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13108:1: ( rule__XExpression___Group_5__1__Impl )
            // InternalSQLParser.g:13109:2: rule__XExpression___Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1"


    // $ANTLR start "rule__XExpression___Group_5__1__Impl"
    // InternalSQLParser.g:13115:1: rule__XExpression___Group_5__1__Impl : ( ( rule__XExpression___PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression___Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13119:1: ( ( ( rule__XExpression___PrmAssignment_5_1 ) ) )
            // InternalSQLParser.g:13120:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            {
            // InternalSQLParser.g:13120:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            // InternalSQLParser.g:13121:2: ( rule__XExpression___PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }
            // InternalSQLParser.g:13122:2: ( rule__XExpression___PrmAssignment_5_1 )
            // InternalSQLParser.g:13122:3: rule__XExpression___PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__0"
    // InternalSQLParser.g:13131:1: rule__XExpressionParams__Group__0 : rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 ;
    public final void rule__XExpressionParams__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13135:1: ( rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 )
            // InternalSQLParser.g:13136:2: rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__XExpressionParams__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0"


    // $ANTLR start "rule__XExpressionParams__Group__0__Impl"
    // InternalSQLParser.g:13143:1: rule__XExpressionParams__Group__0__Impl : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13147:1: ( ( ruleJRParameter ) )
            // InternalSQLParser.g:13148:1: ( ruleJRParameter )
            {
            // InternalSQLParser.g:13148:1: ( ruleJRParameter )
            // InternalSQLParser.g:13149:2: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__1"
    // InternalSQLParser.g:13158:1: rule__XExpressionParams__Group__1 : rule__XExpressionParams__Group__1__Impl ;
    public final void rule__XExpressionParams__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13162:1: ( rule__XExpressionParams__Group__1__Impl )
            // InternalSQLParser.g:13163:2: rule__XExpressionParams__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1"


    // $ANTLR start "rule__XExpressionParams__Group__1__Impl"
    // InternalSQLParser.g:13169:1: rule__XExpressionParams__Group__1__Impl : ( ( rule__XExpressionParams__Group_1__0 )? ) ;
    public final void rule__XExpressionParams__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13173:1: ( ( ( rule__XExpressionParams__Group_1__0 )? ) )
            // InternalSQLParser.g:13174:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            {
            // InternalSQLParser.g:13174:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            // InternalSQLParser.g:13175:2: ( rule__XExpressionParams__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:13176:2: ( rule__XExpressionParams__Group_1__0 )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==Comma) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalSQLParser.g:13176:3: rule__XExpressionParams__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpressionParams__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__0"
    // InternalSQLParser.g:13185:1: rule__XExpressionParams__Group_1__0 : rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 ;
    public final void rule__XExpressionParams__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13189:1: ( rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 )
            // InternalSQLParser.g:13190:2: rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__XExpressionParams__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1__0__Impl"
    // InternalSQLParser.g:13197:1: rule__XExpressionParams__Group_1__0__Impl : ( () ) ;
    public final void rule__XExpressionParams__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13201:1: ( ( () ) )
            // InternalSQLParser.g:13202:1: ( () )
            {
            // InternalSQLParser.g:13202:1: ( () )
            // InternalSQLParser.g:13203:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:13204:2: ()
            // InternalSQLParser.g:13204:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__1"
    // InternalSQLParser.g:13212:1: rule__XExpressionParams__Group_1__1 : rule__XExpressionParams__Group_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13216:1: ( rule__XExpressionParams__Group_1__1__Impl )
            // InternalSQLParser.g:13217:2: rule__XExpressionParams__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1__1__Impl"
    // InternalSQLParser.g:13223:1: rule__XExpressionParams__Group_1__1__Impl : ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) ;
    public final void rule__XExpressionParams__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13227:1: ( ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:13228:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:13228:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            // InternalSQLParser.g:13229:2: ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:13229:2: ( ( rule__XExpressionParams__Group_1_1__0 ) )
            // InternalSQLParser.g:13230:3: ( rule__XExpressionParams__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13231:3: ( rule__XExpressionParams__Group_1_1__0 )
            // InternalSQLParser.g:13231:4: rule__XExpressionParams__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__XExpressionParams__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:13234:2: ( ( rule__XExpressionParams__Group_1_1__0 )* )
            // InternalSQLParser.g:13235:3: ( rule__XExpressionParams__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13236:3: ( rule__XExpressionParams__Group_1_1__0 )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==Comma) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalSQLParser.g:13236:4: rule__XExpressionParams__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__XExpressionParams__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0"
    // InternalSQLParser.g:13246:1: rule__XExpressionParams__Group_1_1__0 : rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 ;
    public final void rule__XExpressionParams__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13250:1: ( rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 )
            // InternalSQLParser.g:13251:2: rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1
            {
            pushFollow(FOLLOW_20);
            rule__XExpressionParams__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0__Impl"
    // InternalSQLParser.g:13258:1: rule__XExpressionParams__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__XExpressionParams__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13262:1: ( ( Comma ) )
            // InternalSQLParser.g:13263:1: ( Comma )
            {
            // InternalSQLParser.g:13263:1: ( Comma )
            // InternalSQLParser.g:13264:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1"
    // InternalSQLParser.g:13273:1: rule__XExpressionParams__Group_1_1__1 : rule__XExpressionParams__Group_1_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13277:1: ( rule__XExpressionParams__Group_1_1__1__Impl )
            // InternalSQLParser.g:13278:2: rule__XExpressionParams__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1__Impl"
    // InternalSQLParser.g:13284:1: rule__XExpressionParams__Group_1_1__1__Impl : ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__XExpressionParams__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13288:1: ( ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:13289:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:13289:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:13290:2: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:13291:2: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:13291:3: rule__XExpressionParams__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1__Impl"


    // $ANTLR start "rule__Expression__Group__0"
    // InternalSQLParser.g:13300:1: rule__Expression__Group__0 : rule__Expression__Group__0__Impl rule__Expression__Group__1 ;
    public final void rule__Expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13304:1: ( rule__Expression__Group__0__Impl rule__Expression__Group__1 )
            // InternalSQLParser.g:13305:2: rule__Expression__Group__0__Impl rule__Expression__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__Expression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0"


    // $ANTLR start "rule__Expression__Group__0__Impl"
    // InternalSQLParser.g:13312:1: rule__Expression__Group__0__Impl : ( ( rule__Expression__Op1Assignment_0 ) ) ;
    public final void rule__Expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13316:1: ( ( ( rule__Expression__Op1Assignment_0 ) ) )
            // InternalSQLParser.g:13317:1: ( ( rule__Expression__Op1Assignment_0 ) )
            {
            // InternalSQLParser.g:13317:1: ( ( rule__Expression__Op1Assignment_0 ) )
            // InternalSQLParser.g:13318:2: ( rule__Expression__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }
            // InternalSQLParser.g:13319:2: ( rule__Expression__Op1Assignment_0 )
            // InternalSQLParser.g:13319:3: rule__Expression__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0__Impl"


    // $ANTLR start "rule__Expression__Group__1"
    // InternalSQLParser.g:13327:1: rule__Expression__Group__1 : rule__Expression__Group__1__Impl ;
    public final void rule__Expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13331:1: ( rule__Expression__Group__1__Impl )
            // InternalSQLParser.g:13332:2: rule__Expression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1"


    // $ANTLR start "rule__Expression__Group__1__Impl"
    // InternalSQLParser.g:13338:1: rule__Expression__Group__1__Impl : ( ( rule__Expression__Alternatives_1 ) ) ;
    public final void rule__Expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13342:1: ( ( ( rule__Expression__Alternatives_1 ) ) )
            // InternalSQLParser.g:13343:1: ( ( rule__Expression__Alternatives_1 ) )
            {
            // InternalSQLParser.g:13343:1: ( ( rule__Expression__Alternatives_1 ) )
            // InternalSQLParser.g:13344:2: ( rule__Expression__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:13345:2: ( rule__Expression__Alternatives_1 )
            // InternalSQLParser.g:13345:3: rule__Expression__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__0"
    // InternalSQLParser.g:13354:1: rule__IsNullValue__Group__0 : rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 ;
    public final void rule__IsNullValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13358:1: ( rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 )
            // InternalSQLParser.g:13359:2: rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__IsNullValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0"


    // $ANTLR start "rule__IsNullValue__Group__0__Impl"
    // InternalSQLParser.g:13366:1: rule__IsNullValue__Group__0__Impl : ( IS ) ;
    public final void rule__IsNullValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13370:1: ( ( IS ) )
            // InternalSQLParser.g:13371:1: ( IS )
            {
            // InternalSQLParser.g:13371:1: ( IS )
            // InternalSQLParser.g:13372:2: IS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }
            match(input,IS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0__Impl"


    // $ANTLR start "rule__IsNullValue__Group__1"
    // InternalSQLParser.g:13381:1: rule__IsNullValue__Group__1 : rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 ;
    public final void rule__IsNullValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13385:1: ( rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 )
            // InternalSQLParser.g:13386:2: rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2
            {
            pushFollow(FOLLOW_74);
            rule__IsNullValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1"


    // $ANTLR start "rule__IsNullValue__Group__1__Impl"
    // InternalSQLParser.g:13393:1: rule__IsNullValue__Group__1__Impl : ( ( NOT )? ) ;
    public final void rule__IsNullValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13397:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:13398:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:13398:1: ( ( NOT )? )
            // InternalSQLParser.g:13399:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }
            // InternalSQLParser.g:13400:2: ( NOT )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==NOT) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalSQLParser.g:13400:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__2"
    // InternalSQLParser.g:13408:1: rule__IsNullValue__Group__2 : rule__IsNullValue__Group__2__Impl ;
    public final void rule__IsNullValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13412:1: ( rule__IsNullValue__Group__2__Impl )
            // InternalSQLParser.g:13413:2: rule__IsNullValue__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2"


    // $ANTLR start "rule__IsNullValue__Group__2__Impl"
    // InternalSQLParser.g:13419:1: rule__IsNullValue__Group__2__Impl : ( NULL ) ;
    public final void rule__IsNullValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13423:1: ( ( NULL ) )
            // InternalSQLParser.g:13424:1: ( NULL )
            {
            // InternalSQLParser.g:13424:1: ( NULL )
            // InternalSQLParser.g:13425:2: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalSQLParser.g:13435:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13439:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalSQLParser.g:13440:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__Comparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalSQLParser.g:13447:1: rule__Comparison__Group__0__Impl : ( ( rule__Comparison__OperatorAssignment_0 ) ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13451:1: ( ( ( rule__Comparison__OperatorAssignment_0 ) ) )
            // InternalSQLParser.g:13452:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            {
            // InternalSQLParser.g:13452:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            // InternalSQLParser.g:13453:2: ( rule__Comparison__OperatorAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }
            // InternalSQLParser.g:13454:2: ( rule__Comparison__OperatorAssignment_0 )
            // InternalSQLParser.g:13454:3: rule__Comparison__OperatorAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalSQLParser.g:13462:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl rule__Comparison__Group__2 ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13466:1: ( rule__Comparison__Group__1__Impl rule__Comparison__Group__2 )
            // InternalSQLParser.g:13467:2: rule__Comparison__Group__1__Impl rule__Comparison__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__Comparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalSQLParser.g:13474:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__SubOperatorAssignment_1 )? ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13478:1: ( ( ( rule__Comparison__SubOperatorAssignment_1 )? ) )
            // InternalSQLParser.g:13479:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            {
            // InternalSQLParser.g:13479:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            // InternalSQLParser.g:13480:2: ( rule__Comparison__SubOperatorAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }
            // InternalSQLParser.g:13481:2: ( rule__Comparison__SubOperatorAssignment_1 )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==SOME||LA133_0==ALL||LA133_0==ANY) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalSQLParser.g:13481:3: rule__Comparison__SubOperatorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Comparison__SubOperatorAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group__2"
    // InternalSQLParser.g:13489:1: rule__Comparison__Group__2 : rule__Comparison__Group__2__Impl ;
    public final void rule__Comparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13493:1: ( rule__Comparison__Group__2__Impl )
            // InternalSQLParser.g:13494:2: rule__Comparison__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2"


    // $ANTLR start "rule__Comparison__Group__2__Impl"
    // InternalSQLParser.g:13500:1: rule__Comparison__Group__2__Impl : ( ( rule__Comparison__Op2Assignment_2 ) ) ;
    public final void rule__Comparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13504:1: ( ( ( rule__Comparison__Op2Assignment_2 ) ) )
            // InternalSQLParser.g:13505:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            {
            // InternalSQLParser.g:13505:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            // InternalSQLParser.g:13506:2: ( rule__Comparison__Op2Assignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }
            // InternalSQLParser.g:13507:2: ( rule__Comparison__Op2Assignment_2 )
            // InternalSQLParser.g:13507:3: rule__Comparison__Op2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Op2Assignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2__Impl"


    // $ANTLR start "rule__Like__Group__0"
    // InternalSQLParser.g:13516:1: rule__Like__Group__0 : rule__Like__Group__0__Impl rule__Like__Group__1 ;
    public final void rule__Like__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13520:1: ( rule__Like__Group__0__Impl rule__Like__Group__1 )
            // InternalSQLParser.g:13521:2: rule__Like__Group__0__Impl rule__Like__Group__1
            {
            pushFollow(FOLLOW_76);
            rule__Like__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Like__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0"


    // $ANTLR start "rule__Like__Group__0__Impl"
    // InternalSQLParser.g:13528:1: rule__Like__Group__0__Impl : ( ( rule__Like__OpLikeAssignment_0 ) ) ;
    public final void rule__Like__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13532:1: ( ( ( rule__Like__OpLikeAssignment_0 ) ) )
            // InternalSQLParser.g:13533:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            {
            // InternalSQLParser.g:13533:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            // InternalSQLParser.g:13534:2: ( rule__Like__OpLikeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }
            // InternalSQLParser.g:13535:2: ( rule__Like__OpLikeAssignment_0 )
            // InternalSQLParser.g:13535:3: rule__Like__OpLikeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Like__OpLikeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0__Impl"


    // $ANTLR start "rule__Like__Group__1"
    // InternalSQLParser.g:13543:1: rule__Like__Group__1 : rule__Like__Group__1__Impl ;
    public final void rule__Like__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13547:1: ( rule__Like__Group__1__Impl )
            // InternalSQLParser.g:13548:2: rule__Like__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1"


    // $ANTLR start "rule__Like__Group__1__Impl"
    // InternalSQLParser.g:13554:1: rule__Like__Group__1__Impl : ( ( rule__Like__Op2Assignment_1 ) ) ;
    public final void rule__Like__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13558:1: ( ( ( rule__Like__Op2Assignment_1 ) ) )
            // InternalSQLParser.g:13559:1: ( ( rule__Like__Op2Assignment_1 ) )
            {
            // InternalSQLParser.g:13559:1: ( ( rule__Like__Op2Assignment_1 ) )
            // InternalSQLParser.g:13560:2: ( rule__Like__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }
            // InternalSQLParser.g:13561:2: ( rule__Like__Op2Assignment_1 )
            // InternalSQLParser.g:13561:3: rule__Like__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Like__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1__Impl"


    // $ANTLR start "rule__LikeValue__Group__0"
    // InternalSQLParser.g:13570:1: rule__LikeValue__Group__0 : rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 ;
    public final void rule__LikeValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13574:1: ( rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 )
            // InternalSQLParser.g:13575:2: rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__LikeValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0"


    // $ANTLR start "rule__LikeValue__Group__0__Impl"
    // InternalSQLParser.g:13582:1: rule__LikeValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__LikeValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13586:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:13587:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:13587:1: ( ( NOT )? )
            // InternalSQLParser.g:13588:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:13589:2: ( NOT )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==NOT) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSQLParser.g:13589:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0__Impl"


    // $ANTLR start "rule__LikeValue__Group__1"
    // InternalSQLParser.g:13597:1: rule__LikeValue__Group__1 : rule__LikeValue__Group__1__Impl ;
    public final void rule__LikeValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13601:1: ( rule__LikeValue__Group__1__Impl )
            // InternalSQLParser.g:13602:2: rule__LikeValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1"


    // $ANTLR start "rule__LikeValue__Group__1__Impl"
    // InternalSQLParser.g:13608:1: rule__LikeValue__Group__1__Impl : ( LIKE ) ;
    public final void rule__LikeValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13612:1: ( ( LIKE ) )
            // InternalSQLParser.g:13613:1: ( LIKE )
            {
            // InternalSQLParser.g:13613:1: ( LIKE )
            // InternalSQLParser.g:13614:2: LIKE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }
            match(input,LIKE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__0"
    // InternalSQLParser.g:13624:1: rule__Between__Group__0 : rule__Between__Group__0__Impl rule__Between__Group__1 ;
    public final void rule__Between__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13628:1: ( rule__Between__Group__0__Impl rule__Between__Group__1 )
            // InternalSQLParser.g:13629:2: rule__Between__Group__0__Impl rule__Between__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__Between__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0"


    // $ANTLR start "rule__Between__Group__0__Impl"
    // InternalSQLParser.g:13636:1: rule__Between__Group__0__Impl : ( ( rule__Between__OpBetweenAssignment_0 ) ) ;
    public final void rule__Between__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13640:1: ( ( ( rule__Between__OpBetweenAssignment_0 ) ) )
            // InternalSQLParser.g:13641:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            {
            // InternalSQLParser.g:13641:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            // InternalSQLParser.g:13642:2: ( rule__Between__OpBetweenAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }
            // InternalSQLParser.g:13643:2: ( rule__Between__OpBetweenAssignment_0 )
            // InternalSQLParser.g:13643:3: rule__Between__OpBetweenAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Between__OpBetweenAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0__Impl"


    // $ANTLR start "rule__Between__Group__1"
    // InternalSQLParser.g:13651:1: rule__Between__Group__1 : rule__Between__Group__1__Impl rule__Between__Group__2 ;
    public final void rule__Between__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13655:1: ( rule__Between__Group__1__Impl rule__Between__Group__2 )
            // InternalSQLParser.g:13656:2: rule__Between__Group__1__Impl rule__Between__Group__2
            {
            pushFollow(FOLLOW_78);
            rule__Between__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1"


    // $ANTLR start "rule__Between__Group__1__Impl"
    // InternalSQLParser.g:13663:1: rule__Between__Group__1__Impl : ( ( rule__Between__Op2Assignment_1 ) ) ;
    public final void rule__Between__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13667:1: ( ( ( rule__Between__Op2Assignment_1 ) ) )
            // InternalSQLParser.g:13668:1: ( ( rule__Between__Op2Assignment_1 ) )
            {
            // InternalSQLParser.g:13668:1: ( ( rule__Between__Op2Assignment_1 ) )
            // InternalSQLParser.g:13669:2: ( rule__Between__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }
            // InternalSQLParser.g:13670:2: ( rule__Between__Op2Assignment_1 )
            // InternalSQLParser.g:13670:3: rule__Between__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__2"
    // InternalSQLParser.g:13678:1: rule__Between__Group__2 : rule__Between__Group__2__Impl rule__Between__Group__3 ;
    public final void rule__Between__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13682:1: ( rule__Between__Group__2__Impl rule__Between__Group__3 )
            // InternalSQLParser.g:13683:2: rule__Between__Group__2__Impl rule__Between__Group__3
            {
            pushFollow(FOLLOW_69);
            rule__Between__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2"


    // $ANTLR start "rule__Between__Group__2__Impl"
    // InternalSQLParser.g:13690:1: rule__Between__Group__2__Impl : ( AND ) ;
    public final void rule__Between__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13694:1: ( ( AND ) )
            // InternalSQLParser.g:13695:1: ( AND )
            {
            // InternalSQLParser.g:13695:1: ( AND )
            // InternalSQLParser.g:13696:2: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2__Impl"


    // $ANTLR start "rule__Between__Group__3"
    // InternalSQLParser.g:13705:1: rule__Between__Group__3 : rule__Between__Group__3__Impl ;
    public final void rule__Between__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13709:1: ( rule__Between__Group__3__Impl )
            // InternalSQLParser.g:13710:2: rule__Between__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3"


    // $ANTLR start "rule__Between__Group__3__Impl"
    // InternalSQLParser.g:13716:1: rule__Between__Group__3__Impl : ( ( rule__Between__Op3Assignment_3 ) ) ;
    public final void rule__Between__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13720:1: ( ( ( rule__Between__Op3Assignment_3 ) ) )
            // InternalSQLParser.g:13721:1: ( ( rule__Between__Op3Assignment_3 ) )
            {
            // InternalSQLParser.g:13721:1: ( ( rule__Between__Op3Assignment_3 ) )
            // InternalSQLParser.g:13722:2: ( rule__Between__Op3Assignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }
            // InternalSQLParser.g:13723:2: ( rule__Between__Op3Assignment_3 )
            // InternalSQLParser.g:13723:3: rule__Between__Op3Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op3Assignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3__Impl"


    // $ANTLR start "rule__BetweenValue__Group__0"
    // InternalSQLParser.g:13732:1: rule__BetweenValue__Group__0 : rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 ;
    public final void rule__BetweenValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13736:1: ( rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 )
            // InternalSQLParser.g:13737:2: rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__BetweenValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0"


    // $ANTLR start "rule__BetweenValue__Group__0__Impl"
    // InternalSQLParser.g:13744:1: rule__BetweenValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__BetweenValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13748:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:13749:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:13749:1: ( ( NOT )? )
            // InternalSQLParser.g:13750:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:13751:2: ( NOT )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==NOT) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSQLParser.g:13751:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0__Impl"


    // $ANTLR start "rule__BetweenValue__Group__1"
    // InternalSQLParser.g:13759:1: rule__BetweenValue__Group__1 : rule__BetweenValue__Group__1__Impl ;
    public final void rule__BetweenValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13763:1: ( rule__BetweenValue__Group__1__Impl )
            // InternalSQLParser.g:13764:2: rule__BetweenValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1"


    // $ANTLR start "rule__BetweenValue__Group__1__Impl"
    // InternalSQLParser.g:13770:1: rule__BetweenValue__Group__1__Impl : ( BETWEEN ) ;
    public final void rule__BetweenValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13774:1: ( ( BETWEEN ) )
            // InternalSQLParser.g:13775:1: ( BETWEEN )
            {
            // InternalSQLParser.g:13775:1: ( BETWEEN )
            // InternalSQLParser.g:13776:2: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__0"
    // InternalSQLParser.g:13786:1: rule__InOperator__Group__0 : rule__InOperator__Group__0__Impl rule__InOperator__Group__1 ;
    public final void rule__InOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13790:1: ( rule__InOperator__Group__0__Impl rule__InOperator__Group__1 )
            // InternalSQLParser.g:13791:2: rule__InOperator__Group__0__Impl rule__InOperator__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__InOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0"


    // $ANTLR start "rule__InOperator__Group__0__Impl"
    // InternalSQLParser.g:13798:1: rule__InOperator__Group__0__Impl : ( () ) ;
    public final void rule__InOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13802:1: ( ( () ) )
            // InternalSQLParser.g:13803:1: ( () )
            {
            // InternalSQLParser.g:13803:1: ( () )
            // InternalSQLParser.g:13804:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }
            // InternalSQLParser.g:13805:2: ()
            // InternalSQLParser.g:13805:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0__Impl"


    // $ANTLR start "rule__InOperator__Group__1"
    // InternalSQLParser.g:13813:1: rule__InOperator__Group__1 : rule__InOperator__Group__1__Impl rule__InOperator__Group__2 ;
    public final void rule__InOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13817:1: ( rule__InOperator__Group__1__Impl rule__InOperator__Group__2 )
            // InternalSQLParser.g:13818:2: rule__InOperator__Group__1__Impl rule__InOperator__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__InOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1"


    // $ANTLR start "rule__InOperator__Group__1__Impl"
    // InternalSQLParser.g:13825:1: rule__InOperator__Group__1__Impl : ( ( rule__InOperator__OpAssignment_1 ) ) ;
    public final void rule__InOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13829:1: ( ( ( rule__InOperator__OpAssignment_1 ) ) )
            // InternalSQLParser.g:13830:1: ( ( rule__InOperator__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:13830:1: ( ( rule__InOperator__OpAssignment_1 ) )
            // InternalSQLParser.g:13831:2: ( rule__InOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:13832:2: ( rule__InOperator__OpAssignment_1 )
            // InternalSQLParser.g:13832:3: rule__InOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__2"
    // InternalSQLParser.g:13840:1: rule__InOperator__Group__2 : rule__InOperator__Group__2__Impl ;
    public final void rule__InOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13844:1: ( rule__InOperator__Group__2__Impl )
            // InternalSQLParser.g:13845:2: rule__InOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2"


    // $ANTLR start "rule__InOperator__Group__2__Impl"
    // InternalSQLParser.g:13851:1: rule__InOperator__Group__2__Impl : ( ( rule__InOperator__Alternatives_2 ) ) ;
    public final void rule__InOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13855:1: ( ( ( rule__InOperator__Alternatives_2 ) ) )
            // InternalSQLParser.g:13856:1: ( ( rule__InOperator__Alternatives_2 ) )
            {
            // InternalSQLParser.g:13856:1: ( ( rule__InOperator__Alternatives_2 ) )
            // InternalSQLParser.g:13857:2: ( rule__InOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:13858:2: ( rule__InOperator__Alternatives_2 )
            // InternalSQLParser.g:13858:3: rule__InOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2__Impl"


    // $ANTLR start "rule__InValue__Group__0"
    // InternalSQLParser.g:13867:1: rule__InValue__Group__0 : rule__InValue__Group__0__Impl rule__InValue__Group__1 ;
    public final void rule__InValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13871:1: ( rule__InValue__Group__0__Impl rule__InValue__Group__1 )
            // InternalSQLParser.g:13872:2: rule__InValue__Group__0__Impl rule__InValue__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__InValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0"


    // $ANTLR start "rule__InValue__Group__0__Impl"
    // InternalSQLParser.g:13879:1: rule__InValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__InValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13883:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:13884:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:13884:1: ( ( NOT )? )
            // InternalSQLParser.g:13885:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:13886:2: ( NOT )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==NOT) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSQLParser.g:13886:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0__Impl"


    // $ANTLR start "rule__InValue__Group__1"
    // InternalSQLParser.g:13894:1: rule__InValue__Group__1 : rule__InValue__Group__1__Impl ;
    public final void rule__InValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13898:1: ( rule__InValue__Group__1__Impl )
            // InternalSQLParser.g:13899:2: rule__InValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1"


    // $ANTLR start "rule__InValue__Group__1__Impl"
    // InternalSQLParser.g:13905:1: rule__InValue__Group__1__Impl : ( IN ) ;
    public final void rule__InValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13909:1: ( ( IN ) )
            // InternalSQLParser.g:13910:1: ( IN )
            {
            // InternalSQLParser.g:13910:1: ( IN )
            // InternalSQLParser.g:13911:2: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__0"
    // InternalSQLParser.g:13921:1: rule__ExistsOperator__Group__0 : rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 ;
    public final void rule__ExistsOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13925:1: ( rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 )
            // InternalSQLParser.g:13926:2: rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__ExistsOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0"


    // $ANTLR start "rule__ExistsOperator__Group__0__Impl"
    // InternalSQLParser.g:13933:1: rule__ExistsOperator__Group__0__Impl : ( () ) ;
    public final void rule__ExistsOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13937:1: ( ( () ) )
            // InternalSQLParser.g:13938:1: ( () )
            {
            // InternalSQLParser.g:13938:1: ( () )
            // InternalSQLParser.g:13939:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }
            // InternalSQLParser.g:13940:2: ()
            // InternalSQLParser.g:13940:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__1"
    // InternalSQLParser.g:13948:1: rule__ExistsOperator__Group__1 : rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 ;
    public final void rule__ExistsOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13952:1: ( rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 )
            // InternalSQLParser.g:13953:2: rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__ExistsOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1"


    // $ANTLR start "rule__ExistsOperator__Group__1__Impl"
    // InternalSQLParser.g:13960:1: rule__ExistsOperator__Group__1__Impl : ( ( rule__ExistsOperator__OpAssignment_1 ) ) ;
    public final void rule__ExistsOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13964:1: ( ( ( rule__ExistsOperator__OpAssignment_1 ) ) )
            // InternalSQLParser.g:13965:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:13965:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            // InternalSQLParser.g:13966:2: ( rule__ExistsOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:13967:2: ( rule__ExistsOperator__OpAssignment_1 )
            // InternalSQLParser.g:13967:3: rule__ExistsOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__2"
    // InternalSQLParser.g:13975:1: rule__ExistsOperator__Group__2 : rule__ExistsOperator__Group__2__Impl ;
    public final void rule__ExistsOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13979:1: ( rule__ExistsOperator__Group__2__Impl )
            // InternalSQLParser.g:13980:2: rule__ExistsOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2"


    // $ANTLR start "rule__ExistsOperator__Group__2__Impl"
    // InternalSQLParser.g:13986:1: rule__ExistsOperator__Group__2__Impl : ( ( rule__ExistsOperator__Alternatives_2 ) ) ;
    public final void rule__ExistsOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13990:1: ( ( ( rule__ExistsOperator__Alternatives_2 ) ) )
            // InternalSQLParser.g:13991:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            {
            // InternalSQLParser.g:13991:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            // InternalSQLParser.g:13992:2: ( rule__ExistsOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:13993:2: ( rule__ExistsOperator__Alternatives_2 )
            // InternalSQLParser.g:13993:3: rule__ExistsOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2__Impl"


    // $ANTLR start "rule__ExistsValue__Group__0"
    // InternalSQLParser.g:14002:1: rule__ExistsValue__Group__0 : rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 ;
    public final void rule__ExistsValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14006:1: ( rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 )
            // InternalSQLParser.g:14007:2: rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__ExistsValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0"


    // $ANTLR start "rule__ExistsValue__Group__0__Impl"
    // InternalSQLParser.g:14014:1: rule__ExistsValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__ExistsValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14018:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:14019:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:14019:1: ( ( NOT )? )
            // InternalSQLParser.g:14020:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:14021:2: ( NOT )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==NOT) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSQLParser.g:14021:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0__Impl"


    // $ANTLR start "rule__ExistsValue__Group__1"
    // InternalSQLParser.g:14029:1: rule__ExistsValue__Group__1 : rule__ExistsValue__Group__1__Impl ;
    public final void rule__ExistsValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14033:1: ( rule__ExistsValue__Group__1__Impl )
            // InternalSQLParser.g:14034:2: rule__ExistsValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1"


    // $ANTLR start "rule__ExistsValue__Group__1__Impl"
    // InternalSQLParser.g:14040:1: rule__ExistsValue__Group__1__Impl : ( EXISTS ) ;
    public final void rule__ExistsValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14044:1: ( ( EXISTS ) )
            // InternalSQLParser.g:14045:1: ( EXISTS )
            {
            // InternalSQLParser.g:14045:1: ( EXISTS )
            // InternalSQLParser.g:14046:2: EXISTS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }
            match(input,EXISTS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__0"
    // InternalSQLParser.g:14056:1: rule__OperandListGroup__Group__0 : rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 ;
    public final void rule__OperandListGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14060:1: ( rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 )
            // InternalSQLParser.g:14061:2: rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__OperandListGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0"


    // $ANTLR start "rule__OperandListGroup__Group__0__Impl"
    // InternalSQLParser.g:14068:1: rule__OperandListGroup__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandListGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14072:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:14073:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:14073:1: ( LeftParenthesis )
            // InternalSQLParser.g:14074:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__1"
    // InternalSQLParser.g:14083:1: rule__OperandListGroup__Group__1 : rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 ;
    public final void rule__OperandListGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14087:1: ( rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 )
            // InternalSQLParser.g:14088:2: rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__OperandListGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1"


    // $ANTLR start "rule__OperandListGroup__Group__1__Impl"
    // InternalSQLParser.g:14095:1: rule__OperandListGroup__Group__1__Impl : ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) ;
    public final void rule__OperandListGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14099:1: ( ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) )
            // InternalSQLParser.g:14100:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            {
            // InternalSQLParser.g:14100:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            // InternalSQLParser.g:14101:2: ( rule__OperandListGroup__OpGroupAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }
            // InternalSQLParser.g:14102:2: ( rule__OperandListGroup__OpGroupAssignment_1 )
            // InternalSQLParser.g:14102:3: rule__OperandListGroup__OpGroupAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__OpGroupAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__2"
    // InternalSQLParser.g:14110:1: rule__OperandListGroup__Group__2 : rule__OperandListGroup__Group__2__Impl ;
    public final void rule__OperandListGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14114:1: ( rule__OperandListGroup__Group__2__Impl )
            // InternalSQLParser.g:14115:2: rule__OperandListGroup__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2"


    // $ANTLR start "rule__OperandListGroup__Group__2__Impl"
    // InternalSQLParser.g:14121:1: rule__OperandListGroup__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandListGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14125:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:14126:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:14126:1: ( RightParenthesis )
            // InternalSQLParser.g:14127:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2__Impl"


    // $ANTLR start "rule__OperandList__Group__0"
    // InternalSQLParser.g:14137:1: rule__OperandList__Group__0 : rule__OperandList__Group__0__Impl rule__OperandList__Group__1 ;
    public final void rule__OperandList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14141:1: ( rule__OperandList__Group__0__Impl rule__OperandList__Group__1 )
            // InternalSQLParser.g:14142:2: rule__OperandList__Group__0__Impl rule__OperandList__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__OperandList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0"


    // $ANTLR start "rule__OperandList__Group__0__Impl"
    // InternalSQLParser.g:14149:1: rule__OperandList__Group__0__Impl : ( ruleScalarOperand ) ;
    public final void rule__OperandList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14153:1: ( ( ruleScalarOperand ) )
            // InternalSQLParser.g:14154:1: ( ruleScalarOperand )
            {
            // InternalSQLParser.g:14154:1: ( ruleScalarOperand )
            // InternalSQLParser.g:14155:2: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0__Impl"


    // $ANTLR start "rule__OperandList__Group__1"
    // InternalSQLParser.g:14164:1: rule__OperandList__Group__1 : rule__OperandList__Group__1__Impl ;
    public final void rule__OperandList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14168:1: ( rule__OperandList__Group__1__Impl )
            // InternalSQLParser.g:14169:2: rule__OperandList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1"


    // $ANTLR start "rule__OperandList__Group__1__Impl"
    // InternalSQLParser.g:14175:1: rule__OperandList__Group__1__Impl : ( ( rule__OperandList__Group_1__0 )? ) ;
    public final void rule__OperandList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14179:1: ( ( ( rule__OperandList__Group_1__0 )? ) )
            // InternalSQLParser.g:14180:1: ( ( rule__OperandList__Group_1__0 )? )
            {
            // InternalSQLParser.g:14180:1: ( ( rule__OperandList__Group_1__0 )? )
            // InternalSQLParser.g:14181:2: ( rule__OperandList__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:14182:2: ( rule__OperandList__Group_1__0 )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==Comma) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSQLParser.g:14182:3: rule__OperandList__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandList__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1__0"
    // InternalSQLParser.g:14191:1: rule__OperandList__Group_1__0 : rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 ;
    public final void rule__OperandList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14195:1: ( rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 )
            // InternalSQLParser.g:14196:2: rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__OperandList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0"


    // $ANTLR start "rule__OperandList__Group_1__0__Impl"
    // InternalSQLParser.g:14203:1: rule__OperandList__Group_1__0__Impl : ( () ) ;
    public final void rule__OperandList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14207:1: ( ( () ) )
            // InternalSQLParser.g:14208:1: ( () )
            {
            // InternalSQLParser.g:14208:1: ( () )
            // InternalSQLParser.g:14209:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:14210:2: ()
            // InternalSQLParser.g:14210:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1__1"
    // InternalSQLParser.g:14218:1: rule__OperandList__Group_1__1 : rule__OperandList__Group_1__1__Impl ;
    public final void rule__OperandList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14222:1: ( rule__OperandList__Group_1__1__Impl )
            // InternalSQLParser.g:14223:2: rule__OperandList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1"


    // $ANTLR start "rule__OperandList__Group_1__1__Impl"
    // InternalSQLParser.g:14229:1: rule__OperandList__Group_1__1__Impl : ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) ;
    public final void rule__OperandList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14233:1: ( ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:14234:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:14234:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            // InternalSQLParser.g:14235:2: ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:14235:2: ( ( rule__OperandList__Group_1_1__0 ) )
            // InternalSQLParser.g:14236:3: ( rule__OperandList__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14237:3: ( rule__OperandList__Group_1_1__0 )
            // InternalSQLParser.g:14237:4: rule__OperandList__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__OperandList__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:14240:2: ( ( rule__OperandList__Group_1_1__0 )* )
            // InternalSQLParser.g:14241:3: ( rule__OperandList__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14242:3: ( rule__OperandList__Group_1_1__0 )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==Comma) ) {
                    alt139=1;
                }


                switch (alt139) {
            	case 1 :
            	    // InternalSQLParser.g:14242:4: rule__OperandList__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__OperandList__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__0"
    // InternalSQLParser.g:14252:1: rule__OperandList__Group_1_1__0 : rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 ;
    public final void rule__OperandList__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14256:1: ( rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 )
            // InternalSQLParser.g:14257:2: rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1
            {
            pushFollow(FOLLOW_81);
            rule__OperandList__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0"


    // $ANTLR start "rule__OperandList__Group_1_1__0__Impl"
    // InternalSQLParser.g:14264:1: rule__OperandList__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OperandList__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14268:1: ( ( Comma ) )
            // InternalSQLParser.g:14269:1: ( Comma )
            {
            // InternalSQLParser.g:14269:1: ( Comma )
            // InternalSQLParser.g:14270:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__1"
    // InternalSQLParser.g:14279:1: rule__OperandList__Group_1_1__1 : rule__OperandList__Group_1_1__1__Impl ;
    public final void rule__OperandList__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14283:1: ( rule__OperandList__Group_1_1__1__Impl )
            // InternalSQLParser.g:14284:2: rule__OperandList__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1"


    // $ANTLR start "rule__OperandList__Group_1_1__1__Impl"
    // InternalSQLParser.g:14290:1: rule__OperandList__Group_1_1__1__Impl : ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OperandList__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14294:1: ( ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:14295:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:14295:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:14296:2: ( rule__OperandList__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:14297:2: ( rule__OperandList__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:14297:3: rule__OperandList__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__0"
    // InternalSQLParser.g:14306:1: rule__OperandGroup__Group_1__0 : rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 ;
    public final void rule__OperandGroup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14310:1: ( rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 )
            // InternalSQLParser.g:14311:2: rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1
            {
            pushFollow(FOLLOW_69);
            rule__OperandGroup__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0"


    // $ANTLR start "rule__OperandGroup__Group_1__0__Impl"
    // InternalSQLParser.g:14318:1: rule__OperandGroup__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandGroup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14322:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:14323:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:14323:1: ( LeftParenthesis )
            // InternalSQLParser.g:14324:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__1"
    // InternalSQLParser.g:14333:1: rule__OperandGroup__Group_1__1 : rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 ;
    public final void rule__OperandGroup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14337:1: ( rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 )
            // InternalSQLParser.g:14338:2: rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2
            {
            pushFollow(FOLLOW_11);
            rule__OperandGroup__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1"


    // $ANTLR start "rule__OperandGroup__Group_1__1__Impl"
    // InternalSQLParser.g:14345:1: rule__OperandGroup__Group_1__1__Impl : ( ruleOperand ) ;
    public final void rule__OperandGroup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14349:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:14350:1: ( ruleOperand )
            {
            // InternalSQLParser.g:14350:1: ( ruleOperand )
            // InternalSQLParser.g:14351:2: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__2"
    // InternalSQLParser.g:14360:1: rule__OperandGroup__Group_1__2 : rule__OperandGroup__Group_1__2__Impl ;
    public final void rule__OperandGroup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14364:1: ( rule__OperandGroup__Group_1__2__Impl )
            // InternalSQLParser.g:14365:2: rule__OperandGroup__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2"


    // $ANTLR start "rule__OperandGroup__Group_1__2__Impl"
    // InternalSQLParser.g:14371:1: rule__OperandGroup__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandGroup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14375:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:14376:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:14376:1: ( RightParenthesis )
            // InternalSQLParser.g:14377:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2__Impl"


    // $ANTLR start "rule__Operand__Group__0"
    // InternalSQLParser.g:14387:1: rule__Operand__Group__0 : rule__Operand__Group__0__Impl rule__Operand__Group__1 ;
    public final void rule__Operand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14391:1: ( rule__Operand__Group__0__Impl rule__Operand__Group__1 )
            // InternalSQLParser.g:14392:2: rule__Operand__Group__0__Impl rule__Operand__Group__1
            {
            pushFollow(FOLLOW_82);
            rule__Operand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0"


    // $ANTLR start "rule__Operand__Group__0__Impl"
    // InternalSQLParser.g:14399:1: rule__Operand__Group__0__Impl : ( ( rule__Operand__Op1Assignment_0 ) ) ;
    public final void rule__Operand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14403:1: ( ( ( rule__Operand__Op1Assignment_0 ) ) )
            // InternalSQLParser.g:14404:1: ( ( rule__Operand__Op1Assignment_0 ) )
            {
            // InternalSQLParser.g:14404:1: ( ( rule__Operand__Op1Assignment_0 ) )
            // InternalSQLParser.g:14405:2: ( rule__Operand__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }
            // InternalSQLParser.g:14406:2: ( rule__Operand__Op1Assignment_0 )
            // InternalSQLParser.g:14406:3: rule__Operand__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0__Impl"


    // $ANTLR start "rule__Operand__Group__1"
    // InternalSQLParser.g:14414:1: rule__Operand__Group__1 : rule__Operand__Group__1__Impl ;
    public final void rule__Operand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14418:1: ( rule__Operand__Group__1__Impl )
            // InternalSQLParser.g:14419:2: rule__Operand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1"


    // $ANTLR start "rule__Operand__Group__1__Impl"
    // InternalSQLParser.g:14425:1: rule__Operand__Group__1__Impl : ( ( rule__Operand__Group_1__0 )* ) ;
    public final void rule__Operand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14429:1: ( ( ( rule__Operand__Group_1__0 )* ) )
            // InternalSQLParser.g:14430:1: ( ( rule__Operand__Group_1__0 )* )
            {
            // InternalSQLParser.g:14430:1: ( ( rule__Operand__Group_1__0 )* )
            // InternalSQLParser.g:14431:2: ( rule__Operand__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:14432:2: ( rule__Operand__Group_1__0 )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==RULE_STAR) ) {
                    int LA140_2 = input.LA(2);

                    if ( (LA140_2==LeftParenthesis) ) {
                        int LA140_4 = input.LA(3);

                        if ( (LA140_4==SELECT) ) {
                            alt140=1;
                        }


                    }
                    else if ( (LA140_2==EXTRACT||LA140_2==CAST||LA140_2==CASE||(LA140_2>=RULE_JRPARAM && LA140_2<=RULE_JRNPARAM)||(LA140_2>=RULE_UNSIGNED && LA140_2<=RULE_SIGNED_DOUBLE)||(LA140_2>=RULE_STRING_ && LA140_2<=RULE_ID)) ) {
                        alt140=1;
                    }


                }
                else if ( (LA140_0==VerticalLineVerticalLine||LA140_0==PlusSign||LA140_0==HyphenMinus||LA140_0==Solidus) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalSQLParser.g:14432:3: rule__Operand__Group_1__0
            	    {
            	    pushFollow(FOLLOW_83);
            	    rule__Operand__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1__Impl"


    // $ANTLR start "rule__Operand__Group_1__0"
    // InternalSQLParser.g:14441:1: rule__Operand__Group_1__0 : rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 ;
    public final void rule__Operand__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14445:1: ( rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 )
            // InternalSQLParser.g:14446:2: rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1
            {
            pushFollow(FOLLOW_69);
            rule__Operand__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0"


    // $ANTLR start "rule__Operand__Group_1__0__Impl"
    // InternalSQLParser.g:14453:1: rule__Operand__Group_1__0__Impl : ( ( rule__Operand__Alternatives_1_0 ) ) ;
    public final void rule__Operand__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14457:1: ( ( ( rule__Operand__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:14458:1: ( ( rule__Operand__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:14458:1: ( ( rule__Operand__Alternatives_1_0 ) )
            // InternalSQLParser.g:14459:2: ( rule__Operand__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:14460:2: ( rule__Operand__Alternatives_1_0 )
            // InternalSQLParser.g:14460:3: rule__Operand__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1__1"
    // InternalSQLParser.g:14468:1: rule__Operand__Group_1__1 : rule__Operand__Group_1__1__Impl ;
    public final void rule__Operand__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14472:1: ( rule__Operand__Group_1__1__Impl )
            // InternalSQLParser.g:14473:2: rule__Operand__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1"


    // $ANTLR start "rule__Operand__Group_1__1__Impl"
    // InternalSQLParser.g:14479:1: rule__Operand__Group_1__1__Impl : ( ( rule__Operand__RightAssignment_1_1 ) ) ;
    public final void rule__Operand__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14483:1: ( ( ( rule__Operand__RightAssignment_1_1 ) ) )
            // InternalSQLParser.g:14484:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            {
            // InternalSQLParser.g:14484:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            // InternalSQLParser.g:14485:2: ( rule__Operand__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }
            // InternalSQLParser.g:14486:2: ( rule__Operand__RightAssignment_1_1 )
            // InternalSQLParser.g:14486:3: rule__Operand__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Operand__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__0"
    // InternalSQLParser.g:14495:1: rule__Operand__Group_1_0_0__0 : rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 ;
    public final void rule__Operand__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14499:1: ( rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 )
            // InternalSQLParser.g:14500:2: rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1
            {
            pushFollow(FOLLOW_84);
            rule__Operand__Group_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0"


    // $ANTLR start "rule__Operand__Group_1_0_0__0__Impl"
    // InternalSQLParser.g:14507:1: rule__Operand__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14511:1: ( ( () ) )
            // InternalSQLParser.g:14512:1: ( () )
            {
            // InternalSQLParser.g:14512:1: ( () )
            // InternalSQLParser.g:14513:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }
            // InternalSQLParser.g:14514:2: ()
            // InternalSQLParser.g:14514:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__1"
    // InternalSQLParser.g:14522:1: rule__Operand__Group_1_0_0__1 : rule__Operand__Group_1_0_0__1__Impl ;
    public final void rule__Operand__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14526:1: ( rule__Operand__Group_1_0_0__1__Impl )
            // InternalSQLParser.g:14527:2: rule__Operand__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1"


    // $ANTLR start "rule__Operand__Group_1_0_0__1__Impl"
    // InternalSQLParser.g:14533:1: rule__Operand__Group_1_0_0__1__Impl : ( PlusSign ) ;
    public final void rule__Operand__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14537:1: ( ( PlusSign ) )
            // InternalSQLParser.g:14538:1: ( PlusSign )
            {
            // InternalSQLParser.g:14538:1: ( PlusSign )
            // InternalSQLParser.g:14539:2: PlusSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }
            match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__0"
    // InternalSQLParser.g:14549:1: rule__Operand__Group_1_0_1__0 : rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 ;
    public final void rule__Operand__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14553:1: ( rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 )
            // InternalSQLParser.g:14554:2: rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1
            {
            pushFollow(FOLLOW_85);
            rule__Operand__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0"


    // $ANTLR start "rule__Operand__Group_1_0_1__0__Impl"
    // InternalSQLParser.g:14561:1: rule__Operand__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14565:1: ( ( () ) )
            // InternalSQLParser.g:14566:1: ( () )
            {
            // InternalSQLParser.g:14566:1: ( () )
            // InternalSQLParser.g:14567:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }
            // InternalSQLParser.g:14568:2: ()
            // InternalSQLParser.g:14568:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__1"
    // InternalSQLParser.g:14576:1: rule__Operand__Group_1_0_1__1 : rule__Operand__Group_1_0_1__1__Impl ;
    public final void rule__Operand__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14580:1: ( rule__Operand__Group_1_0_1__1__Impl )
            // InternalSQLParser.g:14581:2: rule__Operand__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1"


    // $ANTLR start "rule__Operand__Group_1_0_1__1__Impl"
    // InternalSQLParser.g:14587:1: rule__Operand__Group_1_0_1__1__Impl : ( HyphenMinus ) ;
    public final void rule__Operand__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14591:1: ( ( HyphenMinus ) )
            // InternalSQLParser.g:14592:1: ( HyphenMinus )
            {
            // InternalSQLParser.g:14592:1: ( HyphenMinus )
            // InternalSQLParser.g:14593:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__0"
    // InternalSQLParser.g:14603:1: rule__Operand__Group_1_0_2__0 : rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 ;
    public final void rule__Operand__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14607:1: ( rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 )
            // InternalSQLParser.g:14608:2: rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1
            {
            pushFollow(FOLLOW_86);
            rule__Operand__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0"


    // $ANTLR start "rule__Operand__Group_1_0_2__0__Impl"
    // InternalSQLParser.g:14615:1: rule__Operand__Group_1_0_2__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14619:1: ( ( () ) )
            // InternalSQLParser.g:14620:1: ( () )
            {
            // InternalSQLParser.g:14620:1: ( () )
            // InternalSQLParser.g:14621:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }
            // InternalSQLParser.g:14622:2: ()
            // InternalSQLParser.g:14622:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__1"
    // InternalSQLParser.g:14630:1: rule__Operand__Group_1_0_2__1 : rule__Operand__Group_1_0_2__1__Impl ;
    public final void rule__Operand__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14634:1: ( rule__Operand__Group_1_0_2__1__Impl )
            // InternalSQLParser.g:14635:2: rule__Operand__Group_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1"


    // $ANTLR start "rule__Operand__Group_1_0_2__1__Impl"
    // InternalSQLParser.g:14641:1: rule__Operand__Group_1_0_2__1__Impl : ( VerticalLineVerticalLine ) ;
    public final void rule__Operand__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14645:1: ( ( VerticalLineVerticalLine ) )
            // InternalSQLParser.g:14646:1: ( VerticalLineVerticalLine )
            {
            // InternalSQLParser.g:14646:1: ( VerticalLineVerticalLine )
            // InternalSQLParser.g:14647:2: VerticalLineVerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }
            match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__0"
    // InternalSQLParser.g:14657:1: rule__Operand__Group_1_0_3__0 : rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 ;
    public final void rule__Operand__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14661:1: ( rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 )
            // InternalSQLParser.g:14662:2: rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1
            {
            pushFollow(FOLLOW_63);
            rule__Operand__Group_1_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0"


    // $ANTLR start "rule__Operand__Group_1_0_3__0__Impl"
    // InternalSQLParser.g:14669:1: rule__Operand__Group_1_0_3__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14673:1: ( ( () ) )
            // InternalSQLParser.g:14674:1: ( () )
            {
            // InternalSQLParser.g:14674:1: ( () )
            // InternalSQLParser.g:14675:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }
            // InternalSQLParser.g:14676:2: ()
            // InternalSQLParser.g:14676:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__1"
    // InternalSQLParser.g:14684:1: rule__Operand__Group_1_0_3__1 : rule__Operand__Group_1_0_3__1__Impl ;
    public final void rule__Operand__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14688:1: ( rule__Operand__Group_1_0_3__1__Impl )
            // InternalSQLParser.g:14689:2: rule__Operand__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1"


    // $ANTLR start "rule__Operand__Group_1_0_3__1__Impl"
    // InternalSQLParser.g:14695:1: rule__Operand__Group_1_0_3__1__Impl : ( RULE_STAR ) ;
    public final void rule__Operand__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14699:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:14700:1: ( RULE_STAR )
            {
            // InternalSQLParser.g:14700:1: ( RULE_STAR )
            // InternalSQLParser.g:14701:2: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__0"
    // InternalSQLParser.g:14711:1: rule__Operand__Group_1_0_4__0 : rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 ;
    public final void rule__Operand__Group_1_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14715:1: ( rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 )
            // InternalSQLParser.g:14716:2: rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1
            {
            pushFollow(FOLLOW_82);
            rule__Operand__Group_1_0_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0"


    // $ANTLR start "rule__Operand__Group_1_0_4__0__Impl"
    // InternalSQLParser.g:14723:1: rule__Operand__Group_1_0_4__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14727:1: ( ( () ) )
            // InternalSQLParser.g:14728:1: ( () )
            {
            // InternalSQLParser.g:14728:1: ( () )
            // InternalSQLParser.g:14729:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }
            // InternalSQLParser.g:14730:2: ()
            // InternalSQLParser.g:14730:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__1"
    // InternalSQLParser.g:14738:1: rule__Operand__Group_1_0_4__1 : rule__Operand__Group_1_0_4__1__Impl ;
    public final void rule__Operand__Group_1_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14742:1: ( rule__Operand__Group_1_0_4__1__Impl )
            // InternalSQLParser.g:14743:2: rule__Operand__Group_1_0_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1"


    // $ANTLR start "rule__Operand__Group_1_0_4__1__Impl"
    // InternalSQLParser.g:14749:1: rule__Operand__Group_1_0_4__1__Impl : ( Solidus ) ;
    public final void rule__Operand__Group_1_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14753:1: ( ( Solidus ) )
            // InternalSQLParser.g:14754:1: ( Solidus )
            {
            // InternalSQLParser.g:14754:1: ( Solidus )
            // InternalSQLParser.g:14755:2: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__0"
    // InternalSQLParser.g:14765:1: rule__OperandFunction__Group__0 : rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 ;
    public final void rule__OperandFunction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14769:1: ( rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 )
            // InternalSQLParser.g:14770:2: rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__OperandFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0"


    // $ANTLR start "rule__OperandFunction__Group__0__Impl"
    // InternalSQLParser.g:14777:1: rule__OperandFunction__Group__0__Impl : ( () ) ;
    public final void rule__OperandFunction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14781:1: ( ( () ) )
            // InternalSQLParser.g:14782:1: ( () )
            {
            // InternalSQLParser.g:14782:1: ( () )
            // InternalSQLParser.g:14783:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }
            // InternalSQLParser.g:14784:2: ()
            // InternalSQLParser.g:14784:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0__Impl"


    // $ANTLR start "rule__OperandFunction__Group__1"
    // InternalSQLParser.g:14792:1: rule__OperandFunction__Group__1 : rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 ;
    public final void rule__OperandFunction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14796:1: ( rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 )
            // InternalSQLParser.g:14797:2: rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2
            {
            pushFollow(FOLLOW_87);
            rule__OperandFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1"


    // $ANTLR start "rule__OperandFunction__Group__1__Impl"
    // InternalSQLParser.g:14804:1: rule__OperandFunction__Group__1__Impl : ( ( rule__OperandFunction__FnameAssignment_1 ) ) ;
    public final void rule__OperandFunction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14808:1: ( ( ( rule__OperandFunction__FnameAssignment_1 ) ) )
            // InternalSQLParser.g:14809:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            {
            // InternalSQLParser.g:14809:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            // InternalSQLParser.g:14810:2: ( rule__OperandFunction__FnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }
            // InternalSQLParser.g:14811:2: ( rule__OperandFunction__FnameAssignment_1 )
            // InternalSQLParser.g:14811:3: rule__OperandFunction__FnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__FnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__2"
    // InternalSQLParser.g:14819:1: rule__OperandFunction__Group__2 : rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 ;
    public final void rule__OperandFunction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14823:1: ( rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 )
            // InternalSQLParser.g:14824:2: rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3
            {
            pushFollow(FOLLOW_87);
            rule__OperandFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2"


    // $ANTLR start "rule__OperandFunction__Group__2__Impl"
    // InternalSQLParser.g:14831:1: rule__OperandFunction__Group__2__Impl : ( ( rule__OperandFunction__Alternatives_2 )? ) ;
    public final void rule__OperandFunction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14835:1: ( ( ( rule__OperandFunction__Alternatives_2 )? ) )
            // InternalSQLParser.g:14836:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            {
            // InternalSQLParser.g:14836:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            // InternalSQLParser.g:14837:2: ( rule__OperandFunction__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:14838:2: ( rule__OperandFunction__Alternatives_2 )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==DISTINCT||LA141_0==EXTRACT||LA141_0==CAST||LA141_0==CASE||LA141_0==ALL||LA141_0==LeftParenthesis||(LA141_0>=RULE_JRPARAM && LA141_0<=RULE_SIGNED_DOUBLE)||(LA141_0>=RULE_STRING_ && LA141_0<=RULE_ID)) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalSQLParser.g:14838:3: rule__OperandFunction__Alternatives_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2__Impl"


    // $ANTLR start "rule__OperandFunction__Group__3"
    // InternalSQLParser.g:14846:1: rule__OperandFunction__Group__3 : rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 ;
    public final void rule__OperandFunction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14850:1: ( rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 )
            // InternalSQLParser.g:14851:2: rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4
            {
            pushFollow(FOLLOW_88);
            rule__OperandFunction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3"


    // $ANTLR start "rule__OperandFunction__Group__3__Impl"
    // InternalSQLParser.g:14858:1: rule__OperandFunction__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__OperandFunction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14862:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:14863:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:14863:1: ( RightParenthesis )
            // InternalSQLParser.g:14864:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3__Impl"


    // $ANTLR start "rule__OperandFunction__Group__4"
    // InternalSQLParser.g:14873:1: rule__OperandFunction__Group__4 : rule__OperandFunction__Group__4__Impl ;
    public final void rule__OperandFunction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14877:1: ( rule__OperandFunction__Group__4__Impl )
            // InternalSQLParser.g:14878:2: rule__OperandFunction__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4"


    // $ANTLR start "rule__OperandFunction__Group__4__Impl"
    // InternalSQLParser.g:14884:1: rule__OperandFunction__Group__4__Impl : ( ( rule__OperandFunction__FanAssignment_4 )? ) ;
    public final void rule__OperandFunction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14888:1: ( ( ( rule__OperandFunction__FanAssignment_4 )? ) )
            // InternalSQLParser.g:14889:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            {
            // InternalSQLParser.g:14889:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            // InternalSQLParser.g:14890:2: ( rule__OperandFunction__FanAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }
            // InternalSQLParser.g:14891:2: ( rule__OperandFunction__FanAssignment_4 )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==OVER) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalSQLParser.g:14891:3: rule__OperandFunction__FanAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__FanAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__0"
    // InternalSQLParser.g:14900:1: rule__FunctionExtract__Group__0 : rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 ;
    public final void rule__FunctionExtract__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14904:1: ( rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 )
            // InternalSQLParser.g:14905:2: rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FunctionExtract__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0"


    // $ANTLR start "rule__FunctionExtract__Group__0__Impl"
    // InternalSQLParser.g:14912:1: rule__FunctionExtract__Group__0__Impl : ( EXTRACT ) ;
    public final void rule__FunctionExtract__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14916:1: ( ( EXTRACT ) )
            // InternalSQLParser.g:14917:1: ( EXTRACT )
            {
            // InternalSQLParser.g:14917:1: ( EXTRACT )
            // InternalSQLParser.g:14918:2: EXTRACT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }
            match(input,EXTRACT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__1"
    // InternalSQLParser.g:14927:1: rule__FunctionExtract__Group__1 : rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 ;
    public final void rule__FunctionExtract__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14931:1: ( rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 )
            // InternalSQLParser.g:14932:2: rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2
            {
            pushFollow(FOLLOW_89);
            rule__FunctionExtract__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1"


    // $ANTLR start "rule__FunctionExtract__Group__1__Impl"
    // InternalSQLParser.g:14939:1: rule__FunctionExtract__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionExtract__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14943:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:14944:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:14944:1: ( LeftParenthesis )
            // InternalSQLParser.g:14945:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__2"
    // InternalSQLParser.g:14954:1: rule__FunctionExtract__Group__2 : rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 ;
    public final void rule__FunctionExtract__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14958:1: ( rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 )
            // InternalSQLParser.g:14959:2: rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__FunctionExtract__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2"


    // $ANTLR start "rule__FunctionExtract__Group__2__Impl"
    // InternalSQLParser.g:14966:1: rule__FunctionExtract__Group__2__Impl : ( ( rule__FunctionExtract__VAssignment_2 ) ) ;
    public final void rule__FunctionExtract__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14970:1: ( ( ( rule__FunctionExtract__VAssignment_2 ) ) )
            // InternalSQLParser.g:14971:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            {
            // InternalSQLParser.g:14971:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            // InternalSQLParser.g:14972:2: ( rule__FunctionExtract__VAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }
            // InternalSQLParser.g:14973:2: ( rule__FunctionExtract__VAssignment_2 )
            // InternalSQLParser.g:14973:3: rule__FunctionExtract__VAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__VAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__3"
    // InternalSQLParser.g:14981:1: rule__FunctionExtract__Group__3 : rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 ;
    public final void rule__FunctionExtract__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14985:1: ( rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 )
            // InternalSQLParser.g:14986:2: rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4
            {
            pushFollow(FOLLOW_69);
            rule__FunctionExtract__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3"


    // $ANTLR start "rule__FunctionExtract__Group__3__Impl"
    // InternalSQLParser.g:14993:1: rule__FunctionExtract__Group__3__Impl : ( FROM ) ;
    public final void rule__FunctionExtract__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14997:1: ( ( FROM ) )
            // InternalSQLParser.g:14998:1: ( FROM )
            {
            // InternalSQLParser.g:14998:1: ( FROM )
            // InternalSQLParser.g:14999:2: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__4"
    // InternalSQLParser.g:15008:1: rule__FunctionExtract__Group__4 : rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 ;
    public final void rule__FunctionExtract__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15012:1: ( rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 )
            // InternalSQLParser.g:15013:2: rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5
            {
            pushFollow(FOLLOW_11);
            rule__FunctionExtract__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4"


    // $ANTLR start "rule__FunctionExtract__Group__4__Impl"
    // InternalSQLParser.g:15020:1: rule__FunctionExtract__Group__4__Impl : ( ( rule__FunctionExtract__OperandAssignment_4 ) ) ;
    public final void rule__FunctionExtract__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15024:1: ( ( ( rule__FunctionExtract__OperandAssignment_4 ) ) )
            // InternalSQLParser.g:15025:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            {
            // InternalSQLParser.g:15025:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            // InternalSQLParser.g:15026:2: ( rule__FunctionExtract__OperandAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }
            // InternalSQLParser.g:15027:2: ( rule__FunctionExtract__OperandAssignment_4 )
            // InternalSQLParser.g:15027:3: rule__FunctionExtract__OperandAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__OperandAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__5"
    // InternalSQLParser.g:15035:1: rule__FunctionExtract__Group__5 : rule__FunctionExtract__Group__5__Impl ;
    public final void rule__FunctionExtract__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15039:1: ( rule__FunctionExtract__Group__5__Impl )
            // InternalSQLParser.g:15040:2: rule__FunctionExtract__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5"


    // $ANTLR start "rule__FunctionExtract__Group__5__Impl"
    // InternalSQLParser.g:15046:1: rule__FunctionExtract__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionExtract__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15050:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:15051:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:15051:1: ( RightParenthesis )
            // InternalSQLParser.g:15052:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__0"
    // InternalSQLParser.g:15062:1: rule__FunctionAnalytical__Group__0 : rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 ;
    public final void rule__FunctionAnalytical__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15066:1: ( rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 )
            // InternalSQLParser.g:15067:2: rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FunctionAnalytical__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0"


    // $ANTLR start "rule__FunctionAnalytical__Group__0__Impl"
    // InternalSQLParser.g:15074:1: rule__FunctionAnalytical__Group__0__Impl : ( OVER ) ;
    public final void rule__FunctionAnalytical__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15078:1: ( ( OVER ) )
            // InternalSQLParser.g:15079:1: ( OVER )
            {
            // InternalSQLParser.g:15079:1: ( OVER )
            // InternalSQLParser.g:15080:2: OVER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }
            match(input,OVER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__1"
    // InternalSQLParser.g:15089:1: rule__FunctionAnalytical__Group__1 : rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 ;
    public final void rule__FunctionAnalytical__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15093:1: ( rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 )
            // InternalSQLParser.g:15094:2: rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2
            {
            pushFollow(FOLLOW_90);
            rule__FunctionAnalytical__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1"


    // $ANTLR start "rule__FunctionAnalytical__Group__1__Impl"
    // InternalSQLParser.g:15101:1: rule__FunctionAnalytical__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15105:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:15106:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:15106:1: ( LeftParenthesis )
            // InternalSQLParser.g:15107:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__2"
    // InternalSQLParser.g:15116:1: rule__FunctionAnalytical__Group__2 : rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 ;
    public final void rule__FunctionAnalytical__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15120:1: ( rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 )
            // InternalSQLParser.g:15121:2: rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__FunctionAnalytical__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2"


    // $ANTLR start "rule__FunctionAnalytical__Group__2__Impl"
    // InternalSQLParser.g:15128:1: rule__FunctionAnalytical__Group__2__Impl : ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) ;
    public final void rule__FunctionAnalytical__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15132:1: ( ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) )
            // InternalSQLParser.g:15133:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            {
            // InternalSQLParser.g:15133:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            // InternalSQLParser.g:15134:2: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }
            // InternalSQLParser.g:15135:2: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            // InternalSQLParser.g:15135:3: rule__FunctionAnalytical__AnClauseAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__AnClauseAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__3"
    // InternalSQLParser.g:15143:1: rule__FunctionAnalytical__Group__3 : rule__FunctionAnalytical__Group__3__Impl ;
    public final void rule__FunctionAnalytical__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15147:1: ( rule__FunctionAnalytical__Group__3__Impl )
            // InternalSQLParser.g:15148:2: rule__FunctionAnalytical__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3"


    // $ANTLR start "rule__FunctionAnalytical__Group__3__Impl"
    // InternalSQLParser.g:15154:1: rule__FunctionAnalytical__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15158:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:15159:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:15159:1: ( RightParenthesis )
            // InternalSQLParser.g:15160:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__0"
    // InternalSQLParser.g:15170:1: rule__AnalyticClause__Group__0 : rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 ;
    public final void rule__AnalyticClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15174:1: ( rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 )
            // InternalSQLParser.g:15175:2: rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1
            {
            pushFollow(FOLLOW_90);
            rule__AnalyticClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0"


    // $ANTLR start "rule__AnalyticClause__Group__0__Impl"
    // InternalSQLParser.g:15182:1: rule__AnalyticClause__Group__0__Impl : ( () ) ;
    public final void rule__AnalyticClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15186:1: ( ( () ) )
            // InternalSQLParser.g:15187:1: ( () )
            {
            // InternalSQLParser.g:15187:1: ( () )
            // InternalSQLParser.g:15188:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }
            // InternalSQLParser.g:15189:2: ()
            // InternalSQLParser.g:15189:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__1"
    // InternalSQLParser.g:15197:1: rule__AnalyticClause__Group__1 : rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 ;
    public final void rule__AnalyticClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15201:1: ( rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 )
            // InternalSQLParser.g:15202:2: rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2
            {
            pushFollow(FOLLOW_90);
            rule__AnalyticClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1"


    // $ANTLR start "rule__AnalyticClause__Group__1__Impl"
    // InternalSQLParser.g:15209:1: rule__AnalyticClause__Group__1__Impl : ( ( rule__AnalyticClause__AbcAssignment_1 )? ) ;
    public final void rule__AnalyticClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15213:1: ( ( ( rule__AnalyticClause__AbcAssignment_1 )? ) )
            // InternalSQLParser.g:15214:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            {
            // InternalSQLParser.g:15214:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            // InternalSQLParser.g:15215:2: ( rule__AnalyticClause__AbcAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }
            // InternalSQLParser.g:15216:2: ( rule__AnalyticClause__AbcAssignment_1 )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==PARTITION) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSQLParser.g:15216:3: rule__AnalyticClause__AbcAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__AbcAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__2"
    // InternalSQLParser.g:15224:1: rule__AnalyticClause__Group__2 : rule__AnalyticClause__Group__2__Impl ;
    public final void rule__AnalyticClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15228:1: ( rule__AnalyticClause__Group__2__Impl )
            // InternalSQLParser.g:15229:2: rule__AnalyticClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2"


    // $ANTLR start "rule__AnalyticClause__Group__2__Impl"
    // InternalSQLParser.g:15235:1: rule__AnalyticClause__Group__2__Impl : ( ( rule__AnalyticClause__Group_2__0 )? ) ;
    public final void rule__AnalyticClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15239:1: ( ( ( rule__AnalyticClause__Group_2__0 )? ) )
            // InternalSQLParser.g:15240:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            {
            // InternalSQLParser.g:15240:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            // InternalSQLParser.g:15241:2: ( rule__AnalyticClause__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:15242:2: ( rule__AnalyticClause__Group_2__0 )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==ORDER) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalSQLParser.g:15242:3: rule__AnalyticClause__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__0"
    // InternalSQLParser.g:15251:1: rule__AnalyticClause__Group_2__0 : rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 ;
    public final void rule__AnalyticClause__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15255:1: ( rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 )
            // InternalSQLParser.g:15256:2: rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1
            {
            pushFollow(FOLLOW_91);
            rule__AnalyticClause__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0"


    // $ANTLR start "rule__AnalyticClause__Group_2__0__Impl"
    // InternalSQLParser.g:15263:1: rule__AnalyticClause__Group_2__0__Impl : ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) ;
    public final void rule__AnalyticClause__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15267:1: ( ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) )
            // InternalSQLParser.g:15268:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            {
            // InternalSQLParser.g:15268:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            // InternalSQLParser.g:15269:2: ( rule__AnalyticClause__ObcAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }
            // InternalSQLParser.g:15270:2: ( rule__AnalyticClause__ObcAssignment_2_0 )
            // InternalSQLParser.g:15270:3: rule__AnalyticClause__ObcAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__ObcAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__1"
    // InternalSQLParser.g:15278:1: rule__AnalyticClause__Group_2__1 : rule__AnalyticClause__Group_2__1__Impl ;
    public final void rule__AnalyticClause__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15282:1: ( rule__AnalyticClause__Group_2__1__Impl )
            // InternalSQLParser.g:15283:2: rule__AnalyticClause__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1"


    // $ANTLR start "rule__AnalyticClause__Group_2__1__Impl"
    // InternalSQLParser.g:15289:1: rule__AnalyticClause__Group_2__1__Impl : ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) ;
    public final void rule__AnalyticClause__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15293:1: ( ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) )
            // InternalSQLParser.g:15294:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            {
            // InternalSQLParser.g:15294:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            // InternalSQLParser.g:15295:2: ( rule__AnalyticClause__WincAssignment_2_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }
            // InternalSQLParser.g:15296:2: ( rule__AnalyticClause__WincAssignment_2_1 )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==RANGE||LA145_0==ROWS) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalSQLParser.g:15296:3: rule__AnalyticClause__WincAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__WincAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1__Impl"


    // $ANTLR start "rule__WindowingClause__Group__0"
    // InternalSQLParser.g:15305:1: rule__WindowingClause__Group__0 : rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 ;
    public final void rule__WindowingClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15309:1: ( rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 )
            // InternalSQLParser.g:15310:2: rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1
            {
            pushFollow(FOLLOW_92);
            rule__WindowingClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0"


    // $ANTLR start "rule__WindowingClause__Group__0__Impl"
    // InternalSQLParser.g:15317:1: rule__WindowingClause__Group__0__Impl : ( ( rule__WindowingClause__Alternatives_0 ) ) ;
    public final void rule__WindowingClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15321:1: ( ( ( rule__WindowingClause__Alternatives_0 ) ) )
            // InternalSQLParser.g:15322:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            {
            // InternalSQLParser.g:15322:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            // InternalSQLParser.g:15323:2: ( rule__WindowingClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:15324:2: ( rule__WindowingClause__Alternatives_0 )
            // InternalSQLParser.g:15324:3: rule__WindowingClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0__Impl"


    // $ANTLR start "rule__WindowingClause__Group__1"
    // InternalSQLParser.g:15332:1: rule__WindowingClause__Group__1 : rule__WindowingClause__Group__1__Impl ;
    public final void rule__WindowingClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15336:1: ( rule__WindowingClause__Group__1__Impl )
            // InternalSQLParser.g:15337:2: rule__WindowingClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1"


    // $ANTLR start "rule__WindowingClause__Group__1__Impl"
    // InternalSQLParser.g:15343:1: rule__WindowingClause__Group__1__Impl : ( ( rule__WindowingClause__Alternatives_1 ) ) ;
    public final void rule__WindowingClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15347:1: ( ( ( rule__WindowingClause__Alternatives_1 ) ) )
            // InternalSQLParser.g:15348:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            {
            // InternalSQLParser.g:15348:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            // InternalSQLParser.g:15349:2: ( rule__WindowingClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:15350:2: ( rule__WindowingClause__Alternatives_1 )
            // InternalSQLParser.g:15350:3: rule__WindowingClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0"
    // InternalSQLParser.g:15359:1: rule__WindowingClauseBetween__Group__0 : rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 ;
    public final void rule__WindowingClauseBetween__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15363:1: ( rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 )
            // InternalSQLParser.g:15364:2: rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1
            {
            pushFollow(FOLLOW_92);
            rule__WindowingClauseBetween__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0__Impl"
    // InternalSQLParser.g:15371:1: rule__WindowingClauseBetween__Group__0__Impl : ( BETWEEN ) ;
    public final void rule__WindowingClauseBetween__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15375:1: ( ( BETWEEN ) )
            // InternalSQLParser.g:15376:1: ( BETWEEN )
            {
            // InternalSQLParser.g:15376:1: ( BETWEEN )
            // InternalSQLParser.g:15377:2: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1"
    // InternalSQLParser.g:15386:1: rule__WindowingClauseBetween__Group__1 : rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 ;
    public final void rule__WindowingClauseBetween__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15390:1: ( rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 )
            // InternalSQLParser.g:15391:2: rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClauseBetween__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1__Impl"
    // InternalSQLParser.g:15398:1: rule__WindowingClauseBetween__Group__1__Impl : ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) ;
    public final void rule__WindowingClauseBetween__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15402:1: ( ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) )
            // InternalSQLParser.g:15403:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            {
            // InternalSQLParser.g:15403:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            // InternalSQLParser.g:15404:2: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }
            // InternalSQLParser.g:15405:2: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            // InternalSQLParser.g:15405:3: rule__WindowingClauseBetween__WcoPAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoPAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2"
    // InternalSQLParser.g:15413:1: rule__WindowingClauseBetween__Group__2 : rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 ;
    public final void rule__WindowingClauseBetween__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15417:1: ( rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 )
            // InternalSQLParser.g:15418:2: rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3
            {
            pushFollow(FOLLOW_92);
            rule__WindowingClauseBetween__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2__Impl"
    // InternalSQLParser.g:15425:1: rule__WindowingClauseBetween__Group__2__Impl : ( AND ) ;
    public final void rule__WindowingClauseBetween__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15429:1: ( ( AND ) )
            // InternalSQLParser.g:15430:1: ( AND )
            {
            // InternalSQLParser.g:15430:1: ( AND )
            // InternalSQLParser.g:15431:2: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3"
    // InternalSQLParser.g:15440:1: rule__WindowingClauseBetween__Group__3 : rule__WindowingClauseBetween__Group__3__Impl ;
    public final void rule__WindowingClauseBetween__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15444:1: ( rule__WindowingClauseBetween__Group__3__Impl )
            // InternalSQLParser.g:15445:2: rule__WindowingClauseBetween__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3__Impl"
    // InternalSQLParser.g:15451:1: rule__WindowingClauseBetween__Group__3__Impl : ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) ;
    public final void rule__WindowingClauseBetween__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15455:1: ( ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) )
            // InternalSQLParser.g:15456:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            {
            // InternalSQLParser.g:15456:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            // InternalSQLParser.g:15457:2: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }
            // InternalSQLParser.g:15458:2: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            // InternalSQLParser.g:15458:3: rule__WindowingClauseBetween__WcoFAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoFAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0"
    // InternalSQLParser.g:15467:1: rule__WindowingClauseOperandFollowing__Group__0 : rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15471:1: ( rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 )
            // InternalSQLParser.g:15472:2: rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1
            {
            pushFollow(FOLLOW_92);
            rule__WindowingClauseOperandFollowing__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0__Impl"
    // InternalSQLParser.g:15479:1: rule__WindowingClauseOperandFollowing__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15483:1: ( ( () ) )
            // InternalSQLParser.g:15484:1: ( () )
            {
            // InternalSQLParser.g:15484:1: ( () )
            // InternalSQLParser.g:15485:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }
            // InternalSQLParser.g:15486:2: ()
            // InternalSQLParser.g:15486:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1"
    // InternalSQLParser.g:15494:1: rule__WindowingClauseOperandFollowing__Group__1 : rule__WindowingClauseOperandFollowing__Group__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15498:1: ( rule__WindowingClauseOperandFollowing__Group__1__Impl )
            // InternalSQLParser.g:15499:2: rule__WindowingClauseOperandFollowing__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1__Impl"
    // InternalSQLParser.g:15505:1: rule__WindowingClauseOperandFollowing__Group__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15509:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) )
            // InternalSQLParser.g:15510:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            {
            // InternalSQLParser.g:15510:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            // InternalSQLParser.g:15511:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:15512:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            // InternalSQLParser.g:15512:3: rule__WindowingClauseOperandFollowing__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0"
    // InternalSQLParser.g:15521:1: rule__WindowingClauseOperandFollowing__Group_1_0__0 : rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15525:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 )
            // InternalSQLParser.g:15526:2: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1
            {
            pushFollow(FOLLOW_93);
            rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"
    // InternalSQLParser.g:15533:1: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15537:1: ( ( UNBOUNDED ) )
            // InternalSQLParser.g:15538:1: ( UNBOUNDED )
            {
            // InternalSQLParser.g:15538:1: ( UNBOUNDED )
            // InternalSQLParser.g:15539:2: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1"
    // InternalSQLParser.g:15548:1: rule__WindowingClauseOperandFollowing__Group_1_0__1 : rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15552:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl )
            // InternalSQLParser.g:15553:2: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"
    // InternalSQLParser.g:15559:1: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl : ( KW_FOLLOWING ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15563:1: ( ( KW_FOLLOWING ) )
            // InternalSQLParser.g:15564:1: ( KW_FOLLOWING )
            {
            // InternalSQLParser.g:15564:1: ( KW_FOLLOWING )
            // InternalSQLParser.g:15565:2: KW_FOLLOWING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }
            match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0"
    // InternalSQLParser.g:15575:1: rule__WindowingClauseOperandFollowing__Group_1_1__0 : rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15579:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 )
            // InternalSQLParser.g:15580:2: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1
            {
            pushFollow(FOLLOW_94);
            rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"
    // InternalSQLParser.g:15587:1: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15591:1: ( ( CURRENT ) )
            // InternalSQLParser.g:15592:1: ( CURRENT )
            {
            // InternalSQLParser.g:15592:1: ( CURRENT )
            // InternalSQLParser.g:15593:2: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1"
    // InternalSQLParser.g:15602:1: rule__WindowingClauseOperandFollowing__Group_1_1__1 : rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15606:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl )
            // InternalSQLParser.g:15607:2: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"
    // InternalSQLParser.g:15613:1: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15617:1: ( ( ROW ) )
            // InternalSQLParser.g:15618:1: ( ROW )
            {
            // InternalSQLParser.g:15618:1: ( ROW )
            // InternalSQLParser.g:15619:2: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0"
    // InternalSQLParser.g:15629:1: rule__WindowingClauseOperandFollowing__Group_1_2__0 : rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15633:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 )
            // InternalSQLParser.g:15634:2: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1
            {
            pushFollow(FOLLOW_95);
            rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"
    // InternalSQLParser.g:15641:1: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15645:1: ( ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) )
            // InternalSQLParser.g:15646:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            {
            // InternalSQLParser.g:15646:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            // InternalSQLParser.g:15647:2: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }
            // InternalSQLParser.g:15648:2: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            // InternalSQLParser.g:15648:3: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1"
    // InternalSQLParser.g:15656:1: rule__WindowingClauseOperandFollowing__Group_1_2__1 : rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15660:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl )
            // InternalSQLParser.g:15661:2: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"
    // InternalSQLParser.g:15667:1: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15671:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) )
            // InternalSQLParser.g:15672:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            {
            // InternalSQLParser.g:15672:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            // InternalSQLParser.g:15673:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSQLParser.g:15674:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            // InternalSQLParser.g:15674:3: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0"
    // InternalSQLParser.g:15683:1: rule__WindowingClauseOperandPreceding__Group__0 : rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15687:1: ( rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 )
            // InternalSQLParser.g:15688:2: rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1
            {
            pushFollow(FOLLOW_92);
            rule__WindowingClauseOperandPreceding__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0__Impl"
    // InternalSQLParser.g:15695:1: rule__WindowingClauseOperandPreceding__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15699:1: ( ( () ) )
            // InternalSQLParser.g:15700:1: ( () )
            {
            // InternalSQLParser.g:15700:1: ( () )
            // InternalSQLParser.g:15701:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }
            // InternalSQLParser.g:15702:2: ()
            // InternalSQLParser.g:15702:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1"
    // InternalSQLParser.g:15710:1: rule__WindowingClauseOperandPreceding__Group__1 : rule__WindowingClauseOperandPreceding__Group__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15714:1: ( rule__WindowingClauseOperandPreceding__Group__1__Impl )
            // InternalSQLParser.g:15715:2: rule__WindowingClauseOperandPreceding__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1__Impl"
    // InternalSQLParser.g:15721:1: rule__WindowingClauseOperandPreceding__Group__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15725:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) )
            // InternalSQLParser.g:15726:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            {
            // InternalSQLParser.g:15726:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            // InternalSQLParser.g:15727:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:15728:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            // InternalSQLParser.g:15728:3: rule__WindowingClauseOperandPreceding__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0"
    // InternalSQLParser.g:15737:1: rule__WindowingClauseOperandPreceding__Group_1_0__0 : rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15741:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 )
            // InternalSQLParser.g:15742:2: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1
            {
            pushFollow(FOLLOW_96);
            rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"
    // InternalSQLParser.g:15749:1: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15753:1: ( ( UNBOUNDED ) )
            // InternalSQLParser.g:15754:1: ( UNBOUNDED )
            {
            // InternalSQLParser.g:15754:1: ( UNBOUNDED )
            // InternalSQLParser.g:15755:2: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1"
    // InternalSQLParser.g:15764:1: rule__WindowingClauseOperandPreceding__Group_1_0__1 : rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15768:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl )
            // InternalSQLParser.g:15769:2: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"
    // InternalSQLParser.g:15775:1: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl : ( PRECEDING ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15779:1: ( ( PRECEDING ) )
            // InternalSQLParser.g:15780:1: ( PRECEDING )
            {
            // InternalSQLParser.g:15780:1: ( PRECEDING )
            // InternalSQLParser.g:15781:2: PRECEDING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }
            match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0"
    // InternalSQLParser.g:15791:1: rule__WindowingClauseOperandPreceding__Group_1_1__0 : rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15795:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 )
            // InternalSQLParser.g:15796:2: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1
            {
            pushFollow(FOLLOW_94);
            rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"
    // InternalSQLParser.g:15803:1: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15807:1: ( ( CURRENT ) )
            // InternalSQLParser.g:15808:1: ( CURRENT )
            {
            // InternalSQLParser.g:15808:1: ( CURRENT )
            // InternalSQLParser.g:15809:2: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1"
    // InternalSQLParser.g:15818:1: rule__WindowingClauseOperandPreceding__Group_1_1__1 : rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15822:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl )
            // InternalSQLParser.g:15823:2: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"
    // InternalSQLParser.g:15829:1: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15833:1: ( ( ROW ) )
            // InternalSQLParser.g:15834:1: ( ROW )
            {
            // InternalSQLParser.g:15834:1: ( ROW )
            // InternalSQLParser.g:15835:2: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0"
    // InternalSQLParser.g:15845:1: rule__WindowingClauseOperandPreceding__Group_1_2__0 : rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15849:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 )
            // InternalSQLParser.g:15850:2: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1
            {
            pushFollow(FOLLOW_95);
            rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"
    // InternalSQLParser.g:15857:1: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15861:1: ( ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) )
            // InternalSQLParser.g:15862:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            {
            // InternalSQLParser.g:15862:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            // InternalSQLParser.g:15863:2: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }
            // InternalSQLParser.g:15864:2: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            // InternalSQLParser.g:15864:3: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1"
    // InternalSQLParser.g:15872:1: rule__WindowingClauseOperandPreceding__Group_1_2__1 : rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15876:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl )
            // InternalSQLParser.g:15877:2: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"
    // InternalSQLParser.g:15883:1: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15887:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) )
            // InternalSQLParser.g:15888:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            {
            // InternalSQLParser.g:15888:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            // InternalSQLParser.g:15889:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSQLParser.g:15890:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            // InternalSQLParser.g:15890:3: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group__0"
    // InternalSQLParser.g:15899:1: rule__OrderByClause__Group__0 : rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 ;
    public final void rule__OrderByClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15903:1: ( rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 )
            // InternalSQLParser.g:15904:2: rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1
            {
            pushFollow(FOLLOW_92);
            rule__OrderByClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0"


    // $ANTLR start "rule__OrderByClause__Group__0__Impl"
    // InternalSQLParser.g:15911:1: rule__OrderByClause__Group__0__Impl : ( ( rule__OrderByClause__Alternatives_0 ) ) ;
    public final void rule__OrderByClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15915:1: ( ( ( rule__OrderByClause__Alternatives_0 ) ) )
            // InternalSQLParser.g:15916:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            {
            // InternalSQLParser.g:15916:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            // InternalSQLParser.g:15917:2: ( rule__OrderByClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:15918:2: ( rule__OrderByClause__Alternatives_0 )
            // InternalSQLParser.g:15918:3: rule__OrderByClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group__1"
    // InternalSQLParser.g:15926:1: rule__OrderByClause__Group__1 : rule__OrderByClause__Group__1__Impl ;
    public final void rule__OrderByClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15930:1: ( rule__OrderByClause__Group__1__Impl )
            // InternalSQLParser.g:15931:2: rule__OrderByClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1"


    // $ANTLR start "rule__OrderByClause__Group__1__Impl"
    // InternalSQLParser.g:15937:1: rule__OrderByClause__Group__1__Impl : ( ( rule__OrderByClause__ArgsAssignment_1 ) ) ;
    public final void rule__OrderByClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15941:1: ( ( ( rule__OrderByClause__ArgsAssignment_1 ) ) )
            // InternalSQLParser.g:15942:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            {
            // InternalSQLParser.g:15942:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            // InternalSQLParser.g:15943:2: ( rule__OrderByClause__ArgsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }
            // InternalSQLParser.g:15944:2: ( rule__OrderByClause__ArgsAssignment_1 )
            // InternalSQLParser.g:15944:3: rule__OrderByClause__ArgsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__ArgsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0"
    // InternalSQLParser.g:15953:1: rule__OrderByClause__Group_0_0__0 : rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 ;
    public final void rule__OrderByClause__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15957:1: ( rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 )
            // InternalSQLParser.g:15958:2: rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1
            {
            pushFollow(FOLLOW_41);
            rule__OrderByClause__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0__Impl"
    // InternalSQLParser.g:15965:1: rule__OrderByClause__Group_0_0__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15969:1: ( ( ORDER ) )
            // InternalSQLParser.g:15970:1: ( ORDER )
            {
            // InternalSQLParser.g:15970:1: ( ORDER )
            // InternalSQLParser.g:15971:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1"
    // InternalSQLParser.g:15980:1: rule__OrderByClause__Group_0_0__1 : rule__OrderByClause__Group_0_0__1__Impl ;
    public final void rule__OrderByClause__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15984:1: ( rule__OrderByClause__Group_0_0__1__Impl )
            // InternalSQLParser.g:15985:2: rule__OrderByClause__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1__Impl"
    // InternalSQLParser.g:15991:1: rule__OrderByClause__Group_0_0__1__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15995:1: ( ( BY ) )
            // InternalSQLParser.g:15996:1: ( BY )
            {
            // InternalSQLParser.g:15996:1: ( BY )
            // InternalSQLParser.g:15997:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0"
    // InternalSQLParser.g:16007:1: rule__OrderByClause__Group_0_1__0 : rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 ;
    public final void rule__OrderByClause__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16011:1: ( rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 )
            // InternalSQLParser.g:16012:2: rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1
            {
            pushFollow(FOLLOW_97);
            rule__OrderByClause__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0__Impl"
    // InternalSQLParser.g:16019:1: rule__OrderByClause__Group_0_1__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16023:1: ( ( ORDER ) )
            // InternalSQLParser.g:16024:1: ( ORDER )
            {
            // InternalSQLParser.g:16024:1: ( ORDER )
            // InternalSQLParser.g:16025:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1"
    // InternalSQLParser.g:16034:1: rule__OrderByClause__Group_0_1__1 : rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 ;
    public final void rule__OrderByClause__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16038:1: ( rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 )
            // InternalSQLParser.g:16039:2: rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2
            {
            pushFollow(FOLLOW_41);
            rule__OrderByClause__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1__Impl"
    // InternalSQLParser.g:16046:1: rule__OrderByClause__Group_0_1__1__Impl : ( SIBLINGS ) ;
    public final void rule__OrderByClause__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16050:1: ( ( SIBLINGS ) )
            // InternalSQLParser.g:16051:1: ( SIBLINGS )
            {
            // InternalSQLParser.g:16051:1: ( SIBLINGS )
            // InternalSQLParser.g:16052:2: SIBLINGS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }
            match(input,SIBLINGS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2"
    // InternalSQLParser.g:16061:1: rule__OrderByClause__Group_0_1__2 : rule__OrderByClause__Group_0_1__2__Impl ;
    public final void rule__OrderByClause__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16065:1: ( rule__OrderByClause__Group_0_1__2__Impl )
            // InternalSQLParser.g:16066:2: rule__OrderByClause__Group_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2__Impl"
    // InternalSQLParser.g:16072:1: rule__OrderByClause__Group_0_1__2__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16076:1: ( ( BY ) )
            // InternalSQLParser.g:16077:1: ( BY )
            {
            // InternalSQLParser.g:16077:1: ( BY )
            // InternalSQLParser.g:16078:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0"
    // InternalSQLParser.g:16088:1: rule__OrderByClauseArgs__Group__0 : rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 ;
    public final void rule__OrderByClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16092:1: ( rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 )
            // InternalSQLParser.g:16093:2: rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__OrderByClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0__Impl"
    // InternalSQLParser.g:16100:1: rule__OrderByClauseArgs__Group__0__Impl : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16104:1: ( ( ruleOrderByClauseArg ) )
            // InternalSQLParser.g:16105:1: ( ruleOrderByClauseArg )
            {
            // InternalSQLParser.g:16105:1: ( ruleOrderByClauseArg )
            // InternalSQLParser.g:16106:2: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1"
    // InternalSQLParser.g:16115:1: rule__OrderByClauseArgs__Group__1 : rule__OrderByClauseArgs__Group__1__Impl ;
    public final void rule__OrderByClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16119:1: ( rule__OrderByClauseArgs__Group__1__Impl )
            // InternalSQLParser.g:16120:2: rule__OrderByClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1__Impl"
    // InternalSQLParser.g:16126:1: rule__OrderByClauseArgs__Group__1__Impl : ( ( rule__OrderByClauseArgs__Group_1__0 )? ) ;
    public final void rule__OrderByClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16130:1: ( ( ( rule__OrderByClauseArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:16131:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:16131:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            // InternalSQLParser.g:16132:2: ( rule__OrderByClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:16133:2: ( rule__OrderByClauseArgs__Group_1__0 )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==Comma) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalSQLParser.g:16133:3: rule__OrderByClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0"
    // InternalSQLParser.g:16142:1: rule__OrderByClauseArgs__Group_1__0 : rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16146:1: ( rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 )
            // InternalSQLParser.g:16147:2: rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__OrderByClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0__Impl"
    // InternalSQLParser.g:16154:1: rule__OrderByClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16158:1: ( ( () ) )
            // InternalSQLParser.g:16159:1: ( () )
            {
            // InternalSQLParser.g:16159:1: ( () )
            // InternalSQLParser.g:16160:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:16161:2: ()
            // InternalSQLParser.g:16161:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1"
    // InternalSQLParser.g:16169:1: rule__OrderByClauseArgs__Group_1__1 : rule__OrderByClauseArgs__Group_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16173:1: ( rule__OrderByClauseArgs__Group_1__1__Impl )
            // InternalSQLParser.g:16174:2: rule__OrderByClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1__Impl"
    // InternalSQLParser.g:16180:1: rule__OrderByClauseArgs__Group_1__1__Impl : ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16184:1: ( ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:16185:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:16185:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:16186:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:16186:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:16187:3: ( rule__OrderByClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:16188:3: ( rule__OrderByClauseArgs__Group_1_1__0 )
            // InternalSQLParser.g:16188:4: rule__OrderByClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__OrderByClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:16191:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:16192:3: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:16193:3: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==Comma) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // InternalSQLParser.g:16193:4: rule__OrderByClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__OrderByClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0"
    // InternalSQLParser.g:16203:1: rule__OrderByClauseArgs__Group_1_1__0 : rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16207:1: ( rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 )
            // InternalSQLParser.g:16208:2: rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_92);
            rule__OrderByClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:16215:1: rule__OrderByClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16219:1: ( ( Comma ) )
            // InternalSQLParser.g:16220:1: ( Comma )
            {
            // InternalSQLParser.g:16220:1: ( Comma )
            // InternalSQLParser.g:16221:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1"
    // InternalSQLParser.g:16230:1: rule__OrderByClauseArgs__Group_1_1__1 : rule__OrderByClauseArgs__Group_1_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16234:1: ( rule__OrderByClauseArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:16235:2: rule__OrderByClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:16241:1: rule__OrderByClauseArgs__Group_1_1__1__Impl : ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16245:1: ( ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:16246:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:16246:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:16247:2: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:16248:2: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:16248:3: rule__OrderByClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__0"
    // InternalSQLParser.g:16257:1: rule__OrderByClauseArg__Group__0 : rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 ;
    public final void rule__OrderByClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16261:1: ( rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 )
            // InternalSQLParser.g:16262:2: rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1
            {
            pushFollow(FOLLOW_98);
            rule__OrderByClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0"


    // $ANTLR start "rule__OrderByClauseArg__Group__0__Impl"
    // InternalSQLParser.g:16269:1: rule__OrderByClauseArg__Group__0__Impl : ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) ;
    public final void rule__OrderByClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16273:1: ( ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) )
            // InternalSQLParser.g:16274:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            {
            // InternalSQLParser.g:16274:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            // InternalSQLParser.g:16275:2: ( rule__OrderByClauseArg__ColAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }
            // InternalSQLParser.g:16276:2: ( rule__OrderByClauseArg__ColAssignment_0 )
            // InternalSQLParser.g:16276:3: rule__OrderByClauseArg__ColAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__ColAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__1"
    // InternalSQLParser.g:16284:1: rule__OrderByClauseArg__Group__1 : rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 ;
    public final void rule__OrderByClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16288:1: ( rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 )
            // InternalSQLParser.g:16289:2: rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2
            {
            pushFollow(FOLLOW_98);
            rule__OrderByClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1"


    // $ANTLR start "rule__OrderByClauseArg__Group__1__Impl"
    // InternalSQLParser.g:16296:1: rule__OrderByClauseArg__Group__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_1 )? ) ;
    public final void rule__OrderByClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16300:1: ( ( ( rule__OrderByClauseArg__Alternatives_1 )? ) )
            // InternalSQLParser.g:16301:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            {
            // InternalSQLParser.g:16301:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            // InternalSQLParser.g:16302:2: ( rule__OrderByClauseArg__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:16303:2: ( rule__OrderByClauseArg__Alternatives_1 )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==DESC||LA148_0==ASC) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSQLParser.g:16303:3: rule__OrderByClauseArg__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__2"
    // InternalSQLParser.g:16311:1: rule__OrderByClauseArg__Group__2 : rule__OrderByClauseArg__Group__2__Impl ;
    public final void rule__OrderByClauseArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16315:1: ( rule__OrderByClauseArg__Group__2__Impl )
            // InternalSQLParser.g:16316:2: rule__OrderByClauseArg__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2"


    // $ANTLR start "rule__OrderByClauseArg__Group__2__Impl"
    // InternalSQLParser.g:16322:1: rule__OrderByClauseArg__Group__2__Impl : ( ( rule__OrderByClauseArg__Group_2__0 )? ) ;
    public final void rule__OrderByClauseArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16326:1: ( ( ( rule__OrderByClauseArg__Group_2__0 )? ) )
            // InternalSQLParser.g:16327:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            {
            // InternalSQLParser.g:16327:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            // InternalSQLParser.g:16328:2: ( rule__OrderByClauseArg__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:16329:2: ( rule__OrderByClauseArg__Group_2__0 )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==NULLS) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSQLParser.g:16329:3: rule__OrderByClauseArg__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0"
    // InternalSQLParser.g:16338:1: rule__OrderByClauseArg__Group_2__0 : rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 ;
    public final void rule__OrderByClauseArg__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16342:1: ( rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 )
            // InternalSQLParser.g:16343:2: rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1
            {
            pushFollow(FOLLOW_99);
            rule__OrderByClauseArg__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0__Impl"
    // InternalSQLParser.g:16350:1: rule__OrderByClauseArg__Group_2__0__Impl : ( NULLS ) ;
    public final void rule__OrderByClauseArg__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16354:1: ( ( NULLS ) )
            // InternalSQLParser.g:16355:1: ( NULLS )
            {
            // InternalSQLParser.g:16355:1: ( NULLS )
            // InternalSQLParser.g:16356:2: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1"
    // InternalSQLParser.g:16365:1: rule__OrderByClauseArg__Group_2__1 : rule__OrderByClauseArg__Group_2__1__Impl ;
    public final void rule__OrderByClauseArg__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16369:1: ( rule__OrderByClauseArg__Group_2__1__Impl )
            // InternalSQLParser.g:16370:2: rule__OrderByClauseArg__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1__Impl"
    // InternalSQLParser.g:16376:1: rule__OrderByClauseArg__Group_2__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) ;
    public final void rule__OrderByClauseArg__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16380:1: ( ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) )
            // InternalSQLParser.g:16381:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            {
            // InternalSQLParser.g:16381:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            // InternalSQLParser.g:16382:2: ( rule__OrderByClauseArg__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }
            // InternalSQLParser.g:16383:2: ( rule__OrderByClauseArg__Alternatives_2_1 )
            // InternalSQLParser.g:16383:3: rule__OrderByClauseArg__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__0"
    // InternalSQLParser.g:16392:1: rule__QueryPartitionClause__Group__0 : rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 ;
    public final void rule__QueryPartitionClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16396:1: ( rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 )
            // InternalSQLParser.g:16397:2: rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__QueryPartitionClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0"


    // $ANTLR start "rule__QueryPartitionClause__Group__0__Impl"
    // InternalSQLParser.g:16404:1: rule__QueryPartitionClause__Group__0__Impl : ( PARTITION ) ;
    public final void rule__QueryPartitionClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16408:1: ( ( PARTITION ) )
            // InternalSQLParser.g:16409:1: ( PARTITION )
            {
            // InternalSQLParser.g:16409:1: ( PARTITION )
            // InternalSQLParser.g:16410:2: PARTITION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }
            match(input,PARTITION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__1"
    // InternalSQLParser.g:16419:1: rule__QueryPartitionClause__Group__1 : rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 ;
    public final void rule__QueryPartitionClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16423:1: ( rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 )
            // InternalSQLParser.g:16424:2: rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2
            {
            pushFollow(FOLLOW_92);
            rule__QueryPartitionClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1"


    // $ANTLR start "rule__QueryPartitionClause__Group__1__Impl"
    // InternalSQLParser.g:16431:1: rule__QueryPartitionClause__Group__1__Impl : ( BY ) ;
    public final void rule__QueryPartitionClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16435:1: ( ( BY ) )
            // InternalSQLParser.g:16436:1: ( BY )
            {
            // InternalSQLParser.g:16436:1: ( BY )
            // InternalSQLParser.g:16437:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__2"
    // InternalSQLParser.g:16446:1: rule__QueryPartitionClause__Group__2 : rule__QueryPartitionClause__Group__2__Impl ;
    public final void rule__QueryPartitionClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16450:1: ( rule__QueryPartitionClause__Group__2__Impl )
            // InternalSQLParser.g:16451:2: rule__QueryPartitionClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2"


    // $ANTLR start "rule__QueryPartitionClause__Group__2__Impl"
    // InternalSQLParser.g:16457:1: rule__QueryPartitionClause__Group__2__Impl : ( ( rule__QueryPartitionClause__Alternatives_2 ) ) ;
    public final void rule__QueryPartitionClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16461:1: ( ( ( rule__QueryPartitionClause__Alternatives_2 ) ) )
            // InternalSQLParser.g:16462:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            {
            // InternalSQLParser.g:16462:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            // InternalSQLParser.g:16463:2: ( rule__QueryPartitionClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:16464:2: ( rule__QueryPartitionClause__Alternatives_2 )
            // InternalSQLParser.g:16464:3: rule__QueryPartitionClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0"
    // InternalSQLParser.g:16473:1: rule__QueryPartitionClause__Group_2_1__0 : rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 ;
    public final void rule__QueryPartitionClause__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16477:1: ( rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 )
            // InternalSQLParser.g:16478:2: rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1
            {
            pushFollow(FOLLOW_92);
            rule__QueryPartitionClause__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0__Impl"
    // InternalSQLParser.g:16485:1: rule__QueryPartitionClause__Group_2_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16489:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:16490:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:16490:1: ( LeftParenthesis )
            // InternalSQLParser.g:16491:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1"
    // InternalSQLParser.g:16500:1: rule__QueryPartitionClause__Group_2_1__1 : rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 ;
    public final void rule__QueryPartitionClause__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16504:1: ( rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 )
            // InternalSQLParser.g:16505:2: rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2
            {
            pushFollow(FOLLOW_11);
            rule__QueryPartitionClause__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1__Impl"
    // InternalSQLParser.g:16512:1: rule__QueryPartitionClause__Group_2_1__1__Impl : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16516:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSQLParser.g:16517:1: ( ruleAnalyticExprArgs )
            {
            // InternalSQLParser.g:16517:1: ( ruleAnalyticExprArgs )
            // InternalSQLParser.g:16518:2: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2"
    // InternalSQLParser.g:16527:1: rule__QueryPartitionClause__Group_2_1__2 : rule__QueryPartitionClause__Group_2_1__2__Impl ;
    public final void rule__QueryPartitionClause__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16531:1: ( rule__QueryPartitionClause__Group_2_1__2__Impl )
            // InternalSQLParser.g:16532:2: rule__QueryPartitionClause__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2__Impl"
    // InternalSQLParser.g:16538:1: rule__QueryPartitionClause__Group_2_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16542:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:16543:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:16543:1: ( RightParenthesis )
            // InternalSQLParser.g:16544:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0"
    // InternalSQLParser.g:16554:1: rule__AnalyticExprArgs__Group__0 : rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 ;
    public final void rule__AnalyticExprArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16558:1: ( rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 )
            // InternalSQLParser.g:16559:2: rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__AnalyticExprArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0__Impl"
    // InternalSQLParser.g:16566:1: rule__AnalyticExprArgs__Group__0__Impl : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16570:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:16571:1: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:16571:1: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:16572:2: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1"
    // InternalSQLParser.g:16581:1: rule__AnalyticExprArgs__Group__1 : rule__AnalyticExprArgs__Group__1__Impl ;
    public final void rule__AnalyticExprArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16585:1: ( rule__AnalyticExprArgs__Group__1__Impl )
            // InternalSQLParser.g:16586:2: rule__AnalyticExprArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1__Impl"
    // InternalSQLParser.g:16592:1: rule__AnalyticExprArgs__Group__1__Impl : ( ( rule__AnalyticExprArgs__Group_1__0 )? ) ;
    public final void rule__AnalyticExprArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16596:1: ( ( ( rule__AnalyticExprArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:16597:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:16597:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            // InternalSQLParser.g:16598:2: ( rule__AnalyticExprArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:16599:2: ( rule__AnalyticExprArgs__Group_1__0 )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==Comma) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalSQLParser.g:16599:3: rule__AnalyticExprArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0"
    // InternalSQLParser.g:16608:1: rule__AnalyticExprArgs__Group_1__0 : rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16612:1: ( rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 )
            // InternalSQLParser.g:16613:2: rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__AnalyticExprArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0__Impl"
    // InternalSQLParser.g:16620:1: rule__AnalyticExprArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__AnalyticExprArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16624:1: ( ( () ) )
            // InternalSQLParser.g:16625:1: ( () )
            {
            // InternalSQLParser.g:16625:1: ( () )
            // InternalSQLParser.g:16626:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:16627:2: ()
            // InternalSQLParser.g:16627:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1"
    // InternalSQLParser.g:16635:1: rule__AnalyticExprArgs__Group_1__1 : rule__AnalyticExprArgs__Group_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16639:1: ( rule__AnalyticExprArgs__Group_1__1__Impl )
            // InternalSQLParser.g:16640:2: rule__AnalyticExprArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1__Impl"
    // InternalSQLParser.g:16646:1: rule__AnalyticExprArgs__Group_1__1__Impl : ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) ;
    public final void rule__AnalyticExprArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16650:1: ( ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:16651:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:16651:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:16652:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:16652:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:16653:3: ( rule__AnalyticExprArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:16654:3: ( rule__AnalyticExprArgs__Group_1_1__0 )
            // InternalSQLParser.g:16654:4: rule__AnalyticExprArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__AnalyticExprArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:16657:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:16658:3: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:16659:3: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==Comma) ) {
                    alt151=1;
                }


                switch (alt151) {
            	case 1 :
            	    // InternalSQLParser.g:16659:4: rule__AnalyticExprArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__AnalyticExprArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0"
    // InternalSQLParser.g:16669:1: rule__AnalyticExprArgs__Group_1_1__0 : rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16673:1: ( rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 )
            // InternalSQLParser.g:16674:2: rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_92);
            rule__AnalyticExprArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:16681:1: rule__AnalyticExprArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16685:1: ( ( Comma ) )
            // InternalSQLParser.g:16686:1: ( Comma )
            {
            // InternalSQLParser.g:16686:1: ( Comma )
            // InternalSQLParser.g:16687:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1"
    // InternalSQLParser.g:16696:1: rule__AnalyticExprArgs__Group_1_1__1 : rule__AnalyticExprArgs__Group_1_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16700:1: ( rule__AnalyticExprArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:16701:2: rule__AnalyticExprArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:16707:1: rule__AnalyticExprArgs__Group_1_1__1__Impl : ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16711:1: ( ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:16712:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:16712:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:16713:2: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:16714:2: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:16714:3: rule__AnalyticExprArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__0"
    // InternalSQLParser.g:16723:1: rule__AnalyticExprArg__Group__0 : rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 ;
    public final void rule__AnalyticExprArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16727:1: ( rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 )
            // InternalSQLParser.g:16728:2: rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__AnalyticExprArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0"


    // $ANTLR start "rule__AnalyticExprArg__Group__0__Impl"
    // InternalSQLParser.g:16735:1: rule__AnalyticExprArg__Group__0__Impl : ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) ;
    public final void rule__AnalyticExprArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16739:1: ( ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) )
            // InternalSQLParser.g:16740:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            {
            // InternalSQLParser.g:16740:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            // InternalSQLParser.g:16741:2: ( rule__AnalyticExprArg__CeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }
            // InternalSQLParser.g:16742:2: ( rule__AnalyticExprArg__CeAssignment_0 )
            // InternalSQLParser.g:16742:3: rule__AnalyticExprArg__CeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__CeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__1"
    // InternalSQLParser.g:16750:1: rule__AnalyticExprArg__Group__1 : rule__AnalyticExprArg__Group__1__Impl ;
    public final void rule__AnalyticExprArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16754:1: ( rule__AnalyticExprArg__Group__1__Impl )
            // InternalSQLParser.g:16755:2: rule__AnalyticExprArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1"


    // $ANTLR start "rule__AnalyticExprArg__Group__1__Impl"
    // InternalSQLParser.g:16761:1: rule__AnalyticExprArg__Group__1__Impl : ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) ;
    public final void rule__AnalyticExprArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16765:1: ( ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) )
            // InternalSQLParser.g:16766:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            {
            // InternalSQLParser.g:16766:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            // InternalSQLParser.g:16767:2: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }
            // InternalSQLParser.g:16768:2: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( ((LA152_0>=RULE_STRING && LA152_0<=RULE_ID)) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalSQLParser.g:16768:3: rule__AnalyticExprArg__ColAliasAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArg__ColAliasAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__0"
    // InternalSQLParser.g:16777:1: rule__OpFunctionArg__Group__0 : rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 ;
    public final void rule__OpFunctionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16781:1: ( rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 )
            // InternalSQLParser.g:16782:2: rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__OpFunctionArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0"


    // $ANTLR start "rule__OpFunctionArg__Group__0__Impl"
    // InternalSQLParser.g:16789:1: rule__OpFunctionArg__Group__0__Impl : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16793:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSQLParser.g:16794:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSQLParser.g:16794:1: ( ruleOpFunctionArgOperand )
            // InternalSQLParser.g:16795:2: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__1"
    // InternalSQLParser.g:16804:1: rule__OpFunctionArg__Group__1 : rule__OpFunctionArg__Group__1__Impl ;
    public final void rule__OpFunctionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16808:1: ( rule__OpFunctionArg__Group__1__Impl )
            // InternalSQLParser.g:16809:2: rule__OpFunctionArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1"


    // $ANTLR start "rule__OpFunctionArg__Group__1__Impl"
    // InternalSQLParser.g:16815:1: rule__OpFunctionArg__Group__1__Impl : ( ( rule__OpFunctionArg__Group_1__0 )? ) ;
    public final void rule__OpFunctionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16819:1: ( ( ( rule__OpFunctionArg__Group_1__0 )? ) )
            // InternalSQLParser.g:16820:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            {
            // InternalSQLParser.g:16820:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            // InternalSQLParser.g:16821:2: ( rule__OpFunctionArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:16822:2: ( rule__OpFunctionArg__Group_1__0 )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==Comma) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalSQLParser.g:16822:3: rule__OpFunctionArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0"
    // InternalSQLParser.g:16831:1: rule__OpFunctionArg__Group_1__0 : rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 ;
    public final void rule__OpFunctionArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16835:1: ( rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 )
            // InternalSQLParser.g:16836:2: rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__OpFunctionArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0__Impl"
    // InternalSQLParser.g:16843:1: rule__OpFunctionArg__Group_1__0__Impl : ( () ) ;
    public final void rule__OpFunctionArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16847:1: ( ( () ) )
            // InternalSQLParser.g:16848:1: ( () )
            {
            // InternalSQLParser.g:16848:1: ( () )
            // InternalSQLParser.g:16849:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:16850:2: ()
            // InternalSQLParser.g:16850:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1"
    // InternalSQLParser.g:16858:1: rule__OpFunctionArg__Group_1__1 : rule__OpFunctionArg__Group_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16862:1: ( rule__OpFunctionArg__Group_1__1__Impl )
            // InternalSQLParser.g:16863:2: rule__OpFunctionArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1__Impl"
    // InternalSQLParser.g:16869:1: rule__OpFunctionArg__Group_1__1__Impl : ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) ;
    public final void rule__OpFunctionArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16873:1: ( ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:16874:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:16874:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            // InternalSQLParser.g:16875:2: ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:16875:2: ( ( rule__OpFunctionArg__Group_1_1__0 ) )
            // InternalSQLParser.g:16876:3: ( rule__OpFunctionArg__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:16877:3: ( rule__OpFunctionArg__Group_1_1__0 )
            // InternalSQLParser.g:16877:4: rule__OpFunctionArg__Group_1_1__0
            {
            pushFollow(FOLLOW_16);
            rule__OpFunctionArg__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:16880:2: ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            // InternalSQLParser.g:16881:3: ( rule__OpFunctionArg__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:16882:3: ( rule__OpFunctionArg__Group_1_1__0 )*
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==Comma) ) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // InternalSQLParser.g:16882:4: rule__OpFunctionArg__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_16);
            	    rule__OpFunctionArg__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0"
    // InternalSQLParser.g:16892:1: rule__OpFunctionArg__Group_1_1__0 : rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 ;
    public final void rule__OpFunctionArg__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16896:1: ( rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 )
            // InternalSQLParser.g:16897:2: rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1
            {
            pushFollow(FOLLOW_100);
            rule__OpFunctionArg__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0__Impl"
    // InternalSQLParser.g:16904:1: rule__OpFunctionArg__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionArg__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16908:1: ( ( Comma ) )
            // InternalSQLParser.g:16909:1: ( Comma )
            {
            // InternalSQLParser.g:16909:1: ( Comma )
            // InternalSQLParser.g:16910:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1"
    // InternalSQLParser.g:16919:1: rule__OpFunctionArg__Group_1_1__1 : rule__OpFunctionArg__Group_1_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16923:1: ( rule__OpFunctionArg__Group_1_1__1__Impl )
            // InternalSQLParser.g:16924:2: rule__OpFunctionArg__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1__Impl"
    // InternalSQLParser.g:16930:1: rule__OpFunctionArg__Group_1_1__1__Impl : ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OpFunctionArg__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16934:1: ( ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:16935:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:16935:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:16936:2: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:16937:2: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:16937:3: rule__OpFunctionArg__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__0"
    // InternalSQLParser.g:16946:1: rule__OpFunctionCast__Group__0 : rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 ;
    public final void rule__OpFunctionCast__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16950:1: ( rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 )
            // InternalSQLParser.g:16951:2: rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__OpFunctionCast__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0"


    // $ANTLR start "rule__OpFunctionCast__Group__0__Impl"
    // InternalSQLParser.g:16958:1: rule__OpFunctionCast__Group__0__Impl : ( CAST ) ;
    public final void rule__OpFunctionCast__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16962:1: ( ( CAST ) )
            // InternalSQLParser.g:16963:1: ( CAST )
            {
            // InternalSQLParser.g:16963:1: ( CAST )
            // InternalSQLParser.g:16964:2: CAST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }
            match(input,CAST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__1"
    // InternalSQLParser.g:16973:1: rule__OpFunctionCast__Group__1 : rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 ;
    public final void rule__OpFunctionCast__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16977:1: ( rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 )
            // InternalSQLParser.g:16978:2: rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2
            {
            pushFollow(FOLLOW_62);
            rule__OpFunctionCast__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1"


    // $ANTLR start "rule__OpFunctionCast__Group__1__Impl"
    // InternalSQLParser.g:16985:1: rule__OpFunctionCast__Group__1__Impl : ( ( rule__OpFunctionCast__OpAssignment_1 ) ) ;
    public final void rule__OpFunctionCast__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16989:1: ( ( ( rule__OpFunctionCast__OpAssignment_1 ) ) )
            // InternalSQLParser.g:16990:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:16990:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            // InternalSQLParser.g:16991:2: ( rule__OpFunctionCast__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:16992:2: ( rule__OpFunctionCast__OpAssignment_1 )
            // InternalSQLParser.g:16992:3: rule__OpFunctionCast__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__2"
    // InternalSQLParser.g:17000:1: rule__OpFunctionCast__Group__2 : rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 ;
    public final void rule__OpFunctionCast__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17004:1: ( rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 )
            // InternalSQLParser.g:17005:2: rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__OpFunctionCast__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2"


    // $ANTLR start "rule__OpFunctionCast__Group__2__Impl"
    // InternalSQLParser.g:17012:1: rule__OpFunctionCast__Group__2__Impl : ( AS ) ;
    public final void rule__OpFunctionCast__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17016:1: ( ( AS ) )
            // InternalSQLParser.g:17017:1: ( AS )
            {
            // InternalSQLParser.g:17017:1: ( AS )
            // InternalSQLParser.g:17018:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__3"
    // InternalSQLParser.g:17027:1: rule__OpFunctionCast__Group__3 : rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 ;
    public final void rule__OpFunctionCast__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17031:1: ( rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 )
            // InternalSQLParser.g:17032:2: rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4
            {
            pushFollow(FOLLOW_101);
            rule__OpFunctionCast__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3"


    // $ANTLR start "rule__OpFunctionCast__Group__3__Impl"
    // InternalSQLParser.g:17039:1: rule__OpFunctionCast__Group__3__Impl : ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) ;
    public final void rule__OpFunctionCast__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17043:1: ( ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) )
            // InternalSQLParser.g:17044:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            {
            // InternalSQLParser.g:17044:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            // InternalSQLParser.g:17045:2: ( rule__OpFunctionCast__TypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }
            // InternalSQLParser.g:17046:2: ( rule__OpFunctionCast__TypeAssignment_3 )
            // InternalSQLParser.g:17046:3: rule__OpFunctionCast__TypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__TypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__4"
    // InternalSQLParser.g:17054:1: rule__OpFunctionCast__Group__4 : rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 ;
    public final void rule__OpFunctionCast__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17058:1: ( rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 )
            // InternalSQLParser.g:17059:2: rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5
            {
            pushFollow(FOLLOW_101);
            rule__OpFunctionCast__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4"


    // $ANTLR start "rule__OpFunctionCast__Group__4__Impl"
    // InternalSQLParser.g:17066:1: rule__OpFunctionCast__Group__4__Impl : ( ( rule__OpFunctionCast__Group_4__0 )? ) ;
    public final void rule__OpFunctionCast__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17070:1: ( ( ( rule__OpFunctionCast__Group_4__0 )? ) )
            // InternalSQLParser.g:17071:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            {
            // InternalSQLParser.g:17071:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            // InternalSQLParser.g:17072:2: ( rule__OpFunctionCast__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }
            // InternalSQLParser.g:17073:2: ( rule__OpFunctionCast__Group_4__0 )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==LeftParenthesis) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalSQLParser.g:17073:3: rule__OpFunctionCast__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__5"
    // InternalSQLParser.g:17081:1: rule__OpFunctionCast__Group__5 : rule__OpFunctionCast__Group__5__Impl ;
    public final void rule__OpFunctionCast__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17085:1: ( rule__OpFunctionCast__Group__5__Impl )
            // InternalSQLParser.g:17086:2: rule__OpFunctionCast__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5"


    // $ANTLR start "rule__OpFunctionCast__Group__5__Impl"
    // InternalSQLParser.g:17092:1: rule__OpFunctionCast__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17096:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:17097:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:17097:1: ( RightParenthesis )
            // InternalSQLParser.g:17098:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0"
    // InternalSQLParser.g:17108:1: rule__OpFunctionCast__Group_4__0 : rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 ;
    public final void rule__OpFunctionCast__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17112:1: ( rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 )
            // InternalSQLParser.g:17113:2: rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1
            {
            pushFollow(FOLLOW_30);
            rule__OpFunctionCast__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0__Impl"
    // InternalSQLParser.g:17120:1: rule__OpFunctionCast__Group_4__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17124:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:17125:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:17125:1: ( LeftParenthesis )
            // InternalSQLParser.g:17126:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1"
    // InternalSQLParser.g:17135:1: rule__OpFunctionCast__Group_4__1 : rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 ;
    public final void rule__OpFunctionCast__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17139:1: ( rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 )
            // InternalSQLParser.g:17140:2: rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2
            {
            pushFollow(FOLLOW_102);
            rule__OpFunctionCast__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1__Impl"
    // InternalSQLParser.g:17147:1: rule__OpFunctionCast__Group_4__1__Impl : ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17151:1: ( ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) )
            // InternalSQLParser.g:17152:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            {
            // InternalSQLParser.g:17152:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            // InternalSQLParser.g:17153:2: ( rule__OpFunctionCast__PAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }
            // InternalSQLParser.g:17154:2: ( rule__OpFunctionCast__PAssignment_4_1 )
            // InternalSQLParser.g:17154:3: rule__OpFunctionCast__PAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__PAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2"
    // InternalSQLParser.g:17162:1: rule__OpFunctionCast__Group_4__2 : rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 ;
    public final void rule__OpFunctionCast__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17166:1: ( rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 )
            // InternalSQLParser.g:17167:2: rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3
            {
            pushFollow(FOLLOW_102);
            rule__OpFunctionCast__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2__Impl"
    // InternalSQLParser.g:17174:1: rule__OpFunctionCast__Group_4__2__Impl : ( ( rule__OpFunctionCast__Group_4_2__0 )? ) ;
    public final void rule__OpFunctionCast__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17178:1: ( ( ( rule__OpFunctionCast__Group_4_2__0 )? ) )
            // InternalSQLParser.g:17179:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            {
            // InternalSQLParser.g:17179:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            // InternalSQLParser.g:17180:2: ( rule__OpFunctionCast__Group_4_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }
            // InternalSQLParser.g:17181:2: ( rule__OpFunctionCast__Group_4_2__0 )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==Comma) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalSQLParser.g:17181:3: rule__OpFunctionCast__Group_4_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3"
    // InternalSQLParser.g:17189:1: rule__OpFunctionCast__Group_4__3 : rule__OpFunctionCast__Group_4__3__Impl ;
    public final void rule__OpFunctionCast__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17193:1: ( rule__OpFunctionCast__Group_4__3__Impl )
            // InternalSQLParser.g:17194:2: rule__OpFunctionCast__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3__Impl"
    // InternalSQLParser.g:17200:1: rule__OpFunctionCast__Group_4__3__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17204:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:17205:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:17205:1: ( RightParenthesis )
            // InternalSQLParser.g:17206:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0"
    // InternalSQLParser.g:17216:1: rule__OpFunctionCast__Group_4_2__0 : rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 ;
    public final void rule__OpFunctionCast__Group_4_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17220:1: ( rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 )
            // InternalSQLParser.g:17221:2: rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1
            {
            pushFollow(FOLLOW_30);
            rule__OpFunctionCast__Group_4_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0__Impl"
    // InternalSQLParser.g:17228:1: rule__OpFunctionCast__Group_4_2__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionCast__Group_4_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17232:1: ( ( Comma ) )
            // InternalSQLParser.g:17233:1: ( Comma )
            {
            // InternalSQLParser.g:17233:1: ( Comma )
            // InternalSQLParser.g:17234:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1"
    // InternalSQLParser.g:17243:1: rule__OpFunctionCast__Group_4_2__1 : rule__OpFunctionCast__Group_4_2__1__Impl ;
    public final void rule__OpFunctionCast__Group_4_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17247:1: ( rule__OpFunctionCast__Group_4_2__1__Impl )
            // InternalSQLParser.g:17248:2: rule__OpFunctionCast__Group_4_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1__Impl"
    // InternalSQLParser.g:17254:1: rule__OpFunctionCast__Group_4_2__1__Impl : ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17258:1: ( ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) )
            // InternalSQLParser.g:17259:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            {
            // InternalSQLParser.g:17259:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            // InternalSQLParser.g:17260:2: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }
            // InternalSQLParser.g:17261:2: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            // InternalSQLParser.g:17261:3: rule__OpFunctionCast__P2Assignment_4_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__P2Assignment_4_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0"
    // InternalSQLParser.g:17270:1: rule__OpFunctionArgAgregate__Group__0 : rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 ;
    public final void rule__OpFunctionArgAgregate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17274:1: ( rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 )
            // InternalSQLParser.g:17275:2: rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__OpFunctionArgAgregate__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0__Impl"
    // InternalSQLParser.g:17282:1: rule__OpFunctionArgAgregate__Group__0__Impl : ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) ;
    public final void rule__OpFunctionArgAgregate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17286:1: ( ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) )
            // InternalSQLParser.g:17287:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            {
            // InternalSQLParser.g:17287:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            // InternalSQLParser.g:17288:2: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:17289:2: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            // InternalSQLParser.g:17289:3: rule__OpFunctionArgAgregate__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1"
    // InternalSQLParser.g:17297:1: rule__OpFunctionArgAgregate__Group__1 : rule__OpFunctionArgAgregate__Group__1__Impl ;
    public final void rule__OpFunctionArgAgregate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17301:1: ( rule__OpFunctionArgAgregate__Group__1__Impl )
            // InternalSQLParser.g:17302:2: rule__OpFunctionArgAgregate__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1__Impl"
    // InternalSQLParser.g:17308:1: rule__OpFunctionArgAgregate__Group__1__Impl : ( ruleOperand ) ;
    public final void rule__OpFunctionArgAgregate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17312:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:17313:1: ( ruleOperand )
            {
            // InternalSQLParser.g:17313:1: ( ruleOperand )
            // InternalSQLParser.g:17314:2: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__0"
    // InternalSQLParser.g:17324:1: rule__ColumnOperand__Group__0 : rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 ;
    public final void rule__ColumnOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17328:1: ( rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 )
            // InternalSQLParser.g:17329:2: rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1
            {
            pushFollow(FOLLOW_103);
            rule__ColumnOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0"


    // $ANTLR start "rule__ColumnOperand__Group__0__Impl"
    // InternalSQLParser.g:17336:1: rule__ColumnOperand__Group__0__Impl : ( ( rule__ColumnOperand__CfullAssignment_0 ) ) ;
    public final void rule__ColumnOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17340:1: ( ( ( rule__ColumnOperand__CfullAssignment_0 ) ) )
            // InternalSQLParser.g:17341:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            {
            // InternalSQLParser.g:17341:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            // InternalSQLParser.g:17342:2: ( rule__ColumnOperand__CfullAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }
            // InternalSQLParser.g:17343:2: ( rule__ColumnOperand__CfullAssignment_0 )
            // InternalSQLParser.g:17343:3: rule__ColumnOperand__CfullAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__CfullAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__1"
    // InternalSQLParser.g:17351:1: rule__ColumnOperand__Group__1 : rule__ColumnOperand__Group__1__Impl ;
    public final void rule__ColumnOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17355:1: ( rule__ColumnOperand__Group__1__Impl )
            // InternalSQLParser.g:17356:2: rule__ColumnOperand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1"


    // $ANTLR start "rule__ColumnOperand__Group__1__Impl"
    // InternalSQLParser.g:17362:1: rule__ColumnOperand__Group__1__Impl : ( ( rule__ColumnOperand__OraAssignment_1 )? ) ;
    public final void rule__ColumnOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17366:1: ( ( ( rule__ColumnOperand__OraAssignment_1 )? ) )
            // InternalSQLParser.g:17367:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            {
            // InternalSQLParser.g:17367:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            // InternalSQLParser.g:17368:2: ( rule__ColumnOperand__OraAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }
            // InternalSQLParser.g:17369:2: ( rule__ColumnOperand__OraAssignment_1 )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==LeftParenthesisPlusSignRightParenthesis) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalSQLParser.g:17369:3: rule__ColumnOperand__OraAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOperand__OraAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__0"
    // InternalSQLParser.g:17378:1: rule__SubQueryOperand__Group__0 : rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 ;
    public final void rule__SubQueryOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17382:1: ( rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 )
            // InternalSQLParser.g:17383:2: rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__SubQueryOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0"


    // $ANTLR start "rule__SubQueryOperand__Group__0__Impl"
    // InternalSQLParser.g:17390:1: rule__SubQueryOperand__Group__0__Impl : ( () ) ;
    public final void rule__SubQueryOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17394:1: ( ( () ) )
            // InternalSQLParser.g:17395:1: ( () )
            {
            // InternalSQLParser.g:17395:1: ( () )
            // InternalSQLParser.g:17396:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }
            // InternalSQLParser.g:17397:2: ()
            // InternalSQLParser.g:17397:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__1"
    // InternalSQLParser.g:17405:1: rule__SubQueryOperand__Group__1 : rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 ;
    public final void rule__SubQueryOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17409:1: ( rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 )
            // InternalSQLParser.g:17410:2: rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__SubQueryOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1"


    // $ANTLR start "rule__SubQueryOperand__Group__1__Impl"
    // InternalSQLParser.g:17417:1: rule__SubQueryOperand__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__SubQueryOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17421:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:17422:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:17422:1: ( LeftParenthesis )
            // InternalSQLParser.g:17423:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__2"
    // InternalSQLParser.g:17432:1: rule__SubQueryOperand__Group__2 : rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 ;
    public final void rule__SubQueryOperand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17436:1: ( rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 )
            // InternalSQLParser.g:17437:2: rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__SubQueryOperand__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2"


    // $ANTLR start "rule__SubQueryOperand__Group__2__Impl"
    // InternalSQLParser.g:17444:1: rule__SubQueryOperand__Group__2__Impl : ( ( rule__SubQueryOperand__SelAssignment_2 ) ) ;
    public final void rule__SubQueryOperand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17448:1: ( ( ( rule__SubQueryOperand__SelAssignment_2 ) ) )
            // InternalSQLParser.g:17449:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            {
            // InternalSQLParser.g:17449:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            // InternalSQLParser.g:17450:2: ( rule__SubQueryOperand__SelAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }
            // InternalSQLParser.g:17451:2: ( rule__SubQueryOperand__SelAssignment_2 )
            // InternalSQLParser.g:17451:3: rule__SubQueryOperand__SelAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__SelAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__3"
    // InternalSQLParser.g:17459:1: rule__SubQueryOperand__Group__3 : rule__SubQueryOperand__Group__3__Impl ;
    public final void rule__SubQueryOperand__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17463:1: ( rule__SubQueryOperand__Group__3__Impl )
            // InternalSQLParser.g:17464:2: rule__SubQueryOperand__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3"


    // $ANTLR start "rule__SubQueryOperand__Group__3__Impl"
    // InternalSQLParser.g:17470:1: rule__SubQueryOperand__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__SubQueryOperand__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17474:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:17475:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:17475:1: ( RightParenthesis )
            // InternalSQLParser.g:17476:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3__Impl"


    // $ANTLR start "rule__SQLCASE__Group__0"
    // InternalSQLParser.g:17486:1: rule__SQLCASE__Group__0 : rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 ;
    public final void rule__SQLCASE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17490:1: ( rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 )
            // InternalSQLParser.g:17491:2: rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1
            {
            pushFollow(FOLLOW_104);
            rule__SQLCASE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0"


    // $ANTLR start "rule__SQLCASE__Group__0__Impl"
    // InternalSQLParser.g:17498:1: rule__SQLCASE__Group__0__Impl : ( CASE ) ;
    public final void rule__SQLCASE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17502:1: ( ( CASE ) )
            // InternalSQLParser.g:17503:1: ( CASE )
            {
            // InternalSQLParser.g:17503:1: ( CASE )
            // InternalSQLParser.g:17504:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0__Impl"


    // $ANTLR start "rule__SQLCASE__Group__1"
    // InternalSQLParser.g:17513:1: rule__SQLCASE__Group__1 : rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 ;
    public final void rule__SQLCASE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17517:1: ( rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 )
            // InternalSQLParser.g:17518:2: rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2
            {
            pushFollow(FOLLOW_104);
            rule__SQLCASE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1"


    // $ANTLR start "rule__SQLCASE__Group__1__Impl"
    // InternalSQLParser.g:17525:1: rule__SQLCASE__Group__1__Impl : ( ( rule__SQLCASE__Alternatives_1 )? ) ;
    public final void rule__SQLCASE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17529:1: ( ( ( rule__SQLCASE__Alternatives_1 )? ) )
            // InternalSQLParser.g:17530:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            {
            // InternalSQLParser.g:17530:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            // InternalSQLParser.g:17531:2: ( rule__SQLCASE__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:17532:2: ( rule__SQLCASE__Alternatives_1 )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==EXTRACT||LA158_0==EXISTS||LA158_0==CAST||LA158_0==CASE||LA158_0==NOT_1||LA158_0==NOT||LA158_0==X||LA158_0==IN||LA158_0==LeftParenthesis||(LA158_0>=RULE_JRPARAM && LA158_0<=RULE_JRNPARAM)||(LA158_0>=RULE_UNSIGNED && LA158_0<=RULE_SIGNED_DOUBLE)||(LA158_0>=RULE_STRING_ && LA158_0<=RULE_ID)) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalSQLParser.g:17532:3: rule__SQLCASE__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1__Impl"


    // $ANTLR start "rule__SQLCASE__Group__2"
    // InternalSQLParser.g:17540:1: rule__SQLCASE__Group__2 : rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 ;
    public final void rule__SQLCASE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17544:1: ( rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 )
            // InternalSQLParser.g:17545:2: rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3
            {
            pushFollow(FOLLOW_105);
            rule__SQLCASE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2"


    // $ANTLR start "rule__SQLCASE__Group__2__Impl"
    // InternalSQLParser.g:17552:1: rule__SQLCASE__Group__2__Impl : ( ( rule__SQLCASE__WhenAssignment_2 ) ) ;
    public final void rule__SQLCASE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17556:1: ( ( ( rule__SQLCASE__WhenAssignment_2 ) ) )
            // InternalSQLParser.g:17557:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            {
            // InternalSQLParser.g:17557:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            // InternalSQLParser.g:17558:2: ( rule__SQLCASE__WhenAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }
            // InternalSQLParser.g:17559:2: ( rule__SQLCASE__WhenAssignment_2 )
            // InternalSQLParser.g:17559:3: rule__SQLCASE__WhenAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__WhenAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2__Impl"


    // $ANTLR start "rule__SQLCASE__Group__3"
    // InternalSQLParser.g:17567:1: rule__SQLCASE__Group__3 : rule__SQLCASE__Group__3__Impl ;
    public final void rule__SQLCASE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17571:1: ( rule__SQLCASE__Group__3__Impl )
            // InternalSQLParser.g:17572:2: rule__SQLCASE__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3"


    // $ANTLR start "rule__SQLCASE__Group__3__Impl"
    // InternalSQLParser.g:17578:1: rule__SQLCASE__Group__3__Impl : ( END ) ;
    public final void rule__SQLCASE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17582:1: ( ( END ) )
            // InternalSQLParser.g:17583:1: ( END )
            {
            // InternalSQLParser.g:17583:1: ( END )
            // InternalSQLParser.g:17584:2: END
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }
            match(input,END,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__0"
    // InternalSQLParser.g:17594:1: rule__SQLCaseWhens__Group__0 : rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 ;
    public final void rule__SQLCaseWhens__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17598:1: ( rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 )
            // InternalSQLParser.g:17599:2: rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1
            {
            pushFollow(FOLLOW_104);
            rule__SQLCaseWhens__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0"


    // $ANTLR start "rule__SQLCaseWhens__Group__0__Impl"
    // InternalSQLParser.g:17606:1: rule__SQLCaseWhens__Group__0__Impl : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17610:1: ( ( ruleSqlCaseWhen ) )
            // InternalSQLParser.g:17611:1: ( ruleSqlCaseWhen )
            {
            // InternalSQLParser.g:17611:1: ( ruleSqlCaseWhen )
            // InternalSQLParser.g:17612:2: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__1"
    // InternalSQLParser.g:17621:1: rule__SQLCaseWhens__Group__1 : rule__SQLCaseWhens__Group__1__Impl ;
    public final void rule__SQLCaseWhens__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17625:1: ( rule__SQLCaseWhens__Group__1__Impl )
            // InternalSQLParser.g:17626:2: rule__SQLCaseWhens__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1"


    // $ANTLR start "rule__SQLCaseWhens__Group__1__Impl"
    // InternalSQLParser.g:17632:1: rule__SQLCaseWhens__Group__1__Impl : ( ( rule__SQLCaseWhens__Group_1__0 )? ) ;
    public final void rule__SQLCaseWhens__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17636:1: ( ( ( rule__SQLCaseWhens__Group_1__0 )? ) )
            // InternalSQLParser.g:17637:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            {
            // InternalSQLParser.g:17637:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            // InternalSQLParser.g:17638:2: ( rule__SQLCaseWhens__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:17639:2: ( rule__SQLCaseWhens__Group_1__0 )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==WHEN) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalSQLParser.g:17639:3: rule__SQLCaseWhens__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCaseWhens__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0"
    // InternalSQLParser.g:17648:1: rule__SQLCaseWhens__Group_1__0 : rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 ;
    public final void rule__SQLCaseWhens__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17652:1: ( rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 )
            // InternalSQLParser.g:17653:2: rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1
            {
            pushFollow(FOLLOW_104);
            rule__SQLCaseWhens__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0__Impl"
    // InternalSQLParser.g:17660:1: rule__SQLCaseWhens__Group_1__0__Impl : ( () ) ;
    public final void rule__SQLCaseWhens__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17664:1: ( ( () ) )
            // InternalSQLParser.g:17665:1: ( () )
            {
            // InternalSQLParser.g:17665:1: ( () )
            // InternalSQLParser.g:17666:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:17667:2: ()
            // InternalSQLParser.g:17667:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1"
    // InternalSQLParser.g:17675:1: rule__SQLCaseWhens__Group_1__1 : rule__SQLCaseWhens__Group_1__1__Impl ;
    public final void rule__SQLCaseWhens__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17679:1: ( rule__SQLCaseWhens__Group_1__1__Impl )
            // InternalSQLParser.g:17680:2: rule__SQLCaseWhens__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1__Impl"
    // InternalSQLParser.g:17686:1: rule__SQLCaseWhens__Group_1__1__Impl : ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__SQLCaseWhens__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17690:1: ( ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) )
            // InternalSQLParser.g:17691:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            {
            // InternalSQLParser.g:17691:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            // InternalSQLParser.g:17692:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            {
            // InternalSQLParser.g:17692:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) )
            // InternalSQLParser.g:17693:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:17694:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            // InternalSQLParser.g:17694:4: rule__SQLCaseWhens__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_106);
            rule__SQLCaseWhens__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSQLParser.g:17697:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            // InternalSQLParser.g:17698:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:17699:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( (LA160_0==WHEN) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    // InternalSQLParser.g:17699:4: rule__SQLCaseWhens__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_106);
            	    rule__SQLCaseWhens__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__0"
    // InternalSQLParser.g:17709:1: rule__SqlCaseWhen__Group__0 : rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 ;
    public final void rule__SqlCaseWhen__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17713:1: ( rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 )
            // InternalSQLParser.g:17714:2: rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__SqlCaseWhen__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0"


    // $ANTLR start "rule__SqlCaseWhen__Group__0__Impl"
    // InternalSQLParser.g:17721:1: rule__SqlCaseWhen__Group__0__Impl : ( WHEN ) ;
    public final void rule__SqlCaseWhen__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17725:1: ( ( WHEN ) )
            // InternalSQLParser.g:17726:1: ( WHEN )
            {
            // InternalSQLParser.g:17726:1: ( WHEN )
            // InternalSQLParser.g:17727:2: WHEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }
            match(input,WHEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__1"
    // InternalSQLParser.g:17736:1: rule__SqlCaseWhen__Group__1 : rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 ;
    public final void rule__SqlCaseWhen__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17740:1: ( rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 )
            // InternalSQLParser.g:17741:2: rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2
            {
            pushFollow(FOLLOW_107);
            rule__SqlCaseWhen__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1"


    // $ANTLR start "rule__SqlCaseWhen__Group__1__Impl"
    // InternalSQLParser.g:17748:1: rule__SqlCaseWhen__Group__1__Impl : ( ( rule__SqlCaseWhen__Alternatives_1 ) ) ;
    public final void rule__SqlCaseWhen__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17752:1: ( ( ( rule__SqlCaseWhen__Alternatives_1 ) ) )
            // InternalSQLParser.g:17753:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            {
            // InternalSQLParser.g:17753:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            // InternalSQLParser.g:17754:2: ( rule__SqlCaseWhen__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:17755:2: ( rule__SqlCaseWhen__Alternatives_1 )
            // InternalSQLParser.g:17755:3: rule__SqlCaseWhen__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__2"
    // InternalSQLParser.g:17763:1: rule__SqlCaseWhen__Group__2 : rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 ;
    public final void rule__SqlCaseWhen__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17767:1: ( rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 )
            // InternalSQLParser.g:17768:2: rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3
            {
            pushFollow(FOLLOW_69);
            rule__SqlCaseWhen__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2"


    // $ANTLR start "rule__SqlCaseWhen__Group__2__Impl"
    // InternalSQLParser.g:17775:1: rule__SqlCaseWhen__Group__2__Impl : ( THEN ) ;
    public final void rule__SqlCaseWhen__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17779:1: ( ( THEN ) )
            // InternalSQLParser.g:17780:1: ( THEN )
            {
            // InternalSQLParser.g:17780:1: ( THEN )
            // InternalSQLParser.g:17781:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__3"
    // InternalSQLParser.g:17790:1: rule__SqlCaseWhen__Group__3 : rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 ;
    public final void rule__SqlCaseWhen__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17794:1: ( rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 )
            // InternalSQLParser.g:17795:2: rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4
            {
            pushFollow(FOLLOW_108);
            rule__SqlCaseWhen__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3"


    // $ANTLR start "rule__SqlCaseWhen__Group__3__Impl"
    // InternalSQLParser.g:17802:1: rule__SqlCaseWhen__Group__3__Impl : ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) ;
    public final void rule__SqlCaseWhen__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17806:1: ( ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) )
            // InternalSQLParser.g:17807:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            {
            // InternalSQLParser.g:17807:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            // InternalSQLParser.g:17808:2: ( rule__SqlCaseWhen__TexpAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }
            // InternalSQLParser.g:17809:2: ( rule__SqlCaseWhen__TexpAssignment_3 )
            // InternalSQLParser.g:17809:3: rule__SqlCaseWhen__TexpAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__TexpAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__4"
    // InternalSQLParser.g:17817:1: rule__SqlCaseWhen__Group__4 : rule__SqlCaseWhen__Group__4__Impl ;
    public final void rule__SqlCaseWhen__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17821:1: ( rule__SqlCaseWhen__Group__4__Impl )
            // InternalSQLParser.g:17822:2: rule__SqlCaseWhen__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4"


    // $ANTLR start "rule__SqlCaseWhen__Group__4__Impl"
    // InternalSQLParser.g:17828:1: rule__SqlCaseWhen__Group__4__Impl : ( ( rule__SqlCaseWhen__Group_4__0 )? ) ;
    public final void rule__SqlCaseWhen__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17832:1: ( ( ( rule__SqlCaseWhen__Group_4__0 )? ) )
            // InternalSQLParser.g:17833:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            {
            // InternalSQLParser.g:17833:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            // InternalSQLParser.g:17834:2: ( rule__SqlCaseWhen__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }
            // InternalSQLParser.g:17835:2: ( rule__SqlCaseWhen__Group_4__0 )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==ELSE) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalSQLParser.g:17835:3: rule__SqlCaseWhen__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0"
    // InternalSQLParser.g:17844:1: rule__SqlCaseWhen__Group_4__0 : rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 ;
    public final void rule__SqlCaseWhen__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17848:1: ( rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 )
            // InternalSQLParser.g:17849:2: rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1
            {
            pushFollow(FOLLOW_69);
            rule__SqlCaseWhen__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0__Impl"
    // InternalSQLParser.g:17856:1: rule__SqlCaseWhen__Group_4__0__Impl : ( ELSE ) ;
    public final void rule__SqlCaseWhen__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17860:1: ( ( ELSE ) )
            // InternalSQLParser.g:17861:1: ( ELSE )
            {
            // InternalSQLParser.g:17861:1: ( ELSE )
            // InternalSQLParser.g:17862:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1"
    // InternalSQLParser.g:17871:1: rule__SqlCaseWhen__Group_4__1 : rule__SqlCaseWhen__Group_4__1__Impl ;
    public final void rule__SqlCaseWhen__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17875:1: ( rule__SqlCaseWhen__Group_4__1__Impl )
            // InternalSQLParser.g:17876:2: rule__SqlCaseWhen__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1__Impl"
    // InternalSQLParser.g:17882:1: rule__SqlCaseWhen__Group_4__1__Impl : ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) ;
    public final void rule__SqlCaseWhen__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17886:1: ( ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) )
            // InternalSQLParser.g:17887:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            {
            // InternalSQLParser.g:17887:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            // InternalSQLParser.g:17888:2: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }
            // InternalSQLParser.g:17889:2: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            // InternalSQLParser.g:17889:3: rule__SqlCaseWhen__EexpAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__EexpAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1__Impl"


    // $ANTLR start "rule__JoinType__Group__0"
    // InternalSQLParser.g:17898:1: rule__JoinType__Group__0 : rule__JoinType__Group__0__Impl rule__JoinType__Group__1 ;
    public final void rule__JoinType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17902:1: ( rule__JoinType__Group__0__Impl rule__JoinType__Group__1 )
            // InternalSQLParser.g:17903:2: rule__JoinType__Group__0__Impl rule__JoinType__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__JoinType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0"


    // $ANTLR start "rule__JoinType__Group__0__Impl"
    // InternalSQLParser.g:17910:1: rule__JoinType__Group__0__Impl : ( ( NATURAL )? ) ;
    public final void rule__JoinType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17914:1: ( ( ( NATURAL )? ) )
            // InternalSQLParser.g:17915:1: ( ( NATURAL )? )
            {
            // InternalSQLParser.g:17915:1: ( ( NATURAL )? )
            // InternalSQLParser.g:17916:2: ( NATURAL )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }
            // InternalSQLParser.g:17917:2: ( NATURAL )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==NATURAL) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalSQLParser.g:17917:3: NATURAL
                    {
                    match(input,NATURAL,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0__Impl"


    // $ANTLR start "rule__JoinType__Group__1"
    // InternalSQLParser.g:17925:1: rule__JoinType__Group__1 : rule__JoinType__Group__1__Impl rule__JoinType__Group__2 ;
    public final void rule__JoinType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17929:1: ( rule__JoinType__Group__1__Impl rule__JoinType__Group__2 )
            // InternalSQLParser.g:17930:2: rule__JoinType__Group__1__Impl rule__JoinType__Group__2
            {
            pushFollow(FOLLOW_48);
            rule__JoinType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1"


    // $ANTLR start "rule__JoinType__Group__1__Impl"
    // InternalSQLParser.g:17937:1: rule__JoinType__Group__1__Impl : ( ( rule__JoinType__Alternatives_1 )? ) ;
    public final void rule__JoinType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17941:1: ( ( ( rule__JoinType__Alternatives_1 )? ) )
            // InternalSQLParser.g:17942:1: ( ( rule__JoinType__Alternatives_1 )? )
            {
            // InternalSQLParser.g:17942:1: ( ( rule__JoinType__Alternatives_1 )? )
            // InternalSQLParser.g:17943:2: ( rule__JoinType__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:17944:2: ( rule__JoinType__Alternatives_1 )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==STRAIGHT_JOIN||LA163_0==CROSS||LA163_0==INNER||LA163_0==RIGHT||LA163_0==FULL||LA163_0==LEFT) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalSQLParser.g:17944:3: rule__JoinType__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1__Impl"


    // $ANTLR start "rule__JoinType__Group__2"
    // InternalSQLParser.g:17952:1: rule__JoinType__Group__2 : rule__JoinType__Group__2__Impl ;
    public final void rule__JoinType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17956:1: ( rule__JoinType__Group__2__Impl )
            // InternalSQLParser.g:17957:2: rule__JoinType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2"


    // $ANTLR start "rule__JoinType__Group__2__Impl"
    // InternalSQLParser.g:17963:1: rule__JoinType__Group__2__Impl : ( JOIN ) ;
    public final void rule__JoinType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17967:1: ( ( JOIN ) )
            // InternalSQLParser.g:17968:1: ( JOIN )
            {
            // InternalSQLParser.g:17968:1: ( JOIN )
            // InternalSQLParser.g:17969:2: JOIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }
            match(input,JOIN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__0"
    // InternalSQLParser.g:17979:1: rule__JoinType__Group_1_1__0 : rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 ;
    public final void rule__JoinType__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17983:1: ( rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 )
            // InternalSQLParser.g:17984:2: rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1
            {
            pushFollow(FOLLOW_109);
            rule__JoinType__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0"


    // $ANTLR start "rule__JoinType__Group_1_1__0__Impl"
    // InternalSQLParser.g:17991:1: rule__JoinType__Group_1_1__0__Impl : ( ( rule__JoinType__Alternatives_1_1_0 ) ) ;
    public final void rule__JoinType__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17995:1: ( ( ( rule__JoinType__Alternatives_1_1_0 ) ) )
            // InternalSQLParser.g:17996:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            {
            // InternalSQLParser.g:17996:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            // InternalSQLParser.g:17997:2: ( rule__JoinType__Alternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }
            // InternalSQLParser.g:17998:2: ( rule__JoinType__Alternatives_1_1_0 )
            // InternalSQLParser.g:17998:3: rule__JoinType__Alternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Alternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__1"
    // InternalSQLParser.g:18006:1: rule__JoinType__Group_1_1__1 : rule__JoinType__Group_1_1__1__Impl ;
    public final void rule__JoinType__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18010:1: ( rule__JoinType__Group_1_1__1__Impl )
            // InternalSQLParser.g:18011:2: rule__JoinType__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1"


    // $ANTLR start "rule__JoinType__Group_1_1__1__Impl"
    // InternalSQLParser.g:18017:1: rule__JoinType__Group_1_1__1__Impl : ( ( OUTER )? ) ;
    public final void rule__JoinType__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18021:1: ( ( ( OUTER )? ) )
            // InternalSQLParser.g:18022:1: ( ( OUTER )? )
            {
            // InternalSQLParser.g:18022:1: ( ( OUTER )? )
            // InternalSQLParser.g:18023:2: ( OUTER )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }
            // InternalSQLParser.g:18024:2: ( OUTER )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==OUTER) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalSQLParser.g:18024:3: OUTER
                    {
                    match(input,OUTER,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1__Impl"


    // $ANTLR start "rule__FNAME__Group__0"
    // InternalSQLParser.g:18033:1: rule__FNAME__Group__0 : rule__FNAME__Group__0__Impl rule__FNAME__Group__1 ;
    public final void rule__FNAME__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18037:1: ( rule__FNAME__Group__0__Impl rule__FNAME__Group__1 )
            // InternalSQLParser.g:18038:2: rule__FNAME__Group__0__Impl rule__FNAME__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FNAME__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0"


    // $ANTLR start "rule__FNAME__Group__0__Impl"
    // InternalSQLParser.g:18045:1: rule__FNAME__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FNAME__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18049:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:18050:1: ( RULE_ID )
            {
            // InternalSQLParser.g:18050:1: ( RULE_ID )
            // InternalSQLParser.g:18051:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0__Impl"


    // $ANTLR start "rule__FNAME__Group__1"
    // InternalSQLParser.g:18060:1: rule__FNAME__Group__1 : rule__FNAME__Group__1__Impl ;
    public final void rule__FNAME__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18064:1: ( rule__FNAME__Group__1__Impl )
            // InternalSQLParser.g:18065:2: rule__FNAME__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1"


    // $ANTLR start "rule__FNAME__Group__1__Impl"
    // InternalSQLParser.g:18071:1: rule__FNAME__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FNAME__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18075:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:18076:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:18076:1: ( LeftParenthesis )
            // InternalSQLParser.g:18077:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1__Impl"


    // $ANTLR start "rule__Model__WqAssignment_1"
    // InternalSQLParser.g:18087:1: rule__Model__WqAssignment_1 : ( ruleWithQuery ) ;
    public final void rule__Model__WqAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18091:1: ( ( ruleWithQuery ) )
            // InternalSQLParser.g:18092:2: ( ruleWithQuery )
            {
            // InternalSQLParser.g:18092:2: ( ruleWithQuery )
            // InternalSQLParser.g:18093:3: ruleWithQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getWqWithQueryParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getWqWithQueryParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__WqAssignment_1"


    // $ANTLR start "rule__Model__QueryAssignment_2_0"
    // InternalSQLParser.g:18102:1: rule__Model__QueryAssignment_2_0 : ( ruleSelectQuery ) ;
    public final void rule__Model__QueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18106:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:18107:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:18107:2: ( ruleSelectQuery )
            // InternalSQLParser.g:18108:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__QueryAssignment_2_0"


    // $ANTLR start "rule__Model__InsertAssignment_2_1"
    // InternalSQLParser.g:18117:1: rule__Model__InsertAssignment_2_1 : ( ruleInsertStatement ) ;
    public final void rule__Model__InsertAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18121:1: ( ( ruleInsertStatement ) )
            // InternalSQLParser.g:18122:2: ( ruleInsertStatement )
            {
            // InternalSQLParser.g:18122:2: ( ruleInsertStatement )
            // InternalSQLParser.g:18123:3: ruleInsertStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getInsertInsertStatementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInsertStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getInsertInsertStatementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__InsertAssignment_2_1"


    // $ANTLR start "rule__Model__CreateAssignment_2_2"
    // InternalSQLParser.g:18132:1: rule__Model__CreateAssignment_2_2 : ( ruleCreateTableStatement ) ;
    public final void rule__Model__CreateAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18136:1: ( ( ruleCreateTableStatement ) )
            // InternalSQLParser.g:18137:2: ( ruleCreateTableStatement )
            {
            // InternalSQLParser.g:18137:2: ( ruleCreateTableStatement )
            // InternalSQLParser.g:18138:3: ruleCreateTableStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getCreateCreateTableStatementParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCreateTableStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getCreateCreateTableStatementParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__CreateAssignment_2_2"


    // $ANTLR start "rule__InsertStatement__TblAssignment_2"
    // InternalSQLParser.g:18147:1: rule__InsertStatement__TblAssignment_2 : ( ruleTables ) ;
    public final void rule__InsertStatement__TblAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18151:1: ( ( ruleTables ) )
            // InternalSQLParser.g:18152:2: ( ruleTables )
            {
            // InternalSQLParser.g:18152:2: ( ruleTables )
            // InternalSQLParser.g:18153:3: ruleTables
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getTblTablesParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getTblTablesParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__TblAssignment_2"


    // $ANTLR start "rule__InsertStatement__ColsAssignment_3"
    // InternalSQLParser.g:18162:1: rule__InsertStatement__ColsAssignment_3 : ( ruleColumns ) ;
    public final void rule__InsertStatement__ColsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18166:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:18167:2: ( ruleColumns )
            {
            // InternalSQLParser.g:18167:2: ( ruleColumns )
            // InternalSQLParser.g:18168:3: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getColsColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getColsColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__ColsAssignment_3"


    // $ANTLR start "rule__InsertStatement__ValsAssignment_4"
    // InternalSQLParser.g:18177:1: rule__InsertStatement__ValsAssignment_4 : ( ruleValues ) ;
    public final void rule__InsertStatement__ValsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18181:1: ( ( ruleValues ) )
            // InternalSQLParser.g:18182:2: ( ruleValues )
            {
            // InternalSQLParser.g:18182:2: ( ruleValues )
            // InternalSQLParser.g:18183:3: ruleValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getValsValuesParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getValsValuesParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__ValsAssignment_4"


    // $ANTLR start "rule__CreateTableStatement__TblAssignment_3"
    // InternalSQLParser.g:18192:1: rule__CreateTableStatement__TblAssignment_3 : ( ruleTables ) ;
    public final void rule__CreateTableStatement__TblAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18196:1: ( ( ruleTables ) )
            // InternalSQLParser.g:18197:2: ( ruleTables )
            {
            // InternalSQLParser.g:18197:2: ( ruleTables )
            // InternalSQLParser.g:18198:3: ruleTables
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getTblTablesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getTblTablesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__TblAssignment_3"


    // $ANTLR start "rule__CreateTableStatement__Table_definitionAssignment_5"
    // InternalSQLParser.g:18207:1: rule__CreateTableStatement__Table_definitionAssignment_5 : ( ruleTableDefinition ) ;
    public final void rule__CreateTableStatement__Table_definitionAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18211:1: ( ( ruleTableDefinition ) )
            // InternalSQLParser.g:18212:2: ( ruleTableDefinition )
            {
            // InternalSQLParser.g:18212:2: ( ruleTableDefinition )
            // InternalSQLParser.g:18213:3: ruleTableDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getTable_definitionTableDefinitionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getTable_definitionTableDefinitionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Table_definitionAssignment_5"


    // $ANTLR start "rule__CreateTableStatement__Ttl_definitionAssignment_7"
    // InternalSQLParser.g:18222:1: rule__CreateTableStatement__Ttl_definitionAssignment_7 : ( ruleTtlDefinition ) ;
    public final void rule__CreateTableStatement__Ttl_definitionAssignment_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18226:1: ( ( ruleTtlDefinition ) )
            // InternalSQLParser.g:18227:2: ( ruleTtlDefinition )
            {
            // InternalSQLParser.g:18227:2: ( ruleTtlDefinition )
            // InternalSQLParser.g:18228:3: ruleTtlDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableStatementAccess().getTtl_definitionTtlDefinitionParserRuleCall_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTtlDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableStatementAccess().getTtl_definitionTtlDefinitionParserRuleCall_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTableStatement__Ttl_definitionAssignment_7"


    // $ANTLR start "rule__TableDefinition__Column_definitionAssignment_0_0"
    // InternalSQLParser.g:18237:1: rule__TableDefinition__Column_definitionAssignment_0_0 : ( ruleColumnDefinition ) ;
    public final void rule__TableDefinition__Column_definitionAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18241:1: ( ( ruleColumnDefinition ) )
            // InternalSQLParser.g:18242:2: ( ruleColumnDefinition )
            {
            // InternalSQLParser.g:18242:2: ( ruleColumnDefinition )
            // InternalSQLParser.g:18243:3: ruleColumnDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionAccess().getColumn_definitionColumnDefinitionParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionAccess().getColumn_definitionColumnDefinitionParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Column_definitionAssignment_0_0"


    // $ANTLR start "rule__TableDefinition__Key_definitionAssignment_0_1"
    // InternalSQLParser.g:18252:1: rule__TableDefinition__Key_definitionAssignment_0_1 : ( ruleKeyDefinition ) ;
    public final void rule__TableDefinition__Key_definitionAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18256:1: ( ( ruleKeyDefinition ) )
            // InternalSQLParser.g:18257:2: ( ruleKeyDefinition )
            {
            // InternalSQLParser.g:18257:2: ( ruleKeyDefinition )
            // InternalSQLParser.g:18258:3: ruleKeyDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionAccess().getKey_definitionKeyDefinitionParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleKeyDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionAccess().getKey_definitionKeyDefinitionParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Key_definitionAssignment_0_1"


    // $ANTLR start "rule__TableDefinition__Column_definitionAssignment_1_1_0"
    // InternalSQLParser.g:18267:1: rule__TableDefinition__Column_definitionAssignment_1_1_0 : ( ruleColumnDefinition ) ;
    public final void rule__TableDefinition__Column_definitionAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18271:1: ( ( ruleColumnDefinition ) )
            // InternalSQLParser.g:18272:2: ( ruleColumnDefinition )
            {
            // InternalSQLParser.g:18272:2: ( ruleColumnDefinition )
            // InternalSQLParser.g:18273:3: ruleColumnDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionAccess().getColumn_definitionColumnDefinitionParserRuleCall_1_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionAccess().getColumn_definitionColumnDefinitionParserRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Column_definitionAssignment_1_1_0"


    // $ANTLR start "rule__TableDefinition__Key_definitionAssignment_1_1_1"
    // InternalSQLParser.g:18282:1: rule__TableDefinition__Key_definitionAssignment_1_1_1 : ( ruleKeyDefinition ) ;
    public final void rule__TableDefinition__Key_definitionAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18286:1: ( ( ruleKeyDefinition ) )
            // InternalSQLParser.g:18287:2: ( ruleKeyDefinition )
            {
            // InternalSQLParser.g:18287:2: ( ruleKeyDefinition )
            // InternalSQLParser.g:18288:3: ruleKeyDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableDefinitionAccess().getKey_definitionKeyDefinitionParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleKeyDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableDefinitionAccess().getKey_definitionKeyDefinitionParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableDefinition__Key_definitionAssignment_1_1_1"


    // $ANTLR start "rule__ColumnDefinition__IdAssignment_0"
    // InternalSQLParser.g:18297:1: rule__ColumnDefinition__IdAssignment_0 : ( RULE_ID ) ;
    public final void rule__ColumnDefinition__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18301:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:18302:2: ( RULE_ID )
            {
            // InternalSQLParser.g:18302:2: ( RULE_ID )
            // InternalSQLParser.g:18303:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getIdIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getIdIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__IdAssignment_0"


    // $ANTLR start "rule__ColumnDefinition__Type_definitionAssignment_1"
    // InternalSQLParser.g:18312:1: rule__ColumnDefinition__Type_definitionAssignment_1 : ( ruleTypeDefinition ) ;
    public final void rule__ColumnDefinition__Type_definitionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18316:1: ( ( ruleTypeDefinition ) )
            // InternalSQLParser.g:18317:2: ( ruleTypeDefinition )
            {
            // InternalSQLParser.g:18317:2: ( ruleTypeDefinition )
            // InternalSQLParser.g:18318:3: ruleTypeDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getType_definitionTypeDefinitionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTypeDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getType_definitionTypeDefinitionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Type_definitionAssignment_1"


    // $ANTLR start "rule__KeyDefinition__Shard_key_definitionAssignment_4_0"
    // InternalSQLParser.g:18327:1: rule__KeyDefinition__Shard_key_definitionAssignment_4_0 : ( ruleShardKeyDefinition ) ;
    public final void rule__KeyDefinition__Shard_key_definitionAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18331:1: ( ( ruleShardKeyDefinition ) )
            // InternalSQLParser.g:18332:2: ( ruleShardKeyDefinition )
            {
            // InternalSQLParser.g:18332:2: ( ruleShardKeyDefinition )
            // InternalSQLParser.g:18333:3: ruleShardKeyDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getShard_key_definitionShardKeyDefinitionParserRuleCall_4_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleShardKeyDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getShard_key_definitionShardKeyDefinitionParserRuleCall_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Shard_key_definitionAssignment_4_0"


    // $ANTLR start "rule__KeyDefinition__Id_list_with_sizeAssignment_5"
    // InternalSQLParser.g:18342:1: rule__KeyDefinition__Id_list_with_sizeAssignment_5 : ( ruleIDListWithSize ) ;
    public final void rule__KeyDefinition__Id_list_with_sizeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18346:1: ( ( ruleIDListWithSize ) )
            // InternalSQLParser.g:18347:2: ( ruleIDListWithSize )
            {
            // InternalSQLParser.g:18347:2: ( ruleIDListWithSize )
            // InternalSQLParser.g:18348:3: ruleIDListWithSize
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getId_list_with_sizeIDListWithSizeParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIDListWithSize();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getId_list_with_sizeIDListWithSizeParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Id_list_with_sizeAssignment_5"


    // $ANTLR start "rule__KeyDefinition__Ttl_definitionAssignment_7"
    // InternalSQLParser.g:18357:1: rule__KeyDefinition__Ttl_definitionAssignment_7 : ( ruleTtlDefinition ) ;
    public final void rule__KeyDefinition__Ttl_definitionAssignment_7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18361:1: ( ( ruleTtlDefinition ) )
            // InternalSQLParser.g:18362:2: ( ruleTtlDefinition )
            {
            // InternalSQLParser.g:18362:2: ( ruleTtlDefinition )
            // InternalSQLParser.g:18363:3: ruleTtlDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getKeyDefinitionAccess().getTtl_definitionTtlDefinitionParserRuleCall_7_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTtlDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getKeyDefinitionAccess().getTtl_definitionTtlDefinitionParserRuleCall_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__KeyDefinition__Ttl_definitionAssignment_7"


    // $ANTLR start "rule__IDListWithSize__Id_with_sizeAssignment_0"
    // InternalSQLParser.g:18372:1: rule__IDListWithSize__Id_with_sizeAssignment_0 : ( ruleIDWithSize ) ;
    public final void rule__IDListWithSize__Id_with_sizeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18376:1: ( ( ruleIDWithSize ) )
            // InternalSQLParser.g:18377:2: ( ruleIDWithSize )
            {
            // InternalSQLParser.g:18377:2: ( ruleIDWithSize )
            // InternalSQLParser.g:18378:3: ruleIDWithSize
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDListWithSizeAccess().getId_with_sizeIDWithSizeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIDWithSize();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDListWithSizeAccess().getId_with_sizeIDWithSizeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Id_with_sizeAssignment_0"


    // $ANTLR start "rule__IDListWithSize__Id_with_sizeAssignment_1_1"
    // InternalSQLParser.g:18387:1: rule__IDListWithSize__Id_with_sizeAssignment_1_1 : ( ruleIDWithSize ) ;
    public final void rule__IDListWithSize__Id_with_sizeAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18391:1: ( ( ruleIDWithSize ) )
            // InternalSQLParser.g:18392:2: ( ruleIDWithSize )
            {
            // InternalSQLParser.g:18392:2: ( ruleIDWithSize )
            // InternalSQLParser.g:18393:3: ruleIDWithSize
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDListWithSizeAccess().getId_with_sizeIDWithSizeParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIDWithSize();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDListWithSizeAccess().getId_with_sizeIDWithSizeParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDListWithSize__Id_with_sizeAssignment_1_1"


    // $ANTLR start "rule__IDWithSize__IdAssignment_0"
    // InternalSQLParser.g:18402:1: rule__IDWithSize__IdAssignment_0 : ( RULE_ID ) ;
    public final void rule__IDWithSize__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18406:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:18407:2: ( RULE_ID )
            {
            // InternalSQLParser.g:18407:2: ( RULE_ID )
            // InternalSQLParser.g:18408:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDWithSizeAccess().getIdIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDWithSizeAccess().getIdIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDWithSize__IdAssignment_0"


    // $ANTLR start "rule__IDWithSize__Storage_sizeAssignment_1"
    // InternalSQLParser.g:18417:1: rule__IDWithSize__Storage_sizeAssignment_1 : ( ruleStorageSize ) ;
    public final void rule__IDWithSize__Storage_sizeAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18421:1: ( ( ruleStorageSize ) )
            // InternalSQLParser.g:18422:2: ( ruleStorageSize )
            {
            // InternalSQLParser.g:18422:2: ( ruleStorageSize )
            // InternalSQLParser.g:18423:3: ruleStorageSize
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIDWithSizeAccess().getStorage_sizeStorageSizeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStorageSize();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIDWithSizeAccess().getStorage_sizeStorageSizeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IDWithSize__Storage_sizeAssignment_1"


    // $ANTLR start "rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2"
    // InternalSQLParser.g:18432:1: rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2 : ( ruleIDListWithSize ) ;
    public final void rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18436:1: ( ( ruleIDListWithSize ) )
            // InternalSQLParser.g:18437:2: ( ruleIDListWithSize )
            {
            // InternalSQLParser.g:18437:2: ( ruleIDListWithSize )
            // InternalSQLParser.g:18438:3: ruleIDListWithSize
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getShardKeyDefinitionAccess().getId_list_with_sizeIDListWithSizeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIDListWithSize();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getShardKeyDefinitionAccess().getId_list_with_sizeIDListWithSizeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ShardKeyDefinition__Id_list_with_sizeAssignment_2"


    // $ANTLR start "rule__WithQuery__WAssignment_0"
    // InternalSQLParser.g:18447:1: rule__WithQuery__WAssignment_0 : ( ( WITH ) ) ;
    public final void rule__WithQuery__WAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18451:1: ( ( ( WITH ) ) )
            // InternalSQLParser.g:18452:2: ( ( WITH ) )
            {
            // InternalSQLParser.g:18452:2: ( ( WITH ) )
            // InternalSQLParser.g:18453:3: ( WITH )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            // InternalSQLParser.g:18454:3: ( WITH )
            // InternalSQLParser.g:18455:4: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WAssignment_0"


    // $ANTLR start "rule__WithQuery__WnameAssignment_1"
    // InternalSQLParser.g:18466:1: rule__WithQuery__WnameAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__WnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18470:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:18471:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:18471:2: ( ruleDbObjectName )
            // InternalSQLParser.g:18472:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WnameAssignment_1"


    // $ANTLR start "rule__WithQuery__WithColsAssignment_2"
    // InternalSQLParser.g:18481:1: rule__WithQuery__WithColsAssignment_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__WithColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18485:1: ( ( ruleWithColumns ) )
            // InternalSQLParser.g:18486:2: ( ruleWithColumns )
            {
            // InternalSQLParser.g:18486:2: ( ruleWithColumns )
            // InternalSQLParser.g:18487:3: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WithColsAssignment_2"


    // $ANTLR start "rule__WithQuery__QueryAssignment_5"
    // InternalSQLParser.g:18496:1: rule__WithQuery__QueryAssignment_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__QueryAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18500:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:18501:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:18501:2: ( ruleSelectQuery )
            // InternalSQLParser.g:18502:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__QueryAssignment_5"


    // $ANTLR start "rule__WithQuery__AdditionalWnameAssignment_7_1"
    // InternalSQLParser.g:18511:1: rule__WithQuery__AdditionalWnameAssignment_7_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__AdditionalWnameAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18515:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:18516:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:18516:2: ( ruleDbObjectName )
            // InternalSQLParser.g:18517:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWnameAssignment_7_1"


    // $ANTLR start "rule__WithQuery__AdditionalWithColsAssignment_7_2"
    // InternalSQLParser.g:18526:1: rule__WithQuery__AdditionalWithColsAssignment_7_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__AdditionalWithColsAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18530:1: ( ( ruleWithColumns ) )
            // InternalSQLParser.g:18531:2: ( ruleWithColumns )
            {
            // InternalSQLParser.g:18531:2: ( ruleWithColumns )
            // InternalSQLParser.g:18532:3: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWithColsAssignment_7_2"


    // $ANTLR start "rule__WithQuery__AdditionalQueriesAssignment_7_5"
    // InternalSQLParser.g:18541:1: rule__WithQuery__AdditionalQueriesAssignment_7_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__AdditionalQueriesAssignment_7_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18545:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:18546:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:18546:2: ( ruleSelectQuery )
            // InternalSQLParser.g:18547:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalQueriesAssignment_7_5"


    // $ANTLR start "rule__FetchFirst__FetchFirstAssignment_0"
    // InternalSQLParser.g:18556:1: rule__FetchFirst__FetchFirstAssignment_0 : ( ruleUnsignedValue ) ;
    public final void rule__FetchFirst__FetchFirstAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18560:1: ( ( ruleUnsignedValue ) )
            // InternalSQLParser.g:18561:2: ( ruleUnsignedValue )
            {
            // InternalSQLParser.g:18561:2: ( ruleUnsignedValue )
            // InternalSQLParser.g:18562:3: ruleUnsignedValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__FetchFirstAssignment_0"


    // $ANTLR start "rule__FetchFirst__RowAssignment_1"
    // InternalSQLParser.g:18571:1: rule__FetchFirst__RowAssignment_1 : ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) ;
    public final void rule__FetchFirst__RowAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18575:1: ( ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) )
            // InternalSQLParser.g:18576:2: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:18576:2: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            // InternalSQLParser.g:18577:3: ( rule__FetchFirst__RowAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }
            // InternalSQLParser.g:18578:3: ( rule__FetchFirst__RowAlternatives_1_0 )
            // InternalSQLParser.g:18578:4: rule__FetchFirst__RowAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAssignment_1"


    // $ANTLR start "rule__Offset__OffsetAssignment"
    // InternalSQLParser.g:18586:1: rule__Offset__OffsetAssignment : ( RULE_INT ) ;
    public final void rule__Offset__OffsetAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18590:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:18591:2: ( RULE_INT )
            {
            // InternalSQLParser.g:18591:2: ( RULE_INT )
            // InternalSQLParser.g:18592:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__OffsetAssignment"


    // $ANTLR start "rule__Limit__L1Assignment_1_0"
    // InternalSQLParser.g:18601:1: rule__Limit__L1Assignment_1_0 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L1Assignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18605:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:18606:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:18606:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:18607:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L1Assignment_1_0"


    // $ANTLR start "rule__Limit__L2Assignment_1_1_1"
    // InternalSQLParser.g:18616:1: rule__Limit__L2Assignment_1_1_1 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L2Assignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18620:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:18621:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:18621:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:18622:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L2Assignment_1_1_1"


    // $ANTLR start "rule__SelectQuery__OpAssignment_1"
    // InternalSQLParser.g:18631:1: rule__SelectQuery__OpAssignment_1 : ( ruleSelectSubSet ) ;
    public final void rule__SelectQuery__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18635:1: ( ( ruleSelectSubSet ) )
            // InternalSQLParser.g:18636:2: ( ruleSelectSubSet )
            {
            // InternalSQLParser.g:18636:2: ( ruleSelectSubSet )
            // InternalSQLParser.g:18637:3: ruleSelectSubSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__OpAssignment_1"


    // $ANTLR start "rule__SelectSubSet__OpAssignment_0"
    // InternalSQLParser.g:18646:1: rule__SelectSubSet__OpAssignment_0 : ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) ;
    public final void rule__SelectSubSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18650:1: ( ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) )
            // InternalSQLParser.g:18651:2: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            {
            // InternalSQLParser.g:18651:2: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            // InternalSQLParser.g:18652:3: ( rule__SelectSubSet__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }
            // InternalSQLParser.g:18653:3: ( rule__SelectSubSet__OpAlternatives_0_0 )
            // InternalSQLParser.g:18653:4: rule__SelectSubSet__OpAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAssignment_0"


    // $ANTLR start "rule__SelectSubSet__AllAssignment_1"
    // InternalSQLParser.g:18661:1: rule__SelectSubSet__AllAssignment_1 : ( ( ALL ) ) ;
    public final void rule__SelectSubSet__AllAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18665:1: ( ( ( ALL ) ) )
            // InternalSQLParser.g:18666:2: ( ( ALL ) )
            {
            // InternalSQLParser.g:18666:2: ( ( ALL ) )
            // InternalSQLParser.g:18667:3: ( ALL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            // InternalSQLParser.g:18668:3: ( ALL )
            // InternalSQLParser.g:18669:4: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__AllAssignment_1"


    // $ANTLR start "rule__SelectSubSet__QueryAssignment_2"
    // InternalSQLParser.g:18680:1: rule__SelectSubSet__QueryAssignment_2 : ( ruleSelect ) ;
    public final void rule__SelectSubSet__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18684:1: ( ( ruleSelect ) )
            // InternalSQLParser.g:18685:2: ( ruleSelect )
            {
            // InternalSQLParser.g:18685:2: ( ruleSelect )
            // InternalSQLParser.g:18686:3: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__QueryAssignment_2"


    // $ANTLR start "rule__Select__SelectAssignment_0"
    // InternalSQLParser.g:18695:1: rule__Select__SelectAssignment_0 : ( ( SELECT ) ) ;
    public final void rule__Select__SelectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18699:1: ( ( ( SELECT ) ) )
            // InternalSQLParser.g:18700:2: ( ( SELECT ) )
            {
            // InternalSQLParser.g:18700:2: ( ( SELECT ) )
            // InternalSQLParser.g:18701:3: ( SELECT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            // InternalSQLParser.g:18702:3: ( SELECT )
            // InternalSQLParser.g:18703:4: SELECT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            match(input,SELECT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__SelectAssignment_0"


    // $ANTLR start "rule__Select__ColsAssignment_3"
    // InternalSQLParser.g:18714:1: rule__Select__ColsAssignment_3 : ( ruleColumns ) ;
    public final void rule__Select__ColsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18718:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:18719:2: ( ruleColumns )
            {
            // InternalSQLParser.g:18719:2: ( ruleColumns )
            // InternalSQLParser.g:18720:3: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__ColsAssignment_3"


    // $ANTLR start "rule__Select__TblAssignment_5"
    // InternalSQLParser.g:18729:1: rule__Select__TblAssignment_5 : ( ruleTables ) ;
    public final void rule__Select__TblAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18733:1: ( ( ruleTables ) )
            // InternalSQLParser.g:18734:2: ( ruleTables )
            {
            // InternalSQLParser.g:18734:2: ( ruleTables )
            // InternalSQLParser.g:18735:3: ruleTables
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__TblAssignment_5"


    // $ANTLR start "rule__Select__WhereExpressionAssignment_6_1"
    // InternalSQLParser.g:18744:1: rule__Select__WhereExpressionAssignment_6_1 : ( ruleFullExpression ) ;
    public final void rule__Select__WhereExpressionAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18748:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:18749:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:18749:2: ( ruleFullExpression )
            // InternalSQLParser.g:18750:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__WhereExpressionAssignment_6_1"


    // $ANTLR start "rule__Select__GroupByEntryAssignment_7_2"
    // InternalSQLParser.g:18759:1: rule__Select__GroupByEntryAssignment_7_2 : ( ruleGroupByColumns ) ;
    public final void rule__Select__GroupByEntryAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18763:1: ( ( ruleGroupByColumns ) )
            // InternalSQLParser.g:18764:2: ( ruleGroupByColumns )
            {
            // InternalSQLParser.g:18764:2: ( ruleGroupByColumns )
            // InternalSQLParser.g:18765:3: ruleGroupByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__GroupByEntryAssignment_7_2"


    // $ANTLR start "rule__Select__HavingEntryAssignment_8_1"
    // InternalSQLParser.g:18774:1: rule__Select__HavingEntryAssignment_8_1 : ( ruleFullExpression ) ;
    public final void rule__Select__HavingEntryAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18778:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:18779:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:18779:2: ( ruleFullExpression )
            // InternalSQLParser.g:18780:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__HavingEntryAssignment_8_1"


    // $ANTLR start "rule__Select__OrderByEntryAssignment_9_2"
    // InternalSQLParser.g:18789:1: rule__Select__OrderByEntryAssignment_9_2 : ( ruleOrderByColumns ) ;
    public final void rule__Select__OrderByEntryAssignment_9_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18793:1: ( ( ruleOrderByColumns ) )
            // InternalSQLParser.g:18794:2: ( ruleOrderByColumns )
            {
            // InternalSQLParser.g:18794:2: ( ruleOrderByColumns )
            // InternalSQLParser.g:18795:3: ruleOrderByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OrderByEntryAssignment_9_2"


    // $ANTLR start "rule__Select__LimAssignment_10_1"
    // InternalSQLParser.g:18804:1: rule__Select__LimAssignment_10_1 : ( ruleLimit ) ;
    public final void rule__Select__LimAssignment_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18808:1: ( ( ruleLimit ) )
            // InternalSQLParser.g:18809:2: ( ruleLimit )
            {
            // InternalSQLParser.g:18809:2: ( ruleLimit )
            // InternalSQLParser.g:18810:3: ruleLimit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__LimAssignment_10_1"


    // $ANTLR start "rule__Select__OffsetAssignment_11_1"
    // InternalSQLParser.g:18819:1: rule__Select__OffsetAssignment_11_1 : ( ruleOffset ) ;
    public final void rule__Select__OffsetAssignment_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18823:1: ( ( ruleOffset ) )
            // InternalSQLParser.g:18824:2: ( ruleOffset )
            {
            // InternalSQLParser.g:18824:2: ( ruleOffset )
            // InternalSQLParser.g:18825:3: ruleOffset
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OffsetAssignment_11_1"


    // $ANTLR start "rule__Select__FetchFirstAssignment_12_2"
    // InternalSQLParser.g:18834:1: rule__Select__FetchFirstAssignment_12_2 : ( ruleFetchFirst ) ;
    public final void rule__Select__FetchFirstAssignment_12_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18838:1: ( ( ruleFetchFirst ) )
            // InternalSQLParser.g:18839:2: ( ruleFetchFirst )
            {
            // InternalSQLParser.g:18839:2: ( ruleFetchFirst )
            // InternalSQLParser.g:18840:3: ruleFetchFirst
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__FetchFirstAssignment_12_2"


    // $ANTLR start "rule__Columns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:18849:1: rule__Columns__EntriesAssignment_1_1_1 : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18853:1: ( ( ruleColumnOrAlias ) )
            // InternalSQLParser.g:18854:2: ( ruleColumnOrAlias )
            {
            // InternalSQLParser.g:18854:2: ( ruleColumnOrAlias )
            // InternalSQLParser.g:18855:3: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnOrAlias__CeAssignment_0_0"
    // InternalSQLParser.g:18864:1: rule__ColumnOrAlias__CeAssignment_0_0 : ( ruleOperandGroup ) ;
    public final void rule__ColumnOrAlias__CeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18868:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:18869:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:18869:2: ( ruleOperandGroup )
            // InternalSQLParser.g:18870:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__CeAssignment_0_0"


    // $ANTLR start "rule__ColumnOrAlias__AliasAssignment_0_1"
    // InternalSQLParser.g:18879:1: rule__ColumnOrAlias__AliasAssignment_0_1 : ( ( AS ) ) ;
    public final void rule__ColumnOrAlias__AliasAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18883:1: ( ( ( AS ) ) )
            // InternalSQLParser.g:18884:2: ( ( AS ) )
            {
            // InternalSQLParser.g:18884:2: ( ( AS ) )
            // InternalSQLParser.g:18885:3: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            // InternalSQLParser.g:18886:3: ( AS )
            // InternalSQLParser.g:18887:4: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AliasAssignment_0_1"


    // $ANTLR start "rule__ColumnOrAlias__ColAliasAssignment_0_2"
    // InternalSQLParser.g:18898:1: rule__ColumnOrAlias__ColAliasAssignment_0_2 : ( ruleDbObjectName ) ;
    public final void rule__ColumnOrAlias__ColAliasAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18902:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:18903:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:18903:2: ( ruleDbObjectName )
            // InternalSQLParser.g:18904:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__ColAliasAssignment_0_2"


    // $ANTLR start "rule__ColumnOrAlias__AllColsAssignment_1"
    // InternalSQLParser.g:18913:1: rule__ColumnOrAlias__AllColsAssignment_1 : ( RULE_STAR ) ;
    public final void rule__ColumnOrAlias__AllColsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18917:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:18918:2: ( RULE_STAR )
            {
            // InternalSQLParser.g:18918:2: ( RULE_STAR )
            // InternalSQLParser.g:18919:3: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AllColsAssignment_1"


    // $ANTLR start "rule__ColumnOrAlias__DbAllColsAssignment_2"
    // InternalSQLParser.g:18928:1: rule__ColumnOrAlias__DbAllColsAssignment_2 : ( ruleDbObjectNameAll ) ;
    public final void rule__ColumnOrAlias__DbAllColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18932:1: ( ( ruleDbObjectNameAll ) )
            // InternalSQLParser.g:18933:2: ( ruleDbObjectNameAll )
            {
            // InternalSQLParser.g:18933:2: ( ruleDbObjectNameAll )
            // InternalSQLParser.g:18934:3: ruleDbObjectNameAll
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__DbAllColsAssignment_2"


    // $ANTLR start "rule__ColumnFull__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:18943:1: rule__ColumnFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18947:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:18948:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:18948:2: ( ruleDbObjectName )
            // InternalSQLParser.g:18949:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Tables__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:18958:1: rule__Tables__EntriesAssignment_1_1_1 : ( ruleFromTable ) ;
    public final void rule__Tables__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18962:1: ( ( ruleFromTable ) )
            // InternalSQLParser.g:18963:2: ( ruleFromTable )
            {
            // InternalSQLParser.g:18963:2: ( ruleFromTable )
            // InternalSQLParser.g:18964:3: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__FromTable__TableAssignment_0"
    // InternalSQLParser.g:18973:1: rule__FromTable__TableAssignment_0 : ( ruleTableOrAlias ) ;
    public final void rule__FromTable__TableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18977:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:18978:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:18978:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:18979:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__TableAssignment_0"


    // $ANTLR start "rule__FromTable__FjoinAssignment_1"
    // InternalSQLParser.g:18988:1: rule__FromTable__FjoinAssignment_1 : ( ruleFromTableJoin ) ;
    public final void rule__FromTable__FjoinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18992:1: ( ( ruleFromTableJoin ) )
            // InternalSQLParser.g:18993:2: ( ruleFromTableJoin )
            {
            // InternalSQLParser.g:18993:2: ( ruleFromTableJoin )
            // InternalSQLParser.g:18994:3: ruleFromTableJoin
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__FjoinAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinAssignment_0"
    // InternalSQLParser.g:19003:1: rule__FromTableJoin__JoinAssignment_0 : ( ruleJoinType ) ;
    public final void rule__FromTableJoin__JoinAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19007:1: ( ( ruleJoinType ) )
            // InternalSQLParser.g:19008:2: ( ruleJoinType )
            {
            // InternalSQLParser.g:19008:2: ( ruleJoinType )
            // InternalSQLParser.g:19009:3: ruleJoinType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinAssignment_0"


    // $ANTLR start "rule__FromTableJoin__OnTableAssignment_1"
    // InternalSQLParser.g:19018:1: rule__FromTableJoin__OnTableAssignment_1 : ( ruleTableOrAlias ) ;
    public final void rule__FromTableJoin__OnTableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19022:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:19023:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:19023:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:19024:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__OnTableAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinExprAssignment_2_0_1"
    // InternalSQLParser.g:19033:1: rule__FromTableJoin__JoinExprAssignment_2_0_1 : ( ruleFullExpression ) ;
    public final void rule__FromTableJoin__JoinExprAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19037:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:19038:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:19038:2: ( ruleFullExpression )
            // InternalSQLParser.g:19039:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinExprAssignment_2_0_1"


    // $ANTLR start "rule__FromTableJoin__JoinCondAssignment_2_1"
    // InternalSQLParser.g:19048:1: rule__FromTableJoin__JoinCondAssignment_2_1 : ( ruleJoinCondition ) ;
    public final void rule__FromTableJoin__JoinCondAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19052:1: ( ( ruleJoinCondition ) )
            // InternalSQLParser.g:19053:2: ( ruleJoinCondition )
            {
            // InternalSQLParser.g:19053:2: ( ruleJoinCondition )
            // InternalSQLParser.g:19054:3: ruleJoinCondition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinCondAssignment_2_1"


    // $ANTLR start "rule__JoinCondition__UseColsAssignment_2"
    // InternalSQLParser.g:19063:1: rule__JoinCondition__UseColsAssignment_2 : ( ruleUsingCols ) ;
    public final void rule__JoinCondition__UseColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19067:1: ( ( ruleUsingCols ) )
            // InternalSQLParser.g:19068:2: ( ruleUsingCols )
            {
            // InternalSQLParser.g:19068:2: ( ruleUsingCols )
            // InternalSQLParser.g:19069:3: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__UseColsAssignment_2"


    // $ANTLR start "rule__UsingCols__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19078:1: rule__UsingCols__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19082:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:19083:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:19083:2: ( ruleDbObjectName )
            // InternalSQLParser.g:19084:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableOrAlias__TfullAssignment_0_0"
    // InternalSQLParser.g:19093:1: rule__TableOrAlias__TfullAssignment_0_0 : ( ruleTableFull ) ;
    public final void rule__TableOrAlias__TfullAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19097:1: ( ( ruleTableFull ) )
            // InternalSQLParser.g:19098:2: ( ruleTableFull )
            {
            // InternalSQLParser.g:19098:2: ( ruleTableFull )
            // InternalSQLParser.g:19099:3: ruleTableFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TfullAssignment_0_0"


    // $ANTLR start "rule__TableOrAlias__SqAssignment_0_1"
    // InternalSQLParser.g:19108:1: rule__TableOrAlias__SqAssignment_0_1 : ( ruleSubQueryOperand ) ;
    public final void rule__TableOrAlias__SqAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19112:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:19113:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:19113:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:19114:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__SqAssignment_0_1"


    // $ANTLR start "rule__TableOrAlias__ValuesAssignment_0_2"
    // InternalSQLParser.g:19123:1: rule__TableOrAlias__ValuesAssignment_0_2 : ( ruleFromValues ) ;
    public final void rule__TableOrAlias__ValuesAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19127:1: ( ( ruleFromValues ) )
            // InternalSQLParser.g:19128:2: ( ruleFromValues )
            {
            // InternalSQLParser.g:19128:2: ( ruleFromValues )
            // InternalSQLParser.g:19129:3: ruleFromValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__ValuesAssignment_0_2"


    // $ANTLR start "rule__TableOrAlias__PivotAssignment_1_0"
    // InternalSQLParser.g:19138:1: rule__TableOrAlias__PivotAssignment_1_0 : ( rulePivotTable ) ;
    public final void rule__TableOrAlias__PivotAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19142:1: ( ( rulePivotTable ) )
            // InternalSQLParser.g:19143:2: ( rulePivotTable )
            {
            // InternalSQLParser.g:19143:2: ( rulePivotTable )
            // InternalSQLParser.g:19144:3: rulePivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__PivotAssignment_1_0"


    // $ANTLR start "rule__TableOrAlias__UnpivotAssignment_1_1"
    // InternalSQLParser.g:19153:1: rule__TableOrAlias__UnpivotAssignment_1_1 : ( ruleUnpivotTable ) ;
    public final void rule__TableOrAlias__UnpivotAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19157:1: ( ( ruleUnpivotTable ) )
            // InternalSQLParser.g:19158:2: ( ruleUnpivotTable )
            {
            // InternalSQLParser.g:19158:2: ( ruleUnpivotTable )
            // InternalSQLParser.g:19159:3: ruleUnpivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__UnpivotAssignment_1_1"


    // $ANTLR start "rule__TableOrAlias__AliasAssignment_2"
    // InternalSQLParser.g:19168:1: rule__TableOrAlias__AliasAssignment_2 : ( ( AS ) ) ;
    public final void rule__TableOrAlias__AliasAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19172:1: ( ( ( AS ) ) )
            // InternalSQLParser.g:19173:2: ( ( AS ) )
            {
            // InternalSQLParser.g:19173:2: ( ( AS ) )
            // InternalSQLParser.g:19174:3: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            // InternalSQLParser.g:19175:3: ( AS )
            // InternalSQLParser.g:19176:4: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__AliasAssignment_2"


    // $ANTLR start "rule__TableOrAlias__TblAliasAssignment_3"
    // InternalSQLParser.g:19187:1: rule__TableOrAlias__TblAliasAssignment_3 : ( ruleDbObjectName ) ;
    public final void rule__TableOrAlias__TblAliasAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19191:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:19192:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:19192:2: ( ruleDbObjectName )
            // InternalSQLParser.g:19193:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TblAliasAssignment_3"


    // $ANTLR start "rule__FromValues__ValuesAssignment_0"
    // InternalSQLParser.g:19202:1: rule__FromValues__ValuesAssignment_0 : ( ruleValues ) ;
    public final void rule__FromValues__ValuesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19206:1: ( ( ruleValues ) )
            // InternalSQLParser.g:19207:2: ( ruleValues )
            {
            // InternalSQLParser.g:19207:2: ( ruleValues )
            // InternalSQLParser.g:19208:3: ruleValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__ValuesAssignment_0"


    // $ANTLR start "rule__FromValues__CAssignment_1"
    // InternalSQLParser.g:19217:1: rule__FromValues__CAssignment_1 : ( ruleFromValuesColumns ) ;
    public final void rule__FromValues__CAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19221:1: ( ( ruleFromValuesColumns ) )
            // InternalSQLParser.g:19222:2: ( ruleFromValuesColumns )
            {
            // InternalSQLParser.g:19222:2: ( ruleFromValuesColumns )
            // InternalSQLParser.g:19223:3: ruleFromValuesColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__CAssignment_1"


    // $ANTLR start "rule__FromValuesColumns__FvColsAssignment_2"
    // InternalSQLParser.g:19232:1: rule__FromValuesColumns__FvColsAssignment_2 : ( ruleFromValuesColumnNames ) ;
    public final void rule__FromValuesColumns__FvColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19236:1: ( ( ruleFromValuesColumnNames ) )
            // InternalSQLParser.g:19237:2: ( ruleFromValuesColumnNames )
            {
            // InternalSQLParser.g:19237:2: ( ruleFromValuesColumnNames )
            // InternalSQLParser.g:19238:3: ruleFromValuesColumnNames
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__FvColsAssignment_2"


    // $ANTLR start "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19247:1: rule__FromValuesColumnNames__EntriesAssignment_1_1_1 : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19251:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:19252:2: ( ruleColumnName )
            {
            // InternalSQLParser.g:19252:2: ( ruleColumnName )
            // InternalSQLParser.g:19253:3: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnName__ColNameAssignment"
    // InternalSQLParser.g:19262:1: rule__ColumnName__ColNameAssignment : ( RULE_STRING ) ;
    public final void rule__ColumnName__ColNameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19266:1: ( ( RULE_STRING ) )
            // InternalSQLParser.g:19267:2: ( RULE_STRING )
            {
            // InternalSQLParser.g:19267:2: ( RULE_STRING )
            // InternalSQLParser.g:19268:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnName__ColNameAssignment"


    // $ANTLR start "rule__Values__RowsAssignment_2"
    // InternalSQLParser.g:19277:1: rule__Values__RowsAssignment_2 : ( ruleRows ) ;
    public final void rule__Values__RowsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19281:1: ( ( ruleRows ) )
            // InternalSQLParser.g:19282:2: ( ruleRows )
            {
            // InternalSQLParser.g:19282:2: ( ruleRows )
            // InternalSQLParser.g:19283:3: ruleRows
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__RowsAssignment_2"


    // $ANTLR start "rule__Rows__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19292:1: rule__Rows__EntriesAssignment_1_1_1 : ( ruleRow ) ;
    public final void rule__Rows__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19296:1: ( ( ruleRow ) )
            // InternalSQLParser.g:19297:2: ( ruleRow )
            {
            // InternalSQLParser.g:19297:2: ( ruleRow )
            // InternalSQLParser.g:19298:3: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Row__RowValuesAssignment_1"
    // InternalSQLParser.g:19307:1: rule__Row__RowValuesAssignment_1 : ( ruleRowValues ) ;
    public final void rule__Row__RowValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19311:1: ( ( ruleRowValues ) )
            // InternalSQLParser.g:19312:2: ( ruleRowValues )
            {
            // InternalSQLParser.g:19312:2: ( ruleRowValues )
            // InternalSQLParser.g:19313:3: ruleRowValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__RowValuesAssignment_1"


    // $ANTLR start "rule__RowValues__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19322:1: rule__RowValues__EntriesAssignment_1_1_1 : ( ruleRowValue ) ;
    public final void rule__RowValues__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19326:1: ( ( ruleRowValue ) )
            // InternalSQLParser.g:19327:2: ( ruleRowValue )
            {
            // InternalSQLParser.g:19327:2: ( ruleRowValue )
            // InternalSQLParser.g:19328:3: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__RowValue__NullAssignment_1"
    // InternalSQLParser.g:19337:1: rule__RowValue__NullAssignment_1 : ( ( NULL ) ) ;
    public final void rule__RowValue__NullAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19341:1: ( ( ( NULL ) ) )
            // InternalSQLParser.g:19342:2: ( ( NULL ) )
            {
            // InternalSQLParser.g:19342:2: ( ( NULL ) )
            // InternalSQLParser.g:19343:3: ( NULL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            // InternalSQLParser.g:19344:3: ( NULL )
            // InternalSQLParser.g:19345:4: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__NullAssignment_1"


    // $ANTLR start "rule__PivotTable__PfunAssignment_3"
    // InternalSQLParser.g:19356:1: rule__PivotTable__PfunAssignment_3 : ( rulePivotFunctions ) ;
    public final void rule__PivotTable__PfunAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19360:1: ( ( rulePivotFunctions ) )
            // InternalSQLParser.g:19361:2: ( rulePivotFunctions )
            {
            // InternalSQLParser.g:19361:2: ( rulePivotFunctions )
            // InternalSQLParser.g:19362:3: rulePivotFunctions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PfunAssignment_3"


    // $ANTLR start "rule__PivotTable__PforAssignment_4"
    // InternalSQLParser.g:19371:1: rule__PivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__PivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19375:1: ( ( rulePivotForClause ) )
            // InternalSQLParser.g:19376:2: ( rulePivotForClause )
            {
            // InternalSQLParser.g:19376:2: ( rulePivotForClause )
            // InternalSQLParser.g:19377:3: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PforAssignment_4"


    // $ANTLR start "rule__PivotTable__PinAssignment_5"
    // InternalSQLParser.g:19386:1: rule__PivotTable__PinAssignment_5 : ( rulePivotInClause ) ;
    public final void rule__PivotTable__PinAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19390:1: ( ( rulePivotInClause ) )
            // InternalSQLParser.g:19391:2: ( rulePivotInClause )
            {
            // InternalSQLParser.g:19391:2: ( rulePivotInClause )
            // InternalSQLParser.g:19392:3: rulePivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PinAssignment_5"


    // $ANTLR start "rule__PivotFunctions__AbcAssignment"
    // InternalSQLParser.g:19401:1: rule__PivotFunctions__AbcAssignment : ( RULE_ID ) ;
    public final void rule__PivotFunctions__AbcAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19405:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:19406:2: ( RULE_ID )
            {
            // InternalSQLParser.g:19406:2: ( RULE_ID )
            // InternalSQLParser.g:19407:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotFunctions__AbcAssignment"


    // $ANTLR start "rule__PivotInClause__SqAssignment_2_0"
    // InternalSQLParser.g:19416:1: rule__PivotInClause__SqAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__PivotInClause__SqAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19420:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:19421:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:19421:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:19422:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__SqAssignment_2_0"


    // $ANTLR start "rule__PivotInClause__ArgsAssignment_2_1"
    // InternalSQLParser.g:19431:1: rule__PivotInClause__ArgsAssignment_2_1 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__PivotInClause__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19435:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSQLParser.g:19436:2: ( ruleUnpivotInClauseArgs )
            {
            // InternalSQLParser.g:19436:2: ( ruleUnpivotInClauseArgs )
            // InternalSQLParser.g:19437:3: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__ArgsAssignment_2_1"


    // $ANTLR start "rule__PivotInClause__PinanyAssignment_2_2"
    // InternalSQLParser.g:19446:1: rule__PivotInClause__PinanyAssignment_2_2 : ( rulePivotInClauseAny ) ;
    public final void rule__PivotInClause__PinanyAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19450:1: ( ( rulePivotInClauseAny ) )
            // InternalSQLParser.g:19451:2: ( rulePivotInClauseAny )
            {
            // InternalSQLParser.g:19451:2: ( rulePivotInClauseAny )
            // InternalSQLParser.g:19452:3: rulePivotInClauseAny
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__PinanyAssignment_2_2"


    // $ANTLR start "rule__UnpivotTable__PcolsAssignment_3"
    // InternalSQLParser.g:19461:1: rule__UnpivotTable__PcolsAssignment_3 : ( rulePivotColumns ) ;
    public final void rule__UnpivotTable__PcolsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19465:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:19466:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:19466:2: ( rulePivotColumns )
            // InternalSQLParser.g:19467:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PcolsAssignment_3"


    // $ANTLR start "rule__UnpivotTable__PforAssignment_4"
    // InternalSQLParser.g:19476:1: rule__UnpivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__UnpivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19480:1: ( ( rulePivotForClause ) )
            // InternalSQLParser.g:19481:2: ( rulePivotForClause )
            {
            // InternalSQLParser.g:19481:2: ( rulePivotForClause )
            // InternalSQLParser.g:19482:3: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PforAssignment_4"


    // $ANTLR start "rule__UnpivotTable__InopAssignment_5"
    // InternalSQLParser.g:19491:1: rule__UnpivotTable__InopAssignment_5 : ( ruleUnpivotInClause ) ;
    public final void rule__UnpivotTable__InopAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19495:1: ( ( ruleUnpivotInClause ) )
            // InternalSQLParser.g:19496:2: ( ruleUnpivotInClause )
            {
            // InternalSQLParser.g:19496:2: ( ruleUnpivotInClause )
            // InternalSQLParser.g:19497:3: ruleUnpivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__InopAssignment_5"


    // $ANTLR start "rule__UnpivotInClause__OpAssignment_1"
    // InternalSQLParser.g:19506:1: rule__UnpivotInClause__OpAssignment_1 : ( ( IN ) ) ;
    public final void rule__UnpivotInClause__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19510:1: ( ( ( IN ) ) )
            // InternalSQLParser.g:19511:2: ( ( IN ) )
            {
            // InternalSQLParser.g:19511:2: ( ( IN ) )
            // InternalSQLParser.g:19512:3: ( IN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            // InternalSQLParser.g:19513:3: ( IN )
            // InternalSQLParser.g:19514:4: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__OpAssignment_1"


    // $ANTLR start "rule__UnpivotInClause__ArgsAssignment_3"
    // InternalSQLParser.g:19525:1: rule__UnpivotInClause__ArgsAssignment_3 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__UnpivotInClause__ArgsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19529:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSQLParser.g:19530:2: ( ruleUnpivotInClauseArgs )
            {
            // InternalSQLParser.g:19530:2: ( ruleUnpivotInClauseArgs )
            // InternalSQLParser.g:19531:3: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__ArgsAssignment_3"


    // $ANTLR start "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19540:1: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19544:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSQLParser.g:19545:2: ( ruleUnpivotInClauseArg )
            {
            // InternalSQLParser.g:19545:2: ( ruleUnpivotInClauseArg )
            // InternalSQLParser.g:19546:3: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__UnpivotInClauseArg__PcolsAssignment_0"
    // InternalSQLParser.g:19555:1: rule__UnpivotInClauseArg__PcolsAssignment_0 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__PcolsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19559:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:19560:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:19560:2: ( rulePivotColumns )
            // InternalSQLParser.g:19561:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__PcolsAssignment_0"


    // $ANTLR start "rule__UnpivotInClauseArg__CfulsAssignment_1_1"
    // InternalSQLParser.g:19570:1: rule__UnpivotInClauseArg__CfulsAssignment_1_1 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__CfulsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19574:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:19575:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:19575:2: ( rulePivotColumns )
            // InternalSQLParser.g:19576:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__CfulsAssignment_1_1"


    // $ANTLR start "rule__PivotCols__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19585:1: rule__PivotCols__EntriesAssignment_1_1_1 : ( rulePivotCol ) ;
    public final void rule__PivotCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19589:1: ( ( rulePivotCol ) )
            // InternalSQLParser.g:19590:2: ( rulePivotCol )
            {
            // InternalSQLParser.g:19590:2: ( rulePivotCol )
            // InternalSQLParser.g:19591:3: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__PivotCol__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19600:1: rule__PivotCol__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19604:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:19605:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:19605:2: ( ruleDbObjectName )
            // InternalSQLParser.g:19606:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableFull__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19615:1: rule__TableFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__TableFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19619:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:19620:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:19620:2: ( ruleDbObjectName )
            // InternalSQLParser.g:19621:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__DbObjectNameAll__DbnameAssignment_0"
    // InternalSQLParser.g:19630:1: rule__DbObjectNameAll__DbnameAssignment_0 : ( ruleDBID ) ;
    public final void rule__DbObjectNameAll__DbnameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19634:1: ( ( ruleDBID ) )
            // InternalSQLParser.g:19635:2: ( ruleDBID )
            {
            // InternalSQLParser.g:19635:2: ( ruleDBID )
            // InternalSQLParser.g:19636:3: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__DbnameAssignment_0"


    // $ANTLR start "rule__DbObjectName__DbnameAssignment"
    // InternalSQLParser.g:19645:1: rule__DbObjectName__DbnameAssignment : ( ruleDBID ) ;
    public final void rule__DbObjectName__DbnameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19649:1: ( ( ruleDBID ) )
            // InternalSQLParser.g:19650:2: ( ruleDBID )
            {
            // InternalSQLParser.g:19650:2: ( ruleDBID )
            // InternalSQLParser.g:19651:3: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectName__DbnameAssignment"


    // $ANTLR start "rule__OrderByColumns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19660:1: rule__OrderByColumns__EntriesAssignment_1_1_1 : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19664:1: ( ( ruleOrderByColumnFull ) )
            // InternalSQLParser.g:19665:2: ( ruleOrderByColumnFull )
            {
            // InternalSQLParser.g:19665:2: ( ruleOrderByColumnFull )
            // InternalSQLParser.g:19666:3: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderAssignment_0_0"
    // InternalSQLParser.g:19675:1: rule__OrderByColumnFull__ColOrderAssignment_0_0 : ( ruleColumnFull ) ;
    public final void rule__OrderByColumnFull__ColOrderAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19679:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:19680:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:19680:2: ( ruleColumnFull )
            // InternalSQLParser.g:19681:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderAssignment_0_0"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"
    // InternalSQLParser.g:19690:1: rule__OrderByColumnFull__ColOrderIntAssignment_0_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OrderByColumnFull__ColOrderIntAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19694:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:19695:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:19695:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:19696:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAssignment_1"
    // InternalSQLParser.g:19705:1: rule__OrderByColumnFull__DirectionAssignment_1 : ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) ;
    public final void rule__OrderByColumnFull__DirectionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19709:1: ( ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) )
            // InternalSQLParser.g:19710:2: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:19710:2: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            // InternalSQLParser.g:19711:3: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }
            // InternalSQLParser.g:19712:3: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            // InternalSQLParser.g:19712:4: rule__OrderByColumnFull__DirectionAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__DirectionAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAssignment_1"


    // $ANTLR start "rule__GroupByColumns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19720:1: rule__GroupByColumns__EntriesAssignment_1_1_1 : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19724:1: ( ( ruleGroupByColumnFull ) )
            // InternalSQLParser.g:19725:2: ( ruleGroupByColumnFull )
            {
            // InternalSQLParser.g:19725:2: ( ruleGroupByColumnFull )
            // InternalSQLParser.g:19726:3: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__GroupByColumnFull__ColGrByAssignment_0"
    // InternalSQLParser.g:19735:1: rule__GroupByColumnFull__ColGrByAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__GroupByColumnFull__ColGrByAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19739:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:19740:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:19740:2: ( ruleColumnFull )
            // InternalSQLParser.g:19741:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__ColGrByAssignment_0"


    // $ANTLR start "rule__GroupByColumnFull__GbFunctionAssignment_1"
    // InternalSQLParser.g:19750:1: rule__GroupByColumnFull__GbFunctionAssignment_1 : ( ruleOperandFunction ) ;
    public final void rule__GroupByColumnFull__GbFunctionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19754:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:19755:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:19755:2: ( ruleOperandFunction )
            // InternalSQLParser.g:19756:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GbFunctionAssignment_1"


    // $ANTLR start "rule__GroupByColumnFull__GrByIntAssignment_2"
    // InternalSQLParser.g:19765:1: rule__GroupByColumnFull__GrByIntAssignment_2 : ( RULE_UNSIGNED ) ;
    public final void rule__GroupByColumnFull__GrByIntAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19769:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:19770:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:19770:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:19771:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GrByIntAssignment_2"


    // $ANTLR start "rule__FullExpression__EntriesAssignment_1_1"
    // InternalSQLParser.g:19780:1: rule__FullExpression__EntriesAssignment_1_1 : ( ruleExpressionFragmentSecond ) ;
    public final void rule__FullExpression__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19784:1: ( ( ruleExpressionFragmentSecond ) )
            // InternalSQLParser.g:19785:2: ( ruleExpressionFragmentSecond )
            {
            // InternalSQLParser.g:19785:2: ( ruleExpressionFragmentSecond )
            // InternalSQLParser.g:19786:3: ruleExpressionFragmentSecond
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__EntriesAssignment_1_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAssignment_0_0"
    // InternalSQLParser.g:19795:1: rule__ExpressionFragmentSecond__CAssignment_0_0 : ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__CAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19799:1: ( ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) )
            // InternalSQLParser.g:19800:2: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            {
            // InternalSQLParser.g:19800:2: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            // InternalSQLParser.g:19801:3: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }
            // InternalSQLParser.g:19802:3: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            // InternalSQLParser.g:19802:4: rule__ExpressionFragmentSecond__CAlternatives_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAlternatives_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAssignment_0_0"


    // $ANTLR start "rule__ExpressionFragmentSecond__EfragAssignment_0_1"
    // InternalSQLParser.g:19810:1: rule__ExpressionFragmentSecond__EfragAssignment_0_1 : ( ruleExpressionFragment ) ;
    public final void rule__ExpressionFragmentSecond__EfragAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19814:1: ( ( ruleExpressionFragment ) )
            // InternalSQLParser.g:19815:2: ( ruleExpressionFragment )
            {
            // InternalSQLParser.g:19815:2: ( ruleExpressionFragment )
            // InternalSQLParser.g:19816:3: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__EfragAssignment_0_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__NotPrmAssignment_1"
    // InternalSQLParser.g:19825:1: rule__ExpressionFragmentSecond__NotPrmAssignment_1 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragmentSecond__NotPrmAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19829:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:19830:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:19830:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:19831:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__NotPrmAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__ExpgroupAssignment_0"
    // InternalSQLParser.g:19840:1: rule__ExpressionFragment__ExpgroupAssignment_0 : ( ruleExpressionGroup ) ;
    public final void rule__ExpressionFragment__ExpgroupAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19844:1: ( ( ruleExpressionGroup ) )
            // InternalSQLParser.g:19845:2: ( ruleExpressionGroup )
            {
            // InternalSQLParser.g:19845:2: ( ruleExpressionGroup )
            // InternalSQLParser.g:19846:3: ruleExpressionGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpgroupAssignment_0"


    // $ANTLR start "rule__ExpressionFragment__ExpAssignment_1"
    // InternalSQLParser.g:19855:1: rule__ExpressionFragment__ExpAssignment_1 : ( ruleExpression ) ;
    public final void rule__ExpressionFragment__ExpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19859:1: ( ( ruleExpression ) )
            // InternalSQLParser.g:19860:2: ( ruleExpression )
            {
            // InternalSQLParser.g:19860:2: ( ruleExpression )
            // InternalSQLParser.g:19861:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__XexpAssignment_2"
    // InternalSQLParser.g:19870:1: rule__ExpressionFragment__XexpAssignment_2 : ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) ;
    public final void rule__ExpressionFragment__XexpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19874:1: ( ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) )
            // InternalSQLParser.g:19875:2: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            {
            // InternalSQLParser.g:19875:2: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            // InternalSQLParser.g:19876:3: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }
            // InternalSQLParser.g:19877:3: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            // InternalSQLParser.g:19877:4: rule__ExpressionFragment__XexpAlternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__XexpAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAssignment_2"


    // $ANTLR start "rule__ExpressionFragment__NotPrmAssignment_3"
    // InternalSQLParser.g:19885:1: rule__ExpressionFragment__NotPrmAssignment_3 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragment__NotPrmAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19889:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:19890:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:19890:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:19891:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__NotPrmAssignment_3"


    // $ANTLR start "rule__ExpressionFragment__InAssignment_4"
    // InternalSQLParser.g:19900:1: rule__ExpressionFragment__InAssignment_4 : ( ruleInOperator ) ;
    public final void rule__ExpressionFragment__InAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19904:1: ( ( ruleInOperator ) )
            // InternalSQLParser.g:19905:2: ( ruleInOperator )
            {
            // InternalSQLParser.g:19905:2: ( ruleInOperator )
            // InternalSQLParser.g:19906:3: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__InAssignment_4"


    // $ANTLR start "rule__ExpressionFragment__ExistsAssignment_5"
    // InternalSQLParser.g:19915:1: rule__ExpressionFragment__ExistsAssignment_5 : ( ruleExistsOperator ) ;
    public final void rule__ExpressionFragment__ExistsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19919:1: ( ( ruleExistsOperator ) )
            // InternalSQLParser.g:19920:2: ( ruleExistsOperator )
            {
            // InternalSQLParser.g:19920:2: ( ruleExistsOperator )
            // InternalSQLParser.g:19921:3: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExistsAssignment_5"


    // $ANTLR start "rule__ExpressionGroup__IsnotAssignment_1"
    // InternalSQLParser.g:19930:1: rule__ExpressionGroup__IsnotAssignment_1 : ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) ;
    public final void rule__ExpressionGroup__IsnotAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19934:1: ( ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) )
            // InternalSQLParser.g:19935:2: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:19935:2: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            // InternalSQLParser.g:19936:3: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }
            // InternalSQLParser.g:19937:3: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            // InternalSQLParser.g:19937:4: rule__ExpressionGroup__IsnotAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__IsnotAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAssignment_1"


    // $ANTLR start "rule__ExpressionGroup__ExprAssignment_3"
    // InternalSQLParser.g:19945:1: rule__ExpressionGroup__ExprAssignment_3 : ( ruleFullExpression ) ;
    public final void rule__ExpressionGroup__ExprAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19949:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:19950:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:19950:2: ( ruleFullExpression )
            // InternalSQLParser.g:19951:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__ExprAssignment_3"


    // $ANTLR start "rule__XExpression__XfAssignment_2"
    // InternalSQLParser.g:19960:1: rule__XExpression__XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression__XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19964:1: ( ( ruleXFunction ) )
            // InternalSQLParser.g:19965:2: ( ruleXFunction )
            {
            // InternalSQLParser.g:19965:2: ( ruleXFunction )
            // InternalSQLParser.g:19966:3: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__XfAssignment_2"


    // $ANTLR start "rule__XExpression__ColAssignment_4"
    // InternalSQLParser.g:19975:1: rule__XExpression__ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression__ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19979:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:19980:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:19980:2: ( ruleOperandGroup )
            // InternalSQLParser.g:19981:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__ColAssignment_4"


    // $ANTLR start "rule__XExpression__PrmAssignment_5_1"
    // InternalSQLParser.g:19990:1: rule__XExpression__PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression__PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19994:1: ( ( ruleXExpressionParams ) )
            // InternalSQLParser.g:19995:2: ( ruleXExpressionParams )
            {
            // InternalSQLParser.g:19995:2: ( ruleXExpressionParams )
            // InternalSQLParser.g:19996:3: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__PrmAssignment_5_1"


    // $ANTLR start "rule__XExpression___XfAssignment_2"
    // InternalSQLParser.g:20005:1: rule__XExpression___XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression___XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20009:1: ( ( ruleXFunction ) )
            // InternalSQLParser.g:20010:2: ( ruleXFunction )
            {
            // InternalSQLParser.g:20010:2: ( ruleXFunction )
            // InternalSQLParser.g:20011:3: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___XfAssignment_2"


    // $ANTLR start "rule__XExpression___ColAssignment_4"
    // InternalSQLParser.g:20020:1: rule__XExpression___ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression___ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20024:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:20025:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:20025:2: ( ruleOperandGroup )
            // InternalSQLParser.g:20026:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___ColAssignment_4"


    // $ANTLR start "rule__XExpression___PrmAssignment_5_1"
    // InternalSQLParser.g:20035:1: rule__XExpression___PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression___PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20039:1: ( ( ruleXExpressionParams ) )
            // InternalSQLParser.g:20040:2: ( ruleXExpressionParams )
            {
            // InternalSQLParser.g:20040:2: ( ruleXExpressionParams )
            // InternalSQLParser.g:20041:3: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___PrmAssignment_5_1"


    // $ANTLR start "rule__XExpressionParams__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20050:1: rule__XExpressionParams__EntriesAssignment_1_1_1 : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20054:1: ( ( ruleJRParameter ) )
            // InternalSQLParser.g:20055:2: ( ruleJRParameter )
            {
            // InternalSQLParser.g:20055:2: ( ruleJRParameter )
            // InternalSQLParser.g:20056:3: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__JRParameter__JrprmAssignment"
    // InternalSQLParser.g:20065:1: rule__JRParameter__JrprmAssignment : ( RULE_ID ) ;
    public final void rule__JRParameter__JrprmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20069:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:20070:2: ( RULE_ID )
            {
            // InternalSQLParser.g:20070:2: ( RULE_ID )
            // InternalSQLParser.g:20071:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JRParameter__JrprmAssignment"


    // $ANTLR start "rule__Expression__Op1Assignment_0"
    // InternalSQLParser.g:20080:1: rule__Expression__Op1Assignment_0 : ( ruleOperand ) ;
    public final void rule__Expression__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20084:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:20085:2: ( ruleOperand )
            {
            // InternalSQLParser.g:20085:2: ( ruleOperand )
            // InternalSQLParser.g:20086:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Op1Assignment_0"


    // $ANTLR start "rule__Expression__IsnullAssignment_1_0"
    // InternalSQLParser.g:20095:1: rule__Expression__IsnullAssignment_1_0 : ( ruleIsNullValue ) ;
    public final void rule__Expression__IsnullAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20099:1: ( ( ruleIsNullValue ) )
            // InternalSQLParser.g:20100:2: ( ruleIsNullValue )
            {
            // InternalSQLParser.g:20100:2: ( ruleIsNullValue )
            // InternalSQLParser.g:20101:3: ruleIsNullValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__IsnullAssignment_1_0"


    // $ANTLR start "rule__Expression__InAssignment_1_1"
    // InternalSQLParser.g:20110:1: rule__Expression__InAssignment_1_1 : ( ruleInOperator ) ;
    public final void rule__Expression__InAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20114:1: ( ( ruleInOperator ) )
            // InternalSQLParser.g:20115:2: ( ruleInOperator )
            {
            // InternalSQLParser.g:20115:2: ( ruleInOperator )
            // InternalSQLParser.g:20116:3: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__InAssignment_1_1"


    // $ANTLR start "rule__Expression__ExistsAssignment_1_2"
    // InternalSQLParser.g:20125:1: rule__Expression__ExistsAssignment_1_2 : ( ruleExistsOperator ) ;
    public final void rule__Expression__ExistsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20129:1: ( ( ruleExistsOperator ) )
            // InternalSQLParser.g:20130:2: ( ruleExistsOperator )
            {
            // InternalSQLParser.g:20130:2: ( ruleExistsOperator )
            // InternalSQLParser.g:20131:3: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExistsAssignment_1_2"


    // $ANTLR start "rule__Expression__BetweenAssignment_1_3"
    // InternalSQLParser.g:20140:1: rule__Expression__BetweenAssignment_1_3 : ( ruleBetween ) ;
    public final void rule__Expression__BetweenAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20144:1: ( ( ruleBetween ) )
            // InternalSQLParser.g:20145:2: ( ruleBetween )
            {
            // InternalSQLParser.g:20145:2: ( ruleBetween )
            // InternalSQLParser.g:20146:3: ruleBetween
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__BetweenAssignment_1_3"


    // $ANTLR start "rule__Expression__LikeAssignment_1_4"
    // InternalSQLParser.g:20155:1: rule__Expression__LikeAssignment_1_4 : ( ruleLike ) ;
    public final void rule__Expression__LikeAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20159:1: ( ( ruleLike ) )
            // InternalSQLParser.g:20160:2: ( ruleLike )
            {
            // InternalSQLParser.g:20160:2: ( ruleLike )
            // InternalSQLParser.g:20161:3: ruleLike
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__LikeAssignment_1_4"


    // $ANTLR start "rule__Expression__CompAssignment_1_5"
    // InternalSQLParser.g:20170:1: rule__Expression__CompAssignment_1_5 : ( ruleComparison ) ;
    public final void rule__Expression__CompAssignment_1_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20174:1: ( ( ruleComparison ) )
            // InternalSQLParser.g:20175:2: ( ruleComparison )
            {
            // InternalSQLParser.g:20175:2: ( ruleComparison )
            // InternalSQLParser.g:20176:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__CompAssignment_1_5"


    // $ANTLR start "rule__Comparison__OperatorAssignment_0"
    // InternalSQLParser.g:20185:1: rule__Comparison__OperatorAssignment_0 : ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) ;
    public final void rule__Comparison__OperatorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20189:1: ( ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) )
            // InternalSQLParser.g:20190:2: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            {
            // InternalSQLParser.g:20190:2: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            // InternalSQLParser.g:20191:3: ( rule__Comparison__OperatorAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }
            // InternalSQLParser.g:20192:3: ( rule__Comparison__OperatorAlternatives_0_0 )
            // InternalSQLParser.g:20192:4: rule__Comparison__OperatorAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAssignment_0"


    // $ANTLR start "rule__Comparison__SubOperatorAssignment_1"
    // InternalSQLParser.g:20200:1: rule__Comparison__SubOperatorAssignment_1 : ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) ;
    public final void rule__Comparison__SubOperatorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20204:1: ( ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) )
            // InternalSQLParser.g:20205:2: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:20205:2: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            // InternalSQLParser.g:20206:3: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }
            // InternalSQLParser.g:20207:3: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            // InternalSQLParser.g:20207:4: rule__Comparison__SubOperatorAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__SubOperatorAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAssignment_1"


    // $ANTLR start "rule__Comparison__Op2Assignment_2"
    // InternalSQLParser.g:20215:1: rule__Comparison__Op2Assignment_2 : ( ruleOperand ) ;
    public final void rule__Comparison__Op2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20219:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:20220:2: ( ruleOperand )
            {
            // InternalSQLParser.g:20220:2: ( ruleOperand )
            // InternalSQLParser.g:20221:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Op2Assignment_2"


    // $ANTLR start "rule__Like__OpLikeAssignment_0"
    // InternalSQLParser.g:20230:1: rule__Like__OpLikeAssignment_0 : ( ruleLikeValue ) ;
    public final void rule__Like__OpLikeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20234:1: ( ( ruleLikeValue ) )
            // InternalSQLParser.g:20235:2: ( ruleLikeValue )
            {
            // InternalSQLParser.g:20235:2: ( ruleLikeValue )
            // InternalSQLParser.g:20236:3: ruleLikeValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__OpLikeAssignment_0"


    // $ANTLR start "rule__Like__Op2Assignment_1"
    // InternalSQLParser.g:20245:1: rule__Like__Op2Assignment_1 : ( ruleLikeOperand ) ;
    public final void rule__Like__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20249:1: ( ( ruleLikeOperand ) )
            // InternalSQLParser.g:20250:2: ( ruleLikeOperand )
            {
            // InternalSQLParser.g:20250:2: ( ruleLikeOperand )
            // InternalSQLParser.g:20251:3: ruleLikeOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Op2Assignment_1"


    // $ANTLR start "rule__LikeOperand__Op2Assignment_0"
    // InternalSQLParser.g:20260:1: rule__LikeOperand__Op2Assignment_0 : ( ruleStringOperand ) ;
    public final void rule__LikeOperand__Op2Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20264:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:20265:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:20265:2: ( ruleStringOperand )
            // InternalSQLParser.g:20266:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Op2Assignment_0"


    // $ANTLR start "rule__LikeOperand__Fop2Assignment_1"
    // InternalSQLParser.g:20275:1: rule__LikeOperand__Fop2Assignment_1 : ( ruleOperandFunction ) ;
    public final void rule__LikeOperand__Fop2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20279:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:20280:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:20280:2: ( ruleOperandFunction )
            // InternalSQLParser.g:20281:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Fop2Assignment_1"


    // $ANTLR start "rule__LikeOperand__FcastAssignment_2"
    // InternalSQLParser.g:20290:1: rule__LikeOperand__FcastAssignment_2 : ( ruleOpFunctionCast ) ;
    public final void rule__LikeOperand__FcastAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20294:1: ( ( ruleOpFunctionCast ) )
            // InternalSQLParser.g:20295:2: ( ruleOpFunctionCast )
            {
            // InternalSQLParser.g:20295:2: ( ruleOpFunctionCast )
            // InternalSQLParser.g:20296:3: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FcastAssignment_2"


    // $ANTLR start "rule__LikeOperand__FparamAssignment_3"
    // InternalSQLParser.g:20305:1: rule__LikeOperand__FparamAssignment_3 : ( ruleParameterOperand ) ;
    public final void rule__LikeOperand__FparamAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20309:1: ( ( ruleParameterOperand ) )
            // InternalSQLParser.g:20310:2: ( ruleParameterOperand )
            {
            // InternalSQLParser.g:20310:2: ( ruleParameterOperand )
            // InternalSQLParser.g:20311:3: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FparamAssignment_3"


    // $ANTLR start "rule__Between__OpBetweenAssignment_0"
    // InternalSQLParser.g:20320:1: rule__Between__OpBetweenAssignment_0 : ( ruleBetweenValue ) ;
    public final void rule__Between__OpBetweenAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20324:1: ( ( ruleBetweenValue ) )
            // InternalSQLParser.g:20325:2: ( ruleBetweenValue )
            {
            // InternalSQLParser.g:20325:2: ( ruleBetweenValue )
            // InternalSQLParser.g:20326:3: ruleBetweenValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__OpBetweenAssignment_0"


    // $ANTLR start "rule__Between__Op2Assignment_1"
    // InternalSQLParser.g:20335:1: rule__Between__Op2Assignment_1 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20339:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:20340:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:20340:2: ( ruleOperandGroup )
            // InternalSQLParser.g:20341:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op2Assignment_1"


    // $ANTLR start "rule__Between__Op3Assignment_3"
    // InternalSQLParser.g:20350:1: rule__Between__Op3Assignment_3 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op3Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20354:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:20355:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:20355:2: ( ruleOperandGroup )
            // InternalSQLParser.g:20356:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op3Assignment_3"


    // $ANTLR start "rule__InOperator__OpAssignment_1"
    // InternalSQLParser.g:20365:1: rule__InOperator__OpAssignment_1 : ( ruleInValue ) ;
    public final void rule__InOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20369:1: ( ( ruleInValue ) )
            // InternalSQLParser.g:20370:2: ( ruleInValue )
            {
            // InternalSQLParser.g:20370:2: ( ruleInValue )
            // InternalSQLParser.g:20371:3: ruleInValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpAssignment_1"


    // $ANTLR start "rule__InOperator__SubqueryAssignment_2_0"
    // InternalSQLParser.g:20380:1: rule__InOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__InOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20384:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:20385:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:20385:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:20386:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__InOperator__OpListAssignment_2_1"
    // InternalSQLParser.g:20395:1: rule__InOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__InOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20399:1: ( ( ruleOperandListGroup ) )
            // InternalSQLParser.g:20400:2: ( ruleOperandListGroup )
            {
            // InternalSQLParser.g:20400:2: ( ruleOperandListGroup )
            // InternalSQLParser.g:20401:3: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__ExistsOperator__OpAssignment_1"
    // InternalSQLParser.g:20410:1: rule__ExistsOperator__OpAssignment_1 : ( ruleExistsValue ) ;
    public final void rule__ExistsOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20414:1: ( ( ruleExistsValue ) )
            // InternalSQLParser.g:20415:2: ( ruleExistsValue )
            {
            // InternalSQLParser.g:20415:2: ( ruleExistsValue )
            // InternalSQLParser.g:20416:3: ruleExistsValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpAssignment_1"


    // $ANTLR start "rule__ExistsOperator__SubqueryAssignment_2_0"
    // InternalSQLParser.g:20425:1: rule__ExistsOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__ExistsOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20429:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:20430:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:20430:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:20431:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__ExistsOperator__OpListAssignment_2_1"
    // InternalSQLParser.g:20440:1: rule__ExistsOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__ExistsOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20444:1: ( ( ruleOperandListGroup ) )
            // InternalSQLParser.g:20445:2: ( ruleOperandListGroup )
            {
            // InternalSQLParser.g:20445:2: ( ruleOperandListGroup )
            // InternalSQLParser.g:20446:3: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__OperandListGroup__OpGroupAssignment_1"
    // InternalSQLParser.g:20455:1: rule__OperandListGroup__OpGroupAssignment_1 : ( ruleOperandList ) ;
    public final void rule__OperandListGroup__OpGroupAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20459:1: ( ( ruleOperandList ) )
            // InternalSQLParser.g:20460:2: ( ruleOperandList )
            {
            // InternalSQLParser.g:20460:2: ( ruleOperandList )
            // InternalSQLParser.g:20461:3: ruleOperandList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__OpGroupAssignment_1"


    // $ANTLR start "rule__OperandList__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20470:1: rule__OperandList__EntriesAssignment_1_1_1 : ( ruleScalarOperand ) ;
    public final void rule__OperandList__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20474:1: ( ( ruleScalarOperand ) )
            // InternalSQLParser.g:20475:2: ( ruleScalarOperand )
            {
            // InternalSQLParser.g:20475:2: ( ruleScalarOperand )
            // InternalSQLParser.g:20476:3: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Operand__Op1Assignment_0"
    // InternalSQLParser.g:20485:1: rule__Operand__Op1Assignment_0 : ( ruleOperandFragment ) ;
    public final void rule__Operand__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20489:1: ( ( ruleOperandFragment ) )
            // InternalSQLParser.g:20490:2: ( ruleOperandFragment )
            {
            // InternalSQLParser.g:20490:2: ( ruleOperandFragment )
            // InternalSQLParser.g:20491:3: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Op1Assignment_0"


    // $ANTLR start "rule__Operand__RightAssignment_1_1"
    // InternalSQLParser.g:20500:1: rule__Operand__RightAssignment_1_1 : ( ruleOperandFragment ) ;
    public final void rule__Operand__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20504:1: ( ( ruleOperandFragment ) )
            // InternalSQLParser.g:20505:2: ( ruleOperandFragment )
            {
            // InternalSQLParser.g:20505:2: ( ruleOperandFragment )
            // InternalSQLParser.g:20506:3: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__RightAssignment_1_1"


    // $ANTLR start "rule__OperandFragment__ColumnAssignment_0"
    // InternalSQLParser.g:20515:1: rule__OperandFragment__ColumnAssignment_0 : ( ruleColumnOperand ) ;
    public final void rule__OperandFragment__ColumnAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20519:1: ( ( ruleColumnOperand ) )
            // InternalSQLParser.g:20520:2: ( ruleColumnOperand )
            {
            // InternalSQLParser.g:20520:2: ( ruleColumnOperand )
            // InternalSQLParser.g:20521:3: ruleColumnOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__ColumnAssignment_0"


    // $ANTLR start "rule__OperandFragment__XopAssignment_1"
    // InternalSQLParser.g:20530:1: rule__OperandFragment__XopAssignment_1 : ( ruleXOperandFragment ) ;
    public final void rule__OperandFragment__XopAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20534:1: ( ( ruleXOperandFragment ) )
            // InternalSQLParser.g:20535:2: ( ruleXOperandFragment )
            {
            // InternalSQLParser.g:20535:2: ( ruleXOperandFragment )
            // InternalSQLParser.g:20536:3: ruleXOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__XopAssignment_1"


    // $ANTLR start "rule__OperandFragment__SubqAssignment_2"
    // InternalSQLParser.g:20545:1: rule__OperandFragment__SubqAssignment_2 : ( ruleSubQueryOperand ) ;
    public final void rule__OperandFragment__SubqAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20549:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:20550:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:20550:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:20551:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SubqAssignment_2"


    // $ANTLR start "rule__OperandFragment__FcastAssignment_3"
    // InternalSQLParser.g:20560:1: rule__OperandFragment__FcastAssignment_3 : ( ruleOpFunctionCast ) ;
    public final void rule__OperandFragment__FcastAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20564:1: ( ( ruleOpFunctionCast ) )
            // InternalSQLParser.g:20565:2: ( ruleOpFunctionCast )
            {
            // InternalSQLParser.g:20565:2: ( ruleOpFunctionCast )
            // InternalSQLParser.g:20566:3: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FcastAssignment_3"


    // $ANTLR start "rule__OperandFragment__FextAssignment_4"
    // InternalSQLParser.g:20575:1: rule__OperandFragment__FextAssignment_4 : ( ruleFunctionExtract ) ;
    public final void rule__OperandFragment__FextAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20579:1: ( ( ruleFunctionExtract ) )
            // InternalSQLParser.g:20580:2: ( ruleFunctionExtract )
            {
            // InternalSQLParser.g:20580:2: ( ruleFunctionExtract )
            // InternalSQLParser.g:20581:3: ruleFunctionExtract
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FextAssignment_4"


    // $ANTLR start "rule__OperandFragment__FuncAssignment_5"
    // InternalSQLParser.g:20590:1: rule__OperandFragment__FuncAssignment_5 : ( ruleOperandFunction ) ;
    public final void rule__OperandFragment__FuncAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20594:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:20595:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:20595:2: ( ruleOperandFunction )
            // InternalSQLParser.g:20596:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FuncAssignment_5"


    // $ANTLR start "rule__OperandFragment__SqlcaseAssignment_6"
    // InternalSQLParser.g:20605:1: rule__OperandFragment__SqlcaseAssignment_6 : ( ruleSQLCASE ) ;
    public final void rule__OperandFragment__SqlcaseAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20609:1: ( ( ruleSQLCASE ) )
            // InternalSQLParser.g:20610:2: ( ruleSQLCASE )
            {
            // InternalSQLParser.g:20610:2: ( ruleSQLCASE )
            // InternalSQLParser.g:20611:3: ruleSQLCASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SqlcaseAssignment_6"


    // $ANTLR start "rule__OperandFunction__FnameAssignment_1"
    // InternalSQLParser.g:20620:1: rule__OperandFunction__FnameAssignment_1 : ( ruleFNAME ) ;
    public final void rule__OperandFunction__FnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20624:1: ( ( ruleFNAME ) )
            // InternalSQLParser.g:20625:2: ( ruleFNAME )
            {
            // InternalSQLParser.g:20625:2: ( ruleFNAME )
            // InternalSQLParser.g:20626:3: ruleFNAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FnameAssignment_1"


    // $ANTLR start "rule__OperandFunction__StarAssignment_2_0"
    // InternalSQLParser.g:20635:1: rule__OperandFunction__StarAssignment_2_0 : ( RULE_STAR ) ;
    public final void rule__OperandFunction__StarAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20639:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:20640:2: ( RULE_STAR )
            {
            // InternalSQLParser.g:20640:2: ( RULE_STAR )
            // InternalSQLParser.g:20641:3: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__StarAssignment_2_0"


    // $ANTLR start "rule__OperandFunction__ArgsAssignment_2_1"
    // InternalSQLParser.g:20650:1: rule__OperandFunction__ArgsAssignment_2_1 : ( ruleOpFunctionArg ) ;
    public final void rule__OperandFunction__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20654:1: ( ( ruleOpFunctionArg ) )
            // InternalSQLParser.g:20655:2: ( ruleOpFunctionArg )
            {
            // InternalSQLParser.g:20655:2: ( ruleOpFunctionArg )
            // InternalSQLParser.g:20656:3: ruleOpFunctionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__ArgsAssignment_2_1"


    // $ANTLR start "rule__OperandFunction__FanAssignment_4"
    // InternalSQLParser.g:20665:1: rule__OperandFunction__FanAssignment_4 : ( ruleFunctionAnalytical ) ;
    public final void rule__OperandFunction__FanAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20669:1: ( ( ruleFunctionAnalytical ) )
            // InternalSQLParser.g:20670:2: ( ruleFunctionAnalytical )
            {
            // InternalSQLParser.g:20670:2: ( ruleFunctionAnalytical )
            // InternalSQLParser.g:20671:3: ruleFunctionAnalytical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FanAssignment_4"


    // $ANTLR start "rule__FunctionExtract__VAssignment_2"
    // InternalSQLParser.g:20680:1: rule__FunctionExtract__VAssignment_2 : ( ruleEXTRACT_VALUES ) ;
    public final void rule__FunctionExtract__VAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20684:1: ( ( ruleEXTRACT_VALUES ) )
            // InternalSQLParser.g:20685:2: ( ruleEXTRACT_VALUES )
            {
            // InternalSQLParser.g:20685:2: ( ruleEXTRACT_VALUES )
            // InternalSQLParser.g:20686:3: ruleEXTRACT_VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEXTRACT_VALUES();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__VAssignment_2"


    // $ANTLR start "rule__FunctionExtract__OperandAssignment_4"
    // InternalSQLParser.g:20695:1: rule__FunctionExtract__OperandAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__FunctionExtract__OperandAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20699:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:20700:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:20700:2: ( ruleOperandGroup )
            // InternalSQLParser.g:20701:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__OperandAssignment_4"


    // $ANTLR start "rule__FunctionAnalytical__AnClauseAssignment_2"
    // InternalSQLParser.g:20710:1: rule__FunctionAnalytical__AnClauseAssignment_2 : ( ruleAnalyticClause ) ;
    public final void rule__FunctionAnalytical__AnClauseAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20714:1: ( ( ruleAnalyticClause ) )
            // InternalSQLParser.g:20715:2: ( ruleAnalyticClause )
            {
            // InternalSQLParser.g:20715:2: ( ruleAnalyticClause )
            // InternalSQLParser.g:20716:3: ruleAnalyticClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__AnClauseAssignment_2"


    // $ANTLR start "rule__AnalyticClause__AbcAssignment_1"
    // InternalSQLParser.g:20725:1: rule__AnalyticClause__AbcAssignment_1 : ( ruleQueryPartitionClause ) ;
    public final void rule__AnalyticClause__AbcAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20729:1: ( ( ruleQueryPartitionClause ) )
            // InternalSQLParser.g:20730:2: ( ruleQueryPartitionClause )
            {
            // InternalSQLParser.g:20730:2: ( ruleQueryPartitionClause )
            // InternalSQLParser.g:20731:3: ruleQueryPartitionClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__AbcAssignment_1"


    // $ANTLR start "rule__AnalyticClause__ObcAssignment_2_0"
    // InternalSQLParser.g:20740:1: rule__AnalyticClause__ObcAssignment_2_0 : ( ruleOrderByClause ) ;
    public final void rule__AnalyticClause__ObcAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20744:1: ( ( ruleOrderByClause ) )
            // InternalSQLParser.g:20745:2: ( ruleOrderByClause )
            {
            // InternalSQLParser.g:20745:2: ( ruleOrderByClause )
            // InternalSQLParser.g:20746:3: ruleOrderByClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__ObcAssignment_2_0"


    // $ANTLR start "rule__AnalyticClause__WincAssignment_2_1"
    // InternalSQLParser.g:20755:1: rule__AnalyticClause__WincAssignment_2_1 : ( ruleWindowingClause ) ;
    public final void rule__AnalyticClause__WincAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20759:1: ( ( ruleWindowingClause ) )
            // InternalSQLParser.g:20760:2: ( ruleWindowingClause )
            {
            // InternalSQLParser.g:20760:2: ( ruleWindowingClause )
            // InternalSQLParser.g:20761:3: ruleWindowingClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__WincAssignment_2_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoPAssignment_1"
    // InternalSQLParser.g:20770:1: rule__WindowingClauseBetween__WcoPAssignment_1 : ( ruleWindowingClauseOperandPreceding ) ;
    public final void rule__WindowingClauseBetween__WcoPAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20774:1: ( ( ruleWindowingClauseOperandPreceding ) )
            // InternalSQLParser.g:20775:2: ( ruleWindowingClauseOperandPreceding )
            {
            // InternalSQLParser.g:20775:2: ( ruleWindowingClauseOperandPreceding )
            // InternalSQLParser.g:20776:3: ruleWindowingClauseOperandPreceding
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoPAssignment_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoFAssignment_3"
    // InternalSQLParser.g:20785:1: rule__WindowingClauseBetween__WcoFAssignment_3 : ( ruleWindowingClauseOperandFollowing ) ;
    public final void rule__WindowingClauseBetween__WcoFAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20789:1: ( ( ruleWindowingClauseOperandFollowing ) )
            // InternalSQLParser.g:20790:2: ( ruleWindowingClauseOperandFollowing )
            {
            // InternalSQLParser.g:20790:2: ( ruleWindowingClauseOperandFollowing )
            // InternalSQLParser.g:20791:3: ruleWindowingClauseOperandFollowing
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoFAssignment_3"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"
    // InternalSQLParser.g:20800:1: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20804:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:20805:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:20805:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:20806:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"
    // InternalSQLParser.g:20815:1: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20819:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:20820:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:20820:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:20821:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"


    // $ANTLR start "rule__OrderByClause__ArgsAssignment_1"
    // InternalSQLParser.g:20830:1: rule__OrderByClause__ArgsAssignment_1 : ( ruleOrderByClauseArgs ) ;
    public final void rule__OrderByClause__ArgsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20834:1: ( ( ruleOrderByClauseArgs ) )
            // InternalSQLParser.g:20835:2: ( ruleOrderByClauseArgs )
            {
            // InternalSQLParser.g:20835:2: ( ruleOrderByClauseArgs )
            // InternalSQLParser.g:20836:3: ruleOrderByClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__ArgsAssignment_1"


    // $ANTLR start "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20845:1: rule__OrderByClauseArgs__EntriesAssignment_1_1_1 : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20849:1: ( ( ruleOrderByClauseArg ) )
            // InternalSQLParser.g:20850:2: ( ruleOrderByClauseArg )
            {
            // InternalSQLParser.g:20850:2: ( ruleOrderByClauseArg )
            // InternalSQLParser.g:20851:3: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByClauseArg__ColAssignment_0"
    // InternalSQLParser.g:20860:1: rule__OrderByClauseArg__ColAssignment_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__OrderByClauseArg__ColAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20864:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:20865:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:20865:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:20866:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__ColAssignment_0"


    // $ANTLR start "rule__QueryPartitionClause__ArgsAssignment_2_0"
    // InternalSQLParser.g:20875:1: rule__QueryPartitionClause__ArgsAssignment_2_0 : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__ArgsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20879:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSQLParser.g:20880:2: ( ruleAnalyticExprArgs )
            {
            // InternalSQLParser.g:20880:2: ( ruleAnalyticExprArgs )
            // InternalSQLParser.g:20881:3: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__ArgsAssignment_2_0"


    // $ANTLR start "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20890:1: rule__AnalyticExprArgs__EntriesAssignment_1_1_1 : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20894:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:20895:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:20895:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:20896:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__AnalyticExprArg__CeAssignment_0"
    // InternalSQLParser.g:20905:1: rule__AnalyticExprArg__CeAssignment_0 : ( ruleOperand ) ;
    public final void rule__AnalyticExprArg__CeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20909:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:20910:2: ( ruleOperand )
            {
            // InternalSQLParser.g:20910:2: ( ruleOperand )
            // InternalSQLParser.g:20911:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__CeAssignment_0"


    // $ANTLR start "rule__AnalyticExprArg__ColAliasAssignment_1"
    // InternalSQLParser.g:20920:1: rule__AnalyticExprArg__ColAliasAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__AnalyticExprArg__ColAliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20924:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:20925:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:20925:2: ( ruleDbObjectName )
            // InternalSQLParser.g:20926:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__ColAliasAssignment_1"


    // $ANTLR start "rule__OpFunctionArg__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20935:1: rule__OpFunctionArg__EntriesAssignment_1_1_1 : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20939:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSQLParser.g:20940:2: ( ruleOpFunctionArgOperand )
            {
            // InternalSQLParser.g:20940:2: ( ruleOpFunctionArgOperand )
            // InternalSQLParser.g:20941:3: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAssignment"
    // InternalSQLParser.g:20950:1: rule__OpFunctionArgOperand__OpAssignment : ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) ;
    public final void rule__OpFunctionArgOperand__OpAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20954:1: ( ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) )
            // InternalSQLParser.g:20955:2: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            {
            // InternalSQLParser.g:20955:2: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            // InternalSQLParser.g:20956:3: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }
            // InternalSQLParser.g:20957:3: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            // InternalSQLParser.g:20957:4: rule__OpFunctionArgOperand__OpAlternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAlternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAssignment"


    // $ANTLR start "rule__OpFunctionCast__OpAssignment_1"
    // InternalSQLParser.g:20965:1: rule__OpFunctionCast__OpAssignment_1 : ( ruleOperandGroup ) ;
    public final void rule__OpFunctionCast__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20969:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:20970:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:20970:2: ( ruleOperandGroup )
            // InternalSQLParser.g:20971:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__OpAssignment_1"


    // $ANTLR start "rule__OpFunctionCast__TypeAssignment_3"
    // InternalSQLParser.g:20980:1: rule__OpFunctionCast__TypeAssignment_3 : ( RULE_ID ) ;
    public final void rule__OpFunctionCast__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20984:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:20985:2: ( RULE_ID )
            {
            // InternalSQLParser.g:20985:2: ( RULE_ID )
            // InternalSQLParser.g:20986:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__TypeAssignment_3"


    // $ANTLR start "rule__OpFunctionCast__PAssignment_4_1"
    // InternalSQLParser.g:20995:1: rule__OpFunctionCast__PAssignment_4_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__PAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20999:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:21000:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:21000:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:21001:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__PAssignment_4_1"


    // $ANTLR start "rule__OpFunctionCast__P2Assignment_4_2_1"
    // InternalSQLParser.g:21010:1: rule__OpFunctionCast__P2Assignment_4_2_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__P2Assignment_4_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21014:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:21015:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:21015:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:21016:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__P2Assignment_4_2_1"


    // $ANTLR start "rule__XOperandFragment__ParamAssignment_0"
    // InternalSQLParser.g:21025:1: rule__XOperandFragment__ParamAssignment_0 : ( ruleParameterOperand ) ;
    public final void rule__XOperandFragment__ParamAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21029:1: ( ( ruleParameterOperand ) )
            // InternalSQLParser.g:21030:2: ( ruleParameterOperand )
            {
            // InternalSQLParser.g:21030:2: ( ruleParameterOperand )
            // InternalSQLParser.g:21031:3: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ParamAssignment_0"


    // $ANTLR start "rule__XOperandFragment__EparamAssignment_1"
    // InternalSQLParser.g:21040:1: rule__XOperandFragment__EparamAssignment_1 : ( ruleExclamationParameterOperand ) ;
    public final void rule__XOperandFragment__EparamAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21044:1: ( ( ruleExclamationParameterOperand ) )
            // InternalSQLParser.g:21045:2: ( ruleExclamationParameterOperand )
            {
            // InternalSQLParser.g:21045:2: ( ruleExclamationParameterOperand )
            // InternalSQLParser.g:21046:3: ruleExclamationParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__EparamAssignment_1"


    // $ANTLR start "rule__XOperandFragment__ScalarAssignment_2"
    // InternalSQLParser.g:21055:1: rule__XOperandFragment__ScalarAssignment_2 : ( ruleScalarNumberOperand ) ;
    public final void rule__XOperandFragment__ScalarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21059:1: ( ( ruleScalarNumberOperand ) )
            // InternalSQLParser.g:21060:2: ( ruleScalarNumberOperand )
            {
            // InternalSQLParser.g:21060:2: ( ruleScalarNumberOperand )
            // InternalSQLParser.g:21061:3: ruleScalarNumberOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ScalarAssignment_2"


    // $ANTLR start "rule__ParameterOperand__PrmAssignment"
    // InternalSQLParser.g:21070:1: rule__ParameterOperand__PrmAssignment : ( RULE_JRPARAM ) ;
    public final void rule__ParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21074:1: ( ( RULE_JRPARAM ) )
            // InternalSQLParser.g:21075:2: ( RULE_JRPARAM )
            {
            // InternalSQLParser.g:21075:2: ( RULE_JRPARAM )
            // InternalSQLParser.g:21076:3: RULE_JRPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ExclamationParameterOperand__PrmAssignment"
    // InternalSQLParser.g:21085:1: rule__ExclamationParameterOperand__PrmAssignment : ( RULE_JRNPARAM ) ;
    public final void rule__ExclamationParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21089:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:21090:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:21090:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:21091:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclamationParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ColumnOperand__CfullAssignment_0"
    // InternalSQLParser.g:21100:1: rule__ColumnOperand__CfullAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__ColumnOperand__CfullAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21104:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:21105:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:21105:2: ( ruleColumnFull )
            // InternalSQLParser.g:21106:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__CfullAssignment_0"


    // $ANTLR start "rule__ColumnOperand__OraAssignment_1"
    // InternalSQLParser.g:21115:1: rule__ColumnOperand__OraAssignment_1 : ( ( LeftParenthesisPlusSignRightParenthesis ) ) ;
    public final void rule__ColumnOperand__OraAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21119:1: ( ( ( LeftParenthesisPlusSignRightParenthesis ) ) )
            // InternalSQLParser.g:21120:2: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            {
            // InternalSQLParser.g:21120:2: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            // InternalSQLParser.g:21121:3: ( LeftParenthesisPlusSignRightParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            // InternalSQLParser.g:21122:3: ( LeftParenthesisPlusSignRightParenthesis )
            // InternalSQLParser.g:21123:4: LeftParenthesisPlusSignRightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesisPlusSignRightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__OraAssignment_1"


    // $ANTLR start "rule__SubQueryOperand__SelAssignment_2"
    // InternalSQLParser.g:21134:1: rule__SubQueryOperand__SelAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__SubQueryOperand__SelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21138:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:21139:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:21139:2: ( ruleSelectQuery )
            // InternalSQLParser.g:21140:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__SelAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SostrAssignment_0"
    // InternalSQLParser.g:21149:1: rule__ScalarOperand__SostrAssignment_0 : ( ruleStringOperand ) ;
    public final void rule__ScalarOperand__SostrAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21153:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:21154:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:21154:2: ( ruleStringOperand )
            // InternalSQLParser.g:21155:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SostrAssignment_0"


    // $ANTLR start "rule__ScalarOperand__SodblAssignment_1"
    // InternalSQLParser.g:21164:1: rule__ScalarOperand__SodblAssignment_1 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarOperand__SodblAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21168:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSQLParser.g:21169:2: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSQLParser.g:21169:2: ( RULE_SIGNED_DOUBLE )
            // InternalSQLParser.g:21170:3: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodblAssignment_1"


    // $ANTLR start "rule__ScalarOperand__SodateAssignment_2"
    // InternalSQLParser.g:21179:1: rule__ScalarOperand__SodateAssignment_2 : ( RULE_DATE ) ;
    public final void rule__ScalarOperand__SodateAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21183:1: ( ( RULE_DATE ) )
            // InternalSQLParser.g:21184:2: ( RULE_DATE )
            {
            // InternalSQLParser.g:21184:2: ( RULE_DATE )
            // InternalSQLParser.g:21185:3: RULE_DATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }
            match(input,RULE_DATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodateAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SotimeAssignment_3"
    // InternalSQLParser.g:21194:1: rule__ScalarOperand__SotimeAssignment_3 : ( RULE_TIME ) ;
    public final void rule__ScalarOperand__SotimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21198:1: ( ( RULE_TIME ) )
            // InternalSQLParser.g:21199:2: ( RULE_TIME )
            {
            // InternalSQLParser.g:21199:2: ( RULE_TIME )
            // InternalSQLParser.g:21200:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SotimeAssignment_3"


    // $ANTLR start "rule__ScalarOperand__SodtAssignment_4"
    // InternalSQLParser.g:21209:1: rule__ScalarOperand__SodtAssignment_4 : ( RULE_TIMESTAMP ) ;
    public final void rule__ScalarOperand__SodtAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21213:1: ( ( RULE_TIMESTAMP ) )
            // InternalSQLParser.g:21214:2: ( RULE_TIMESTAMP )
            {
            // InternalSQLParser.g:21214:2: ( RULE_TIMESTAMP )
            // InternalSQLParser.g:21215:3: RULE_TIMESTAMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }
            match(input,RULE_TIMESTAMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodtAssignment_4"


    // $ANTLR start "rule__ScalarNumberOperand__SoUIntAssignment_0"
    // InternalSQLParser.g:21224:1: rule__ScalarNumberOperand__SoUIntAssignment_0 : ( RULE_UNSIGNED ) ;
    public final void rule__ScalarNumberOperand__SoUIntAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21228:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:21229:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:21229:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:21230:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SoUIntAssignment_0"


    // $ANTLR start "rule__ScalarNumberOperand__SointAssignment_1"
    // InternalSQLParser.g:21239:1: rule__ScalarNumberOperand__SointAssignment_1 : ( RULE_INT ) ;
    public final void rule__ScalarNumberOperand__SointAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21243:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:21244:2: ( RULE_INT )
            {
            // InternalSQLParser.g:21244:2: ( RULE_INT )
            // InternalSQLParser.g:21245:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SointAssignment_1"


    // $ANTLR start "rule__ScalarNumberOperand__SodblAssignment_2"
    // InternalSQLParser.g:21254:1: rule__ScalarNumberOperand__SodblAssignment_2 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarNumberOperand__SodblAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21258:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSQLParser.g:21259:2: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSQLParser.g:21259:2: ( RULE_SIGNED_DOUBLE )
            // InternalSQLParser.g:21260:3: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SodblAssignment_2"


    // $ANTLR start "rule__ScalarNumberOperand__SostrAssignment_3"
    // InternalSQLParser.g:21269:1: rule__ScalarNumberOperand__SostrAssignment_3 : ( ruleStringOperand ) ;
    public final void rule__ScalarNumberOperand__SostrAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21273:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:21274:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:21274:2: ( ruleStringOperand )
            // InternalSQLParser.g:21275:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SostrAssignment_3"


    // $ANTLR start "rule__SQLCASE__WopAssignment_1_0"
    // InternalSQLParser.g:21284:1: rule__SQLCASE__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SQLCASE__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21288:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21289:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21289:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21290:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WopAssignment_1_0"


    // $ANTLR start "rule__SQLCASE__ExprAssignment_1_1"
    // InternalSQLParser.g:21299:1: rule__SQLCASE__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SQLCASE__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21303:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:21304:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:21304:2: ( ruleFullExpression )
            // InternalSQLParser.g:21305:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__ExprAssignment_1_1"


    // $ANTLR start "rule__SQLCASE__WhenAssignment_2"
    // InternalSQLParser.g:21314:1: rule__SQLCASE__WhenAssignment_2 : ( ruleSQLCaseWhens ) ;
    public final void rule__SQLCASE__WhenAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21318:1: ( ( ruleSQLCaseWhens ) )
            // InternalSQLParser.g:21319:2: ( ruleSQLCaseWhens )
            {
            // InternalSQLParser.g:21319:2: ( ruleSQLCaseWhens )
            // InternalSQLParser.g:21320:3: ruleSQLCaseWhens
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WhenAssignment_2"


    // $ANTLR start "rule__SQLCaseWhens__EntriesAssignment_1_1"
    // InternalSQLParser.g:21329:1: rule__SQLCaseWhens__EntriesAssignment_1_1 : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21333:1: ( ( ruleSqlCaseWhen ) )
            // InternalSQLParser.g:21334:2: ( ruleSqlCaseWhen )
            {
            // InternalSQLParser.g:21334:2: ( ruleSqlCaseWhen )
            // InternalSQLParser.g:21335:3: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__EntriesAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__WopAssignment_1_0"
    // InternalSQLParser.g:21344:1: rule__SqlCaseWhen__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21348:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21349:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21349:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21350:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__WopAssignment_1_0"


    // $ANTLR start "rule__SqlCaseWhen__ExprAssignment_1_1"
    // InternalSQLParser.g:21359:1: rule__SqlCaseWhen__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SqlCaseWhen__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21363:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:21364:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:21364:2: ( ruleFullExpression )
            // InternalSQLParser.g:21365:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__ExprAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__TexpAssignment_3"
    // InternalSQLParser.g:21374:1: rule__SqlCaseWhen__TexpAssignment_3 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__TexpAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21378:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21379:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21379:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21380:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__TexpAssignment_3"


    // $ANTLR start "rule__SqlCaseWhen__EexpAssignment_4_1"
    // InternalSQLParser.g:21389:1: rule__SqlCaseWhen__EexpAssignment_4_1 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__EexpAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21393:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21394:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21394:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21395:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__EexpAssignment_4_1"


    // $ANTLR start "rule__IntegerValue__IntegerAssignment"
    // InternalSQLParser.g:21404:1: rule__IntegerValue__IntegerAssignment : ( RULE_INT ) ;
    public final void rule__IntegerValue__IntegerAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21408:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:21409:2: ( RULE_INT )
            {
            // InternalSQLParser.g:21409:2: ( RULE_INT )
            // InternalSQLParser.g:21410:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueAccess().getIntegerINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueAccess().getIntegerINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValue__IntegerAssignment"


    // $ANTLR start "rule__UnsignedValue__IntegerAssignment"
    // InternalSQLParser.g:21419:1: rule__UnsignedValue__IntegerAssignment : ( RULE_UNSIGNED ) ;
    public final void rule__UnsignedValue__IntegerAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21423:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:21424:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:21424:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:21425:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnsignedValue__IntegerAssignment"

    // $ANTLR start synpred69_InternalSQLParser
    public final void synpred69_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:4056:2: ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) )
        // InternalSQLParser.g:4056:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
        {
        // InternalSQLParser.g:4056:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
        // InternalSQLParser.g:4057:3: ( rule__OperandFragment__ColumnAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
        }
        // InternalSQLParser.g:4058:3: ( rule__OperandFragment__ColumnAssignment_0 )
        // InternalSQLParser.g:4058:4: rule__OperandFragment__ColumnAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__OperandFragment__ColumnAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred69_InternalSQLParser

    // $ANTLR start synpred74_InternalSQLParser
    public final void synpred74_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:4086:2: ( ( ( rule__OperandFragment__FuncAssignment_5 ) ) )
        // InternalSQLParser.g:4086:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
        {
        // InternalSQLParser.g:4086:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
        // InternalSQLParser.g:4087:3: ( rule__OperandFragment__FuncAssignment_5 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
        }
        // InternalSQLParser.g:4088:3: ( rule__OperandFragment__FuncAssignment_5 )
        // InternalSQLParser.g:4088:4: rule__OperandFragment__FuncAssignment_5
        {
        pushFollow(FOLLOW_2);
        rule__OperandFragment__FuncAssignment_5();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred74_InternalSQLParser

    // $ANTLR start synpred99_InternalSQLParser
    public final void synpred99_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:4491:2: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) )
        // InternalSQLParser.g:4491:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        {
        // InternalSQLParser.g:4491:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        // InternalSQLParser.g:4492:3: ( rule__SQLCASE__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
        }
        // InternalSQLParser.g:4493:3: ( rule__SQLCASE__WopAssignment_1_0 )
        // InternalSQLParser.g:4493:4: rule__SQLCASE__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SQLCASE__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred99_InternalSQLParser

    // $ANTLR start synpred100_InternalSQLParser
    public final void synpred100_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:4512:2: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) )
        // InternalSQLParser.g:4512:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        {
        // InternalSQLParser.g:4512:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        // InternalSQLParser.g:4513:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
        }
        // InternalSQLParser.g:4514:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        // InternalSQLParser.g:4514:4: rule__SqlCaseWhen__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SqlCaseWhen__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred100_InternalSQLParser

    // $ANTLR start synpred179_InternalSQLParser
    public final void synpred179_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:9218:3: ( rule__TableOrAlias__TblAliasAssignment_3 )
        // InternalSQLParser.g:9218:3: rule__TableOrAlias__TblAliasAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__TableOrAlias__TblAliasAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred179_InternalSQLParser

    // $ANTLR start synpred180_InternalSQLParser
    public final void synpred180_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:9272:3: ( rule__FromValues__CAssignment_1 )
        // InternalSQLParser.g:9272:3: rule__FromValues__CAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__FromValues__CAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred180_InternalSQLParser

    // $ANTLR start synpred204_InternalSQLParser
    public final void synpred204_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:12386:3: ( rule__FullExpression__Group_1__0 )
        // InternalSQLParser.g:12386:3: rule__FullExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__FullExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred204_InternalSQLParser

    // $ANTLR start synpred205_InternalSQLParser
    public final void synpred205_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:12446:4: ( rule__FullExpression__EntriesAssignment_1_1 )
        // InternalSQLParser.g:12446:4: rule__FullExpression__EntriesAssignment_1_1
        {
        pushFollow(FOLLOW_2);
        rule__FullExpression__EntriesAssignment_1_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred205_InternalSQLParser

    // Delegated rules

    public final boolean synpred99_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA24 dfa24 = new DFA24(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA53 dfa53 = new DFA53(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA126 dfa126 = new DFA126(this);
    static final String dfa_1s = "\14\uffff";
    static final String dfa_2s = "\5\uffff\1\12\6\uffff";
    static final String dfa_3s = "\1\43\1\57\1\uffff\1\43\1\uffff\1\11\3\uffff\1\43\1\uffff\1\66";
    static final String dfa_4s = "\1\u00a3\1\u008a\1\uffff\1\u00a3\1\uffff\1\u00a3\3\uffff\1\u00a3\1\uffff\1\70";
    static final String dfa_5s = "\2\uffff\1\1\1\uffff\1\2\1\uffff\1\3\1\5\1\6\1\uffff\1\4\1\uffff";
    static final String dfa_6s = "\14\uffff}>";
    static final String[] dfa_7s = {
            "\1\4\13\uffff\1\10\14\uffff\1\4\26\uffff\1\4\15\uffff\1\2\24\uffff\1\1\6\uffff\1\6\6\uffff\1\7\5\uffff\1\3\13\uffff\1\4\1\5\1\uffff\3\4\4\uffff\4\4",
            "\1\10\124\uffff\1\7\5\uffff\1\2",
            "",
            "\1\2\13\uffff\1\2\6\uffff\1\4\5\uffff\1\2\26\uffff\1\2\15\uffff\1\2\24\uffff\1\2\6\uffff\1\2\6\uffff\1\2\5\uffff\1\2\13\uffff\2\2\1\uffff\3\2\4\uffff\4\2",
            "",
            "\1\12\10\uffff\1\12\14\uffff\1\4\3\uffff\1\12\2\uffff\1\12\7\uffff\1\12\1\4\1\12\3\uffff\1\12\7\uffff\3\12\2\uffff\1\12\1\uffff\3\12\2\uffff\1\12\3\uffff\1\12\2\uffff\1\12\1\uffff\1\12\1\uffff\1\12\4\uffff\1\12\2\uffff\1\12\2\uffff\1\12\1\4\7\uffff\1\12\2\uffff\1\12\4\uffff\1\12\6\uffff\1\4\5\uffff\1\4\1\uffff\3\4\3\uffff\2\4\1\uffff\1\12\2\4\2\12\1\4\1\12\1\4\1\uffff\4\4\2\uffff\2\12\1\11\3\12\4\uffff\4\12",
            "",
            "",
            "",
            "\1\4\30\uffff\1\4\26\uffff\1\4\66\uffff\1\13\2\uffff\1\12\10\uffff\2\4\1\uffff\3\4\4\uffff\4\4",
            "",
            "\1\4\1\uffff\1\12"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "3700:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );";
        }
    }
    static final String dfa_8s = "\20\uffff";
    static final String dfa_9s = "\1\175\1\20\14\u008d\2\uffff";
    static final String dfa_10s = "\1\175\1\173\14\u0094\2\uffff";
    static final String dfa_11s = "\16\uffff\1\2\1\1";
    static final String dfa_12s = "\20\uffff}>";
    static final String[] dfa_13s = {
            "\1\1",
            "\1\13\5\uffff\1\15\1\5\1\14\1\10\3\uffff\1\12\1\11\32\uffff\1\4\1\7\1\3\26\uffff\1\6\50\uffff\1\2",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "3745:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );";
        }
    }
    static final String dfa_14s = "\17\uffff";
    static final String dfa_15s = "\1\43\1\0\15\uffff";
    static final String dfa_16s = "\1\u00a3\1\0\15\uffff";
    static final String dfa_17s = "\2\uffff\1\1\1\uffff\1\2\5\uffff\1\3\1\4\1\5\1\7\1\6";
    static final String dfa_18s = "\1\uffff\1\0\15\uffff}>";
    static final String[] dfa_19s = {
            "\1\14\30\uffff\1\13\26\uffff\1\15\66\uffff\1\12\13\uffff\2\4\1\uffff\3\4\4\uffff\1\4\2\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4051:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_1 = input.LA(1);

                         
                        int index35_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalSQLParser()) ) {s = 2;}

                        else if ( (synpred74_InternalSQLParser()) ) {s = 14;}

                         
                        input.seek(index35_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\24\uffff";
    static final String dfa_21s = "\1\43\15\0\6\uffff";
    static final String dfa_22s = "\1\u00a3\15\0\6\uffff";
    static final String dfa_23s = "\16\uffff\1\2\4\uffff\1\1";
    static final String dfa_24s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\uffff}>";
    static final String[] dfa_25s = {
            "\1\14\13\uffff\1\16\14\uffff\1\13\26\uffff\1\15\15\uffff\1\16\24\uffff\1\16\6\uffff\1\16\6\uffff\1\16\5\uffff\1\12\13\uffff\1\4\1\5\1\uffff\1\6\1\7\1\10\4\uffff\1\11\1\3\1\2\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "4486:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_1 = input.LA(1);

                         
                        int index52_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA52_2 = input.LA(1);

                         
                        int index52_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA52_3 = input.LA(1);

                         
                        int index52_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA52_4 = input.LA(1);

                         
                        int index52_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA52_5 = input.LA(1);

                         
                        int index52_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA52_6 = input.LA(1);

                         
                        int index52_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA52_7 = input.LA(1);

                         
                        int index52_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA52_8 = input.LA(1);

                         
                        int index52_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA52_9 = input.LA(1);

                         
                        int index52_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA52_10 = input.LA(1);

                         
                        int index52_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA52_11 = input.LA(1);

                         
                        int index52_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA52_12 = input.LA(1);

                         
                        int index52_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA52_13 = input.LA(1);

                         
                        int index52_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index52_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA53 extends DFA {

        public DFA53(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 53;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "4507:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA53_1 = input.LA(1);

                         
                        int index53_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA53_2 = input.LA(1);

                         
                        int index53_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA53_3 = input.LA(1);

                         
                        int index53_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA53_4 = input.LA(1);

                         
                        int index53_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA53_5 = input.LA(1);

                         
                        int index53_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA53_6 = input.LA(1);

                         
                        int index53_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA53_7 = input.LA(1);

                         
                        int index53_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA53_8 = input.LA(1);

                         
                        int index53_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA53_9 = input.LA(1);

                         
                        int index53_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA53_10 = input.LA(1);

                         
                        int index53_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA53_11 = input.LA(1);

                         
                        int index53_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA53_12 = input.LA(1);

                         
                        int index53_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA53_13 = input.LA(1);

                         
                        int index53_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index53_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 53, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\50\uffff";
    static final String dfa_27s = "\1\4\47\uffff";
    static final String dfa_28s = "\1\11\3\0\44\uffff";
    static final String dfa_29s = "\1\u00a3\3\0\44\uffff";
    static final String dfa_30s = "\4\uffff\1\2\42\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\1\1\1\2\44\uffff}>";
    static final String[] dfa_32s = {
            "\1\4\10\uffff\1\4\20\uffff\1\4\2\uffff\1\4\7\uffff\1\4\1\uffff\1\4\3\uffff\1\4\7\uffff\3\4\2\uffff\1\4\1\uffff\3\4\2\uffff\1\4\3\uffff\1\4\2\uffff\3\4\1\uffff\1\4\4\uffff\1\4\2\uffff\1\4\2\uffff\1\4\47\uffff\1\4\3\uffff\2\4\1\uffff\1\4\10\uffff\6\4\4\uffff\1\4\1\3\1\2\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "9218:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_1 = input.LA(1);

                         
                        int index100_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred179_InternalSQLParser()) ) {s = 39;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index100_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA100_2 = input.LA(1);

                         
                        int index100_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred179_InternalSQLParser()) ) {s = 39;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index100_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA100_3 = input.LA(1);

                         
                        int index100_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred179_InternalSQLParser()) ) {s = 39;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index100_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\53\uffff";
    static final String dfa_34s = "\1\2\52\uffff";
    static final String dfa_35s = "\1\11\1\0\51\uffff";
    static final String dfa_36s = "\1\u00a3\1\0\51\uffff";
    static final String dfa_37s = "\2\uffff\1\2\47\uffff\1\1";
    static final String dfa_38s = "\1\uffff\1\0\51\uffff}>";
    static final String[] dfa_39s = {
            "\1\2\10\uffff\1\2\20\uffff\1\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\2\1\uffff\1\2\3\uffff\1\2\7\uffff\3\2\2\uffff\1\2\1\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\3\2\1\uffff\1\2\4\uffff\1\2\2\uffff\1\2\2\uffff\1\2\42\uffff\1\2\4\uffff\1\2\3\uffff\2\2\1\uffff\1\2\10\uffff\6\2\4\uffff\3\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "9272:2: ( rule__FromValues__CAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_1 = input.LA(1);

                         
                        int index101_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_InternalSQLParser()) ) {s = 42;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index101_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\51\uffff";
    static final String dfa_41s = "\1\4\50\uffff";
    static final String dfa_42s = "\1\11\2\uffff\1\0\45\uffff";
    static final String dfa_43s = "\1\u00a3\2\uffff\1\0\45\uffff";
    static final String dfa_44s = "\1\uffff\1\1\2\uffff\1\2\44\uffff";
    static final String dfa_45s = "\3\uffff\1\0\45\uffff}>";
    static final String[] dfa_46s = {
            "\1\4\10\uffff\1\4\20\uffff\1\4\2\uffff\1\4\7\uffff\1\4\1\uffff\1\4\3\uffff\1\4\7\uffff\3\4\2\uffff\1\4\1\uffff\3\4\2\uffff\1\4\3\uffff\1\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\4\uffff\1\4\2\uffff\1\4\2\uffff\1\4\10\uffff\1\4\2\uffff\1\4\4\uffff\1\1\27\uffff\1\1\2\uffff\2\4\1\uffff\1\4\10\uffff\1\4\1\3\4\4\4\uffff\4\4",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = dfa_40;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "12386:2: ( rule__FullExpression__Group_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA125_3 = input.LA(1);

                         
                        int index125_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred204_InternalSQLParser()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index125_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 125, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_47s = "\1\1\50\uffff";
    static final String dfa_48s = "\1\11\21\uffff\1\0\26\uffff";
    static final String dfa_49s = "\1\u00a3\21\uffff\1\0\26\uffff";
    static final String dfa_50s = "\1\uffff\1\2\45\uffff\1\1\1\uffff";
    static final String dfa_51s = "\22\uffff\1\0\26\uffff}>";
    static final String[] dfa_52s = {
            "\1\1\10\uffff\1\1\20\uffff\1\1\2\uffff\1\1\7\uffff\1\1\1\uffff\1\1\3\uffff\1\1\7\uffff\3\1\2\uffff\1\1\1\uffff\3\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\2\uffff\1\1\2\uffff\1\1\10\uffff\1\1\2\uffff\1\1\4\uffff\1\47\27\uffff\1\47\2\uffff\2\1\1\uffff\1\1\10\uffff\1\1\1\22\4\1\4\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = dfa_40;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "()* loopback of 12446:3: ( rule__FullExpression__EntriesAssignment_1_1 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_18 = input.LA(1);

                         
                        int index126_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred205_InternalSQLParser()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index126_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0042100000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000E00000400L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x1000000800000000L,0x0000000000080000L,0x0000000F0FC00400L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000E00000408L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000010000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0088202100000000L,0x0001000110000001L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L,0x0000000800000800L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100004L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000E00000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000402L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0080002000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000400000040000L,0x0000000000008020L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000400000040002L,0x0000000000008020L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0040000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x1000000808000000L,0x0100000000080000L,0x0000000F0FC00400L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x4011000000000000L,0x0000000000020112L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000C000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000008000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x1000800800000000L,0x2040000200080000L,0x0000000F0EC00410L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000E02000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000E00000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x2000004000000200L,0x0000000049001008L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x2000004000000202L,0x0000000049001008L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L,0x0000000000000040L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000400L,0x0000000E00000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L,0x000000010EC00000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000E00000400L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000001400000000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0002000000200000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L,0x0000000000800080L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L,0x0000000000800080L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0040000200000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0E00000063C10000L,0x0800000000040000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x1000000800000000L,0x0000000000080000L,0x0000000F0EC00400L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000202000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000300000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x1000800880000000L,0xF040000280080000L,0x0000000F0ECE0531L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0040000400000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x1000000800000000L,0x0001404000080000L,0x0000000F0EC00400L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000000L,0x000000090EC00000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0040000080000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000080000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000017EC00000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001015200L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000001015200L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x1000000808000000L,0x0000400000080000L,0x0000000F0FC00C00L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x002402000400FDF0L,0x0004120002000040L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000100L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000800L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x1000000A80200000L,0x0000000000080000L,0x0000000F0EC00400L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000120000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0002000000200080L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x8000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x1000000808000000L,0x0000400000080000L,0x0000000F0FC00400L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002800L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x1000800800000000L,0x2040040200080000L,0x0000000F0EC00410L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x1000800800000002L,0x2040040200080000L,0x0000000F0EC00410L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});

}