package org.xtext.example.mydsl_sql.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl_sql.services.SQLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSQLParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "MINUTE_MICROSECOND", "SECOND_MICROSECOND", "HOUR_MICROSECOND", "DAY_MICROSECOND", "AUTO_INCREMENT", "MINUTE_SECOND", "STRAIGHT_JOIN", "HOUR_MINUTE", "HOUR_SECOND", "MICROSECOND", "DAY_MINUTE", "DAY_SECOND", "REFERENCES", "YEAR_MONTH", "BETWEEN_4", "KW_FOLLOWING", "INTERSECT", "MEDIUMINT", "PARTITION", "PRECEDING", "TIMESTAMP", "UNBOUNDED", "VARBINARY", "BETWEEN_2", "NOTEQUAL", "BETWEEN_3", "GREATER_1", "DATETIME", "DAY_HOUR", "DISTINCT", "SIBLINGS", "SMALLINT", "UNSIGNED", "ZEROFILL", "BETWEEN_1", "GREATER", "BETWEEN", "COMMENT", "CURRENT", "DECIMAL", "DEFAULT", "EXCLUDE", "EXTRACT", "FOREIGN", "INCLUDE", "NATURAL", "NUMERIC", "PERCENT", "PRIMARY", "QUARTER", "TINYINT", "UNPIVOT", "VARCHAR", "BIGINT", "BINARY", "CREATE", "DOUBLE", "EXCEPT", "EXISTS", "HAVING", "INSERT", "MINUTE", "OFFSET", "SECOND", "SELECT", "SIGNED", "UNIQUE", "VALUES", "EQUAL", "LESS_1", "NOTIN", "CAST", "CROSS", "FALSE", "FETCH", "FIRST", "FLOAT", "GROUP", "INNER", "LIMIT", "MINUS", "MONTH", "NOW", "NULLS", "ORDER", "OUTER", "PIVOT", "RANGE", "RIGHT", "TABLE", "UNION", "USING", "WHERE", "LESS", "BLOB", "BOOL", "CASE", "CHAR", "DATE", "DESC", "ELSE", "FROM", "FULL", "HOUR", "INTO", "JOIN", "LAST", "LEFT", "LIKE", "NOT_1", "NULL", "ONLY", "OVER", "REAL", "ROWS", "SOME", "TEXT", "THEN", "TIES", "TIME", "TRUE", "WEEK", "WHEN", "WITH", "YEAR", "LeftParenthesisPlusSignRightParenthesis", "ALL", "AND", "ANY", "ASC", "BIT", "DAY", "END", "FOR", "INT", "KEY", "NOT", "ROW", "TOP", "XML", "IN_1", "ExclamationMarkEqualsSign", "X", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AS", "BY", "IN", "IS", "ON", "OR", "CircumflexAccentEqualsSign", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "LessThanSign", "EqualsSign", "GreaterThanSign", "VerticalLine", "RightCurlyBracket", "RULE_JRPARAM", "RULE_JRNPARAM", "RULE_STAR", "RULE_UNSIGNED", "RULE_INT", "RULE_SIGNED_DOUBLE", "RULE_DATE", "RULE_TIME", "RULE_TIMESTAMP", "RULE_STRING_CORE", "RULE_STRING_", "RULE_STRING", "RULE_DBNAME", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int MONTH=85;
    public static final int CREATE=59;
    public static final int BETWEEN=40;
    public static final int LessThanSign=165;
    public static final int MINUS=84;
    public static final int YEAR=128;
    public static final int HOUR_MINUTE=11;
    public static final int PARTITION=22;
    public static final int INCLUDE=48;
    public static final int INNER=82;
    public static final int GreaterThanSign=167;
    public static final int LEFT=111;
    public static final int RULE_ID=183;
    public static final int BIGINT=57;
    public static final int WHERE=96;
    public static final int GreaterThanSignEqualsSign=149;
    public static final int AS=150;
    public static final int RULE_DATE=176;
    public static final int RULE_INT=174;
    public static final int VARCHAR=56;
    public static final int THEN=121;
    public static final int KEY=139;
    public static final int INTO=108;
    public static final int MICROSECOND=13;
    public static final int RULE_DBNAME=182;
    public static final int GROUP=81;
    public static final int ASC=133;
    public static final int STRAIGHT_JOIN=10;
    public static final int BY=151;
    public static final int X=146;
    public static final int OFFSET=66;
    public static final int Solidus=164;
    public static final int RightCurlyBracket=169;
    public static final int TINYINT=54;
    public static final int RULE_SIGNED_DOUBLE=175;
    public static final int FullStop=163;
    public static final int RULE_UNSIGNED=173;
    public static final int GREATER=39;
    public static final int SECOND_MICROSECOND=5;
    public static final int RULE_STRING_=180;
    public static final int PERCENT=51;
    public static final int VARBINARY=26;
    public static final int UNION=94;
    public static final int DESC=103;
    public static final int KW_FOLLOWING=19;
    public static final int RULE_STAR=172;
    public static final int EXTRACT=46;
    public static final int UNIQUE=70;
    public static final int LESS_1=73;
    public static final int FOR=137;
    public static final int RightParenthesis=159;
    public static final int PIVOT=90;
    public static final int CURRENT=42;
    public static final int FULL=106;
    public static final int NOTEQUAL=28;
    public static final int USING=95;
    public static final int NOT=140;
    public static final int LAST=110;
    public static final int NOW=86;
    public static final int CircumflexAccentEqualsSign=156;
    public static final int MINUTE_SECOND=9;
    public static final int END=136;
    public static final int HAVING=63;
    public static final int BINARY=58;
    public static final int RULE_SL_COMMENT=185;
    public static final int SOME=119;
    public static final int FOREIGN=47;
    public static final int SIGNED=69;
    public static final int BETWEEN_2=27;
    public static final int BETWEEN_1=38;
    public static final int OUTER=89;
    public static final int EOF=-1;
    public static final int BETWEEN_4=18;
    public static final int BETWEEN_3=29;
    public static final int EXISTS=62;
    public static final int EQUAL=72;
    public static final int TIME=123;
    public static final int MEDIUMINT=21;
    public static final int INTERSECT=20;
    public static final int BIT=134;
    public static final int WITH=127;
    public static final int OVER=116;
    public static final int DATETIME=31;
    public static final int BOOL=99;
    public static final int FALSE=77;
    public static final int RULE_STRING_CORE=179;
    public static final int RULE_TIMESTAMP=178;
    public static final int DEFAULT=44;
    public static final int LessThanSignGreaterThanSign=148;
    public static final int JOIN=109;
    public static final int TEXT=120;
    public static final int LeftParenthesisPlusSignRightParenthesis=129;
    public static final int TABLE=93;
    public static final int WHEN=126;
    public static final int QUARTER=53;
    public static final int LeftParenthesis=158;
    public static final int ELSE=104;
    public static final int RULE_TIME=177;
    public static final int DAY_MINUTE=14;
    public static final int CAST=75;
    public static final int IN=152;
    public static final int DISTINCT=33;
    public static final int IS=153;
    public static final int CASE=100;
    public static final int TOP=142;
    public static final int VerticalLine=168;
    public static final int PlusSign=160;
    public static final int RULE_ML_COMMENT=184;
    public static final int UNPIVOT=55;
    public static final int RULE_JRPARAM=170;
    public static final int VerticalLineVerticalLine=157;
    public static final int DAY_HOUR=32;
    public static final int UNSIGNED=36;
    public static final int CHAR=101;
    public static final int COMMENT=41;
    public static final int ORDER=88;
    public static final int Comma=161;
    public static final int HyphenMinus=162;
    public static final int RIGHT=92;
    public static final int VALUES=71;
    public static final int DOUBLE=60;
    public static final int LessThanSignEqualsSign=147;
    public static final int FETCH=78;
    public static final int NUMERIC=50;
    public static final int SIBLINGS=34;
    public static final int NOTIN=74;
    public static final int FIRST=79;
    public static final int SELECT=68;
    public static final int PRECEDING=23;
    public static final int RULE_JRNPARAM=171;
    public static final int ExclamationMarkEqualsSign=145;
    public static final int DAY=135;
    public static final int ALL=130;
    public static final int BLOB=98;
    public static final int DECIMAL=43;
    public static final int ONLY=115;
    public static final int FROM=105;
    public static final int AUTO_INCREMENT=8;
    public static final int MINUTE_MICROSECOND=4;
    public static final int UNBOUNDED=25;
    public static final int TIMESTAMP=24;
    public static final int MINUTE=65;
    public static final int HOUR_MICROSECOND=6;
    public static final int NULL=114;
    public static final int DAY_MICROSECOND=7;
    public static final int TRUE=124;
    public static final int EXCEPT=61;
    public static final int DATE=102;
    public static final int ZEROFILL=37;
    public static final int LIKE=112;
    public static final int IN_1=144;
    public static final int EXCLUDE=45;
    public static final int AND=131;
    public static final int REAL=117;
    public static final int YEAR_MONTH=17;
    public static final int INSERT=64;
    public static final int LESS=97;
    public static final int ROW=141;
    public static final int DAY_SECOND=15;
    public static final int RANGE=91;
    public static final int FLOAT=80;
    public static final int TIES=122;
    public static final int HOUR=107;
    public static final int LIMIT=83;
    public static final int RULE_STRING=181;
    public static final int ANY=132;
    public static final int INT=138;
    public static final int NATURAL=49;
    public static final int EqualsSign=166;
    public static final int NOT_1=113;
    public static final int GREATER_1=30;
    public static final int WEEK=125;
    public static final int NULLS=87;
    public static final int ON=154;
    public static final int OR=155;
    public static final int RULE_WS=186;
    public static final int PRIMARY=52;
    public static final int RULE_ANY_OTHER=187;
    public static final int CROSS=76;
    public static final int XML=143;
    public static final int SMALLINT=35;
    public static final int SECOND=67;
    public static final int HOUR_SECOND=12;
    public static final int REFERENCES=16;
    public static final int ROWS=118;

    // delegates
    // delegators


        public InternalSQLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSQLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSQLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSQLParser.g"; }


    	private SQLGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("VerticalLine", "'|'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
    		tokenNameToValue.put("X", "'\\u0024X'");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AS", "'AS'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("IN", "'IN'");
    		tokenNameToValue.put("IS", "'IS'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("CircumflexAccentEqualsSign", "'^='");
    		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
    		tokenNameToValue.put("LeftParenthesisPlusSignRightParenthesis", "'(+)'");
    		tokenNameToValue.put("ALL", "'ALL'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("ANY", "'ANY'");
    		tokenNameToValue.put("ASC", "'ASC'");
    		tokenNameToValue.put("BIT", "'BIT'");
    		tokenNameToValue.put("DAY", "'DAY'");
    		tokenNameToValue.put("END", "'END'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("INT", "'INT'");
    		tokenNameToValue.put("KEY", "'KEY'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("ROW", "'ROW'");
    		tokenNameToValue.put("TOP", "'TOP'");
    		tokenNameToValue.put("XML", "'XML'");
    		tokenNameToValue.put("IN_1", "'{IN'");
    		tokenNameToValue.put("BLOB", "'BLOB'");
    		tokenNameToValue.put("BOOL", "'BOOL'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("CHAR", "'CHAR'");
    		tokenNameToValue.put("DATE", "'DATE'");
    		tokenNameToValue.put("DESC", "'DESC'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("FULL", "'FULL'");
    		tokenNameToValue.put("HOUR", "'HOUR'");
    		tokenNameToValue.put("INTO", "'INTO'");
    		tokenNameToValue.put("JOIN", "'JOIN'");
    		tokenNameToValue.put("LAST", "'LAST'");
    		tokenNameToValue.put("LEFT", "'LEFT'");
    		tokenNameToValue.put("LIKE", "'LIKE'");
    		tokenNameToValue.put("NOT_1", "'NOT\n'");
    		tokenNameToValue.put("NULL", "'NULL'");
    		tokenNameToValue.put("ONLY", "'ONLY'");
    		tokenNameToValue.put("OVER", "'OVER'");
    		tokenNameToValue.put("REAL", "'REAL'");
    		tokenNameToValue.put("ROWS", "'ROWS'");
    		tokenNameToValue.put("SOME", "'SOME'");
    		tokenNameToValue.put("TEXT", "'TEXT'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TIES", "'TIES'");
    		tokenNameToValue.put("TIME", "'TIME'");
    		tokenNameToValue.put("TRUE", "'TRUE'");
    		tokenNameToValue.put("WEEK", "'WEEK'");
    		tokenNameToValue.put("WHEN", "'WHEN'");
    		tokenNameToValue.put("WITH", "'WITH'");
    		tokenNameToValue.put("YEAR", "'YEAR'");
    		tokenNameToValue.put("CAST", "'CAST('");
    		tokenNameToValue.put("CROSS", "'CROSS'");
    		tokenNameToValue.put("FALSE", "'FALSE'");
    		tokenNameToValue.put("FETCH", "'FETCH'");
    		tokenNameToValue.put("FIRST", "'FIRST'");
    		tokenNameToValue.put("FLOAT", "'FLOAT'");
    		tokenNameToValue.put("GROUP", "'GROUP'");
    		tokenNameToValue.put("INNER", "'INNER'");
    		tokenNameToValue.put("LIMIT", "'LIMIT'");
    		tokenNameToValue.put("MINUS", "'MINUS'");
    		tokenNameToValue.put("MONTH", "'MONTH'");
    		tokenNameToValue.put("NOW", "'NOW()'");
    		tokenNameToValue.put("NULLS", "'NULLS'");
    		tokenNameToValue.put("ORDER", "'ORDER'");
    		tokenNameToValue.put("OUTER", "'OUTER'");
    		tokenNameToValue.put("PIVOT", "'PIVOT'");
    		tokenNameToValue.put("RANGE", "'RANGE'");
    		tokenNameToValue.put("RIGHT", "'RIGHT'");
    		tokenNameToValue.put("TABLE", "'TABLE'");
    		tokenNameToValue.put("UNION", "'UNION'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("WHERE", "'WHERE'");
    		tokenNameToValue.put("LESS", "'{LESS'");
    		tokenNameToValue.put("BIGINT", "'BIGINT'");
    		tokenNameToValue.put("BINARY", "'BINARY'");
    		tokenNameToValue.put("CREATE", "'CREATE'");
    		tokenNameToValue.put("DOUBLE", "'DOUBLE'");
    		tokenNameToValue.put("EXCEPT", "'EXCEPT'");
    		tokenNameToValue.put("EXISTS", "'EXISTS'");
    		tokenNameToValue.put("HAVING", "'HAVING'");
    		tokenNameToValue.put("INSERT", "'INSERT'");
    		tokenNameToValue.put("MINUTE", "'MINUTE'");
    		tokenNameToValue.put("OFFSET", "'OFFSET'");
    		tokenNameToValue.put("SECOND", "'SECOND'");
    		tokenNameToValue.put("SELECT", "'SELECT'");
    		tokenNameToValue.put("SIGNED", "'SIGNED'");
    		tokenNameToValue.put("UNIQUE", "'UNIQUE'");
    		tokenNameToValue.put("VALUES", "'VALUES'");
    		tokenNameToValue.put("EQUAL", "'{EQUAL'");
    		tokenNameToValue.put("LESS_1", "'{LESS]'");
    		tokenNameToValue.put("NOTIN", "'{NOTIN'");
    		tokenNameToValue.put("BETWEEN", "'BETWEEN'");
    		tokenNameToValue.put("COMMENT", "'COMMENT'");
    		tokenNameToValue.put("CURRENT", "'CURRENT'");
    		tokenNameToValue.put("DECIMAL", "'DECIMAL'");
    		tokenNameToValue.put("DEFAULT", "'DEFAULT'");
    		tokenNameToValue.put("EXCLUDE", "'EXCLUDE'");
    		tokenNameToValue.put("EXTRACT", "'EXTRACT'");
    		tokenNameToValue.put("FOREIGN", "'FOREIGN'");
    		tokenNameToValue.put("INCLUDE", "'INCLUDE'");
    		tokenNameToValue.put("NATURAL", "'NATURAL'");
    		tokenNameToValue.put("NUMERIC", "'NUMERIC'");
    		tokenNameToValue.put("PERCENT", "'PERCENT'");
    		tokenNameToValue.put("PRIMARY", "'PRIMARY'");
    		tokenNameToValue.put("QUARTER", "'QUARTER'");
    		tokenNameToValue.put("TINYINT", "'TINYINT'");
    		tokenNameToValue.put("UNPIVOT", "'UNPIVOT'");
    		tokenNameToValue.put("VARCHAR", "'VARCHAR'");
    		tokenNameToValue.put("DATETIME", "'DATETIME'");
    		tokenNameToValue.put("DAY_HOUR", "'DAY_HOUR'");
    		tokenNameToValue.put("DISTINCT", "'DISTINCT'");
    		tokenNameToValue.put("SIBLINGS", "'SIBLINGS'");
    		tokenNameToValue.put("SMALLINT", "'SMALLINT'");
    		tokenNameToValue.put("UNSIGNED", "'UNSIGNED'");
    		tokenNameToValue.put("ZEROFILL", "'ZEROFILL'");
    		tokenNameToValue.put("BETWEEN_1", "'{BETWEEN'");
    		tokenNameToValue.put("GREATER", "'{GREATER'");
    		tokenNameToValue.put("KW_FOLLOWING", "'FOLLOWING'");
    		tokenNameToValue.put("INTERSECT", "'INTERSECT'");
    		tokenNameToValue.put("MEDIUMINT", "'MEDIUMINT'");
    		tokenNameToValue.put("PARTITION", "'PARTITION'");
    		tokenNameToValue.put("PRECEDING", "'PRECEDING'");
    		tokenNameToValue.put("TIMESTAMP", "'TIMESTAMP'");
    		tokenNameToValue.put("UNBOUNDED", "'UNBOUNDED'");
    		tokenNameToValue.put("VARBINARY", "'VARBINARY'");
    		tokenNameToValue.put("BETWEEN_2", "'{BETWEEN]'");
    		tokenNameToValue.put("NOTEQUAL", "'{NOTEQUAL'");
    		tokenNameToValue.put("BETWEEN_3", "'{[BETWEEN'");
    		tokenNameToValue.put("GREATER_1", "'{[GREATER'");
    		tokenNameToValue.put("DAY_MINUTE", "'DAY_MINUTE'");
    		tokenNameToValue.put("DAY_SECOND", "'DAY_SECOND'");
    		tokenNameToValue.put("REFERENCES", "'REFERENCES'");
    		tokenNameToValue.put("YEAR_MONTH", "'YEAR_MONTH'");
    		tokenNameToValue.put("BETWEEN_4", "'{[BETWEEN]'");
    		tokenNameToValue.put("HOUR_MINUTE", "'HOUR_MINUTE'");
    		tokenNameToValue.put("HOUR_SECOND", "'HOUR_SECOND'");
    		tokenNameToValue.put("MICROSECOND", "'MICROSECOND'");
    		tokenNameToValue.put("MINUTE_SECOND", "'MINUTE_SECOND'");
    		tokenNameToValue.put("STRAIGHT_JOIN", "'STRAIGHT_JOIN'");
    		tokenNameToValue.put("AUTO_INCREMENT", "'AUTO_INCREMENT'");
    		tokenNameToValue.put("DAY_MICROSECOND", "'DAY_MICROSECOND'");
    		tokenNameToValue.put("HOUR_MICROSECOND", "'HOUR_MICROSECOND'");
    		tokenNameToValue.put("MINUTE_MICROSECOND", "'MINUTE_MICROSECOND'");
    		tokenNameToValue.put("SECOND_MICROSECOND", "'SECOND_MICROSECOND'");
    	}

    	public void setGrammarAccess(SQLGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleModel"
    // InternalSQLParser.g:222:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalSQLParser.g:223:1: ( ruleModel EOF )
            // InternalSQLParser.g:224:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalSQLParser.g:231:1: ruleModel : ( ( rule__Model__SimpleStatementAssignment ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:235:2: ( ( ( rule__Model__SimpleStatementAssignment ) ) )
            // InternalSQLParser.g:236:2: ( ( rule__Model__SimpleStatementAssignment ) )
            {
            // InternalSQLParser.g:236:2: ( ( rule__Model__SimpleStatementAssignment ) )
            // InternalSQLParser.g:237:3: ( rule__Model__SimpleStatementAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getSimpleStatementAssignment()); 
            }
            // InternalSQLParser.g:238:3: ( rule__Model__SimpleStatementAssignment )
            // InternalSQLParser.g:238:4: rule__Model__SimpleStatementAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Model__SimpleStatementAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getSimpleStatementAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleSimpleStatement"
    // InternalSQLParser.g:247:1: entryRuleSimpleStatement : ruleSimpleStatement EOF ;
    public final void entryRuleSimpleStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:248:1: ( ruleSimpleStatement EOF )
            // InternalSQLParser.g:249:1: ruleSimpleStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleStatement"


    // $ANTLR start "ruleSimpleStatement"
    // InternalSQLParser.g:256:1: ruleSimpleStatement : ( ( rule__SimpleStatement__Alternatives ) ) ;
    public final void ruleSimpleStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:260:2: ( ( ( rule__SimpleStatement__Alternatives ) ) )
            // InternalSQLParser.g:261:2: ( ( rule__SimpleStatement__Alternatives ) )
            {
            // InternalSQLParser.g:261:2: ( ( rule__SimpleStatement__Alternatives ) )
            // InternalSQLParser.g:262:3: ( rule__SimpleStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:263:3: ( rule__SimpleStatement__Alternatives )
            // InternalSQLParser.g:263:4: rule__SimpleStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleStatement"


    // $ANTLR start "entryRuleSelectStatement"
    // InternalSQLParser.g:272:1: entryRuleSelectStatement : ruleSelectStatement EOF ;
    public final void entryRuleSelectStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:273:1: ( ruleSelectStatement EOF )
            // InternalSQLParser.g:274:1: ruleSelectStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectStatement"


    // $ANTLR start "ruleSelectStatement"
    // InternalSQLParser.g:281:1: ruleSelectStatement : ( ( rule__SelectStatement__Group__0 ) ) ;
    public final void ruleSelectStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:285:2: ( ( ( rule__SelectStatement__Group__0 ) ) )
            // InternalSQLParser.g:286:2: ( ( rule__SelectStatement__Group__0 ) )
            {
            // InternalSQLParser.g:286:2: ( ( rule__SelectStatement__Group__0 ) )
            // InternalSQLParser.g:287:3: ( rule__SelectStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getGroup()); 
            }
            // InternalSQLParser.g:288:3: ( rule__SelectStatement__Group__0 )
            // InternalSQLParser.g:288:4: rule__SelectStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectStatement"


    // $ANTLR start "entryRuleInsertStatement"
    // InternalSQLParser.g:297:1: entryRuleInsertStatement : ruleInsertStatement EOF ;
    public final void entryRuleInsertStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:298:1: ( ruleInsertStatement EOF )
            // InternalSQLParser.g:299:1: ruleInsertStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInsertStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInsertStatement"


    // $ANTLR start "ruleInsertStatement"
    // InternalSQLParser.g:306:1: ruleInsertStatement : ( ( rule__InsertStatement__Group__0 ) ) ;
    public final void ruleInsertStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:310:2: ( ( ( rule__InsertStatement__Group__0 ) ) )
            // InternalSQLParser.g:311:2: ( ( rule__InsertStatement__Group__0 ) )
            {
            // InternalSQLParser.g:311:2: ( ( rule__InsertStatement__Group__0 ) )
            // InternalSQLParser.g:312:3: ( rule__InsertStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getGroup()); 
            }
            // InternalSQLParser.g:313:3: ( rule__InsertStatement__Group__0 )
            // InternalSQLParser.g:313:4: rule__InsertStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInsertStatement"


    // $ANTLR start "entryRuleCreateStatement"
    // InternalSQLParser.g:322:1: entryRuleCreateStatement : ruleCreateStatement EOF ;
    public final void entryRuleCreateStatement() throws RecognitionException {
        try {
            // InternalSQLParser.g:323:1: ( ruleCreateStatement EOF )
            // InternalSQLParser.g:324:1: ruleCreateStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCreateStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCreateStatement"


    // $ANTLR start "ruleCreateStatement"
    // InternalSQLParser.g:331:1: ruleCreateStatement : ( ( rule__CreateStatement__Group__0 ) ) ;
    public final void ruleCreateStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:335:2: ( ( ( rule__CreateStatement__Group__0 ) ) )
            // InternalSQLParser.g:336:2: ( ( rule__CreateStatement__Group__0 ) )
            {
            // InternalSQLParser.g:336:2: ( ( rule__CreateStatement__Group__0 ) )
            // InternalSQLParser.g:337:3: ( rule__CreateStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementAccess().getGroup()); 
            }
            // InternalSQLParser.g:338:3: ( rule__CreateStatement__Group__0 )
            // InternalSQLParser.g:338:4: rule__CreateStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CreateStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCreateStatement"


    // $ANTLR start "entryRuleCreateTable"
    // InternalSQLParser.g:347:1: entryRuleCreateTable : ruleCreateTable EOF ;
    public final void entryRuleCreateTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:348:1: ( ruleCreateTable EOF )
            // InternalSQLParser.g:349:1: ruleCreateTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCreateTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCreateTable"


    // $ANTLR start "ruleCreateTable"
    // InternalSQLParser.g:356:1: ruleCreateTable : ( ( rule__CreateTable__Group__0 ) ) ;
    public final void ruleCreateTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:360:2: ( ( ( rule__CreateTable__Group__0 ) ) )
            // InternalSQLParser.g:361:2: ( ( rule__CreateTable__Group__0 ) )
            {
            // InternalSQLParser.g:361:2: ( ( rule__CreateTable__Group__0 ) )
            // InternalSQLParser.g:362:3: ( rule__CreateTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:363:3: ( rule__CreateTable__Group__0 )
            // InternalSQLParser.g:363:4: rule__CreateTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCreateTable"


    // $ANTLR start "entryRuleTableElementList"
    // InternalSQLParser.g:372:1: entryRuleTableElementList : ruleTableElementList EOF ;
    public final void entryRuleTableElementList() throws RecognitionException {
        try {
            // InternalSQLParser.g:373:1: ( ruleTableElementList EOF )
            // InternalSQLParser.g:374:1: ruleTableElementList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableElementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableElementList"


    // $ANTLR start "ruleTableElementList"
    // InternalSQLParser.g:381:1: ruleTableElementList : ( ( rule__TableElementList__Group__0 ) ) ;
    public final void ruleTableElementList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:385:2: ( ( ( rule__TableElementList__Group__0 ) ) )
            // InternalSQLParser.g:386:2: ( ( rule__TableElementList__Group__0 ) )
            {
            // InternalSQLParser.g:386:2: ( ( rule__TableElementList__Group__0 ) )
            // InternalSQLParser.g:387:3: ( rule__TableElementList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getGroup()); 
            }
            // InternalSQLParser.g:388:3: ( rule__TableElementList__Group__0 )
            // InternalSQLParser.g:388:4: rule__TableElementList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableElementList"


    // $ANTLR start "entryRuleTableElement"
    // InternalSQLParser.g:397:1: entryRuleTableElement : ruleTableElement EOF ;
    public final void entryRuleTableElement() throws RecognitionException {
        try {
            // InternalSQLParser.g:398:1: ( ruleTableElement EOF )
            // InternalSQLParser.g:399:1: ruleTableElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableElement"


    // $ANTLR start "ruleTableElement"
    // InternalSQLParser.g:406:1: ruleTableElement : ( ( rule__TableElement__Alternatives ) ) ;
    public final void ruleTableElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:410:2: ( ( ( rule__TableElement__Alternatives ) ) )
            // InternalSQLParser.g:411:2: ( ( rule__TableElement__Alternatives ) )
            {
            // InternalSQLParser.g:411:2: ( ( rule__TableElement__Alternatives ) )
            // InternalSQLParser.g:412:3: ( rule__TableElement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:413:3: ( rule__TableElement__Alternatives )
            // InternalSQLParser.g:413:4: rule__TableElement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TableElement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableElement"


    // $ANTLR start "entryRuleColumnDefinition"
    // InternalSQLParser.g:422:1: entryRuleColumnDefinition : ruleColumnDefinition EOF ;
    public final void entryRuleColumnDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:423:1: ( ruleColumnDefinition EOF )
            // InternalSQLParser.g:424:1: ruleColumnDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnDefinition"


    // $ANTLR start "ruleColumnDefinition"
    // InternalSQLParser.g:431:1: ruleColumnDefinition : ( ( rule__ColumnDefinition__Group__0 ) ) ;
    public final void ruleColumnDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:435:2: ( ( ( rule__ColumnDefinition__Group__0 ) ) )
            // InternalSQLParser.g:436:2: ( ( rule__ColumnDefinition__Group__0 ) )
            {
            // InternalSQLParser.g:436:2: ( ( rule__ColumnDefinition__Group__0 ) )
            // InternalSQLParser.g:437:3: ( rule__ColumnDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getGroup()); 
            }
            // InternalSQLParser.g:438:3: ( rule__ColumnDefinition__Group__0 )
            // InternalSQLParser.g:438:4: rule__ColumnDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnDefinition"


    // $ANTLR start "entryRuleTableConstraintDef"
    // InternalSQLParser.g:447:1: entryRuleTableConstraintDef : ruleTableConstraintDef EOF ;
    public final void entryRuleTableConstraintDef() throws RecognitionException {
        try {
            // InternalSQLParser.g:448:1: ( ruleTableConstraintDef EOF )
            // InternalSQLParser.g:449:1: ruleTableConstraintDef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableConstraintDef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableConstraintDef"


    // $ANTLR start "ruleTableConstraintDef"
    // InternalSQLParser.g:456:1: ruleTableConstraintDef : ( ( rule__TableConstraintDef__Alternatives ) ) ;
    public final void ruleTableConstraintDef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:460:2: ( ( ( rule__TableConstraintDef__Alternatives ) ) )
            // InternalSQLParser.g:461:2: ( ( rule__TableConstraintDef__Alternatives ) )
            {
            // InternalSQLParser.g:461:2: ( ( rule__TableConstraintDef__Alternatives ) )
            // InternalSQLParser.g:462:3: ( rule__TableConstraintDef__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:463:3: ( rule__TableConstraintDef__Alternatives )
            // InternalSQLParser.g:463:4: rule__TableConstraintDef__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableConstraintDef"


    // $ANTLR start "entryRuleColumnNameList"
    // InternalSQLParser.g:472:1: entryRuleColumnNameList : ruleColumnNameList EOF ;
    public final void entryRuleColumnNameList() throws RecognitionException {
        try {
            // InternalSQLParser.g:473:1: ( ruleColumnNameList EOF )
            // InternalSQLParser.g:474:1: ruleColumnNameList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnNameList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnNameList"


    // $ANTLR start "ruleColumnNameList"
    // InternalSQLParser.g:481:1: ruleColumnNameList : ( ( rule__ColumnNameList__Group__0 ) ) ;
    public final void ruleColumnNameList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:485:2: ( ( ( rule__ColumnNameList__Group__0 ) ) )
            // InternalSQLParser.g:486:2: ( ( rule__ColumnNameList__Group__0 ) )
            {
            // InternalSQLParser.g:486:2: ( ( rule__ColumnNameList__Group__0 ) )
            // InternalSQLParser.g:487:3: ( rule__ColumnNameList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getGroup()); 
            }
            // InternalSQLParser.g:488:3: ( rule__ColumnNameList__Group__0 )
            // InternalSQLParser.g:488:4: rule__ColumnNameList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnNameList"


    // $ANTLR start "entryRuleFieldDefinition"
    // InternalSQLParser.g:497:1: entryRuleFieldDefinition : ruleFieldDefinition EOF ;
    public final void entryRuleFieldDefinition() throws RecognitionException {
        try {
            // InternalSQLParser.g:498:1: ( ruleFieldDefinition EOF )
            // InternalSQLParser.g:499:1: ruleFieldDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFieldDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldDefinition"


    // $ANTLR start "ruleFieldDefinition"
    // InternalSQLParser.g:506:1: ruleFieldDefinition : ( ( rule__FieldDefinition__Group__0 ) ) ;
    public final void ruleFieldDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:510:2: ( ( ( rule__FieldDefinition__Group__0 ) ) )
            // InternalSQLParser.g:511:2: ( ( rule__FieldDefinition__Group__0 ) )
            {
            // InternalSQLParser.g:511:2: ( ( rule__FieldDefinition__Group__0 ) )
            // InternalSQLParser.g:512:3: ( rule__FieldDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDefinitionAccess().getGroup()); 
            }
            // InternalSQLParser.g:513:3: ( rule__FieldDefinition__Group__0 )
            // InternalSQLParser.g:513:4: rule__FieldDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FieldDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldDefinition"


    // $ANTLR start "entryRuleDataType"
    // InternalSQLParser.g:522:1: entryRuleDataType : ruleDataType EOF ;
    public final void entryRuleDataType() throws RecognitionException {
        try {
            // InternalSQLParser.g:523:1: ( ruleDataType EOF )
            // InternalSQLParser.g:524:1: ruleDataType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDataType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataType"


    // $ANTLR start "ruleDataType"
    // InternalSQLParser.g:531:1: ruleDataType : ( ( rule__DataType__Group__0 ) ) ;
    public final void ruleDataType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:535:2: ( ( ( rule__DataType__Group__0 ) ) )
            // InternalSQLParser.g:536:2: ( ( rule__DataType__Group__0 ) )
            {
            // InternalSQLParser.g:536:2: ( ( rule__DataType__Group__0 ) )
            // InternalSQLParser.g:537:3: ( rule__DataType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getGroup()); 
            }
            // InternalSQLParser.g:538:3: ( rule__DataType__Group__0 )
            // InternalSQLParser.g:538:4: rule__DataType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "entryRuleSimpleType"
    // InternalSQLParser.g:547:1: entryRuleSimpleType : ruleSimpleType EOF ;
    public final void entryRuleSimpleType() throws RecognitionException {
        try {
            // InternalSQLParser.g:548:1: ( ruleSimpleType EOF )
            // InternalSQLParser.g:549:1: ruleSimpleType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSimpleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSimpleType"


    // $ANTLR start "ruleSimpleType"
    // InternalSQLParser.g:556:1: ruleSimpleType : ( ( rule__SimpleType__Alternatives ) ) ;
    public final void ruleSimpleType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:560:2: ( ( ( rule__SimpleType__Alternatives ) ) )
            // InternalSQLParser.g:561:2: ( ( rule__SimpleType__Alternatives ) )
            {
            // InternalSQLParser.g:561:2: ( ( rule__SimpleType__Alternatives ) )
            // InternalSQLParser.g:562:3: ( rule__SimpleType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleTypeAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:563:3: ( rule__SimpleType__Alternatives )
            // InternalSQLParser.g:563:4: rule__SimpleType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SimpleType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSimpleType"


    // $ANTLR start "entryRuleFieldLength"
    // InternalSQLParser.g:572:1: entryRuleFieldLength : ruleFieldLength EOF ;
    public final void entryRuleFieldLength() throws RecognitionException {
        try {
            // InternalSQLParser.g:573:1: ( ruleFieldLength EOF )
            // InternalSQLParser.g:574:1: ruleFieldLength EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFieldLength();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldLength"


    // $ANTLR start "ruleFieldLength"
    // InternalSQLParser.g:581:1: ruleFieldLength : ( ( rule__FieldLength__Group__0 ) ) ;
    public final void ruleFieldLength() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:585:2: ( ( ( rule__FieldLength__Group__0 ) ) )
            // InternalSQLParser.g:586:2: ( ( rule__FieldLength__Group__0 ) )
            {
            // InternalSQLParser.g:586:2: ( ( rule__FieldLength__Group__0 ) )
            // InternalSQLParser.g:587:3: ( rule__FieldLength__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthAccess().getGroup()); 
            }
            // InternalSQLParser.g:588:3: ( rule__FieldLength__Group__0 )
            // InternalSQLParser.g:588:4: rule__FieldLength__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FieldLength__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldLength"


    // $ANTLR start "entryRuleFieldOptions"
    // InternalSQLParser.g:597:1: entryRuleFieldOptions : ruleFieldOptions EOF ;
    public final void entryRuleFieldOptions() throws RecognitionException {
        try {
            // InternalSQLParser.g:598:1: ( ruleFieldOptions EOF )
            // InternalSQLParser.g:599:1: ruleFieldOptions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldOptionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFieldOptions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldOptionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFieldOptions"


    // $ANTLR start "ruleFieldOptions"
    // InternalSQLParser.g:606:1: ruleFieldOptions : ( ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* ) ) ;
    public final void ruleFieldOptions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:610:2: ( ( ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* ) ) )
            // InternalSQLParser.g:611:2: ( ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* ) )
            {
            // InternalSQLParser.g:611:2: ( ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* ) )
            // InternalSQLParser.g:612:3: ( ( rule__FieldOptions__Alternatives ) ) ( ( rule__FieldOptions__Alternatives )* )
            {
            // InternalSQLParser.g:612:3: ( ( rule__FieldOptions__Alternatives ) )
            // InternalSQLParser.g:613:4: ( rule__FieldOptions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldOptionsAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:614:4: ( rule__FieldOptions__Alternatives )
            // InternalSQLParser.g:614:5: rule__FieldOptions__Alternatives
            {
            pushFollow(FOLLOW_3);
            rule__FieldOptions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldOptionsAccess().getAlternatives()); 
            }

            }

            // InternalSQLParser.g:617:3: ( ( rule__FieldOptions__Alternatives )* )
            // InternalSQLParser.g:618:4: ( rule__FieldOptions__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldOptionsAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:619:4: ( rule__FieldOptions__Alternatives )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( ((LA1_0>=UNSIGNED && LA1_0<=ZEROFILL)||LA1_0==SIGNED) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSQLParser.g:619:5: rule__FieldOptions__Alternatives
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__FieldOptions__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldOptionsAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFieldOptions"


    // $ANTLR start "entryRuleColumnAttribute"
    // InternalSQLParser.g:629:1: entryRuleColumnAttribute : ruleColumnAttribute EOF ;
    public final void entryRuleColumnAttribute() throws RecognitionException {
        try {
            // InternalSQLParser.g:630:1: ( ruleColumnAttribute EOF )
            // InternalSQLParser.g:631:1: ruleColumnAttribute EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnAttributeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnAttribute"


    // $ANTLR start "ruleColumnAttribute"
    // InternalSQLParser.g:638:1: ruleColumnAttribute : ( ( rule__ColumnAttribute__Alternatives ) ) ;
    public final void ruleColumnAttribute() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:642:2: ( ( ( rule__ColumnAttribute__Alternatives ) ) )
            // InternalSQLParser.g:643:2: ( ( rule__ColumnAttribute__Alternatives ) )
            {
            // InternalSQLParser.g:643:2: ( ( rule__ColumnAttribute__Alternatives ) )
            // InternalSQLParser.g:644:3: ( rule__ColumnAttribute__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnAttributeAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:645:3: ( rule__ColumnAttribute__Alternatives )
            // InternalSQLParser.g:645:4: rule__ColumnAttribute__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ColumnAttribute__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnAttributeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnAttribute"


    // $ANTLR start "entryRuleNullAttribute"
    // InternalSQLParser.g:654:1: entryRuleNullAttribute : ruleNullAttribute EOF ;
    public final void entryRuleNullAttribute() throws RecognitionException {
        try {
            // InternalSQLParser.g:655:1: ( ruleNullAttribute EOF )
            // InternalSQLParser.g:656:1: ruleNullAttribute EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNullAttribute();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullAttributeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNullAttribute"


    // $ANTLR start "ruleNullAttribute"
    // InternalSQLParser.g:663:1: ruleNullAttribute : ( ( rule__NullAttribute__Group__0 ) ) ;
    public final void ruleNullAttribute() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:667:2: ( ( ( rule__NullAttribute__Group__0 ) ) )
            // InternalSQLParser.g:668:2: ( ( rule__NullAttribute__Group__0 ) )
            {
            // InternalSQLParser.g:668:2: ( ( rule__NullAttribute__Group__0 ) )
            // InternalSQLParser.g:669:3: ( rule__NullAttribute__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullAttributeAccess().getGroup()); 
            }
            // InternalSQLParser.g:670:3: ( rule__NullAttribute__Group__0 )
            // InternalSQLParser.g:670:4: rule__NullAttribute__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NullAttribute__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullAttributeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNullAttribute"


    // $ANTLR start "entryRuleDefaultValue"
    // InternalSQLParser.g:679:1: entryRuleDefaultValue : ruleDefaultValue EOF ;
    public final void entryRuleDefaultValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:680:1: ( ruleDefaultValue EOF )
            // InternalSQLParser.g:681:1: ruleDefaultValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefaultValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDefaultValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefaultValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDefaultValue"


    // $ANTLR start "ruleDefaultValue"
    // InternalSQLParser.g:688:1: ruleDefaultValue : ( ( rule__DefaultValue__Group__0 ) ) ;
    public final void ruleDefaultValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:692:2: ( ( ( rule__DefaultValue__Group__0 ) ) )
            // InternalSQLParser.g:693:2: ( ( rule__DefaultValue__Group__0 ) )
            {
            // InternalSQLParser.g:693:2: ( ( rule__DefaultValue__Group__0 ) )
            // InternalSQLParser.g:694:3: ( rule__DefaultValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefaultValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:695:3: ( rule__DefaultValue__Group__0 )
            // InternalSQLParser.g:695:4: rule__DefaultValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DefaultValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefaultValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDefaultValue"


    // $ANTLR start "entryRuleAutoIncrement"
    // InternalSQLParser.g:704:1: entryRuleAutoIncrement : ruleAutoIncrement EOF ;
    public final void entryRuleAutoIncrement() throws RecognitionException {
        try {
            // InternalSQLParser.g:705:1: ( ruleAutoIncrement EOF )
            // InternalSQLParser.g:706:1: ruleAutoIncrement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAutoIncrementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAutoIncrement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAutoIncrementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAutoIncrement"


    // $ANTLR start "ruleAutoIncrement"
    // InternalSQLParser.g:713:1: ruleAutoIncrement : ( AUTO_INCREMENT ) ;
    public final void ruleAutoIncrement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:717:2: ( ( AUTO_INCREMENT ) )
            // InternalSQLParser.g:718:2: ( AUTO_INCREMENT )
            {
            // InternalSQLParser.g:718:2: ( AUTO_INCREMENT )
            // InternalSQLParser.g:719:3: AUTO_INCREMENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAutoIncrementAccess().getAUTO_INCREMENTKeyword()); 
            }
            match(input,AUTO_INCREMENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAutoIncrementAccess().getAUTO_INCREMENTKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAutoIncrement"


    // $ANTLR start "entryRulePrimaryKey"
    // InternalSQLParser.g:729:1: entryRulePrimaryKey : rulePrimaryKey EOF ;
    public final void entryRulePrimaryKey() throws RecognitionException {
        try {
            // InternalSQLParser.g:730:1: ( rulePrimaryKey EOF )
            // InternalSQLParser.g:731:1: rulePrimaryKey EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePrimaryKey();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryKeyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryKey"


    // $ANTLR start "rulePrimaryKey"
    // InternalSQLParser.g:738:1: rulePrimaryKey : ( ( rule__PrimaryKey__Group__0 ) ) ;
    public final void rulePrimaryKey() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:742:2: ( ( ( rule__PrimaryKey__Group__0 ) ) )
            // InternalSQLParser.g:743:2: ( ( rule__PrimaryKey__Group__0 ) )
            {
            // InternalSQLParser.g:743:2: ( ( rule__PrimaryKey__Group__0 ) )
            // InternalSQLParser.g:744:3: ( rule__PrimaryKey__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryKeyAccess().getGroup()); 
            }
            // InternalSQLParser.g:745:3: ( rule__PrimaryKey__Group__0 )
            // InternalSQLParser.g:745:4: rule__PrimaryKey__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryKey__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryKeyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryKey"


    // $ANTLR start "entryRuleUniqueKey"
    // InternalSQLParser.g:754:1: entryRuleUniqueKey : ruleUniqueKey EOF ;
    public final void entryRuleUniqueKey() throws RecognitionException {
        try {
            // InternalSQLParser.g:755:1: ( ruleUniqueKey EOF )
            // InternalSQLParser.g:756:1: ruleUniqueKey EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUniqueKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUniqueKey();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUniqueKeyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUniqueKey"


    // $ANTLR start "ruleUniqueKey"
    // InternalSQLParser.g:763:1: ruleUniqueKey : ( UNIQUE ) ;
    public final void ruleUniqueKey() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:767:2: ( ( UNIQUE ) )
            // InternalSQLParser.g:768:2: ( UNIQUE )
            {
            // InternalSQLParser.g:768:2: ( UNIQUE )
            // InternalSQLParser.g:769:3: UNIQUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUniqueKeyAccess().getUNIQUEKeyword()); 
            }
            match(input,UNIQUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUniqueKeyAccess().getUNIQUEKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUniqueKey"


    // $ANTLR start "entryRuleComment"
    // InternalSQLParser.g:779:1: entryRuleComment : ruleComment EOF ;
    public final void entryRuleComment() throws RecognitionException {
        try {
            // InternalSQLParser.g:780:1: ( ruleComment EOF )
            // InternalSQLParser.g:781:1: ruleComment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComment"


    // $ANTLR start "ruleComment"
    // InternalSQLParser.g:788:1: ruleComment : ( ( rule__Comment__Group__0 ) ) ;
    public final void ruleComment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:792:2: ( ( ( rule__Comment__Group__0 ) ) )
            // InternalSQLParser.g:793:2: ( ( rule__Comment__Group__0 ) )
            {
            // InternalSQLParser.g:793:2: ( ( rule__Comment__Group__0 ) )
            // InternalSQLParser.g:794:3: ( rule__Comment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentAccess().getGroup()); 
            }
            // InternalSQLParser.g:795:3: ( rule__Comment__Group__0 )
            // InternalSQLParser.g:795:4: rule__Comment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComment"


    // $ANTLR start "entryRuleTableName"
    // InternalSQLParser.g:804:1: entryRuleTableName : ruleTableName EOF ;
    public final void entryRuleTableName() throws RecognitionException {
        try {
            // InternalSQLParser.g:805:1: ( ruleTableName EOF )
            // InternalSQLParser.g:806:1: ruleTableName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableName"


    // $ANTLR start "ruleTableName"
    // InternalSQLParser.g:813:1: ruleTableName : ( RULE_ID ) ;
    public final void ruleTableName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:817:2: ( ( RULE_ID ) )
            // InternalSQLParser.g:818:2: ( RULE_ID )
            {
            // InternalSQLParser.g:818:2: ( RULE_ID )
            // InternalSQLParser.g:819:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableNameAccess().getIDTerminalRuleCall()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableNameAccess().getIDTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableName"


    // $ANTLR start "entryRuleWithQuery"
    // InternalSQLParser.g:829:1: entryRuleWithQuery : ruleWithQuery EOF ;
    public final void entryRuleWithQuery() throws RecognitionException {
        try {
            // InternalSQLParser.g:830:1: ( ruleWithQuery EOF )
            // InternalSQLParser.g:831:1: ruleWithQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithQuery"


    // $ANTLR start "ruleWithQuery"
    // InternalSQLParser.g:838:1: ruleWithQuery : ( ( rule__WithQuery__Group__0 ) ) ;
    public final void ruleWithQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:842:2: ( ( ( rule__WithQuery__Group__0 ) ) )
            // InternalSQLParser.g:843:2: ( ( rule__WithQuery__Group__0 ) )
            {
            // InternalSQLParser.g:843:2: ( ( rule__WithQuery__Group__0 ) )
            // InternalSQLParser.g:844:3: ( rule__WithQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup()); 
            }
            // InternalSQLParser.g:845:3: ( rule__WithQuery__Group__0 )
            // InternalSQLParser.g:845:4: rule__WithQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithQuery"


    // $ANTLR start "entryRuleWithColumns"
    // InternalSQLParser.g:854:1: entryRuleWithColumns : ruleWithColumns EOF ;
    public final void entryRuleWithColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:855:1: ( ruleWithColumns EOF )
            // InternalSQLParser.g:856:1: ruleWithColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithColumns"


    // $ANTLR start "ruleWithColumns"
    // InternalSQLParser.g:863:1: ruleWithColumns : ( ( rule__WithColumns__Group__0 ) ) ;
    public final void ruleWithColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:867:2: ( ( ( rule__WithColumns__Group__0 ) ) )
            // InternalSQLParser.g:868:2: ( ( rule__WithColumns__Group__0 ) )
            {
            // InternalSQLParser.g:868:2: ( ( rule__WithColumns__Group__0 ) )
            // InternalSQLParser.g:869:3: ( rule__WithColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:870:3: ( rule__WithColumns__Group__0 )
            // InternalSQLParser.g:870:4: rule__WithColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithColumns"


    // $ANTLR start "entryRuleFetchFirst"
    // InternalSQLParser.g:879:1: entryRuleFetchFirst : ruleFetchFirst EOF ;
    public final void entryRuleFetchFirst() throws RecognitionException {
        try {
            // InternalSQLParser.g:880:1: ( ruleFetchFirst EOF )
            // InternalSQLParser.g:881:1: ruleFetchFirst EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFetchFirst"


    // $ANTLR start "ruleFetchFirst"
    // InternalSQLParser.g:888:1: ruleFetchFirst : ( ( rule__FetchFirst__Group__0 ) ) ;
    public final void ruleFetchFirst() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:892:2: ( ( ( rule__FetchFirst__Group__0 ) ) )
            // InternalSQLParser.g:893:2: ( ( rule__FetchFirst__Group__0 ) )
            {
            // InternalSQLParser.g:893:2: ( ( rule__FetchFirst__Group__0 ) )
            // InternalSQLParser.g:894:3: ( rule__FetchFirst__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getGroup()); 
            }
            // InternalSQLParser.g:895:3: ( rule__FetchFirst__Group__0 )
            // InternalSQLParser.g:895:4: rule__FetchFirst__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFetchFirst"


    // $ANTLR start "entryRuleOffset"
    // InternalSQLParser.g:904:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // InternalSQLParser.g:905:1: ( ruleOffset EOF )
            // InternalSQLParser.g:906:1: ruleOffset EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // InternalSQLParser.g:913:1: ruleOffset : ( ( rule__Offset__OffsetAssignment ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:917:2: ( ( ( rule__Offset__OffsetAssignment ) ) )
            // InternalSQLParser.g:918:2: ( ( rule__Offset__OffsetAssignment ) )
            {
            // InternalSQLParser.g:918:2: ( ( rule__Offset__OffsetAssignment ) )
            // InternalSQLParser.g:919:3: ( rule__Offset__OffsetAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }
            // InternalSQLParser.g:920:3: ( rule__Offset__OffsetAssignment )
            // InternalSQLParser.g:920:4: rule__Offset__OffsetAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Offset__OffsetAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleLimit"
    // InternalSQLParser.g:929:1: entryRuleLimit : ruleLimit EOF ;
    public final void entryRuleLimit() throws RecognitionException {
        try {
            // InternalSQLParser.g:930:1: ( ruleLimit EOF )
            // InternalSQLParser.g:931:1: ruleLimit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLimit"


    // $ANTLR start "ruleLimit"
    // InternalSQLParser.g:938:1: ruleLimit : ( ( rule__Limit__Alternatives ) ) ;
    public final void ruleLimit() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:942:2: ( ( ( rule__Limit__Alternatives ) ) )
            // InternalSQLParser.g:943:2: ( ( rule__Limit__Alternatives ) )
            {
            // InternalSQLParser.g:943:2: ( ( rule__Limit__Alternatives ) )
            // InternalSQLParser.g:944:3: ( rule__Limit__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:945:3: ( rule__Limit__Alternatives )
            // InternalSQLParser.g:945:4: rule__Limit__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLimit"


    // $ANTLR start "entryRuleSelectQuery"
    // InternalSQLParser.g:954:1: entryRuleSelectQuery : ruleSelectQuery EOF ;
    public final void entryRuleSelectQuery() throws RecognitionException {
        try {
            // InternalSQLParser.g:955:1: ( ruleSelectQuery EOF )
            // InternalSQLParser.g:956:1: ruleSelectQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectQuery"


    // $ANTLR start "ruleSelectQuery"
    // InternalSQLParser.g:963:1: ruleSelectQuery : ( ( rule__SelectQuery__Group__0 ) ) ;
    public final void ruleSelectQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:967:2: ( ( ( rule__SelectQuery__Group__0 ) ) )
            // InternalSQLParser.g:968:2: ( ( rule__SelectQuery__Group__0 ) )
            {
            // InternalSQLParser.g:968:2: ( ( rule__SelectQuery__Group__0 ) )
            // InternalSQLParser.g:969:3: ( rule__SelectQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getGroup()); 
            }
            // InternalSQLParser.g:970:3: ( rule__SelectQuery__Group__0 )
            // InternalSQLParser.g:970:4: rule__SelectQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectQuery"


    // $ANTLR start "entryRuleSelectSubSet"
    // InternalSQLParser.g:979:1: entryRuleSelectSubSet : ruleSelectSubSet EOF ;
    public final void entryRuleSelectSubSet() throws RecognitionException {
        try {
            // InternalSQLParser.g:980:1: ( ruleSelectSubSet EOF )
            // InternalSQLParser.g:981:1: ruleSelectSubSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectSubSet"


    // $ANTLR start "ruleSelectSubSet"
    // InternalSQLParser.g:988:1: ruleSelectSubSet : ( ( rule__SelectSubSet__Group__0 ) ) ;
    public final void ruleSelectSubSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:992:2: ( ( ( rule__SelectSubSet__Group__0 ) ) )
            // InternalSQLParser.g:993:2: ( ( rule__SelectSubSet__Group__0 ) )
            {
            // InternalSQLParser.g:993:2: ( ( rule__SelectSubSet__Group__0 ) )
            // InternalSQLParser.g:994:3: ( rule__SelectSubSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }
            // InternalSQLParser.g:995:3: ( rule__SelectSubSet__Group__0 )
            // InternalSQLParser.g:995:4: rule__SelectSubSet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectSubSet"


    // $ANTLR start "entryRuleSelect"
    // InternalSQLParser.g:1004:1: entryRuleSelect : ruleSelect EOF ;
    public final void entryRuleSelect() throws RecognitionException {
        try {
            // InternalSQLParser.g:1005:1: ( ruleSelect EOF )
            // InternalSQLParser.g:1006:1: ruleSelect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelect"


    // $ANTLR start "ruleSelect"
    // InternalSQLParser.g:1013:1: ruleSelect : ( ( rule__Select__Group__0 ) ) ;
    public final void ruleSelect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1017:2: ( ( ( rule__Select__Group__0 ) ) )
            // InternalSQLParser.g:1018:2: ( ( rule__Select__Group__0 ) )
            {
            // InternalSQLParser.g:1018:2: ( ( rule__Select__Group__0 ) )
            // InternalSQLParser.g:1019:3: ( rule__Select__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup()); 
            }
            // InternalSQLParser.g:1020:3: ( rule__Select__Group__0 )
            // InternalSQLParser.g:1020:4: rule__Select__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelect"


    // $ANTLR start "entryRuleColumns"
    // InternalSQLParser.g:1029:1: entryRuleColumns : ruleColumns EOF ;
    public final void entryRuleColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1030:1: ( ruleColumns EOF )
            // InternalSQLParser.g:1031:1: ruleColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumns"


    // $ANTLR start "ruleColumns"
    // InternalSQLParser.g:1038:1: ruleColumns : ( ( rule__Columns__Group__0 ) ) ;
    public final void ruleColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1042:2: ( ( ( rule__Columns__Group__0 ) ) )
            // InternalSQLParser.g:1043:2: ( ( rule__Columns__Group__0 ) )
            {
            // InternalSQLParser.g:1043:2: ( ( rule__Columns__Group__0 ) )
            // InternalSQLParser.g:1044:3: ( rule__Columns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1045:3: ( rule__Columns__Group__0 )
            // InternalSQLParser.g:1045:4: rule__Columns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumns"


    // $ANTLR start "entryRuleColumnOrAlias"
    // InternalSQLParser.g:1054:1: entryRuleColumnOrAlias : ruleColumnOrAlias EOF ;
    public final void entryRuleColumnOrAlias() throws RecognitionException {
        try {
            // InternalSQLParser.g:1055:1: ( ruleColumnOrAlias EOF )
            // InternalSQLParser.g:1056:1: ruleColumnOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOrAlias"


    // $ANTLR start "ruleColumnOrAlias"
    // InternalSQLParser.g:1063:1: ruleColumnOrAlias : ( ( rule__ColumnOrAlias__Alternatives ) ) ;
    public final void ruleColumnOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1067:2: ( ( ( rule__ColumnOrAlias__Alternatives ) ) )
            // InternalSQLParser.g:1068:2: ( ( rule__ColumnOrAlias__Alternatives ) )
            {
            // InternalSQLParser.g:1068:2: ( ( rule__ColumnOrAlias__Alternatives ) )
            // InternalSQLParser.g:1069:3: ( rule__ColumnOrAlias__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1070:3: ( rule__ColumnOrAlias__Alternatives )
            // InternalSQLParser.g:1070:4: rule__ColumnOrAlias__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOrAlias"


    // $ANTLR start "entryRuleColumnFull"
    // InternalSQLParser.g:1079:1: entryRuleColumnFull : ruleColumnFull EOF ;
    public final void entryRuleColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1080:1: ( ruleColumnFull EOF )
            // InternalSQLParser.g:1081:1: ruleColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnFull"


    // $ANTLR start "ruleColumnFull"
    // InternalSQLParser.g:1088:1: ruleColumnFull : ( ( rule__ColumnFull__Group__0 ) ) ;
    public final void ruleColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1092:2: ( ( ( rule__ColumnFull__Group__0 ) ) )
            // InternalSQLParser.g:1093:2: ( ( rule__ColumnFull__Group__0 ) )
            {
            // InternalSQLParser.g:1093:2: ( ( rule__ColumnFull__Group__0 ) )
            // InternalSQLParser.g:1094:3: ( rule__ColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:1095:3: ( rule__ColumnFull__Group__0 )
            // InternalSQLParser.g:1095:4: rule__ColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnFull"


    // $ANTLR start "entryRuleTables"
    // InternalSQLParser.g:1104:1: entryRuleTables : ruleTables EOF ;
    public final void entryRuleTables() throws RecognitionException {
        try {
            // InternalSQLParser.g:1105:1: ( ruleTables EOF )
            // InternalSQLParser.g:1106:1: ruleTables EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTables"


    // $ANTLR start "ruleTables"
    // InternalSQLParser.g:1113:1: ruleTables : ( ( rule__Tables__Group__0 ) ) ;
    public final void ruleTables() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1117:2: ( ( ( rule__Tables__Group__0 ) ) )
            // InternalSQLParser.g:1118:2: ( ( rule__Tables__Group__0 ) )
            {
            // InternalSQLParser.g:1118:2: ( ( rule__Tables__Group__0 ) )
            // InternalSQLParser.g:1119:3: ( rule__Tables__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1120:3: ( rule__Tables__Group__0 )
            // InternalSQLParser.g:1120:4: rule__Tables__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTables"


    // $ANTLR start "entryRuleFromTable"
    // InternalSQLParser.g:1129:1: entryRuleFromTable : ruleFromTable EOF ;
    public final void entryRuleFromTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:1130:1: ( ruleFromTable EOF )
            // InternalSQLParser.g:1131:1: ruleFromTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTable"


    // $ANTLR start "ruleFromTable"
    // InternalSQLParser.g:1138:1: ruleFromTable : ( ( rule__FromTable__Group__0 ) ) ;
    public final void ruleFromTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1142:2: ( ( ( rule__FromTable__Group__0 ) ) )
            // InternalSQLParser.g:1143:2: ( ( rule__FromTable__Group__0 ) )
            {
            // InternalSQLParser.g:1143:2: ( ( rule__FromTable__Group__0 ) )
            // InternalSQLParser.g:1144:3: ( rule__FromTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:1145:3: ( rule__FromTable__Group__0 )
            // InternalSQLParser.g:1145:4: rule__FromTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTable"


    // $ANTLR start "entryRuleFromTableJoin"
    // InternalSQLParser.g:1154:1: entryRuleFromTableJoin : ruleFromTableJoin EOF ;
    public final void entryRuleFromTableJoin() throws RecognitionException {
        try {
            // InternalSQLParser.g:1155:1: ( ruleFromTableJoin EOF )
            // InternalSQLParser.g:1156:1: ruleFromTableJoin EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTableJoin"


    // $ANTLR start "ruleFromTableJoin"
    // InternalSQLParser.g:1163:1: ruleFromTableJoin : ( ( rule__FromTableJoin__Group__0 ) ) ;
    public final void ruleFromTableJoin() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1167:2: ( ( ( rule__FromTableJoin__Group__0 ) ) )
            // InternalSQLParser.g:1168:2: ( ( rule__FromTableJoin__Group__0 ) )
            {
            // InternalSQLParser.g:1168:2: ( ( rule__FromTableJoin__Group__0 ) )
            // InternalSQLParser.g:1169:3: ( rule__FromTableJoin__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }
            // InternalSQLParser.g:1170:3: ( rule__FromTableJoin__Group__0 )
            // InternalSQLParser.g:1170:4: rule__FromTableJoin__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTableJoin"


    // $ANTLR start "entryRuleJoinCondition"
    // InternalSQLParser.g:1179:1: entryRuleJoinCondition : ruleJoinCondition EOF ;
    public final void entryRuleJoinCondition() throws RecognitionException {
        try {
            // InternalSQLParser.g:1180:1: ( ruleJoinCondition EOF )
            // InternalSQLParser.g:1181:1: ruleJoinCondition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinCondition"


    // $ANTLR start "ruleJoinCondition"
    // InternalSQLParser.g:1188:1: ruleJoinCondition : ( ( rule__JoinCondition__Group__0 ) ) ;
    public final void ruleJoinCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1192:2: ( ( ( rule__JoinCondition__Group__0 ) ) )
            // InternalSQLParser.g:1193:2: ( ( rule__JoinCondition__Group__0 ) )
            {
            // InternalSQLParser.g:1193:2: ( ( rule__JoinCondition__Group__0 ) )
            // InternalSQLParser.g:1194:3: ( rule__JoinCondition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1195:3: ( rule__JoinCondition__Group__0 )
            // InternalSQLParser.g:1195:4: rule__JoinCondition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinCondition"


    // $ANTLR start "entryRuleUsingCols"
    // InternalSQLParser.g:1204:1: entryRuleUsingCols : ruleUsingCols EOF ;
    public final void entryRuleUsingCols() throws RecognitionException {
        try {
            // InternalSQLParser.g:1205:1: ( ruleUsingCols EOF )
            // InternalSQLParser.g:1206:1: ruleUsingCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUsingCols"


    // $ANTLR start "ruleUsingCols"
    // InternalSQLParser.g:1213:1: ruleUsingCols : ( ( rule__UsingCols__Group__0 ) ) ;
    public final void ruleUsingCols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1217:2: ( ( ( rule__UsingCols__Group__0 ) ) )
            // InternalSQLParser.g:1218:2: ( ( rule__UsingCols__Group__0 ) )
            {
            // InternalSQLParser.g:1218:2: ( ( rule__UsingCols__Group__0 ) )
            // InternalSQLParser.g:1219:3: ( rule__UsingCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1220:3: ( rule__UsingCols__Group__0 )
            // InternalSQLParser.g:1220:4: rule__UsingCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUsingCols"


    // $ANTLR start "entryRuleTableOrAlias"
    // InternalSQLParser.g:1229:1: entryRuleTableOrAlias : ruleTableOrAlias EOF ;
    public final void entryRuleTableOrAlias() throws RecognitionException {
        try {
            // InternalSQLParser.g:1230:1: ( ruleTableOrAlias EOF )
            // InternalSQLParser.g:1231:1: ruleTableOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableOrAlias"


    // $ANTLR start "ruleTableOrAlias"
    // InternalSQLParser.g:1238:1: ruleTableOrAlias : ( ( rule__TableOrAlias__Group__0 ) ) ;
    public final void ruleTableOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1242:2: ( ( ( rule__TableOrAlias__Group__0 ) ) )
            // InternalSQLParser.g:1243:2: ( ( rule__TableOrAlias__Group__0 ) )
            {
            // InternalSQLParser.g:1243:2: ( ( rule__TableOrAlias__Group__0 ) )
            // InternalSQLParser.g:1244:3: ( rule__TableOrAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }
            // InternalSQLParser.g:1245:3: ( rule__TableOrAlias__Group__0 )
            // InternalSQLParser.g:1245:4: rule__TableOrAlias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableOrAlias"


    // $ANTLR start "entryRuleFromValues"
    // InternalSQLParser.g:1254:1: entryRuleFromValues : ruleFromValues EOF ;
    public final void entryRuleFromValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:1255:1: ( ruleFromValues EOF )
            // InternalSQLParser.g:1256:1: ruleFromValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValues"


    // $ANTLR start "ruleFromValues"
    // InternalSQLParser.g:1263:1: ruleFromValues : ( ( rule__FromValues__Group__0 ) ) ;
    public final void ruleFromValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1267:2: ( ( ( rule__FromValues__Group__0 ) ) )
            // InternalSQLParser.g:1268:2: ( ( rule__FromValues__Group__0 ) )
            {
            // InternalSQLParser.g:1268:2: ( ( rule__FromValues__Group__0 ) )
            // InternalSQLParser.g:1269:3: ( rule__FromValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1270:3: ( rule__FromValues__Group__0 )
            // InternalSQLParser.g:1270:4: rule__FromValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValues"


    // $ANTLR start "entryRuleFromValuesColumns"
    // InternalSQLParser.g:1279:1: entryRuleFromValuesColumns : ruleFromValuesColumns EOF ;
    public final void entryRuleFromValuesColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1280:1: ( ruleFromValuesColumns EOF )
            // InternalSQLParser.g:1281:1: ruleFromValuesColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumns"


    // $ANTLR start "ruleFromValuesColumns"
    // InternalSQLParser.g:1288:1: ruleFromValuesColumns : ( ( rule__FromValuesColumns__Group__0 ) ) ;
    public final void ruleFromValuesColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1292:2: ( ( ( rule__FromValuesColumns__Group__0 ) ) )
            // InternalSQLParser.g:1293:2: ( ( rule__FromValuesColumns__Group__0 ) )
            {
            // InternalSQLParser.g:1293:2: ( ( rule__FromValuesColumns__Group__0 ) )
            // InternalSQLParser.g:1294:3: ( rule__FromValuesColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1295:3: ( rule__FromValuesColumns__Group__0 )
            // InternalSQLParser.g:1295:4: rule__FromValuesColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumns"


    // $ANTLR start "entryRuleFromValuesColumnNames"
    // InternalSQLParser.g:1304:1: entryRuleFromValuesColumnNames : ruleFromValuesColumnNames EOF ;
    public final void entryRuleFromValuesColumnNames() throws RecognitionException {
        try {
            // InternalSQLParser.g:1305:1: ( ruleFromValuesColumnNames EOF )
            // InternalSQLParser.g:1306:1: ruleFromValuesColumnNames EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumnNames"


    // $ANTLR start "ruleFromValuesColumnNames"
    // InternalSQLParser.g:1313:1: ruleFromValuesColumnNames : ( ( rule__FromValuesColumnNames__Group__0 ) ) ;
    public final void ruleFromValuesColumnNames() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1317:2: ( ( ( rule__FromValuesColumnNames__Group__0 ) ) )
            // InternalSQLParser.g:1318:2: ( ( rule__FromValuesColumnNames__Group__0 ) )
            {
            // InternalSQLParser.g:1318:2: ( ( rule__FromValuesColumnNames__Group__0 ) )
            // InternalSQLParser.g:1319:3: ( rule__FromValuesColumnNames__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1320:3: ( rule__FromValuesColumnNames__Group__0 )
            // InternalSQLParser.g:1320:4: rule__FromValuesColumnNames__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumnNames"


    // $ANTLR start "entryRuleColumnName"
    // InternalSQLParser.g:1329:1: entryRuleColumnName : ruleColumnName EOF ;
    public final void entryRuleColumnName() throws RecognitionException {
        try {
            // InternalSQLParser.g:1330:1: ( ruleColumnName EOF )
            // InternalSQLParser.g:1331:1: ruleColumnName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnName"


    // $ANTLR start "ruleColumnName"
    // InternalSQLParser.g:1338:1: ruleColumnName : ( ( rule__ColumnName__ColNameAssignment ) ) ;
    public final void ruleColumnName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1342:2: ( ( ( rule__ColumnName__ColNameAssignment ) ) )
            // InternalSQLParser.g:1343:2: ( ( rule__ColumnName__ColNameAssignment ) )
            {
            // InternalSQLParser.g:1343:2: ( ( rule__ColumnName__ColNameAssignment ) )
            // InternalSQLParser.g:1344:3: ( rule__ColumnName__ColNameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }
            // InternalSQLParser.g:1345:3: ( rule__ColumnName__ColNameAssignment )
            // InternalSQLParser.g:1345:4: rule__ColumnName__ColNameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ColumnName__ColNameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnName"


    // $ANTLR start "entryRuleValues"
    // InternalSQLParser.g:1354:1: entryRuleValues : ruleValues EOF ;
    public final void entryRuleValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:1355:1: ( ruleValues EOF )
            // InternalSQLParser.g:1356:1: ruleValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValues"


    // $ANTLR start "ruleValues"
    // InternalSQLParser.g:1363:1: ruleValues : ( ( rule__Values__Group__0 ) ) ;
    public final void ruleValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1367:2: ( ( ( rule__Values__Group__0 ) ) )
            // InternalSQLParser.g:1368:2: ( ( rule__Values__Group__0 ) )
            {
            // InternalSQLParser.g:1368:2: ( ( rule__Values__Group__0 ) )
            // InternalSQLParser.g:1369:3: ( rule__Values__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1370:3: ( rule__Values__Group__0 )
            // InternalSQLParser.g:1370:4: rule__Values__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValues"


    // $ANTLR start "entryRuleRows"
    // InternalSQLParser.g:1379:1: entryRuleRows : ruleRows EOF ;
    public final void entryRuleRows() throws RecognitionException {
        try {
            // InternalSQLParser.g:1380:1: ( ruleRows EOF )
            // InternalSQLParser.g:1381:1: ruleRows EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRows"


    // $ANTLR start "ruleRows"
    // InternalSQLParser.g:1388:1: ruleRows : ( ( rule__Rows__Group__0 ) ) ;
    public final void ruleRows() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1392:2: ( ( ( rule__Rows__Group__0 ) ) )
            // InternalSQLParser.g:1393:2: ( ( rule__Rows__Group__0 ) )
            {
            // InternalSQLParser.g:1393:2: ( ( rule__Rows__Group__0 ) )
            // InternalSQLParser.g:1394:3: ( rule__Rows__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1395:3: ( rule__Rows__Group__0 )
            // InternalSQLParser.g:1395:4: rule__Rows__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRows"


    // $ANTLR start "entryRuleRow"
    // InternalSQLParser.g:1404:1: entryRuleRow : ruleRow EOF ;
    public final void entryRuleRow() throws RecognitionException {
        try {
            // InternalSQLParser.g:1405:1: ( ruleRow EOF )
            // InternalSQLParser.g:1406:1: ruleRow EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRow"


    // $ANTLR start "ruleRow"
    // InternalSQLParser.g:1413:1: ruleRow : ( ( rule__Row__Group__0 ) ) ;
    public final void ruleRow() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1417:2: ( ( ( rule__Row__Group__0 ) ) )
            // InternalSQLParser.g:1418:2: ( ( rule__Row__Group__0 ) )
            {
            // InternalSQLParser.g:1418:2: ( ( rule__Row__Group__0 ) )
            // InternalSQLParser.g:1419:3: ( rule__Row__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getGroup()); 
            }
            // InternalSQLParser.g:1420:3: ( rule__Row__Group__0 )
            // InternalSQLParser.g:1420:4: rule__Row__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRow"


    // $ANTLR start "entryRuleRowValues"
    // InternalSQLParser.g:1429:1: entryRuleRowValues : ruleRowValues EOF ;
    public final void entryRuleRowValues() throws RecognitionException {
        try {
            // InternalSQLParser.g:1430:1: ( ruleRowValues EOF )
            // InternalSQLParser.g:1431:1: ruleRowValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValues"


    // $ANTLR start "ruleRowValues"
    // InternalSQLParser.g:1438:1: ruleRowValues : ( ( rule__RowValues__Group__0 ) ) ;
    public final void ruleRowValues() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1442:2: ( ( ( rule__RowValues__Group__0 ) ) )
            // InternalSQLParser.g:1443:2: ( ( rule__RowValues__Group__0 ) )
            {
            // InternalSQLParser.g:1443:2: ( ( rule__RowValues__Group__0 ) )
            // InternalSQLParser.g:1444:3: ( rule__RowValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup()); 
            }
            // InternalSQLParser.g:1445:3: ( rule__RowValues__Group__0 )
            // InternalSQLParser.g:1445:4: rule__RowValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValues"


    // $ANTLR start "entryRuleRowValue"
    // InternalSQLParser.g:1454:1: entryRuleRowValue : ruleRowValue EOF ;
    public final void entryRuleRowValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:1455:1: ( ruleRowValue EOF )
            // InternalSQLParser.g:1456:1: ruleRowValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValue"


    // $ANTLR start "ruleRowValue"
    // InternalSQLParser.g:1463:1: ruleRowValue : ( ( rule__RowValue__Alternatives ) ) ;
    public final void ruleRowValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1467:2: ( ( ( rule__RowValue__Alternatives ) ) )
            // InternalSQLParser.g:1468:2: ( ( rule__RowValue__Alternatives ) )
            {
            // InternalSQLParser.g:1468:2: ( ( rule__RowValue__Alternatives ) )
            // InternalSQLParser.g:1469:3: ( rule__RowValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1470:3: ( rule__RowValue__Alternatives )
            // InternalSQLParser.g:1470:4: rule__RowValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RowValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValue"


    // $ANTLR start "entryRulePivotTable"
    // InternalSQLParser.g:1479:1: entryRulePivotTable : rulePivotTable EOF ;
    public final void entryRulePivotTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:1480:1: ( rulePivotTable EOF )
            // InternalSQLParser.g:1481:1: rulePivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotTable"


    // $ANTLR start "rulePivotTable"
    // InternalSQLParser.g:1488:1: rulePivotTable : ( ( rule__PivotTable__Group__0 ) ) ;
    public final void rulePivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1492:2: ( ( ( rule__PivotTable__Group__0 ) ) )
            // InternalSQLParser.g:1493:2: ( ( rule__PivotTable__Group__0 ) )
            {
            // InternalSQLParser.g:1493:2: ( ( rule__PivotTable__Group__0 ) )
            // InternalSQLParser.g:1494:3: ( rule__PivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:1495:3: ( rule__PivotTable__Group__0 )
            // InternalSQLParser.g:1495:4: rule__PivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotTable"


    // $ANTLR start "entryRulePivotFunctions"
    // InternalSQLParser.g:1504:1: entryRulePivotFunctions : rulePivotFunctions EOF ;
    public final void entryRulePivotFunctions() throws RecognitionException {
        try {
            // InternalSQLParser.g:1505:1: ( rulePivotFunctions EOF )
            // InternalSQLParser.g:1506:1: rulePivotFunctions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotFunctions"


    // $ANTLR start "rulePivotFunctions"
    // InternalSQLParser.g:1513:1: rulePivotFunctions : ( ( rule__PivotFunctions__AbcAssignment ) ) ;
    public final void rulePivotFunctions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1517:2: ( ( ( rule__PivotFunctions__AbcAssignment ) ) )
            // InternalSQLParser.g:1518:2: ( ( rule__PivotFunctions__AbcAssignment ) )
            {
            // InternalSQLParser.g:1518:2: ( ( rule__PivotFunctions__AbcAssignment ) )
            // InternalSQLParser.g:1519:3: ( rule__PivotFunctions__AbcAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }
            // InternalSQLParser.g:1520:3: ( rule__PivotFunctions__AbcAssignment )
            // InternalSQLParser.g:1520:4: rule__PivotFunctions__AbcAssignment
            {
            pushFollow(FOLLOW_2);
            rule__PivotFunctions__AbcAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotFunctions"


    // $ANTLR start "entryRulePivotInClause"
    // InternalSQLParser.g:1529:1: entryRulePivotInClause : rulePivotInClause EOF ;
    public final void entryRulePivotInClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1530:1: ( rulePivotInClause EOF )
            // InternalSQLParser.g:1531:1: rulePivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClause"


    // $ANTLR start "rulePivotInClause"
    // InternalSQLParser.g:1538:1: rulePivotInClause : ( ( rule__PivotInClause__Group__0 ) ) ;
    public final void rulePivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1542:2: ( ( ( rule__PivotInClause__Group__0 ) ) )
            // InternalSQLParser.g:1543:2: ( ( rule__PivotInClause__Group__0 ) )
            {
            // InternalSQLParser.g:1543:2: ( ( rule__PivotInClause__Group__0 ) )
            // InternalSQLParser.g:1544:3: ( rule__PivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1545:3: ( rule__PivotInClause__Group__0 )
            // InternalSQLParser.g:1545:4: rule__PivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClause"


    // $ANTLR start "entryRulePivotInClauseAny"
    // InternalSQLParser.g:1554:1: entryRulePivotInClauseAny : rulePivotInClauseAny EOF ;
    public final void entryRulePivotInClauseAny() throws RecognitionException {
        try {
            // InternalSQLParser.g:1555:1: ( rulePivotInClauseAny EOF )
            // InternalSQLParser.g:1556:1: rulePivotInClauseAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClauseAny"


    // $ANTLR start "rulePivotInClauseAny"
    // InternalSQLParser.g:1563:1: rulePivotInClauseAny : ( ( rule__PivotInClauseAny__Group__0 ) ) ;
    public final void rulePivotInClauseAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1567:2: ( ( ( rule__PivotInClauseAny__Group__0 ) ) )
            // InternalSQLParser.g:1568:2: ( ( rule__PivotInClauseAny__Group__0 ) )
            {
            // InternalSQLParser.g:1568:2: ( ( rule__PivotInClauseAny__Group__0 ) )
            // InternalSQLParser.g:1569:3: ( rule__PivotInClauseAny__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }
            // InternalSQLParser.g:1570:3: ( rule__PivotInClauseAny__Group__0 )
            // InternalSQLParser.g:1570:4: rule__PivotInClauseAny__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClauseAny"


    // $ANTLR start "entryRuleUnpivotTable"
    // InternalSQLParser.g:1579:1: entryRuleUnpivotTable : ruleUnpivotTable EOF ;
    public final void entryRuleUnpivotTable() throws RecognitionException {
        try {
            // InternalSQLParser.g:1580:1: ( ruleUnpivotTable EOF )
            // InternalSQLParser.g:1581:1: ruleUnpivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotTable"


    // $ANTLR start "ruleUnpivotTable"
    // InternalSQLParser.g:1588:1: ruleUnpivotTable : ( ( rule__UnpivotTable__Group__0 ) ) ;
    public final void ruleUnpivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1592:2: ( ( ( rule__UnpivotTable__Group__0 ) ) )
            // InternalSQLParser.g:1593:2: ( ( rule__UnpivotTable__Group__0 ) )
            {
            // InternalSQLParser.g:1593:2: ( ( rule__UnpivotTable__Group__0 ) )
            // InternalSQLParser.g:1594:3: ( rule__UnpivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }
            // InternalSQLParser.g:1595:3: ( rule__UnpivotTable__Group__0 )
            // InternalSQLParser.g:1595:4: rule__UnpivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotTable"


    // $ANTLR start "entryRuleUnpivotInClause"
    // InternalSQLParser.g:1604:1: entryRuleUnpivotInClause : ruleUnpivotInClause EOF ;
    public final void entryRuleUnpivotInClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1605:1: ( ruleUnpivotInClause EOF )
            // InternalSQLParser.g:1606:1: ruleUnpivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClause"


    // $ANTLR start "ruleUnpivotInClause"
    // InternalSQLParser.g:1613:1: ruleUnpivotInClause : ( ( rule__UnpivotInClause__Group__0 ) ) ;
    public final void ruleUnpivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1617:2: ( ( ( rule__UnpivotInClause__Group__0 ) ) )
            // InternalSQLParser.g:1618:2: ( ( rule__UnpivotInClause__Group__0 ) )
            {
            // InternalSQLParser.g:1618:2: ( ( rule__UnpivotInClause__Group__0 ) )
            // InternalSQLParser.g:1619:3: ( rule__UnpivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1620:3: ( rule__UnpivotInClause__Group__0 )
            // InternalSQLParser.g:1620:4: rule__UnpivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClause"


    // $ANTLR start "entryRuleUnpivotInClauseArgs"
    // InternalSQLParser.g:1629:1: entryRuleUnpivotInClauseArgs : ruleUnpivotInClauseArgs EOF ;
    public final void entryRuleUnpivotInClauseArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:1630:1: ( ruleUnpivotInClauseArgs EOF )
            // InternalSQLParser.g:1631:1: ruleUnpivotInClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArgs"


    // $ANTLR start "ruleUnpivotInClauseArgs"
    // InternalSQLParser.g:1638:1: ruleUnpivotInClauseArgs : ( ( rule__UnpivotInClauseArgs__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1642:2: ( ( ( rule__UnpivotInClauseArgs__Group__0 ) ) )
            // InternalSQLParser.g:1643:2: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            {
            // InternalSQLParser.g:1643:2: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            // InternalSQLParser.g:1644:3: ( rule__UnpivotInClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1645:3: ( rule__UnpivotInClauseArgs__Group__0 )
            // InternalSQLParser.g:1645:4: rule__UnpivotInClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArgs"


    // $ANTLR start "entryRuleUnpivotInClauseArg"
    // InternalSQLParser.g:1654:1: entryRuleUnpivotInClauseArg : ruleUnpivotInClauseArg EOF ;
    public final void entryRuleUnpivotInClauseArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:1655:1: ( ruleUnpivotInClauseArg EOF )
            // InternalSQLParser.g:1656:1: ruleUnpivotInClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArg"


    // $ANTLR start "ruleUnpivotInClauseArg"
    // InternalSQLParser.g:1663:1: ruleUnpivotInClauseArg : ( ( rule__UnpivotInClauseArg__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1667:2: ( ( ( rule__UnpivotInClauseArg__Group__0 ) ) )
            // InternalSQLParser.g:1668:2: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            {
            // InternalSQLParser.g:1668:2: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            // InternalSQLParser.g:1669:3: ( rule__UnpivotInClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:1670:3: ( rule__UnpivotInClauseArg__Group__0 )
            // InternalSQLParser.g:1670:4: rule__UnpivotInClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArg"


    // $ANTLR start "entryRulePivotForClause"
    // InternalSQLParser.g:1679:1: entryRulePivotForClause : rulePivotForClause EOF ;
    public final void entryRulePivotForClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:1680:1: ( rulePivotForClause EOF )
            // InternalSQLParser.g:1681:1: rulePivotForClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotForClause"


    // $ANTLR start "rulePivotForClause"
    // InternalSQLParser.g:1688:1: rulePivotForClause : ( ( rule__PivotForClause__Group__0 ) ) ;
    public final void rulePivotForClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1692:2: ( ( ( rule__PivotForClause__Group__0 ) ) )
            // InternalSQLParser.g:1693:2: ( ( rule__PivotForClause__Group__0 ) )
            {
            // InternalSQLParser.g:1693:2: ( ( rule__PivotForClause__Group__0 ) )
            // InternalSQLParser.g:1694:3: ( rule__PivotForClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:1695:3: ( rule__PivotForClause__Group__0 )
            // InternalSQLParser.g:1695:4: rule__PivotForClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotForClause"


    // $ANTLR start "entryRulePivotColumns"
    // InternalSQLParser.g:1704:1: entryRulePivotColumns : rulePivotColumns EOF ;
    public final void entryRulePivotColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1705:1: ( rulePivotColumns EOF )
            // InternalSQLParser.g:1706:1: rulePivotColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotColumns"


    // $ANTLR start "rulePivotColumns"
    // InternalSQLParser.g:1713:1: rulePivotColumns : ( ( rule__PivotColumns__Alternatives ) ) ;
    public final void rulePivotColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1717:2: ( ( ( rule__PivotColumns__Alternatives ) ) )
            // InternalSQLParser.g:1718:2: ( ( rule__PivotColumns__Alternatives ) )
            {
            // InternalSQLParser.g:1718:2: ( ( rule__PivotColumns__Alternatives ) )
            // InternalSQLParser.g:1719:3: ( rule__PivotColumns__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1720:3: ( rule__PivotColumns__Alternatives )
            // InternalSQLParser.g:1720:4: rule__PivotColumns__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotColumns"


    // $ANTLR start "entryRulePivotCols"
    // InternalSQLParser.g:1729:1: entryRulePivotCols : rulePivotCols EOF ;
    public final void entryRulePivotCols() throws RecognitionException {
        try {
            // InternalSQLParser.g:1730:1: ( rulePivotCols EOF )
            // InternalSQLParser.g:1731:1: rulePivotCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCols"


    // $ANTLR start "rulePivotCols"
    // InternalSQLParser.g:1738:1: rulePivotCols : ( ( rule__PivotCols__Group__0 ) ) ;
    public final void rulePivotCols() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1742:2: ( ( ( rule__PivotCols__Group__0 ) ) )
            // InternalSQLParser.g:1743:2: ( ( rule__PivotCols__Group__0 ) )
            {
            // InternalSQLParser.g:1743:2: ( ( rule__PivotCols__Group__0 ) )
            // InternalSQLParser.g:1744:3: ( rule__PivotCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1745:3: ( rule__PivotCols__Group__0 )
            // InternalSQLParser.g:1745:4: rule__PivotCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCols"


    // $ANTLR start "entryRulePivotCol"
    // InternalSQLParser.g:1754:1: entryRulePivotCol : rulePivotCol EOF ;
    public final void entryRulePivotCol() throws RecognitionException {
        try {
            // InternalSQLParser.g:1755:1: ( rulePivotCol EOF )
            // InternalSQLParser.g:1756:1: rulePivotCol EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCol"


    // $ANTLR start "rulePivotCol"
    // InternalSQLParser.g:1763:1: rulePivotCol : ( ( rule__PivotCol__Group__0 ) ) ;
    public final void rulePivotCol() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1767:2: ( ( ( rule__PivotCol__Group__0 ) ) )
            // InternalSQLParser.g:1768:2: ( ( rule__PivotCol__Group__0 ) )
            {
            // InternalSQLParser.g:1768:2: ( ( rule__PivotCol__Group__0 ) )
            // InternalSQLParser.g:1769:3: ( rule__PivotCol__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup()); 
            }
            // InternalSQLParser.g:1770:3: ( rule__PivotCol__Group__0 )
            // InternalSQLParser.g:1770:4: rule__PivotCol__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCol"


    // $ANTLR start "entryRuleTableFull"
    // InternalSQLParser.g:1779:1: entryRuleTableFull : ruleTableFull EOF ;
    public final void entryRuleTableFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1780:1: ( ruleTableFull EOF )
            // InternalSQLParser.g:1781:1: ruleTableFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableFull"


    // $ANTLR start "ruleTableFull"
    // InternalSQLParser.g:1788:1: ruleTableFull : ( ( rule__TableFull__Group__0 ) ) ;
    public final void ruleTableFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1792:2: ( ( ( rule__TableFull__Group__0 ) ) )
            // InternalSQLParser.g:1793:2: ( ( rule__TableFull__Group__0 ) )
            {
            // InternalSQLParser.g:1793:2: ( ( rule__TableFull__Group__0 ) )
            // InternalSQLParser.g:1794:3: ( rule__TableFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:1795:3: ( rule__TableFull__Group__0 )
            // InternalSQLParser.g:1795:4: rule__TableFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableFull"


    // $ANTLR start "entryRuleDbObjectNameAll"
    // InternalSQLParser.g:1804:1: entryRuleDbObjectNameAll : ruleDbObjectNameAll EOF ;
    public final void entryRuleDbObjectNameAll() throws RecognitionException {
        try {
            // InternalSQLParser.g:1805:1: ( ruleDbObjectNameAll EOF )
            // InternalSQLParser.g:1806:1: ruleDbObjectNameAll EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectNameAll"


    // $ANTLR start "ruleDbObjectNameAll"
    // InternalSQLParser.g:1813:1: ruleDbObjectNameAll : ( ( rule__DbObjectNameAll__Group__0 ) ) ;
    public final void ruleDbObjectNameAll() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1817:2: ( ( ( rule__DbObjectNameAll__Group__0 ) ) )
            // InternalSQLParser.g:1818:2: ( ( rule__DbObjectNameAll__Group__0 ) )
            {
            // InternalSQLParser.g:1818:2: ( ( rule__DbObjectNameAll__Group__0 ) )
            // InternalSQLParser.g:1819:3: ( rule__DbObjectNameAll__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }
            // InternalSQLParser.g:1820:3: ( rule__DbObjectNameAll__Group__0 )
            // InternalSQLParser.g:1820:4: rule__DbObjectNameAll__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectNameAll"


    // $ANTLR start "entryRuleDbObjectName"
    // InternalSQLParser.g:1829:1: entryRuleDbObjectName : ruleDbObjectName EOF ;
    public final void entryRuleDbObjectName() throws RecognitionException {
        try {
            // InternalSQLParser.g:1830:1: ( ruleDbObjectName EOF )
            // InternalSQLParser.g:1831:1: ruleDbObjectName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectName"


    // $ANTLR start "ruleDbObjectName"
    // InternalSQLParser.g:1838:1: ruleDbObjectName : ( ( rule__DbObjectName__DbnameAssignment ) ) ;
    public final void ruleDbObjectName() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1842:2: ( ( ( rule__DbObjectName__DbnameAssignment ) ) )
            // InternalSQLParser.g:1843:2: ( ( rule__DbObjectName__DbnameAssignment ) )
            {
            // InternalSQLParser.g:1843:2: ( ( rule__DbObjectName__DbnameAssignment ) )
            // InternalSQLParser.g:1844:3: ( rule__DbObjectName__DbnameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }
            // InternalSQLParser.g:1845:3: ( rule__DbObjectName__DbnameAssignment )
            // InternalSQLParser.g:1845:4: rule__DbObjectName__DbnameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectName__DbnameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectName"


    // $ANTLR start "entryRuleOrderByColumns"
    // InternalSQLParser.g:1854:1: entryRuleOrderByColumns : ruleOrderByColumns EOF ;
    public final void entryRuleOrderByColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1855:1: ( ruleOrderByColumns EOF )
            // InternalSQLParser.g:1856:1: ruleOrderByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumns"


    // $ANTLR start "ruleOrderByColumns"
    // InternalSQLParser.g:1863:1: ruleOrderByColumns : ( ( rule__OrderByColumns__Group__0 ) ) ;
    public final void ruleOrderByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1867:2: ( ( ( rule__OrderByColumns__Group__0 ) ) )
            // InternalSQLParser.g:1868:2: ( ( rule__OrderByColumns__Group__0 ) )
            {
            // InternalSQLParser.g:1868:2: ( ( rule__OrderByColumns__Group__0 ) )
            // InternalSQLParser.g:1869:3: ( rule__OrderByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1870:3: ( rule__OrderByColumns__Group__0 )
            // InternalSQLParser.g:1870:4: rule__OrderByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumns"


    // $ANTLR start "entryRuleOrderByColumnFull"
    // InternalSQLParser.g:1879:1: entryRuleOrderByColumnFull : ruleOrderByColumnFull EOF ;
    public final void entryRuleOrderByColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1880:1: ( ruleOrderByColumnFull EOF )
            // InternalSQLParser.g:1881:1: ruleOrderByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumnFull"


    // $ANTLR start "ruleOrderByColumnFull"
    // InternalSQLParser.g:1888:1: ruleOrderByColumnFull : ( ( rule__OrderByColumnFull__Group__0 ) ) ;
    public final void ruleOrderByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1892:2: ( ( ( rule__OrderByColumnFull__Group__0 ) ) )
            // InternalSQLParser.g:1893:2: ( ( rule__OrderByColumnFull__Group__0 ) )
            {
            // InternalSQLParser.g:1893:2: ( ( rule__OrderByColumnFull__Group__0 ) )
            // InternalSQLParser.g:1894:3: ( rule__OrderByColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }
            // InternalSQLParser.g:1895:3: ( rule__OrderByColumnFull__Group__0 )
            // InternalSQLParser.g:1895:4: rule__OrderByColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumnFull"


    // $ANTLR start "entryRuleGroupByColumns"
    // InternalSQLParser.g:1904:1: entryRuleGroupByColumns : ruleGroupByColumns EOF ;
    public final void entryRuleGroupByColumns() throws RecognitionException {
        try {
            // InternalSQLParser.g:1905:1: ( ruleGroupByColumns EOF )
            // InternalSQLParser.g:1906:1: ruleGroupByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumns"


    // $ANTLR start "ruleGroupByColumns"
    // InternalSQLParser.g:1913:1: ruleGroupByColumns : ( ( rule__GroupByColumns__Group__0 ) ) ;
    public final void ruleGroupByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1917:2: ( ( ( rule__GroupByColumns__Group__0 ) ) )
            // InternalSQLParser.g:1918:2: ( ( rule__GroupByColumns__Group__0 ) )
            {
            // InternalSQLParser.g:1918:2: ( ( rule__GroupByColumns__Group__0 ) )
            // InternalSQLParser.g:1919:3: ( rule__GroupByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }
            // InternalSQLParser.g:1920:3: ( rule__GroupByColumns__Group__0 )
            // InternalSQLParser.g:1920:4: rule__GroupByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumns"


    // $ANTLR start "entryRuleGroupByColumnFull"
    // InternalSQLParser.g:1929:1: entryRuleGroupByColumnFull : ruleGroupByColumnFull EOF ;
    public final void entryRuleGroupByColumnFull() throws RecognitionException {
        try {
            // InternalSQLParser.g:1930:1: ( ruleGroupByColumnFull EOF )
            // InternalSQLParser.g:1931:1: ruleGroupByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumnFull"


    // $ANTLR start "ruleGroupByColumnFull"
    // InternalSQLParser.g:1938:1: ruleGroupByColumnFull : ( ( rule__GroupByColumnFull__Alternatives ) ) ;
    public final void ruleGroupByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1942:2: ( ( ( rule__GroupByColumnFull__Alternatives ) ) )
            // InternalSQLParser.g:1943:2: ( ( rule__GroupByColumnFull__Alternatives ) )
            {
            // InternalSQLParser.g:1943:2: ( ( rule__GroupByColumnFull__Alternatives ) )
            // InternalSQLParser.g:1944:3: ( rule__GroupByColumnFull__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1945:3: ( rule__GroupByColumnFull__Alternatives )
            // InternalSQLParser.g:1945:4: rule__GroupByColumnFull__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumnFull__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumnFull"


    // $ANTLR start "entryRuleFullExpression"
    // InternalSQLParser.g:1954:1: entryRuleFullExpression : ruleFullExpression EOF ;
    public final void entryRuleFullExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:1955:1: ( ruleFullExpression EOF )
            // InternalSQLParser.g:1956:1: ruleFullExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFullExpression"


    // $ANTLR start "ruleFullExpression"
    // InternalSQLParser.g:1963:1: ruleFullExpression : ( ( rule__FullExpression__Group__0 ) ) ;
    public final void ruleFullExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1967:2: ( ( ( rule__FullExpression__Group__0 ) ) )
            // InternalSQLParser.g:1968:2: ( ( rule__FullExpression__Group__0 ) )
            {
            // InternalSQLParser.g:1968:2: ( ( rule__FullExpression__Group__0 ) )
            // InternalSQLParser.g:1969:3: ( rule__FullExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:1970:3: ( rule__FullExpression__Group__0 )
            // InternalSQLParser.g:1970:4: rule__FullExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFullExpression"


    // $ANTLR start "entryRuleExpressionFragmentSecond"
    // InternalSQLParser.g:1979:1: entryRuleExpressionFragmentSecond : ruleExpressionFragmentSecond EOF ;
    public final void entryRuleExpressionFragmentSecond() throws RecognitionException {
        try {
            // InternalSQLParser.g:1980:1: ( ruleExpressionFragmentSecond EOF )
            // InternalSQLParser.g:1981:1: ruleExpressionFragmentSecond EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragmentSecond"


    // $ANTLR start "ruleExpressionFragmentSecond"
    // InternalSQLParser.g:1988:1: ruleExpressionFragmentSecond : ( ( rule__ExpressionFragmentSecond__Alternatives ) ) ;
    public final void ruleExpressionFragmentSecond() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:1992:2: ( ( ( rule__ExpressionFragmentSecond__Alternatives ) ) )
            // InternalSQLParser.g:1993:2: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            {
            // InternalSQLParser.g:1993:2: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            // InternalSQLParser.g:1994:3: ( rule__ExpressionFragmentSecond__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:1995:3: ( rule__ExpressionFragmentSecond__Alternatives )
            // InternalSQLParser.g:1995:4: rule__ExpressionFragmentSecond__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragmentSecond"


    // $ANTLR start "entryRuleExpressionFragment"
    // InternalSQLParser.g:2004:1: entryRuleExpressionFragment : ruleExpressionFragment EOF ;
    public final void entryRuleExpressionFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:2005:1: ( ruleExpressionFragment EOF )
            // InternalSQLParser.g:2006:1: ruleExpressionFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragment"


    // $ANTLR start "ruleExpressionFragment"
    // InternalSQLParser.g:2013:1: ruleExpressionFragment : ( ( rule__ExpressionFragment__Alternatives ) ) ;
    public final void ruleExpressionFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2017:2: ( ( ( rule__ExpressionFragment__Alternatives ) ) )
            // InternalSQLParser.g:2018:2: ( ( rule__ExpressionFragment__Alternatives ) )
            {
            // InternalSQLParser.g:2018:2: ( ( rule__ExpressionFragment__Alternatives ) )
            // InternalSQLParser.g:2019:3: ( rule__ExpressionFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2020:3: ( rule__ExpressionFragment__Alternatives )
            // InternalSQLParser.g:2020:4: rule__ExpressionFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragment"


    // $ANTLR start "entryRuleExpressionGroup"
    // InternalSQLParser.g:2029:1: entryRuleExpressionGroup : ruleExpressionGroup EOF ;
    public final void entryRuleExpressionGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:2030:1: ( ruleExpressionGroup EOF )
            // InternalSQLParser.g:2031:1: ruleExpressionGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionGroup"


    // $ANTLR start "ruleExpressionGroup"
    // InternalSQLParser.g:2038:1: ruleExpressionGroup : ( ( rule__ExpressionGroup__Group__0 ) ) ;
    public final void ruleExpressionGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2042:2: ( ( ( rule__ExpressionGroup__Group__0 ) ) )
            // InternalSQLParser.g:2043:2: ( ( rule__ExpressionGroup__Group__0 ) )
            {
            // InternalSQLParser.g:2043:2: ( ( rule__ExpressionGroup__Group__0 ) )
            // InternalSQLParser.g:2044:3: ( rule__ExpressionGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }
            // InternalSQLParser.g:2045:3: ( rule__ExpressionGroup__Group__0 )
            // InternalSQLParser.g:2045:4: rule__ExpressionGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionGroup"


    // $ANTLR start "entryRuleXExpression"
    // InternalSQLParser.g:2054:1: entryRuleXExpression : ruleXExpression EOF ;
    public final void entryRuleXExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:2055:1: ( ruleXExpression EOF )
            // InternalSQLParser.g:2056:1: ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalSQLParser.g:2063:1: ruleXExpression : ( ( rule__XExpression__Group__0 ) ) ;
    public final void ruleXExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2067:2: ( ( ( rule__XExpression__Group__0 ) ) )
            // InternalSQLParser.g:2068:2: ( ( rule__XExpression__Group__0 ) )
            {
            // InternalSQLParser.g:2068:2: ( ( rule__XExpression__Group__0 ) )
            // InternalSQLParser.g:2069:3: ( rule__XExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:2070:3: ( rule__XExpression__Group__0 )
            // InternalSQLParser.g:2070:4: rule__XExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXExpression_"
    // InternalSQLParser.g:2079:1: entryRuleXExpression_ : ruleXExpression_ EOF ;
    public final void entryRuleXExpression_() throws RecognitionException {
        try {
            // InternalSQLParser.g:2080:1: ( ruleXExpression_ EOF )
            // InternalSQLParser.g:2081:1: ruleXExpression_ EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Rule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Rule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression_"


    // $ANTLR start "ruleXExpression_"
    // InternalSQLParser.g:2088:1: ruleXExpression_ : ( ( rule__XExpression___Group__0 ) ) ;
    public final void ruleXExpression_() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2092:2: ( ( ( rule__XExpression___Group__0 ) ) )
            // InternalSQLParser.g:2093:2: ( ( rule__XExpression___Group__0 ) )
            {
            // InternalSQLParser.g:2093:2: ( ( rule__XExpression___Group__0 ) )
            // InternalSQLParser.g:2094:3: ( rule__XExpression___Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup()); 
            }
            // InternalSQLParser.g:2095:3: ( rule__XExpression___Group__0 )
            // InternalSQLParser.g:2095:4: rule__XExpression___Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression_"


    // $ANTLR start "entryRuleXExpressionParams"
    // InternalSQLParser.g:2104:1: entryRuleXExpressionParams : ruleXExpressionParams EOF ;
    public final void entryRuleXExpressionParams() throws RecognitionException {
        try {
            // InternalSQLParser.g:2105:1: ( ruleXExpressionParams EOF )
            // InternalSQLParser.g:2106:1: ruleXExpressionParams EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionParams"


    // $ANTLR start "ruleXExpressionParams"
    // InternalSQLParser.g:2113:1: ruleXExpressionParams : ( ( rule__XExpressionParams__Group__0 ) ) ;
    public final void ruleXExpressionParams() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2117:2: ( ( ( rule__XExpressionParams__Group__0 ) ) )
            // InternalSQLParser.g:2118:2: ( ( rule__XExpressionParams__Group__0 ) )
            {
            // InternalSQLParser.g:2118:2: ( ( rule__XExpressionParams__Group__0 ) )
            // InternalSQLParser.g:2119:3: ( rule__XExpressionParams__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2120:3: ( rule__XExpressionParams__Group__0 )
            // InternalSQLParser.g:2120:4: rule__XExpressionParams__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpressionParams"


    // $ANTLR start "entryRuleJRParameter"
    // InternalSQLParser.g:2129:1: entryRuleJRParameter : ruleJRParameter EOF ;
    public final void entryRuleJRParameter() throws RecognitionException {
        try {
            // InternalSQLParser.g:2130:1: ( ruleJRParameter EOF )
            // InternalSQLParser.g:2131:1: ruleJRParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJRParameter"


    // $ANTLR start "ruleJRParameter"
    // InternalSQLParser.g:2138:1: ruleJRParameter : ( ( rule__JRParameter__JrprmAssignment ) ) ;
    public final void ruleJRParameter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2142:2: ( ( ( rule__JRParameter__JrprmAssignment ) ) )
            // InternalSQLParser.g:2143:2: ( ( rule__JRParameter__JrprmAssignment ) )
            {
            // InternalSQLParser.g:2143:2: ( ( rule__JRParameter__JrprmAssignment ) )
            // InternalSQLParser.g:2144:3: ( rule__JRParameter__JrprmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }
            // InternalSQLParser.g:2145:3: ( rule__JRParameter__JrprmAssignment )
            // InternalSQLParser.g:2145:4: rule__JRParameter__JrprmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__JRParameter__JrprmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJRParameter"


    // $ANTLR start "entryRuleExpression"
    // InternalSQLParser.g:2154:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalSQLParser.g:2155:1: ( ruleExpression EOF )
            // InternalSQLParser.g:2156:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSQLParser.g:2163:1: ruleExpression : ( ( rule__Expression__Group__0 ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2167:2: ( ( ( rule__Expression__Group__0 ) ) )
            // InternalSQLParser.g:2168:2: ( ( rule__Expression__Group__0 ) )
            {
            // InternalSQLParser.g:2168:2: ( ( rule__Expression__Group__0 ) )
            // InternalSQLParser.g:2169:3: ( rule__Expression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getGroup()); 
            }
            // InternalSQLParser.g:2170:3: ( rule__Expression__Group__0 )
            // InternalSQLParser.g:2170:4: rule__Expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleIsNullValue"
    // InternalSQLParser.g:2179:1: entryRuleIsNullValue : ruleIsNullValue EOF ;
    public final void entryRuleIsNullValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2180:1: ( ruleIsNullValue EOF )
            // InternalSQLParser.g:2181:1: ruleIsNullValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsNullValue"


    // $ANTLR start "ruleIsNullValue"
    // InternalSQLParser.g:2188:1: ruleIsNullValue : ( ( rule__IsNullValue__Group__0 ) ) ;
    public final void ruleIsNullValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2192:2: ( ( ( rule__IsNullValue__Group__0 ) ) )
            // InternalSQLParser.g:2193:2: ( ( rule__IsNullValue__Group__0 ) )
            {
            // InternalSQLParser.g:2193:2: ( ( rule__IsNullValue__Group__0 ) )
            // InternalSQLParser.g:2194:3: ( rule__IsNullValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2195:3: ( rule__IsNullValue__Group__0 )
            // InternalSQLParser.g:2195:4: rule__IsNullValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsNullValue"


    // $ANTLR start "entryRuleComparison"
    // InternalSQLParser.g:2204:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalSQLParser.g:2205:1: ( ruleComparison EOF )
            // InternalSQLParser.g:2206:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalSQLParser.g:2213:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2217:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalSQLParser.g:2218:2: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalSQLParser.g:2218:2: ( ( rule__Comparison__Group__0 ) )
            // InternalSQLParser.g:2219:3: ( rule__Comparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup()); 
            }
            // InternalSQLParser.g:2220:3: ( rule__Comparison__Group__0 )
            // InternalSQLParser.g:2220:4: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleLike"
    // InternalSQLParser.g:2229:1: entryRuleLike : ruleLike EOF ;
    public final void entryRuleLike() throws RecognitionException {
        try {
            // InternalSQLParser.g:2230:1: ( ruleLike EOF )
            // InternalSQLParser.g:2231:1: ruleLike EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLike"


    // $ANTLR start "ruleLike"
    // InternalSQLParser.g:2238:1: ruleLike : ( ( rule__Like__Group__0 ) ) ;
    public final void ruleLike() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2242:2: ( ( ( rule__Like__Group__0 ) ) )
            // InternalSQLParser.g:2243:2: ( ( rule__Like__Group__0 ) )
            {
            // InternalSQLParser.g:2243:2: ( ( rule__Like__Group__0 ) )
            // InternalSQLParser.g:2244:3: ( rule__Like__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getGroup()); 
            }
            // InternalSQLParser.g:2245:3: ( rule__Like__Group__0 )
            // InternalSQLParser.g:2245:4: rule__Like__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLike"


    // $ANTLR start "entryRuleLikeValue"
    // InternalSQLParser.g:2254:1: entryRuleLikeValue : ruleLikeValue EOF ;
    public final void entryRuleLikeValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2255:1: ( ruleLikeValue EOF )
            // InternalSQLParser.g:2256:1: ruleLikeValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeValue"


    // $ANTLR start "ruleLikeValue"
    // InternalSQLParser.g:2263:1: ruleLikeValue : ( ( rule__LikeValue__Group__0 ) ) ;
    public final void ruleLikeValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2267:2: ( ( ( rule__LikeValue__Group__0 ) ) )
            // InternalSQLParser.g:2268:2: ( ( rule__LikeValue__Group__0 ) )
            {
            // InternalSQLParser.g:2268:2: ( ( rule__LikeValue__Group__0 ) )
            // InternalSQLParser.g:2269:3: ( rule__LikeValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2270:3: ( rule__LikeValue__Group__0 )
            // InternalSQLParser.g:2270:4: rule__LikeValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeValue"


    // $ANTLR start "entryRuleLikeOperand"
    // InternalSQLParser.g:2279:1: entryRuleLikeOperand : ruleLikeOperand EOF ;
    public final void entryRuleLikeOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2280:1: ( ruleLikeOperand EOF )
            // InternalSQLParser.g:2281:1: ruleLikeOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeOperand"


    // $ANTLR start "ruleLikeOperand"
    // InternalSQLParser.g:2288:1: ruleLikeOperand : ( ( rule__LikeOperand__Alternatives ) ) ;
    public final void ruleLikeOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2292:2: ( ( ( rule__LikeOperand__Alternatives ) ) )
            // InternalSQLParser.g:2293:2: ( ( rule__LikeOperand__Alternatives ) )
            {
            // InternalSQLParser.g:2293:2: ( ( rule__LikeOperand__Alternatives ) )
            // InternalSQLParser.g:2294:3: ( rule__LikeOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2295:3: ( rule__LikeOperand__Alternatives )
            // InternalSQLParser.g:2295:4: rule__LikeOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LikeOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeOperand"


    // $ANTLR start "entryRuleBetween"
    // InternalSQLParser.g:2304:1: entryRuleBetween : ruleBetween EOF ;
    public final void entryRuleBetween() throws RecognitionException {
        try {
            // InternalSQLParser.g:2305:1: ( ruleBetween EOF )
            // InternalSQLParser.g:2306:1: ruleBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetween"


    // $ANTLR start "ruleBetween"
    // InternalSQLParser.g:2313:1: ruleBetween : ( ( rule__Between__Group__0 ) ) ;
    public final void ruleBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2317:2: ( ( ( rule__Between__Group__0 ) ) )
            // InternalSQLParser.g:2318:2: ( ( rule__Between__Group__0 ) )
            {
            // InternalSQLParser.g:2318:2: ( ( rule__Between__Group__0 ) )
            // InternalSQLParser.g:2319:3: ( rule__Between__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getGroup()); 
            }
            // InternalSQLParser.g:2320:3: ( rule__Between__Group__0 )
            // InternalSQLParser.g:2320:4: rule__Between__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetween"


    // $ANTLR start "entryRuleBetweenValue"
    // InternalSQLParser.g:2329:1: entryRuleBetweenValue : ruleBetweenValue EOF ;
    public final void entryRuleBetweenValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2330:1: ( ruleBetweenValue EOF )
            // InternalSQLParser.g:2331:1: ruleBetweenValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetweenValue"


    // $ANTLR start "ruleBetweenValue"
    // InternalSQLParser.g:2338:1: ruleBetweenValue : ( ( rule__BetweenValue__Group__0 ) ) ;
    public final void ruleBetweenValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2342:2: ( ( ( rule__BetweenValue__Group__0 ) ) )
            // InternalSQLParser.g:2343:2: ( ( rule__BetweenValue__Group__0 ) )
            {
            // InternalSQLParser.g:2343:2: ( ( rule__BetweenValue__Group__0 ) )
            // InternalSQLParser.g:2344:3: ( rule__BetweenValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2345:3: ( rule__BetweenValue__Group__0 )
            // InternalSQLParser.g:2345:4: rule__BetweenValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetweenValue"


    // $ANTLR start "entryRuleInOperator"
    // InternalSQLParser.g:2354:1: entryRuleInOperator : ruleInOperator EOF ;
    public final void entryRuleInOperator() throws RecognitionException {
        try {
            // InternalSQLParser.g:2355:1: ( ruleInOperator EOF )
            // InternalSQLParser.g:2356:1: ruleInOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInOperator"


    // $ANTLR start "ruleInOperator"
    // InternalSQLParser.g:2363:1: ruleInOperator : ( ( rule__InOperator__Group__0 ) ) ;
    public final void ruleInOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2367:2: ( ( ( rule__InOperator__Group__0 ) ) )
            // InternalSQLParser.g:2368:2: ( ( rule__InOperator__Group__0 ) )
            {
            // InternalSQLParser.g:2368:2: ( ( rule__InOperator__Group__0 ) )
            // InternalSQLParser.g:2369:3: ( rule__InOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getGroup()); 
            }
            // InternalSQLParser.g:2370:3: ( rule__InOperator__Group__0 )
            // InternalSQLParser.g:2370:4: rule__InOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInOperator"


    // $ANTLR start "entryRuleInValue"
    // InternalSQLParser.g:2379:1: entryRuleInValue : ruleInValue EOF ;
    public final void entryRuleInValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2380:1: ( ruleInValue EOF )
            // InternalSQLParser.g:2381:1: ruleInValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInValue"


    // $ANTLR start "ruleInValue"
    // InternalSQLParser.g:2388:1: ruleInValue : ( ( rule__InValue__Group__0 ) ) ;
    public final void ruleInValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2392:2: ( ( ( rule__InValue__Group__0 ) ) )
            // InternalSQLParser.g:2393:2: ( ( rule__InValue__Group__0 ) )
            {
            // InternalSQLParser.g:2393:2: ( ( rule__InValue__Group__0 ) )
            // InternalSQLParser.g:2394:3: ( rule__InValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2395:3: ( rule__InValue__Group__0 )
            // InternalSQLParser.g:2395:4: rule__InValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInValue"


    // $ANTLR start "entryRuleExistsOperator"
    // InternalSQLParser.g:2404:1: entryRuleExistsOperator : ruleExistsOperator EOF ;
    public final void entryRuleExistsOperator() throws RecognitionException {
        try {
            // InternalSQLParser.g:2405:1: ( ruleExistsOperator EOF )
            // InternalSQLParser.g:2406:1: ruleExistsOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsOperator"


    // $ANTLR start "ruleExistsOperator"
    // InternalSQLParser.g:2413:1: ruleExistsOperator : ( ( rule__ExistsOperator__Group__0 ) ) ;
    public final void ruleExistsOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2417:2: ( ( ( rule__ExistsOperator__Group__0 ) ) )
            // InternalSQLParser.g:2418:2: ( ( rule__ExistsOperator__Group__0 ) )
            {
            // InternalSQLParser.g:2418:2: ( ( rule__ExistsOperator__Group__0 ) )
            // InternalSQLParser.g:2419:3: ( rule__ExistsOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }
            // InternalSQLParser.g:2420:3: ( rule__ExistsOperator__Group__0 )
            // InternalSQLParser.g:2420:4: rule__ExistsOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsOperator"


    // $ANTLR start "entryRuleExistsValue"
    // InternalSQLParser.g:2429:1: entryRuleExistsValue : ruleExistsValue EOF ;
    public final void entryRuleExistsValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:2430:1: ( ruleExistsValue EOF )
            // InternalSQLParser.g:2431:1: ruleExistsValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsValue"


    // $ANTLR start "ruleExistsValue"
    // InternalSQLParser.g:2438:1: ruleExistsValue : ( ( rule__ExistsValue__Group__0 ) ) ;
    public final void ruleExistsValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2442:2: ( ( ( rule__ExistsValue__Group__0 ) ) )
            // InternalSQLParser.g:2443:2: ( ( rule__ExistsValue__Group__0 ) )
            {
            // InternalSQLParser.g:2443:2: ( ( rule__ExistsValue__Group__0 ) )
            // InternalSQLParser.g:2444:3: ( rule__ExistsValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getGroup()); 
            }
            // InternalSQLParser.g:2445:3: ( rule__ExistsValue__Group__0 )
            // InternalSQLParser.g:2445:4: rule__ExistsValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsValue"


    // $ANTLR start "entryRuleOperandListGroup"
    // InternalSQLParser.g:2454:1: entryRuleOperandListGroup : ruleOperandListGroup EOF ;
    public final void entryRuleOperandListGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:2455:1: ( ruleOperandListGroup EOF )
            // InternalSQLParser.g:2456:1: ruleOperandListGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandListGroup"


    // $ANTLR start "ruleOperandListGroup"
    // InternalSQLParser.g:2463:1: ruleOperandListGroup : ( ( rule__OperandListGroup__Group__0 ) ) ;
    public final void ruleOperandListGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2467:2: ( ( ( rule__OperandListGroup__Group__0 ) ) )
            // InternalSQLParser.g:2468:2: ( ( rule__OperandListGroup__Group__0 ) )
            {
            // InternalSQLParser.g:2468:2: ( ( rule__OperandListGroup__Group__0 ) )
            // InternalSQLParser.g:2469:3: ( rule__OperandListGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }
            // InternalSQLParser.g:2470:3: ( rule__OperandListGroup__Group__0 )
            // InternalSQLParser.g:2470:4: rule__OperandListGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandListGroup"


    // $ANTLR start "entryRuleOperandList"
    // InternalSQLParser.g:2479:1: entryRuleOperandList : ruleOperandList EOF ;
    public final void entryRuleOperandList() throws RecognitionException {
        try {
            // InternalSQLParser.g:2480:1: ( ruleOperandList EOF )
            // InternalSQLParser.g:2481:1: ruleOperandList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandList"


    // $ANTLR start "ruleOperandList"
    // InternalSQLParser.g:2488:1: ruleOperandList : ( ( rule__OperandList__Group__0 ) ) ;
    public final void ruleOperandList() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2492:2: ( ( ( rule__OperandList__Group__0 ) ) )
            // InternalSQLParser.g:2493:2: ( ( rule__OperandList__Group__0 ) )
            {
            // InternalSQLParser.g:2493:2: ( ( rule__OperandList__Group__0 ) )
            // InternalSQLParser.g:2494:3: ( rule__OperandList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup()); 
            }
            // InternalSQLParser.g:2495:3: ( rule__OperandList__Group__0 )
            // InternalSQLParser.g:2495:4: rule__OperandList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandList"


    // $ANTLR start "entryRuleOperandGroup"
    // InternalSQLParser.g:2504:1: entryRuleOperandGroup : ruleOperandGroup EOF ;
    public final void entryRuleOperandGroup() throws RecognitionException {
        try {
            // InternalSQLParser.g:2505:1: ( ruleOperandGroup EOF )
            // InternalSQLParser.g:2506:1: ruleOperandGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandGroup"


    // $ANTLR start "ruleOperandGroup"
    // InternalSQLParser.g:2513:1: ruleOperandGroup : ( ( rule__OperandGroup__Alternatives ) ) ;
    public final void ruleOperandGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2517:2: ( ( ( rule__OperandGroup__Alternatives ) ) )
            // InternalSQLParser.g:2518:2: ( ( rule__OperandGroup__Alternatives ) )
            {
            // InternalSQLParser.g:2518:2: ( ( rule__OperandGroup__Alternatives ) )
            // InternalSQLParser.g:2519:3: ( rule__OperandGroup__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2520:3: ( rule__OperandGroup__Alternatives )
            // InternalSQLParser.g:2520:4: rule__OperandGroup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandGroup"


    // $ANTLR start "entryRuleOperand"
    // InternalSQLParser.g:2529:1: entryRuleOperand : ruleOperand EOF ;
    public final void entryRuleOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2530:1: ( ruleOperand EOF )
            // InternalSQLParser.g:2531:1: ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalSQLParser.g:2538:1: ruleOperand : ( ( rule__Operand__Group__0 ) ) ;
    public final void ruleOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2542:2: ( ( ( rule__Operand__Group__0 ) ) )
            // InternalSQLParser.g:2543:2: ( ( rule__Operand__Group__0 ) )
            {
            // InternalSQLParser.g:2543:2: ( ( rule__Operand__Group__0 ) )
            // InternalSQLParser.g:2544:3: ( rule__Operand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:2545:3: ( rule__Operand__Group__0 )
            // InternalSQLParser.g:2545:4: rule__Operand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleOperandFragment"
    // InternalSQLParser.g:2554:1: entryRuleOperandFragment : ruleOperandFragment EOF ;
    public final void entryRuleOperandFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:2555:1: ( ruleOperandFragment EOF )
            // InternalSQLParser.g:2556:1: ruleOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFragment"


    // $ANTLR start "ruleOperandFragment"
    // InternalSQLParser.g:2563:1: ruleOperandFragment : ( ( rule__OperandFragment__Alternatives ) ) ;
    public final void ruleOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2567:2: ( ( ( rule__OperandFragment__Alternatives ) ) )
            // InternalSQLParser.g:2568:2: ( ( rule__OperandFragment__Alternatives ) )
            {
            // InternalSQLParser.g:2568:2: ( ( rule__OperandFragment__Alternatives ) )
            // InternalSQLParser.g:2569:3: ( rule__OperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:2570:3: ( rule__OperandFragment__Alternatives )
            // InternalSQLParser.g:2570:4: rule__OperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFragment"


    // $ANTLR start "entryRuleOperandFunction"
    // InternalSQLParser.g:2579:1: entryRuleOperandFunction : ruleOperandFunction EOF ;
    public final void entryRuleOperandFunction() throws RecognitionException {
        try {
            // InternalSQLParser.g:2580:1: ( ruleOperandFunction EOF )
            // InternalSQLParser.g:2581:1: ruleOperandFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFunction"


    // $ANTLR start "ruleOperandFunction"
    // InternalSQLParser.g:2588:1: ruleOperandFunction : ( ( rule__OperandFunction__Group__0 ) ) ;
    public final void ruleOperandFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2592:2: ( ( ( rule__OperandFunction__Group__0 ) ) )
            // InternalSQLParser.g:2593:2: ( ( rule__OperandFunction__Group__0 ) )
            {
            // InternalSQLParser.g:2593:2: ( ( rule__OperandFunction__Group__0 ) )
            // InternalSQLParser.g:2594:3: ( rule__OperandFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }
            // InternalSQLParser.g:2595:3: ( rule__OperandFunction__Group__0 )
            // InternalSQLParser.g:2595:4: rule__OperandFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFunction"


    // $ANTLR start "entryRuleFunctionExtract"
    // InternalSQLParser.g:2604:1: entryRuleFunctionExtract : ruleFunctionExtract EOF ;
    public final void entryRuleFunctionExtract() throws RecognitionException {
        try {
            // InternalSQLParser.g:2605:1: ( ruleFunctionExtract EOF )
            // InternalSQLParser.g:2606:1: ruleFunctionExtract EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionExtract"


    // $ANTLR start "ruleFunctionExtract"
    // InternalSQLParser.g:2613:1: ruleFunctionExtract : ( ( rule__FunctionExtract__Group__0 ) ) ;
    public final void ruleFunctionExtract() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2617:2: ( ( ( rule__FunctionExtract__Group__0 ) ) )
            // InternalSQLParser.g:2618:2: ( ( rule__FunctionExtract__Group__0 ) )
            {
            // InternalSQLParser.g:2618:2: ( ( rule__FunctionExtract__Group__0 ) )
            // InternalSQLParser.g:2619:3: ( rule__FunctionExtract__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }
            // InternalSQLParser.g:2620:3: ( rule__FunctionExtract__Group__0 )
            // InternalSQLParser.g:2620:4: rule__FunctionExtract__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionExtract"


    // $ANTLR start "entryRuleFunctionAnalytical"
    // InternalSQLParser.g:2629:1: entryRuleFunctionAnalytical : ruleFunctionAnalytical EOF ;
    public final void entryRuleFunctionAnalytical() throws RecognitionException {
        try {
            // InternalSQLParser.g:2630:1: ( ruleFunctionAnalytical EOF )
            // InternalSQLParser.g:2631:1: ruleFunctionAnalytical EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionAnalytical"


    // $ANTLR start "ruleFunctionAnalytical"
    // InternalSQLParser.g:2638:1: ruleFunctionAnalytical : ( ( rule__FunctionAnalytical__Group__0 ) ) ;
    public final void ruleFunctionAnalytical() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2642:2: ( ( ( rule__FunctionAnalytical__Group__0 ) ) )
            // InternalSQLParser.g:2643:2: ( ( rule__FunctionAnalytical__Group__0 ) )
            {
            // InternalSQLParser.g:2643:2: ( ( rule__FunctionAnalytical__Group__0 ) )
            // InternalSQLParser.g:2644:3: ( rule__FunctionAnalytical__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }
            // InternalSQLParser.g:2645:3: ( rule__FunctionAnalytical__Group__0 )
            // InternalSQLParser.g:2645:4: rule__FunctionAnalytical__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionAnalytical"


    // $ANTLR start "entryRuleAnalyticClause"
    // InternalSQLParser.g:2654:1: entryRuleAnalyticClause : ruleAnalyticClause EOF ;
    public final void entryRuleAnalyticClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2655:1: ( ruleAnalyticClause EOF )
            // InternalSQLParser.g:2656:1: ruleAnalyticClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticClause"


    // $ANTLR start "ruleAnalyticClause"
    // InternalSQLParser.g:2663:1: ruleAnalyticClause : ( ( rule__AnalyticClause__Group__0 ) ) ;
    public final void ruleAnalyticClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2667:2: ( ( ( rule__AnalyticClause__Group__0 ) ) )
            // InternalSQLParser.g:2668:2: ( ( rule__AnalyticClause__Group__0 ) )
            {
            // InternalSQLParser.g:2668:2: ( ( rule__AnalyticClause__Group__0 ) )
            // InternalSQLParser.g:2669:3: ( rule__AnalyticClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2670:3: ( rule__AnalyticClause__Group__0 )
            // InternalSQLParser.g:2670:4: rule__AnalyticClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticClause"


    // $ANTLR start "entryRuleWindowingClause"
    // InternalSQLParser.g:2679:1: entryRuleWindowingClause : ruleWindowingClause EOF ;
    public final void entryRuleWindowingClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2680:1: ( ruleWindowingClause EOF )
            // InternalSQLParser.g:2681:1: ruleWindowingClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClause"


    // $ANTLR start "ruleWindowingClause"
    // InternalSQLParser.g:2688:1: ruleWindowingClause : ( ( rule__WindowingClause__Group__0 ) ) ;
    public final void ruleWindowingClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2692:2: ( ( ( rule__WindowingClause__Group__0 ) ) )
            // InternalSQLParser.g:2693:2: ( ( rule__WindowingClause__Group__0 ) )
            {
            // InternalSQLParser.g:2693:2: ( ( rule__WindowingClause__Group__0 ) )
            // InternalSQLParser.g:2694:3: ( rule__WindowingClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2695:3: ( rule__WindowingClause__Group__0 )
            // InternalSQLParser.g:2695:4: rule__WindowingClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClause"


    // $ANTLR start "entryRuleWindowingClauseBetween"
    // InternalSQLParser.g:2704:1: entryRuleWindowingClauseBetween : ruleWindowingClauseBetween EOF ;
    public final void entryRuleWindowingClauseBetween() throws RecognitionException {
        try {
            // InternalSQLParser.g:2705:1: ( ruleWindowingClauseBetween EOF )
            // InternalSQLParser.g:2706:1: ruleWindowingClauseBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseBetween"


    // $ANTLR start "ruleWindowingClauseBetween"
    // InternalSQLParser.g:2713:1: ruleWindowingClauseBetween : ( ( rule__WindowingClauseBetween__Group__0 ) ) ;
    public final void ruleWindowingClauseBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2717:2: ( ( ( rule__WindowingClauseBetween__Group__0 ) ) )
            // InternalSQLParser.g:2718:2: ( ( rule__WindowingClauseBetween__Group__0 ) )
            {
            // InternalSQLParser.g:2718:2: ( ( rule__WindowingClauseBetween__Group__0 ) )
            // InternalSQLParser.g:2719:3: ( rule__WindowingClauseBetween__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }
            // InternalSQLParser.g:2720:3: ( rule__WindowingClauseBetween__Group__0 )
            // InternalSQLParser.g:2720:4: rule__WindowingClauseBetween__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseBetween"


    // $ANTLR start "entryRuleWindowingClauseOperandFollowing"
    // InternalSQLParser.g:2729:1: entryRuleWindowingClauseOperandFollowing : ruleWindowingClauseOperandFollowing EOF ;
    public final void entryRuleWindowingClauseOperandFollowing() throws RecognitionException {
        try {
            // InternalSQLParser.g:2730:1: ( ruleWindowingClauseOperandFollowing EOF )
            // InternalSQLParser.g:2731:1: ruleWindowingClauseOperandFollowing EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandFollowing"


    // $ANTLR start "ruleWindowingClauseOperandFollowing"
    // InternalSQLParser.g:2738:1: ruleWindowingClauseOperandFollowing : ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandFollowing() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2742:2: ( ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) )
            // InternalSQLParser.g:2743:2: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            {
            // InternalSQLParser.g:2743:2: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            // InternalSQLParser.g:2744:3: ( rule__WindowingClauseOperandFollowing__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }
            // InternalSQLParser.g:2745:3: ( rule__WindowingClauseOperandFollowing__Group__0 )
            // InternalSQLParser.g:2745:4: rule__WindowingClauseOperandFollowing__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandFollowing"


    // $ANTLR start "entryRuleWindowingClauseOperandPreceding"
    // InternalSQLParser.g:2754:1: entryRuleWindowingClauseOperandPreceding : ruleWindowingClauseOperandPreceding EOF ;
    public final void entryRuleWindowingClauseOperandPreceding() throws RecognitionException {
        try {
            // InternalSQLParser.g:2755:1: ( ruleWindowingClauseOperandPreceding EOF )
            // InternalSQLParser.g:2756:1: ruleWindowingClauseOperandPreceding EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandPreceding"


    // $ANTLR start "ruleWindowingClauseOperandPreceding"
    // InternalSQLParser.g:2763:1: ruleWindowingClauseOperandPreceding : ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandPreceding() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2767:2: ( ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) )
            // InternalSQLParser.g:2768:2: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            {
            // InternalSQLParser.g:2768:2: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            // InternalSQLParser.g:2769:3: ( rule__WindowingClauseOperandPreceding__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }
            // InternalSQLParser.g:2770:3: ( rule__WindowingClauseOperandPreceding__Group__0 )
            // InternalSQLParser.g:2770:4: rule__WindowingClauseOperandPreceding__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandPreceding"


    // $ANTLR start "entryRuleOrderByClause"
    // InternalSQLParser.g:2779:1: entryRuleOrderByClause : ruleOrderByClause EOF ;
    public final void entryRuleOrderByClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2780:1: ( ruleOrderByClause EOF )
            // InternalSQLParser.g:2781:1: ruleOrderByClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClause"


    // $ANTLR start "ruleOrderByClause"
    // InternalSQLParser.g:2788:1: ruleOrderByClause : ( ( rule__OrderByClause__Group__0 ) ) ;
    public final void ruleOrderByClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2792:2: ( ( ( rule__OrderByClause__Group__0 ) ) )
            // InternalSQLParser.g:2793:2: ( ( rule__OrderByClause__Group__0 ) )
            {
            // InternalSQLParser.g:2793:2: ( ( rule__OrderByClause__Group__0 ) )
            // InternalSQLParser.g:2794:3: ( rule__OrderByClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2795:3: ( rule__OrderByClause__Group__0 )
            // InternalSQLParser.g:2795:4: rule__OrderByClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClause"


    // $ANTLR start "entryRuleOrderByClauseArgs"
    // InternalSQLParser.g:2804:1: entryRuleOrderByClauseArgs : ruleOrderByClauseArgs EOF ;
    public final void entryRuleOrderByClauseArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:2805:1: ( ruleOrderByClauseArgs EOF )
            // InternalSQLParser.g:2806:1: ruleOrderByClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArgs"


    // $ANTLR start "ruleOrderByClauseArgs"
    // InternalSQLParser.g:2813:1: ruleOrderByClauseArgs : ( ( rule__OrderByClauseArgs__Group__0 ) ) ;
    public final void ruleOrderByClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2817:2: ( ( ( rule__OrderByClauseArgs__Group__0 ) ) )
            // InternalSQLParser.g:2818:2: ( ( rule__OrderByClauseArgs__Group__0 ) )
            {
            // InternalSQLParser.g:2818:2: ( ( rule__OrderByClauseArgs__Group__0 ) )
            // InternalSQLParser.g:2819:3: ( rule__OrderByClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2820:3: ( rule__OrderByClauseArgs__Group__0 )
            // InternalSQLParser.g:2820:4: rule__OrderByClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArgs"


    // $ANTLR start "entryRuleOrderByClauseArg"
    // InternalSQLParser.g:2829:1: entryRuleOrderByClauseArg : ruleOrderByClauseArg EOF ;
    public final void entryRuleOrderByClauseArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:2830:1: ( ruleOrderByClauseArg EOF )
            // InternalSQLParser.g:2831:1: ruleOrderByClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArg"


    // $ANTLR start "ruleOrderByClauseArg"
    // InternalSQLParser.g:2838:1: ruleOrderByClauseArg : ( ( rule__OrderByClauseArg__Group__0 ) ) ;
    public final void ruleOrderByClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2842:2: ( ( ( rule__OrderByClauseArg__Group__0 ) ) )
            // InternalSQLParser.g:2843:2: ( ( rule__OrderByClauseArg__Group__0 ) )
            {
            // InternalSQLParser.g:2843:2: ( ( rule__OrderByClauseArg__Group__0 ) )
            // InternalSQLParser.g:2844:3: ( rule__OrderByClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:2845:3: ( rule__OrderByClauseArg__Group__0 )
            // InternalSQLParser.g:2845:4: rule__OrderByClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArg"


    // $ANTLR start "entryRuleQueryPartitionClause"
    // InternalSQLParser.g:2854:1: entryRuleQueryPartitionClause : ruleQueryPartitionClause EOF ;
    public final void entryRuleQueryPartitionClause() throws RecognitionException {
        try {
            // InternalSQLParser.g:2855:1: ( ruleQueryPartitionClause EOF )
            // InternalSQLParser.g:2856:1: ruleQueryPartitionClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQueryPartitionClause"


    // $ANTLR start "ruleQueryPartitionClause"
    // InternalSQLParser.g:2863:1: ruleQueryPartitionClause : ( ( rule__QueryPartitionClause__Group__0 ) ) ;
    public final void ruleQueryPartitionClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2867:2: ( ( ( rule__QueryPartitionClause__Group__0 ) ) )
            // InternalSQLParser.g:2868:2: ( ( rule__QueryPartitionClause__Group__0 ) )
            {
            // InternalSQLParser.g:2868:2: ( ( rule__QueryPartitionClause__Group__0 ) )
            // InternalSQLParser.g:2869:3: ( rule__QueryPartitionClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }
            // InternalSQLParser.g:2870:3: ( rule__QueryPartitionClause__Group__0 )
            // InternalSQLParser.g:2870:4: rule__QueryPartitionClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQueryPartitionClause"


    // $ANTLR start "entryRuleAnalyticExprArgs"
    // InternalSQLParser.g:2879:1: entryRuleAnalyticExprArgs : ruleAnalyticExprArgs EOF ;
    public final void entryRuleAnalyticExprArgs() throws RecognitionException {
        try {
            // InternalSQLParser.g:2880:1: ( ruleAnalyticExprArgs EOF )
            // InternalSQLParser.g:2881:1: ruleAnalyticExprArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArgs"


    // $ANTLR start "ruleAnalyticExprArgs"
    // InternalSQLParser.g:2888:1: ruleAnalyticExprArgs : ( ( rule__AnalyticExprArgs__Group__0 ) ) ;
    public final void ruleAnalyticExprArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2892:2: ( ( ( rule__AnalyticExprArgs__Group__0 ) ) )
            // InternalSQLParser.g:2893:2: ( ( rule__AnalyticExprArgs__Group__0 ) )
            {
            // InternalSQLParser.g:2893:2: ( ( rule__AnalyticExprArgs__Group__0 ) )
            // InternalSQLParser.g:2894:3: ( rule__AnalyticExprArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }
            // InternalSQLParser.g:2895:3: ( rule__AnalyticExprArgs__Group__0 )
            // InternalSQLParser.g:2895:4: rule__AnalyticExprArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArgs"


    // $ANTLR start "entryRuleAnalyticExprArg"
    // InternalSQLParser.g:2904:1: entryRuleAnalyticExprArg : ruleAnalyticExprArg EOF ;
    public final void entryRuleAnalyticExprArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:2905:1: ( ruleAnalyticExprArg EOF )
            // InternalSQLParser.g:2906:1: ruleAnalyticExprArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArg"


    // $ANTLR start "ruleAnalyticExprArg"
    // InternalSQLParser.g:2913:1: ruleAnalyticExprArg : ( ( rule__AnalyticExprArg__Group__0 ) ) ;
    public final void ruleAnalyticExprArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2917:2: ( ( ( rule__AnalyticExprArg__Group__0 ) ) )
            // InternalSQLParser.g:2918:2: ( ( rule__AnalyticExprArg__Group__0 ) )
            {
            // InternalSQLParser.g:2918:2: ( ( rule__AnalyticExprArg__Group__0 ) )
            // InternalSQLParser.g:2919:3: ( rule__AnalyticExprArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:2920:3: ( rule__AnalyticExprArg__Group__0 )
            // InternalSQLParser.g:2920:4: rule__AnalyticExprArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArg"


    // $ANTLR start "entryRuleOpFunctionArg"
    // InternalSQLParser.g:2929:1: entryRuleOpFunctionArg : ruleOpFunctionArg EOF ;
    public final void entryRuleOpFunctionArg() throws RecognitionException {
        try {
            // InternalSQLParser.g:2930:1: ( ruleOpFunctionArg EOF )
            // InternalSQLParser.g:2931:1: ruleOpFunctionArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArg"


    // $ANTLR start "ruleOpFunctionArg"
    // InternalSQLParser.g:2938:1: ruleOpFunctionArg : ( ( rule__OpFunctionArg__Group__0 ) ) ;
    public final void ruleOpFunctionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2942:2: ( ( ( rule__OpFunctionArg__Group__0 ) ) )
            // InternalSQLParser.g:2943:2: ( ( rule__OpFunctionArg__Group__0 ) )
            {
            // InternalSQLParser.g:2943:2: ( ( rule__OpFunctionArg__Group__0 ) )
            // InternalSQLParser.g:2944:3: ( rule__OpFunctionArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }
            // InternalSQLParser.g:2945:3: ( rule__OpFunctionArg__Group__0 )
            // InternalSQLParser.g:2945:4: rule__OpFunctionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArg"


    // $ANTLR start "entryRuleOpFunctionArgOperand"
    // InternalSQLParser.g:2954:1: entryRuleOpFunctionArgOperand : ruleOpFunctionArgOperand EOF ;
    public final void entryRuleOpFunctionArgOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:2955:1: ( ruleOpFunctionArgOperand EOF )
            // InternalSQLParser.g:2956:1: ruleOpFunctionArgOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgOperand"


    // $ANTLR start "ruleOpFunctionArgOperand"
    // InternalSQLParser.g:2963:1: ruleOpFunctionArgOperand : ( ( rule__OpFunctionArgOperand__OpAssignment ) ) ;
    public final void ruleOpFunctionArgOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2967:2: ( ( ( rule__OpFunctionArgOperand__OpAssignment ) ) )
            // InternalSQLParser.g:2968:2: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            {
            // InternalSQLParser.g:2968:2: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            // InternalSQLParser.g:2969:3: ( rule__OpFunctionArgOperand__OpAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }
            // InternalSQLParser.g:2970:3: ( rule__OpFunctionArgOperand__OpAssignment )
            // InternalSQLParser.g:2970:4: rule__OpFunctionArgOperand__OpAssignment
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgOperand"


    // $ANTLR start "entryRuleOpFunctionCast"
    // InternalSQLParser.g:2979:1: entryRuleOpFunctionCast : ruleOpFunctionCast EOF ;
    public final void entryRuleOpFunctionCast() throws RecognitionException {
        try {
            // InternalSQLParser.g:2980:1: ( ruleOpFunctionCast EOF )
            // InternalSQLParser.g:2981:1: ruleOpFunctionCast EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionCast"


    // $ANTLR start "ruleOpFunctionCast"
    // InternalSQLParser.g:2988:1: ruleOpFunctionCast : ( ( rule__OpFunctionCast__Group__0 ) ) ;
    public final void ruleOpFunctionCast() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:2992:2: ( ( ( rule__OpFunctionCast__Group__0 ) ) )
            // InternalSQLParser.g:2993:2: ( ( rule__OpFunctionCast__Group__0 ) )
            {
            // InternalSQLParser.g:2993:2: ( ( rule__OpFunctionCast__Group__0 ) )
            // InternalSQLParser.g:2994:3: ( rule__OpFunctionCast__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }
            // InternalSQLParser.g:2995:3: ( rule__OpFunctionCast__Group__0 )
            // InternalSQLParser.g:2995:4: rule__OpFunctionCast__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionCast"


    // $ANTLR start "entryRuleOpFunctionArgAgregate"
    // InternalSQLParser.g:3004:1: entryRuleOpFunctionArgAgregate : ruleOpFunctionArgAgregate EOF ;
    public final void entryRuleOpFunctionArgAgregate() throws RecognitionException {
        try {
            // InternalSQLParser.g:3005:1: ( ruleOpFunctionArgAgregate EOF )
            // InternalSQLParser.g:3006:1: ruleOpFunctionArgAgregate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgAgregate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgAgregate"


    // $ANTLR start "ruleOpFunctionArgAgregate"
    // InternalSQLParser.g:3013:1: ruleOpFunctionArgAgregate : ( ( rule__OpFunctionArgAgregate__Group__0 ) ) ;
    public final void ruleOpFunctionArgAgregate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3017:2: ( ( ( rule__OpFunctionArgAgregate__Group__0 ) ) )
            // InternalSQLParser.g:3018:2: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            {
            // InternalSQLParser.g:3018:2: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            // InternalSQLParser.g:3019:3: ( rule__OpFunctionArgAgregate__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }
            // InternalSQLParser.g:3020:3: ( rule__OpFunctionArgAgregate__Group__0 )
            // InternalSQLParser.g:3020:4: rule__OpFunctionArgAgregate__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgAgregate"


    // $ANTLR start "entryRuleXOperandFragment"
    // InternalSQLParser.g:3029:1: entryRuleXOperandFragment : ruleXOperandFragment EOF ;
    public final void entryRuleXOperandFragment() throws RecognitionException {
        try {
            // InternalSQLParser.g:3030:1: ( ruleXOperandFragment EOF )
            // InternalSQLParser.g:3031:1: ruleXOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXOperandFragment"


    // $ANTLR start "ruleXOperandFragment"
    // InternalSQLParser.g:3038:1: ruleXOperandFragment : ( ( rule__XOperandFragment__Alternatives ) ) ;
    public final void ruleXOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3042:2: ( ( ( rule__XOperandFragment__Alternatives ) ) )
            // InternalSQLParser.g:3043:2: ( ( rule__XOperandFragment__Alternatives ) )
            {
            // InternalSQLParser.g:3043:2: ( ( rule__XOperandFragment__Alternatives ) )
            // InternalSQLParser.g:3044:3: ( rule__XOperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3045:3: ( rule__XOperandFragment__Alternatives )
            // InternalSQLParser.g:3045:4: rule__XOperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XOperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXOperandFragment"


    // $ANTLR start "entryRuleParameterOperand"
    // InternalSQLParser.g:3054:1: entryRuleParameterOperand : ruleParameterOperand EOF ;
    public final void entryRuleParameterOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3055:1: ( ruleParameterOperand EOF )
            // InternalSQLParser.g:3056:1: ruleParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterOperand"


    // $ANTLR start "ruleParameterOperand"
    // InternalSQLParser.g:3063:1: ruleParameterOperand : ( ( rule__ParameterOperand__PrmAssignment ) ) ;
    public final void ruleParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3067:2: ( ( ( rule__ParameterOperand__PrmAssignment ) ) )
            // InternalSQLParser.g:3068:2: ( ( rule__ParameterOperand__PrmAssignment ) )
            {
            // InternalSQLParser.g:3068:2: ( ( rule__ParameterOperand__PrmAssignment ) )
            // InternalSQLParser.g:3069:3: ( rule__ParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSQLParser.g:3070:3: ( rule__ParameterOperand__PrmAssignment )
            // InternalSQLParser.g:3070:4: rule__ParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterOperand"


    // $ANTLR start "entryRuleExclamationParameterOperand"
    // InternalSQLParser.g:3079:1: entryRuleExclamationParameterOperand : ruleExclamationParameterOperand EOF ;
    public final void entryRuleExclamationParameterOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3080:1: ( ruleExclamationParameterOperand EOF )
            // InternalSQLParser.g:3081:1: ruleExclamationParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclamationParameterOperand"


    // $ANTLR start "ruleExclamationParameterOperand"
    // InternalSQLParser.g:3088:1: ruleExclamationParameterOperand : ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) ;
    public final void ruleExclamationParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3092:2: ( ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) )
            // InternalSQLParser.g:3093:2: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            {
            // InternalSQLParser.g:3093:2: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            // InternalSQLParser.g:3094:3: ( rule__ExclamationParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSQLParser.g:3095:3: ( rule__ExclamationParameterOperand__PrmAssignment )
            // InternalSQLParser.g:3095:4: rule__ExclamationParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExclamationParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclamationParameterOperand"


    // $ANTLR start "entryRuleColumnOperand"
    // InternalSQLParser.g:3104:1: entryRuleColumnOperand : ruleColumnOperand EOF ;
    public final void entryRuleColumnOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3105:1: ( ruleColumnOperand EOF )
            // InternalSQLParser.g:3106:1: ruleColumnOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOperand"


    // $ANTLR start "ruleColumnOperand"
    // InternalSQLParser.g:3113:1: ruleColumnOperand : ( ( rule__ColumnOperand__Group__0 ) ) ;
    public final void ruleColumnOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3117:2: ( ( ( rule__ColumnOperand__Group__0 ) ) )
            // InternalSQLParser.g:3118:2: ( ( rule__ColumnOperand__Group__0 ) )
            {
            // InternalSQLParser.g:3118:2: ( ( rule__ColumnOperand__Group__0 ) )
            // InternalSQLParser.g:3119:3: ( rule__ColumnOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:3120:3: ( rule__ColumnOperand__Group__0 )
            // InternalSQLParser.g:3120:4: rule__ColumnOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOperand"


    // $ANTLR start "entryRuleSubQueryOperand"
    // InternalSQLParser.g:3129:1: entryRuleSubQueryOperand : ruleSubQueryOperand EOF ;
    public final void entryRuleSubQueryOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3130:1: ( ruleSubQueryOperand EOF )
            // InternalSQLParser.g:3131:1: ruleSubQueryOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubQueryOperand"


    // $ANTLR start "ruleSubQueryOperand"
    // InternalSQLParser.g:3138:1: ruleSubQueryOperand : ( ( rule__SubQueryOperand__Group__0 ) ) ;
    public final void ruleSubQueryOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3142:2: ( ( ( rule__SubQueryOperand__Group__0 ) ) )
            // InternalSQLParser.g:3143:2: ( ( rule__SubQueryOperand__Group__0 ) )
            {
            // InternalSQLParser.g:3143:2: ( ( rule__SubQueryOperand__Group__0 ) )
            // InternalSQLParser.g:3144:3: ( rule__SubQueryOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }
            // InternalSQLParser.g:3145:3: ( rule__SubQueryOperand__Group__0 )
            // InternalSQLParser.g:3145:4: rule__SubQueryOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubQueryOperand"


    // $ANTLR start "entryRuleScalarOperand"
    // InternalSQLParser.g:3154:1: entryRuleScalarOperand : ruleScalarOperand EOF ;
    public final void entryRuleScalarOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3155:1: ( ruleScalarOperand EOF )
            // InternalSQLParser.g:3156:1: ruleScalarOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarOperand"


    // $ANTLR start "ruleScalarOperand"
    // InternalSQLParser.g:3163:1: ruleScalarOperand : ( ( rule__ScalarOperand__Alternatives ) ) ;
    public final void ruleScalarOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3167:2: ( ( ( rule__ScalarOperand__Alternatives ) ) )
            // InternalSQLParser.g:3168:2: ( ( rule__ScalarOperand__Alternatives ) )
            {
            // InternalSQLParser.g:3168:2: ( ( rule__ScalarOperand__Alternatives ) )
            // InternalSQLParser.g:3169:3: ( rule__ScalarOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3170:3: ( rule__ScalarOperand__Alternatives )
            // InternalSQLParser.g:3170:4: rule__ScalarOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarOperand"


    // $ANTLR start "entryRuleScalarNumberOperand"
    // InternalSQLParser.g:3179:1: entryRuleScalarNumberOperand : ruleScalarNumberOperand EOF ;
    public final void entryRuleScalarNumberOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3180:1: ( ruleScalarNumberOperand EOF )
            // InternalSQLParser.g:3181:1: ruleScalarNumberOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarNumberOperand"


    // $ANTLR start "ruleScalarNumberOperand"
    // InternalSQLParser.g:3188:1: ruleScalarNumberOperand : ( ( rule__ScalarNumberOperand__Alternatives ) ) ;
    public final void ruleScalarNumberOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3192:2: ( ( ( rule__ScalarNumberOperand__Alternatives ) ) )
            // InternalSQLParser.g:3193:2: ( ( rule__ScalarNumberOperand__Alternatives ) )
            {
            // InternalSQLParser.g:3193:2: ( ( rule__ScalarNumberOperand__Alternatives ) )
            // InternalSQLParser.g:3194:3: ( rule__ScalarNumberOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3195:3: ( rule__ScalarNumberOperand__Alternatives )
            // InternalSQLParser.g:3195:4: rule__ScalarNumberOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarNumberOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarNumberOperand"


    // $ANTLR start "entryRuleSQLCASE"
    // InternalSQLParser.g:3204:1: entryRuleSQLCASE : ruleSQLCASE EOF ;
    public final void entryRuleSQLCASE() throws RecognitionException {
        try {
            // InternalSQLParser.g:3205:1: ( ruleSQLCASE EOF )
            // InternalSQLParser.g:3206:1: ruleSQLCASE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCASE"


    // $ANTLR start "ruleSQLCASE"
    // InternalSQLParser.g:3213:1: ruleSQLCASE : ( ( rule__SQLCASE__Group__0 ) ) ;
    public final void ruleSQLCASE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3217:2: ( ( ( rule__SQLCASE__Group__0 ) ) )
            // InternalSQLParser.g:3218:2: ( ( rule__SQLCASE__Group__0 ) )
            {
            // InternalSQLParser.g:3218:2: ( ( rule__SQLCASE__Group__0 ) )
            // InternalSQLParser.g:3219:3: ( rule__SQLCASE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getGroup()); 
            }
            // InternalSQLParser.g:3220:3: ( rule__SQLCASE__Group__0 )
            // InternalSQLParser.g:3220:4: rule__SQLCASE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCASE"


    // $ANTLR start "entryRuleSQLCaseWhens"
    // InternalSQLParser.g:3229:1: entryRuleSQLCaseWhens : ruleSQLCaseWhens EOF ;
    public final void entryRuleSQLCaseWhens() throws RecognitionException {
        try {
            // InternalSQLParser.g:3230:1: ( ruleSQLCaseWhens EOF )
            // InternalSQLParser.g:3231:1: ruleSQLCaseWhens EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCaseWhens"


    // $ANTLR start "ruleSQLCaseWhens"
    // InternalSQLParser.g:3238:1: ruleSQLCaseWhens : ( ( rule__SQLCaseWhens__Group__0 ) ) ;
    public final void ruleSQLCaseWhens() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3242:2: ( ( ( rule__SQLCaseWhens__Group__0 ) ) )
            // InternalSQLParser.g:3243:2: ( ( rule__SQLCaseWhens__Group__0 ) )
            {
            // InternalSQLParser.g:3243:2: ( ( rule__SQLCaseWhens__Group__0 ) )
            // InternalSQLParser.g:3244:3: ( rule__SQLCaseWhens__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }
            // InternalSQLParser.g:3245:3: ( rule__SQLCaseWhens__Group__0 )
            // InternalSQLParser.g:3245:4: rule__SQLCaseWhens__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCaseWhens"


    // $ANTLR start "entryRuleSqlCaseWhen"
    // InternalSQLParser.g:3254:1: entryRuleSqlCaseWhen : ruleSqlCaseWhen EOF ;
    public final void entryRuleSqlCaseWhen() throws RecognitionException {
        try {
            // InternalSQLParser.g:3255:1: ( ruleSqlCaseWhen EOF )
            // InternalSQLParser.g:3256:1: ruleSqlCaseWhen EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSqlCaseWhen"


    // $ANTLR start "ruleSqlCaseWhen"
    // InternalSQLParser.g:3263:1: ruleSqlCaseWhen : ( ( rule__SqlCaseWhen__Group__0 ) ) ;
    public final void ruleSqlCaseWhen() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3267:2: ( ( ( rule__SqlCaseWhen__Group__0 ) ) )
            // InternalSQLParser.g:3268:2: ( ( rule__SqlCaseWhen__Group__0 ) )
            {
            // InternalSQLParser.g:3268:2: ( ( rule__SqlCaseWhen__Group__0 ) )
            // InternalSQLParser.g:3269:3: ( rule__SqlCaseWhen__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }
            // InternalSQLParser.g:3270:3: ( rule__SqlCaseWhen__Group__0 )
            // InternalSQLParser.g:3270:4: rule__SqlCaseWhen__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSqlCaseWhen"


    // $ANTLR start "entryRuleJoinType"
    // InternalSQLParser.g:3279:1: entryRuleJoinType : ruleJoinType EOF ;
    public final void entryRuleJoinType() throws RecognitionException {
        try {
            // InternalSQLParser.g:3280:1: ( ruleJoinType EOF )
            // InternalSQLParser.g:3281:1: ruleJoinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinType"


    // $ANTLR start "ruleJoinType"
    // InternalSQLParser.g:3288:1: ruleJoinType : ( ( rule__JoinType__Group__0 ) ) ;
    public final void ruleJoinType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3292:2: ( ( ( rule__JoinType__Group__0 ) ) )
            // InternalSQLParser.g:3293:2: ( ( rule__JoinType__Group__0 ) )
            {
            // InternalSQLParser.g:3293:2: ( ( rule__JoinType__Group__0 ) )
            // InternalSQLParser.g:3294:3: ( rule__JoinType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getGroup()); 
            }
            // InternalSQLParser.g:3295:3: ( rule__JoinType__Group__0 )
            // InternalSQLParser.g:3295:4: rule__JoinType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinType"


    // $ANTLR start "entryRuleDBID"
    // InternalSQLParser.g:3304:1: entryRuleDBID : ruleDBID EOF ;
    public final void entryRuleDBID() throws RecognitionException {
        try {
            // InternalSQLParser.g:3305:1: ( ruleDBID EOF )
            // InternalSQLParser.g:3306:1: ruleDBID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDBID"


    // $ANTLR start "ruleDBID"
    // InternalSQLParser.g:3313:1: ruleDBID : ( ( rule__DBID__Alternatives ) ) ;
    public final void ruleDBID() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3317:2: ( ( ( rule__DBID__Alternatives ) ) )
            // InternalSQLParser.g:3318:2: ( ( rule__DBID__Alternatives ) )
            {
            // InternalSQLParser.g:3318:2: ( ( rule__DBID__Alternatives ) )
            // InternalSQLParser.g:3319:3: ( rule__DBID__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3320:3: ( rule__DBID__Alternatives )
            // InternalSQLParser.g:3320:4: rule__DBID__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DBID__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDBID"


    // $ANTLR start "entryRuleSignedLiteral"
    // InternalSQLParser.g:3329:1: entryRuleSignedLiteral : ruleSignedLiteral EOF ;
    public final void entryRuleSignedLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3330:1: ( ruleSignedLiteral EOF )
            // InternalSQLParser.g:3331:1: ruleSignedLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSignedLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSignedLiteral"


    // $ANTLR start "ruleSignedLiteral"
    // InternalSQLParser.g:3338:1: ruleSignedLiteral : ( ( rule__SignedLiteral__Alternatives ) ) ;
    public final void ruleSignedLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3342:2: ( ( ( rule__SignedLiteral__Alternatives ) ) )
            // InternalSQLParser.g:3343:2: ( ( rule__SignedLiteral__Alternatives ) )
            {
            // InternalSQLParser.g:3343:2: ( ( rule__SignedLiteral__Alternatives ) )
            // InternalSQLParser.g:3344:3: ( rule__SignedLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3345:3: ( rule__SignedLiteral__Alternatives )
            // InternalSQLParser.g:3345:4: rule__SignedLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSignedLiteral"


    // $ANTLR start "entryRuleLiteral"
    // InternalSQLParser.g:3354:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3355:1: ( ruleLiteral EOF )
            // InternalSQLParser.g:3356:1: ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalSQLParser.g:3363:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3367:2: ( ( ( rule__Literal__Alternatives ) ) )
            // InternalSQLParser.g:3368:2: ( ( rule__Literal__Alternatives ) )
            {
            // InternalSQLParser.g:3368:2: ( ( rule__Literal__Alternatives ) )
            // InternalSQLParser.g:3369:3: ( rule__Literal__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLiteralAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3370:3: ( rule__Literal__Alternatives )
            // InternalSQLParser.g:3370:4: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Literal__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleTextLiteral"
    // InternalSQLParser.g:3379:1: entryRuleTextLiteral : ruleTextLiteral EOF ;
    public final void entryRuleTextLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3380:1: ( ruleTextLiteral EOF )
            // InternalSQLParser.g:3381:1: ruleTextLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTextLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTextLiteral"


    // $ANTLR start "ruleTextLiteral"
    // InternalSQLParser.g:3388:1: ruleTextLiteral : ( RULE_STRING_ ) ;
    public final void ruleTextLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3392:2: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:3393:2: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:3393:2: ( RULE_STRING_ )
            // InternalSQLParser.g:3394:3: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTextLiteralAccess().getSTRING_TerminalRuleCall()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTextLiteralAccess().getSTRING_TerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTextLiteral"


    // $ANTLR start "entryRuleNumLiteral"
    // InternalSQLParser.g:3404:1: entryRuleNumLiteral : ruleNumLiteral EOF ;
    public final void entryRuleNumLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3405:1: ( ruleNumLiteral EOF )
            // InternalSQLParser.g:3406:1: ruleNumLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumLiteral"


    // $ANTLR start "ruleNumLiteral"
    // InternalSQLParser.g:3413:1: ruleNumLiteral : ( RULE_INT ) ;
    public final void ruleNumLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3417:2: ( ( RULE_INT ) )
            // InternalSQLParser.g:3418:2: ( RULE_INT )
            {
            // InternalSQLParser.g:3418:2: ( RULE_INT )
            // InternalSQLParser.g:3419:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumLiteralAccess().getINTTerminalRuleCall()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumLiteralAccess().getINTTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumLiteral"


    // $ANTLR start "entryRuleTemporalLiteral"
    // InternalSQLParser.g:3429:1: entryRuleTemporalLiteral : ruleTemporalLiteral EOF ;
    public final void entryRuleTemporalLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3430:1: ( ruleTemporalLiteral EOF )
            // InternalSQLParser.g:3431:1: ruleTemporalLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTemporalLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTemporalLiteral"


    // $ANTLR start "ruleTemporalLiteral"
    // InternalSQLParser.g:3438:1: ruleTemporalLiteral : ( ( rule__TemporalLiteral__Alternatives ) ) ;
    public final void ruleTemporalLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3442:2: ( ( ( rule__TemporalLiteral__Alternatives ) ) )
            // InternalSQLParser.g:3443:2: ( ( rule__TemporalLiteral__Alternatives ) )
            {
            // InternalSQLParser.g:3443:2: ( ( rule__TemporalLiteral__Alternatives ) )
            // InternalSQLParser.g:3444:3: ( rule__TemporalLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3445:3: ( rule__TemporalLiteral__Alternatives )
            // InternalSQLParser.g:3445:4: rule__TemporalLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTemporalLiteral"


    // $ANTLR start "entryRuleBoolLiteral"
    // InternalSQLParser.g:3454:1: entryRuleBoolLiteral : ruleBoolLiteral EOF ;
    public final void entryRuleBoolLiteral() throws RecognitionException {
        try {
            // InternalSQLParser.g:3455:1: ( ruleBoolLiteral EOF )
            // InternalSQLParser.g:3456:1: ruleBoolLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolLiteral"


    // $ANTLR start "ruleBoolLiteral"
    // InternalSQLParser.g:3463:1: ruleBoolLiteral : ( ( rule__BoolLiteral__Alternatives ) ) ;
    public final void ruleBoolLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3467:2: ( ( ( rule__BoolLiteral__Alternatives ) ) )
            // InternalSQLParser.g:3468:2: ( ( rule__BoolLiteral__Alternatives ) )
            {
            // InternalSQLParser.g:3468:2: ( ( rule__BoolLiteral__Alternatives ) )
            // InternalSQLParser.g:3469:3: ( rule__BoolLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3470:3: ( rule__BoolLiteral__Alternatives )
            // InternalSQLParser.g:3470:4: rule__BoolLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BoolLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolLiteral"


    // $ANTLR start "entryRuleStringOperand"
    // InternalSQLParser.g:3479:1: entryRuleStringOperand : ruleStringOperand EOF ;
    public final void entryRuleStringOperand() throws RecognitionException {
        try {
            // InternalSQLParser.g:3480:1: ( ruleStringOperand EOF )
            // InternalSQLParser.g:3481:1: ruleStringOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringOperand"


    // $ANTLR start "ruleStringOperand"
    // InternalSQLParser.g:3488:1: ruleStringOperand : ( RULE_STRING_ ) ;
    public final void ruleStringOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3492:2: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:3493:2: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:3493:2: ( RULE_STRING_ )
            // InternalSQLParser.g:3494:3: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringOperand"


    // $ANTLR start "entryRuleFNAME"
    // InternalSQLParser.g:3504:1: entryRuleFNAME : ruleFNAME EOF ;
    public final void entryRuleFNAME() throws RecognitionException {
        try {
            // InternalSQLParser.g:3505:1: ( ruleFNAME EOF )
            // InternalSQLParser.g:3506:1: ruleFNAME EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFNAME"


    // $ANTLR start "ruleFNAME"
    // InternalSQLParser.g:3513:1: ruleFNAME : ( ( rule__FNAME__Group__0 ) ) ;
    public final void ruleFNAME() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3517:2: ( ( ( rule__FNAME__Group__0 ) ) )
            // InternalSQLParser.g:3518:2: ( ( rule__FNAME__Group__0 ) )
            {
            // InternalSQLParser.g:3518:2: ( ( rule__FNAME__Group__0 ) )
            // InternalSQLParser.g:3519:3: ( rule__FNAME__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getGroup()); 
            }
            // InternalSQLParser.g:3520:3: ( rule__FNAME__Group__0 )
            // InternalSQLParser.g:3520:4: rule__FNAME__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFNAME"


    // $ANTLR start "entryRuleUnsignedValue"
    // InternalSQLParser.g:3529:1: entryRuleUnsignedValue : ruleUnsignedValue EOF ;
    public final void entryRuleUnsignedValue() throws RecognitionException {
        try {
            // InternalSQLParser.g:3530:1: ( ruleUnsignedValue EOF )
            // InternalSQLParser.g:3531:1: ruleUnsignedValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnsignedValue"


    // $ANTLR start "ruleUnsignedValue"
    // InternalSQLParser.g:3538:1: ruleUnsignedValue : ( ( rule__UnsignedValue__IntegerAssignment ) ) ;
    public final void ruleUnsignedValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3542:2: ( ( ( rule__UnsignedValue__IntegerAssignment ) ) )
            // InternalSQLParser.g:3543:2: ( ( rule__UnsignedValue__IntegerAssignment ) )
            {
            // InternalSQLParser.g:3543:2: ( ( rule__UnsignedValue__IntegerAssignment ) )
            // InternalSQLParser.g:3544:3: ( rule__UnsignedValue__IntegerAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }
            // InternalSQLParser.g:3545:3: ( rule__UnsignedValue__IntegerAssignment )
            // InternalSQLParser.g:3545:4: rule__UnsignedValue__IntegerAssignment
            {
            pushFollow(FOLLOW_2);
            rule__UnsignedValue__IntegerAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnsignedValue"


    // $ANTLR start "ruleXFunction"
    // InternalSQLParser.g:3554:1: ruleXFunction : ( ( rule__XFunction__Alternatives ) ) ;
    public final void ruleXFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3558:1: ( ( ( rule__XFunction__Alternatives ) ) )
            // InternalSQLParser.g:3559:2: ( ( rule__XFunction__Alternatives ) )
            {
            // InternalSQLParser.g:3559:2: ( ( rule__XFunction__Alternatives ) )
            // InternalSQLParser.g:3560:3: ( rule__XFunction__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3561:3: ( rule__XFunction__Alternatives )
            // InternalSQLParser.g:3561:4: rule__XFunction__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XFunction__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXFunction"


    // $ANTLR start "ruleEXTRACT_VALUES"
    // InternalSQLParser.g:3570:1: ruleEXTRACT_VALUES : ( ( rule__EXTRACT_VALUES__Alternatives ) ) ;
    public final void ruleEXTRACT_VALUES() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3574:1: ( ( ( rule__EXTRACT_VALUES__Alternatives ) ) )
            // InternalSQLParser.g:3575:2: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            {
            // InternalSQLParser.g:3575:2: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            // InternalSQLParser.g:3576:3: ( rule__EXTRACT_VALUES__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }
            // InternalSQLParser.g:3577:3: ( rule__EXTRACT_VALUES__Alternatives )
            // InternalSQLParser.g:3577:4: rule__EXTRACT_VALUES__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EXTRACT_VALUES__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEXTRACT_VALUES"


    // $ANTLR start "rule__SimpleStatement__Alternatives"
    // InternalSQLParser.g:3585:1: rule__SimpleStatement__Alternatives : ( ( ( rule__SimpleStatement__SelectAssignment_0 ) ) | ( ( rule__SimpleStatement__InsertAssignment_1 ) ) | ( ( rule__SimpleStatement__CreateAssignment_2 ) ) );
    public final void rule__SimpleStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3589:1: ( ( ( rule__SimpleStatement__SelectAssignment_0 ) ) | ( ( rule__SimpleStatement__InsertAssignment_1 ) ) | ( ( rule__SimpleStatement__CreateAssignment_2 ) ) )
            int alt2=3;
            switch ( input.LA(1) ) {
            case SELECT:
            case WITH:
            case RULE_JRNPARAM:
                {
                alt2=1;
                }
                break;
            case INSERT:
                {
                alt2=2;
                }
                break;
            case CREATE:
                {
                alt2=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalSQLParser.g:3590:2: ( ( rule__SimpleStatement__SelectAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3590:2: ( ( rule__SimpleStatement__SelectAssignment_0 ) )
                    // InternalSQLParser.g:3591:3: ( rule__SimpleStatement__SelectAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStatementAccess().getSelectAssignment_0()); 
                    }
                    // InternalSQLParser.g:3592:3: ( rule__SimpleStatement__SelectAssignment_0 )
                    // InternalSQLParser.g:3592:4: rule__SimpleStatement__SelectAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStatement__SelectAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStatementAccess().getSelectAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3596:2: ( ( rule__SimpleStatement__InsertAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3596:2: ( ( rule__SimpleStatement__InsertAssignment_1 ) )
                    // InternalSQLParser.g:3597:3: ( rule__SimpleStatement__InsertAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStatementAccess().getInsertAssignment_1()); 
                    }
                    // InternalSQLParser.g:3598:3: ( rule__SimpleStatement__InsertAssignment_1 )
                    // InternalSQLParser.g:3598:4: rule__SimpleStatement__InsertAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStatement__InsertAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStatementAccess().getInsertAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3602:2: ( ( rule__SimpleStatement__CreateAssignment_2 ) )
                    {
                    // InternalSQLParser.g:3602:2: ( ( rule__SimpleStatement__CreateAssignment_2 ) )
                    // InternalSQLParser.g:3603:3: ( rule__SimpleStatement__CreateAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleStatementAccess().getCreateAssignment_2()); 
                    }
                    // InternalSQLParser.g:3604:3: ( rule__SimpleStatement__CreateAssignment_2 )
                    // InternalSQLParser.g:3604:4: rule__SimpleStatement__CreateAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__SimpleStatement__CreateAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleStatementAccess().getCreateAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStatement__Alternatives"


    // $ANTLR start "rule__TableElement__Alternatives"
    // InternalSQLParser.g:3612:1: rule__TableElement__Alternatives : ( ( ( rule__TableElement__ColumnDefinitionAssignment_0 ) ) | ( ( rule__TableElement__TableConstraintDefAssignment_1 ) ) );
    public final void rule__TableElement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3616:1: ( ( ( rule__TableElement__ColumnDefinitionAssignment_0 ) ) | ( ( rule__TableElement__TableConstraintDefAssignment_1 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==RULE_STRING) ) {
                alt3=1;
            }
            else if ( (LA3_0==FOREIGN||LA3_0==PRIMARY) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSQLParser.g:3617:2: ( ( rule__TableElement__ColumnDefinitionAssignment_0 ) )
                    {
                    // InternalSQLParser.g:3617:2: ( ( rule__TableElement__ColumnDefinitionAssignment_0 ) )
                    // InternalSQLParser.g:3618:3: ( rule__TableElement__ColumnDefinitionAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableElementAccess().getColumnDefinitionAssignment_0()); 
                    }
                    // InternalSQLParser.g:3619:3: ( rule__TableElement__ColumnDefinitionAssignment_0 )
                    // InternalSQLParser.g:3619:4: rule__TableElement__ColumnDefinitionAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableElement__ColumnDefinitionAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableElementAccess().getColumnDefinitionAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3623:2: ( ( rule__TableElement__TableConstraintDefAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3623:2: ( ( rule__TableElement__TableConstraintDefAssignment_1 ) )
                    // InternalSQLParser.g:3624:3: ( rule__TableElement__TableConstraintDefAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableElementAccess().getTableConstraintDefAssignment_1()); 
                    }
                    // InternalSQLParser.g:3625:3: ( rule__TableElement__TableConstraintDefAssignment_1 )
                    // InternalSQLParser.g:3625:4: rule__TableElement__TableConstraintDefAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableElement__TableConstraintDefAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableElementAccess().getTableConstraintDefAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElement__Alternatives"


    // $ANTLR start "rule__TableConstraintDef__Alternatives"
    // InternalSQLParser.g:3633:1: rule__TableConstraintDef__Alternatives : ( ( ( rule__TableConstraintDef__Group_0__0 ) ) | ( ( rule__TableConstraintDef__Group_1__0 ) ) );
    public final void rule__TableConstraintDef__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3637:1: ( ( ( rule__TableConstraintDef__Group_0__0 ) ) | ( ( rule__TableConstraintDef__Group_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==PRIMARY) ) {
                alt4=1;
            }
            else if ( (LA4_0==FOREIGN) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSQLParser.g:3638:2: ( ( rule__TableConstraintDef__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:3638:2: ( ( rule__TableConstraintDef__Group_0__0 ) )
                    // InternalSQLParser.g:3639:3: ( rule__TableConstraintDef__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableConstraintDefAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:3640:3: ( rule__TableConstraintDef__Group_0__0 )
                    // InternalSQLParser.g:3640:4: rule__TableConstraintDef__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableConstraintDef__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableConstraintDefAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3644:2: ( ( rule__TableConstraintDef__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:3644:2: ( ( rule__TableConstraintDef__Group_1__0 ) )
                    // InternalSQLParser.g:3645:3: ( rule__TableConstraintDef__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableConstraintDefAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:3646:3: ( rule__TableConstraintDef__Group_1__0 )
                    // InternalSQLParser.g:3646:4: rule__TableConstraintDef__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableConstraintDef__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableConstraintDefAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Alternatives"


    // $ANTLR start "rule__SimpleType__Alternatives"
    // InternalSQLParser.g:3654:1: rule__SimpleType__Alternatives : ( ( INT ) | ( TINYINT ) | ( SMALLINT ) | ( MEDIUMINT ) | ( BIGINT ) | ( REAL ) | ( DOUBLE ) | ( FLOAT ) | ( DECIMAL ) | ( NUMERIC ) | ( BIT ) | ( BOOL ) | ( CHAR ) | ( VARCHAR ) | ( BINARY ) | ( VARBINARY ) | ( DATE ) | ( TIME ) | ( TIMESTAMP ) | ( DATETIME ) | ( BLOB ) | ( TEXT ) );
    public final void rule__SimpleType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3658:1: ( ( INT ) | ( TINYINT ) | ( SMALLINT ) | ( MEDIUMINT ) | ( BIGINT ) | ( REAL ) | ( DOUBLE ) | ( FLOAT ) | ( DECIMAL ) | ( NUMERIC ) | ( BIT ) | ( BOOL ) | ( CHAR ) | ( VARCHAR ) | ( BINARY ) | ( VARBINARY ) | ( DATE ) | ( TIME ) | ( TIMESTAMP ) | ( DATETIME ) | ( BLOB ) | ( TEXT ) )
            int alt5=22;
            switch ( input.LA(1) ) {
            case INT:
                {
                alt5=1;
                }
                break;
            case TINYINT:
                {
                alt5=2;
                }
                break;
            case SMALLINT:
                {
                alt5=3;
                }
                break;
            case MEDIUMINT:
                {
                alt5=4;
                }
                break;
            case BIGINT:
                {
                alt5=5;
                }
                break;
            case REAL:
                {
                alt5=6;
                }
                break;
            case DOUBLE:
                {
                alt5=7;
                }
                break;
            case FLOAT:
                {
                alt5=8;
                }
                break;
            case DECIMAL:
                {
                alt5=9;
                }
                break;
            case NUMERIC:
                {
                alt5=10;
                }
                break;
            case BIT:
                {
                alt5=11;
                }
                break;
            case BOOL:
                {
                alt5=12;
                }
                break;
            case CHAR:
                {
                alt5=13;
                }
                break;
            case VARCHAR:
                {
                alt5=14;
                }
                break;
            case BINARY:
                {
                alt5=15;
                }
                break;
            case VARBINARY:
                {
                alt5=16;
                }
                break;
            case DATE:
                {
                alt5=17;
                }
                break;
            case TIME:
                {
                alt5=18;
                }
                break;
            case TIMESTAMP:
                {
                alt5=19;
                }
                break;
            case DATETIME:
                {
                alt5=20;
                }
                break;
            case BLOB:
                {
                alt5=21;
                }
                break;
            case TEXT:
                {
                alt5=22;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSQLParser.g:3659:2: ( INT )
                    {
                    // InternalSQLParser.g:3659:2: ( INT )
                    // InternalSQLParser.g:3660:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getINTKeyword_0()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getINTKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3665:2: ( TINYINT )
                    {
                    // InternalSQLParser.g:3665:2: ( TINYINT )
                    // InternalSQLParser.g:3666:3: TINYINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getTINYINTKeyword_1()); 
                    }
                    match(input,TINYINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getTINYINTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3671:2: ( SMALLINT )
                    {
                    // InternalSQLParser.g:3671:2: ( SMALLINT )
                    // InternalSQLParser.g:3672:3: SMALLINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getSMALLINTKeyword_2()); 
                    }
                    match(input,SMALLINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getSMALLINTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3677:2: ( MEDIUMINT )
                    {
                    // InternalSQLParser.g:3677:2: ( MEDIUMINT )
                    // InternalSQLParser.g:3678:3: MEDIUMINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getMEDIUMINTKeyword_3()); 
                    }
                    match(input,MEDIUMINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getMEDIUMINTKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3683:2: ( BIGINT )
                    {
                    // InternalSQLParser.g:3683:2: ( BIGINT )
                    // InternalSQLParser.g:3684:3: BIGINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBIGINTKeyword_4()); 
                    }
                    match(input,BIGINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBIGINTKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3689:2: ( REAL )
                    {
                    // InternalSQLParser.g:3689:2: ( REAL )
                    // InternalSQLParser.g:3690:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getREALKeyword_5()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getREALKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:3695:2: ( DOUBLE )
                    {
                    // InternalSQLParser.g:3695:2: ( DOUBLE )
                    // InternalSQLParser.g:3696:3: DOUBLE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getDOUBLEKeyword_6()); 
                    }
                    match(input,DOUBLE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getDOUBLEKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:3701:2: ( FLOAT )
                    {
                    // InternalSQLParser.g:3701:2: ( FLOAT )
                    // InternalSQLParser.g:3702:3: FLOAT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getFLOATKeyword_7()); 
                    }
                    match(input,FLOAT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getFLOATKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:3707:2: ( DECIMAL )
                    {
                    // InternalSQLParser.g:3707:2: ( DECIMAL )
                    // InternalSQLParser.g:3708:3: DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getDECIMALKeyword_8()); 
                    }
                    match(input,DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getDECIMALKeyword_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:3713:2: ( NUMERIC )
                    {
                    // InternalSQLParser.g:3713:2: ( NUMERIC )
                    // InternalSQLParser.g:3714:3: NUMERIC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getNUMERICKeyword_9()); 
                    }
                    match(input,NUMERIC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getNUMERICKeyword_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:3719:2: ( BIT )
                    {
                    // InternalSQLParser.g:3719:2: ( BIT )
                    // InternalSQLParser.g:3720:3: BIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBITKeyword_10()); 
                    }
                    match(input,BIT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBITKeyword_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:3725:2: ( BOOL )
                    {
                    // InternalSQLParser.g:3725:2: ( BOOL )
                    // InternalSQLParser.g:3726:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBOOLKeyword_11()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBOOLKeyword_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSQLParser.g:3731:2: ( CHAR )
                    {
                    // InternalSQLParser.g:3731:2: ( CHAR )
                    // InternalSQLParser.g:3732:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getCHARKeyword_12()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getCHARKeyword_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSQLParser.g:3737:2: ( VARCHAR )
                    {
                    // InternalSQLParser.g:3737:2: ( VARCHAR )
                    // InternalSQLParser.g:3738:3: VARCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getVARCHARKeyword_13()); 
                    }
                    match(input,VARCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getVARCHARKeyword_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSQLParser.g:3743:2: ( BINARY )
                    {
                    // InternalSQLParser.g:3743:2: ( BINARY )
                    // InternalSQLParser.g:3744:3: BINARY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBINARYKeyword_14()); 
                    }
                    match(input,BINARY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBINARYKeyword_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalSQLParser.g:3749:2: ( VARBINARY )
                    {
                    // InternalSQLParser.g:3749:2: ( VARBINARY )
                    // InternalSQLParser.g:3750:3: VARBINARY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getVARBINARYKeyword_15()); 
                    }
                    match(input,VARBINARY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getVARBINARYKeyword_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalSQLParser.g:3755:2: ( DATE )
                    {
                    // InternalSQLParser.g:3755:2: ( DATE )
                    // InternalSQLParser.g:3756:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getDATEKeyword_16()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getDATEKeyword_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalSQLParser.g:3761:2: ( TIME )
                    {
                    // InternalSQLParser.g:3761:2: ( TIME )
                    // InternalSQLParser.g:3762:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getTIMEKeyword_17()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getTIMEKeyword_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalSQLParser.g:3767:2: ( TIMESTAMP )
                    {
                    // InternalSQLParser.g:3767:2: ( TIMESTAMP )
                    // InternalSQLParser.g:3768:3: TIMESTAMP
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getTIMESTAMPKeyword_18()); 
                    }
                    match(input,TIMESTAMP,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getTIMESTAMPKeyword_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalSQLParser.g:3773:2: ( DATETIME )
                    {
                    // InternalSQLParser.g:3773:2: ( DATETIME )
                    // InternalSQLParser.g:3774:3: DATETIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getDATETIMEKeyword_19()); 
                    }
                    match(input,DATETIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getDATETIMEKeyword_19()); 
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalSQLParser.g:3779:2: ( BLOB )
                    {
                    // InternalSQLParser.g:3779:2: ( BLOB )
                    // InternalSQLParser.g:3780:3: BLOB
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getBLOBKeyword_20()); 
                    }
                    match(input,BLOB,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getBLOBKeyword_20()); 
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalSQLParser.g:3785:2: ( TEXT )
                    {
                    // InternalSQLParser.g:3785:2: ( TEXT )
                    // InternalSQLParser.g:3786:3: TEXT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSimpleTypeAccess().getTEXTKeyword_21()); 
                    }
                    match(input,TEXT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSimpleTypeAccess().getTEXTKeyword_21()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleType__Alternatives"


    // $ANTLR start "rule__FieldOptions__Alternatives"
    // InternalSQLParser.g:3795:1: rule__FieldOptions__Alternatives : ( ( SIGNED ) | ( UNSIGNED ) | ( ZEROFILL ) );
    public final void rule__FieldOptions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3799:1: ( ( SIGNED ) | ( UNSIGNED ) | ( ZEROFILL ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case SIGNED:
                {
                alt6=1;
                }
                break;
            case UNSIGNED:
                {
                alt6=2;
                }
                break;
            case ZEROFILL:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalSQLParser.g:3800:2: ( SIGNED )
                    {
                    // InternalSQLParser.g:3800:2: ( SIGNED )
                    // InternalSQLParser.g:3801:3: SIGNED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFieldOptionsAccess().getSIGNEDKeyword_0()); 
                    }
                    match(input,SIGNED,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFieldOptionsAccess().getSIGNEDKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3806:2: ( UNSIGNED )
                    {
                    // InternalSQLParser.g:3806:2: ( UNSIGNED )
                    // InternalSQLParser.g:3807:3: UNSIGNED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFieldOptionsAccess().getUNSIGNEDKeyword_1()); 
                    }
                    match(input,UNSIGNED,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFieldOptionsAccess().getUNSIGNEDKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3812:2: ( ZEROFILL )
                    {
                    // InternalSQLParser.g:3812:2: ( ZEROFILL )
                    // InternalSQLParser.g:3813:3: ZEROFILL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFieldOptionsAccess().getZEROFILLKeyword_2()); 
                    }
                    match(input,ZEROFILL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFieldOptionsAccess().getZEROFILLKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldOptions__Alternatives"


    // $ANTLR start "rule__ColumnAttribute__Alternatives"
    // InternalSQLParser.g:3822:1: rule__ColumnAttribute__Alternatives : ( ( ruleNullAttribute ) | ( ruleDefaultValue ) | ( ruleAutoIncrement ) | ( rulePrimaryKey ) | ( ruleUniqueKey ) | ( ruleComment ) );
    public final void rule__ColumnAttribute__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3826:1: ( ( ruleNullAttribute ) | ( ruleDefaultValue ) | ( ruleAutoIncrement ) | ( rulePrimaryKey ) | ( ruleUniqueKey ) | ( ruleComment ) )
            int alt7=6;
            switch ( input.LA(1) ) {
            case NULL:
            case NOT:
                {
                alt7=1;
                }
                break;
            case DEFAULT:
                {
                alt7=2;
                }
                break;
            case AUTO_INCREMENT:
                {
                alt7=3;
                }
                break;
            case PRIMARY:
                {
                alt7=4;
                }
                break;
            case UNIQUE:
                {
                alt7=5;
                }
                break;
            case COMMENT:
                {
                alt7=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalSQLParser.g:3827:2: ( ruleNullAttribute )
                    {
                    // InternalSQLParser.g:3827:2: ( ruleNullAttribute )
                    // InternalSQLParser.g:3828:3: ruleNullAttribute
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getNullAttributeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNullAttribute();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getNullAttributeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3833:2: ( ruleDefaultValue )
                    {
                    // InternalSQLParser.g:3833:2: ( ruleDefaultValue )
                    // InternalSQLParser.g:3834:3: ruleDefaultValue
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getDefaultValueParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDefaultValue();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getDefaultValueParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3839:2: ( ruleAutoIncrement )
                    {
                    // InternalSQLParser.g:3839:2: ( ruleAutoIncrement )
                    // InternalSQLParser.g:3840:3: ruleAutoIncrement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getAutoIncrementParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAutoIncrement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getAutoIncrementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3845:2: ( rulePrimaryKey )
                    {
                    // InternalSQLParser.g:3845:2: ( rulePrimaryKey )
                    // InternalSQLParser.g:3846:3: rulePrimaryKey
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getPrimaryKeyParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePrimaryKey();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getPrimaryKeyParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:3851:2: ( ruleUniqueKey )
                    {
                    // InternalSQLParser.g:3851:2: ( ruleUniqueKey )
                    // InternalSQLParser.g:3852:3: ruleUniqueKey
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getUniqueKeyParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUniqueKey();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getUniqueKeyParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:3857:2: ( ruleComment )
                    {
                    // InternalSQLParser.g:3857:2: ( ruleComment )
                    // InternalSQLParser.g:3858:3: ruleComment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnAttributeAccess().getCommentParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnAttributeAccess().getCommentParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnAttribute__Alternatives"


    // $ANTLR start "rule__DefaultValue__Alternatives_1"
    // InternalSQLParser.g:3867:1: rule__DefaultValue__Alternatives_1 : ( ( ruleSignedLiteral ) | ( NOW ) );
    public final void rule__DefaultValue__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3871:1: ( ( ruleSignedLiteral ) | ( NOW ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==TIMESTAMP||LA8_0==FALSE||LA8_0==DATE||LA8_0==NULL||(LA8_0>=TIME && LA8_0<=TRUE)||LA8_0==PlusSign||LA8_0==HyphenMinus||LA8_0==RULE_INT||LA8_0==RULE_STRING_) ) {
                alt8=1;
            }
            else if ( (LA8_0==NOW) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSQLParser.g:3872:2: ( ruleSignedLiteral )
                    {
                    // InternalSQLParser.g:3872:2: ( ruleSignedLiteral )
                    // InternalSQLParser.g:3873:3: ruleSignedLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefaultValueAccess().getSignedLiteralParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSignedLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefaultValueAccess().getSignedLiteralParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3878:2: ( NOW )
                    {
                    // InternalSQLParser.g:3878:2: ( NOW )
                    // InternalSQLParser.g:3879:3: NOW
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefaultValueAccess().getNOWKeyword_1_1()); 
                    }
                    match(input,NOW,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefaultValueAccess().getNOWKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Alternatives_1"


    // $ANTLR start "rule__FetchFirst__RowAlternatives_1_0"
    // InternalSQLParser.g:3888:1: rule__FetchFirst__RowAlternatives_1_0 : ( ( ROW ) | ( ROWS ) );
    public final void rule__FetchFirst__RowAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3892:1: ( ( ROW ) | ( ROWS ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==ROW) ) {
                alt9=1;
            }
            else if ( (LA9_0==ROWS) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSQLParser.g:3893:2: ( ROW )
                    {
                    // InternalSQLParser.g:3893:2: ( ROW )
                    // InternalSQLParser.g:3894:3: ROW
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }
                    match(input,ROW,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3899:2: ( ROWS )
                    {
                    // InternalSQLParser.g:3899:2: ( ROWS )
                    // InternalSQLParser.g:3900:3: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAlternatives_1_0"


    // $ANTLR start "rule__Limit__Alternatives"
    // InternalSQLParser.g:3909:1: rule__Limit__Alternatives : ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) );
    public final void rule__Limit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3913:1: ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==ALL) ) {
                alt10=1;
            }
            else if ( (LA10_0==RULE_UNSIGNED) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSQLParser.g:3914:2: ( ( rule__Limit__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:3914:2: ( ( rule__Limit__Group_0__0 ) )
                    // InternalSQLParser.g:3915:3: ( rule__Limit__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:3916:3: ( rule__Limit__Group_0__0 )
                    // InternalSQLParser.g:3916:4: rule__Limit__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3920:2: ( ( rule__Limit__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:3920:2: ( ( rule__Limit__Group_1__0 ) )
                    // InternalSQLParser.g:3921:3: ( rule__Limit__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:3922:3: ( rule__Limit__Group_1__0 )
                    // InternalSQLParser.g:3922:4: rule__Limit__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Alternatives"


    // $ANTLR start "rule__SelectSubSet__OpAlternatives_0_0"
    // InternalSQLParser.g:3930:1: rule__SelectSubSet__OpAlternatives_0_0 : ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) );
    public final void rule__SelectSubSet__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3934:1: ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) )
            int alt11=4;
            switch ( input.LA(1) ) {
            case UNION:
                {
                alt11=1;
                }
                break;
            case INTERSECT:
                {
                alt11=2;
                }
                break;
            case MINUS:
                {
                alt11=3;
                }
                break;
            case EXCEPT:
                {
                alt11=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalSQLParser.g:3935:2: ( UNION )
                    {
                    // InternalSQLParser.g:3935:2: ( UNION )
                    // InternalSQLParser.g:3936:3: UNION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }
                    match(input,UNION,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3941:2: ( INTERSECT )
                    {
                    // InternalSQLParser.g:3941:2: ( INTERSECT )
                    // InternalSQLParser.g:3942:3: INTERSECT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }
                    match(input,INTERSECT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:3947:2: ( MINUS )
                    {
                    // InternalSQLParser.g:3947:2: ( MINUS )
                    // InternalSQLParser.g:3948:3: MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }
                    match(input,MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:3953:2: ( EXCEPT )
                    {
                    // InternalSQLParser.g:3953:2: ( EXCEPT )
                    // InternalSQLParser.g:3954:3: EXCEPT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }
                    match(input,EXCEPT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAlternatives_0_0"


    // $ANTLR start "rule__Select__Alternatives_2_1"
    // InternalSQLParser.g:3963:1: rule__Select__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) );
    public final void rule__Select__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3967:1: ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_INT) ) {
                alt12=1;
            }
            else if ( (LA12_0==RULE_SIGNED_DOUBLE) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalSQLParser.g:3968:2: ( RULE_INT )
                    {
                    // InternalSQLParser.g:3968:2: ( RULE_INT )
                    // InternalSQLParser.g:3969:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3974:2: ( RULE_SIGNED_DOUBLE )
                    {
                    // InternalSQLParser.g:3974:2: ( RULE_SIGNED_DOUBLE )
                    // InternalSQLParser.g:3975:3: RULE_SIGNED_DOUBLE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Alternatives_2_1"


    // $ANTLR start "rule__ColumnOrAlias__Alternatives"
    // InternalSQLParser.g:3984:1: rule__ColumnOrAlias__Alternatives : ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) );
    public final void rule__ColumnOrAlias__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:3988:1: ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) )
            int alt13=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==EOF||LA13_1==FROM||LA13_1==LeftParenthesisPlusSignRightParenthesis||LA13_1==AS||(LA13_1>=VerticalLineVerticalLine && LA13_1<=HyphenMinus)||LA13_1==Solidus||LA13_1==RULE_STAR||(LA13_1>=RULE_STRING && LA13_1<=RULE_ID)) ) {
                    alt13=1;
                }
                else if ( (LA13_1==FullStop) ) {
                    int LA13_6 = input.LA(3);

                    if ( ((LA13_6>=RULE_STRING && LA13_6<=RULE_ID)) ) {
                        alt13=1;
                    }
                    else if ( (LA13_6==RULE_STAR) ) {
                        alt13=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 6, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DBNAME:
                {
                int LA13_2 = input.LA(2);

                if ( (LA13_2==FullStop) ) {
                    int LA13_6 = input.LA(3);

                    if ( ((LA13_6>=RULE_STRING && LA13_6<=RULE_ID)) ) {
                        alt13=1;
                    }
                    else if ( (LA13_6==RULE_STAR) ) {
                        alt13=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA13_2==EOF||LA13_2==FROM||LA13_2==LeftParenthesisPlusSignRightParenthesis||LA13_2==AS||(LA13_2>=VerticalLineVerticalLine && LA13_2<=HyphenMinus)||LA13_2==Solidus||LA13_2==RULE_STAR||(LA13_2>=RULE_STRING && LA13_2<=RULE_ID)) ) {
                    alt13=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
                {
                int LA13_3 = input.LA(2);

                if ( (LA13_3==FullStop) ) {
                    int LA13_6 = input.LA(3);

                    if ( ((LA13_6>=RULE_STRING && LA13_6<=RULE_ID)) ) {
                        alt13=1;
                    }
                    else if ( (LA13_6==RULE_STAR) ) {
                        alt13=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA13_3==EOF||LA13_3==FROM||LA13_3==LeftParenthesisPlusSignRightParenthesis||LA13_3==AS||(LA13_3>=VerticalLineVerticalLine && LA13_3<=HyphenMinus)||LA13_3==Solidus||LA13_3==RULE_STAR||(LA13_3>=RULE_STRING && LA13_3<=RULE_ID)) ) {
                    alt13=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 3, input);

                    throw nvae;
                }
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt13=1;
                }
                break;
            case RULE_STAR:
                {
                alt13=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSQLParser.g:3989:2: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:3989:2: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    // InternalSQLParser.g:3990:3: ( rule__ColumnOrAlias__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:3991:3: ( rule__ColumnOrAlias__Group_0__0 )
                    // InternalSQLParser.g:3991:4: rule__ColumnOrAlias__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:3995:2: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    {
                    // InternalSQLParser.g:3995:2: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    // InternalSQLParser.g:3996:3: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }
                    // InternalSQLParser.g:3997:3: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    // InternalSQLParser.g:3997:4: rule__ColumnOrAlias__AllColsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AllColsAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4001:2: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4001:2: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    // InternalSQLParser.g:4002:3: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }
                    // InternalSQLParser.g:4003:3: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    // InternalSQLParser.g:4003:4: rule__ColumnOrAlias__DbAllColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__DbAllColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Alternatives"


    // $ANTLR start "rule__FromTableJoin__Alternatives_2"
    // InternalSQLParser.g:4011:1: rule__FromTableJoin__Alternatives_2 : ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) );
    public final void rule__FromTableJoin__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4015:1: ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==ON) ) {
                alt14=1;
            }
            else if ( (LA14_0==USING) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSQLParser.g:4016:2: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    {
                    // InternalSQLParser.g:4016:2: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    // InternalSQLParser.g:4017:3: ( rule__FromTableJoin__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }
                    // InternalSQLParser.g:4018:3: ( rule__FromTableJoin__Group_2_0__0 )
                    // InternalSQLParser.g:4018:4: rule__FromTableJoin__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4022:2: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4022:2: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    // InternalSQLParser.g:4023:3: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4024:3: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    // InternalSQLParser.g:4024:4: rule__FromTableJoin__JoinCondAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__JoinCondAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Alternatives_2"


    // $ANTLR start "rule__TableOrAlias__Alternatives_0"
    // InternalSQLParser.g:4032:1: rule__TableOrAlias__Alternatives_0 : ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) );
    public final void rule__TableOrAlias__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4036:1: ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) )
            int alt15=3;
            int LA15_0 = input.LA(1);

            if ( ((LA15_0>=RULE_STRING && LA15_0<=RULE_ID)) ) {
                alt15=1;
            }
            else if ( (LA15_0==LeftParenthesis) ) {
                int LA15_2 = input.LA(2);

                if ( (LA15_2==VALUES) ) {
                    alt15=3;
                }
                else if ( (LA15_2==SELECT) ) {
                    alt15=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalSQLParser.g:4037:2: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    {
                    // InternalSQLParser.g:4037:2: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    // InternalSQLParser.g:4038:3: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }
                    // InternalSQLParser.g:4039:3: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    // InternalSQLParser.g:4039:4: rule__TableOrAlias__TfullAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TfullAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4043:2: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    {
                    // InternalSQLParser.g:4043:2: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    // InternalSQLParser.g:4044:3: ( rule__TableOrAlias__SqAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }
                    // InternalSQLParser.g:4045:3: ( rule__TableOrAlias__SqAssignment_0_1 )
                    // InternalSQLParser.g:4045:4: rule__TableOrAlias__SqAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__SqAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4049:2: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    {
                    // InternalSQLParser.g:4049:2: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    // InternalSQLParser.g:4050:3: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }
                    // InternalSQLParser.g:4051:3: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    // InternalSQLParser.g:4051:4: rule__TableOrAlias__ValuesAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__ValuesAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_0"


    // $ANTLR start "rule__TableOrAlias__Alternatives_1"
    // InternalSQLParser.g:4059:1: rule__TableOrAlias__Alternatives_1 : ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) );
    public final void rule__TableOrAlias__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4063:1: ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==PIVOT) ) {
                alt16=1;
            }
            else if ( (LA16_0==UNPIVOT) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSQLParser.g:4064:2: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:4064:2: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    // InternalSQLParser.g:4065:3: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:4066:3: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    // InternalSQLParser.g:4066:4: rule__TableOrAlias__PivotAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__PivotAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4070:2: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:4070:2: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    // InternalSQLParser.g:4071:3: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:4072:3: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    // InternalSQLParser.g:4072:4: rule__TableOrAlias__UnpivotAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__UnpivotAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_1"


    // $ANTLR start "rule__RowValue__Alternatives"
    // InternalSQLParser.g:4080:1: rule__RowValue__Alternatives : ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) );
    public final void rule__RowValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4084:1: ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( ((LA17_0>=RULE_UNSIGNED && LA17_0<=RULE_SIGNED_DOUBLE)||LA17_0==RULE_STRING_) ) {
                alt17=1;
            }
            else if ( (LA17_0==NULL) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSQLParser.g:4085:2: ( ruleScalarNumberOperand )
                    {
                    // InternalSQLParser.g:4085:2: ( ruleScalarNumberOperand )
                    // InternalSQLParser.g:4086:3: ruleScalarNumberOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarNumberOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4091:2: ( ( rule__RowValue__NullAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4091:2: ( ( rule__RowValue__NullAssignment_1 ) )
                    // InternalSQLParser.g:4092:3: ( rule__RowValue__NullAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }
                    // InternalSQLParser.g:4093:3: ( rule__RowValue__NullAssignment_1 )
                    // InternalSQLParser.g:4093:4: rule__RowValue__NullAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValue__NullAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__Alternatives"


    // $ANTLR start "rule__PivotInClause__Alternatives_2"
    // InternalSQLParser.g:4101:1: rule__PivotInClause__Alternatives_2 : ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) );
    public final void rule__PivotInClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4105:1: ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) )
            int alt18=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA18_1 = input.LA(2);

                if ( ((LA18_1>=RULE_STRING && LA18_1<=RULE_ID)) ) {
                    alt18=2;
                }
                else if ( (LA18_1==SELECT) ) {
                    alt18=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt18=2;
                }
                break;
            case ANY:
                {
                alt18=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalSQLParser.g:4106:2: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4106:2: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    // InternalSQLParser.g:4107:3: ( rule__PivotInClause__SqAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4108:3: ( rule__PivotInClause__SqAssignment_2_0 )
                    // InternalSQLParser.g:4108:4: rule__PivotInClause__SqAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__SqAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4112:2: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4112:2: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    // InternalSQLParser.g:4113:3: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4114:3: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    // InternalSQLParser.g:4114:4: rule__PivotInClause__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4118:2: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    {
                    // InternalSQLParser.g:4118:2: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    // InternalSQLParser.g:4119:3: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }
                    // InternalSQLParser.g:4120:3: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    // InternalSQLParser.g:4120:4: rule__PivotInClause__PinanyAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__PinanyAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Alternatives_2"


    // $ANTLR start "rule__UnpivotTable__Alternatives_1_0"
    // InternalSQLParser.g:4128:1: rule__UnpivotTable__Alternatives_1_0 : ( ( INCLUDE ) | ( EXCLUDE ) );
    public final void rule__UnpivotTable__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4132:1: ( ( INCLUDE ) | ( EXCLUDE ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==INCLUDE) ) {
                alt19=1;
            }
            else if ( (LA19_0==EXCLUDE) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSQLParser.g:4133:2: ( INCLUDE )
                    {
                    // InternalSQLParser.g:4133:2: ( INCLUDE )
                    // InternalSQLParser.g:4134:3: INCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }
                    match(input,INCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4139:2: ( EXCLUDE )
                    {
                    // InternalSQLParser.g:4139:2: ( EXCLUDE )
                    // InternalSQLParser.g:4140:3: EXCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }
                    match(input,EXCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Alternatives_1_0"


    // $ANTLR start "rule__PivotForClause__Alternatives_1"
    // InternalSQLParser.g:4149:1: rule__PivotForClause__Alternatives_1 : ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) );
    public final void rule__PivotForClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4153:1: ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( ((LA20_0>=RULE_STRING && LA20_0<=RULE_ID)) ) {
                alt20=1;
            }
            else if ( (LA20_0==LeftParenthesis) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalSQLParser.g:4154:2: ( ruleColumnFull )
                    {
                    // InternalSQLParser.g:4154:2: ( ruleColumnFull )
                    // InternalSQLParser.g:4155:3: ruleColumnFull
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleColumnFull();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4160:2: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:4160:2: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    // InternalSQLParser.g:4161:3: ( rule__PivotForClause__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:4162:3: ( rule__PivotForClause__Group_1_1__0 )
                    // InternalSQLParser.g:4162:4: rule__PivotForClause__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotForClause__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Alternatives_1"


    // $ANTLR start "rule__PivotColumns__Alternatives"
    // InternalSQLParser.g:4170:1: rule__PivotColumns__Alternatives : ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) );
    public final void rule__PivotColumns__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4174:1: ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( ((LA21_0>=RULE_STRING && LA21_0<=RULE_ID)) ) {
                alt21=1;
            }
            else if ( (LA21_0==LeftParenthesis) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalSQLParser.g:4175:2: ( rulePivotCol )
                    {
                    // InternalSQLParser.g:4175:2: ( rulePivotCol )
                    // InternalSQLParser.g:4176:3: rulePivotCol
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePivotCol();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4181:2: ( ( rule__PivotColumns__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:4181:2: ( ( rule__PivotColumns__Group_1__0 ) )
                    // InternalSQLParser.g:4182:3: ( rule__PivotColumns__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:4183:3: ( rule__PivotColumns__Group_1__0 )
                    // InternalSQLParser.g:4183:4: rule__PivotColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Alternatives"


    // $ANTLR start "rule__OrderByColumnFull__Alternatives_0"
    // InternalSQLParser.g:4191:1: rule__OrderByColumnFull__Alternatives_0 : ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) );
    public final void rule__OrderByColumnFull__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4195:1: ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( ((LA22_0>=RULE_STRING && LA22_0<=RULE_ID)) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_UNSIGNED) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalSQLParser.g:4196:2: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    {
                    // InternalSQLParser.g:4196:2: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    // InternalSQLParser.g:4197:3: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }
                    // InternalSQLParser.g:4198:3: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    // InternalSQLParser.g:4198:4: rule__OrderByColumnFull__ColOrderAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4202:2: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    {
                    // InternalSQLParser.g:4202:2: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    // InternalSQLParser.g:4203:3: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }
                    // InternalSQLParser.g:4204:3: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    // InternalSQLParser.g:4204:4: rule__OrderByColumnFull__ColOrderIntAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderIntAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Alternatives_0"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAlternatives_1_0"
    // InternalSQLParser.g:4212:1: rule__OrderByColumnFull__DirectionAlternatives_1_0 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByColumnFull__DirectionAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4216:1: ( ( ASC ) | ( DESC ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==ASC) ) {
                alt23=1;
            }
            else if ( (LA23_0==DESC) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSQLParser.g:4217:2: ( ASC )
                    {
                    // InternalSQLParser.g:4217:2: ( ASC )
                    // InternalSQLParser.g:4218:3: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4223:2: ( DESC )
                    {
                    // InternalSQLParser.g:4223:2: ( DESC )
                    // InternalSQLParser.g:4224:3: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAlternatives_1_0"


    // $ANTLR start "rule__GroupByColumnFull__Alternatives"
    // InternalSQLParser.g:4233:1: rule__GroupByColumnFull__Alternatives : ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) );
    public final void rule__GroupByColumnFull__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4237:1: ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA24_1 = input.LA(2);

                if ( (LA24_1==EOF||LA24_1==INTERSECT||LA24_1==EXCEPT||LA24_1==HAVING||LA24_1==OFFSET||LA24_1==FETCH||(LA24_1>=LIMIT && LA24_1<=MINUS)||LA24_1==ORDER||LA24_1==UNION||LA24_1==RightParenthesis||LA24_1==Comma||LA24_1==FullStop) ) {
                    alt24=1;
                }
                else if ( (LA24_1==LeftParenthesis) ) {
                    alt24=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt24=1;
                }
                break;
            case RULE_UNSIGNED:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSQLParser.g:4238:2: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4238:2: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    // InternalSQLParser.g:4239:3: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }
                    // InternalSQLParser.g:4240:3: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    // InternalSQLParser.g:4240:4: rule__GroupByColumnFull__ColGrByAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__ColGrByAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4244:2: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4244:2: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    // InternalSQLParser.g:4245:3: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }
                    // InternalSQLParser.g:4246:3: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    // InternalSQLParser.g:4246:4: rule__GroupByColumnFull__GbFunctionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GbFunctionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4250:2: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4250:2: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    // InternalSQLParser.g:4251:3: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }
                    // InternalSQLParser.g:4252:3: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    // InternalSQLParser.g:4252:4: rule__GroupByColumnFull__GrByIntAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GrByIntAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__Alternatives"
    // InternalSQLParser.g:4260:1: rule__ExpressionFragmentSecond__Alternatives : ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) );
    public final void rule__ExpressionFragmentSecond__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4264:1: ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==AND||LA25_0==OR) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_JRNPARAM) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSQLParser.g:4265:2: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:4265:2: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    // InternalSQLParser.g:4266:3: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:4267:3: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    // InternalSQLParser.g:4267:4: rule__ExpressionFragmentSecond__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4271:2: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4271:2: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    // InternalSQLParser.g:4272:3: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }
                    // InternalSQLParser.g:4273:3: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    // InternalSQLParser.g:4273:4: rule__ExpressionFragmentSecond__NotPrmAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__NotPrmAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"
    // InternalSQLParser.g:4281:1: rule__ExpressionFragmentSecond__CAlternatives_0_0_0 : ( ( AND ) | ( OR ) );
    public final void rule__ExpressionFragmentSecond__CAlternatives_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4285:1: ( ( AND ) | ( OR ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==AND) ) {
                alt26=1;
            }
            else if ( (LA26_0==OR) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSQLParser.g:4286:2: ( AND )
                    {
                    // InternalSQLParser.g:4286:2: ( AND )
                    // InternalSQLParser.g:4287:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4292:2: ( OR )
                    {
                    // InternalSQLParser.g:4292:2: ( OR )
                    // InternalSQLParser.g:4293:3: OR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }
                    match(input,OR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"


    // $ANTLR start "rule__ExpressionFragment__Alternatives"
    // InternalSQLParser.g:4302:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );
    public final void rule__ExpressionFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4306:1: ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) )
            int alt27=6;
            alt27 = dfa27.predict(input);
            switch (alt27) {
                case 1 :
                    // InternalSQLParser.g:4307:2: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4307:2: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    // InternalSQLParser.g:4308:3: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }
                    // InternalSQLParser.g:4309:3: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    // InternalSQLParser.g:4309:4: rule__ExpressionFragment__ExpgroupAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpgroupAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4313:2: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4313:2: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    // InternalSQLParser.g:4314:3: ( rule__ExpressionFragment__ExpAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }
                    // InternalSQLParser.g:4315:3: ( rule__ExpressionFragment__ExpAssignment_1 )
                    // InternalSQLParser.g:4315:4: rule__ExpressionFragment__ExpAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4319:2: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4319:2: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    // InternalSQLParser.g:4320:3: ( rule__ExpressionFragment__XexpAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }
                    // InternalSQLParser.g:4321:3: ( rule__ExpressionFragment__XexpAssignment_2 )
                    // InternalSQLParser.g:4321:4: rule__ExpressionFragment__XexpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__XexpAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4325:2: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4325:2: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    // InternalSQLParser.g:4326:3: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }
                    // InternalSQLParser.g:4327:3: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    // InternalSQLParser.g:4327:4: rule__ExpressionFragment__NotPrmAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__NotPrmAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4331:2: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    {
                    // InternalSQLParser.g:4331:2: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    // InternalSQLParser.g:4332:3: ( rule__ExpressionFragment__InAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }
                    // InternalSQLParser.g:4333:3: ( rule__ExpressionFragment__InAssignment_4 )
                    // InternalSQLParser.g:4333:4: rule__ExpressionFragment__InAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__InAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4337:2: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    {
                    // InternalSQLParser.g:4337:2: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    // InternalSQLParser.g:4338:3: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }
                    // InternalSQLParser.g:4339:3: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    // InternalSQLParser.g:4339:4: rule__ExpressionFragment__ExistsAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExistsAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__Alternatives"


    // $ANTLR start "rule__ExpressionFragment__XexpAlternatives_2_0"
    // InternalSQLParser.g:4347:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );
    public final void rule__ExpressionFragment__XexpAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4351:1: ( ( ruleXExpression ) | ( ruleXExpression_ ) )
            int alt28=2;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalSQLParser.g:4352:2: ( ruleXExpression )
                    {
                    // InternalSQLParser.g:4352:2: ( ruleXExpression )
                    // InternalSQLParser.g:4353:3: ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4358:2: ( ruleXExpression_ )
                    {
                    // InternalSQLParser.g:4358:2: ( ruleXExpression_ )
                    // InternalSQLParser.g:4359:3: ruleXExpression_
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression_();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAlternatives_2_0"


    // $ANTLR start "rule__ExpressionGroup__IsnotAlternatives_1_0"
    // InternalSQLParser.g:4368:1: rule__ExpressionGroup__IsnotAlternatives_1_0 : ( ( NOT ) | ( NOT_1 ) );
    public final void rule__ExpressionGroup__IsnotAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4372:1: ( ( NOT ) | ( NOT_1 ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==NOT) ) {
                alt29=1;
            }
            else if ( (LA29_0==NOT_1) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalSQLParser.g:4373:2: ( NOT )
                    {
                    // InternalSQLParser.g:4373:2: ( NOT )
                    // InternalSQLParser.g:4374:3: NOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4379:2: ( NOT_1 )
                    {
                    // InternalSQLParser.g:4379:2: ( NOT_1 )
                    // InternalSQLParser.g:4380:3: NOT_1
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }
                    match(input,NOT_1,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAlternatives_1_0"


    // $ANTLR start "rule__Expression__Alternatives_1"
    // InternalSQLParser.g:4389:1: rule__Expression__Alternatives_1 : ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) );
    public final void rule__Expression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4393:1: ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) )
            int alt30=6;
            switch ( input.LA(1) ) {
            case IS:
                {
                alt30=1;
                }
                break;
            case NOT:
                {
                switch ( input.LA(2) ) {
                case BETWEEN:
                    {
                    alt30=4;
                    }
                    break;
                case LIKE:
                    {
                    alt30=5;
                    }
                    break;
                case IN:
                    {
                    alt30=2;
                    }
                    break;
                case EXISTS:
                    {
                    alt30=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 2, input);

                    throw nvae;
                }

                }
                break;
            case IN:
                {
                alt30=2;
                }
                break;
            case EXISTS:
                {
                alt30=3;
                }
                break;
            case BETWEEN:
                {
                alt30=4;
                }
                break;
            case LIKE:
                {
                alt30=5;
                }
                break;
            case ExclamationMarkEqualsSign:
            case LessThanSignEqualsSign:
            case LessThanSignGreaterThanSign:
            case GreaterThanSignEqualsSign:
            case CircumflexAccentEqualsSign:
            case LessThanSign:
            case EqualsSign:
            case GreaterThanSign:
                {
                alt30=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalSQLParser.g:4394:2: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:4394:2: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    // InternalSQLParser.g:4395:3: ( rule__Expression__IsnullAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:4396:3: ( rule__Expression__IsnullAssignment_1_0 )
                    // InternalSQLParser.g:4396:4: rule__Expression__IsnullAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__IsnullAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4400:2: ( ( rule__Expression__InAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:4400:2: ( ( rule__Expression__InAssignment_1_1 ) )
                    // InternalSQLParser.g:4401:3: ( rule__Expression__InAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:4402:3: ( rule__Expression__InAssignment_1_1 )
                    // InternalSQLParser.g:4402:4: rule__Expression__InAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__InAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4406:2: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    {
                    // InternalSQLParser.g:4406:2: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    // InternalSQLParser.g:4407:3: ( rule__Expression__ExistsAssignment_1_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }
                    // InternalSQLParser.g:4408:3: ( rule__Expression__ExistsAssignment_1_2 )
                    // InternalSQLParser.g:4408:4: rule__Expression__ExistsAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__ExistsAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4412:2: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    {
                    // InternalSQLParser.g:4412:2: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    // InternalSQLParser.g:4413:3: ( rule__Expression__BetweenAssignment_1_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }
                    // InternalSQLParser.g:4414:3: ( rule__Expression__BetweenAssignment_1_3 )
                    // InternalSQLParser.g:4414:4: rule__Expression__BetweenAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__BetweenAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4418:2: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    {
                    // InternalSQLParser.g:4418:2: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    // InternalSQLParser.g:4419:3: ( rule__Expression__LikeAssignment_1_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }
                    // InternalSQLParser.g:4420:3: ( rule__Expression__LikeAssignment_1_4 )
                    // InternalSQLParser.g:4420:4: rule__Expression__LikeAssignment_1_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__LikeAssignment_1_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4424:2: ( ( rule__Expression__CompAssignment_1_5 ) )
                    {
                    // InternalSQLParser.g:4424:2: ( ( rule__Expression__CompAssignment_1_5 ) )
                    // InternalSQLParser.g:4425:3: ( rule__Expression__CompAssignment_1_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }
                    // InternalSQLParser.g:4426:3: ( rule__Expression__CompAssignment_1_5 )
                    // InternalSQLParser.g:4426:4: rule__Expression__CompAssignment_1_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__CompAssignment_1_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives_1"


    // $ANTLR start "rule__Comparison__OperatorAlternatives_0_0"
    // InternalSQLParser.g:4434:1: rule__Comparison__OperatorAlternatives_0_0 : ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) );
    public final void rule__Comparison__OperatorAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4438:1: ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) )
            int alt31=8;
            switch ( input.LA(1) ) {
            case GreaterThanSign:
                {
                alt31=1;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt31=2;
                }
                break;
            case LessThanSign:
                {
                alt31=3;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt31=4;
                }
                break;
            case EqualsSign:
                {
                alt31=5;
                }
                break;
            case LessThanSignGreaterThanSign:
                {
                alt31=6;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt31=7;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt31=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalSQLParser.g:4439:2: ( GreaterThanSign )
                    {
                    // InternalSQLParser.g:4439:2: ( GreaterThanSign )
                    // InternalSQLParser.g:4440:3: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4445:2: ( GreaterThanSignEqualsSign )
                    {
                    // InternalSQLParser.g:4445:2: ( GreaterThanSignEqualsSign )
                    // InternalSQLParser.g:4446:3: GreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4451:2: ( LessThanSign )
                    {
                    // InternalSQLParser.g:4451:2: ( LessThanSign )
                    // InternalSQLParser.g:4452:3: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4457:2: ( LessThanSignEqualsSign )
                    {
                    // InternalSQLParser.g:4457:2: ( LessThanSignEqualsSign )
                    // InternalSQLParser.g:4458:3: LessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4463:2: ( EqualsSign )
                    {
                    // InternalSQLParser.g:4463:2: ( EqualsSign )
                    // InternalSQLParser.g:4464:3: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4469:2: ( LessThanSignGreaterThanSign )
                    {
                    // InternalSQLParser.g:4469:2: ( LessThanSignGreaterThanSign )
                    // InternalSQLParser.g:4470:3: LessThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:4475:2: ( ExclamationMarkEqualsSign )
                    {
                    // InternalSQLParser.g:4475:2: ( ExclamationMarkEqualsSign )
                    // InternalSQLParser.g:4476:3: ExclamationMarkEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }
                    match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:4481:2: ( CircumflexAccentEqualsSign )
                    {
                    // InternalSQLParser.g:4481:2: ( CircumflexAccentEqualsSign )
                    // InternalSQLParser.g:4482:3: CircumflexAccentEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }
                    match(input,CircumflexAccentEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAlternatives_0_0"


    // $ANTLR start "rule__Comparison__SubOperatorAlternatives_1_0"
    // InternalSQLParser.g:4491:1: rule__Comparison__SubOperatorAlternatives_1_0 : ( ( ANY ) | ( ALL ) | ( SOME ) );
    public final void rule__Comparison__SubOperatorAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4495:1: ( ( ANY ) | ( ALL ) | ( SOME ) )
            int alt32=3;
            switch ( input.LA(1) ) {
            case ANY:
                {
                alt32=1;
                }
                break;
            case ALL:
                {
                alt32=2;
                }
                break;
            case SOME:
                {
                alt32=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalSQLParser.g:4496:2: ( ANY )
                    {
                    // InternalSQLParser.g:4496:2: ( ANY )
                    // InternalSQLParser.g:4497:3: ANY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }
                    match(input,ANY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4502:2: ( ALL )
                    {
                    // InternalSQLParser.g:4502:2: ( ALL )
                    // InternalSQLParser.g:4503:3: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4508:2: ( SOME )
                    {
                    // InternalSQLParser.g:4508:2: ( SOME )
                    // InternalSQLParser.g:4509:3: SOME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }
                    match(input,SOME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAlternatives_1_0"


    // $ANTLR start "rule__LikeOperand__Alternatives"
    // InternalSQLParser.g:4518:1: rule__LikeOperand__Alternatives : ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) );
    public final void rule__LikeOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4522:1: ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) )
            int alt33=4;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt33=1;
                }
                break;
            case RULE_ID:
                {
                alt33=2;
                }
                break;
            case CAST:
                {
                alt33=3;
                }
                break;
            case RULE_JRPARAM:
                {
                alt33=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalSQLParser.g:4523:2: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    {
                    // InternalSQLParser.g:4523:2: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    // InternalSQLParser.g:4524:3: ( rule__LikeOperand__Op2Assignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }
                    // InternalSQLParser.g:4525:3: ( rule__LikeOperand__Op2Assignment_0 )
                    // InternalSQLParser.g:4525:4: rule__LikeOperand__Op2Assignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Op2Assignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4529:2: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    {
                    // InternalSQLParser.g:4529:2: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    // InternalSQLParser.g:4530:3: ( rule__LikeOperand__Fop2Assignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }
                    // InternalSQLParser.g:4531:3: ( rule__LikeOperand__Fop2Assignment_1 )
                    // InternalSQLParser.g:4531:4: rule__LikeOperand__Fop2Assignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Fop2Assignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4535:2: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4535:2: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    // InternalSQLParser.g:4536:3: ( rule__LikeOperand__FcastAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }
                    // InternalSQLParser.g:4537:3: ( rule__LikeOperand__FcastAssignment_2 )
                    // InternalSQLParser.g:4537:4: rule__LikeOperand__FcastAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FcastAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4541:2: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4541:2: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    // InternalSQLParser.g:4542:3: ( rule__LikeOperand__FparamAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }
                    // InternalSQLParser.g:4543:3: ( rule__LikeOperand__FparamAssignment_3 )
                    // InternalSQLParser.g:4543:4: rule__LikeOperand__FparamAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FparamAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Alternatives"


    // $ANTLR start "rule__InOperator__Alternatives_2"
    // InternalSQLParser.g:4551:1: rule__InOperator__Alternatives_2 : ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) );
    public final void rule__InOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4555:1: ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==LeftParenthesis) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==SELECT) ) {
                    alt34=1;
                }
                else if ( ((LA34_1>=RULE_SIGNED_DOUBLE && LA34_1<=RULE_TIMESTAMP)||LA34_1==RULE_STRING_) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalSQLParser.g:4556:2: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4556:2: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    // InternalSQLParser.g:4557:3: ( rule__InOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4558:3: ( rule__InOperator__SubqueryAssignment_2_0 )
                    // InternalSQLParser.g:4558:4: rule__InOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4562:2: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4562:2: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    // InternalSQLParser.g:4563:3: ( rule__InOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4564:3: ( rule__InOperator__OpListAssignment_2_1 )
                    // InternalSQLParser.g:4564:4: rule__InOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Alternatives_2"


    // $ANTLR start "rule__ExistsOperator__Alternatives_2"
    // InternalSQLParser.g:4572:1: rule__ExistsOperator__Alternatives_2 : ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) );
    public final void rule__ExistsOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4576:1: ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==LeftParenthesis) ) {
                int LA35_1 = input.LA(2);

                if ( (LA35_1==SELECT) ) {
                    alt35=1;
                }
                else if ( ((LA35_1>=RULE_SIGNED_DOUBLE && LA35_1<=RULE_TIMESTAMP)||LA35_1==RULE_STRING_) ) {
                    alt35=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalSQLParser.g:4577:2: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4577:2: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    // InternalSQLParser.g:4578:3: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4579:3: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    // InternalSQLParser.g:4579:4: rule__ExistsOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4583:2: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4583:2: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    // InternalSQLParser.g:4584:3: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4585:3: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    // InternalSQLParser.g:4585:4: rule__ExistsOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Alternatives_2"


    // $ANTLR start "rule__OperandGroup__Alternatives"
    // InternalSQLParser.g:4593:1: rule__OperandGroup__Alternatives : ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) );
    public final void rule__OperandGroup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4597:1: ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==EXTRACT||LA36_0==CAST||LA36_0==CASE||(LA36_0>=RULE_JRPARAM && LA36_0<=RULE_JRNPARAM)||(LA36_0>=RULE_UNSIGNED && LA36_0<=RULE_SIGNED_DOUBLE)||(LA36_0>=RULE_STRING_ && LA36_0<=RULE_ID)) ) {
                alt36=1;
            }
            else if ( (LA36_0==LeftParenthesis) ) {
                int LA36_2 = input.LA(2);

                if ( (LA36_2==SELECT) ) {
                    alt36=1;
                }
                else if ( (LA36_2==EXTRACT||LA36_2==CAST||LA36_2==CASE||LA36_2==LeftParenthesis||(LA36_2>=RULE_JRPARAM && LA36_2<=RULE_JRNPARAM)||(LA36_2>=RULE_UNSIGNED && LA36_2<=RULE_SIGNED_DOUBLE)||(LA36_2>=RULE_STRING_ && LA36_2<=RULE_ID)) ) {
                    alt36=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalSQLParser.g:4598:2: ( ruleOperand )
                    {
                    // InternalSQLParser.g:4598:2: ( ruleOperand )
                    // InternalSQLParser.g:4599:3: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4604:2: ( ( rule__OperandGroup__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:4604:2: ( ( rule__OperandGroup__Group_1__0 ) )
                    // InternalSQLParser.g:4605:3: ( rule__OperandGroup__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:4606:3: ( rule__OperandGroup__Group_1__0 )
                    // InternalSQLParser.g:4606:4: rule__OperandGroup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandGroup__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Alternatives"


    // $ANTLR start "rule__Operand__Alternatives_1_0"
    // InternalSQLParser.g:4614:1: rule__Operand__Alternatives_1_0 : ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) );
    public final void rule__Operand__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4618:1: ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) )
            int alt37=5;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                alt37=1;
                }
                break;
            case HyphenMinus:
                {
                alt37=2;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt37=3;
                }
                break;
            case RULE_STAR:
                {
                alt37=4;
                }
                break;
            case Solidus:
                {
                alt37=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalSQLParser.g:4619:2: ( ( rule__Operand__Group_1_0_0__0 ) )
                    {
                    // InternalSQLParser.g:4619:2: ( ( rule__Operand__Group_1_0_0__0 ) )
                    // InternalSQLParser.g:4620:3: ( rule__Operand__Group_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }
                    // InternalSQLParser.g:4621:3: ( rule__Operand__Group_1_0_0__0 )
                    // InternalSQLParser.g:4621:4: rule__Operand__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4625:2: ( ( rule__Operand__Group_1_0_1__0 ) )
                    {
                    // InternalSQLParser.g:4625:2: ( ( rule__Operand__Group_1_0_1__0 ) )
                    // InternalSQLParser.g:4626:3: ( rule__Operand__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }
                    // InternalSQLParser.g:4627:3: ( rule__Operand__Group_1_0_1__0 )
                    // InternalSQLParser.g:4627:4: rule__Operand__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4631:2: ( ( rule__Operand__Group_1_0_2__0 ) )
                    {
                    // InternalSQLParser.g:4631:2: ( ( rule__Operand__Group_1_0_2__0 ) )
                    // InternalSQLParser.g:4632:3: ( rule__Operand__Group_1_0_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }
                    // InternalSQLParser.g:4633:3: ( rule__Operand__Group_1_0_2__0 )
                    // InternalSQLParser.g:4633:4: rule__Operand__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4637:2: ( ( rule__Operand__Group_1_0_3__0 ) )
                    {
                    // InternalSQLParser.g:4637:2: ( ( rule__Operand__Group_1_0_3__0 ) )
                    // InternalSQLParser.g:4638:3: ( rule__Operand__Group_1_0_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }
                    // InternalSQLParser.g:4639:3: ( rule__Operand__Group_1_0_3__0 )
                    // InternalSQLParser.g:4639:4: rule__Operand__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4643:2: ( ( rule__Operand__Group_1_0_4__0 ) )
                    {
                    // InternalSQLParser.g:4643:2: ( ( rule__Operand__Group_1_0_4__0 ) )
                    // InternalSQLParser.g:4644:3: ( rule__Operand__Group_1_0_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }
                    // InternalSQLParser.g:4645:3: ( rule__Operand__Group_1_0_4__0 )
                    // InternalSQLParser.g:4645:4: rule__Operand__Group_1_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Alternatives_1_0"


    // $ANTLR start "rule__OperandFragment__Alternatives"
    // InternalSQLParser.g:4653:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) );
    public final void rule__OperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4657:1: ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) )
            int alt38=7;
            alt38 = dfa38.predict(input);
            switch (alt38) {
                case 1 :
                    // InternalSQLParser.g:4658:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4658:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    // InternalSQLParser.g:4659:3: ( rule__OperandFragment__ColumnAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }
                    // InternalSQLParser.g:4660:3: ( rule__OperandFragment__ColumnAssignment_0 )
                    // InternalSQLParser.g:4660:4: rule__OperandFragment__ColumnAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__ColumnAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4664:2: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    {
                    // InternalSQLParser.g:4664:2: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    // InternalSQLParser.g:4665:3: ( rule__OperandFragment__XopAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }
                    // InternalSQLParser.g:4666:3: ( rule__OperandFragment__XopAssignment_1 )
                    // InternalSQLParser.g:4666:4: rule__OperandFragment__XopAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__XopAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4670:2: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    {
                    // InternalSQLParser.g:4670:2: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    // InternalSQLParser.g:4671:3: ( rule__OperandFragment__SubqAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }
                    // InternalSQLParser.g:4672:3: ( rule__OperandFragment__SubqAssignment_2 )
                    // InternalSQLParser.g:4672:4: rule__OperandFragment__SubqAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SubqAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:4676:2: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    {
                    // InternalSQLParser.g:4676:2: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    // InternalSQLParser.g:4677:3: ( rule__OperandFragment__FcastAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }
                    // InternalSQLParser.g:4678:3: ( rule__OperandFragment__FcastAssignment_3 )
                    // InternalSQLParser.g:4678:4: rule__OperandFragment__FcastAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FcastAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:4682:2: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    {
                    // InternalSQLParser.g:4682:2: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    // InternalSQLParser.g:4683:3: ( rule__OperandFragment__FextAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }
                    // InternalSQLParser.g:4684:3: ( rule__OperandFragment__FextAssignment_4 )
                    // InternalSQLParser.g:4684:4: rule__OperandFragment__FextAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FextAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:4688:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    {
                    // InternalSQLParser.g:4688:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    // InternalSQLParser.g:4689:3: ( rule__OperandFragment__FuncAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }
                    // InternalSQLParser.g:4690:3: ( rule__OperandFragment__FuncAssignment_5 )
                    // InternalSQLParser.g:4690:4: rule__OperandFragment__FuncAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FuncAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:4694:2: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    {
                    // InternalSQLParser.g:4694:2: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    // InternalSQLParser.g:4695:3: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }
                    // InternalSQLParser.g:4696:3: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    // InternalSQLParser.g:4696:4: rule__OperandFragment__SqlcaseAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SqlcaseAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__Alternatives"


    // $ANTLR start "rule__OperandFunction__Alternatives_2"
    // InternalSQLParser.g:4704:1: rule__OperandFunction__Alternatives_2 : ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) );
    public final void rule__OperandFunction__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4708:1: ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_STAR) ) {
                alt39=1;
            }
            else if ( (LA39_0==DISTINCT||LA39_0==EXTRACT||LA39_0==CAST||LA39_0==CASE||LA39_0==ALL||LA39_0==LeftParenthesis||(LA39_0>=RULE_JRPARAM && LA39_0<=RULE_JRNPARAM)||(LA39_0>=RULE_UNSIGNED && LA39_0<=RULE_SIGNED_DOUBLE)||(LA39_0>=RULE_STRING_ && LA39_0<=RULE_ID)) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalSQLParser.g:4709:2: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4709:2: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    // InternalSQLParser.g:4710:3: ( rule__OperandFunction__StarAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4711:3: ( rule__OperandFunction__StarAssignment_2_0 )
                    // InternalSQLParser.g:4711:4: rule__OperandFunction__StarAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__StarAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4715:2: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    {
                    // InternalSQLParser.g:4715:2: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    // InternalSQLParser.g:4716:3: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSQLParser.g:4717:3: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    // InternalSQLParser.g:4717:4: rule__OperandFunction__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Alternatives_2"


    // $ANTLR start "rule__WindowingClause__Alternatives_0"
    // InternalSQLParser.g:4725:1: rule__WindowingClause__Alternatives_0 : ( ( ROWS ) | ( RANGE ) );
    public final void rule__WindowingClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4729:1: ( ( ROWS ) | ( RANGE ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==ROWS) ) {
                alt40=1;
            }
            else if ( (LA40_0==RANGE) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalSQLParser.g:4730:2: ( ROWS )
                    {
                    // InternalSQLParser.g:4730:2: ( ROWS )
                    // InternalSQLParser.g:4731:3: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4736:2: ( RANGE )
                    {
                    // InternalSQLParser.g:4736:2: ( RANGE )
                    // InternalSQLParser.g:4737:3: RANGE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }
                    match(input,RANGE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_0"


    // $ANTLR start "rule__WindowingClause__Alternatives_1"
    // InternalSQLParser.g:4746:1: rule__WindowingClause__Alternatives_1 : ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) );
    public final void rule__WindowingClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4750:1: ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==BETWEEN) ) {
                alt41=1;
            }
            else if ( (LA41_0==UNBOUNDED||LA41_0==CURRENT||LA41_0==EXTRACT||LA41_0==CAST||LA41_0==CASE||LA41_0==LeftParenthesis||(LA41_0>=RULE_JRPARAM && LA41_0<=RULE_JRNPARAM)||(LA41_0>=RULE_UNSIGNED && LA41_0<=RULE_SIGNED_DOUBLE)||(LA41_0>=RULE_STRING_ && LA41_0<=RULE_ID)) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalSQLParser.g:4751:2: ( ruleWindowingClauseBetween )
                    {
                    // InternalSQLParser.g:4751:2: ( ruleWindowingClauseBetween )
                    // InternalSQLParser.g:4752:3: ruleWindowingClauseBetween
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseBetween();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4757:2: ( ruleWindowingClauseOperandPreceding )
                    {
                    // InternalSQLParser.g:4757:2: ( ruleWindowingClauseOperandPreceding )
                    // InternalSQLParser.g:4758:3: ruleWindowingClauseOperandPreceding
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseOperandPreceding();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1"
    // InternalSQLParser.g:4767:1: rule__WindowingClauseOperandFollowing__Alternatives_1 : ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4771:1: ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) )
            int alt42=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt42=1;
                }
                break;
            case CURRENT:
                {
                alt42=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt42=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // InternalSQLParser.g:4772:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    {
                    // InternalSQLParser.g:4772:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    // InternalSQLParser.g:4773:3: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }
                    // InternalSQLParser.g:4774:3: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    // InternalSQLParser.g:4774:4: rule__WindowingClauseOperandFollowing__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4778:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:4778:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    // InternalSQLParser.g:4779:3: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:4780:3: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    // InternalSQLParser.g:4780:4: rule__WindowingClauseOperandFollowing__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4784:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    {
                    // InternalSQLParser.g:4784:2: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    // InternalSQLParser.g:4785:3: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }
                    // InternalSQLParser.g:4786:3: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    // InternalSQLParser.g:4786:4: rule__WindowingClauseOperandFollowing__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"
    // InternalSQLParser.g:4794:1: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4798:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==PRECEDING) ) {
                alt43=1;
            }
            else if ( (LA43_0==KW_FOLLOWING) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalSQLParser.g:4799:2: ( PRECEDING )
                    {
                    // InternalSQLParser.g:4799:2: ( PRECEDING )
                    // InternalSQLParser.g:4800:3: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4805:2: ( KW_FOLLOWING )
                    {
                    // InternalSQLParser.g:4805:2: ( KW_FOLLOWING )
                    // InternalSQLParser.g:4806:3: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1"
    // InternalSQLParser.g:4815:1: rule__WindowingClauseOperandPreceding__Alternatives_1 : ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4819:1: ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) )
            int alt44=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt44=1;
                }
                break;
            case CURRENT:
                {
                alt44=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt44=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }

            switch (alt44) {
                case 1 :
                    // InternalSQLParser.g:4820:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    {
                    // InternalSQLParser.g:4820:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    // InternalSQLParser.g:4821:3: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }
                    // InternalSQLParser.g:4822:3: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    // InternalSQLParser.g:4822:4: rule__WindowingClauseOperandPreceding__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4826:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:4826:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    // InternalSQLParser.g:4827:3: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:4828:3: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    // InternalSQLParser.g:4828:4: rule__WindowingClauseOperandPreceding__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:4832:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    {
                    // InternalSQLParser.g:4832:2: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    // InternalSQLParser.g:4833:3: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }
                    // InternalSQLParser.g:4834:3: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    // InternalSQLParser.g:4834:4: rule__WindowingClauseOperandPreceding__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"
    // InternalSQLParser.g:4842:1: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4846:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==PRECEDING) ) {
                alt45=1;
            }
            else if ( (LA45_0==KW_FOLLOWING) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalSQLParser.g:4847:2: ( PRECEDING )
                    {
                    // InternalSQLParser.g:4847:2: ( PRECEDING )
                    // InternalSQLParser.g:4848:3: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4853:2: ( KW_FOLLOWING )
                    {
                    // InternalSQLParser.g:4853:2: ( KW_FOLLOWING )
                    // InternalSQLParser.g:4854:3: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"


    // $ANTLR start "rule__OrderByClause__Alternatives_0"
    // InternalSQLParser.g:4863:1: rule__OrderByClause__Alternatives_0 : ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) );
    public final void rule__OrderByClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4867:1: ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==ORDER) ) {
                int LA46_1 = input.LA(2);

                if ( (LA46_1==SIBLINGS) ) {
                    alt46=2;
                }
                else if ( (LA46_1==BY) ) {
                    alt46=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 46, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalSQLParser.g:4868:2: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    {
                    // InternalSQLParser.g:4868:2: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    // InternalSQLParser.g:4869:3: ( rule__OrderByClause__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }
                    // InternalSQLParser.g:4870:3: ( rule__OrderByClause__Group_0_0__0 )
                    // InternalSQLParser.g:4870:4: rule__OrderByClause__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4874:2: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    {
                    // InternalSQLParser.g:4874:2: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    // InternalSQLParser.g:4875:3: ( rule__OrderByClause__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }
                    // InternalSQLParser.g:4876:3: ( rule__OrderByClause__Group_0_1__0 )
                    // InternalSQLParser.g:4876:4: rule__OrderByClause__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Alternatives_0"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_1"
    // InternalSQLParser.g:4884:1: rule__OrderByClauseArg__Alternatives_1 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByClauseArg__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4888:1: ( ( ASC ) | ( DESC ) )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==ASC) ) {
                alt47=1;
            }
            else if ( (LA47_0==DESC) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalSQLParser.g:4889:2: ( ASC )
                    {
                    // InternalSQLParser.g:4889:2: ( ASC )
                    // InternalSQLParser.g:4890:3: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4895:2: ( DESC )
                    {
                    // InternalSQLParser.g:4895:2: ( DESC )
                    // InternalSQLParser.g:4896:3: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_1"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_2_1"
    // InternalSQLParser.g:4905:1: rule__OrderByClauseArg__Alternatives_2_1 : ( ( FIRST ) | ( LAST ) );
    public final void rule__OrderByClauseArg__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4909:1: ( ( FIRST ) | ( LAST ) )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==FIRST) ) {
                alt48=1;
            }
            else if ( (LA48_0==LAST) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalSQLParser.g:4910:2: ( FIRST )
                    {
                    // InternalSQLParser.g:4910:2: ( FIRST )
                    // InternalSQLParser.g:4911:3: FIRST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }
                    match(input,FIRST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4916:2: ( LAST )
                    {
                    // InternalSQLParser.g:4916:2: ( LAST )
                    // InternalSQLParser.g:4917:3: LAST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }
                    match(input,LAST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_2_1"


    // $ANTLR start "rule__QueryPartitionClause__Alternatives_2"
    // InternalSQLParser.g:4926:1: rule__QueryPartitionClause__Alternatives_2 : ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) );
    public final void rule__QueryPartitionClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4930:1: ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==EXTRACT||LA49_0==CAST||LA49_0==CASE||(LA49_0>=RULE_JRPARAM && LA49_0<=RULE_JRNPARAM)||(LA49_0>=RULE_UNSIGNED && LA49_0<=RULE_SIGNED_DOUBLE)||(LA49_0>=RULE_STRING_ && LA49_0<=RULE_ID)) ) {
                alt49=1;
            }
            else if ( (LA49_0==LeftParenthesis) ) {
                int LA49_2 = input.LA(2);

                if ( (LA49_2==SELECT) ) {
                    alt49=1;
                }
                else if ( (LA49_2==EXTRACT||LA49_2==CAST||LA49_2==CASE||LA49_2==LeftParenthesis||(LA49_2>=RULE_JRPARAM && LA49_2<=RULE_JRNPARAM)||(LA49_2>=RULE_UNSIGNED && LA49_2<=RULE_SIGNED_DOUBLE)||(LA49_2>=RULE_STRING_ && LA49_2<=RULE_ID)) ) {
                    alt49=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalSQLParser.g:4931:2: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    {
                    // InternalSQLParser.g:4931:2: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    // InternalSQLParser.g:4932:3: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }
                    // InternalSQLParser.g:4933:3: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    // InternalSQLParser.g:4933:4: rule__QueryPartitionClause__ArgsAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__ArgsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4937:2: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    {
                    // InternalSQLParser.g:4937:2: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    // InternalSQLParser.g:4938:3: ( rule__QueryPartitionClause__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }
                    // InternalSQLParser.g:4939:3: ( rule__QueryPartitionClause__Group_2_1__0 )
                    // InternalSQLParser.g:4939:4: rule__QueryPartitionClause__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Alternatives_2"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAlternatives_0"
    // InternalSQLParser.g:4947:1: rule__OpFunctionArgOperand__OpAlternatives_0 : ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) );
    public final void rule__OpFunctionArgOperand__OpAlternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4951:1: ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==DISTINCT||LA50_0==ALL) ) {
                alt50=1;
            }
            else if ( (LA50_0==EXTRACT||LA50_0==CAST||LA50_0==CASE||LA50_0==LeftParenthesis||(LA50_0>=RULE_JRPARAM && LA50_0<=RULE_JRNPARAM)||(LA50_0>=RULE_UNSIGNED && LA50_0<=RULE_SIGNED_DOUBLE)||(LA50_0>=RULE_STRING_ && LA50_0<=RULE_ID)) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalSQLParser.g:4952:2: ( ruleOpFunctionArgAgregate )
                    {
                    // InternalSQLParser.g:4952:2: ( ruleOpFunctionArgAgregate )
                    // InternalSQLParser.g:4953:3: ruleOpFunctionArgAgregate
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpFunctionArgAgregate();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4958:2: ( ruleOperand )
                    {
                    // InternalSQLParser.g:4958:2: ( ruleOperand )
                    // InternalSQLParser.g:4959:3: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAlternatives_0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Alternatives_0"
    // InternalSQLParser.g:4968:1: rule__OpFunctionArgAgregate__Alternatives_0 : ( ( ALL ) | ( DISTINCT ) );
    public final void rule__OpFunctionArgAgregate__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4972:1: ( ( ALL ) | ( DISTINCT ) )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==ALL) ) {
                alt51=1;
            }
            else if ( (LA51_0==DISTINCT) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalSQLParser.g:4973:2: ( ALL )
                    {
                    // InternalSQLParser.g:4973:2: ( ALL )
                    // InternalSQLParser.g:4974:3: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:4979:2: ( DISTINCT )
                    {
                    // InternalSQLParser.g:4979:2: ( DISTINCT )
                    // InternalSQLParser.g:4980:3: DISTINCT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Alternatives_0"


    // $ANTLR start "rule__XOperandFragment__Alternatives"
    // InternalSQLParser.g:4989:1: rule__XOperandFragment__Alternatives : ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) );
    public final void rule__XOperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:4993:1: ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) )
            int alt52=3;
            switch ( input.LA(1) ) {
            case RULE_JRPARAM:
                {
                alt52=1;
                }
                break;
            case RULE_JRNPARAM:
                {
                alt52=2;
                }
                break;
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt52=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalSQLParser.g:4994:2: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    {
                    // InternalSQLParser.g:4994:2: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    // InternalSQLParser.g:4995:3: ( rule__XOperandFragment__ParamAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }
                    // InternalSQLParser.g:4996:3: ( rule__XOperandFragment__ParamAssignment_0 )
                    // InternalSQLParser.g:4996:4: rule__XOperandFragment__ParamAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ParamAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5000:2: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    {
                    // InternalSQLParser.g:5000:2: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    // InternalSQLParser.g:5001:3: ( rule__XOperandFragment__EparamAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }
                    // InternalSQLParser.g:5002:3: ( rule__XOperandFragment__EparamAssignment_1 )
                    // InternalSQLParser.g:5002:4: rule__XOperandFragment__EparamAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__EparamAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5006:2: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    {
                    // InternalSQLParser.g:5006:2: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    // InternalSQLParser.g:5007:3: ( rule__XOperandFragment__ScalarAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }
                    // InternalSQLParser.g:5008:3: ( rule__XOperandFragment__ScalarAssignment_2 )
                    // InternalSQLParser.g:5008:4: rule__XOperandFragment__ScalarAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ScalarAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__Alternatives"


    // $ANTLR start "rule__ScalarOperand__Alternatives"
    // InternalSQLParser.g:5016:1: rule__ScalarOperand__Alternatives : ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) );
    public final void rule__ScalarOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5020:1: ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) )
            int alt53=5;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt53=1;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt53=2;
                }
                break;
            case RULE_DATE:
                {
                alt53=3;
                }
                break;
            case RULE_TIME:
                {
                alt53=4;
                }
                break;
            case RULE_TIMESTAMP:
                {
                alt53=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalSQLParser.g:5021:2: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    {
                    // InternalSQLParser.g:5021:2: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    // InternalSQLParser.g:5022:3: ( rule__ScalarOperand__SostrAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }
                    // InternalSQLParser.g:5023:3: ( rule__ScalarOperand__SostrAssignment_0 )
                    // InternalSQLParser.g:5023:4: rule__ScalarOperand__SostrAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SostrAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5027:2: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    {
                    // InternalSQLParser.g:5027:2: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    // InternalSQLParser.g:5028:3: ( rule__ScalarOperand__SodblAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }
                    // InternalSQLParser.g:5029:3: ( rule__ScalarOperand__SodblAssignment_1 )
                    // InternalSQLParser.g:5029:4: rule__ScalarOperand__SodblAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodblAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5033:2: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    {
                    // InternalSQLParser.g:5033:2: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    // InternalSQLParser.g:5034:3: ( rule__ScalarOperand__SodateAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }
                    // InternalSQLParser.g:5035:3: ( rule__ScalarOperand__SodateAssignment_2 )
                    // InternalSQLParser.g:5035:4: rule__ScalarOperand__SodateAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodateAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5039:2: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    {
                    // InternalSQLParser.g:5039:2: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    // InternalSQLParser.g:5040:3: ( rule__ScalarOperand__SotimeAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }
                    // InternalSQLParser.g:5041:3: ( rule__ScalarOperand__SotimeAssignment_3 )
                    // InternalSQLParser.g:5041:4: rule__ScalarOperand__SotimeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SotimeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:5045:2: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    {
                    // InternalSQLParser.g:5045:2: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    // InternalSQLParser.g:5046:3: ( rule__ScalarOperand__SodtAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }
                    // InternalSQLParser.g:5047:3: ( rule__ScalarOperand__SodtAssignment_4 )
                    // InternalSQLParser.g:5047:4: rule__ScalarOperand__SodtAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodtAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__Alternatives"


    // $ANTLR start "rule__ScalarNumberOperand__Alternatives"
    // InternalSQLParser.g:5055:1: rule__ScalarNumberOperand__Alternatives : ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) );
    public final void rule__ScalarNumberOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5059:1: ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) )
            int alt54=4;
            switch ( input.LA(1) ) {
            case RULE_UNSIGNED:
                {
                alt54=1;
                }
                break;
            case RULE_INT:
                {
                alt54=2;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt54=3;
                }
                break;
            case RULE_STRING_:
                {
                alt54=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalSQLParser.g:5060:2: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    {
                    // InternalSQLParser.g:5060:2: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    // InternalSQLParser.g:5061:3: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }
                    // InternalSQLParser.g:5062:3: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    // InternalSQLParser.g:5062:4: rule__ScalarNumberOperand__SoUIntAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SoUIntAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5066:2: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    {
                    // InternalSQLParser.g:5066:2: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    // InternalSQLParser.g:5067:3: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }
                    // InternalSQLParser.g:5068:3: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    // InternalSQLParser.g:5068:4: rule__ScalarNumberOperand__SointAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SointAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5072:2: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    {
                    // InternalSQLParser.g:5072:2: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    // InternalSQLParser.g:5073:3: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }
                    // InternalSQLParser.g:5074:3: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    // InternalSQLParser.g:5074:4: rule__ScalarNumberOperand__SodblAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SodblAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5078:2: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    {
                    // InternalSQLParser.g:5078:2: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    // InternalSQLParser.g:5079:3: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }
                    // InternalSQLParser.g:5080:3: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    // InternalSQLParser.g:5080:4: rule__ScalarNumberOperand__SostrAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SostrAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__Alternatives"


    // $ANTLR start "rule__SQLCASE__Alternatives_1"
    // InternalSQLParser.g:5088:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );
    public final void rule__SQLCASE__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5092:1: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) )
            int alt55=2;
            alt55 = dfa55.predict(input);
            switch (alt55) {
                case 1 :
                    // InternalSQLParser.g:5093:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:5093:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    // InternalSQLParser.g:5094:3: ( rule__SQLCASE__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:5095:3: ( rule__SQLCASE__WopAssignment_1_0 )
                    // InternalSQLParser.g:5095:4: rule__SQLCASE__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5099:2: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:5099:2: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    // InternalSQLParser.g:5100:3: ( rule__SQLCASE__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:5101:3: ( rule__SQLCASE__ExprAssignment_1_1 )
                    // InternalSQLParser.g:5101:4: rule__SQLCASE__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Alternatives_1"


    // $ANTLR start "rule__SqlCaseWhen__Alternatives_1"
    // InternalSQLParser.g:5109:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );
    public final void rule__SqlCaseWhen__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5113:1: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) )
            int alt56=2;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalSQLParser.g:5114:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    {
                    // InternalSQLParser.g:5114:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    // InternalSQLParser.g:5115:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSQLParser.g:5116:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    // InternalSQLParser.g:5116:4: rule__SqlCaseWhen__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5120:2: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    {
                    // InternalSQLParser.g:5120:2: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    // InternalSQLParser.g:5121:3: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSQLParser.g:5122:3: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    // InternalSQLParser.g:5122:4: rule__SqlCaseWhen__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1"
    // InternalSQLParser.g:5130:1: rule__JoinType__Alternatives_1 : ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) );
    public final void rule__JoinType__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5134:1: ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) )
            int alt57=4;
            switch ( input.LA(1) ) {
            case INNER:
                {
                alt57=1;
                }
                break;
            case RIGHT:
            case FULL:
            case LEFT:
                {
                alt57=2;
                }
                break;
            case CROSS:
                {
                alt57=3;
                }
                break;
            case STRAIGHT_JOIN:
                {
                alt57=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // InternalSQLParser.g:5135:2: ( INNER )
                    {
                    // InternalSQLParser.g:5135:2: ( INNER )
                    // InternalSQLParser.g:5136:3: INNER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }
                    match(input,INNER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5141:2: ( ( rule__JoinType__Group_1_1__0 ) )
                    {
                    // InternalSQLParser.g:5141:2: ( ( rule__JoinType__Group_1_1__0 ) )
                    // InternalSQLParser.g:5142:3: ( rule__JoinType__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }
                    // InternalSQLParser.g:5143:3: ( rule__JoinType__Group_1_1__0 )
                    // InternalSQLParser.g:5143:4: rule__JoinType__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5147:2: ( CROSS )
                    {
                    // InternalSQLParser.g:5147:2: ( CROSS )
                    // InternalSQLParser.g:5148:3: CROSS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }
                    match(input,CROSS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5153:2: ( STRAIGHT_JOIN )
                    {
                    // InternalSQLParser.g:5153:2: ( STRAIGHT_JOIN )
                    // InternalSQLParser.g:5154:3: STRAIGHT_JOIN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }
                    match(input,STRAIGHT_JOIN,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1_1_0"
    // InternalSQLParser.g:5163:1: rule__JoinType__Alternatives_1_1_0 : ( ( LEFT ) | ( RIGHT ) | ( FULL ) );
    public final void rule__JoinType__Alternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5167:1: ( ( LEFT ) | ( RIGHT ) | ( FULL ) )
            int alt58=3;
            switch ( input.LA(1) ) {
            case LEFT:
                {
                alt58=1;
                }
                break;
            case RIGHT:
                {
                alt58=2;
                }
                break;
            case FULL:
                {
                alt58=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }

            switch (alt58) {
                case 1 :
                    // InternalSQLParser.g:5168:2: ( LEFT )
                    {
                    // InternalSQLParser.g:5168:2: ( LEFT )
                    // InternalSQLParser.g:5169:3: LEFT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }
                    match(input,LEFT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5174:2: ( RIGHT )
                    {
                    // InternalSQLParser.g:5174:2: ( RIGHT )
                    // InternalSQLParser.g:5175:3: RIGHT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }
                    match(input,RIGHT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5180:2: ( FULL )
                    {
                    // InternalSQLParser.g:5180:2: ( FULL )
                    // InternalSQLParser.g:5181:3: FULL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }
                    match(input,FULL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1_1_0"


    // $ANTLR start "rule__DBID__Alternatives"
    // InternalSQLParser.g:5190:1: rule__DBID__Alternatives : ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) );
    public final void rule__DBID__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5194:1: ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) )
            int alt59=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt59=1;
                }
                break;
            case RULE_DBNAME:
                {
                alt59=2;
                }
                break;
            case RULE_STRING:
                {
                alt59=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }

            switch (alt59) {
                case 1 :
                    // InternalSQLParser.g:5195:2: ( RULE_ID )
                    {
                    // InternalSQLParser.g:5195:2: ( RULE_ID )
                    // InternalSQLParser.g:5196:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5201:2: ( RULE_DBNAME )
                    {
                    // InternalSQLParser.g:5201:2: ( RULE_DBNAME )
                    // InternalSQLParser.g:5202:3: RULE_DBNAME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }
                    match(input,RULE_DBNAME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5207:2: ( RULE_STRING )
                    {
                    // InternalSQLParser.g:5207:2: ( RULE_STRING )
                    // InternalSQLParser.g:5208:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DBID__Alternatives"


    // $ANTLR start "rule__SignedLiteral__Alternatives"
    // InternalSQLParser.g:5217:1: rule__SignedLiteral__Alternatives : ( ( ruleLiteral ) | ( ( rule__SignedLiteral__Group_1__0 ) ) | ( ( rule__SignedLiteral__Group_2__0 ) ) );
    public final void rule__SignedLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5221:1: ( ( ruleLiteral ) | ( ( rule__SignedLiteral__Group_1__0 ) ) | ( ( rule__SignedLiteral__Group_2__0 ) ) )
            int alt60=3;
            switch ( input.LA(1) ) {
            case TIMESTAMP:
            case FALSE:
            case DATE:
            case NULL:
            case TIME:
            case TRUE:
            case RULE_INT:
            case RULE_STRING_:
                {
                alt60=1;
                }
                break;
            case PlusSign:
                {
                alt60=2;
                }
                break;
            case HyphenMinus:
                {
                alt60=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }

            switch (alt60) {
                case 1 :
                    // InternalSQLParser.g:5222:2: ( ruleLiteral )
                    {
                    // InternalSQLParser.g:5222:2: ( ruleLiteral )
                    // InternalSQLParser.g:5223:3: ruleLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedLiteralAccess().getLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedLiteralAccess().getLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5228:2: ( ( rule__SignedLiteral__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:5228:2: ( ( rule__SignedLiteral__Group_1__0 ) )
                    // InternalSQLParser.g:5229:3: ( rule__SignedLiteral__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedLiteralAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:5230:3: ( rule__SignedLiteral__Group_1__0 )
                    // InternalSQLParser.g:5230:4: rule__SignedLiteral__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SignedLiteral__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedLiteralAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5234:2: ( ( rule__SignedLiteral__Group_2__0 ) )
                    {
                    // InternalSQLParser.g:5234:2: ( ( rule__SignedLiteral__Group_2__0 ) )
                    // InternalSQLParser.g:5235:3: ( rule__SignedLiteral__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSignedLiteralAccess().getGroup_2()); 
                    }
                    // InternalSQLParser.g:5236:3: ( rule__SignedLiteral__Group_2__0 )
                    // InternalSQLParser.g:5236:4: rule__SignedLiteral__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SignedLiteral__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSignedLiteralAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives"
    // InternalSQLParser.g:5244:1: rule__Literal__Alternatives : ( ( ruleTextLiteral ) | ( ruleNumLiteral ) | ( ruleTemporalLiteral ) | ( NULL ) | ( ruleBoolLiteral ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5248:1: ( ( ruleTextLiteral ) | ( ruleNumLiteral ) | ( ruleTemporalLiteral ) | ( NULL ) | ( ruleBoolLiteral ) )
            int alt61=5;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt61=1;
                }
                break;
            case RULE_INT:
                {
                alt61=2;
                }
                break;
            case TIMESTAMP:
            case DATE:
            case TIME:
                {
                alt61=3;
                }
                break;
            case NULL:
                {
                alt61=4;
                }
                break;
            case FALSE:
            case TRUE:
                {
                alt61=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }

            switch (alt61) {
                case 1 :
                    // InternalSQLParser.g:5249:2: ( ruleTextLiteral )
                    {
                    // InternalSQLParser.g:5249:2: ( ruleTextLiteral )
                    // InternalSQLParser.g:5250:3: ruleTextLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getTextLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTextLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getTextLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5255:2: ( ruleNumLiteral )
                    {
                    // InternalSQLParser.g:5255:2: ( ruleNumLiteral )
                    // InternalSQLParser.g:5256:3: ruleNumLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5261:2: ( ruleTemporalLiteral )
                    {
                    // InternalSQLParser.g:5261:2: ( ruleTemporalLiteral )
                    // InternalSQLParser.g:5262:3: ruleTemporalLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getTemporalLiteralParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTemporalLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getTemporalLiteralParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5267:2: ( NULL )
                    {
                    // InternalSQLParser.g:5267:2: ( NULL )
                    // InternalSQLParser.g:5268:3: NULL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getNULLKeyword_3()); 
                    }
                    match(input,NULL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getNULLKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:5273:2: ( ruleBoolLiteral )
                    {
                    // InternalSQLParser.g:5273:2: ( ruleBoolLiteral )
                    // InternalSQLParser.g:5274:3: ruleBoolLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBoolLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__TemporalLiteral__Alternatives"
    // InternalSQLParser.g:5283:1: rule__TemporalLiteral__Alternatives : ( ( ( rule__TemporalLiteral__Group_0__0 ) ) | ( ( rule__TemporalLiteral__Group_1__0 ) ) | ( ( rule__TemporalLiteral__Group_2__0 ) ) );
    public final void rule__TemporalLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5287:1: ( ( ( rule__TemporalLiteral__Group_0__0 ) ) | ( ( rule__TemporalLiteral__Group_1__0 ) ) | ( ( rule__TemporalLiteral__Group_2__0 ) ) )
            int alt62=3;
            switch ( input.LA(1) ) {
            case DATE:
                {
                alt62=1;
                }
                break;
            case TIME:
                {
                alt62=2;
                }
                break;
            case TIMESTAMP:
                {
                alt62=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }

            switch (alt62) {
                case 1 :
                    // InternalSQLParser.g:5288:2: ( ( rule__TemporalLiteral__Group_0__0 ) )
                    {
                    // InternalSQLParser.g:5288:2: ( ( rule__TemporalLiteral__Group_0__0 ) )
                    // InternalSQLParser.g:5289:3: ( rule__TemporalLiteral__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalLiteralAccess().getGroup_0()); 
                    }
                    // InternalSQLParser.g:5290:3: ( rule__TemporalLiteral__Group_0__0 )
                    // InternalSQLParser.g:5290:4: rule__TemporalLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TemporalLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalLiteralAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5294:2: ( ( rule__TemporalLiteral__Group_1__0 ) )
                    {
                    // InternalSQLParser.g:5294:2: ( ( rule__TemporalLiteral__Group_1__0 ) )
                    // InternalSQLParser.g:5295:3: ( rule__TemporalLiteral__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalLiteralAccess().getGroup_1()); 
                    }
                    // InternalSQLParser.g:5296:3: ( rule__TemporalLiteral__Group_1__0 )
                    // InternalSQLParser.g:5296:4: rule__TemporalLiteral__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TemporalLiteral__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalLiteralAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5300:2: ( ( rule__TemporalLiteral__Group_2__0 ) )
                    {
                    // InternalSQLParser.g:5300:2: ( ( rule__TemporalLiteral__Group_2__0 ) )
                    // InternalSQLParser.g:5301:3: ( rule__TemporalLiteral__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTemporalLiteralAccess().getGroup_2()); 
                    }
                    // InternalSQLParser.g:5302:3: ( rule__TemporalLiteral__Group_2__0 )
                    // InternalSQLParser.g:5302:4: rule__TemporalLiteral__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TemporalLiteral__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTemporalLiteralAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Alternatives"


    // $ANTLR start "rule__BoolLiteral__Alternatives"
    // InternalSQLParser.g:5310:1: rule__BoolLiteral__Alternatives : ( ( TRUE ) | ( FALSE ) );
    public final void rule__BoolLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5314:1: ( ( TRUE ) | ( FALSE ) )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==TRUE) ) {
                alt63=1;
            }
            else if ( (LA63_0==FALSE) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }
            switch (alt63) {
                case 1 :
                    // InternalSQLParser.g:5315:2: ( TRUE )
                    {
                    // InternalSQLParser.g:5315:2: ( TRUE )
                    // InternalSQLParser.g:5316:3: TRUE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }
                    match(input,TRUE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5321:2: ( FALSE )
                    {
                    // InternalSQLParser.g:5321:2: ( FALSE )
                    // InternalSQLParser.g:5322:3: FALSE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }
                    match(input,FALSE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolLiteral__Alternatives"


    // $ANTLR start "rule__XFunction__Alternatives"
    // InternalSQLParser.g:5331:1: rule__XFunction__Alternatives : ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) );
    public final void rule__XFunction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5335:1: ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) )
            int alt64=12;
            switch ( input.LA(1) ) {
            case IN_1:
                {
                alt64=1;
                }
                break;
            case NOTIN:
                {
                alt64=2;
                }
                break;
            case EQUAL:
                {
                alt64=3;
                }
                break;
            case NOTEQUAL:
                {
                alt64=4;
                }
                break;
            case LESS:
                {
                alt64=5;
                }
                break;
            case LESS_1:
                {
                alt64=6;
                }
                break;
            case GREATER_1:
                {
                alt64=7;
                }
                break;
            case GREATER:
                {
                alt64=8;
                }
                break;
            case BETWEEN_1:
                {
                alt64=9;
                }
                break;
            case BETWEEN_4:
                {
                alt64=10;
                }
                break;
            case BETWEEN_3:
                {
                alt64=11;
                }
                break;
            case BETWEEN_2:
                {
                alt64=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }

            switch (alt64) {
                case 1 :
                    // InternalSQLParser.g:5336:2: ( ( IN_1 ) )
                    {
                    // InternalSQLParser.g:5336:2: ( ( IN_1 ) )
                    // InternalSQLParser.g:5337:3: ( IN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }
                    // InternalSQLParser.g:5338:3: ( IN_1 )
                    // InternalSQLParser.g:5338:4: IN_1
                    {
                    match(input,IN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5342:2: ( ( NOTIN ) )
                    {
                    // InternalSQLParser.g:5342:2: ( ( NOTIN ) )
                    // InternalSQLParser.g:5343:3: ( NOTIN )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }
                    // InternalSQLParser.g:5344:3: ( NOTIN )
                    // InternalSQLParser.g:5344:4: NOTIN
                    {
                    match(input,NOTIN,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5348:2: ( ( EQUAL ) )
                    {
                    // InternalSQLParser.g:5348:2: ( ( EQUAL ) )
                    // InternalSQLParser.g:5349:3: ( EQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }
                    // InternalSQLParser.g:5350:3: ( EQUAL )
                    // InternalSQLParser.g:5350:4: EQUAL
                    {
                    match(input,EQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5354:2: ( ( NOTEQUAL ) )
                    {
                    // InternalSQLParser.g:5354:2: ( ( NOTEQUAL ) )
                    // InternalSQLParser.g:5355:3: ( NOTEQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }
                    // InternalSQLParser.g:5356:3: ( NOTEQUAL )
                    // InternalSQLParser.g:5356:4: NOTEQUAL
                    {
                    match(input,NOTEQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:5360:2: ( ( LESS ) )
                    {
                    // InternalSQLParser.g:5360:2: ( ( LESS ) )
                    // InternalSQLParser.g:5361:3: ( LESS )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }
                    // InternalSQLParser.g:5362:3: ( LESS )
                    // InternalSQLParser.g:5362:4: LESS
                    {
                    match(input,LESS,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:5366:2: ( ( LESS_1 ) )
                    {
                    // InternalSQLParser.g:5366:2: ( ( LESS_1 ) )
                    // InternalSQLParser.g:5367:3: ( LESS_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }
                    // InternalSQLParser.g:5368:3: ( LESS_1 )
                    // InternalSQLParser.g:5368:4: LESS_1
                    {
                    match(input,LESS_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:5372:2: ( ( GREATER_1 ) )
                    {
                    // InternalSQLParser.g:5372:2: ( ( GREATER_1 ) )
                    // InternalSQLParser.g:5373:3: ( GREATER_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }
                    // InternalSQLParser.g:5374:3: ( GREATER_1 )
                    // InternalSQLParser.g:5374:4: GREATER_1
                    {
                    match(input,GREATER_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:5378:2: ( ( GREATER ) )
                    {
                    // InternalSQLParser.g:5378:2: ( ( GREATER ) )
                    // InternalSQLParser.g:5379:3: ( GREATER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }
                    // InternalSQLParser.g:5380:3: ( GREATER )
                    // InternalSQLParser.g:5380:4: GREATER
                    {
                    match(input,GREATER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:5384:2: ( ( BETWEEN_1 ) )
                    {
                    // InternalSQLParser.g:5384:2: ( ( BETWEEN_1 ) )
                    // InternalSQLParser.g:5385:3: ( BETWEEN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }
                    // InternalSQLParser.g:5386:3: ( BETWEEN_1 )
                    // InternalSQLParser.g:5386:4: BETWEEN_1
                    {
                    match(input,BETWEEN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:5390:2: ( ( BETWEEN_4 ) )
                    {
                    // InternalSQLParser.g:5390:2: ( ( BETWEEN_4 ) )
                    // InternalSQLParser.g:5391:3: ( BETWEEN_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }
                    // InternalSQLParser.g:5392:3: ( BETWEEN_4 )
                    // InternalSQLParser.g:5392:4: BETWEEN_4
                    {
                    match(input,BETWEEN_4,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:5396:2: ( ( BETWEEN_3 ) )
                    {
                    // InternalSQLParser.g:5396:2: ( ( BETWEEN_3 ) )
                    // InternalSQLParser.g:5397:3: ( BETWEEN_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }
                    // InternalSQLParser.g:5398:3: ( BETWEEN_3 )
                    // InternalSQLParser.g:5398:4: BETWEEN_3
                    {
                    match(input,BETWEEN_3,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:5402:2: ( ( BETWEEN_2 ) )
                    {
                    // InternalSQLParser.g:5402:2: ( ( BETWEEN_2 ) )
                    // InternalSQLParser.g:5403:3: ( BETWEEN_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }
                    // InternalSQLParser.g:5404:3: ( BETWEEN_2 )
                    // InternalSQLParser.g:5404:4: BETWEEN_2
                    {
                    match(input,BETWEEN_2,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XFunction__Alternatives"


    // $ANTLR start "rule__EXTRACT_VALUES__Alternatives"
    // InternalSQLParser.g:5412:1: rule__EXTRACT_VALUES__Alternatives : ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) );
    public final void rule__EXTRACT_VALUES__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5416:1: ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) )
            int alt65=20;
            switch ( input.LA(1) ) {
            case MICROSECOND:
                {
                alt65=1;
                }
                break;
            case SECOND:
                {
                alt65=2;
                }
                break;
            case MINUTE:
                {
                alt65=3;
                }
                break;
            case HOUR:
                {
                alt65=4;
                }
                break;
            case DAY:
                {
                alt65=5;
                }
                break;
            case WEEK:
                {
                alt65=6;
                }
                break;
            case MONTH:
                {
                alt65=7;
                }
                break;
            case QUARTER:
                {
                alt65=8;
                }
                break;
            case YEAR:
                {
                alt65=9;
                }
                break;
            case SECOND_MICROSECOND:
                {
                alt65=10;
                }
                break;
            case MINUTE_MICROSECOND:
                {
                alt65=11;
                }
                break;
            case MINUTE_SECOND:
                {
                alt65=12;
                }
                break;
            case HOUR_MICROSECOND:
                {
                alt65=13;
                }
                break;
            case HOUR_SECOND:
                {
                alt65=14;
                }
                break;
            case HOUR_MINUTE:
                {
                alt65=15;
                }
                break;
            case DAY_MICROSECOND:
                {
                alt65=16;
                }
                break;
            case DAY_SECOND:
                {
                alt65=17;
                }
                break;
            case DAY_MINUTE:
                {
                alt65=18;
                }
                break;
            case DAY_HOUR:
                {
                alt65=19;
                }
                break;
            case YEAR_MONTH:
                {
                alt65=20;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }

            switch (alt65) {
                case 1 :
                    // InternalSQLParser.g:5417:2: ( ( MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5417:2: ( ( MICROSECOND ) )
                    // InternalSQLParser.g:5418:3: ( MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }
                    // InternalSQLParser.g:5419:3: ( MICROSECOND )
                    // InternalSQLParser.g:5419:4: MICROSECOND
                    {
                    match(input,MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSQLParser.g:5423:2: ( ( SECOND ) )
                    {
                    // InternalSQLParser.g:5423:2: ( ( SECOND ) )
                    // InternalSQLParser.g:5424:3: ( SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSQLParser.g:5425:3: ( SECOND )
                    // InternalSQLParser.g:5425:4: SECOND
                    {
                    match(input,SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSQLParser.g:5429:2: ( ( MINUTE ) )
                    {
                    // InternalSQLParser.g:5429:2: ( ( MINUTE ) )
                    // InternalSQLParser.g:5430:3: ( MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }
                    // InternalSQLParser.g:5431:3: ( MINUTE )
                    // InternalSQLParser.g:5431:4: MINUTE
                    {
                    match(input,MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSQLParser.g:5435:2: ( ( HOUR ) )
                    {
                    // InternalSQLParser.g:5435:2: ( ( HOUR ) )
                    // InternalSQLParser.g:5436:3: ( HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }
                    // InternalSQLParser.g:5437:3: ( HOUR )
                    // InternalSQLParser.g:5437:4: HOUR
                    {
                    match(input,HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSQLParser.g:5441:2: ( ( DAY ) )
                    {
                    // InternalSQLParser.g:5441:2: ( ( DAY ) )
                    // InternalSQLParser.g:5442:3: ( DAY )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }
                    // InternalSQLParser.g:5443:3: ( DAY )
                    // InternalSQLParser.g:5443:4: DAY
                    {
                    match(input,DAY,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSQLParser.g:5447:2: ( ( WEEK ) )
                    {
                    // InternalSQLParser.g:5447:2: ( ( WEEK ) )
                    // InternalSQLParser.g:5448:3: ( WEEK )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }
                    // InternalSQLParser.g:5449:3: ( WEEK )
                    // InternalSQLParser.g:5449:4: WEEK
                    {
                    match(input,WEEK,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSQLParser.g:5453:2: ( ( MONTH ) )
                    {
                    // InternalSQLParser.g:5453:2: ( ( MONTH ) )
                    // InternalSQLParser.g:5454:3: ( MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }
                    // InternalSQLParser.g:5455:3: ( MONTH )
                    // InternalSQLParser.g:5455:4: MONTH
                    {
                    match(input,MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSQLParser.g:5459:2: ( ( QUARTER ) )
                    {
                    // InternalSQLParser.g:5459:2: ( ( QUARTER ) )
                    // InternalSQLParser.g:5460:3: ( QUARTER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }
                    // InternalSQLParser.g:5461:3: ( QUARTER )
                    // InternalSQLParser.g:5461:4: QUARTER
                    {
                    match(input,QUARTER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSQLParser.g:5465:2: ( ( YEAR ) )
                    {
                    // InternalSQLParser.g:5465:2: ( ( YEAR ) )
                    // InternalSQLParser.g:5466:3: ( YEAR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }
                    // InternalSQLParser.g:5467:3: ( YEAR )
                    // InternalSQLParser.g:5467:4: YEAR
                    {
                    match(input,YEAR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSQLParser.g:5471:2: ( ( SECOND_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5471:2: ( ( SECOND_MICROSECOND ) )
                    // InternalSQLParser.g:5472:3: ( SECOND_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }
                    // InternalSQLParser.g:5473:3: ( SECOND_MICROSECOND )
                    // InternalSQLParser.g:5473:4: SECOND_MICROSECOND
                    {
                    match(input,SECOND_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSQLParser.g:5477:2: ( ( MINUTE_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5477:2: ( ( MINUTE_MICROSECOND ) )
                    // InternalSQLParser.g:5478:3: ( MINUTE_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }
                    // InternalSQLParser.g:5479:3: ( MINUTE_MICROSECOND )
                    // InternalSQLParser.g:5479:4: MINUTE_MICROSECOND
                    {
                    match(input,MINUTE_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSQLParser.g:5483:2: ( ( MINUTE_SECOND ) )
                    {
                    // InternalSQLParser.g:5483:2: ( ( MINUTE_SECOND ) )
                    // InternalSQLParser.g:5484:3: ( MINUTE_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }
                    // InternalSQLParser.g:5485:3: ( MINUTE_SECOND )
                    // InternalSQLParser.g:5485:4: MINUTE_SECOND
                    {
                    match(input,MINUTE_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSQLParser.g:5489:2: ( ( HOUR_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5489:2: ( ( HOUR_MICROSECOND ) )
                    // InternalSQLParser.g:5490:3: ( HOUR_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }
                    // InternalSQLParser.g:5491:3: ( HOUR_MICROSECOND )
                    // InternalSQLParser.g:5491:4: HOUR_MICROSECOND
                    {
                    match(input,HOUR_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSQLParser.g:5495:2: ( ( HOUR_SECOND ) )
                    {
                    // InternalSQLParser.g:5495:2: ( ( HOUR_SECOND ) )
                    // InternalSQLParser.g:5496:3: ( HOUR_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }
                    // InternalSQLParser.g:5497:3: ( HOUR_SECOND )
                    // InternalSQLParser.g:5497:4: HOUR_SECOND
                    {
                    match(input,HOUR_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSQLParser.g:5501:2: ( ( HOUR_MINUTE ) )
                    {
                    // InternalSQLParser.g:5501:2: ( ( HOUR_MINUTE ) )
                    // InternalSQLParser.g:5502:3: ( HOUR_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }
                    // InternalSQLParser.g:5503:3: ( HOUR_MINUTE )
                    // InternalSQLParser.g:5503:4: HOUR_MINUTE
                    {
                    match(input,HOUR_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalSQLParser.g:5507:2: ( ( DAY_MICROSECOND ) )
                    {
                    // InternalSQLParser.g:5507:2: ( ( DAY_MICROSECOND ) )
                    // InternalSQLParser.g:5508:3: ( DAY_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }
                    // InternalSQLParser.g:5509:3: ( DAY_MICROSECOND )
                    // InternalSQLParser.g:5509:4: DAY_MICROSECOND
                    {
                    match(input,DAY_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalSQLParser.g:5513:2: ( ( DAY_SECOND ) )
                    {
                    // InternalSQLParser.g:5513:2: ( ( DAY_SECOND ) )
                    // InternalSQLParser.g:5514:3: ( DAY_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }
                    // InternalSQLParser.g:5515:3: ( DAY_SECOND )
                    // InternalSQLParser.g:5515:4: DAY_SECOND
                    {
                    match(input,DAY_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalSQLParser.g:5519:2: ( ( DAY_MINUTE ) )
                    {
                    // InternalSQLParser.g:5519:2: ( ( DAY_MINUTE ) )
                    // InternalSQLParser.g:5520:3: ( DAY_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }
                    // InternalSQLParser.g:5521:3: ( DAY_MINUTE )
                    // InternalSQLParser.g:5521:4: DAY_MINUTE
                    {
                    match(input,DAY_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalSQLParser.g:5525:2: ( ( DAY_HOUR ) )
                    {
                    // InternalSQLParser.g:5525:2: ( ( DAY_HOUR ) )
                    // InternalSQLParser.g:5526:3: ( DAY_HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }
                    // InternalSQLParser.g:5527:3: ( DAY_HOUR )
                    // InternalSQLParser.g:5527:4: DAY_HOUR
                    {
                    match(input,DAY_HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalSQLParser.g:5531:2: ( ( YEAR_MONTH ) )
                    {
                    // InternalSQLParser.g:5531:2: ( ( YEAR_MONTH ) )
                    // InternalSQLParser.g:5532:3: ( YEAR_MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }
                    // InternalSQLParser.g:5533:3: ( YEAR_MONTH )
                    // InternalSQLParser.g:5533:4: YEAR_MONTH
                    {
                    match(input,YEAR_MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EXTRACT_VALUES__Alternatives"


    // $ANTLR start "rule__SelectStatement__Group__0"
    // InternalSQLParser.g:5541:1: rule__SelectStatement__Group__0 : rule__SelectStatement__Group__0__Impl rule__SelectStatement__Group__1 ;
    public final void rule__SelectStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5545:1: ( rule__SelectStatement__Group__0__Impl rule__SelectStatement__Group__1 )
            // InternalSQLParser.g:5546:2: rule__SelectStatement__Group__0__Impl rule__SelectStatement__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__SelectStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__0"


    // $ANTLR start "rule__SelectStatement__Group__0__Impl"
    // InternalSQLParser.g:5553:1: rule__SelectStatement__Group__0__Impl : ( ( RULE_JRNPARAM )? ) ;
    public final void rule__SelectStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5557:1: ( ( ( RULE_JRNPARAM )? ) )
            // InternalSQLParser.g:5558:1: ( ( RULE_JRNPARAM )? )
            {
            // InternalSQLParser.g:5558:1: ( ( RULE_JRNPARAM )? )
            // InternalSQLParser.g:5559:2: ( RULE_JRNPARAM )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getJRNPARAMTerminalRuleCall_0()); 
            }
            // InternalSQLParser.g:5560:2: ( RULE_JRNPARAM )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_JRNPARAM) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSQLParser.g:5560:3: RULE_JRNPARAM
                    {
                    match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__0__Impl"


    // $ANTLR start "rule__SelectStatement__Group__1"
    // InternalSQLParser.g:5568:1: rule__SelectStatement__Group__1 : rule__SelectStatement__Group__1__Impl rule__SelectStatement__Group__2 ;
    public final void rule__SelectStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5572:1: ( rule__SelectStatement__Group__1__Impl rule__SelectStatement__Group__2 )
            // InternalSQLParser.g:5573:2: rule__SelectStatement__Group__1__Impl rule__SelectStatement__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__SelectStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__1"


    // $ANTLR start "rule__SelectStatement__Group__1__Impl"
    // InternalSQLParser.g:5580:1: rule__SelectStatement__Group__1__Impl : ( ( rule__SelectStatement__WqAssignment_1 )? ) ;
    public final void rule__SelectStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5584:1: ( ( ( rule__SelectStatement__WqAssignment_1 )? ) )
            // InternalSQLParser.g:5585:1: ( ( rule__SelectStatement__WqAssignment_1 )? )
            {
            // InternalSQLParser.g:5585:1: ( ( rule__SelectStatement__WqAssignment_1 )? )
            // InternalSQLParser.g:5586:2: ( rule__SelectStatement__WqAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getWqAssignment_1()); 
            }
            // InternalSQLParser.g:5587:2: ( rule__SelectStatement__WqAssignment_1 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==WITH) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSQLParser.g:5587:3: rule__SelectStatement__WqAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SelectStatement__WqAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getWqAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__1__Impl"


    // $ANTLR start "rule__SelectStatement__Group__2"
    // InternalSQLParser.g:5595:1: rule__SelectStatement__Group__2 : rule__SelectStatement__Group__2__Impl ;
    public final void rule__SelectStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5599:1: ( rule__SelectStatement__Group__2__Impl )
            // InternalSQLParser.g:5600:2: rule__SelectStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__2"


    // $ANTLR start "rule__SelectStatement__Group__2__Impl"
    // InternalSQLParser.g:5606:1: rule__SelectStatement__Group__2__Impl : ( ( rule__SelectStatement__QueryAssignment_2 ) ) ;
    public final void rule__SelectStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5610:1: ( ( ( rule__SelectStatement__QueryAssignment_2 ) ) )
            // InternalSQLParser.g:5611:1: ( ( rule__SelectStatement__QueryAssignment_2 ) )
            {
            // InternalSQLParser.g:5611:1: ( ( rule__SelectStatement__QueryAssignment_2 ) )
            // InternalSQLParser.g:5612:2: ( rule__SelectStatement__QueryAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getQueryAssignment_2()); 
            }
            // InternalSQLParser.g:5613:2: ( rule__SelectStatement__QueryAssignment_2 )
            // InternalSQLParser.g:5613:3: rule__SelectStatement__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SelectStatement__QueryAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getQueryAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__Group__2__Impl"


    // $ANTLR start "rule__InsertStatement__Group__0"
    // InternalSQLParser.g:5622:1: rule__InsertStatement__Group__0 : rule__InsertStatement__Group__0__Impl rule__InsertStatement__Group__1 ;
    public final void rule__InsertStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5626:1: ( rule__InsertStatement__Group__0__Impl rule__InsertStatement__Group__1 )
            // InternalSQLParser.g:5627:2: rule__InsertStatement__Group__0__Impl rule__InsertStatement__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__InsertStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__0"


    // $ANTLR start "rule__InsertStatement__Group__0__Impl"
    // InternalSQLParser.g:5634:1: rule__InsertStatement__Group__0__Impl : ( INSERT ) ;
    public final void rule__InsertStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5638:1: ( ( INSERT ) )
            // InternalSQLParser.g:5639:1: ( INSERT )
            {
            // InternalSQLParser.g:5639:1: ( INSERT )
            // InternalSQLParser.g:5640:2: INSERT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getINSERTKeyword_0()); 
            }
            match(input,INSERT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getINSERTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__0__Impl"


    // $ANTLR start "rule__InsertStatement__Group__1"
    // InternalSQLParser.g:5649:1: rule__InsertStatement__Group__1 : rule__InsertStatement__Group__1__Impl rule__InsertStatement__Group__2 ;
    public final void rule__InsertStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5653:1: ( rule__InsertStatement__Group__1__Impl rule__InsertStatement__Group__2 )
            // InternalSQLParser.g:5654:2: rule__InsertStatement__Group__1__Impl rule__InsertStatement__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__InsertStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__1"


    // $ANTLR start "rule__InsertStatement__Group__1__Impl"
    // InternalSQLParser.g:5661:1: rule__InsertStatement__Group__1__Impl : ( INTO ) ;
    public final void rule__InsertStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5665:1: ( ( INTO ) )
            // InternalSQLParser.g:5666:1: ( INTO )
            {
            // InternalSQLParser.g:5666:1: ( INTO )
            // InternalSQLParser.g:5667:2: INTO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getINTOKeyword_1()); 
            }
            match(input,INTO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getINTOKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__1__Impl"


    // $ANTLR start "rule__InsertStatement__Group__2"
    // InternalSQLParser.g:5676:1: rule__InsertStatement__Group__2 : rule__InsertStatement__Group__2__Impl rule__InsertStatement__Group__3 ;
    public final void rule__InsertStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5680:1: ( rule__InsertStatement__Group__2__Impl rule__InsertStatement__Group__3 )
            // InternalSQLParser.g:5681:2: rule__InsertStatement__Group__2__Impl rule__InsertStatement__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__InsertStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__2"


    // $ANTLR start "rule__InsertStatement__Group__2__Impl"
    // InternalSQLParser.g:5688:1: rule__InsertStatement__Group__2__Impl : ( ( rule__InsertStatement__TblAssignment_2 ) ) ;
    public final void rule__InsertStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5692:1: ( ( ( rule__InsertStatement__TblAssignment_2 ) ) )
            // InternalSQLParser.g:5693:1: ( ( rule__InsertStatement__TblAssignment_2 ) )
            {
            // InternalSQLParser.g:5693:1: ( ( rule__InsertStatement__TblAssignment_2 ) )
            // InternalSQLParser.g:5694:2: ( rule__InsertStatement__TblAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getTblAssignment_2()); 
            }
            // InternalSQLParser.g:5695:2: ( rule__InsertStatement__TblAssignment_2 )
            // InternalSQLParser.g:5695:3: rule__InsertStatement__TblAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__TblAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getTblAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__2__Impl"


    // $ANTLR start "rule__InsertStatement__Group__3"
    // InternalSQLParser.g:5703:1: rule__InsertStatement__Group__3 : rule__InsertStatement__Group__3__Impl rule__InsertStatement__Group__4 ;
    public final void rule__InsertStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5707:1: ( rule__InsertStatement__Group__3__Impl rule__InsertStatement__Group__4 )
            // InternalSQLParser.g:5708:2: rule__InsertStatement__Group__3__Impl rule__InsertStatement__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__InsertStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__3"


    // $ANTLR start "rule__InsertStatement__Group__3__Impl"
    // InternalSQLParser.g:5715:1: rule__InsertStatement__Group__3__Impl : ( ( rule__InsertStatement__ColsAssignment_3 ) ) ;
    public final void rule__InsertStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5719:1: ( ( ( rule__InsertStatement__ColsAssignment_3 ) ) )
            // InternalSQLParser.g:5720:1: ( ( rule__InsertStatement__ColsAssignment_3 ) )
            {
            // InternalSQLParser.g:5720:1: ( ( rule__InsertStatement__ColsAssignment_3 ) )
            // InternalSQLParser.g:5721:2: ( rule__InsertStatement__ColsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getColsAssignment_3()); 
            }
            // InternalSQLParser.g:5722:2: ( rule__InsertStatement__ColsAssignment_3 )
            // InternalSQLParser.g:5722:3: rule__InsertStatement__ColsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__ColsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getColsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__3__Impl"


    // $ANTLR start "rule__InsertStatement__Group__4"
    // InternalSQLParser.g:5730:1: rule__InsertStatement__Group__4 : rule__InsertStatement__Group__4__Impl ;
    public final void rule__InsertStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5734:1: ( rule__InsertStatement__Group__4__Impl )
            // InternalSQLParser.g:5735:2: rule__InsertStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__4"


    // $ANTLR start "rule__InsertStatement__Group__4__Impl"
    // InternalSQLParser.g:5741:1: rule__InsertStatement__Group__4__Impl : ( ( rule__InsertStatement__ValsAssignment_4 ) ) ;
    public final void rule__InsertStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5745:1: ( ( ( rule__InsertStatement__ValsAssignment_4 ) ) )
            // InternalSQLParser.g:5746:1: ( ( rule__InsertStatement__ValsAssignment_4 ) )
            {
            // InternalSQLParser.g:5746:1: ( ( rule__InsertStatement__ValsAssignment_4 ) )
            // InternalSQLParser.g:5747:2: ( rule__InsertStatement__ValsAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getValsAssignment_4()); 
            }
            // InternalSQLParser.g:5748:2: ( rule__InsertStatement__ValsAssignment_4 )
            // InternalSQLParser.g:5748:3: rule__InsertStatement__ValsAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__InsertStatement__ValsAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getValsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__Group__4__Impl"


    // $ANTLR start "rule__CreateStatement__Group__0"
    // InternalSQLParser.g:5757:1: rule__CreateStatement__Group__0 : rule__CreateStatement__Group__0__Impl rule__CreateStatement__Group__1 ;
    public final void rule__CreateStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5761:1: ( rule__CreateStatement__Group__0__Impl rule__CreateStatement__Group__1 )
            // InternalSQLParser.g:5762:2: rule__CreateStatement__Group__0__Impl rule__CreateStatement__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__CreateStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Group__0"


    // $ANTLR start "rule__CreateStatement__Group__0__Impl"
    // InternalSQLParser.g:5769:1: rule__CreateStatement__Group__0__Impl : ( CREATE ) ;
    public final void rule__CreateStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5773:1: ( ( CREATE ) )
            // InternalSQLParser.g:5774:1: ( CREATE )
            {
            // InternalSQLParser.g:5774:1: ( CREATE )
            // InternalSQLParser.g:5775:2: CREATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementAccess().getCREATEKeyword_0()); 
            }
            match(input,CREATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementAccess().getCREATEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Group__0__Impl"


    // $ANTLR start "rule__CreateStatement__Group__1"
    // InternalSQLParser.g:5784:1: rule__CreateStatement__Group__1 : rule__CreateStatement__Group__1__Impl ;
    public final void rule__CreateStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5788:1: ( rule__CreateStatement__Group__1__Impl )
            // InternalSQLParser.g:5789:2: rule__CreateStatement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CreateStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Group__1"


    // $ANTLR start "rule__CreateStatement__Group__1__Impl"
    // InternalSQLParser.g:5795:1: rule__CreateStatement__Group__1__Impl : ( ( rule__CreateStatement__Create_tblAssignment_1 ) ) ;
    public final void rule__CreateStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5799:1: ( ( ( rule__CreateStatement__Create_tblAssignment_1 ) ) )
            // InternalSQLParser.g:5800:1: ( ( rule__CreateStatement__Create_tblAssignment_1 ) )
            {
            // InternalSQLParser.g:5800:1: ( ( rule__CreateStatement__Create_tblAssignment_1 ) )
            // InternalSQLParser.g:5801:2: ( rule__CreateStatement__Create_tblAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementAccess().getCreate_tblAssignment_1()); 
            }
            // InternalSQLParser.g:5802:2: ( rule__CreateStatement__Create_tblAssignment_1 )
            // InternalSQLParser.g:5802:3: rule__CreateStatement__Create_tblAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CreateStatement__Create_tblAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementAccess().getCreate_tblAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Group__1__Impl"


    // $ANTLR start "rule__CreateTable__Group__0"
    // InternalSQLParser.g:5811:1: rule__CreateTable__Group__0 : rule__CreateTable__Group__0__Impl rule__CreateTable__Group__1 ;
    public final void rule__CreateTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5815:1: ( rule__CreateTable__Group__0__Impl rule__CreateTable__Group__1 )
            // InternalSQLParser.g:5816:2: rule__CreateTable__Group__0__Impl rule__CreateTable__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__CreateTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__0"


    // $ANTLR start "rule__CreateTable__Group__0__Impl"
    // InternalSQLParser.g:5823:1: rule__CreateTable__Group__0__Impl : ( TABLE ) ;
    public final void rule__CreateTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5827:1: ( ( TABLE ) )
            // InternalSQLParser.g:5828:1: ( TABLE )
            {
            // InternalSQLParser.g:5828:1: ( TABLE )
            // InternalSQLParser.g:5829:2: TABLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTABLEKeyword_0()); 
            }
            match(input,TABLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTABLEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__0__Impl"


    // $ANTLR start "rule__CreateTable__Group__1"
    // InternalSQLParser.g:5838:1: rule__CreateTable__Group__1 : rule__CreateTable__Group__1__Impl rule__CreateTable__Group__2 ;
    public final void rule__CreateTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5842:1: ( rule__CreateTable__Group__1__Impl rule__CreateTable__Group__2 )
            // InternalSQLParser.g:5843:2: rule__CreateTable__Group__1__Impl rule__CreateTable__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__CreateTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__1"


    // $ANTLR start "rule__CreateTable__Group__1__Impl"
    // InternalSQLParser.g:5850:1: rule__CreateTable__Group__1__Impl : ( ( rule__CreateTable__TableNameAssignment_1 ) ) ;
    public final void rule__CreateTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5854:1: ( ( ( rule__CreateTable__TableNameAssignment_1 ) ) )
            // InternalSQLParser.g:5855:1: ( ( rule__CreateTable__TableNameAssignment_1 ) )
            {
            // InternalSQLParser.g:5855:1: ( ( rule__CreateTable__TableNameAssignment_1 ) )
            // InternalSQLParser.g:5856:2: ( rule__CreateTable__TableNameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTableNameAssignment_1()); 
            }
            // InternalSQLParser.g:5857:2: ( rule__CreateTable__TableNameAssignment_1 )
            // InternalSQLParser.g:5857:3: rule__CreateTable__TableNameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__CreateTable__TableNameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTableNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__1__Impl"


    // $ANTLR start "rule__CreateTable__Group__2"
    // InternalSQLParser.g:5865:1: rule__CreateTable__Group__2 : rule__CreateTable__Group__2__Impl rule__CreateTable__Group__3 ;
    public final void rule__CreateTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5869:1: ( rule__CreateTable__Group__2__Impl rule__CreateTable__Group__3 )
            // InternalSQLParser.g:5870:2: rule__CreateTable__Group__2__Impl rule__CreateTable__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__CreateTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__2"


    // $ANTLR start "rule__CreateTable__Group__2__Impl"
    // InternalSQLParser.g:5877:1: rule__CreateTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__CreateTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5881:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:5882:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:5882:1: ( LeftParenthesis )
            // InternalSQLParser.g:5883:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__2__Impl"


    // $ANTLR start "rule__CreateTable__Group__3"
    // InternalSQLParser.g:5892:1: rule__CreateTable__Group__3 : rule__CreateTable__Group__3__Impl rule__CreateTable__Group__4 ;
    public final void rule__CreateTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5896:1: ( rule__CreateTable__Group__3__Impl rule__CreateTable__Group__4 )
            // InternalSQLParser.g:5897:2: rule__CreateTable__Group__3__Impl rule__CreateTable__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__CreateTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__3"


    // $ANTLR start "rule__CreateTable__Group__3__Impl"
    // InternalSQLParser.g:5904:1: rule__CreateTable__Group__3__Impl : ( ( rule__CreateTable__TableElementListAssignment_3 ) ) ;
    public final void rule__CreateTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5908:1: ( ( ( rule__CreateTable__TableElementListAssignment_3 ) ) )
            // InternalSQLParser.g:5909:1: ( ( rule__CreateTable__TableElementListAssignment_3 ) )
            {
            // InternalSQLParser.g:5909:1: ( ( rule__CreateTable__TableElementListAssignment_3 ) )
            // InternalSQLParser.g:5910:2: ( rule__CreateTable__TableElementListAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTableElementListAssignment_3()); 
            }
            // InternalSQLParser.g:5911:2: ( rule__CreateTable__TableElementListAssignment_3 )
            // InternalSQLParser.g:5911:3: rule__CreateTable__TableElementListAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__CreateTable__TableElementListAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTableElementListAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__3__Impl"


    // $ANTLR start "rule__CreateTable__Group__4"
    // InternalSQLParser.g:5919:1: rule__CreateTable__Group__4 : rule__CreateTable__Group__4__Impl ;
    public final void rule__CreateTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5923:1: ( rule__CreateTable__Group__4__Impl )
            // InternalSQLParser.g:5924:2: rule__CreateTable__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__CreateTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__4"


    // $ANTLR start "rule__CreateTable__Group__4__Impl"
    // InternalSQLParser.g:5930:1: rule__CreateTable__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__CreateTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5934:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:5935:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:5935:1: ( RightParenthesis )
            // InternalSQLParser.g:5936:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__Group__4__Impl"


    // $ANTLR start "rule__TableElementList__Group__0"
    // InternalSQLParser.g:5946:1: rule__TableElementList__Group__0 : rule__TableElementList__Group__0__Impl rule__TableElementList__Group__1 ;
    public final void rule__TableElementList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5950:1: ( rule__TableElementList__Group__0__Impl rule__TableElementList__Group__1 )
            // InternalSQLParser.g:5951:2: rule__TableElementList__Group__0__Impl rule__TableElementList__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__TableElementList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group__0"


    // $ANTLR start "rule__TableElementList__Group__0__Impl"
    // InternalSQLParser.g:5958:1: rule__TableElementList__Group__0__Impl : ( ( rule__TableElementList__TableElementAssignment_0 ) ) ;
    public final void rule__TableElementList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5962:1: ( ( ( rule__TableElementList__TableElementAssignment_0 ) ) )
            // InternalSQLParser.g:5963:1: ( ( rule__TableElementList__TableElementAssignment_0 ) )
            {
            // InternalSQLParser.g:5963:1: ( ( rule__TableElementList__TableElementAssignment_0 ) )
            // InternalSQLParser.g:5964:2: ( rule__TableElementList__TableElementAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getTableElementAssignment_0()); 
            }
            // InternalSQLParser.g:5965:2: ( rule__TableElementList__TableElementAssignment_0 )
            // InternalSQLParser.g:5965:3: rule__TableElementList__TableElementAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__TableElementAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getTableElementAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group__0__Impl"


    // $ANTLR start "rule__TableElementList__Group__1"
    // InternalSQLParser.g:5973:1: rule__TableElementList__Group__1 : rule__TableElementList__Group__1__Impl ;
    public final void rule__TableElementList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5977:1: ( rule__TableElementList__Group__1__Impl )
            // InternalSQLParser.g:5978:2: rule__TableElementList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group__1"


    // $ANTLR start "rule__TableElementList__Group__1__Impl"
    // InternalSQLParser.g:5984:1: rule__TableElementList__Group__1__Impl : ( ( rule__TableElementList__Group_1__0 )* ) ;
    public final void rule__TableElementList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:5988:1: ( ( ( rule__TableElementList__Group_1__0 )* ) )
            // InternalSQLParser.g:5989:1: ( ( rule__TableElementList__Group_1__0 )* )
            {
            // InternalSQLParser.g:5989:1: ( ( rule__TableElementList__Group_1__0 )* )
            // InternalSQLParser.g:5990:2: ( rule__TableElementList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:5991:2: ( rule__TableElementList__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==Comma) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalSQLParser.g:5991:3: rule__TableElementList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__TableElementList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group__1__Impl"


    // $ANTLR start "rule__TableElementList__Group_1__0"
    // InternalSQLParser.g:6000:1: rule__TableElementList__Group_1__0 : rule__TableElementList__Group_1__0__Impl rule__TableElementList__Group_1__1 ;
    public final void rule__TableElementList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6004:1: ( rule__TableElementList__Group_1__0__Impl rule__TableElementList__Group_1__1 )
            // InternalSQLParser.g:6005:2: rule__TableElementList__Group_1__0__Impl rule__TableElementList__Group_1__1
            {
            pushFollow(FOLLOW_10);
            rule__TableElementList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group_1__0"


    // $ANTLR start "rule__TableElementList__Group_1__0__Impl"
    // InternalSQLParser.g:6012:1: rule__TableElementList__Group_1__0__Impl : ( Comma ) ;
    public final void rule__TableElementList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6016:1: ( ( Comma ) )
            // InternalSQLParser.g:6017:1: ( Comma )
            {
            // InternalSQLParser.g:6017:1: ( Comma )
            // InternalSQLParser.g:6018:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group_1__0__Impl"


    // $ANTLR start "rule__TableElementList__Group_1__1"
    // InternalSQLParser.g:6027:1: rule__TableElementList__Group_1__1 : rule__TableElementList__Group_1__1__Impl ;
    public final void rule__TableElementList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6031:1: ( rule__TableElementList__Group_1__1__Impl )
            // InternalSQLParser.g:6032:2: rule__TableElementList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group_1__1"


    // $ANTLR start "rule__TableElementList__Group_1__1__Impl"
    // InternalSQLParser.g:6038:1: rule__TableElementList__Group_1__1__Impl : ( ( rule__TableElementList__TableElementAssignment_1_1 ) ) ;
    public final void rule__TableElementList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6042:1: ( ( ( rule__TableElementList__TableElementAssignment_1_1 ) ) )
            // InternalSQLParser.g:6043:1: ( ( rule__TableElementList__TableElementAssignment_1_1 ) )
            {
            // InternalSQLParser.g:6043:1: ( ( rule__TableElementList__TableElementAssignment_1_1 ) )
            // InternalSQLParser.g:6044:2: ( rule__TableElementList__TableElementAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getTableElementAssignment_1_1()); 
            }
            // InternalSQLParser.g:6045:2: ( rule__TableElementList__TableElementAssignment_1_1 )
            // InternalSQLParser.g:6045:3: rule__TableElementList__TableElementAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableElementList__TableElementAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getTableElementAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnDefinition__Group__0"
    // InternalSQLParser.g:6054:1: rule__ColumnDefinition__Group__0 : rule__ColumnDefinition__Group__0__Impl rule__ColumnDefinition__Group__1 ;
    public final void rule__ColumnDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6058:1: ( rule__ColumnDefinition__Group__0__Impl rule__ColumnDefinition__Group__1 )
            // InternalSQLParser.g:6059:2: rule__ColumnDefinition__Group__0__Impl rule__ColumnDefinition__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__ColumnDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__0"


    // $ANTLR start "rule__ColumnDefinition__Group__0__Impl"
    // InternalSQLParser.g:6066:1: rule__ColumnDefinition__Group__0__Impl : ( ( rule__ColumnDefinition__ColumnNameAssignment_0 ) ) ;
    public final void rule__ColumnDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6070:1: ( ( ( rule__ColumnDefinition__ColumnNameAssignment_0 ) ) )
            // InternalSQLParser.g:6071:1: ( ( rule__ColumnDefinition__ColumnNameAssignment_0 ) )
            {
            // InternalSQLParser.g:6071:1: ( ( rule__ColumnDefinition__ColumnNameAssignment_0 ) )
            // InternalSQLParser.g:6072:2: ( rule__ColumnDefinition__ColumnNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getColumnNameAssignment_0()); 
            }
            // InternalSQLParser.g:6073:2: ( rule__ColumnDefinition__ColumnNameAssignment_0 )
            // InternalSQLParser.g:6073:3: rule__ColumnDefinition__ColumnNameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__ColumnNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getColumnNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__0__Impl"


    // $ANTLR start "rule__ColumnDefinition__Group__1"
    // InternalSQLParser.g:6081:1: rule__ColumnDefinition__Group__1 : rule__ColumnDefinition__Group__1__Impl ;
    public final void rule__ColumnDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6085:1: ( rule__ColumnDefinition__Group__1__Impl )
            // InternalSQLParser.g:6086:2: rule__ColumnDefinition__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__1"


    // $ANTLR start "rule__ColumnDefinition__Group__1__Impl"
    // InternalSQLParser.g:6092:1: rule__ColumnDefinition__Group__1__Impl : ( ( rule__ColumnDefinition__FieldDefinitionAssignment_1 ) ) ;
    public final void rule__ColumnDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6096:1: ( ( ( rule__ColumnDefinition__FieldDefinitionAssignment_1 ) ) )
            // InternalSQLParser.g:6097:1: ( ( rule__ColumnDefinition__FieldDefinitionAssignment_1 ) )
            {
            // InternalSQLParser.g:6097:1: ( ( rule__ColumnDefinition__FieldDefinitionAssignment_1 ) )
            // InternalSQLParser.g:6098:2: ( rule__ColumnDefinition__FieldDefinitionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getFieldDefinitionAssignment_1()); 
            }
            // InternalSQLParser.g:6099:2: ( rule__ColumnDefinition__FieldDefinitionAssignment_1 )
            // InternalSQLParser.g:6099:3: rule__ColumnDefinition__FieldDefinitionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnDefinition__FieldDefinitionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getFieldDefinitionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__Group__1__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__0"
    // InternalSQLParser.g:6108:1: rule__TableConstraintDef__Group_0__0 : rule__TableConstraintDef__Group_0__0__Impl rule__TableConstraintDef__Group_0__1 ;
    public final void rule__TableConstraintDef__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6112:1: ( rule__TableConstraintDef__Group_0__0__Impl rule__TableConstraintDef__Group_0__1 )
            // InternalSQLParser.g:6113:2: rule__TableConstraintDef__Group_0__0__Impl rule__TableConstraintDef__Group_0__1
            {
            pushFollow(FOLLOW_15);
            rule__TableConstraintDef__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__0"


    // $ANTLR start "rule__TableConstraintDef__Group_0__0__Impl"
    // InternalSQLParser.g:6120:1: rule__TableConstraintDef__Group_0__0__Impl : ( PRIMARY ) ;
    public final void rule__TableConstraintDef__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6124:1: ( ( PRIMARY ) )
            // InternalSQLParser.g:6125:1: ( PRIMARY )
            {
            // InternalSQLParser.g:6125:1: ( PRIMARY )
            // InternalSQLParser.g:6126:2: PRIMARY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getPRIMARYKeyword_0_0()); 
            }
            match(input,PRIMARY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getPRIMARYKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__0__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__1"
    // InternalSQLParser.g:6135:1: rule__TableConstraintDef__Group_0__1 : rule__TableConstraintDef__Group_0__1__Impl rule__TableConstraintDef__Group_0__2 ;
    public final void rule__TableConstraintDef__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6139:1: ( rule__TableConstraintDef__Group_0__1__Impl rule__TableConstraintDef__Group_0__2 )
            // InternalSQLParser.g:6140:2: rule__TableConstraintDef__Group_0__1__Impl rule__TableConstraintDef__Group_0__2
            {
            pushFollow(FOLLOW_9);
            rule__TableConstraintDef__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__1"


    // $ANTLR start "rule__TableConstraintDef__Group_0__1__Impl"
    // InternalSQLParser.g:6147:1: rule__TableConstraintDef__Group_0__1__Impl : ( KEY ) ;
    public final void rule__TableConstraintDef__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6151:1: ( ( KEY ) )
            // InternalSQLParser.g:6152:1: ( KEY )
            {
            // InternalSQLParser.g:6152:1: ( KEY )
            // InternalSQLParser.g:6153:2: KEY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getKEYKeyword_0_1()); 
            }
            match(input,KEY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getKEYKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__1__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__2"
    // InternalSQLParser.g:6162:1: rule__TableConstraintDef__Group_0__2 : rule__TableConstraintDef__Group_0__2__Impl rule__TableConstraintDef__Group_0__3 ;
    public final void rule__TableConstraintDef__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6166:1: ( rule__TableConstraintDef__Group_0__2__Impl rule__TableConstraintDef__Group_0__3 )
            // InternalSQLParser.g:6167:2: rule__TableConstraintDef__Group_0__2__Impl rule__TableConstraintDef__Group_0__3
            {
            pushFollow(FOLLOW_16);
            rule__TableConstraintDef__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__2"


    // $ANTLR start "rule__TableConstraintDef__Group_0__2__Impl"
    // InternalSQLParser.g:6174:1: rule__TableConstraintDef__Group_0__2__Impl : ( LeftParenthesis ) ;
    public final void rule__TableConstraintDef__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6178:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6179:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6179:1: ( LeftParenthesis )
            // InternalSQLParser.g:6180:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_0_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__2__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__3"
    // InternalSQLParser.g:6189:1: rule__TableConstraintDef__Group_0__3 : rule__TableConstraintDef__Group_0__3__Impl rule__TableConstraintDef__Group_0__4 ;
    public final void rule__TableConstraintDef__Group_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6193:1: ( rule__TableConstraintDef__Group_0__3__Impl rule__TableConstraintDef__Group_0__4 )
            // InternalSQLParser.g:6194:2: rule__TableConstraintDef__Group_0__3__Impl rule__TableConstraintDef__Group_0__4
            {
            pushFollow(FOLLOW_11);
            rule__TableConstraintDef__Group_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__3"


    // $ANTLR start "rule__TableConstraintDef__Group_0__3__Impl"
    // InternalSQLParser.g:6201:1: rule__TableConstraintDef__Group_0__3__Impl : ( ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 ) ) ;
    public final void rule__TableConstraintDef__Group_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6205:1: ( ( ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 ) ) )
            // InternalSQLParser.g:6206:1: ( ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 ) )
            {
            // InternalSQLParser.g:6206:1: ( ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 ) )
            // InternalSQLParser.g:6207:2: ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getColumnNameListAssignment_0_3()); 
            }
            // InternalSQLParser.g:6208:2: ( rule__TableConstraintDef__ColumnNameListAssignment_0_3 )
            // InternalSQLParser.g:6208:3: rule__TableConstraintDef__ColumnNameListAssignment_0_3
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__ColumnNameListAssignment_0_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getColumnNameListAssignment_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__3__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_0__4"
    // InternalSQLParser.g:6216:1: rule__TableConstraintDef__Group_0__4 : rule__TableConstraintDef__Group_0__4__Impl ;
    public final void rule__TableConstraintDef__Group_0__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6220:1: ( rule__TableConstraintDef__Group_0__4__Impl )
            // InternalSQLParser.g:6221:2: rule__TableConstraintDef__Group_0__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_0__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__4"


    // $ANTLR start "rule__TableConstraintDef__Group_0__4__Impl"
    // InternalSQLParser.g:6227:1: rule__TableConstraintDef__Group_0__4__Impl : ( RightParenthesis ) ;
    public final void rule__TableConstraintDef__Group_0__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6231:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6232:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6232:1: ( RightParenthesis )
            // InternalSQLParser.g:6233:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_0_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_0_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_0__4__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__0"
    // InternalSQLParser.g:6243:1: rule__TableConstraintDef__Group_1__0 : rule__TableConstraintDef__Group_1__0__Impl rule__TableConstraintDef__Group_1__1 ;
    public final void rule__TableConstraintDef__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6247:1: ( rule__TableConstraintDef__Group_1__0__Impl rule__TableConstraintDef__Group_1__1 )
            // InternalSQLParser.g:6248:2: rule__TableConstraintDef__Group_1__0__Impl rule__TableConstraintDef__Group_1__1
            {
            pushFollow(FOLLOW_15);
            rule__TableConstraintDef__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__0"


    // $ANTLR start "rule__TableConstraintDef__Group_1__0__Impl"
    // InternalSQLParser.g:6255:1: rule__TableConstraintDef__Group_1__0__Impl : ( FOREIGN ) ;
    public final void rule__TableConstraintDef__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6259:1: ( ( FOREIGN ) )
            // InternalSQLParser.g:6260:1: ( FOREIGN )
            {
            // InternalSQLParser.g:6260:1: ( FOREIGN )
            // InternalSQLParser.g:6261:2: FOREIGN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getFOREIGNKeyword_1_0()); 
            }
            match(input,FOREIGN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getFOREIGNKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__0__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__1"
    // InternalSQLParser.g:6270:1: rule__TableConstraintDef__Group_1__1 : rule__TableConstraintDef__Group_1__1__Impl rule__TableConstraintDef__Group_1__2 ;
    public final void rule__TableConstraintDef__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6274:1: ( rule__TableConstraintDef__Group_1__1__Impl rule__TableConstraintDef__Group_1__2 )
            // InternalSQLParser.g:6275:2: rule__TableConstraintDef__Group_1__1__Impl rule__TableConstraintDef__Group_1__2
            {
            pushFollow(FOLLOW_9);
            rule__TableConstraintDef__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__1"


    // $ANTLR start "rule__TableConstraintDef__Group_1__1__Impl"
    // InternalSQLParser.g:6282:1: rule__TableConstraintDef__Group_1__1__Impl : ( KEY ) ;
    public final void rule__TableConstraintDef__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6286:1: ( ( KEY ) )
            // InternalSQLParser.g:6287:1: ( KEY )
            {
            // InternalSQLParser.g:6287:1: ( KEY )
            // InternalSQLParser.g:6288:2: KEY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getKEYKeyword_1_1()); 
            }
            match(input,KEY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getKEYKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__1__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__2"
    // InternalSQLParser.g:6297:1: rule__TableConstraintDef__Group_1__2 : rule__TableConstraintDef__Group_1__2__Impl rule__TableConstraintDef__Group_1__3 ;
    public final void rule__TableConstraintDef__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6301:1: ( rule__TableConstraintDef__Group_1__2__Impl rule__TableConstraintDef__Group_1__3 )
            // InternalSQLParser.g:6302:2: rule__TableConstraintDef__Group_1__2__Impl rule__TableConstraintDef__Group_1__3
            {
            pushFollow(FOLLOW_16);
            rule__TableConstraintDef__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__2"


    // $ANTLR start "rule__TableConstraintDef__Group_1__2__Impl"
    // InternalSQLParser.g:6309:1: rule__TableConstraintDef__Group_1__2__Impl : ( LeftParenthesis ) ;
    public final void rule__TableConstraintDef__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6313:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6314:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6314:1: ( LeftParenthesis )
            // InternalSQLParser.g:6315:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_1_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__2__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__3"
    // InternalSQLParser.g:6324:1: rule__TableConstraintDef__Group_1__3 : rule__TableConstraintDef__Group_1__3__Impl rule__TableConstraintDef__Group_1__4 ;
    public final void rule__TableConstraintDef__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6328:1: ( rule__TableConstraintDef__Group_1__3__Impl rule__TableConstraintDef__Group_1__4 )
            // InternalSQLParser.g:6329:2: rule__TableConstraintDef__Group_1__3__Impl rule__TableConstraintDef__Group_1__4
            {
            pushFollow(FOLLOW_11);
            rule__TableConstraintDef__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__3"


    // $ANTLR start "rule__TableConstraintDef__Group_1__3__Impl"
    // InternalSQLParser.g:6336:1: rule__TableConstraintDef__Group_1__3__Impl : ( ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 ) ) ;
    public final void rule__TableConstraintDef__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6340:1: ( ( ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 ) ) )
            // InternalSQLParser.g:6341:1: ( ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 ) )
            {
            // InternalSQLParser.g:6341:1: ( ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 ) )
            // InternalSQLParser.g:6342:2: ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getColumnNameListAssignment_1_3()); 
            }
            // InternalSQLParser.g:6343:2: ( rule__TableConstraintDef__ColumnNameListAssignment_1_3 )
            // InternalSQLParser.g:6343:3: rule__TableConstraintDef__ColumnNameListAssignment_1_3
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__ColumnNameListAssignment_1_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getColumnNameListAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__3__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__4"
    // InternalSQLParser.g:6351:1: rule__TableConstraintDef__Group_1__4 : rule__TableConstraintDef__Group_1__4__Impl rule__TableConstraintDef__Group_1__5 ;
    public final void rule__TableConstraintDef__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6355:1: ( rule__TableConstraintDef__Group_1__4__Impl rule__TableConstraintDef__Group_1__5 )
            // InternalSQLParser.g:6356:2: rule__TableConstraintDef__Group_1__4__Impl rule__TableConstraintDef__Group_1__5
            {
            pushFollow(FOLLOW_17);
            rule__TableConstraintDef__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__4"


    // $ANTLR start "rule__TableConstraintDef__Group_1__4__Impl"
    // InternalSQLParser.g:6363:1: rule__TableConstraintDef__Group_1__4__Impl : ( RightParenthesis ) ;
    public final void rule__TableConstraintDef__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6367:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6368:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6368:1: ( RightParenthesis )
            // InternalSQLParser.g:6369:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_1_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__4__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__5"
    // InternalSQLParser.g:6378:1: rule__TableConstraintDef__Group_1__5 : rule__TableConstraintDef__Group_1__5__Impl rule__TableConstraintDef__Group_1__6 ;
    public final void rule__TableConstraintDef__Group_1__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6382:1: ( rule__TableConstraintDef__Group_1__5__Impl rule__TableConstraintDef__Group_1__6 )
            // InternalSQLParser.g:6383:2: rule__TableConstraintDef__Group_1__5__Impl rule__TableConstraintDef__Group_1__6
            {
            pushFollow(FOLLOW_18);
            rule__TableConstraintDef__Group_1__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__5"


    // $ANTLR start "rule__TableConstraintDef__Group_1__5__Impl"
    // InternalSQLParser.g:6390:1: rule__TableConstraintDef__Group_1__5__Impl : ( REFERENCES ) ;
    public final void rule__TableConstraintDef__Group_1__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6394:1: ( ( REFERENCES ) )
            // InternalSQLParser.g:6395:1: ( REFERENCES )
            {
            // InternalSQLParser.g:6395:1: ( REFERENCES )
            // InternalSQLParser.g:6396:2: REFERENCES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getREFERENCESKeyword_1_5()); 
            }
            match(input,REFERENCES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getREFERENCESKeyword_1_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__5__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__6"
    // InternalSQLParser.g:6405:1: rule__TableConstraintDef__Group_1__6 : rule__TableConstraintDef__Group_1__6__Impl rule__TableConstraintDef__Group_1__7 ;
    public final void rule__TableConstraintDef__Group_1__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6409:1: ( rule__TableConstraintDef__Group_1__6__Impl rule__TableConstraintDef__Group_1__7 )
            // InternalSQLParser.g:6410:2: rule__TableConstraintDef__Group_1__6__Impl rule__TableConstraintDef__Group_1__7
            {
            pushFollow(FOLLOW_9);
            rule__TableConstraintDef__Group_1__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__6"


    // $ANTLR start "rule__TableConstraintDef__Group_1__6__Impl"
    // InternalSQLParser.g:6417:1: rule__TableConstraintDef__Group_1__6__Impl : ( ( rule__TableConstraintDef__TableNameAssignment_1_6 ) ) ;
    public final void rule__TableConstraintDef__Group_1__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6421:1: ( ( ( rule__TableConstraintDef__TableNameAssignment_1_6 ) ) )
            // InternalSQLParser.g:6422:1: ( ( rule__TableConstraintDef__TableNameAssignment_1_6 ) )
            {
            // InternalSQLParser.g:6422:1: ( ( rule__TableConstraintDef__TableNameAssignment_1_6 ) )
            // InternalSQLParser.g:6423:2: ( rule__TableConstraintDef__TableNameAssignment_1_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getTableNameAssignment_1_6()); 
            }
            // InternalSQLParser.g:6424:2: ( rule__TableConstraintDef__TableNameAssignment_1_6 )
            // InternalSQLParser.g:6424:3: rule__TableConstraintDef__TableNameAssignment_1_6
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__TableNameAssignment_1_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getTableNameAssignment_1_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__6__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__7"
    // InternalSQLParser.g:6432:1: rule__TableConstraintDef__Group_1__7 : rule__TableConstraintDef__Group_1__7__Impl rule__TableConstraintDef__Group_1__8 ;
    public final void rule__TableConstraintDef__Group_1__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6436:1: ( rule__TableConstraintDef__Group_1__7__Impl rule__TableConstraintDef__Group_1__8 )
            // InternalSQLParser.g:6437:2: rule__TableConstraintDef__Group_1__7__Impl rule__TableConstraintDef__Group_1__8
            {
            pushFollow(FOLLOW_16);
            rule__TableConstraintDef__Group_1__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__7"


    // $ANTLR start "rule__TableConstraintDef__Group_1__7__Impl"
    // InternalSQLParser.g:6444:1: rule__TableConstraintDef__Group_1__7__Impl : ( LeftParenthesis ) ;
    public final void rule__TableConstraintDef__Group_1__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6448:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6449:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6449:1: ( LeftParenthesis )
            // InternalSQLParser.g:6450:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_1_7()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getLeftParenthesisKeyword_1_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__7__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__8"
    // InternalSQLParser.g:6459:1: rule__TableConstraintDef__Group_1__8 : rule__TableConstraintDef__Group_1__8__Impl rule__TableConstraintDef__Group_1__9 ;
    public final void rule__TableConstraintDef__Group_1__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6463:1: ( rule__TableConstraintDef__Group_1__8__Impl rule__TableConstraintDef__Group_1__9 )
            // InternalSQLParser.g:6464:2: rule__TableConstraintDef__Group_1__8__Impl rule__TableConstraintDef__Group_1__9
            {
            pushFollow(FOLLOW_11);
            rule__TableConstraintDef__Group_1__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__8"


    // $ANTLR start "rule__TableConstraintDef__Group_1__8__Impl"
    // InternalSQLParser.g:6471:1: rule__TableConstraintDef__Group_1__8__Impl : ( ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 ) ) ;
    public final void rule__TableConstraintDef__Group_1__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6475:1: ( ( ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 ) ) )
            // InternalSQLParser.g:6476:1: ( ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 ) )
            {
            // InternalSQLParser.g:6476:1: ( ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 ) )
            // InternalSQLParser.g:6477:2: ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRefColumnNameListAssignment_1_8()); 
            }
            // InternalSQLParser.g:6478:2: ( rule__TableConstraintDef__RefColumnNameListAssignment_1_8 )
            // InternalSQLParser.g:6478:3: rule__TableConstraintDef__RefColumnNameListAssignment_1_8
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__RefColumnNameListAssignment_1_8();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRefColumnNameListAssignment_1_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__8__Impl"


    // $ANTLR start "rule__TableConstraintDef__Group_1__9"
    // InternalSQLParser.g:6486:1: rule__TableConstraintDef__Group_1__9 : rule__TableConstraintDef__Group_1__9__Impl ;
    public final void rule__TableConstraintDef__Group_1__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6490:1: ( rule__TableConstraintDef__Group_1__9__Impl )
            // InternalSQLParser.g:6491:2: rule__TableConstraintDef__Group_1__9__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableConstraintDef__Group_1__9__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__9"


    // $ANTLR start "rule__TableConstraintDef__Group_1__9__Impl"
    // InternalSQLParser.g:6497:1: rule__TableConstraintDef__Group_1__9__Impl : ( RightParenthesis ) ;
    public final void rule__TableConstraintDef__Group_1__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6501:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6502:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6502:1: ( RightParenthesis )
            // InternalSQLParser.g:6503:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_1_9()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRightParenthesisKeyword_1_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__Group_1__9__Impl"


    // $ANTLR start "rule__ColumnNameList__Group__0"
    // InternalSQLParser.g:6513:1: rule__ColumnNameList__Group__0 : rule__ColumnNameList__Group__0__Impl rule__ColumnNameList__Group__1 ;
    public final void rule__ColumnNameList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6517:1: ( rule__ColumnNameList__Group__0__Impl rule__ColumnNameList__Group__1 )
            // InternalSQLParser.g:6518:2: rule__ColumnNameList__Group__0__Impl rule__ColumnNameList__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__ColumnNameList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group__0"


    // $ANTLR start "rule__ColumnNameList__Group__0__Impl"
    // InternalSQLParser.g:6525:1: rule__ColumnNameList__Group__0__Impl : ( ( rule__ColumnNameList__ColumnNameAssignment_0 ) ) ;
    public final void rule__ColumnNameList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6529:1: ( ( ( rule__ColumnNameList__ColumnNameAssignment_0 ) ) )
            // InternalSQLParser.g:6530:1: ( ( rule__ColumnNameList__ColumnNameAssignment_0 ) )
            {
            // InternalSQLParser.g:6530:1: ( ( rule__ColumnNameList__ColumnNameAssignment_0 ) )
            // InternalSQLParser.g:6531:2: ( rule__ColumnNameList__ColumnNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getColumnNameAssignment_0()); 
            }
            // InternalSQLParser.g:6532:2: ( rule__ColumnNameList__ColumnNameAssignment_0 )
            // InternalSQLParser.g:6532:3: rule__ColumnNameList__ColumnNameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__ColumnNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getColumnNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group__0__Impl"


    // $ANTLR start "rule__ColumnNameList__Group__1"
    // InternalSQLParser.g:6540:1: rule__ColumnNameList__Group__1 : rule__ColumnNameList__Group__1__Impl ;
    public final void rule__ColumnNameList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6544:1: ( rule__ColumnNameList__Group__1__Impl )
            // InternalSQLParser.g:6545:2: rule__ColumnNameList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group__1"


    // $ANTLR start "rule__ColumnNameList__Group__1__Impl"
    // InternalSQLParser.g:6551:1: rule__ColumnNameList__Group__1__Impl : ( ( rule__ColumnNameList__Group_1__0 )* ) ;
    public final void rule__ColumnNameList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6555:1: ( ( ( rule__ColumnNameList__Group_1__0 )* ) )
            // InternalSQLParser.g:6556:1: ( ( rule__ColumnNameList__Group_1__0 )* )
            {
            // InternalSQLParser.g:6556:1: ( ( rule__ColumnNameList__Group_1__0 )* )
            // InternalSQLParser.g:6557:2: ( rule__ColumnNameList__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:6558:2: ( rule__ColumnNameList__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==Comma) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalSQLParser.g:6558:3: rule__ColumnNameList__Group_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__ColumnNameList__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group__1__Impl"


    // $ANTLR start "rule__ColumnNameList__Group_1__0"
    // InternalSQLParser.g:6567:1: rule__ColumnNameList__Group_1__0 : rule__ColumnNameList__Group_1__0__Impl rule__ColumnNameList__Group_1__1 ;
    public final void rule__ColumnNameList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6571:1: ( rule__ColumnNameList__Group_1__0__Impl rule__ColumnNameList__Group_1__1 )
            // InternalSQLParser.g:6572:2: rule__ColumnNameList__Group_1__0__Impl rule__ColumnNameList__Group_1__1
            {
            pushFollow(FOLLOW_16);
            rule__ColumnNameList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group_1__0"


    // $ANTLR start "rule__ColumnNameList__Group_1__0__Impl"
    // InternalSQLParser.g:6579:1: rule__ColumnNameList__Group_1__0__Impl : ( Comma ) ;
    public final void rule__ColumnNameList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6583:1: ( ( Comma ) )
            // InternalSQLParser.g:6584:1: ( Comma )
            {
            // InternalSQLParser.g:6584:1: ( Comma )
            // InternalSQLParser.g:6585:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group_1__0__Impl"


    // $ANTLR start "rule__ColumnNameList__Group_1__1"
    // InternalSQLParser.g:6594:1: rule__ColumnNameList__Group_1__1 : rule__ColumnNameList__Group_1__1__Impl ;
    public final void rule__ColumnNameList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6598:1: ( rule__ColumnNameList__Group_1__1__Impl )
            // InternalSQLParser.g:6599:2: rule__ColumnNameList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group_1__1"


    // $ANTLR start "rule__ColumnNameList__Group_1__1__Impl"
    // InternalSQLParser.g:6605:1: rule__ColumnNameList__Group_1__1__Impl : ( ( rule__ColumnNameList__ColumnNameAssignment_1_1 ) ) ;
    public final void rule__ColumnNameList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6609:1: ( ( ( rule__ColumnNameList__ColumnNameAssignment_1_1 ) ) )
            // InternalSQLParser.g:6610:1: ( ( rule__ColumnNameList__ColumnNameAssignment_1_1 ) )
            {
            // InternalSQLParser.g:6610:1: ( ( rule__ColumnNameList__ColumnNameAssignment_1_1 ) )
            // InternalSQLParser.g:6611:2: ( rule__ColumnNameList__ColumnNameAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getColumnNameAssignment_1_1()); 
            }
            // InternalSQLParser.g:6612:2: ( rule__ColumnNameList__ColumnNameAssignment_1_1 )
            // InternalSQLParser.g:6612:3: rule__ColumnNameList__ColumnNameAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnNameList__ColumnNameAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getColumnNameAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__Group_1__1__Impl"


    // $ANTLR start "rule__FieldDefinition__Group__0"
    // InternalSQLParser.g:6621:1: rule__FieldDefinition__Group__0 : rule__FieldDefinition__Group__0__Impl rule__FieldDefinition__Group__1 ;
    public final void rule__FieldDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6625:1: ( rule__FieldDefinition__Group__0__Impl rule__FieldDefinition__Group__1 )
            // InternalSQLParser.g:6626:2: rule__FieldDefinition__Group__0__Impl rule__FieldDefinition__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__FieldDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FieldDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDefinition__Group__0"


    // $ANTLR start "rule__FieldDefinition__Group__0__Impl"
    // InternalSQLParser.g:6633:1: rule__FieldDefinition__Group__0__Impl : ( ruleDataType ) ;
    public final void rule__FieldDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6637:1: ( ( ruleDataType ) )
            // InternalSQLParser.g:6638:1: ( ruleDataType )
            {
            // InternalSQLParser.g:6638:1: ( ruleDataType )
            // InternalSQLParser.g:6639:2: ruleDataType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDefinitionAccess().getDataTypeParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDataType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDefinitionAccess().getDataTypeParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDefinition__Group__0__Impl"


    // $ANTLR start "rule__FieldDefinition__Group__1"
    // InternalSQLParser.g:6648:1: rule__FieldDefinition__Group__1 : rule__FieldDefinition__Group__1__Impl ;
    public final void rule__FieldDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6652:1: ( rule__FieldDefinition__Group__1__Impl )
            // InternalSQLParser.g:6653:2: rule__FieldDefinition__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDefinition__Group__1"


    // $ANTLR start "rule__FieldDefinition__Group__1__Impl"
    // InternalSQLParser.g:6659:1: rule__FieldDefinition__Group__1__Impl : ( ( ruleColumnAttribute )* ) ;
    public final void rule__FieldDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6663:1: ( ( ( ruleColumnAttribute )* ) )
            // InternalSQLParser.g:6664:1: ( ( ruleColumnAttribute )* )
            {
            // InternalSQLParser.g:6664:1: ( ( ruleColumnAttribute )* )
            // InternalSQLParser.g:6665:2: ( ruleColumnAttribute )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldDefinitionAccess().getColumnAttributeParserRuleCall_1()); 
            }
            // InternalSQLParser.g:6666:2: ( ruleColumnAttribute )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==AUTO_INCREMENT||LA70_0==COMMENT||LA70_0==DEFAULT||LA70_0==PRIMARY||LA70_0==UNIQUE||LA70_0==NULL||LA70_0==NOT) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalSQLParser.g:6666:3: ruleColumnAttribute
            	    {
            	    pushFollow(FOLLOW_20);
            	    ruleColumnAttribute();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldDefinitionAccess().getColumnAttributeParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldDefinition__Group__1__Impl"


    // $ANTLR start "rule__DataType__Group__0"
    // InternalSQLParser.g:6675:1: rule__DataType__Group__0 : rule__DataType__Group__0__Impl rule__DataType__Group__1 ;
    public final void rule__DataType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6679:1: ( rule__DataType__Group__0__Impl rule__DataType__Group__1 )
            // InternalSQLParser.g:6680:2: rule__DataType__Group__0__Impl rule__DataType__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__DataType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__0"


    // $ANTLR start "rule__DataType__Group__0__Impl"
    // InternalSQLParser.g:6687:1: rule__DataType__Group__0__Impl : ( ruleSimpleType ) ;
    public final void rule__DataType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6691:1: ( ( ruleSimpleType ) )
            // InternalSQLParser.g:6692:1: ( ruleSimpleType )
            {
            // InternalSQLParser.g:6692:1: ( ruleSimpleType )
            // InternalSQLParser.g:6693:2: ruleSimpleType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getSimpleTypeParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getSimpleTypeParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__0__Impl"


    // $ANTLR start "rule__DataType__Group__1"
    // InternalSQLParser.g:6702:1: rule__DataType__Group__1 : rule__DataType__Group__1__Impl rule__DataType__Group__2 ;
    public final void rule__DataType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6706:1: ( rule__DataType__Group__1__Impl rule__DataType__Group__2 )
            // InternalSQLParser.g:6707:2: rule__DataType__Group__1__Impl rule__DataType__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__DataType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DataType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__1"


    // $ANTLR start "rule__DataType__Group__1__Impl"
    // InternalSQLParser.g:6714:1: rule__DataType__Group__1__Impl : ( ( ruleFieldLength )? ) ;
    public final void rule__DataType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6718:1: ( ( ( ruleFieldLength )? ) )
            // InternalSQLParser.g:6719:1: ( ( ruleFieldLength )? )
            {
            // InternalSQLParser.g:6719:1: ( ( ruleFieldLength )? )
            // InternalSQLParser.g:6720:2: ( ruleFieldLength )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getFieldLengthParserRuleCall_1()); 
            }
            // InternalSQLParser.g:6721:2: ( ruleFieldLength )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==LeftParenthesis) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSQLParser.g:6721:3: ruleFieldLength
                    {
                    pushFollow(FOLLOW_2);
                    ruleFieldLength();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getFieldLengthParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__1__Impl"


    // $ANTLR start "rule__DataType__Group__2"
    // InternalSQLParser.g:6729:1: rule__DataType__Group__2 : rule__DataType__Group__2__Impl ;
    public final void rule__DataType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6733:1: ( rule__DataType__Group__2__Impl )
            // InternalSQLParser.g:6734:2: rule__DataType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DataType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__2"


    // $ANTLR start "rule__DataType__Group__2__Impl"
    // InternalSQLParser.g:6740:1: rule__DataType__Group__2__Impl : ( ( ruleFieldOptions )? ) ;
    public final void rule__DataType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6744:1: ( ( ( ruleFieldOptions )? ) )
            // InternalSQLParser.g:6745:1: ( ( ruleFieldOptions )? )
            {
            // InternalSQLParser.g:6745:1: ( ( ruleFieldOptions )? )
            // InternalSQLParser.g:6746:2: ( ruleFieldOptions )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeAccess().getFieldOptionsParserRuleCall_2()); 
            }
            // InternalSQLParser.g:6747:2: ( ruleFieldOptions )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( ((LA72_0>=UNSIGNED && LA72_0<=ZEROFILL)||LA72_0==SIGNED) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSQLParser.g:6747:3: ruleFieldOptions
                    {
                    pushFollow(FOLLOW_2);
                    ruleFieldOptions();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeAccess().getFieldOptionsParserRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataType__Group__2__Impl"


    // $ANTLR start "rule__FieldLength__Group__0"
    // InternalSQLParser.g:6756:1: rule__FieldLength__Group__0 : rule__FieldLength__Group__0__Impl rule__FieldLength__Group__1 ;
    public final void rule__FieldLength__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6760:1: ( rule__FieldLength__Group__0__Impl rule__FieldLength__Group__1 )
            // InternalSQLParser.g:6761:2: rule__FieldLength__Group__0__Impl rule__FieldLength__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__FieldLength__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FieldLength__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__0"


    // $ANTLR start "rule__FieldLength__Group__0__Impl"
    // InternalSQLParser.g:6768:1: rule__FieldLength__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__FieldLength__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6772:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:6773:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:6773:1: ( LeftParenthesis )
            // InternalSQLParser.g:6774:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__0__Impl"


    // $ANTLR start "rule__FieldLength__Group__1"
    // InternalSQLParser.g:6783:1: rule__FieldLength__Group__1 : rule__FieldLength__Group__1__Impl rule__FieldLength__Group__2 ;
    public final void rule__FieldLength__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6787:1: ( rule__FieldLength__Group__1__Impl rule__FieldLength__Group__2 )
            // InternalSQLParser.g:6788:2: rule__FieldLength__Group__1__Impl rule__FieldLength__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__FieldLength__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FieldLength__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__1"


    // $ANTLR start "rule__FieldLength__Group__1__Impl"
    // InternalSQLParser.g:6795:1: rule__FieldLength__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__FieldLength__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6799:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:6800:1: ( RULE_INT )
            {
            // InternalSQLParser.g:6800:1: ( RULE_INT )
            // InternalSQLParser.g:6801:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__1__Impl"


    // $ANTLR start "rule__FieldLength__Group__2"
    // InternalSQLParser.g:6810:1: rule__FieldLength__Group__2 : rule__FieldLength__Group__2__Impl ;
    public final void rule__FieldLength__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6814:1: ( rule__FieldLength__Group__2__Impl )
            // InternalSQLParser.g:6815:2: rule__FieldLength__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FieldLength__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__2"


    // $ANTLR start "rule__FieldLength__Group__2__Impl"
    // InternalSQLParser.g:6821:1: rule__FieldLength__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__FieldLength__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6825:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:6826:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:6826:1: ( RightParenthesis )
            // InternalSQLParser.g:6827:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFieldLengthAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFieldLengthAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FieldLength__Group__2__Impl"


    // $ANTLR start "rule__NullAttribute__Group__0"
    // InternalSQLParser.g:6837:1: rule__NullAttribute__Group__0 : rule__NullAttribute__Group__0__Impl rule__NullAttribute__Group__1 ;
    public final void rule__NullAttribute__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6841:1: ( rule__NullAttribute__Group__0__Impl rule__NullAttribute__Group__1 )
            // InternalSQLParser.g:6842:2: rule__NullAttribute__Group__0__Impl rule__NullAttribute__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__NullAttribute__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NullAttribute__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullAttribute__Group__0"


    // $ANTLR start "rule__NullAttribute__Group__0__Impl"
    // InternalSQLParser.g:6849:1: rule__NullAttribute__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__NullAttribute__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6853:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:6854:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:6854:1: ( ( NOT )? )
            // InternalSQLParser.g:6855:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullAttributeAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:6856:2: ( NOT )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==NOT) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSQLParser.g:6856:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullAttributeAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullAttribute__Group__0__Impl"


    // $ANTLR start "rule__NullAttribute__Group__1"
    // InternalSQLParser.g:6864:1: rule__NullAttribute__Group__1 : rule__NullAttribute__Group__1__Impl ;
    public final void rule__NullAttribute__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6868:1: ( rule__NullAttribute__Group__1__Impl )
            // InternalSQLParser.g:6869:2: rule__NullAttribute__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NullAttribute__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullAttribute__Group__1"


    // $ANTLR start "rule__NullAttribute__Group__1__Impl"
    // InternalSQLParser.g:6875:1: rule__NullAttribute__Group__1__Impl : ( NULL ) ;
    public final void rule__NullAttribute__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6879:1: ( ( NULL ) )
            // InternalSQLParser.g:6880:1: ( NULL )
            {
            // InternalSQLParser.g:6880:1: ( NULL )
            // InternalSQLParser.g:6881:2: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNullAttributeAccess().getNULLKeyword_1()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNullAttributeAccess().getNULLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NullAttribute__Group__1__Impl"


    // $ANTLR start "rule__DefaultValue__Group__0"
    // InternalSQLParser.g:6891:1: rule__DefaultValue__Group__0 : rule__DefaultValue__Group__0__Impl rule__DefaultValue__Group__1 ;
    public final void rule__DefaultValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6895:1: ( rule__DefaultValue__Group__0__Impl rule__DefaultValue__Group__1 )
            // InternalSQLParser.g:6896:2: rule__DefaultValue__Group__0__Impl rule__DefaultValue__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__DefaultValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DefaultValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Group__0"


    // $ANTLR start "rule__DefaultValue__Group__0__Impl"
    // InternalSQLParser.g:6903:1: rule__DefaultValue__Group__0__Impl : ( DEFAULT ) ;
    public final void rule__DefaultValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6907:1: ( ( DEFAULT ) )
            // InternalSQLParser.g:6908:1: ( DEFAULT )
            {
            // InternalSQLParser.g:6908:1: ( DEFAULT )
            // InternalSQLParser.g:6909:2: DEFAULT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefaultValueAccess().getDEFAULTKeyword_0()); 
            }
            match(input,DEFAULT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefaultValueAccess().getDEFAULTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Group__0__Impl"


    // $ANTLR start "rule__DefaultValue__Group__1"
    // InternalSQLParser.g:6918:1: rule__DefaultValue__Group__1 : rule__DefaultValue__Group__1__Impl ;
    public final void rule__DefaultValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6922:1: ( rule__DefaultValue__Group__1__Impl )
            // InternalSQLParser.g:6923:2: rule__DefaultValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DefaultValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Group__1"


    // $ANTLR start "rule__DefaultValue__Group__1__Impl"
    // InternalSQLParser.g:6929:1: rule__DefaultValue__Group__1__Impl : ( ( rule__DefaultValue__Alternatives_1 ) ) ;
    public final void rule__DefaultValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6933:1: ( ( ( rule__DefaultValue__Alternatives_1 ) ) )
            // InternalSQLParser.g:6934:1: ( ( rule__DefaultValue__Alternatives_1 ) )
            {
            // InternalSQLParser.g:6934:1: ( ( rule__DefaultValue__Alternatives_1 ) )
            // InternalSQLParser.g:6935:2: ( rule__DefaultValue__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefaultValueAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:6936:2: ( rule__DefaultValue__Alternatives_1 )
            // InternalSQLParser.g:6936:3: rule__DefaultValue__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__DefaultValue__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefaultValueAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefaultValue__Group__1__Impl"


    // $ANTLR start "rule__PrimaryKey__Group__0"
    // InternalSQLParser.g:6945:1: rule__PrimaryKey__Group__0 : rule__PrimaryKey__Group__0__Impl rule__PrimaryKey__Group__1 ;
    public final void rule__PrimaryKey__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6949:1: ( rule__PrimaryKey__Group__0__Impl rule__PrimaryKey__Group__1 )
            // InternalSQLParser.g:6950:2: rule__PrimaryKey__Group__0__Impl rule__PrimaryKey__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__PrimaryKey__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PrimaryKey__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryKey__Group__0"


    // $ANTLR start "rule__PrimaryKey__Group__0__Impl"
    // InternalSQLParser.g:6957:1: rule__PrimaryKey__Group__0__Impl : ( PRIMARY ) ;
    public final void rule__PrimaryKey__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6961:1: ( ( PRIMARY ) )
            // InternalSQLParser.g:6962:1: ( PRIMARY )
            {
            // InternalSQLParser.g:6962:1: ( PRIMARY )
            // InternalSQLParser.g:6963:2: PRIMARY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryKeyAccess().getPRIMARYKeyword_0()); 
            }
            match(input,PRIMARY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryKeyAccess().getPRIMARYKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryKey__Group__0__Impl"


    // $ANTLR start "rule__PrimaryKey__Group__1"
    // InternalSQLParser.g:6972:1: rule__PrimaryKey__Group__1 : rule__PrimaryKey__Group__1__Impl ;
    public final void rule__PrimaryKey__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6976:1: ( rule__PrimaryKey__Group__1__Impl )
            // InternalSQLParser.g:6977:2: rule__PrimaryKey__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PrimaryKey__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryKey__Group__1"


    // $ANTLR start "rule__PrimaryKey__Group__1__Impl"
    // InternalSQLParser.g:6983:1: rule__PrimaryKey__Group__1__Impl : ( KEY ) ;
    public final void rule__PrimaryKey__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:6987:1: ( ( KEY ) )
            // InternalSQLParser.g:6988:1: ( KEY )
            {
            // InternalSQLParser.g:6988:1: ( KEY )
            // InternalSQLParser.g:6989:2: KEY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPrimaryKeyAccess().getKEYKeyword_1()); 
            }
            match(input,KEY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPrimaryKeyAccess().getKEYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryKey__Group__1__Impl"


    // $ANTLR start "rule__Comment__Group__0"
    // InternalSQLParser.g:6999:1: rule__Comment__Group__0 : rule__Comment__Group__0__Impl rule__Comment__Group__1 ;
    public final void rule__Comment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7003:1: ( rule__Comment__Group__0__Impl rule__Comment__Group__1 )
            // InternalSQLParser.g:7004:2: rule__Comment__Group__0__Impl rule__Comment__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__Comment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__Group__0"


    // $ANTLR start "rule__Comment__Group__0__Impl"
    // InternalSQLParser.g:7011:1: rule__Comment__Group__0__Impl : ( COMMENT ) ;
    public final void rule__Comment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7015:1: ( ( COMMENT ) )
            // InternalSQLParser.g:7016:1: ( COMMENT )
            {
            // InternalSQLParser.g:7016:1: ( COMMENT )
            // InternalSQLParser.g:7017:2: COMMENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentAccess().getCOMMENTKeyword_0()); 
            }
            match(input,COMMENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentAccess().getCOMMENTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__Group__0__Impl"


    // $ANTLR start "rule__Comment__Group__1"
    // InternalSQLParser.g:7026:1: rule__Comment__Group__1 : rule__Comment__Group__1__Impl ;
    public final void rule__Comment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7030:1: ( rule__Comment__Group__1__Impl )
            // InternalSQLParser.g:7031:2: rule__Comment__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__Group__1"


    // $ANTLR start "rule__Comment__Group__1__Impl"
    // InternalSQLParser.g:7037:1: rule__Comment__Group__1__Impl : ( ruleTextLiteral ) ;
    public final void rule__Comment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7041:1: ( ( ruleTextLiteral ) )
            // InternalSQLParser.g:7042:1: ( ruleTextLiteral )
            {
            // InternalSQLParser.g:7042:1: ( ruleTextLiteral )
            // InternalSQLParser.g:7043:2: ruleTextLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCommentAccess().getTextLiteralParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleTextLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCommentAccess().getTextLiteralParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comment__Group__1__Impl"


    // $ANTLR start "rule__WithQuery__Group__0"
    // InternalSQLParser.g:7053:1: rule__WithQuery__Group__0 : rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 ;
    public final void rule__WithQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7057:1: ( rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 )
            // InternalSQLParser.g:7058:2: rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__WithQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0"


    // $ANTLR start "rule__WithQuery__Group__0__Impl"
    // InternalSQLParser.g:7065:1: rule__WithQuery__Group__0__Impl : ( ( rule__WithQuery__WAssignment_0 ) ) ;
    public final void rule__WithQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7069:1: ( ( ( rule__WithQuery__WAssignment_0 ) ) )
            // InternalSQLParser.g:7070:1: ( ( rule__WithQuery__WAssignment_0 ) )
            {
            // InternalSQLParser.g:7070:1: ( ( rule__WithQuery__WAssignment_0 ) )
            // InternalSQLParser.g:7071:2: ( rule__WithQuery__WAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }
            // InternalSQLParser.g:7072:2: ( rule__WithQuery__WAssignment_0 )
            // InternalSQLParser.g:7072:3: rule__WithQuery__WAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0__Impl"


    // $ANTLR start "rule__WithQuery__Group__1"
    // InternalSQLParser.g:7080:1: rule__WithQuery__Group__1 : rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 ;
    public final void rule__WithQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7084:1: ( rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 )
            // InternalSQLParser.g:7085:2: rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__WithQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1"


    // $ANTLR start "rule__WithQuery__Group__1__Impl"
    // InternalSQLParser.g:7092:1: rule__WithQuery__Group__1__Impl : ( ( rule__WithQuery__WnameAssignment_1 ) ) ;
    public final void rule__WithQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7096:1: ( ( ( rule__WithQuery__WnameAssignment_1 ) ) )
            // InternalSQLParser.g:7097:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            {
            // InternalSQLParser.g:7097:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            // InternalSQLParser.g:7098:2: ( rule__WithQuery__WnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }
            // InternalSQLParser.g:7099:2: ( rule__WithQuery__WnameAssignment_1 )
            // InternalSQLParser.g:7099:3: rule__WithQuery__WnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1__Impl"


    // $ANTLR start "rule__WithQuery__Group__2"
    // InternalSQLParser.g:7107:1: rule__WithQuery__Group__2 : rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 ;
    public final void rule__WithQuery__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7111:1: ( rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 )
            // InternalSQLParser.g:7112:2: rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3
            {
            pushFollow(FOLLOW_27);
            rule__WithQuery__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2"


    // $ANTLR start "rule__WithQuery__Group__2__Impl"
    // InternalSQLParser.g:7119:1: rule__WithQuery__Group__2__Impl : ( ( rule__WithQuery__WithColsAssignment_2 )? ) ;
    public final void rule__WithQuery__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7123:1: ( ( ( rule__WithQuery__WithColsAssignment_2 )? ) )
            // InternalSQLParser.g:7124:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            {
            // InternalSQLParser.g:7124:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            // InternalSQLParser.g:7125:2: ( rule__WithQuery__WithColsAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }
            // InternalSQLParser.g:7126:2: ( rule__WithQuery__WithColsAssignment_2 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==LeftParenthesis) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSQLParser.g:7126:3: rule__WithQuery__WithColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__WithColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2__Impl"


    // $ANTLR start "rule__WithQuery__Group__3"
    // InternalSQLParser.g:7134:1: rule__WithQuery__Group__3 : rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 ;
    public final void rule__WithQuery__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7138:1: ( rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 )
            // InternalSQLParser.g:7139:2: rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__WithQuery__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3"


    // $ANTLR start "rule__WithQuery__Group__3__Impl"
    // InternalSQLParser.g:7146:1: rule__WithQuery__Group__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7150:1: ( ( AS ) )
            // InternalSQLParser.g:7151:1: ( AS )
            {
            // InternalSQLParser.g:7151:1: ( AS )
            // InternalSQLParser.g:7152:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3__Impl"


    // $ANTLR start "rule__WithQuery__Group__4"
    // InternalSQLParser.g:7161:1: rule__WithQuery__Group__4 : rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 ;
    public final void rule__WithQuery__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7165:1: ( rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 )
            // InternalSQLParser.g:7166:2: rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5
            {
            pushFollow(FOLLOW_4);
            rule__WithQuery__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4"


    // $ANTLR start "rule__WithQuery__Group__4__Impl"
    // InternalSQLParser.g:7173:1: rule__WithQuery__Group__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7177:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7178:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7178:1: ( LeftParenthesis )
            // InternalSQLParser.g:7179:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4__Impl"


    // $ANTLR start "rule__WithQuery__Group__5"
    // InternalSQLParser.g:7188:1: rule__WithQuery__Group__5 : rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 ;
    public final void rule__WithQuery__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7192:1: ( rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 )
            // InternalSQLParser.g:7193:2: rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6
            {
            pushFollow(FOLLOW_11);
            rule__WithQuery__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5"


    // $ANTLR start "rule__WithQuery__Group__5__Impl"
    // InternalSQLParser.g:7200:1: rule__WithQuery__Group__5__Impl : ( ( rule__WithQuery__QueryAssignment_5 ) ) ;
    public final void rule__WithQuery__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7204:1: ( ( ( rule__WithQuery__QueryAssignment_5 ) ) )
            // InternalSQLParser.g:7205:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            {
            // InternalSQLParser.g:7205:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            // InternalSQLParser.g:7206:2: ( rule__WithQuery__QueryAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }
            // InternalSQLParser.g:7207:2: ( rule__WithQuery__QueryAssignment_5 )
            // InternalSQLParser.g:7207:3: rule__WithQuery__QueryAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__QueryAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5__Impl"


    // $ANTLR start "rule__WithQuery__Group__6"
    // InternalSQLParser.g:7215:1: rule__WithQuery__Group__6 : rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 ;
    public final void rule__WithQuery__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7219:1: ( rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 )
            // InternalSQLParser.g:7220:2: rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7
            {
            pushFollow(FOLLOW_12);
            rule__WithQuery__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6"


    // $ANTLR start "rule__WithQuery__Group__6__Impl"
    // InternalSQLParser.g:7227:1: rule__WithQuery__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7231:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7232:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7232:1: ( RightParenthesis )
            // InternalSQLParser.g:7233:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6__Impl"


    // $ANTLR start "rule__WithQuery__Group__7"
    // InternalSQLParser.g:7242:1: rule__WithQuery__Group__7 : rule__WithQuery__Group__7__Impl ;
    public final void rule__WithQuery__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7246:1: ( rule__WithQuery__Group__7__Impl )
            // InternalSQLParser.g:7247:2: rule__WithQuery__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7"


    // $ANTLR start "rule__WithQuery__Group__7__Impl"
    // InternalSQLParser.g:7253:1: rule__WithQuery__Group__7__Impl : ( ( rule__WithQuery__Group_7__0 )* ) ;
    public final void rule__WithQuery__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7257:1: ( ( ( rule__WithQuery__Group_7__0 )* ) )
            // InternalSQLParser.g:7258:1: ( ( rule__WithQuery__Group_7__0 )* )
            {
            // InternalSQLParser.g:7258:1: ( ( rule__WithQuery__Group_7__0 )* )
            // InternalSQLParser.g:7259:2: ( rule__WithQuery__Group_7__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }
            // InternalSQLParser.g:7260:2: ( rule__WithQuery__Group_7__0 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==Comma) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSQLParser.g:7260:3: rule__WithQuery__Group_7__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__WithQuery__Group_7__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__0"
    // InternalSQLParser.g:7269:1: rule__WithQuery__Group_7__0 : rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 ;
    public final void rule__WithQuery__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7273:1: ( rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 )
            // InternalSQLParser.g:7274:2: rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1
            {
            pushFollow(FOLLOW_26);
            rule__WithQuery__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0"


    // $ANTLR start "rule__WithQuery__Group_7__0__Impl"
    // InternalSQLParser.g:7281:1: rule__WithQuery__Group_7__0__Impl : ( Comma ) ;
    public final void rule__WithQuery__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7285:1: ( ( Comma ) )
            // InternalSQLParser.g:7286:1: ( Comma )
            {
            // InternalSQLParser.g:7286:1: ( Comma )
            // InternalSQLParser.g:7287:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__1"
    // InternalSQLParser.g:7296:1: rule__WithQuery__Group_7__1 : rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 ;
    public final void rule__WithQuery__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7300:1: ( rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 )
            // InternalSQLParser.g:7301:2: rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2
            {
            pushFollow(FOLLOW_27);
            rule__WithQuery__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1"


    // $ANTLR start "rule__WithQuery__Group_7__1__Impl"
    // InternalSQLParser.g:7308:1: rule__WithQuery__Group_7__1__Impl : ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) ;
    public final void rule__WithQuery__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7312:1: ( ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) )
            // InternalSQLParser.g:7313:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            {
            // InternalSQLParser.g:7313:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            // InternalSQLParser.g:7314:2: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }
            // InternalSQLParser.g:7315:2: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            // InternalSQLParser.g:7315:3: rule__WithQuery__AdditionalWnameAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalWnameAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__2"
    // InternalSQLParser.g:7323:1: rule__WithQuery__Group_7__2 : rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 ;
    public final void rule__WithQuery__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7327:1: ( rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 )
            // InternalSQLParser.g:7328:2: rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3
            {
            pushFollow(FOLLOW_27);
            rule__WithQuery__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2"


    // $ANTLR start "rule__WithQuery__Group_7__2__Impl"
    // InternalSQLParser.g:7335:1: rule__WithQuery__Group_7__2__Impl : ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) ;
    public final void rule__WithQuery__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7339:1: ( ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) )
            // InternalSQLParser.g:7340:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            {
            // InternalSQLParser.g:7340:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            // InternalSQLParser.g:7341:2: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }
            // InternalSQLParser.g:7342:2: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==LeftParenthesis) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSQLParser.g:7342:3: rule__WithQuery__AdditionalWithColsAssignment_7_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__AdditionalWithColsAssignment_7_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__3"
    // InternalSQLParser.g:7350:1: rule__WithQuery__Group_7__3 : rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 ;
    public final void rule__WithQuery__Group_7__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7354:1: ( rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 )
            // InternalSQLParser.g:7355:2: rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4
            {
            pushFollow(FOLLOW_9);
            rule__WithQuery__Group_7__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3"


    // $ANTLR start "rule__WithQuery__Group_7__3__Impl"
    // InternalSQLParser.g:7362:1: rule__WithQuery__Group_7__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group_7__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7366:1: ( ( AS ) )
            // InternalSQLParser.g:7367:1: ( AS )
            {
            // InternalSQLParser.g:7367:1: ( AS )
            // InternalSQLParser.g:7368:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__4"
    // InternalSQLParser.g:7377:1: rule__WithQuery__Group_7__4 : rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 ;
    public final void rule__WithQuery__Group_7__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7381:1: ( rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 )
            // InternalSQLParser.g:7382:2: rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5
            {
            pushFollow(FOLLOW_4);
            rule__WithQuery__Group_7__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4"


    // $ANTLR start "rule__WithQuery__Group_7__4__Impl"
    // InternalSQLParser.g:7389:1: rule__WithQuery__Group_7__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group_7__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7393:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7394:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7394:1: ( LeftParenthesis )
            // InternalSQLParser.g:7395:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__5"
    // InternalSQLParser.g:7404:1: rule__WithQuery__Group_7__5 : rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 ;
    public final void rule__WithQuery__Group_7__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7408:1: ( rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 )
            // InternalSQLParser.g:7409:2: rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6
            {
            pushFollow(FOLLOW_11);
            rule__WithQuery__Group_7__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5"


    // $ANTLR start "rule__WithQuery__Group_7__5__Impl"
    // InternalSQLParser.g:7416:1: rule__WithQuery__Group_7__5__Impl : ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) ;
    public final void rule__WithQuery__Group_7__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7420:1: ( ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) )
            // InternalSQLParser.g:7421:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            {
            // InternalSQLParser.g:7421:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            // InternalSQLParser.g:7422:2: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }
            // InternalSQLParser.g:7423:2: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            // InternalSQLParser.g:7423:3: rule__WithQuery__AdditionalQueriesAssignment_7_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalQueriesAssignment_7_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__6"
    // InternalSQLParser.g:7431:1: rule__WithQuery__Group_7__6 : rule__WithQuery__Group_7__6__Impl ;
    public final void rule__WithQuery__Group_7__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7435:1: ( rule__WithQuery__Group_7__6__Impl )
            // InternalSQLParser.g:7436:2: rule__WithQuery__Group_7__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6"


    // $ANTLR start "rule__WithQuery__Group_7__6__Impl"
    // InternalSQLParser.g:7442:1: rule__WithQuery__Group_7__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group_7__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7446:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7447:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7447:1: ( RightParenthesis )
            // InternalSQLParser.g:7448:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6__Impl"


    // $ANTLR start "rule__WithColumns__Group__0"
    // InternalSQLParser.g:7458:1: rule__WithColumns__Group__0 : rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 ;
    public final void rule__WithColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7462:1: ( rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 )
            // InternalSQLParser.g:7463:2: rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__WithColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0"


    // $ANTLR start "rule__WithColumns__Group__0__Impl"
    // InternalSQLParser.g:7470:1: rule__WithColumns__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__WithColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7474:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:7475:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:7475:1: ( LeftParenthesis )
            // InternalSQLParser.g:7476:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0__Impl"


    // $ANTLR start "rule__WithColumns__Group__1"
    // InternalSQLParser.g:7485:1: rule__WithColumns__Group__1 : rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 ;
    public final void rule__WithColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7489:1: ( rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 )
            // InternalSQLParser.g:7490:2: rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__WithColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1"


    // $ANTLR start "rule__WithColumns__Group__1__Impl"
    // InternalSQLParser.g:7497:1: rule__WithColumns__Group__1__Impl : ( ruleUsingCols ) ;
    public final void rule__WithColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7501:1: ( ( ruleUsingCols ) )
            // InternalSQLParser.g:7502:1: ( ruleUsingCols )
            {
            // InternalSQLParser.g:7502:1: ( ruleUsingCols )
            // InternalSQLParser.g:7503:2: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1__Impl"


    // $ANTLR start "rule__WithColumns__Group__2"
    // InternalSQLParser.g:7512:1: rule__WithColumns__Group__2 : rule__WithColumns__Group__2__Impl ;
    public final void rule__WithColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7516:1: ( rule__WithColumns__Group__2__Impl )
            // InternalSQLParser.g:7517:2: rule__WithColumns__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2"


    // $ANTLR start "rule__WithColumns__Group__2__Impl"
    // InternalSQLParser.g:7523:1: rule__WithColumns__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__WithColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7527:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:7528:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:7528:1: ( RightParenthesis )
            // InternalSQLParser.g:7529:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2__Impl"


    // $ANTLR start "rule__FetchFirst__Group__0"
    // InternalSQLParser.g:7539:1: rule__FetchFirst__Group__0 : rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 ;
    public final void rule__FetchFirst__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7543:1: ( rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 )
            // InternalSQLParser.g:7544:2: rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1
            {
            pushFollow(FOLLOW_28);
            rule__FetchFirst__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0"


    // $ANTLR start "rule__FetchFirst__Group__0__Impl"
    // InternalSQLParser.g:7551:1: rule__FetchFirst__Group__0__Impl : ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) ;
    public final void rule__FetchFirst__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7555:1: ( ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) )
            // InternalSQLParser.g:7556:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            {
            // InternalSQLParser.g:7556:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            // InternalSQLParser.g:7557:2: ( rule__FetchFirst__FetchFirstAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }
            // InternalSQLParser.g:7558:2: ( rule__FetchFirst__FetchFirstAssignment_0 )
            // InternalSQLParser.g:7558:3: rule__FetchFirst__FetchFirstAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__FetchFirstAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0__Impl"


    // $ANTLR start "rule__FetchFirst__Group__1"
    // InternalSQLParser.g:7566:1: rule__FetchFirst__Group__1 : rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 ;
    public final void rule__FetchFirst__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7570:1: ( rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 )
            // InternalSQLParser.g:7571:2: rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2
            {
            pushFollow(FOLLOW_29);
            rule__FetchFirst__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1"


    // $ANTLR start "rule__FetchFirst__Group__1__Impl"
    // InternalSQLParser.g:7578:1: rule__FetchFirst__Group__1__Impl : ( ( rule__FetchFirst__RowAssignment_1 ) ) ;
    public final void rule__FetchFirst__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7582:1: ( ( ( rule__FetchFirst__RowAssignment_1 ) ) )
            // InternalSQLParser.g:7583:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            {
            // InternalSQLParser.g:7583:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            // InternalSQLParser.g:7584:2: ( rule__FetchFirst__RowAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }
            // InternalSQLParser.g:7585:2: ( rule__FetchFirst__RowAssignment_1 )
            // InternalSQLParser.g:7585:3: rule__FetchFirst__RowAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1__Impl"


    // $ANTLR start "rule__FetchFirst__Group__2"
    // InternalSQLParser.g:7593:1: rule__FetchFirst__Group__2 : rule__FetchFirst__Group__2__Impl ;
    public final void rule__FetchFirst__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7597:1: ( rule__FetchFirst__Group__2__Impl )
            // InternalSQLParser.g:7598:2: rule__FetchFirst__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2"


    // $ANTLR start "rule__FetchFirst__Group__2__Impl"
    // InternalSQLParser.g:7604:1: rule__FetchFirst__Group__2__Impl : ( ONLY ) ;
    public final void rule__FetchFirst__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7608:1: ( ( ONLY ) )
            // InternalSQLParser.g:7609:1: ( ONLY )
            {
            // InternalSQLParser.g:7609:1: ( ONLY )
            // InternalSQLParser.g:7610:2: ONLY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }
            match(input,ONLY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2__Impl"


    // $ANTLR start "rule__Limit__Group_0__0"
    // InternalSQLParser.g:7620:1: rule__Limit__Group_0__0 : rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 ;
    public final void rule__Limit__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7624:1: ( rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 )
            // InternalSQLParser.g:7625:2: rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1
            {
            pushFollow(FOLLOW_30);
            rule__Limit__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0"


    // $ANTLR start "rule__Limit__Group_0__0__Impl"
    // InternalSQLParser.g:7632:1: rule__Limit__Group_0__0__Impl : ( () ) ;
    public final void rule__Limit__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7636:1: ( ( () ) )
            // InternalSQLParser.g:7637:1: ( () )
            {
            // InternalSQLParser.g:7637:1: ( () )
            // InternalSQLParser.g:7638:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }
            // InternalSQLParser.g:7639:2: ()
            // InternalSQLParser.g:7639:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0__Impl"


    // $ANTLR start "rule__Limit__Group_0__1"
    // InternalSQLParser.g:7647:1: rule__Limit__Group_0__1 : rule__Limit__Group_0__1__Impl ;
    public final void rule__Limit__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7651:1: ( rule__Limit__Group_0__1__Impl )
            // InternalSQLParser.g:7652:2: rule__Limit__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1"


    // $ANTLR start "rule__Limit__Group_0__1__Impl"
    // InternalSQLParser.g:7658:1: rule__Limit__Group_0__1__Impl : ( ALL ) ;
    public final void rule__Limit__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7662:1: ( ( ALL ) )
            // InternalSQLParser.g:7663:1: ( ALL )
            {
            // InternalSQLParser.g:7663:1: ( ALL )
            // InternalSQLParser.g:7664:2: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1__Impl"


    // $ANTLR start "rule__Limit__Group_1__0"
    // InternalSQLParser.g:7674:1: rule__Limit__Group_1__0 : rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 ;
    public final void rule__Limit__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7678:1: ( rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 )
            // InternalSQLParser.g:7679:2: rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Limit__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0"


    // $ANTLR start "rule__Limit__Group_1__0__Impl"
    // InternalSQLParser.g:7686:1: rule__Limit__Group_1__0__Impl : ( ( rule__Limit__L1Assignment_1_0 ) ) ;
    public final void rule__Limit__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7690:1: ( ( ( rule__Limit__L1Assignment_1_0 ) ) )
            // InternalSQLParser.g:7691:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            {
            // InternalSQLParser.g:7691:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            // InternalSQLParser.g:7692:2: ( rule__Limit__L1Assignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }
            // InternalSQLParser.g:7693:2: ( rule__Limit__L1Assignment_1_0 )
            // InternalSQLParser.g:7693:3: rule__Limit__L1Assignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L1Assignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1__1"
    // InternalSQLParser.g:7701:1: rule__Limit__Group_1__1 : rule__Limit__Group_1__1__Impl ;
    public final void rule__Limit__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7705:1: ( rule__Limit__Group_1__1__Impl )
            // InternalSQLParser.g:7706:2: rule__Limit__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1"


    // $ANTLR start "rule__Limit__Group_1__1__Impl"
    // InternalSQLParser.g:7712:1: rule__Limit__Group_1__1__Impl : ( ( rule__Limit__Group_1_1__0 )? ) ;
    public final void rule__Limit__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7716:1: ( ( ( rule__Limit__Group_1_1__0 )? ) )
            // InternalSQLParser.g:7717:1: ( ( rule__Limit__Group_1_1__0 )? )
            {
            // InternalSQLParser.g:7717:1: ( ( rule__Limit__Group_1_1__0 )? )
            // InternalSQLParser.g:7718:2: ( rule__Limit__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:7719:2: ( rule__Limit__Group_1_1__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==Comma) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSQLParser.g:7719:3: rule__Limit__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__0"
    // InternalSQLParser.g:7728:1: rule__Limit__Group_1_1__0 : rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 ;
    public final void rule__Limit__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7732:1: ( rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 )
            // InternalSQLParser.g:7733:2: rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1
            {
            pushFollow(FOLLOW_31);
            rule__Limit__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0"


    // $ANTLR start "rule__Limit__Group_1_1__0__Impl"
    // InternalSQLParser.g:7740:1: rule__Limit__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Limit__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7744:1: ( ( Comma ) )
            // InternalSQLParser.g:7745:1: ( Comma )
            {
            // InternalSQLParser.g:7745:1: ( Comma )
            // InternalSQLParser.g:7746:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__1"
    // InternalSQLParser.g:7755:1: rule__Limit__Group_1_1__1 : rule__Limit__Group_1_1__1__Impl ;
    public final void rule__Limit__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7759:1: ( rule__Limit__Group_1_1__1__Impl )
            // InternalSQLParser.g:7760:2: rule__Limit__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1"


    // $ANTLR start "rule__Limit__Group_1_1__1__Impl"
    // InternalSQLParser.g:7766:1: rule__Limit__Group_1_1__1__Impl : ( ( rule__Limit__L2Assignment_1_1_1 ) ) ;
    public final void rule__Limit__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7770:1: ( ( ( rule__Limit__L2Assignment_1_1_1 ) ) )
            // InternalSQLParser.g:7771:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            {
            // InternalSQLParser.g:7771:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            // InternalSQLParser.g:7772:2: ( rule__Limit__L2Assignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }
            // InternalSQLParser.g:7773:2: ( rule__Limit__L2Assignment_1_1_1 )
            // InternalSQLParser.g:7773:3: rule__Limit__L2Assignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L2Assignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1__Impl"


    // $ANTLR start "rule__SelectQuery__Group__0"
    // InternalSQLParser.g:7782:1: rule__SelectQuery__Group__0 : rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 ;
    public final void rule__SelectQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7786:1: ( rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 )
            // InternalSQLParser.g:7787:2: rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__SelectQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0"


    // $ANTLR start "rule__SelectQuery__Group__0__Impl"
    // InternalSQLParser.g:7794:1: rule__SelectQuery__Group__0__Impl : ( ruleSelect ) ;
    public final void rule__SelectQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7798:1: ( ( ruleSelect ) )
            // InternalSQLParser.g:7799:1: ( ruleSelect )
            {
            // InternalSQLParser.g:7799:1: ( ruleSelect )
            // InternalSQLParser.g:7800:2: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0__Impl"


    // $ANTLR start "rule__SelectQuery__Group__1"
    // InternalSQLParser.g:7809:1: rule__SelectQuery__Group__1 : rule__SelectQuery__Group__1__Impl ;
    public final void rule__SelectQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7813:1: ( rule__SelectQuery__Group__1__Impl )
            // InternalSQLParser.g:7814:2: rule__SelectQuery__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1"


    // $ANTLR start "rule__SelectQuery__Group__1__Impl"
    // InternalSQLParser.g:7820:1: rule__SelectQuery__Group__1__Impl : ( ( rule__SelectQuery__OpAssignment_1 )* ) ;
    public final void rule__SelectQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7824:1: ( ( ( rule__SelectQuery__OpAssignment_1 )* ) )
            // InternalSQLParser.g:7825:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            {
            // InternalSQLParser.g:7825:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            // InternalSQLParser.g:7826:2: ( rule__SelectQuery__OpAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:7827:2: ( rule__SelectQuery__OpAssignment_1 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==INTERSECT||LA78_0==EXCEPT||LA78_0==MINUS||LA78_0==UNION) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSQLParser.g:7827:3: rule__SelectQuery__OpAssignment_1
            	    {
            	    pushFollow(FOLLOW_33);
            	    rule__SelectQuery__OpAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__0"
    // InternalSQLParser.g:7836:1: rule__SelectSubSet__Group__0 : rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 ;
    public final void rule__SelectSubSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7840:1: ( rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 )
            // InternalSQLParser.g:7841:2: rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__SelectSubSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0"


    // $ANTLR start "rule__SelectSubSet__Group__0__Impl"
    // InternalSQLParser.g:7848:1: rule__SelectSubSet__Group__0__Impl : ( ( rule__SelectSubSet__OpAssignment_0 ) ) ;
    public final void rule__SelectSubSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7852:1: ( ( ( rule__SelectSubSet__OpAssignment_0 ) ) )
            // InternalSQLParser.g:7853:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            {
            // InternalSQLParser.g:7853:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            // InternalSQLParser.g:7854:2: ( rule__SelectSubSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }
            // InternalSQLParser.g:7855:2: ( rule__SelectSubSet__OpAssignment_0 )
            // InternalSQLParser.g:7855:3: rule__SelectSubSet__OpAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__1"
    // InternalSQLParser.g:7863:1: rule__SelectSubSet__Group__1 : rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 ;
    public final void rule__SelectSubSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7867:1: ( rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 )
            // InternalSQLParser.g:7868:2: rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__SelectSubSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1"


    // $ANTLR start "rule__SelectSubSet__Group__1__Impl"
    // InternalSQLParser.g:7875:1: rule__SelectSubSet__Group__1__Impl : ( ( rule__SelectSubSet__AllAssignment_1 )? ) ;
    public final void rule__SelectSubSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7879:1: ( ( ( rule__SelectSubSet__AllAssignment_1 )? ) )
            // InternalSQLParser.g:7880:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            {
            // InternalSQLParser.g:7880:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            // InternalSQLParser.g:7881:2: ( rule__SelectSubSet__AllAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }
            // InternalSQLParser.g:7882:2: ( rule__SelectSubSet__AllAssignment_1 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==ALL) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSQLParser.g:7882:3: rule__SelectSubSet__AllAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SelectSubSet__AllAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__2"
    // InternalSQLParser.g:7890:1: rule__SelectSubSet__Group__2 : rule__SelectSubSet__Group__2__Impl ;
    public final void rule__SelectSubSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7894:1: ( rule__SelectSubSet__Group__2__Impl )
            // InternalSQLParser.g:7895:2: rule__SelectSubSet__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2"


    // $ANTLR start "rule__SelectSubSet__Group__2__Impl"
    // InternalSQLParser.g:7901:1: rule__SelectSubSet__Group__2__Impl : ( ( rule__SelectSubSet__QueryAssignment_2 ) ) ;
    public final void rule__SelectSubSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7905:1: ( ( ( rule__SelectSubSet__QueryAssignment_2 ) ) )
            // InternalSQLParser.g:7906:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            {
            // InternalSQLParser.g:7906:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            // InternalSQLParser.g:7907:2: ( rule__SelectSubSet__QueryAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }
            // InternalSQLParser.g:7908:2: ( rule__SelectSubSet__QueryAssignment_2 )
            // InternalSQLParser.g:7908:3: rule__SelectSubSet__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__QueryAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__0"
    // InternalSQLParser.g:7917:1: rule__Select__Group__0 : rule__Select__Group__0__Impl rule__Select__Group__1 ;
    public final void rule__Select__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7921:1: ( rule__Select__Group__0__Impl rule__Select__Group__1 )
            // InternalSQLParser.g:7922:2: rule__Select__Group__0__Impl rule__Select__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__Select__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0"


    // $ANTLR start "rule__Select__Group__0__Impl"
    // InternalSQLParser.g:7929:1: rule__Select__Group__0__Impl : ( ( rule__Select__SelectAssignment_0 ) ) ;
    public final void rule__Select__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7933:1: ( ( ( rule__Select__SelectAssignment_0 ) ) )
            // InternalSQLParser.g:7934:1: ( ( rule__Select__SelectAssignment_0 ) )
            {
            // InternalSQLParser.g:7934:1: ( ( rule__Select__SelectAssignment_0 ) )
            // InternalSQLParser.g:7935:2: ( rule__Select__SelectAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }
            // InternalSQLParser.g:7936:2: ( rule__Select__SelectAssignment_0 )
            // InternalSQLParser.g:7936:3: rule__Select__SelectAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Select__SelectAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0__Impl"


    // $ANTLR start "rule__Select__Group__1"
    // InternalSQLParser.g:7944:1: rule__Select__Group__1 : rule__Select__Group__1__Impl rule__Select__Group__2 ;
    public final void rule__Select__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7948:1: ( rule__Select__Group__1__Impl rule__Select__Group__2 )
            // InternalSQLParser.g:7949:2: rule__Select__Group__1__Impl rule__Select__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__Select__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1"


    // $ANTLR start "rule__Select__Group__1__Impl"
    // InternalSQLParser.g:7956:1: rule__Select__Group__1__Impl : ( ( DISTINCT )? ) ;
    public final void rule__Select__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7960:1: ( ( ( DISTINCT )? ) )
            // InternalSQLParser.g:7961:1: ( ( DISTINCT )? )
            {
            // InternalSQLParser.g:7961:1: ( ( DISTINCT )? )
            // InternalSQLParser.g:7962:2: ( DISTINCT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }
            // InternalSQLParser.g:7963:2: ( DISTINCT )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==DISTINCT) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSQLParser.g:7963:3: DISTINCT
                    {
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1__Impl"


    // $ANTLR start "rule__Select__Group__2"
    // InternalSQLParser.g:7971:1: rule__Select__Group__2 : rule__Select__Group__2__Impl rule__Select__Group__3 ;
    public final void rule__Select__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7975:1: ( rule__Select__Group__2__Impl rule__Select__Group__3 )
            // InternalSQLParser.g:7976:2: rule__Select__Group__2__Impl rule__Select__Group__3
            {
            pushFollow(FOLLOW_35);
            rule__Select__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2"


    // $ANTLR start "rule__Select__Group__2__Impl"
    // InternalSQLParser.g:7983:1: rule__Select__Group__2__Impl : ( ( rule__Select__Group_2__0 )? ) ;
    public final void rule__Select__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:7987:1: ( ( ( rule__Select__Group_2__0 )? ) )
            // InternalSQLParser.g:7988:1: ( ( rule__Select__Group_2__0 )? )
            {
            // InternalSQLParser.g:7988:1: ( ( rule__Select__Group_2__0 )? )
            // InternalSQLParser.g:7989:2: ( rule__Select__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:7990:2: ( rule__Select__Group_2__0 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==TOP) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSQLParser.g:7990:3: rule__Select__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__3"
    // InternalSQLParser.g:7998:1: rule__Select__Group__3 : rule__Select__Group__3__Impl rule__Select__Group__4 ;
    public final void rule__Select__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8002:1: ( rule__Select__Group__3__Impl rule__Select__Group__4 )
            // InternalSQLParser.g:8003:2: rule__Select__Group__3__Impl rule__Select__Group__4
            {
            pushFollow(FOLLOW_36);
            rule__Select__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3"


    // $ANTLR start "rule__Select__Group__3__Impl"
    // InternalSQLParser.g:8010:1: rule__Select__Group__3__Impl : ( ( rule__Select__ColsAssignment_3 ) ) ;
    public final void rule__Select__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8014:1: ( ( ( rule__Select__ColsAssignment_3 ) ) )
            // InternalSQLParser.g:8015:1: ( ( rule__Select__ColsAssignment_3 ) )
            {
            // InternalSQLParser.g:8015:1: ( ( rule__Select__ColsAssignment_3 ) )
            // InternalSQLParser.g:8016:2: ( rule__Select__ColsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }
            // InternalSQLParser.g:8017:2: ( rule__Select__ColsAssignment_3 )
            // InternalSQLParser.g:8017:3: rule__Select__ColsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Select__ColsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3__Impl"


    // $ANTLR start "rule__Select__Group__4"
    // InternalSQLParser.g:8025:1: rule__Select__Group__4 : rule__Select__Group__4__Impl rule__Select__Group__5 ;
    public final void rule__Select__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8029:1: ( rule__Select__Group__4__Impl rule__Select__Group__5 )
            // InternalSQLParser.g:8030:2: rule__Select__Group__4__Impl rule__Select__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__Select__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4"


    // $ANTLR start "rule__Select__Group__4__Impl"
    // InternalSQLParser.g:8037:1: rule__Select__Group__4__Impl : ( FROM ) ;
    public final void rule__Select__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8041:1: ( ( FROM ) )
            // InternalSQLParser.g:8042:1: ( FROM )
            {
            // InternalSQLParser.g:8042:1: ( FROM )
            // InternalSQLParser.g:8043:2: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4__Impl"


    // $ANTLR start "rule__Select__Group__5"
    // InternalSQLParser.g:8052:1: rule__Select__Group__5 : rule__Select__Group__5__Impl rule__Select__Group__6 ;
    public final void rule__Select__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8056:1: ( rule__Select__Group__5__Impl rule__Select__Group__6 )
            // InternalSQLParser.g:8057:2: rule__Select__Group__5__Impl rule__Select__Group__6
            {
            pushFollow(FOLLOW_37);
            rule__Select__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5"


    // $ANTLR start "rule__Select__Group__5__Impl"
    // InternalSQLParser.g:8064:1: rule__Select__Group__5__Impl : ( ( rule__Select__TblAssignment_5 ) ) ;
    public final void rule__Select__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8068:1: ( ( ( rule__Select__TblAssignment_5 ) ) )
            // InternalSQLParser.g:8069:1: ( ( rule__Select__TblAssignment_5 ) )
            {
            // InternalSQLParser.g:8069:1: ( ( rule__Select__TblAssignment_5 ) )
            // InternalSQLParser.g:8070:2: ( rule__Select__TblAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }
            // InternalSQLParser.g:8071:2: ( rule__Select__TblAssignment_5 )
            // InternalSQLParser.g:8071:3: rule__Select__TblAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Select__TblAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5__Impl"


    // $ANTLR start "rule__Select__Group__6"
    // InternalSQLParser.g:8079:1: rule__Select__Group__6 : rule__Select__Group__6__Impl rule__Select__Group__7 ;
    public final void rule__Select__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8083:1: ( rule__Select__Group__6__Impl rule__Select__Group__7 )
            // InternalSQLParser.g:8084:2: rule__Select__Group__6__Impl rule__Select__Group__7
            {
            pushFollow(FOLLOW_37);
            rule__Select__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6"


    // $ANTLR start "rule__Select__Group__6__Impl"
    // InternalSQLParser.g:8091:1: rule__Select__Group__6__Impl : ( ( rule__Select__Group_6__0 )? ) ;
    public final void rule__Select__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8095:1: ( ( ( rule__Select__Group_6__0 )? ) )
            // InternalSQLParser.g:8096:1: ( ( rule__Select__Group_6__0 )? )
            {
            // InternalSQLParser.g:8096:1: ( ( rule__Select__Group_6__0 )? )
            // InternalSQLParser.g:8097:2: ( rule__Select__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_6()); 
            }
            // InternalSQLParser.g:8098:2: ( rule__Select__Group_6__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==WHERE) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSQLParser.g:8098:3: rule__Select__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6__Impl"


    // $ANTLR start "rule__Select__Group__7"
    // InternalSQLParser.g:8106:1: rule__Select__Group__7 : rule__Select__Group__7__Impl rule__Select__Group__8 ;
    public final void rule__Select__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8110:1: ( rule__Select__Group__7__Impl rule__Select__Group__8 )
            // InternalSQLParser.g:8111:2: rule__Select__Group__7__Impl rule__Select__Group__8
            {
            pushFollow(FOLLOW_37);
            rule__Select__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7"


    // $ANTLR start "rule__Select__Group__7__Impl"
    // InternalSQLParser.g:8118:1: rule__Select__Group__7__Impl : ( ( rule__Select__Group_7__0 )? ) ;
    public final void rule__Select__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8122:1: ( ( ( rule__Select__Group_7__0 )? ) )
            // InternalSQLParser.g:8123:1: ( ( rule__Select__Group_7__0 )? )
            {
            // InternalSQLParser.g:8123:1: ( ( rule__Select__Group_7__0 )? )
            // InternalSQLParser.g:8124:2: ( rule__Select__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_7()); 
            }
            // InternalSQLParser.g:8125:2: ( rule__Select__Group_7__0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==GROUP) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSQLParser.g:8125:3: rule__Select__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7__Impl"


    // $ANTLR start "rule__Select__Group__8"
    // InternalSQLParser.g:8133:1: rule__Select__Group__8 : rule__Select__Group__8__Impl rule__Select__Group__9 ;
    public final void rule__Select__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8137:1: ( rule__Select__Group__8__Impl rule__Select__Group__9 )
            // InternalSQLParser.g:8138:2: rule__Select__Group__8__Impl rule__Select__Group__9
            {
            pushFollow(FOLLOW_37);
            rule__Select__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8"


    // $ANTLR start "rule__Select__Group__8__Impl"
    // InternalSQLParser.g:8145:1: rule__Select__Group__8__Impl : ( ( rule__Select__Group_8__0 )? ) ;
    public final void rule__Select__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8149:1: ( ( ( rule__Select__Group_8__0 )? ) )
            // InternalSQLParser.g:8150:1: ( ( rule__Select__Group_8__0 )? )
            {
            // InternalSQLParser.g:8150:1: ( ( rule__Select__Group_8__0 )? )
            // InternalSQLParser.g:8151:2: ( rule__Select__Group_8__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_8()); 
            }
            // InternalSQLParser.g:8152:2: ( rule__Select__Group_8__0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==HAVING) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSQLParser.g:8152:3: rule__Select__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8__Impl"


    // $ANTLR start "rule__Select__Group__9"
    // InternalSQLParser.g:8160:1: rule__Select__Group__9 : rule__Select__Group__9__Impl rule__Select__Group__10 ;
    public final void rule__Select__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8164:1: ( rule__Select__Group__9__Impl rule__Select__Group__10 )
            // InternalSQLParser.g:8165:2: rule__Select__Group__9__Impl rule__Select__Group__10
            {
            pushFollow(FOLLOW_37);
            rule__Select__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9"


    // $ANTLR start "rule__Select__Group__9__Impl"
    // InternalSQLParser.g:8172:1: rule__Select__Group__9__Impl : ( ( rule__Select__Group_9__0 )? ) ;
    public final void rule__Select__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8176:1: ( ( ( rule__Select__Group_9__0 )? ) )
            // InternalSQLParser.g:8177:1: ( ( rule__Select__Group_9__0 )? )
            {
            // InternalSQLParser.g:8177:1: ( ( rule__Select__Group_9__0 )? )
            // InternalSQLParser.g:8178:2: ( rule__Select__Group_9__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_9()); 
            }
            // InternalSQLParser.g:8179:2: ( rule__Select__Group_9__0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==ORDER) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSQLParser.g:8179:3: rule__Select__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9__Impl"


    // $ANTLR start "rule__Select__Group__10"
    // InternalSQLParser.g:8187:1: rule__Select__Group__10 : rule__Select__Group__10__Impl rule__Select__Group__11 ;
    public final void rule__Select__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8191:1: ( rule__Select__Group__10__Impl rule__Select__Group__11 )
            // InternalSQLParser.g:8192:2: rule__Select__Group__10__Impl rule__Select__Group__11
            {
            pushFollow(FOLLOW_37);
            rule__Select__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10"


    // $ANTLR start "rule__Select__Group__10__Impl"
    // InternalSQLParser.g:8199:1: rule__Select__Group__10__Impl : ( ( rule__Select__Group_10__0 )? ) ;
    public final void rule__Select__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8203:1: ( ( ( rule__Select__Group_10__0 )? ) )
            // InternalSQLParser.g:8204:1: ( ( rule__Select__Group_10__0 )? )
            {
            // InternalSQLParser.g:8204:1: ( ( rule__Select__Group_10__0 )? )
            // InternalSQLParser.g:8205:2: ( rule__Select__Group_10__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_10()); 
            }
            // InternalSQLParser.g:8206:2: ( rule__Select__Group_10__0 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==LIMIT) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalSQLParser.g:8206:3: rule__Select__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_10__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10__Impl"


    // $ANTLR start "rule__Select__Group__11"
    // InternalSQLParser.g:8214:1: rule__Select__Group__11 : rule__Select__Group__11__Impl rule__Select__Group__12 ;
    public final void rule__Select__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8218:1: ( rule__Select__Group__11__Impl rule__Select__Group__12 )
            // InternalSQLParser.g:8219:2: rule__Select__Group__11__Impl rule__Select__Group__12
            {
            pushFollow(FOLLOW_37);
            rule__Select__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__12();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11"


    // $ANTLR start "rule__Select__Group__11__Impl"
    // InternalSQLParser.g:8226:1: rule__Select__Group__11__Impl : ( ( rule__Select__Group_11__0 )? ) ;
    public final void rule__Select__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8230:1: ( ( ( rule__Select__Group_11__0 )? ) )
            // InternalSQLParser.g:8231:1: ( ( rule__Select__Group_11__0 )? )
            {
            // InternalSQLParser.g:8231:1: ( ( rule__Select__Group_11__0 )? )
            // InternalSQLParser.g:8232:2: ( rule__Select__Group_11__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_11()); 
            }
            // InternalSQLParser.g:8233:2: ( rule__Select__Group_11__0 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==OFFSET) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSQLParser.g:8233:3: rule__Select__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11__Impl"


    // $ANTLR start "rule__Select__Group__12"
    // InternalSQLParser.g:8241:1: rule__Select__Group__12 : rule__Select__Group__12__Impl ;
    public final void rule__Select__Group__12() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8245:1: ( rule__Select__Group__12__Impl )
            // InternalSQLParser.g:8246:2: rule__Select__Group__12__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__12__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12"


    // $ANTLR start "rule__Select__Group__12__Impl"
    // InternalSQLParser.g:8252:1: rule__Select__Group__12__Impl : ( ( rule__Select__Group_12__0 )? ) ;
    public final void rule__Select__Group__12__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8256:1: ( ( ( rule__Select__Group_12__0 )? ) )
            // InternalSQLParser.g:8257:1: ( ( rule__Select__Group_12__0 )? )
            {
            // InternalSQLParser.g:8257:1: ( ( rule__Select__Group_12__0 )? )
            // InternalSQLParser.g:8258:2: ( rule__Select__Group_12__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_12()); 
            }
            // InternalSQLParser.g:8259:2: ( rule__Select__Group_12__0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==FETCH) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSQLParser.g:8259:3: rule__Select__Group_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_12__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_12()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12__Impl"


    // $ANTLR start "rule__Select__Group_2__0"
    // InternalSQLParser.g:8268:1: rule__Select__Group_2__0 : rule__Select__Group_2__0__Impl rule__Select__Group_2__1 ;
    public final void rule__Select__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8272:1: ( rule__Select__Group_2__0__Impl rule__Select__Group_2__1 )
            // InternalSQLParser.g:8273:2: rule__Select__Group_2__0__Impl rule__Select__Group_2__1
            {
            pushFollow(FOLLOW_38);
            rule__Select__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0"


    // $ANTLR start "rule__Select__Group_2__0__Impl"
    // InternalSQLParser.g:8280:1: rule__Select__Group_2__0__Impl : ( TOP ) ;
    public final void rule__Select__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8284:1: ( ( TOP ) )
            // InternalSQLParser.g:8285:1: ( TOP )
            {
            // InternalSQLParser.g:8285:1: ( TOP )
            // InternalSQLParser.g:8286:2: TOP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }
            match(input,TOP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0__Impl"


    // $ANTLR start "rule__Select__Group_2__1"
    // InternalSQLParser.g:8295:1: rule__Select__Group_2__1 : rule__Select__Group_2__1__Impl rule__Select__Group_2__2 ;
    public final void rule__Select__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8299:1: ( rule__Select__Group_2__1__Impl rule__Select__Group_2__2 )
            // InternalSQLParser.g:8300:2: rule__Select__Group_2__1__Impl rule__Select__Group_2__2
            {
            pushFollow(FOLLOW_39);
            rule__Select__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1"


    // $ANTLR start "rule__Select__Group_2__1__Impl"
    // InternalSQLParser.g:8307:1: rule__Select__Group_2__1__Impl : ( ( rule__Select__Alternatives_2_1 ) ) ;
    public final void rule__Select__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8311:1: ( ( ( rule__Select__Alternatives_2_1 ) ) )
            // InternalSQLParser.g:8312:1: ( ( rule__Select__Alternatives_2_1 ) )
            {
            // InternalSQLParser.g:8312:1: ( ( rule__Select__Alternatives_2_1 ) )
            // InternalSQLParser.g:8313:2: ( rule__Select__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }
            // InternalSQLParser.g:8314:2: ( rule__Select__Alternatives_2_1 )
            // InternalSQLParser.g:8314:3: rule__Select__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1__Impl"


    // $ANTLR start "rule__Select__Group_2__2"
    // InternalSQLParser.g:8322:1: rule__Select__Group_2__2 : rule__Select__Group_2__2__Impl rule__Select__Group_2__3 ;
    public final void rule__Select__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8326:1: ( rule__Select__Group_2__2__Impl rule__Select__Group_2__3 )
            // InternalSQLParser.g:8327:2: rule__Select__Group_2__2__Impl rule__Select__Group_2__3
            {
            pushFollow(FOLLOW_39);
            rule__Select__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2"


    // $ANTLR start "rule__Select__Group_2__2__Impl"
    // InternalSQLParser.g:8334:1: rule__Select__Group_2__2__Impl : ( ( PERCENT )? ) ;
    public final void rule__Select__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8338:1: ( ( ( PERCENT )? ) )
            // InternalSQLParser.g:8339:1: ( ( PERCENT )? )
            {
            // InternalSQLParser.g:8339:1: ( ( PERCENT )? )
            // InternalSQLParser.g:8340:2: ( PERCENT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }
            // InternalSQLParser.g:8341:2: ( PERCENT )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==PERCENT) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalSQLParser.g:8341:3: PERCENT
                    {
                    match(input,PERCENT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2__Impl"


    // $ANTLR start "rule__Select__Group_2__3"
    // InternalSQLParser.g:8349:1: rule__Select__Group_2__3 : rule__Select__Group_2__3__Impl ;
    public final void rule__Select__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8353:1: ( rule__Select__Group_2__3__Impl )
            // InternalSQLParser.g:8354:2: rule__Select__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3"


    // $ANTLR start "rule__Select__Group_2__3__Impl"
    // InternalSQLParser.g:8360:1: rule__Select__Group_2__3__Impl : ( ( rule__Select__Group_2_3__0 )? ) ;
    public final void rule__Select__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8364:1: ( ( ( rule__Select__Group_2_3__0 )? ) )
            // InternalSQLParser.g:8365:1: ( ( rule__Select__Group_2_3__0 )? )
            {
            // InternalSQLParser.g:8365:1: ( ( rule__Select__Group_2_3__0 )? )
            // InternalSQLParser.g:8366:2: ( rule__Select__Group_2_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }
            // InternalSQLParser.g:8367:2: ( rule__Select__Group_2_3__0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==WITH) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSQLParser.g:8367:3: rule__Select__Group_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3__Impl"


    // $ANTLR start "rule__Select__Group_2_3__0"
    // InternalSQLParser.g:8376:1: rule__Select__Group_2_3__0 : rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 ;
    public final void rule__Select__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8380:1: ( rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 )
            // InternalSQLParser.g:8381:2: rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1
            {
            pushFollow(FOLLOW_40);
            rule__Select__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0"


    // $ANTLR start "rule__Select__Group_2_3__0__Impl"
    // InternalSQLParser.g:8388:1: rule__Select__Group_2_3__0__Impl : ( WITH ) ;
    public final void rule__Select__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8392:1: ( ( WITH ) )
            // InternalSQLParser.g:8393:1: ( WITH )
            {
            // InternalSQLParser.g:8393:1: ( WITH )
            // InternalSQLParser.g:8394:2: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0__Impl"


    // $ANTLR start "rule__Select__Group_2_3__1"
    // InternalSQLParser.g:8403:1: rule__Select__Group_2_3__1 : rule__Select__Group_2_3__1__Impl ;
    public final void rule__Select__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8407:1: ( rule__Select__Group_2_3__1__Impl )
            // InternalSQLParser.g:8408:2: rule__Select__Group_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1"


    // $ANTLR start "rule__Select__Group_2_3__1__Impl"
    // InternalSQLParser.g:8414:1: rule__Select__Group_2_3__1__Impl : ( TIES ) ;
    public final void rule__Select__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8418:1: ( ( TIES ) )
            // InternalSQLParser.g:8419:1: ( TIES )
            {
            // InternalSQLParser.g:8419:1: ( TIES )
            // InternalSQLParser.g:8420:2: TIES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }
            match(input,TIES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1__Impl"


    // $ANTLR start "rule__Select__Group_6__0"
    // InternalSQLParser.g:8430:1: rule__Select__Group_6__0 : rule__Select__Group_6__0__Impl rule__Select__Group_6__1 ;
    public final void rule__Select__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8434:1: ( rule__Select__Group_6__0__Impl rule__Select__Group_6__1 )
            // InternalSQLParser.g:8435:2: rule__Select__Group_6__0__Impl rule__Select__Group_6__1
            {
            pushFollow(FOLLOW_41);
            rule__Select__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0"


    // $ANTLR start "rule__Select__Group_6__0__Impl"
    // InternalSQLParser.g:8442:1: rule__Select__Group_6__0__Impl : ( WHERE ) ;
    public final void rule__Select__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8446:1: ( ( WHERE ) )
            // InternalSQLParser.g:8447:1: ( WHERE )
            {
            // InternalSQLParser.g:8447:1: ( WHERE )
            // InternalSQLParser.g:8448:2: WHERE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }
            match(input,WHERE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0__Impl"


    // $ANTLR start "rule__Select__Group_6__1"
    // InternalSQLParser.g:8457:1: rule__Select__Group_6__1 : rule__Select__Group_6__1__Impl ;
    public final void rule__Select__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8461:1: ( rule__Select__Group_6__1__Impl )
            // InternalSQLParser.g:8462:2: rule__Select__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1"


    // $ANTLR start "rule__Select__Group_6__1__Impl"
    // InternalSQLParser.g:8468:1: rule__Select__Group_6__1__Impl : ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) ;
    public final void rule__Select__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8472:1: ( ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) )
            // InternalSQLParser.g:8473:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            {
            // InternalSQLParser.g:8473:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            // InternalSQLParser.g:8474:2: ( rule__Select__WhereExpressionAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }
            // InternalSQLParser.g:8475:2: ( rule__Select__WhereExpressionAssignment_6_1 )
            // InternalSQLParser.g:8475:3: rule__Select__WhereExpressionAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__WhereExpressionAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1__Impl"


    // $ANTLR start "rule__Select__Group_7__0"
    // InternalSQLParser.g:8484:1: rule__Select__Group_7__0 : rule__Select__Group_7__0__Impl rule__Select__Group_7__1 ;
    public final void rule__Select__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8488:1: ( rule__Select__Group_7__0__Impl rule__Select__Group_7__1 )
            // InternalSQLParser.g:8489:2: rule__Select__Group_7__0__Impl rule__Select__Group_7__1
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0"


    // $ANTLR start "rule__Select__Group_7__0__Impl"
    // InternalSQLParser.g:8496:1: rule__Select__Group_7__0__Impl : ( GROUP ) ;
    public final void rule__Select__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8500:1: ( ( GROUP ) )
            // InternalSQLParser.g:8501:1: ( GROUP )
            {
            // InternalSQLParser.g:8501:1: ( GROUP )
            // InternalSQLParser.g:8502:2: GROUP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }
            match(input,GROUP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0__Impl"


    // $ANTLR start "rule__Select__Group_7__1"
    // InternalSQLParser.g:8511:1: rule__Select__Group_7__1 : rule__Select__Group_7__1__Impl rule__Select__Group_7__2 ;
    public final void rule__Select__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8515:1: ( rule__Select__Group_7__1__Impl rule__Select__Group_7__2 )
            // InternalSQLParser.g:8516:2: rule__Select__Group_7__1__Impl rule__Select__Group_7__2
            {
            pushFollow(FOLLOW_43);
            rule__Select__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1"


    // $ANTLR start "rule__Select__Group_7__1__Impl"
    // InternalSQLParser.g:8523:1: rule__Select__Group_7__1__Impl : ( BY ) ;
    public final void rule__Select__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8527:1: ( ( BY ) )
            // InternalSQLParser.g:8528:1: ( BY )
            {
            // InternalSQLParser.g:8528:1: ( BY )
            // InternalSQLParser.g:8529:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1__Impl"


    // $ANTLR start "rule__Select__Group_7__2"
    // InternalSQLParser.g:8538:1: rule__Select__Group_7__2 : rule__Select__Group_7__2__Impl ;
    public final void rule__Select__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8542:1: ( rule__Select__Group_7__2__Impl )
            // InternalSQLParser.g:8543:2: rule__Select__Group_7__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2"


    // $ANTLR start "rule__Select__Group_7__2__Impl"
    // InternalSQLParser.g:8549:1: rule__Select__Group_7__2__Impl : ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) ;
    public final void rule__Select__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8553:1: ( ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) )
            // InternalSQLParser.g:8554:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            {
            // InternalSQLParser.g:8554:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            // InternalSQLParser.g:8555:2: ( rule__Select__GroupByEntryAssignment_7_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }
            // InternalSQLParser.g:8556:2: ( rule__Select__GroupByEntryAssignment_7_2 )
            // InternalSQLParser.g:8556:3: rule__Select__GroupByEntryAssignment_7_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__GroupByEntryAssignment_7_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2__Impl"


    // $ANTLR start "rule__Select__Group_8__0"
    // InternalSQLParser.g:8565:1: rule__Select__Group_8__0 : rule__Select__Group_8__0__Impl rule__Select__Group_8__1 ;
    public final void rule__Select__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8569:1: ( rule__Select__Group_8__0__Impl rule__Select__Group_8__1 )
            // InternalSQLParser.g:8570:2: rule__Select__Group_8__0__Impl rule__Select__Group_8__1
            {
            pushFollow(FOLLOW_41);
            rule__Select__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0"


    // $ANTLR start "rule__Select__Group_8__0__Impl"
    // InternalSQLParser.g:8577:1: rule__Select__Group_8__0__Impl : ( HAVING ) ;
    public final void rule__Select__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8581:1: ( ( HAVING ) )
            // InternalSQLParser.g:8582:1: ( HAVING )
            {
            // InternalSQLParser.g:8582:1: ( HAVING )
            // InternalSQLParser.g:8583:2: HAVING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }
            match(input,HAVING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0__Impl"


    // $ANTLR start "rule__Select__Group_8__1"
    // InternalSQLParser.g:8592:1: rule__Select__Group_8__1 : rule__Select__Group_8__1__Impl ;
    public final void rule__Select__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8596:1: ( rule__Select__Group_8__1__Impl )
            // InternalSQLParser.g:8597:2: rule__Select__Group_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1"


    // $ANTLR start "rule__Select__Group_8__1__Impl"
    // InternalSQLParser.g:8603:1: rule__Select__Group_8__1__Impl : ( ( rule__Select__HavingEntryAssignment_8_1 ) ) ;
    public final void rule__Select__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8607:1: ( ( ( rule__Select__HavingEntryAssignment_8_1 ) ) )
            // InternalSQLParser.g:8608:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            {
            // InternalSQLParser.g:8608:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            // InternalSQLParser.g:8609:2: ( rule__Select__HavingEntryAssignment_8_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }
            // InternalSQLParser.g:8610:2: ( rule__Select__HavingEntryAssignment_8_1 )
            // InternalSQLParser.g:8610:3: rule__Select__HavingEntryAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__HavingEntryAssignment_8_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1__Impl"


    // $ANTLR start "rule__Select__Group_9__0"
    // InternalSQLParser.g:8619:1: rule__Select__Group_9__0 : rule__Select__Group_9__0__Impl rule__Select__Group_9__1 ;
    public final void rule__Select__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8623:1: ( rule__Select__Group_9__0__Impl rule__Select__Group_9__1 )
            // InternalSQLParser.g:8624:2: rule__Select__Group_9__0__Impl rule__Select__Group_9__1
            {
            pushFollow(FOLLOW_42);
            rule__Select__Group_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0"


    // $ANTLR start "rule__Select__Group_9__0__Impl"
    // InternalSQLParser.g:8631:1: rule__Select__Group_9__0__Impl : ( ORDER ) ;
    public final void rule__Select__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8635:1: ( ( ORDER ) )
            // InternalSQLParser.g:8636:1: ( ORDER )
            {
            // InternalSQLParser.g:8636:1: ( ORDER )
            // InternalSQLParser.g:8637:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0__Impl"


    // $ANTLR start "rule__Select__Group_9__1"
    // InternalSQLParser.g:8646:1: rule__Select__Group_9__1 : rule__Select__Group_9__1__Impl rule__Select__Group_9__2 ;
    public final void rule__Select__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8650:1: ( rule__Select__Group_9__1__Impl rule__Select__Group_9__2 )
            // InternalSQLParser.g:8651:2: rule__Select__Group_9__1__Impl rule__Select__Group_9__2
            {
            pushFollow(FOLLOW_43);
            rule__Select__Group_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1"


    // $ANTLR start "rule__Select__Group_9__1__Impl"
    // InternalSQLParser.g:8658:1: rule__Select__Group_9__1__Impl : ( BY ) ;
    public final void rule__Select__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8662:1: ( ( BY ) )
            // InternalSQLParser.g:8663:1: ( BY )
            {
            // InternalSQLParser.g:8663:1: ( BY )
            // InternalSQLParser.g:8664:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1__Impl"


    // $ANTLR start "rule__Select__Group_9__2"
    // InternalSQLParser.g:8673:1: rule__Select__Group_9__2 : rule__Select__Group_9__2__Impl ;
    public final void rule__Select__Group_9__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8677:1: ( rule__Select__Group_9__2__Impl )
            // InternalSQLParser.g:8678:2: rule__Select__Group_9__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2"


    // $ANTLR start "rule__Select__Group_9__2__Impl"
    // InternalSQLParser.g:8684:1: rule__Select__Group_9__2__Impl : ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) ;
    public final void rule__Select__Group_9__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8688:1: ( ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) )
            // InternalSQLParser.g:8689:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            {
            // InternalSQLParser.g:8689:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            // InternalSQLParser.g:8690:2: ( rule__Select__OrderByEntryAssignment_9_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }
            // InternalSQLParser.g:8691:2: ( rule__Select__OrderByEntryAssignment_9_2 )
            // InternalSQLParser.g:8691:3: rule__Select__OrderByEntryAssignment_9_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__OrderByEntryAssignment_9_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2__Impl"


    // $ANTLR start "rule__Select__Group_10__0"
    // InternalSQLParser.g:8700:1: rule__Select__Group_10__0 : rule__Select__Group_10__0__Impl rule__Select__Group_10__1 ;
    public final void rule__Select__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8704:1: ( rule__Select__Group_10__0__Impl rule__Select__Group_10__1 )
            // InternalSQLParser.g:8705:2: rule__Select__Group_10__0__Impl rule__Select__Group_10__1
            {
            pushFollow(FOLLOW_44);
            rule__Select__Group_10__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0"


    // $ANTLR start "rule__Select__Group_10__0__Impl"
    // InternalSQLParser.g:8712:1: rule__Select__Group_10__0__Impl : ( LIMIT ) ;
    public final void rule__Select__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8716:1: ( ( LIMIT ) )
            // InternalSQLParser.g:8717:1: ( LIMIT )
            {
            // InternalSQLParser.g:8717:1: ( LIMIT )
            // InternalSQLParser.g:8718:2: LIMIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }
            match(input,LIMIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0__Impl"


    // $ANTLR start "rule__Select__Group_10__1"
    // InternalSQLParser.g:8727:1: rule__Select__Group_10__1 : rule__Select__Group_10__1__Impl ;
    public final void rule__Select__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8731:1: ( rule__Select__Group_10__1__Impl )
            // InternalSQLParser.g:8732:2: rule__Select__Group_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1"


    // $ANTLR start "rule__Select__Group_10__1__Impl"
    // InternalSQLParser.g:8738:1: rule__Select__Group_10__1__Impl : ( ( rule__Select__LimAssignment_10_1 ) ) ;
    public final void rule__Select__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8742:1: ( ( ( rule__Select__LimAssignment_10_1 ) ) )
            // InternalSQLParser.g:8743:1: ( ( rule__Select__LimAssignment_10_1 ) )
            {
            // InternalSQLParser.g:8743:1: ( ( rule__Select__LimAssignment_10_1 ) )
            // InternalSQLParser.g:8744:2: ( rule__Select__LimAssignment_10_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }
            // InternalSQLParser.g:8745:2: ( rule__Select__LimAssignment_10_1 )
            // InternalSQLParser.g:8745:3: rule__Select__LimAssignment_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__LimAssignment_10_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1__Impl"


    // $ANTLR start "rule__Select__Group_11__0"
    // InternalSQLParser.g:8754:1: rule__Select__Group_11__0 : rule__Select__Group_11__0__Impl rule__Select__Group_11__1 ;
    public final void rule__Select__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8758:1: ( rule__Select__Group_11__0__Impl rule__Select__Group_11__1 )
            // InternalSQLParser.g:8759:2: rule__Select__Group_11__0__Impl rule__Select__Group_11__1
            {
            pushFollow(FOLLOW_22);
            rule__Select__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0"


    // $ANTLR start "rule__Select__Group_11__0__Impl"
    // InternalSQLParser.g:8766:1: rule__Select__Group_11__0__Impl : ( OFFSET ) ;
    public final void rule__Select__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8770:1: ( ( OFFSET ) )
            // InternalSQLParser.g:8771:1: ( OFFSET )
            {
            // InternalSQLParser.g:8771:1: ( OFFSET )
            // InternalSQLParser.g:8772:2: OFFSET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }
            match(input,OFFSET,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0__Impl"


    // $ANTLR start "rule__Select__Group_11__1"
    // InternalSQLParser.g:8781:1: rule__Select__Group_11__1 : rule__Select__Group_11__1__Impl ;
    public final void rule__Select__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8785:1: ( rule__Select__Group_11__1__Impl )
            // InternalSQLParser.g:8786:2: rule__Select__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1"


    // $ANTLR start "rule__Select__Group_11__1__Impl"
    // InternalSQLParser.g:8792:1: rule__Select__Group_11__1__Impl : ( ( rule__Select__OffsetAssignment_11_1 ) ) ;
    public final void rule__Select__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8796:1: ( ( ( rule__Select__OffsetAssignment_11_1 ) ) )
            // InternalSQLParser.g:8797:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            {
            // InternalSQLParser.g:8797:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            // InternalSQLParser.g:8798:2: ( rule__Select__OffsetAssignment_11_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }
            // InternalSQLParser.g:8799:2: ( rule__Select__OffsetAssignment_11_1 )
            // InternalSQLParser.g:8799:3: rule__Select__OffsetAssignment_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__OffsetAssignment_11_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1__Impl"


    // $ANTLR start "rule__Select__Group_12__0"
    // InternalSQLParser.g:8808:1: rule__Select__Group_12__0 : rule__Select__Group_12__0__Impl rule__Select__Group_12__1 ;
    public final void rule__Select__Group_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8812:1: ( rule__Select__Group_12__0__Impl rule__Select__Group_12__1 )
            // InternalSQLParser.g:8813:2: rule__Select__Group_12__0__Impl rule__Select__Group_12__1
            {
            pushFollow(FOLLOW_45);
            rule__Select__Group_12__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0"


    // $ANTLR start "rule__Select__Group_12__0__Impl"
    // InternalSQLParser.g:8820:1: rule__Select__Group_12__0__Impl : ( FETCH ) ;
    public final void rule__Select__Group_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8824:1: ( ( FETCH ) )
            // InternalSQLParser.g:8825:1: ( FETCH )
            {
            // InternalSQLParser.g:8825:1: ( FETCH )
            // InternalSQLParser.g:8826:2: FETCH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }
            match(input,FETCH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0__Impl"


    // $ANTLR start "rule__Select__Group_12__1"
    // InternalSQLParser.g:8835:1: rule__Select__Group_12__1 : rule__Select__Group_12__1__Impl rule__Select__Group_12__2 ;
    public final void rule__Select__Group_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8839:1: ( rule__Select__Group_12__1__Impl rule__Select__Group_12__2 )
            // InternalSQLParser.g:8840:2: rule__Select__Group_12__1__Impl rule__Select__Group_12__2
            {
            pushFollow(FOLLOW_31);
            rule__Select__Group_12__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1"


    // $ANTLR start "rule__Select__Group_12__1__Impl"
    // InternalSQLParser.g:8847:1: rule__Select__Group_12__1__Impl : ( FIRST ) ;
    public final void rule__Select__Group_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8851:1: ( ( FIRST ) )
            // InternalSQLParser.g:8852:1: ( FIRST )
            {
            // InternalSQLParser.g:8852:1: ( FIRST )
            // InternalSQLParser.g:8853:2: FIRST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }
            match(input,FIRST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1__Impl"


    // $ANTLR start "rule__Select__Group_12__2"
    // InternalSQLParser.g:8862:1: rule__Select__Group_12__2 : rule__Select__Group_12__2__Impl ;
    public final void rule__Select__Group_12__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8866:1: ( rule__Select__Group_12__2__Impl )
            // InternalSQLParser.g:8867:2: rule__Select__Group_12__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2"


    // $ANTLR start "rule__Select__Group_12__2__Impl"
    // InternalSQLParser.g:8873:1: rule__Select__Group_12__2__Impl : ( ( rule__Select__FetchFirstAssignment_12_2 ) ) ;
    public final void rule__Select__Group_12__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8877:1: ( ( ( rule__Select__FetchFirstAssignment_12_2 ) ) )
            // InternalSQLParser.g:8878:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            {
            // InternalSQLParser.g:8878:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            // InternalSQLParser.g:8879:2: ( rule__Select__FetchFirstAssignment_12_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }
            // InternalSQLParser.g:8880:2: ( rule__Select__FetchFirstAssignment_12_2 )
            // InternalSQLParser.g:8880:3: rule__Select__FetchFirstAssignment_12_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__FetchFirstAssignment_12_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2__Impl"


    // $ANTLR start "rule__Columns__Group__0"
    // InternalSQLParser.g:8889:1: rule__Columns__Group__0 : rule__Columns__Group__0__Impl rule__Columns__Group__1 ;
    public final void rule__Columns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8893:1: ( rule__Columns__Group__0__Impl rule__Columns__Group__1 )
            // InternalSQLParser.g:8894:2: rule__Columns__Group__0__Impl rule__Columns__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__Columns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0"


    // $ANTLR start "rule__Columns__Group__0__Impl"
    // InternalSQLParser.g:8901:1: rule__Columns__Group__0__Impl : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8905:1: ( ( ruleColumnOrAlias ) )
            // InternalSQLParser.g:8906:1: ( ruleColumnOrAlias )
            {
            // InternalSQLParser.g:8906:1: ( ruleColumnOrAlias )
            // InternalSQLParser.g:8907:2: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0__Impl"


    // $ANTLR start "rule__Columns__Group__1"
    // InternalSQLParser.g:8916:1: rule__Columns__Group__1 : rule__Columns__Group__1__Impl ;
    public final void rule__Columns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8920:1: ( rule__Columns__Group__1__Impl )
            // InternalSQLParser.g:8921:2: rule__Columns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1"


    // $ANTLR start "rule__Columns__Group__1__Impl"
    // InternalSQLParser.g:8927:1: rule__Columns__Group__1__Impl : ( ( rule__Columns__Group_1__0 )? ) ;
    public final void rule__Columns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8931:1: ( ( ( rule__Columns__Group_1__0 )? ) )
            // InternalSQLParser.g:8932:1: ( ( rule__Columns__Group_1__0 )? )
            {
            // InternalSQLParser.g:8932:1: ( ( rule__Columns__Group_1__0 )? )
            // InternalSQLParser.g:8933:2: ( rule__Columns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:8934:2: ( rule__Columns__Group_1__0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==Comma) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalSQLParser.g:8934:3: rule__Columns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Columns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1__Impl"


    // $ANTLR start "rule__Columns__Group_1__0"
    // InternalSQLParser.g:8943:1: rule__Columns__Group_1__0 : rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 ;
    public final void rule__Columns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8947:1: ( rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 )
            // InternalSQLParser.g:8948:2: rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Columns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0"


    // $ANTLR start "rule__Columns__Group_1__0__Impl"
    // InternalSQLParser.g:8955:1: rule__Columns__Group_1__0__Impl : ( () ) ;
    public final void rule__Columns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8959:1: ( ( () ) )
            // InternalSQLParser.g:8960:1: ( () )
            {
            // InternalSQLParser.g:8960:1: ( () )
            // InternalSQLParser.g:8961:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:8962:2: ()
            // InternalSQLParser.g:8962:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1__1"
    // InternalSQLParser.g:8970:1: rule__Columns__Group_1__1 : rule__Columns__Group_1__1__Impl ;
    public final void rule__Columns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8974:1: ( rule__Columns__Group_1__1__Impl )
            // InternalSQLParser.g:8975:2: rule__Columns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1"


    // $ANTLR start "rule__Columns__Group_1__1__Impl"
    // InternalSQLParser.g:8981:1: rule__Columns__Group_1__1__Impl : ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) ;
    public final void rule__Columns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:8985:1: ( ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:8986:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:8986:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:8987:2: ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:8987:2: ( ( rule__Columns__Group_1_1__0 ) )
            // InternalSQLParser.g:8988:3: ( rule__Columns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8989:3: ( rule__Columns__Group_1_1__0 )
            // InternalSQLParser.g:8989:4: rule__Columns__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__Columns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:8992:2: ( ( rule__Columns__Group_1_1__0 )* )
            // InternalSQLParser.g:8993:3: ( rule__Columns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:8994:3: ( rule__Columns__Group_1_1__0 )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==Comma) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalSQLParser.g:8994:4: rule__Columns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__Columns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__0"
    // InternalSQLParser.g:9004:1: rule__Columns__Group_1_1__0 : rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 ;
    public final void rule__Columns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9008:1: ( rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 )
            // InternalSQLParser.g:9009:2: rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1
            {
            pushFollow(FOLLOW_7);
            rule__Columns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0"


    // $ANTLR start "rule__Columns__Group_1_1__0__Impl"
    // InternalSQLParser.g:9016:1: rule__Columns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Columns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9020:1: ( ( Comma ) )
            // InternalSQLParser.g:9021:1: ( Comma )
            {
            // InternalSQLParser.g:9021:1: ( Comma )
            // InternalSQLParser.g:9022:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__1"
    // InternalSQLParser.g:9031:1: rule__Columns__Group_1_1__1 : rule__Columns__Group_1_1__1__Impl ;
    public final void rule__Columns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9035:1: ( rule__Columns__Group_1_1__1__Impl )
            // InternalSQLParser.g:9036:2: rule__Columns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1"


    // $ANTLR start "rule__Columns__Group_1_1__1__Impl"
    // InternalSQLParser.g:9042:1: rule__Columns__Group_1_1__1__Impl : ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Columns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9046:1: ( ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9047:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9047:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9048:2: ( rule__Columns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9049:2: ( rule__Columns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9049:3: rule__Columns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Columns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0"
    // InternalSQLParser.g:9058:1: rule__ColumnOrAlias__Group_0__0 : rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 ;
    public final void rule__ColumnOrAlias__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9062:1: ( rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 )
            // InternalSQLParser.g:9063:2: rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1
            {
            pushFollow(FOLLOW_46);
            rule__ColumnOrAlias__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0__Impl"
    // InternalSQLParser.g:9070:1: rule__ColumnOrAlias__Group_0__0__Impl : ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) ;
    public final void rule__ColumnOrAlias__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9074:1: ( ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) )
            // InternalSQLParser.g:9075:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            {
            // InternalSQLParser.g:9075:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            // InternalSQLParser.g:9076:2: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }
            // InternalSQLParser.g:9077:2: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            // InternalSQLParser.g:9077:3: rule__ColumnOrAlias__CeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__CeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1"
    // InternalSQLParser.g:9085:1: rule__ColumnOrAlias__Group_0__1 : rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 ;
    public final void rule__ColumnOrAlias__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9089:1: ( rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 )
            // InternalSQLParser.g:9090:2: rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2
            {
            pushFollow(FOLLOW_46);
            rule__ColumnOrAlias__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1__Impl"
    // InternalSQLParser.g:9097:1: rule__ColumnOrAlias__Group_0__1__Impl : ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9101:1: ( ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) )
            // InternalSQLParser.g:9102:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            {
            // InternalSQLParser.g:9102:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            // InternalSQLParser.g:9103:2: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }
            // InternalSQLParser.g:9104:2: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==AS) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalSQLParser.g:9104:3: rule__ColumnOrAlias__AliasAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AliasAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2"
    // InternalSQLParser.g:9112:1: rule__ColumnOrAlias__Group_0__2 : rule__ColumnOrAlias__Group_0__2__Impl ;
    public final void rule__ColumnOrAlias__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9116:1: ( rule__ColumnOrAlias__Group_0__2__Impl )
            // InternalSQLParser.g:9117:2: rule__ColumnOrAlias__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2__Impl"
    // InternalSQLParser.g:9123:1: rule__ColumnOrAlias__Group_0__2__Impl : ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9127:1: ( ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) )
            // InternalSQLParser.g:9128:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            {
            // InternalSQLParser.g:9128:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            // InternalSQLParser.g:9129:2: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }
            // InternalSQLParser.g:9130:2: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( ((LA94_0>=RULE_STRING && LA94_0<=RULE_ID)) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSQLParser.g:9130:3: rule__ColumnOrAlias__ColAliasAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__ColAliasAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2__Impl"


    // $ANTLR start "rule__ColumnFull__Group__0"
    // InternalSQLParser.g:9139:1: rule__ColumnFull__Group__0 : rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 ;
    public final void rule__ColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9143:1: ( rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 )
            // InternalSQLParser.g:9144:2: rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__ColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0"


    // $ANTLR start "rule__ColumnFull__Group__0__Impl"
    // InternalSQLParser.g:9151:1: rule__ColumnFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9155:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:9156:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:9156:1: ( ruleDbObjectName )
            // InternalSQLParser.g:9157:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group__1"
    // InternalSQLParser.g:9166:1: rule__ColumnFull__Group__1 : rule__ColumnFull__Group__1__Impl ;
    public final void rule__ColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9170:1: ( rule__ColumnFull__Group__1__Impl )
            // InternalSQLParser.g:9171:2: rule__ColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1"


    // $ANTLR start "rule__ColumnFull__Group__1__Impl"
    // InternalSQLParser.g:9177:1: rule__ColumnFull__Group__1__Impl : ( ( rule__ColumnFull__Group_1__0 )? ) ;
    public final void rule__ColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9181:1: ( ( ( rule__ColumnFull__Group_1__0 )? ) )
            // InternalSQLParser.g:9182:1: ( ( rule__ColumnFull__Group_1__0 )? )
            {
            // InternalSQLParser.g:9182:1: ( ( rule__ColumnFull__Group_1__0 )? )
            // InternalSQLParser.g:9183:2: ( rule__ColumnFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9184:2: ( rule__ColumnFull__Group_1__0 )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==FullStop) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // InternalSQLParser.g:9184:3: rule__ColumnFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__0"
    // InternalSQLParser.g:9193:1: rule__ColumnFull__Group_1__0 : rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 ;
    public final void rule__ColumnFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9197:1: ( rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 )
            // InternalSQLParser.g:9198:2: rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1
            {
            pushFollow(FOLLOW_47);
            rule__ColumnFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1__0__Impl"
    // InternalSQLParser.g:9205:1: rule__ColumnFull__Group_1__0__Impl : ( () ) ;
    public final void rule__ColumnFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9209:1: ( ( () ) )
            // InternalSQLParser.g:9210:1: ( () )
            {
            // InternalSQLParser.g:9210:1: ( () )
            // InternalSQLParser.g:9211:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9212:2: ()
            // InternalSQLParser.g:9212:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__1"
    // InternalSQLParser.g:9220:1: rule__ColumnFull__Group_1__1 : rule__ColumnFull__Group_1__1__Impl ;
    public final void rule__ColumnFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9224:1: ( rule__ColumnFull__Group_1__1__Impl )
            // InternalSQLParser.g:9225:2: rule__ColumnFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1__1__Impl"
    // InternalSQLParser.g:9231:1: rule__ColumnFull__Group_1__1__Impl : ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) ;
    public final void rule__ColumnFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9235:1: ( ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:9236:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:9236:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            // InternalSQLParser.g:9237:2: ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:9237:2: ( ( rule__ColumnFull__Group_1_1__0 ) )
            // InternalSQLParser.g:9238:3: ( rule__ColumnFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9239:3: ( rule__ColumnFull__Group_1_1__0 )
            // InternalSQLParser.g:9239:4: rule__ColumnFull__Group_1_1__0
            {
            pushFollow(FOLLOW_48);
            rule__ColumnFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:9242:2: ( ( rule__ColumnFull__Group_1_1__0 )* )
            // InternalSQLParser.g:9243:3: ( rule__ColumnFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9244:3: ( rule__ColumnFull__Group_1_1__0 )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==FullStop) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalSQLParser.g:9244:4: rule__ColumnFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__ColumnFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0"
    // InternalSQLParser.g:9254:1: rule__ColumnFull__Group_1_1__0 : rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 ;
    public final void rule__ColumnFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9258:1: ( rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 )
            // InternalSQLParser.g:9259:2: rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__ColumnFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0__Impl"
    // InternalSQLParser.g:9266:1: rule__ColumnFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__ColumnFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9270:1: ( ( FullStop ) )
            // InternalSQLParser.g:9271:1: ( FullStop )
            {
            // InternalSQLParser.g:9271:1: ( FullStop )
            // InternalSQLParser.g:9272:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1"
    // InternalSQLParser.g:9281:1: rule__ColumnFull__Group_1_1__1 : rule__ColumnFull__Group_1_1__1__Impl ;
    public final void rule__ColumnFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9285:1: ( rule__ColumnFull__Group_1_1__1__Impl )
            // InternalSQLParser.g:9286:2: rule__ColumnFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1__Impl"
    // InternalSQLParser.g:9292:1: rule__ColumnFull__Group_1_1__1__Impl : ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__ColumnFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9296:1: ( ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9297:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9297:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9298:2: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9299:2: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9299:3: rule__ColumnFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__Tables__Group__0"
    // InternalSQLParser.g:9308:1: rule__Tables__Group__0 : rule__Tables__Group__0__Impl rule__Tables__Group__1 ;
    public final void rule__Tables__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9312:1: ( rule__Tables__Group__0__Impl rule__Tables__Group__1 )
            // InternalSQLParser.g:9313:2: rule__Tables__Group__0__Impl rule__Tables__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__Tables__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0"


    // $ANTLR start "rule__Tables__Group__0__Impl"
    // InternalSQLParser.g:9320:1: rule__Tables__Group__0__Impl : ( ruleFromTable ) ;
    public final void rule__Tables__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9324:1: ( ( ruleFromTable ) )
            // InternalSQLParser.g:9325:1: ( ruleFromTable )
            {
            // InternalSQLParser.g:9325:1: ( ruleFromTable )
            // InternalSQLParser.g:9326:2: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0__Impl"


    // $ANTLR start "rule__Tables__Group__1"
    // InternalSQLParser.g:9335:1: rule__Tables__Group__1 : rule__Tables__Group__1__Impl ;
    public final void rule__Tables__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9339:1: ( rule__Tables__Group__1__Impl )
            // InternalSQLParser.g:9340:2: rule__Tables__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1"


    // $ANTLR start "rule__Tables__Group__1__Impl"
    // InternalSQLParser.g:9346:1: rule__Tables__Group__1__Impl : ( ( rule__Tables__Group_1__0 )? ) ;
    public final void rule__Tables__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9350:1: ( ( ( rule__Tables__Group_1__0 )? ) )
            // InternalSQLParser.g:9351:1: ( ( rule__Tables__Group_1__0 )? )
            {
            // InternalSQLParser.g:9351:1: ( ( rule__Tables__Group_1__0 )? )
            // InternalSQLParser.g:9352:2: ( rule__Tables__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9353:2: ( rule__Tables__Group_1__0 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==Comma) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalSQLParser.g:9353:3: rule__Tables__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Tables__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1__Impl"


    // $ANTLR start "rule__Tables__Group_1__0"
    // InternalSQLParser.g:9362:1: rule__Tables__Group_1__0 : rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 ;
    public final void rule__Tables__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9366:1: ( rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 )
            // InternalSQLParser.g:9367:2: rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Tables__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0"


    // $ANTLR start "rule__Tables__Group_1__0__Impl"
    // InternalSQLParser.g:9374:1: rule__Tables__Group_1__0__Impl : ( () ) ;
    public final void rule__Tables__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9378:1: ( ( () ) )
            // InternalSQLParser.g:9379:1: ( () )
            {
            // InternalSQLParser.g:9379:1: ( () )
            // InternalSQLParser.g:9380:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9381:2: ()
            // InternalSQLParser.g:9381:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1__1"
    // InternalSQLParser.g:9389:1: rule__Tables__Group_1__1 : rule__Tables__Group_1__1__Impl ;
    public final void rule__Tables__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9393:1: ( rule__Tables__Group_1__1__Impl )
            // InternalSQLParser.g:9394:2: rule__Tables__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1"


    // $ANTLR start "rule__Tables__Group_1__1__Impl"
    // InternalSQLParser.g:9400:1: rule__Tables__Group_1__1__Impl : ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) ;
    public final void rule__Tables__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9404:1: ( ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:9405:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:9405:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            // InternalSQLParser.g:9406:2: ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:9406:2: ( ( rule__Tables__Group_1_1__0 ) )
            // InternalSQLParser.g:9407:3: ( rule__Tables__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9408:3: ( rule__Tables__Group_1_1__0 )
            // InternalSQLParser.g:9408:4: rule__Tables__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__Tables__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:9411:2: ( ( rule__Tables__Group_1_1__0 )* )
            // InternalSQLParser.g:9412:3: ( rule__Tables__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9413:3: ( rule__Tables__Group_1_1__0 )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==Comma) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalSQLParser.g:9413:4: rule__Tables__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__Tables__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__0"
    // InternalSQLParser.g:9423:1: rule__Tables__Group_1_1__0 : rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 ;
    public final void rule__Tables__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9427:1: ( rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 )
            // InternalSQLParser.g:9428:2: rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Tables__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0"


    // $ANTLR start "rule__Tables__Group_1_1__0__Impl"
    // InternalSQLParser.g:9435:1: rule__Tables__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Tables__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9439:1: ( ( Comma ) )
            // InternalSQLParser.g:9440:1: ( Comma )
            {
            // InternalSQLParser.g:9440:1: ( Comma )
            // InternalSQLParser.g:9441:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__1"
    // InternalSQLParser.g:9450:1: rule__Tables__Group_1_1__1 : rule__Tables__Group_1_1__1__Impl ;
    public final void rule__Tables__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9454:1: ( rule__Tables__Group_1_1__1__Impl )
            // InternalSQLParser.g:9455:2: rule__Tables__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1"


    // $ANTLR start "rule__Tables__Group_1_1__1__Impl"
    // InternalSQLParser.g:9461:1: rule__Tables__Group_1_1__1__Impl : ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Tables__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9465:1: ( ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9466:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9466:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9467:2: ( rule__Tables__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9468:2: ( rule__Tables__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9468:3: rule__Tables__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Tables__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1__Impl"


    // $ANTLR start "rule__FromTable__Group__0"
    // InternalSQLParser.g:9477:1: rule__FromTable__Group__0 : rule__FromTable__Group__0__Impl rule__FromTable__Group__1 ;
    public final void rule__FromTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9481:1: ( rule__FromTable__Group__0__Impl rule__FromTable__Group__1 )
            // InternalSQLParser.g:9482:2: rule__FromTable__Group__0__Impl rule__FromTable__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__FromTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0"


    // $ANTLR start "rule__FromTable__Group__0__Impl"
    // InternalSQLParser.g:9489:1: rule__FromTable__Group__0__Impl : ( ( rule__FromTable__TableAssignment_0 ) ) ;
    public final void rule__FromTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9493:1: ( ( ( rule__FromTable__TableAssignment_0 ) ) )
            // InternalSQLParser.g:9494:1: ( ( rule__FromTable__TableAssignment_0 ) )
            {
            // InternalSQLParser.g:9494:1: ( ( rule__FromTable__TableAssignment_0 ) )
            // InternalSQLParser.g:9495:2: ( rule__FromTable__TableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }
            // InternalSQLParser.g:9496:2: ( rule__FromTable__TableAssignment_0 )
            // InternalSQLParser.g:9496:3: rule__FromTable__TableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__TableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0__Impl"


    // $ANTLR start "rule__FromTable__Group__1"
    // InternalSQLParser.g:9504:1: rule__FromTable__Group__1 : rule__FromTable__Group__1__Impl ;
    public final void rule__FromTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9508:1: ( rule__FromTable__Group__1__Impl )
            // InternalSQLParser.g:9509:2: rule__FromTable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1"


    // $ANTLR start "rule__FromTable__Group__1__Impl"
    // InternalSQLParser.g:9515:1: rule__FromTable__Group__1__Impl : ( ( rule__FromTable__FjoinAssignment_1 )* ) ;
    public final void rule__FromTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9519:1: ( ( ( rule__FromTable__FjoinAssignment_1 )* ) )
            // InternalSQLParser.g:9520:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            {
            // InternalSQLParser.g:9520:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            // InternalSQLParser.g:9521:2: ( rule__FromTable__FjoinAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }
            // InternalSQLParser.g:9522:2: ( rule__FromTable__FjoinAssignment_1 )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==STRAIGHT_JOIN||LA99_0==NATURAL||LA99_0==CROSS||LA99_0==INNER||LA99_0==RIGHT||LA99_0==FULL||LA99_0==JOIN||LA99_0==LEFT) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalSQLParser.g:9522:3: rule__FromTable__FjoinAssignment_1
            	    {
            	    pushFollow(FOLLOW_50);
            	    rule__FromTable__FjoinAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__0"
    // InternalSQLParser.g:9531:1: rule__FromTableJoin__Group__0 : rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 ;
    public final void rule__FromTableJoin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9535:1: ( rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 )
            // InternalSQLParser.g:9536:2: rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FromTableJoin__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0"


    // $ANTLR start "rule__FromTableJoin__Group__0__Impl"
    // InternalSQLParser.g:9543:1: rule__FromTableJoin__Group__0__Impl : ( ( rule__FromTableJoin__JoinAssignment_0 ) ) ;
    public final void rule__FromTableJoin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9547:1: ( ( ( rule__FromTableJoin__JoinAssignment_0 ) ) )
            // InternalSQLParser.g:9548:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            {
            // InternalSQLParser.g:9548:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            // InternalSQLParser.g:9549:2: ( rule__FromTableJoin__JoinAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }
            // InternalSQLParser.g:9550:2: ( rule__FromTableJoin__JoinAssignment_0 )
            // InternalSQLParser.g:9550:3: rule__FromTableJoin__JoinAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__1"
    // InternalSQLParser.g:9558:1: rule__FromTableJoin__Group__1 : rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 ;
    public final void rule__FromTableJoin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9562:1: ( rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 )
            // InternalSQLParser.g:9563:2: rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2
            {
            pushFollow(FOLLOW_51);
            rule__FromTableJoin__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1"


    // $ANTLR start "rule__FromTableJoin__Group__1__Impl"
    // InternalSQLParser.g:9570:1: rule__FromTableJoin__Group__1__Impl : ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) ;
    public final void rule__FromTableJoin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9574:1: ( ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) )
            // InternalSQLParser.g:9575:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            {
            // InternalSQLParser.g:9575:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            // InternalSQLParser.g:9576:2: ( rule__FromTableJoin__OnTableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }
            // InternalSQLParser.g:9577:2: ( rule__FromTableJoin__OnTableAssignment_1 )
            // InternalSQLParser.g:9577:3: rule__FromTableJoin__OnTableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__OnTableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__2"
    // InternalSQLParser.g:9585:1: rule__FromTableJoin__Group__2 : rule__FromTableJoin__Group__2__Impl ;
    public final void rule__FromTableJoin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9589:1: ( rule__FromTableJoin__Group__2__Impl )
            // InternalSQLParser.g:9590:2: rule__FromTableJoin__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2"


    // $ANTLR start "rule__FromTableJoin__Group__2__Impl"
    // InternalSQLParser.g:9596:1: rule__FromTableJoin__Group__2__Impl : ( ( rule__FromTableJoin__Alternatives_2 ) ) ;
    public final void rule__FromTableJoin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9600:1: ( ( ( rule__FromTableJoin__Alternatives_2 ) ) )
            // InternalSQLParser.g:9601:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            {
            // InternalSQLParser.g:9601:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            // InternalSQLParser.g:9602:2: ( rule__FromTableJoin__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:9603:2: ( rule__FromTableJoin__Alternatives_2 )
            // InternalSQLParser.g:9603:3: rule__FromTableJoin__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0"
    // InternalSQLParser.g:9612:1: rule__FromTableJoin__Group_2_0__0 : rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 ;
    public final void rule__FromTableJoin__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9616:1: ( rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 )
            // InternalSQLParser.g:9617:2: rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1
            {
            pushFollow(FOLLOW_41);
            rule__FromTableJoin__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0__Impl"
    // InternalSQLParser.g:9624:1: rule__FromTableJoin__Group_2_0__0__Impl : ( ON ) ;
    public final void rule__FromTableJoin__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9628:1: ( ( ON ) )
            // InternalSQLParser.g:9629:1: ( ON )
            {
            // InternalSQLParser.g:9629:1: ( ON )
            // InternalSQLParser.g:9630:2: ON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }
            match(input,ON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1"
    // InternalSQLParser.g:9639:1: rule__FromTableJoin__Group_2_0__1 : rule__FromTableJoin__Group_2_0__1__Impl ;
    public final void rule__FromTableJoin__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9643:1: ( rule__FromTableJoin__Group_2_0__1__Impl )
            // InternalSQLParser.g:9644:2: rule__FromTableJoin__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1__Impl"
    // InternalSQLParser.g:9650:1: rule__FromTableJoin__Group_2_0__1__Impl : ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) ;
    public final void rule__FromTableJoin__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9654:1: ( ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) )
            // InternalSQLParser.g:9655:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            {
            // InternalSQLParser.g:9655:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            // InternalSQLParser.g:9656:2: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }
            // InternalSQLParser.g:9657:2: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            // InternalSQLParser.g:9657:3: rule__FromTableJoin__JoinExprAssignment_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinExprAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__0"
    // InternalSQLParser.g:9666:1: rule__JoinCondition__Group__0 : rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 ;
    public final void rule__JoinCondition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9670:1: ( rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 )
            // InternalSQLParser.g:9671:2: rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__JoinCondition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0"


    // $ANTLR start "rule__JoinCondition__Group__0__Impl"
    // InternalSQLParser.g:9678:1: rule__JoinCondition__Group__0__Impl : ( USING ) ;
    public final void rule__JoinCondition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9682:1: ( ( USING ) )
            // InternalSQLParser.g:9683:1: ( USING )
            {
            // InternalSQLParser.g:9683:1: ( USING )
            // InternalSQLParser.g:9684:2: USING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }
            match(input,USING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0__Impl"


    // $ANTLR start "rule__JoinCondition__Group__1"
    // InternalSQLParser.g:9693:1: rule__JoinCondition__Group__1 : rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 ;
    public final void rule__JoinCondition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9697:1: ( rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 )
            // InternalSQLParser.g:9698:2: rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2
            {
            pushFollow(FOLLOW_26);
            rule__JoinCondition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1"


    // $ANTLR start "rule__JoinCondition__Group__1__Impl"
    // InternalSQLParser.g:9705:1: rule__JoinCondition__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__JoinCondition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9709:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:9710:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:9710:1: ( LeftParenthesis )
            // InternalSQLParser.g:9711:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__2"
    // InternalSQLParser.g:9720:1: rule__JoinCondition__Group__2 : rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 ;
    public final void rule__JoinCondition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9724:1: ( rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 )
            // InternalSQLParser.g:9725:2: rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__JoinCondition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2"


    // $ANTLR start "rule__JoinCondition__Group__2__Impl"
    // InternalSQLParser.g:9732:1: rule__JoinCondition__Group__2__Impl : ( ( rule__JoinCondition__UseColsAssignment_2 ) ) ;
    public final void rule__JoinCondition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9736:1: ( ( ( rule__JoinCondition__UseColsAssignment_2 ) ) )
            // InternalSQLParser.g:9737:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            {
            // InternalSQLParser.g:9737:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            // InternalSQLParser.g:9738:2: ( rule__JoinCondition__UseColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }
            // InternalSQLParser.g:9739:2: ( rule__JoinCondition__UseColsAssignment_2 )
            // InternalSQLParser.g:9739:3: rule__JoinCondition__UseColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__UseColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2__Impl"


    // $ANTLR start "rule__JoinCondition__Group__3"
    // InternalSQLParser.g:9747:1: rule__JoinCondition__Group__3 : rule__JoinCondition__Group__3__Impl ;
    public final void rule__JoinCondition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9751:1: ( rule__JoinCondition__Group__3__Impl )
            // InternalSQLParser.g:9752:2: rule__JoinCondition__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3"


    // $ANTLR start "rule__JoinCondition__Group__3__Impl"
    // InternalSQLParser.g:9758:1: rule__JoinCondition__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__JoinCondition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9762:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:9763:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:9763:1: ( RightParenthesis )
            // InternalSQLParser.g:9764:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3__Impl"


    // $ANTLR start "rule__UsingCols__Group__0"
    // InternalSQLParser.g:9774:1: rule__UsingCols__Group__0 : rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 ;
    public final void rule__UsingCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9778:1: ( rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 )
            // InternalSQLParser.g:9779:2: rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__UsingCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0"


    // $ANTLR start "rule__UsingCols__Group__0__Impl"
    // InternalSQLParser.g:9786:1: rule__UsingCols__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9790:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:9791:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:9791:1: ( ruleDbObjectName )
            // InternalSQLParser.g:9792:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0__Impl"


    // $ANTLR start "rule__UsingCols__Group__1"
    // InternalSQLParser.g:9801:1: rule__UsingCols__Group__1 : rule__UsingCols__Group__1__Impl ;
    public final void rule__UsingCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9805:1: ( rule__UsingCols__Group__1__Impl )
            // InternalSQLParser.g:9806:2: rule__UsingCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1"


    // $ANTLR start "rule__UsingCols__Group__1__Impl"
    // InternalSQLParser.g:9812:1: rule__UsingCols__Group__1__Impl : ( ( rule__UsingCols__Group_1__0 )? ) ;
    public final void rule__UsingCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9816:1: ( ( ( rule__UsingCols__Group_1__0 )? ) )
            // InternalSQLParser.g:9817:1: ( ( rule__UsingCols__Group_1__0 )? )
            {
            // InternalSQLParser.g:9817:1: ( ( rule__UsingCols__Group_1__0 )? )
            // InternalSQLParser.g:9818:2: ( rule__UsingCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:9819:2: ( rule__UsingCols__Group_1__0 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==Comma) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSQLParser.g:9819:3: rule__UsingCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UsingCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__0"
    // InternalSQLParser.g:9828:1: rule__UsingCols__Group_1__0 : rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 ;
    public final void rule__UsingCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9832:1: ( rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 )
            // InternalSQLParser.g:9833:2: rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__UsingCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0"


    // $ANTLR start "rule__UsingCols__Group_1__0__Impl"
    // InternalSQLParser.g:9840:1: rule__UsingCols__Group_1__0__Impl : ( () ) ;
    public final void rule__UsingCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9844:1: ( ( () ) )
            // InternalSQLParser.g:9845:1: ( () )
            {
            // InternalSQLParser.g:9845:1: ( () )
            // InternalSQLParser.g:9846:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:9847:2: ()
            // InternalSQLParser.g:9847:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__1"
    // InternalSQLParser.g:9855:1: rule__UsingCols__Group_1__1 : rule__UsingCols__Group_1__1__Impl ;
    public final void rule__UsingCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9859:1: ( rule__UsingCols__Group_1__1__Impl )
            // InternalSQLParser.g:9860:2: rule__UsingCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1"


    // $ANTLR start "rule__UsingCols__Group_1__1__Impl"
    // InternalSQLParser.g:9866:1: rule__UsingCols__Group_1__1__Impl : ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) ;
    public final void rule__UsingCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9870:1: ( ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:9871:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:9871:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            // InternalSQLParser.g:9872:2: ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:9872:2: ( ( rule__UsingCols__Group_1_1__0 ) )
            // InternalSQLParser.g:9873:3: ( rule__UsingCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9874:3: ( rule__UsingCols__Group_1_1__0 )
            // InternalSQLParser.g:9874:4: rule__UsingCols__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__UsingCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:9877:2: ( ( rule__UsingCols__Group_1_1__0 )* )
            // InternalSQLParser.g:9878:3: ( rule__UsingCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:9879:3: ( rule__UsingCols__Group_1_1__0 )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==Comma) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalSQLParser.g:9879:4: rule__UsingCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__UsingCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__0"
    // InternalSQLParser.g:9889:1: rule__UsingCols__Group_1_1__0 : rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 ;
    public final void rule__UsingCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9893:1: ( rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 )
            // InternalSQLParser.g:9894:2: rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__UsingCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0"


    // $ANTLR start "rule__UsingCols__Group_1_1__0__Impl"
    // InternalSQLParser.g:9901:1: rule__UsingCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UsingCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9905:1: ( ( Comma ) )
            // InternalSQLParser.g:9906:1: ( Comma )
            {
            // InternalSQLParser.g:9906:1: ( Comma )
            // InternalSQLParser.g:9907:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__1"
    // InternalSQLParser.g:9916:1: rule__UsingCols__Group_1_1__1 : rule__UsingCols__Group_1_1__1__Impl ;
    public final void rule__UsingCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9920:1: ( rule__UsingCols__Group_1_1__1__Impl )
            // InternalSQLParser.g:9921:2: rule__UsingCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1"


    // $ANTLR start "rule__UsingCols__Group_1_1__1__Impl"
    // InternalSQLParser.g:9927:1: rule__UsingCols__Group_1_1__1__Impl : ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UsingCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9931:1: ( ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:9932:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:9932:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:9933:2: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:9934:2: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:9934:3: rule__UsingCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__0"
    // InternalSQLParser.g:9943:1: rule__TableOrAlias__Group__0 : rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 ;
    public final void rule__TableOrAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9947:1: ( rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 )
            // InternalSQLParser.g:9948:2: rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__TableOrAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0"


    // $ANTLR start "rule__TableOrAlias__Group__0__Impl"
    // InternalSQLParser.g:9955:1: rule__TableOrAlias__Group__0__Impl : ( ( rule__TableOrAlias__Alternatives_0 ) ) ;
    public final void rule__TableOrAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9959:1: ( ( ( rule__TableOrAlias__Alternatives_0 ) ) )
            // InternalSQLParser.g:9960:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            {
            // InternalSQLParser.g:9960:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            // InternalSQLParser.g:9961:2: ( rule__TableOrAlias__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:9962:2: ( rule__TableOrAlias__Alternatives_0 )
            // InternalSQLParser.g:9962:3: rule__TableOrAlias__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__1"
    // InternalSQLParser.g:9970:1: rule__TableOrAlias__Group__1 : rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 ;
    public final void rule__TableOrAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9974:1: ( rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 )
            // InternalSQLParser.g:9975:2: rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2
            {
            pushFollow(FOLLOW_52);
            rule__TableOrAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1"


    // $ANTLR start "rule__TableOrAlias__Group__1__Impl"
    // InternalSQLParser.g:9982:1: rule__TableOrAlias__Group__1__Impl : ( ( rule__TableOrAlias__Alternatives_1 )? ) ;
    public final void rule__TableOrAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:9986:1: ( ( ( rule__TableOrAlias__Alternatives_1 )? ) )
            // InternalSQLParser.g:9987:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            {
            // InternalSQLParser.g:9987:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            // InternalSQLParser.g:9988:2: ( rule__TableOrAlias__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:9989:2: ( rule__TableOrAlias__Alternatives_1 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==UNPIVOT||LA102_0==PIVOT) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSQLParser.g:9989:3: rule__TableOrAlias__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__2"
    // InternalSQLParser.g:9997:1: rule__TableOrAlias__Group__2 : rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 ;
    public final void rule__TableOrAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10001:1: ( rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 )
            // InternalSQLParser.g:10002:2: rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3
            {
            pushFollow(FOLLOW_52);
            rule__TableOrAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2"


    // $ANTLR start "rule__TableOrAlias__Group__2__Impl"
    // InternalSQLParser.g:10009:1: rule__TableOrAlias__Group__2__Impl : ( ( rule__TableOrAlias__AliasAssignment_2 )? ) ;
    public final void rule__TableOrAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10013:1: ( ( ( rule__TableOrAlias__AliasAssignment_2 )? ) )
            // InternalSQLParser.g:10014:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            {
            // InternalSQLParser.g:10014:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            // InternalSQLParser.g:10015:2: ( rule__TableOrAlias__AliasAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }
            // InternalSQLParser.g:10016:2: ( rule__TableOrAlias__AliasAssignment_2 )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==AS) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalSQLParser.g:10016:3: rule__TableOrAlias__AliasAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__AliasAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__3"
    // InternalSQLParser.g:10024:1: rule__TableOrAlias__Group__3 : rule__TableOrAlias__Group__3__Impl ;
    public final void rule__TableOrAlias__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10028:1: ( rule__TableOrAlias__Group__3__Impl )
            // InternalSQLParser.g:10029:2: rule__TableOrAlias__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3"


    // $ANTLR start "rule__TableOrAlias__Group__3__Impl"
    // InternalSQLParser.g:10035:1: rule__TableOrAlias__Group__3__Impl : ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) ;
    public final void rule__TableOrAlias__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10039:1: ( ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) )
            // InternalSQLParser.g:10040:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            {
            // InternalSQLParser.g:10040:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            // InternalSQLParser.g:10041:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }
            // InternalSQLParser.g:10042:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            int alt104=2;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalSQLParser.g:10042:3: rule__TableOrAlias__TblAliasAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TblAliasAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3__Impl"


    // $ANTLR start "rule__FromValues__Group__0"
    // InternalSQLParser.g:10051:1: rule__FromValues__Group__0 : rule__FromValues__Group__0__Impl rule__FromValues__Group__1 ;
    public final void rule__FromValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10055:1: ( rule__FromValues__Group__0__Impl rule__FromValues__Group__1 )
            // InternalSQLParser.g:10056:2: rule__FromValues__Group__0__Impl rule__FromValues__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__FromValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0"


    // $ANTLR start "rule__FromValues__Group__0__Impl"
    // InternalSQLParser.g:10063:1: rule__FromValues__Group__0__Impl : ( ( rule__FromValues__ValuesAssignment_0 ) ) ;
    public final void rule__FromValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10067:1: ( ( ( rule__FromValues__ValuesAssignment_0 ) ) )
            // InternalSQLParser.g:10068:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            {
            // InternalSQLParser.g:10068:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            // InternalSQLParser.g:10069:2: ( rule__FromValues__ValuesAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }
            // InternalSQLParser.g:10070:2: ( rule__FromValues__ValuesAssignment_0 )
            // InternalSQLParser.g:10070:3: rule__FromValues__ValuesAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__ValuesAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0__Impl"


    // $ANTLR start "rule__FromValues__Group__1"
    // InternalSQLParser.g:10078:1: rule__FromValues__Group__1 : rule__FromValues__Group__1__Impl ;
    public final void rule__FromValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10082:1: ( rule__FromValues__Group__1__Impl )
            // InternalSQLParser.g:10083:2: rule__FromValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1"


    // $ANTLR start "rule__FromValues__Group__1__Impl"
    // InternalSQLParser.g:10089:1: rule__FromValues__Group__1__Impl : ( ( rule__FromValues__CAssignment_1 )? ) ;
    public final void rule__FromValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10093:1: ( ( ( rule__FromValues__CAssignment_1 )? ) )
            // InternalSQLParser.g:10094:1: ( ( rule__FromValues__CAssignment_1 )? )
            {
            // InternalSQLParser.g:10094:1: ( ( rule__FromValues__CAssignment_1 )? )
            // InternalSQLParser.g:10095:2: ( rule__FromValues__CAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }
            // InternalSQLParser.g:10096:2: ( rule__FromValues__CAssignment_1 )?
            int alt105=2;
            alt105 = dfa105.predict(input);
            switch (alt105) {
                case 1 :
                    // InternalSQLParser.g:10096:3: rule__FromValues__CAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValues__CAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__0"
    // InternalSQLParser.g:10105:1: rule__FromValuesColumns__Group__0 : rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 ;
    public final void rule__FromValuesColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10109:1: ( rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 )
            // InternalSQLParser.g:10110:2: rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FromValuesColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0"


    // $ANTLR start "rule__FromValuesColumns__Group__0__Impl"
    // InternalSQLParser.g:10117:1: rule__FromValuesColumns__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FromValuesColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10121:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:10122:1: ( RULE_ID )
            {
            // InternalSQLParser.g:10122:1: ( RULE_ID )
            // InternalSQLParser.g:10123:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__1"
    // InternalSQLParser.g:10132:1: rule__FromValuesColumns__Group__1 : rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 ;
    public final void rule__FromValuesColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10136:1: ( rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 )
            // InternalSQLParser.g:10137:2: rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__FromValuesColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1"


    // $ANTLR start "rule__FromValuesColumns__Group__1__Impl"
    // InternalSQLParser.g:10144:1: rule__FromValuesColumns__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FromValuesColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10148:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10149:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10149:1: ( LeftParenthesis )
            // InternalSQLParser.g:10150:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__2"
    // InternalSQLParser.g:10159:1: rule__FromValuesColumns__Group__2 : rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 ;
    public final void rule__FromValuesColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10163:1: ( rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 )
            // InternalSQLParser.g:10164:2: rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__FromValuesColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2"


    // $ANTLR start "rule__FromValuesColumns__Group__2__Impl"
    // InternalSQLParser.g:10171:1: rule__FromValuesColumns__Group__2__Impl : ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) ;
    public final void rule__FromValuesColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10175:1: ( ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) )
            // InternalSQLParser.g:10176:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            {
            // InternalSQLParser.g:10176:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            // InternalSQLParser.g:10177:2: ( rule__FromValuesColumns__FvColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }
            // InternalSQLParser.g:10178:2: ( rule__FromValuesColumns__FvColsAssignment_2 )
            // InternalSQLParser.g:10178:3: rule__FromValuesColumns__FvColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__FvColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__3"
    // InternalSQLParser.g:10186:1: rule__FromValuesColumns__Group__3 : rule__FromValuesColumns__Group__3__Impl ;
    public final void rule__FromValuesColumns__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10190:1: ( rule__FromValuesColumns__Group__3__Impl )
            // InternalSQLParser.g:10191:2: rule__FromValuesColumns__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3"


    // $ANTLR start "rule__FromValuesColumns__Group__3__Impl"
    // InternalSQLParser.g:10197:1: rule__FromValuesColumns__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FromValuesColumns__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10201:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:10202:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:10202:1: ( RightParenthesis )
            // InternalSQLParser.g:10203:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0"
    // InternalSQLParser.g:10213:1: rule__FromValuesColumnNames__Group__0 : rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 ;
    public final void rule__FromValuesColumnNames__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10217:1: ( rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 )
            // InternalSQLParser.g:10218:2: rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__FromValuesColumnNames__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0__Impl"
    // InternalSQLParser.g:10225:1: rule__FromValuesColumnNames__Group__0__Impl : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10229:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:10230:1: ( ruleColumnName )
            {
            // InternalSQLParser.g:10230:1: ( ruleColumnName )
            // InternalSQLParser.g:10231:2: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1"
    // InternalSQLParser.g:10240:1: rule__FromValuesColumnNames__Group__1 : rule__FromValuesColumnNames__Group__1__Impl ;
    public final void rule__FromValuesColumnNames__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10244:1: ( rule__FromValuesColumnNames__Group__1__Impl )
            // InternalSQLParser.g:10245:2: rule__FromValuesColumnNames__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1__Impl"
    // InternalSQLParser.g:10251:1: rule__FromValuesColumnNames__Group__1__Impl : ( ( rule__FromValuesColumnNames__Group_1__0 )? ) ;
    public final void rule__FromValuesColumnNames__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10255:1: ( ( ( rule__FromValuesColumnNames__Group_1__0 )? ) )
            // InternalSQLParser.g:10256:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            {
            // InternalSQLParser.g:10256:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            // InternalSQLParser.g:10257:2: ( rule__FromValuesColumnNames__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10258:2: ( rule__FromValuesColumnNames__Group_1__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Comma) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSQLParser.g:10258:3: rule__FromValuesColumnNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValuesColumnNames__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0"
    // InternalSQLParser.g:10267:1: rule__FromValuesColumnNames__Group_1__0 : rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10271:1: ( rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 )
            // InternalSQLParser.g:10272:2: rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__FromValuesColumnNames__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0__Impl"
    // InternalSQLParser.g:10279:1: rule__FromValuesColumnNames__Group_1__0__Impl : ( () ) ;
    public final void rule__FromValuesColumnNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10283:1: ( ( () ) )
            // InternalSQLParser.g:10284:1: ( () )
            {
            // InternalSQLParser.g:10284:1: ( () )
            // InternalSQLParser.g:10285:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10286:2: ()
            // InternalSQLParser.g:10286:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1"
    // InternalSQLParser.g:10294:1: rule__FromValuesColumnNames__Group_1__1 : rule__FromValuesColumnNames__Group_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10298:1: ( rule__FromValuesColumnNames__Group_1__1__Impl )
            // InternalSQLParser.g:10299:2: rule__FromValuesColumnNames__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1__Impl"
    // InternalSQLParser.g:10305:1: rule__FromValuesColumnNames__Group_1__1__Impl : ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) ;
    public final void rule__FromValuesColumnNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10309:1: ( ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10310:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10310:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10311:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10311:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) )
            // InternalSQLParser.g:10312:3: ( rule__FromValuesColumnNames__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10313:3: ( rule__FromValuesColumnNames__Group_1_1__0 )
            // InternalSQLParser.g:10313:4: rule__FromValuesColumnNames__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__FromValuesColumnNames__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10316:2: ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            // InternalSQLParser.g:10317:3: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10318:3: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==Comma) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalSQLParser.g:10318:4: rule__FromValuesColumnNames__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__FromValuesColumnNames__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0"
    // InternalSQLParser.g:10328:1: rule__FromValuesColumnNames__Group_1_1__0 : rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10332:1: ( rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 )
            // InternalSQLParser.g:10333:2: rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1
            {
            pushFollow(FOLLOW_16);
            rule__FromValuesColumnNames__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0__Impl"
    // InternalSQLParser.g:10340:1: rule__FromValuesColumnNames__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10344:1: ( ( Comma ) )
            // InternalSQLParser.g:10345:1: ( Comma )
            {
            // InternalSQLParser.g:10345:1: ( Comma )
            // InternalSQLParser.g:10346:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1"
    // InternalSQLParser.g:10355:1: rule__FromValuesColumnNames__Group_1_1__1 : rule__FromValuesColumnNames__Group_1_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10359:1: ( rule__FromValuesColumnNames__Group_1_1__1__Impl )
            // InternalSQLParser.g:10360:2: rule__FromValuesColumnNames__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1__Impl"
    // InternalSQLParser.g:10366:1: rule__FromValuesColumnNames__Group_1_1__1__Impl : ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10370:1: ( ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10371:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10371:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10372:2: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10373:2: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10373:3: rule__FromValuesColumnNames__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1__Impl"


    // $ANTLR start "rule__Values__Group__0"
    // InternalSQLParser.g:10382:1: rule__Values__Group__0 : rule__Values__Group__0__Impl rule__Values__Group__1 ;
    public final void rule__Values__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10386:1: ( rule__Values__Group__0__Impl rule__Values__Group__1 )
            // InternalSQLParser.g:10387:2: rule__Values__Group__0__Impl rule__Values__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__Values__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0"


    // $ANTLR start "rule__Values__Group__0__Impl"
    // InternalSQLParser.g:10394:1: rule__Values__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Values__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10398:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10399:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10399:1: ( LeftParenthesis )
            // InternalSQLParser.g:10400:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0__Impl"


    // $ANTLR start "rule__Values__Group__1"
    // InternalSQLParser.g:10409:1: rule__Values__Group__1 : rule__Values__Group__1__Impl rule__Values__Group__2 ;
    public final void rule__Values__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10413:1: ( rule__Values__Group__1__Impl rule__Values__Group__2 )
            // InternalSQLParser.g:10414:2: rule__Values__Group__1__Impl rule__Values__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__Values__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1"


    // $ANTLR start "rule__Values__Group__1__Impl"
    // InternalSQLParser.g:10421:1: rule__Values__Group__1__Impl : ( VALUES ) ;
    public final void rule__Values__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10425:1: ( ( VALUES ) )
            // InternalSQLParser.g:10426:1: ( VALUES )
            {
            // InternalSQLParser.g:10426:1: ( VALUES )
            // InternalSQLParser.g:10427:2: VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }
            match(input,VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1__Impl"


    // $ANTLR start "rule__Values__Group__2"
    // InternalSQLParser.g:10436:1: rule__Values__Group__2 : rule__Values__Group__2__Impl rule__Values__Group__3 ;
    public final void rule__Values__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10440:1: ( rule__Values__Group__2__Impl rule__Values__Group__3 )
            // InternalSQLParser.g:10441:2: rule__Values__Group__2__Impl rule__Values__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__Values__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2"


    // $ANTLR start "rule__Values__Group__2__Impl"
    // InternalSQLParser.g:10448:1: rule__Values__Group__2__Impl : ( ( rule__Values__RowsAssignment_2 ) ) ;
    public final void rule__Values__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10452:1: ( ( ( rule__Values__RowsAssignment_2 ) ) )
            // InternalSQLParser.g:10453:1: ( ( rule__Values__RowsAssignment_2 ) )
            {
            // InternalSQLParser.g:10453:1: ( ( rule__Values__RowsAssignment_2 ) )
            // InternalSQLParser.g:10454:2: ( rule__Values__RowsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }
            // InternalSQLParser.g:10455:2: ( rule__Values__RowsAssignment_2 )
            // InternalSQLParser.g:10455:3: rule__Values__RowsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Values__RowsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2__Impl"


    // $ANTLR start "rule__Values__Group__3"
    // InternalSQLParser.g:10463:1: rule__Values__Group__3 : rule__Values__Group__3__Impl ;
    public final void rule__Values__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10467:1: ( rule__Values__Group__3__Impl )
            // InternalSQLParser.g:10468:2: rule__Values__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3"


    // $ANTLR start "rule__Values__Group__3__Impl"
    // InternalSQLParser.g:10474:1: rule__Values__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__Values__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10478:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:10479:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:10479:1: ( RightParenthesis )
            // InternalSQLParser.g:10480:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3__Impl"


    // $ANTLR start "rule__Rows__Group__0"
    // InternalSQLParser.g:10490:1: rule__Rows__Group__0 : rule__Rows__Group__0__Impl rule__Rows__Group__1 ;
    public final void rule__Rows__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10494:1: ( rule__Rows__Group__0__Impl rule__Rows__Group__1 )
            // InternalSQLParser.g:10495:2: rule__Rows__Group__0__Impl rule__Rows__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__Rows__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0"


    // $ANTLR start "rule__Rows__Group__0__Impl"
    // InternalSQLParser.g:10502:1: rule__Rows__Group__0__Impl : ( ruleRow ) ;
    public final void rule__Rows__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10506:1: ( ( ruleRow ) )
            // InternalSQLParser.g:10507:1: ( ruleRow )
            {
            // InternalSQLParser.g:10507:1: ( ruleRow )
            // InternalSQLParser.g:10508:2: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0__Impl"


    // $ANTLR start "rule__Rows__Group__1"
    // InternalSQLParser.g:10517:1: rule__Rows__Group__1 : rule__Rows__Group__1__Impl ;
    public final void rule__Rows__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10521:1: ( rule__Rows__Group__1__Impl )
            // InternalSQLParser.g:10522:2: rule__Rows__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1"


    // $ANTLR start "rule__Rows__Group__1__Impl"
    // InternalSQLParser.g:10528:1: rule__Rows__Group__1__Impl : ( ( rule__Rows__Group_1__0 )? ) ;
    public final void rule__Rows__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10532:1: ( ( ( rule__Rows__Group_1__0 )? ) )
            // InternalSQLParser.g:10533:1: ( ( rule__Rows__Group_1__0 )? )
            {
            // InternalSQLParser.g:10533:1: ( ( rule__Rows__Group_1__0 )? )
            // InternalSQLParser.g:10534:2: ( rule__Rows__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10535:2: ( rule__Rows__Group_1__0 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==Comma) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSQLParser.g:10535:3: rule__Rows__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Rows__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1__Impl"


    // $ANTLR start "rule__Rows__Group_1__0"
    // InternalSQLParser.g:10544:1: rule__Rows__Group_1__0 : rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 ;
    public final void rule__Rows__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10548:1: ( rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 )
            // InternalSQLParser.g:10549:2: rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__Rows__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0"


    // $ANTLR start "rule__Rows__Group_1__0__Impl"
    // InternalSQLParser.g:10556:1: rule__Rows__Group_1__0__Impl : ( () ) ;
    public final void rule__Rows__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10560:1: ( ( () ) )
            // InternalSQLParser.g:10561:1: ( () )
            {
            // InternalSQLParser.g:10561:1: ( () )
            // InternalSQLParser.g:10562:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10563:2: ()
            // InternalSQLParser.g:10563:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1__1"
    // InternalSQLParser.g:10571:1: rule__Rows__Group_1__1 : rule__Rows__Group_1__1__Impl ;
    public final void rule__Rows__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10575:1: ( rule__Rows__Group_1__1__Impl )
            // InternalSQLParser.g:10576:2: rule__Rows__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1"


    // $ANTLR start "rule__Rows__Group_1__1__Impl"
    // InternalSQLParser.g:10582:1: rule__Rows__Group_1__1__Impl : ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) ;
    public final void rule__Rows__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10586:1: ( ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10587:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10587:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10588:2: ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10588:2: ( ( rule__Rows__Group_1_1__0 ) )
            // InternalSQLParser.g:10589:3: ( rule__Rows__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10590:3: ( rule__Rows__Group_1_1__0 )
            // InternalSQLParser.g:10590:4: rule__Rows__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__Rows__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10593:2: ( ( rule__Rows__Group_1_1__0 )* )
            // InternalSQLParser.g:10594:3: ( rule__Rows__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10595:3: ( rule__Rows__Group_1_1__0 )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==Comma) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalSQLParser.g:10595:4: rule__Rows__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__Rows__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__0"
    // InternalSQLParser.g:10605:1: rule__Rows__Group_1_1__0 : rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 ;
    public final void rule__Rows__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10609:1: ( rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 )
            // InternalSQLParser.g:10610:2: rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1
            {
            pushFollow(FOLLOW_9);
            rule__Rows__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0"


    // $ANTLR start "rule__Rows__Group_1_1__0__Impl"
    // InternalSQLParser.g:10617:1: rule__Rows__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Rows__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10621:1: ( ( Comma ) )
            // InternalSQLParser.g:10622:1: ( Comma )
            {
            // InternalSQLParser.g:10622:1: ( Comma )
            // InternalSQLParser.g:10623:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__1"
    // InternalSQLParser.g:10632:1: rule__Rows__Group_1_1__1 : rule__Rows__Group_1_1__1__Impl ;
    public final void rule__Rows__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10636:1: ( rule__Rows__Group_1_1__1__Impl )
            // InternalSQLParser.g:10637:2: rule__Rows__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1"


    // $ANTLR start "rule__Rows__Group_1_1__1__Impl"
    // InternalSQLParser.g:10643:1: rule__Rows__Group_1_1__1__Impl : ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Rows__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10647:1: ( ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10648:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10648:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10649:2: ( rule__Rows__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10650:2: ( rule__Rows__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10650:3: rule__Rows__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Rows__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1__Impl"


    // $ANTLR start "rule__Row__Group__0"
    // InternalSQLParser.g:10659:1: rule__Row__Group__0 : rule__Row__Group__0__Impl rule__Row__Group__1 ;
    public final void rule__Row__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10663:1: ( rule__Row__Group__0__Impl rule__Row__Group__1 )
            // InternalSQLParser.g:10664:2: rule__Row__Group__0__Impl rule__Row__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__Row__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0"


    // $ANTLR start "rule__Row__Group__0__Impl"
    // InternalSQLParser.g:10671:1: rule__Row__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Row__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10675:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10676:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10676:1: ( LeftParenthesis )
            // InternalSQLParser.g:10677:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0__Impl"


    // $ANTLR start "rule__Row__Group__1"
    // InternalSQLParser.g:10686:1: rule__Row__Group__1 : rule__Row__Group__1__Impl rule__Row__Group__2 ;
    public final void rule__Row__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10690:1: ( rule__Row__Group__1__Impl rule__Row__Group__2 )
            // InternalSQLParser.g:10691:2: rule__Row__Group__1__Impl rule__Row__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__Row__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1"


    // $ANTLR start "rule__Row__Group__1__Impl"
    // InternalSQLParser.g:10698:1: rule__Row__Group__1__Impl : ( ( rule__Row__RowValuesAssignment_1 ) ) ;
    public final void rule__Row__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10702:1: ( ( ( rule__Row__RowValuesAssignment_1 ) ) )
            // InternalSQLParser.g:10703:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            {
            // InternalSQLParser.g:10703:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            // InternalSQLParser.g:10704:2: ( rule__Row__RowValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }
            // InternalSQLParser.g:10705:2: ( rule__Row__RowValuesAssignment_1 )
            // InternalSQLParser.g:10705:3: rule__Row__RowValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Row__RowValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1__Impl"


    // $ANTLR start "rule__Row__Group__2"
    // InternalSQLParser.g:10713:1: rule__Row__Group__2 : rule__Row__Group__2__Impl ;
    public final void rule__Row__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10717:1: ( rule__Row__Group__2__Impl )
            // InternalSQLParser.g:10718:2: rule__Row__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2"


    // $ANTLR start "rule__Row__Group__2__Impl"
    // InternalSQLParser.g:10724:1: rule__Row__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__Row__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10728:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:10729:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:10729:1: ( RightParenthesis )
            // InternalSQLParser.g:10730:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2__Impl"


    // $ANTLR start "rule__RowValues__Group__0"
    // InternalSQLParser.g:10740:1: rule__RowValues__Group__0 : rule__RowValues__Group__0__Impl rule__RowValues__Group__1 ;
    public final void rule__RowValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10744:1: ( rule__RowValues__Group__0__Impl rule__RowValues__Group__1 )
            // InternalSQLParser.g:10745:2: rule__RowValues__Group__0__Impl rule__RowValues__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__RowValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0"


    // $ANTLR start "rule__RowValues__Group__0__Impl"
    // InternalSQLParser.g:10752:1: rule__RowValues__Group__0__Impl : ( ruleRowValue ) ;
    public final void rule__RowValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10756:1: ( ( ruleRowValue ) )
            // InternalSQLParser.g:10757:1: ( ruleRowValue )
            {
            // InternalSQLParser.g:10757:1: ( ruleRowValue )
            // InternalSQLParser.g:10758:2: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0__Impl"


    // $ANTLR start "rule__RowValues__Group__1"
    // InternalSQLParser.g:10767:1: rule__RowValues__Group__1 : rule__RowValues__Group__1__Impl ;
    public final void rule__RowValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10771:1: ( rule__RowValues__Group__1__Impl )
            // InternalSQLParser.g:10772:2: rule__RowValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1"


    // $ANTLR start "rule__RowValues__Group__1__Impl"
    // InternalSQLParser.g:10778:1: rule__RowValues__Group__1__Impl : ( ( rule__RowValues__Group_1__0 )? ) ;
    public final void rule__RowValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10782:1: ( ( ( rule__RowValues__Group_1__0 )? ) )
            // InternalSQLParser.g:10783:1: ( ( rule__RowValues__Group_1__0 )? )
            {
            // InternalSQLParser.g:10783:1: ( ( rule__RowValues__Group_1__0 )? )
            // InternalSQLParser.g:10784:2: ( rule__RowValues__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:10785:2: ( rule__RowValues__Group_1__0 )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==Comma) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalSQLParser.g:10785:3: rule__RowValues__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValues__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1__0"
    // InternalSQLParser.g:10794:1: rule__RowValues__Group_1__0 : rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 ;
    public final void rule__RowValues__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10798:1: ( rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 )
            // InternalSQLParser.g:10799:2: rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__RowValues__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0"


    // $ANTLR start "rule__RowValues__Group_1__0__Impl"
    // InternalSQLParser.g:10806:1: rule__RowValues__Group_1__0__Impl : ( () ) ;
    public final void rule__RowValues__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10810:1: ( ( () ) )
            // InternalSQLParser.g:10811:1: ( () )
            {
            // InternalSQLParser.g:10811:1: ( () )
            // InternalSQLParser.g:10812:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:10813:2: ()
            // InternalSQLParser.g:10813:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1__1"
    // InternalSQLParser.g:10821:1: rule__RowValues__Group_1__1 : rule__RowValues__Group_1__1__Impl ;
    public final void rule__RowValues__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10825:1: ( rule__RowValues__Group_1__1__Impl )
            // InternalSQLParser.g:10826:2: rule__RowValues__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1"


    // $ANTLR start "rule__RowValues__Group_1__1__Impl"
    // InternalSQLParser.g:10832:1: rule__RowValues__Group_1__1__Impl : ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) ;
    public final void rule__RowValues__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10836:1: ( ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:10837:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:10837:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            // InternalSQLParser.g:10838:2: ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:10838:2: ( ( rule__RowValues__Group_1_1__0 ) )
            // InternalSQLParser.g:10839:3: ( rule__RowValues__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10840:3: ( rule__RowValues__Group_1_1__0 )
            // InternalSQLParser.g:10840:4: rule__RowValues__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__RowValues__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:10843:2: ( ( rule__RowValues__Group_1_1__0 )* )
            // InternalSQLParser.g:10844:3: ( rule__RowValues__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:10845:3: ( rule__RowValues__Group_1_1__0 )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==Comma) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalSQLParser.g:10845:4: rule__RowValues__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__RowValues__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__0"
    // InternalSQLParser.g:10855:1: rule__RowValues__Group_1_1__0 : rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 ;
    public final void rule__RowValues__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10859:1: ( rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 )
            // InternalSQLParser.g:10860:2: rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1
            {
            pushFollow(FOLLOW_54);
            rule__RowValues__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0"


    // $ANTLR start "rule__RowValues__Group_1_1__0__Impl"
    // InternalSQLParser.g:10867:1: rule__RowValues__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__RowValues__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10871:1: ( ( Comma ) )
            // InternalSQLParser.g:10872:1: ( Comma )
            {
            // InternalSQLParser.g:10872:1: ( Comma )
            // InternalSQLParser.g:10873:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__1"
    // InternalSQLParser.g:10882:1: rule__RowValues__Group_1_1__1 : rule__RowValues__Group_1_1__1__Impl ;
    public final void rule__RowValues__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10886:1: ( rule__RowValues__Group_1_1__1__Impl )
            // InternalSQLParser.g:10887:2: rule__RowValues__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1"


    // $ANTLR start "rule__RowValues__Group_1_1__1__Impl"
    // InternalSQLParser.g:10893:1: rule__RowValues__Group_1_1__1__Impl : ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__RowValues__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10897:1: ( ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:10898:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:10898:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:10899:2: ( rule__RowValues__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:10900:2: ( rule__RowValues__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:10900:3: rule__RowValues__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__0"
    // InternalSQLParser.g:10909:1: rule__PivotTable__Group__0 : rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 ;
    public final void rule__PivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10913:1: ( rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 )
            // InternalSQLParser.g:10914:2: rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__PivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0"


    // $ANTLR start "rule__PivotTable__Group__0__Impl"
    // InternalSQLParser.g:10921:1: rule__PivotTable__Group__0__Impl : ( PIVOT ) ;
    public final void rule__PivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10925:1: ( ( PIVOT ) )
            // InternalSQLParser.g:10926:1: ( PIVOT )
            {
            // InternalSQLParser.g:10926:1: ( PIVOT )
            // InternalSQLParser.g:10927:2: PIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }
            match(input,PIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0__Impl"


    // $ANTLR start "rule__PivotTable__Group__1"
    // InternalSQLParser.g:10936:1: rule__PivotTable__Group__1 : rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 ;
    public final void rule__PivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10940:1: ( rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 )
            // InternalSQLParser.g:10941:2: rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__PivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1"


    // $ANTLR start "rule__PivotTable__Group__1__Impl"
    // InternalSQLParser.g:10948:1: rule__PivotTable__Group__1__Impl : ( ( XML )? ) ;
    public final void rule__PivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10952:1: ( ( ( XML )? ) )
            // InternalSQLParser.g:10953:1: ( ( XML )? )
            {
            // InternalSQLParser.g:10953:1: ( ( XML )? )
            // InternalSQLParser.g:10954:2: ( XML )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }
            // InternalSQLParser.g:10955:2: ( XML )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==XML) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSQLParser.g:10955:3: XML
                    {
                    match(input,XML,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__2"
    // InternalSQLParser.g:10963:1: rule__PivotTable__Group__2 : rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 ;
    public final void rule__PivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10967:1: ( rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 )
            // InternalSQLParser.g:10968:2: rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__PivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2"


    // $ANTLR start "rule__PivotTable__Group__2__Impl"
    // InternalSQLParser.g:10975:1: rule__PivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10979:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:10980:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:10980:1: ( LeftParenthesis )
            // InternalSQLParser.g:10981:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2__Impl"


    // $ANTLR start "rule__PivotTable__Group__3"
    // InternalSQLParser.g:10990:1: rule__PivotTable__Group__3 : rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 ;
    public final void rule__PivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:10994:1: ( rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 )
            // InternalSQLParser.g:10995:2: rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4
            {
            pushFollow(FOLLOW_56);
            rule__PivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3"


    // $ANTLR start "rule__PivotTable__Group__3__Impl"
    // InternalSQLParser.g:11002:1: rule__PivotTable__Group__3__Impl : ( ( rule__PivotTable__PfunAssignment_3 ) ) ;
    public final void rule__PivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11006:1: ( ( ( rule__PivotTable__PfunAssignment_3 ) ) )
            // InternalSQLParser.g:11007:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            {
            // InternalSQLParser.g:11007:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            // InternalSQLParser.g:11008:2: ( rule__PivotTable__PfunAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }
            // InternalSQLParser.g:11009:2: ( rule__PivotTable__PfunAssignment_3 )
            // InternalSQLParser.g:11009:3: rule__PivotTable__PfunAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PfunAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3__Impl"


    // $ANTLR start "rule__PivotTable__Group__4"
    // InternalSQLParser.g:11017:1: rule__PivotTable__Group__4 : rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 ;
    public final void rule__PivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11021:1: ( rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 )
            // InternalSQLParser.g:11022:2: rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5
            {
            pushFollow(FOLLOW_57);
            rule__PivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4"


    // $ANTLR start "rule__PivotTable__Group__4__Impl"
    // InternalSQLParser.g:11029:1: rule__PivotTable__Group__4__Impl : ( ( rule__PivotTable__PforAssignment_4 ) ) ;
    public final void rule__PivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11033:1: ( ( ( rule__PivotTable__PforAssignment_4 ) ) )
            // InternalSQLParser.g:11034:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            {
            // InternalSQLParser.g:11034:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            // InternalSQLParser.g:11035:2: ( rule__PivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSQLParser.g:11036:2: ( rule__PivotTable__PforAssignment_4 )
            // InternalSQLParser.g:11036:3: rule__PivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4__Impl"


    // $ANTLR start "rule__PivotTable__Group__5"
    // InternalSQLParser.g:11044:1: rule__PivotTable__Group__5 : rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 ;
    public final void rule__PivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11048:1: ( rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 )
            // InternalSQLParser.g:11049:2: rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6
            {
            pushFollow(FOLLOW_11);
            rule__PivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5"


    // $ANTLR start "rule__PivotTable__Group__5__Impl"
    // InternalSQLParser.g:11056:1: rule__PivotTable__Group__5__Impl : ( ( rule__PivotTable__PinAssignment_5 ) ) ;
    public final void rule__PivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11060:1: ( ( ( rule__PivotTable__PinAssignment_5 ) ) )
            // InternalSQLParser.g:11061:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            {
            // InternalSQLParser.g:11061:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            // InternalSQLParser.g:11062:2: ( rule__PivotTable__PinAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }
            // InternalSQLParser.g:11063:2: ( rule__PivotTable__PinAssignment_5 )
            // InternalSQLParser.g:11063:3: rule__PivotTable__PinAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PinAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5__Impl"


    // $ANTLR start "rule__PivotTable__Group__6"
    // InternalSQLParser.g:11071:1: rule__PivotTable__Group__6 : rule__PivotTable__Group__6__Impl ;
    public final void rule__PivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11075:1: ( rule__PivotTable__Group__6__Impl )
            // InternalSQLParser.g:11076:2: rule__PivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6"


    // $ANTLR start "rule__PivotTable__Group__6__Impl"
    // InternalSQLParser.g:11082:1: rule__PivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__PivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11086:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11087:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11087:1: ( RightParenthesis )
            // InternalSQLParser.g:11088:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6__Impl"


    // $ANTLR start "rule__PivotInClause__Group__0"
    // InternalSQLParser.g:11098:1: rule__PivotInClause__Group__0 : rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 ;
    public final void rule__PivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11102:1: ( rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 )
            // InternalSQLParser.g:11103:2: rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__PivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0"


    // $ANTLR start "rule__PivotInClause__Group__0__Impl"
    // InternalSQLParser.g:11110:1: rule__PivotInClause__Group__0__Impl : ( IN ) ;
    public final void rule__PivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11114:1: ( ( IN ) )
            // InternalSQLParser.g:11115:1: ( IN )
            {
            // InternalSQLParser.g:11115:1: ( IN )
            // InternalSQLParser.g:11116:2: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0__Impl"


    // $ANTLR start "rule__PivotInClause__Group__1"
    // InternalSQLParser.g:11125:1: rule__PivotInClause__Group__1 : rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 ;
    public final void rule__PivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11129:1: ( rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 )
            // InternalSQLParser.g:11130:2: rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2
            {
            pushFollow(FOLLOW_58);
            rule__PivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1"


    // $ANTLR start "rule__PivotInClause__Group__1__Impl"
    // InternalSQLParser.g:11137:1: rule__PivotInClause__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11141:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:11142:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:11142:1: ( LeftParenthesis )
            // InternalSQLParser.g:11143:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1__Impl"


    // $ANTLR start "rule__PivotInClause__Group__2"
    // InternalSQLParser.g:11152:1: rule__PivotInClause__Group__2 : rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 ;
    public final void rule__PivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11156:1: ( rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 )
            // InternalSQLParser.g:11157:2: rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__PivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2"


    // $ANTLR start "rule__PivotInClause__Group__2__Impl"
    // InternalSQLParser.g:11164:1: rule__PivotInClause__Group__2__Impl : ( ( rule__PivotInClause__Alternatives_2 ) ) ;
    public final void rule__PivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11168:1: ( ( ( rule__PivotInClause__Alternatives_2 ) ) )
            // InternalSQLParser.g:11169:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            {
            // InternalSQLParser.g:11169:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            // InternalSQLParser.g:11170:2: ( rule__PivotInClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:11171:2: ( rule__PivotInClause__Alternatives_2 )
            // InternalSQLParser.g:11171:3: rule__PivotInClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2__Impl"


    // $ANTLR start "rule__PivotInClause__Group__3"
    // InternalSQLParser.g:11179:1: rule__PivotInClause__Group__3 : rule__PivotInClause__Group__3__Impl ;
    public final void rule__PivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11183:1: ( rule__PivotInClause__Group__3__Impl )
            // InternalSQLParser.g:11184:2: rule__PivotInClause__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3"


    // $ANTLR start "rule__PivotInClause__Group__3__Impl"
    // InternalSQLParser.g:11190:1: rule__PivotInClause__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__PivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11194:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11195:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11195:1: ( RightParenthesis )
            // InternalSQLParser.g:11196:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__0"
    // InternalSQLParser.g:11206:1: rule__PivotInClauseAny__Group__0 : rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 ;
    public final void rule__PivotInClauseAny__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11210:1: ( rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 )
            // InternalSQLParser.g:11211:2: rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__PivotInClauseAny__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0"


    // $ANTLR start "rule__PivotInClauseAny__Group__0__Impl"
    // InternalSQLParser.g:11218:1: rule__PivotInClauseAny__Group__0__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11222:1: ( ( ANY ) )
            // InternalSQLParser.g:11223:1: ( ANY )
            {
            // InternalSQLParser.g:11223:1: ( ANY )
            // InternalSQLParser.g:11224:2: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__1"
    // InternalSQLParser.g:11233:1: rule__PivotInClauseAny__Group__1 : rule__PivotInClauseAny__Group__1__Impl ;
    public final void rule__PivotInClauseAny__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11237:1: ( rule__PivotInClauseAny__Group__1__Impl )
            // InternalSQLParser.g:11238:2: rule__PivotInClauseAny__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1"


    // $ANTLR start "rule__PivotInClauseAny__Group__1__Impl"
    // InternalSQLParser.g:11244:1: rule__PivotInClauseAny__Group__1__Impl : ( ( rule__PivotInClauseAny__Group_1__0 )* ) ;
    public final void rule__PivotInClauseAny__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11248:1: ( ( ( rule__PivotInClauseAny__Group_1__0 )* ) )
            // InternalSQLParser.g:11249:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            {
            // InternalSQLParser.g:11249:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            // InternalSQLParser.g:11250:2: ( rule__PivotInClauseAny__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11251:2: ( rule__PivotInClauseAny__Group_1__0 )*
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==Comma) ) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    // InternalSQLParser.g:11251:3: rule__PivotInClauseAny__Group_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__PivotInClauseAny__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0"
    // InternalSQLParser.g:11260:1: rule__PivotInClauseAny__Group_1__0 : rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 ;
    public final void rule__PivotInClauseAny__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11264:1: ( rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 )
            // InternalSQLParser.g:11265:2: rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1
            {
            pushFollow(FOLLOW_59);
            rule__PivotInClauseAny__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0__Impl"
    // InternalSQLParser.g:11272:1: rule__PivotInClauseAny__Group_1__0__Impl : ( Comma ) ;
    public final void rule__PivotInClauseAny__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11276:1: ( ( Comma ) )
            // InternalSQLParser.g:11277:1: ( Comma )
            {
            // InternalSQLParser.g:11277:1: ( Comma )
            // InternalSQLParser.g:11278:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1"
    // InternalSQLParser.g:11287:1: rule__PivotInClauseAny__Group_1__1 : rule__PivotInClauseAny__Group_1__1__Impl ;
    public final void rule__PivotInClauseAny__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11291:1: ( rule__PivotInClauseAny__Group_1__1__Impl )
            // InternalSQLParser.g:11292:2: rule__PivotInClauseAny__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1__Impl"
    // InternalSQLParser.g:11298:1: rule__PivotInClauseAny__Group_1__1__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11302:1: ( ( ANY ) )
            // InternalSQLParser.g:11303:1: ( ANY )
            {
            // InternalSQLParser.g:11303:1: ( ANY )
            // InternalSQLParser.g:11304:2: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__0"
    // InternalSQLParser.g:11314:1: rule__UnpivotTable__Group__0 : rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 ;
    public final void rule__UnpivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11318:1: ( rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 )
            // InternalSQLParser.g:11319:2: rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__UnpivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0"


    // $ANTLR start "rule__UnpivotTable__Group__0__Impl"
    // InternalSQLParser.g:11326:1: rule__UnpivotTable__Group__0__Impl : ( UNPIVOT ) ;
    public final void rule__UnpivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11330:1: ( ( UNPIVOT ) )
            // InternalSQLParser.g:11331:1: ( UNPIVOT )
            {
            // InternalSQLParser.g:11331:1: ( UNPIVOT )
            // InternalSQLParser.g:11332:2: UNPIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }
            match(input,UNPIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__1"
    // InternalSQLParser.g:11341:1: rule__UnpivotTable__Group__1 : rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 ;
    public final void rule__UnpivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11345:1: ( rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 )
            // InternalSQLParser.g:11346:2: rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2
            {
            pushFollow(FOLLOW_60);
            rule__UnpivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1"


    // $ANTLR start "rule__UnpivotTable__Group__1__Impl"
    // InternalSQLParser.g:11353:1: rule__UnpivotTable__Group__1__Impl : ( ( rule__UnpivotTable__Group_1__0 )? ) ;
    public final void rule__UnpivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11357:1: ( ( ( rule__UnpivotTable__Group_1__0 )? ) )
            // InternalSQLParser.g:11358:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            {
            // InternalSQLParser.g:11358:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            // InternalSQLParser.g:11359:2: ( rule__UnpivotTable__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11360:2: ( rule__UnpivotTable__Group_1__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==EXCLUDE||LA114_0==INCLUDE) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSQLParser.g:11360:3: rule__UnpivotTable__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotTable__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__2"
    // InternalSQLParser.g:11368:1: rule__UnpivotTable__Group__2 : rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 ;
    public final void rule__UnpivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11372:1: ( rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 )
            // InternalSQLParser.g:11373:2: rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2"


    // $ANTLR start "rule__UnpivotTable__Group__2__Impl"
    // InternalSQLParser.g:11380:1: rule__UnpivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11384:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:11385:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:11385:1: ( LeftParenthesis )
            // InternalSQLParser.g:11386:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__3"
    // InternalSQLParser.g:11395:1: rule__UnpivotTable__Group__3 : rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 ;
    public final void rule__UnpivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11399:1: ( rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 )
            // InternalSQLParser.g:11400:2: rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4
            {
            pushFollow(FOLLOW_56);
            rule__UnpivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3"


    // $ANTLR start "rule__UnpivotTable__Group__3__Impl"
    // InternalSQLParser.g:11407:1: rule__UnpivotTable__Group__3__Impl : ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) ;
    public final void rule__UnpivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11411:1: ( ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) )
            // InternalSQLParser.g:11412:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            {
            // InternalSQLParser.g:11412:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            // InternalSQLParser.g:11413:2: ( rule__UnpivotTable__PcolsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }
            // InternalSQLParser.g:11414:2: ( rule__UnpivotTable__PcolsAssignment_3 )
            // InternalSQLParser.g:11414:3: rule__UnpivotTable__PcolsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PcolsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__4"
    // InternalSQLParser.g:11422:1: rule__UnpivotTable__Group__4 : rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 ;
    public final void rule__UnpivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11426:1: ( rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 )
            // InternalSQLParser.g:11427:2: rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5
            {
            pushFollow(FOLLOW_57);
            rule__UnpivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4"


    // $ANTLR start "rule__UnpivotTable__Group__4__Impl"
    // InternalSQLParser.g:11434:1: rule__UnpivotTable__Group__4__Impl : ( ( rule__UnpivotTable__PforAssignment_4 ) ) ;
    public final void rule__UnpivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11438:1: ( ( ( rule__UnpivotTable__PforAssignment_4 ) ) )
            // InternalSQLParser.g:11439:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            {
            // InternalSQLParser.g:11439:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            // InternalSQLParser.g:11440:2: ( rule__UnpivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSQLParser.g:11441:2: ( rule__UnpivotTable__PforAssignment_4 )
            // InternalSQLParser.g:11441:3: rule__UnpivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__5"
    // InternalSQLParser.g:11449:1: rule__UnpivotTable__Group__5 : rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 ;
    public final void rule__UnpivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11453:1: ( rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 )
            // InternalSQLParser.g:11454:2: rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6
            {
            pushFollow(FOLLOW_11);
            rule__UnpivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5"


    // $ANTLR start "rule__UnpivotTable__Group__5__Impl"
    // InternalSQLParser.g:11461:1: rule__UnpivotTable__Group__5__Impl : ( ( rule__UnpivotTable__InopAssignment_5 ) ) ;
    public final void rule__UnpivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11465:1: ( ( ( rule__UnpivotTable__InopAssignment_5 ) ) )
            // InternalSQLParser.g:11466:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            {
            // InternalSQLParser.g:11466:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            // InternalSQLParser.g:11467:2: ( rule__UnpivotTable__InopAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }
            // InternalSQLParser.g:11468:2: ( rule__UnpivotTable__InopAssignment_5 )
            // InternalSQLParser.g:11468:3: rule__UnpivotTable__InopAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__InopAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__6"
    // InternalSQLParser.g:11476:1: rule__UnpivotTable__Group__6 : rule__UnpivotTable__Group__6__Impl ;
    public final void rule__UnpivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11480:1: ( rule__UnpivotTable__Group__6__Impl )
            // InternalSQLParser.g:11481:2: rule__UnpivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6"


    // $ANTLR start "rule__UnpivotTable__Group__6__Impl"
    // InternalSQLParser.g:11487:1: rule__UnpivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11491:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11492:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11492:1: ( RightParenthesis )
            // InternalSQLParser.g:11493:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__0"
    // InternalSQLParser.g:11503:1: rule__UnpivotTable__Group_1__0 : rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 ;
    public final void rule__UnpivotTable__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11507:1: ( rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 )
            // InternalSQLParser.g:11508:2: rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1
            {
            pushFollow(FOLLOW_61);
            rule__UnpivotTable__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0"


    // $ANTLR start "rule__UnpivotTable__Group_1__0__Impl"
    // InternalSQLParser.g:11515:1: rule__UnpivotTable__Group_1__0__Impl : ( ( rule__UnpivotTable__Alternatives_1_0 ) ) ;
    public final void rule__UnpivotTable__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11519:1: ( ( ( rule__UnpivotTable__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:11520:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:11520:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            // InternalSQLParser.g:11521:2: ( rule__UnpivotTable__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:11522:2: ( rule__UnpivotTable__Alternatives_1_0 )
            // InternalSQLParser.g:11522:3: rule__UnpivotTable__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__1"
    // InternalSQLParser.g:11530:1: rule__UnpivotTable__Group_1__1 : rule__UnpivotTable__Group_1__1__Impl ;
    public final void rule__UnpivotTable__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11534:1: ( rule__UnpivotTable__Group_1__1__Impl )
            // InternalSQLParser.g:11535:2: rule__UnpivotTable__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1"


    // $ANTLR start "rule__UnpivotTable__Group_1__1__Impl"
    // InternalSQLParser.g:11541:1: rule__UnpivotTable__Group_1__1__Impl : ( NULLS ) ;
    public final void rule__UnpivotTable__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11545:1: ( ( NULLS ) )
            // InternalSQLParser.g:11546:1: ( NULLS )
            {
            // InternalSQLParser.g:11546:1: ( NULLS )
            // InternalSQLParser.g:11547:2: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__0"
    // InternalSQLParser.g:11557:1: rule__UnpivotInClause__Group__0 : rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 ;
    public final void rule__UnpivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11561:1: ( rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 )
            // InternalSQLParser.g:11562:2: rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__UnpivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0"


    // $ANTLR start "rule__UnpivotInClause__Group__0__Impl"
    // InternalSQLParser.g:11569:1: rule__UnpivotInClause__Group__0__Impl : ( () ) ;
    public final void rule__UnpivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11573:1: ( ( () ) )
            // InternalSQLParser.g:11574:1: ( () )
            {
            // InternalSQLParser.g:11574:1: ( () )
            // InternalSQLParser.g:11575:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }
            // InternalSQLParser.g:11576:2: ()
            // InternalSQLParser.g:11576:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__1"
    // InternalSQLParser.g:11584:1: rule__UnpivotInClause__Group__1 : rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 ;
    public final void rule__UnpivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11588:1: ( rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 )
            // InternalSQLParser.g:11589:2: rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__UnpivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1"


    // $ANTLR start "rule__UnpivotInClause__Group__1__Impl"
    // InternalSQLParser.g:11596:1: rule__UnpivotInClause__Group__1__Impl : ( ( rule__UnpivotInClause__OpAssignment_1 ) ) ;
    public final void rule__UnpivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11600:1: ( ( ( rule__UnpivotInClause__OpAssignment_1 ) ) )
            // InternalSQLParser.g:11601:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:11601:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            // InternalSQLParser.g:11602:2: ( rule__UnpivotInClause__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:11603:2: ( rule__UnpivotInClause__OpAssignment_1 )
            // InternalSQLParser.g:11603:3: rule__UnpivotInClause__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__2"
    // InternalSQLParser.g:11611:1: rule__UnpivotInClause__Group__2 : rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 ;
    public final void rule__UnpivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11615:1: ( rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 )
            // InternalSQLParser.g:11616:2: rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2"


    // $ANTLR start "rule__UnpivotInClause__Group__2__Impl"
    // InternalSQLParser.g:11623:1: rule__UnpivotInClause__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11627:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:11628:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:11628:1: ( LeftParenthesis )
            // InternalSQLParser.g:11629:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__3"
    // InternalSQLParser.g:11638:1: rule__UnpivotInClause__Group__3 : rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 ;
    public final void rule__UnpivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11642:1: ( rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 )
            // InternalSQLParser.g:11643:2: rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__UnpivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3"


    // $ANTLR start "rule__UnpivotInClause__Group__3__Impl"
    // InternalSQLParser.g:11650:1: rule__UnpivotInClause__Group__3__Impl : ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) ;
    public final void rule__UnpivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11654:1: ( ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) )
            // InternalSQLParser.g:11655:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            {
            // InternalSQLParser.g:11655:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            // InternalSQLParser.g:11656:2: ( rule__UnpivotInClause__ArgsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }
            // InternalSQLParser.g:11657:2: ( rule__UnpivotInClause__ArgsAssignment_3 )
            // InternalSQLParser.g:11657:3: rule__UnpivotInClause__ArgsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__ArgsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__4"
    // InternalSQLParser.g:11665:1: rule__UnpivotInClause__Group__4 : rule__UnpivotInClause__Group__4__Impl ;
    public final void rule__UnpivotInClause__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11669:1: ( rule__UnpivotInClause__Group__4__Impl )
            // InternalSQLParser.g:11670:2: rule__UnpivotInClause__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4"


    // $ANTLR start "rule__UnpivotInClause__Group__4__Impl"
    // InternalSQLParser.g:11676:1: rule__UnpivotInClause__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotInClause__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11680:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:11681:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:11681:1: ( RightParenthesis )
            // InternalSQLParser.g:11682:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0"
    // InternalSQLParser.g:11692:1: rule__UnpivotInClauseArgs__Group__0 : rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 ;
    public final void rule__UnpivotInClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11696:1: ( rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 )
            // InternalSQLParser.g:11697:2: rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__UnpivotInClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0__Impl"
    // InternalSQLParser.g:11704:1: rule__UnpivotInClauseArgs__Group__0__Impl : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11708:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSQLParser.g:11709:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSQLParser.g:11709:1: ( ruleUnpivotInClauseArg )
            // InternalSQLParser.g:11710:2: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1"
    // InternalSQLParser.g:11719:1: rule__UnpivotInClauseArgs__Group__1 : rule__UnpivotInClauseArgs__Group__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11723:1: ( rule__UnpivotInClauseArgs__Group__1__Impl )
            // InternalSQLParser.g:11724:2: rule__UnpivotInClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1__Impl"
    // InternalSQLParser.g:11730:1: rule__UnpivotInClauseArgs__Group__1__Impl : ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11734:1: ( ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:11735:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:11735:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            // InternalSQLParser.g:11736:2: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11737:2: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==Comma) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSQLParser.g:11737:3: rule__UnpivotInClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0"
    // InternalSQLParser.g:11746:1: rule__UnpivotInClauseArgs__Group_1__0 : rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11750:1: ( rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 )
            // InternalSQLParser.g:11751:2: rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__UnpivotInClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0__Impl"
    // InternalSQLParser.g:11758:1: rule__UnpivotInClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11762:1: ( ( () ) )
            // InternalSQLParser.g:11763:1: ( () )
            {
            // InternalSQLParser.g:11763:1: ( () )
            // InternalSQLParser.g:11764:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:11765:2: ()
            // InternalSQLParser.g:11765:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1"
    // InternalSQLParser.g:11773:1: rule__UnpivotInClauseArgs__Group_1__1 : rule__UnpivotInClauseArgs__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11777:1: ( rule__UnpivotInClauseArgs__Group_1__1__Impl )
            // InternalSQLParser.g:11778:2: rule__UnpivotInClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1__Impl"
    // InternalSQLParser.g:11784:1: rule__UnpivotInClauseArgs__Group_1__1__Impl : ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11788:1: ( ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:11789:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:11789:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:11790:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:11790:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:11791:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11792:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            // InternalSQLParser.g:11792:4: rule__UnpivotInClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__UnpivotInClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:11795:2: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:11796:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:11797:3: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==Comma) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalSQLParser.g:11797:4: rule__UnpivotInClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__UnpivotInClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0"
    // InternalSQLParser.g:11807:1: rule__UnpivotInClauseArgs__Group_1_1__0 : rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11811:1: ( rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 )
            // InternalSQLParser.g:11812:2: rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotInClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:11819:1: rule__UnpivotInClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11823:1: ( ( Comma ) )
            // InternalSQLParser.g:11824:1: ( Comma )
            {
            // InternalSQLParser.g:11824:1: ( Comma )
            // InternalSQLParser.g:11825:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1"
    // InternalSQLParser.g:11834:1: rule__UnpivotInClauseArgs__Group_1_1__1 : rule__UnpivotInClauseArgs__Group_1_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11838:1: ( rule__UnpivotInClauseArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:11839:2: rule__UnpivotInClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:11845:1: rule__UnpivotInClauseArgs__Group_1_1__1__Impl : ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11849:1: ( ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:11850:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:11850:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:11851:2: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:11852:2: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:11852:3: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0"
    // InternalSQLParser.g:11861:1: rule__UnpivotInClauseArg__Group__0 : rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 ;
    public final void rule__UnpivotInClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11865:1: ( rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 )
            // InternalSQLParser.g:11866:2: rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__UnpivotInClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0__Impl"
    // InternalSQLParser.g:11873:1: rule__UnpivotInClauseArg__Group__0__Impl : ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) ;
    public final void rule__UnpivotInClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11877:1: ( ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) )
            // InternalSQLParser.g:11878:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            {
            // InternalSQLParser.g:11878:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            // InternalSQLParser.g:11879:2: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }
            // InternalSQLParser.g:11880:2: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            // InternalSQLParser.g:11880:3: rule__UnpivotInClauseArg__PcolsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__PcolsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1"
    // InternalSQLParser.g:11888:1: rule__UnpivotInClauseArg__Group__1 : rule__UnpivotInClauseArg__Group__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11892:1: ( rule__UnpivotInClauseArg__Group__1__Impl )
            // InternalSQLParser.g:11893:2: rule__UnpivotInClauseArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1__Impl"
    // InternalSQLParser.g:11899:1: rule__UnpivotInClauseArg__Group__1__Impl : ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11903:1: ( ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) )
            // InternalSQLParser.g:11904:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            {
            // InternalSQLParser.g:11904:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            // InternalSQLParser.g:11905:2: ( rule__UnpivotInClauseArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:11906:2: ( rule__UnpivotInClauseArg__Group_1__0 )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==AS) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSQLParser.g:11906:3: rule__UnpivotInClauseArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0"
    // InternalSQLParser.g:11915:1: rule__UnpivotInClauseArg__Group_1__0 : rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 ;
    public final void rule__UnpivotInClauseArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11919:1: ( rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 )
            // InternalSQLParser.g:11920:2: rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotInClauseArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0__Impl"
    // InternalSQLParser.g:11927:1: rule__UnpivotInClauseArg__Group_1__0__Impl : ( AS ) ;
    public final void rule__UnpivotInClauseArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11931:1: ( ( AS ) )
            // InternalSQLParser.g:11932:1: ( AS )
            {
            // InternalSQLParser.g:11932:1: ( AS )
            // InternalSQLParser.g:11933:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1"
    // InternalSQLParser.g:11942:1: rule__UnpivotInClauseArg__Group_1__1 : rule__UnpivotInClauseArg__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11946:1: ( rule__UnpivotInClauseArg__Group_1__1__Impl )
            // InternalSQLParser.g:11947:2: rule__UnpivotInClauseArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1__Impl"
    // InternalSQLParser.g:11953:1: rule__UnpivotInClauseArg__Group_1__1__Impl : ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) ;
    public final void rule__UnpivotInClauseArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11957:1: ( ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) )
            // InternalSQLParser.g:11958:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            {
            // InternalSQLParser.g:11958:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            // InternalSQLParser.g:11959:2: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }
            // InternalSQLParser.g:11960:2: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            // InternalSQLParser.g:11960:3: rule__UnpivotInClauseArg__CfulsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__CfulsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group__0"
    // InternalSQLParser.g:11969:1: rule__PivotForClause__Group__0 : rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 ;
    public final void rule__PivotForClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11973:1: ( rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 )
            // InternalSQLParser.g:11974:2: rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__PivotForClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0"


    // $ANTLR start "rule__PivotForClause__Group__0__Impl"
    // InternalSQLParser.g:11981:1: rule__PivotForClause__Group__0__Impl : ( FOR ) ;
    public final void rule__PivotForClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:11985:1: ( ( FOR ) )
            // InternalSQLParser.g:11986:1: ( FOR )
            {
            // InternalSQLParser.g:11986:1: ( FOR )
            // InternalSQLParser.g:11987:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group__1"
    // InternalSQLParser.g:11996:1: rule__PivotForClause__Group__1 : rule__PivotForClause__Group__1__Impl ;
    public final void rule__PivotForClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12000:1: ( rule__PivotForClause__Group__1__Impl )
            // InternalSQLParser.g:12001:2: rule__PivotForClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1"


    // $ANTLR start "rule__PivotForClause__Group__1__Impl"
    // InternalSQLParser.g:12007:1: rule__PivotForClause__Group__1__Impl : ( ( rule__PivotForClause__Alternatives_1 ) ) ;
    public final void rule__PivotForClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12011:1: ( ( ( rule__PivotForClause__Alternatives_1 ) ) )
            // InternalSQLParser.g:12012:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            {
            // InternalSQLParser.g:12012:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            // InternalSQLParser.g:12013:2: ( rule__PivotForClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:12014:2: ( rule__PivotForClause__Alternatives_1 )
            // InternalSQLParser.g:12014:3: rule__PivotForClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0"
    // InternalSQLParser.g:12023:1: rule__PivotForClause__Group_1_1__0 : rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 ;
    public final void rule__PivotForClause__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12027:1: ( rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 )
            // InternalSQLParser.g:12028:2: rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1
            {
            pushFollow(FOLLOW_7);
            rule__PivotForClause__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0__Impl"
    // InternalSQLParser.g:12035:1: rule__PivotForClause__Group_1_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12039:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:12040:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:12040:1: ( LeftParenthesis )
            // InternalSQLParser.g:12041:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1"
    // InternalSQLParser.g:12050:1: rule__PivotForClause__Group_1_1__1 : rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 ;
    public final void rule__PivotForClause__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12054:1: ( rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 )
            // InternalSQLParser.g:12055:2: rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2
            {
            pushFollow(FOLLOW_11);
            rule__PivotForClause__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1__Impl"
    // InternalSQLParser.g:12062:1: rule__PivotForClause__Group_1_1__1__Impl : ( ruleColumns ) ;
    public final void rule__PivotForClause__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12066:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:12067:1: ( ruleColumns )
            {
            // InternalSQLParser.g:12067:1: ( ruleColumns )
            // InternalSQLParser.g:12068:2: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2"
    // InternalSQLParser.g:12077:1: rule__PivotForClause__Group_1_1__2 : rule__PivotForClause__Group_1_1__2__Impl ;
    public final void rule__PivotForClause__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12081:1: ( rule__PivotForClause__Group_1_1__2__Impl )
            // InternalSQLParser.g:12082:2: rule__PivotForClause__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2__Impl"
    // InternalSQLParser.g:12088:1: rule__PivotForClause__Group_1_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12092:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:12093:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:12093:1: ( RightParenthesis )
            // InternalSQLParser.g:12094:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__0"
    // InternalSQLParser.g:12104:1: rule__PivotColumns__Group_1__0 : rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 ;
    public final void rule__PivotColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12108:1: ( rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 )
            // InternalSQLParser.g:12109:2: rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1
            {
            pushFollow(FOLLOW_26);
            rule__PivotColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0"


    // $ANTLR start "rule__PivotColumns__Group_1__0__Impl"
    // InternalSQLParser.g:12116:1: rule__PivotColumns__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12120:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:12121:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:12121:1: ( LeftParenthesis )
            // InternalSQLParser.g:12122:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__1"
    // InternalSQLParser.g:12131:1: rule__PivotColumns__Group_1__1 : rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 ;
    public final void rule__PivotColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12135:1: ( rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 )
            // InternalSQLParser.g:12136:2: rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2
            {
            pushFollow(FOLLOW_11);
            rule__PivotColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1"


    // $ANTLR start "rule__PivotColumns__Group_1__1__Impl"
    // InternalSQLParser.g:12143:1: rule__PivotColumns__Group_1__1__Impl : ( rulePivotCols ) ;
    public final void rule__PivotColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12147:1: ( ( rulePivotCols ) )
            // InternalSQLParser.g:12148:1: ( rulePivotCols )
            {
            // InternalSQLParser.g:12148:1: ( rulePivotCols )
            // InternalSQLParser.g:12149:2: rulePivotCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__2"
    // InternalSQLParser.g:12158:1: rule__PivotColumns__Group_1__2 : rule__PivotColumns__Group_1__2__Impl ;
    public final void rule__PivotColumns__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12162:1: ( rule__PivotColumns__Group_1__2__Impl )
            // InternalSQLParser.g:12163:2: rule__PivotColumns__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2"


    // $ANTLR start "rule__PivotColumns__Group_1__2__Impl"
    // InternalSQLParser.g:12169:1: rule__PivotColumns__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotColumns__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12173:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:12174:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:12174:1: ( RightParenthesis )
            // InternalSQLParser.g:12175:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2__Impl"


    // $ANTLR start "rule__PivotCols__Group__0"
    // InternalSQLParser.g:12185:1: rule__PivotCols__Group__0 : rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 ;
    public final void rule__PivotCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12189:1: ( rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 )
            // InternalSQLParser.g:12190:2: rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__PivotCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0"


    // $ANTLR start "rule__PivotCols__Group__0__Impl"
    // InternalSQLParser.g:12197:1: rule__PivotCols__Group__0__Impl : ( rulePivotCol ) ;
    public final void rule__PivotCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12201:1: ( ( rulePivotCol ) )
            // InternalSQLParser.g:12202:1: ( rulePivotCol )
            {
            // InternalSQLParser.g:12202:1: ( rulePivotCol )
            // InternalSQLParser.g:12203:2: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0__Impl"


    // $ANTLR start "rule__PivotCols__Group__1"
    // InternalSQLParser.g:12212:1: rule__PivotCols__Group__1 : rule__PivotCols__Group__1__Impl ;
    public final void rule__PivotCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12216:1: ( rule__PivotCols__Group__1__Impl )
            // InternalSQLParser.g:12217:2: rule__PivotCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1"


    // $ANTLR start "rule__PivotCols__Group__1__Impl"
    // InternalSQLParser.g:12223:1: rule__PivotCols__Group__1__Impl : ( ( rule__PivotCols__Group_1__0 )? ) ;
    public final void rule__PivotCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12227:1: ( ( ( rule__PivotCols__Group_1__0 )? ) )
            // InternalSQLParser.g:12228:1: ( ( rule__PivotCols__Group_1__0 )? )
            {
            // InternalSQLParser.g:12228:1: ( ( rule__PivotCols__Group_1__0 )? )
            // InternalSQLParser.g:12229:2: ( rule__PivotCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12230:2: ( rule__PivotCols__Group_1__0 )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==Comma) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSQLParser.g:12230:3: rule__PivotCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__0"
    // InternalSQLParser.g:12239:1: rule__PivotCols__Group_1__0 : rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 ;
    public final void rule__PivotCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12243:1: ( rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 )
            // InternalSQLParser.g:12244:2: rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__PivotCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0"


    // $ANTLR start "rule__PivotCols__Group_1__0__Impl"
    // InternalSQLParser.g:12251:1: rule__PivotCols__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12255:1: ( ( () ) )
            // InternalSQLParser.g:12256:1: ( () )
            {
            // InternalSQLParser.g:12256:1: ( () )
            // InternalSQLParser.g:12257:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:12258:2: ()
            // InternalSQLParser.g:12258:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__1"
    // InternalSQLParser.g:12266:1: rule__PivotCols__Group_1__1 : rule__PivotCols__Group_1__1__Impl ;
    public final void rule__PivotCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12270:1: ( rule__PivotCols__Group_1__1__Impl )
            // InternalSQLParser.g:12271:2: rule__PivotCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1"


    // $ANTLR start "rule__PivotCols__Group_1__1__Impl"
    // InternalSQLParser.g:12277:1: rule__PivotCols__Group_1__1__Impl : ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12281:1: ( ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:12282:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:12282:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            // InternalSQLParser.g:12283:2: ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:12283:2: ( ( rule__PivotCols__Group_1_1__0 ) )
            // InternalSQLParser.g:12284:3: ( rule__PivotCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12285:3: ( rule__PivotCols__Group_1_1__0 )
            // InternalSQLParser.g:12285:4: rule__PivotCols__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__PivotCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:12288:2: ( ( rule__PivotCols__Group_1_1__0 )* )
            // InternalSQLParser.g:12289:3: ( rule__PivotCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12290:3: ( rule__PivotCols__Group_1_1__0 )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==Comma) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalSQLParser.g:12290:4: rule__PivotCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__PivotCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__0"
    // InternalSQLParser.g:12300:1: rule__PivotCols__Group_1_1__0 : rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 ;
    public final void rule__PivotCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12304:1: ( rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 )
            // InternalSQLParser.g:12305:2: rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__PivotCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0"


    // $ANTLR start "rule__PivotCols__Group_1_1__0__Impl"
    // InternalSQLParser.g:12312:1: rule__PivotCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__PivotCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12316:1: ( ( Comma ) )
            // InternalSQLParser.g:12317:1: ( Comma )
            {
            // InternalSQLParser.g:12317:1: ( Comma )
            // InternalSQLParser.g:12318:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__1"
    // InternalSQLParser.g:12327:1: rule__PivotCols__Group_1_1__1 : rule__PivotCols__Group_1_1__1__Impl ;
    public final void rule__PivotCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12331:1: ( rule__PivotCols__Group_1_1__1__Impl )
            // InternalSQLParser.g:12332:2: rule__PivotCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1"


    // $ANTLR start "rule__PivotCols__Group_1_1__1__Impl"
    // InternalSQLParser.g:12338:1: rule__PivotCols__Group_1_1__1__Impl : ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12342:1: ( ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:12343:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:12343:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:12344:2: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:12345:2: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:12345:3: rule__PivotCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group__0"
    // InternalSQLParser.g:12354:1: rule__PivotCol__Group__0 : rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 ;
    public final void rule__PivotCol__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12358:1: ( rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 )
            // InternalSQLParser.g:12359:2: rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__PivotCol__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0"


    // $ANTLR start "rule__PivotCol__Group__0__Impl"
    // InternalSQLParser.g:12366:1: rule__PivotCol__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12370:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:12371:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:12371:1: ( ruleDbObjectName )
            // InternalSQLParser.g:12372:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0__Impl"


    // $ANTLR start "rule__PivotCol__Group__1"
    // InternalSQLParser.g:12381:1: rule__PivotCol__Group__1 : rule__PivotCol__Group__1__Impl ;
    public final void rule__PivotCol__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12385:1: ( rule__PivotCol__Group__1__Impl )
            // InternalSQLParser.g:12386:2: rule__PivotCol__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1"


    // $ANTLR start "rule__PivotCol__Group__1__Impl"
    // InternalSQLParser.g:12392:1: rule__PivotCol__Group__1__Impl : ( ( rule__PivotCol__Group_1__0 )? ) ;
    public final void rule__PivotCol__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12396:1: ( ( ( rule__PivotCol__Group_1__0 )? ) )
            // InternalSQLParser.g:12397:1: ( ( rule__PivotCol__Group_1__0 )? )
            {
            // InternalSQLParser.g:12397:1: ( ( rule__PivotCol__Group_1__0 )? )
            // InternalSQLParser.g:12398:2: ( rule__PivotCol__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12399:2: ( rule__PivotCol__Group_1__0 )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==FullStop) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalSQLParser.g:12399:3: rule__PivotCol__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCol__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__0"
    // InternalSQLParser.g:12408:1: rule__PivotCol__Group_1__0 : rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 ;
    public final void rule__PivotCol__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12412:1: ( rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 )
            // InternalSQLParser.g:12413:2: rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1
            {
            pushFollow(FOLLOW_47);
            rule__PivotCol__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0"


    // $ANTLR start "rule__PivotCol__Group_1__0__Impl"
    // InternalSQLParser.g:12420:1: rule__PivotCol__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCol__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12424:1: ( ( () ) )
            // InternalSQLParser.g:12425:1: ( () )
            {
            // InternalSQLParser.g:12425:1: ( () )
            // InternalSQLParser.g:12426:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:12427:2: ()
            // InternalSQLParser.g:12427:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__1"
    // InternalSQLParser.g:12435:1: rule__PivotCol__Group_1__1 : rule__PivotCol__Group_1__1__Impl ;
    public final void rule__PivotCol__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12439:1: ( rule__PivotCol__Group_1__1__Impl )
            // InternalSQLParser.g:12440:2: rule__PivotCol__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1"


    // $ANTLR start "rule__PivotCol__Group_1__1__Impl"
    // InternalSQLParser.g:12446:1: rule__PivotCol__Group_1__1__Impl : ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCol__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12450:1: ( ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:12451:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:12451:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            // InternalSQLParser.g:12452:2: ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:12452:2: ( ( rule__PivotCol__Group_1_1__0 ) )
            // InternalSQLParser.g:12453:3: ( rule__PivotCol__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12454:3: ( rule__PivotCol__Group_1_1__0 )
            // InternalSQLParser.g:12454:4: rule__PivotCol__Group_1_1__0
            {
            pushFollow(FOLLOW_48);
            rule__PivotCol__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:12457:2: ( ( rule__PivotCol__Group_1_1__0 )* )
            // InternalSQLParser.g:12458:3: ( rule__PivotCol__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12459:3: ( rule__PivotCol__Group_1_1__0 )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==FullStop) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // InternalSQLParser.g:12459:4: rule__PivotCol__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__PivotCol__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__0"
    // InternalSQLParser.g:12469:1: rule__PivotCol__Group_1_1__0 : rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 ;
    public final void rule__PivotCol__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12473:1: ( rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 )
            // InternalSQLParser.g:12474:2: rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__PivotCol__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0"


    // $ANTLR start "rule__PivotCol__Group_1_1__0__Impl"
    // InternalSQLParser.g:12481:1: rule__PivotCol__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__PivotCol__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12485:1: ( ( FullStop ) )
            // InternalSQLParser.g:12486:1: ( FullStop )
            {
            // InternalSQLParser.g:12486:1: ( FullStop )
            // InternalSQLParser.g:12487:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__1"
    // InternalSQLParser.g:12496:1: rule__PivotCol__Group_1_1__1 : rule__PivotCol__Group_1_1__1__Impl ;
    public final void rule__PivotCol__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12500:1: ( rule__PivotCol__Group_1_1__1__Impl )
            // InternalSQLParser.g:12501:2: rule__PivotCol__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1"


    // $ANTLR start "rule__PivotCol__Group_1_1__1__Impl"
    // InternalSQLParser.g:12507:1: rule__PivotCol__Group_1_1__1__Impl : ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCol__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12511:1: ( ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:12512:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:12512:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:12513:2: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:12514:2: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:12514:3: rule__PivotCol__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group__0"
    // InternalSQLParser.g:12523:1: rule__TableFull__Group__0 : rule__TableFull__Group__0__Impl rule__TableFull__Group__1 ;
    public final void rule__TableFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12527:1: ( rule__TableFull__Group__0__Impl rule__TableFull__Group__1 )
            // InternalSQLParser.g:12528:2: rule__TableFull__Group__0__Impl rule__TableFull__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__TableFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0"


    // $ANTLR start "rule__TableFull__Group__0__Impl"
    // InternalSQLParser.g:12535:1: rule__TableFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__TableFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12539:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:12540:1: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:12540:1: ( ruleDbObjectName )
            // InternalSQLParser.g:12541:2: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0__Impl"


    // $ANTLR start "rule__TableFull__Group__1"
    // InternalSQLParser.g:12550:1: rule__TableFull__Group__1 : rule__TableFull__Group__1__Impl ;
    public final void rule__TableFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12554:1: ( rule__TableFull__Group__1__Impl )
            // InternalSQLParser.g:12555:2: rule__TableFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1"


    // $ANTLR start "rule__TableFull__Group__1__Impl"
    // InternalSQLParser.g:12561:1: rule__TableFull__Group__1__Impl : ( ( rule__TableFull__Group_1__0 )? ) ;
    public final void rule__TableFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12565:1: ( ( ( rule__TableFull__Group_1__0 )? ) )
            // InternalSQLParser.g:12566:1: ( ( rule__TableFull__Group_1__0 )? )
            {
            // InternalSQLParser.g:12566:1: ( ( rule__TableFull__Group_1__0 )? )
            // InternalSQLParser.g:12567:2: ( rule__TableFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12568:2: ( rule__TableFull__Group_1__0 )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==FullStop) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSQLParser.g:12568:3: rule__TableFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1__0"
    // InternalSQLParser.g:12577:1: rule__TableFull__Group_1__0 : rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 ;
    public final void rule__TableFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12581:1: ( rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 )
            // InternalSQLParser.g:12582:2: rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1
            {
            pushFollow(FOLLOW_47);
            rule__TableFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0"


    // $ANTLR start "rule__TableFull__Group_1__0__Impl"
    // InternalSQLParser.g:12589:1: rule__TableFull__Group_1__0__Impl : ( () ) ;
    public final void rule__TableFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12593:1: ( ( () ) )
            // InternalSQLParser.g:12594:1: ( () )
            {
            // InternalSQLParser.g:12594:1: ( () )
            // InternalSQLParser.g:12595:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:12596:2: ()
            // InternalSQLParser.g:12596:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1__1"
    // InternalSQLParser.g:12604:1: rule__TableFull__Group_1__1 : rule__TableFull__Group_1__1__Impl ;
    public final void rule__TableFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12608:1: ( rule__TableFull__Group_1__1__Impl )
            // InternalSQLParser.g:12609:2: rule__TableFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1"


    // $ANTLR start "rule__TableFull__Group_1__1__Impl"
    // InternalSQLParser.g:12615:1: rule__TableFull__Group_1__1__Impl : ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) ;
    public final void rule__TableFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12619:1: ( ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:12620:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:12620:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            // InternalSQLParser.g:12621:2: ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:12621:2: ( ( rule__TableFull__Group_1_1__0 ) )
            // InternalSQLParser.g:12622:3: ( rule__TableFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12623:3: ( rule__TableFull__Group_1_1__0 )
            // InternalSQLParser.g:12623:4: rule__TableFull__Group_1_1__0
            {
            pushFollow(FOLLOW_48);
            rule__TableFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:12626:2: ( ( rule__TableFull__Group_1_1__0 )* )
            // InternalSQLParser.g:12627:3: ( rule__TableFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12628:3: ( rule__TableFull__Group_1_1__0 )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==FullStop) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalSQLParser.g:12628:4: rule__TableFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__TableFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__0"
    // InternalSQLParser.g:12638:1: rule__TableFull__Group_1_1__0 : rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 ;
    public final void rule__TableFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12642:1: ( rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 )
            // InternalSQLParser.g:12643:2: rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__TableFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0"


    // $ANTLR start "rule__TableFull__Group_1_1__0__Impl"
    // InternalSQLParser.g:12650:1: rule__TableFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__TableFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12654:1: ( ( FullStop ) )
            // InternalSQLParser.g:12655:1: ( FullStop )
            {
            // InternalSQLParser.g:12655:1: ( FullStop )
            // InternalSQLParser.g:12656:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__1"
    // InternalSQLParser.g:12665:1: rule__TableFull__Group_1_1__1 : rule__TableFull__Group_1_1__1__Impl ;
    public final void rule__TableFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12669:1: ( rule__TableFull__Group_1_1__1__Impl )
            // InternalSQLParser.g:12670:2: rule__TableFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1"


    // $ANTLR start "rule__TableFull__Group_1_1__1__Impl"
    // InternalSQLParser.g:12676:1: rule__TableFull__Group_1_1__1__Impl : ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__TableFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12680:1: ( ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:12681:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:12681:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:12682:2: ( rule__TableFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:12683:2: ( rule__TableFull__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:12683:3: rule__TableFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__0"
    // InternalSQLParser.g:12692:1: rule__DbObjectNameAll__Group__0 : rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 ;
    public final void rule__DbObjectNameAll__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12696:1: ( rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 )
            // InternalSQLParser.g:12697:2: rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__DbObjectNameAll__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0"


    // $ANTLR start "rule__DbObjectNameAll__Group__0__Impl"
    // InternalSQLParser.g:12704:1: rule__DbObjectNameAll__Group__0__Impl : ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) ;
    public final void rule__DbObjectNameAll__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12708:1: ( ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) )
            // InternalSQLParser.g:12709:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            {
            // InternalSQLParser.g:12709:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            // InternalSQLParser.g:12710:2: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }
            // InternalSQLParser.g:12711:2: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            // InternalSQLParser.g:12711:3: rule__DbObjectNameAll__DbnameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__DbnameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__1"
    // InternalSQLParser.g:12719:1: rule__DbObjectNameAll__Group__1 : rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 ;
    public final void rule__DbObjectNameAll__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12723:1: ( rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 )
            // InternalSQLParser.g:12724:2: rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2
            {
            pushFollow(FOLLOW_63);
            rule__DbObjectNameAll__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1"


    // $ANTLR start "rule__DbObjectNameAll__Group__1__Impl"
    // InternalSQLParser.g:12731:1: rule__DbObjectNameAll__Group__1__Impl : ( FullStop ) ;
    public final void rule__DbObjectNameAll__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12735:1: ( ( FullStop ) )
            // InternalSQLParser.g:12736:1: ( FullStop )
            {
            // InternalSQLParser.g:12736:1: ( FullStop )
            // InternalSQLParser.g:12737:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__2"
    // InternalSQLParser.g:12746:1: rule__DbObjectNameAll__Group__2 : rule__DbObjectNameAll__Group__2__Impl ;
    public final void rule__DbObjectNameAll__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12750:1: ( rule__DbObjectNameAll__Group__2__Impl )
            // InternalSQLParser.g:12751:2: rule__DbObjectNameAll__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2"


    // $ANTLR start "rule__DbObjectNameAll__Group__2__Impl"
    // InternalSQLParser.g:12757:1: rule__DbObjectNameAll__Group__2__Impl : ( RULE_STAR ) ;
    public final void rule__DbObjectNameAll__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12761:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:12762:1: ( RULE_STAR )
            {
            // InternalSQLParser.g:12762:1: ( RULE_STAR )
            // InternalSQLParser.g:12763:2: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__0"
    // InternalSQLParser.g:12773:1: rule__OrderByColumns__Group__0 : rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 ;
    public final void rule__OrderByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12777:1: ( rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 )
            // InternalSQLParser.g:12778:2: rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__OrderByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0"


    // $ANTLR start "rule__OrderByColumns__Group__0__Impl"
    // InternalSQLParser.g:12785:1: rule__OrderByColumns__Group__0__Impl : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12789:1: ( ( ruleOrderByColumnFull ) )
            // InternalSQLParser.g:12790:1: ( ruleOrderByColumnFull )
            {
            // InternalSQLParser.g:12790:1: ( ruleOrderByColumnFull )
            // InternalSQLParser.g:12791:2: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__1"
    // InternalSQLParser.g:12800:1: rule__OrderByColumns__Group__1 : rule__OrderByColumns__Group__1__Impl ;
    public final void rule__OrderByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12804:1: ( rule__OrderByColumns__Group__1__Impl )
            // InternalSQLParser.g:12805:2: rule__OrderByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1"


    // $ANTLR start "rule__OrderByColumns__Group__1__Impl"
    // InternalSQLParser.g:12811:1: rule__OrderByColumns__Group__1__Impl : ( ( rule__OrderByColumns__Group_1__0 )? ) ;
    public final void rule__OrderByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12815:1: ( ( ( rule__OrderByColumns__Group_1__0 )? ) )
            // InternalSQLParser.g:12816:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            {
            // InternalSQLParser.g:12816:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            // InternalSQLParser.g:12817:2: ( rule__OrderByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:12818:2: ( rule__OrderByColumns__Group_1__0 )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==Comma) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSQLParser.g:12818:3: rule__OrderByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__0"
    // InternalSQLParser.g:12827:1: rule__OrderByColumns__Group_1__0 : rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 ;
    public final void rule__OrderByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12831:1: ( rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 )
            // InternalSQLParser.g:12832:2: rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__OrderByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1__0__Impl"
    // InternalSQLParser.g:12839:1: rule__OrderByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12843:1: ( ( () ) )
            // InternalSQLParser.g:12844:1: ( () )
            {
            // InternalSQLParser.g:12844:1: ( () )
            // InternalSQLParser.g:12845:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:12846:2: ()
            // InternalSQLParser.g:12846:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__1"
    // InternalSQLParser.g:12854:1: rule__OrderByColumns__Group_1__1 : rule__OrderByColumns__Group_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12858:1: ( rule__OrderByColumns__Group_1__1__Impl )
            // InternalSQLParser.g:12859:2: rule__OrderByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1__1__Impl"
    // InternalSQLParser.g:12865:1: rule__OrderByColumns__Group_1__1__Impl : ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12869:1: ( ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:12870:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:12870:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:12871:2: ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:12871:2: ( ( rule__OrderByColumns__Group_1_1__0 ) )
            // InternalSQLParser.g:12872:3: ( rule__OrderByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12873:3: ( rule__OrderByColumns__Group_1_1__0 )
            // InternalSQLParser.g:12873:4: rule__OrderByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__OrderByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:12876:2: ( ( rule__OrderByColumns__Group_1_1__0 )* )
            // InternalSQLParser.g:12877:3: ( rule__OrderByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:12878:3: ( rule__OrderByColumns__Group_1_1__0 )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==Comma) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalSQLParser.g:12878:4: rule__OrderByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__OrderByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0"
    // InternalSQLParser.g:12888:1: rule__OrderByColumns__Group_1_1__0 : rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 ;
    public final void rule__OrderByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12892:1: ( rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 )
            // InternalSQLParser.g:12893:2: rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_43);
            rule__OrderByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0__Impl"
    // InternalSQLParser.g:12900:1: rule__OrderByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12904:1: ( ( Comma ) )
            // InternalSQLParser.g:12905:1: ( Comma )
            {
            // InternalSQLParser.g:12905:1: ( Comma )
            // InternalSQLParser.g:12906:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1"
    // InternalSQLParser.g:12915:1: rule__OrderByColumns__Group_1_1__1 : rule__OrderByColumns__Group_1_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12919:1: ( rule__OrderByColumns__Group_1_1__1__Impl )
            // InternalSQLParser.g:12920:2: rule__OrderByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1__Impl"
    // InternalSQLParser.g:12926:1: rule__OrderByColumns__Group_1_1__1__Impl : ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12930:1: ( ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:12931:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:12931:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:12932:2: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:12933:2: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:12933:3: rule__OrderByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__0"
    // InternalSQLParser.g:12942:1: rule__OrderByColumnFull__Group__0 : rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 ;
    public final void rule__OrderByColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12946:1: ( rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 )
            // InternalSQLParser.g:12947:2: rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__OrderByColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0"


    // $ANTLR start "rule__OrderByColumnFull__Group__0__Impl"
    // InternalSQLParser.g:12954:1: rule__OrderByColumnFull__Group__0__Impl : ( ( rule__OrderByColumnFull__Alternatives_0 ) ) ;
    public final void rule__OrderByColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12958:1: ( ( ( rule__OrderByColumnFull__Alternatives_0 ) ) )
            // InternalSQLParser.g:12959:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            {
            // InternalSQLParser.g:12959:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            // InternalSQLParser.g:12960:2: ( rule__OrderByColumnFull__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:12961:2: ( rule__OrderByColumnFull__Alternatives_0 )
            // InternalSQLParser.g:12961:3: rule__OrderByColumnFull__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__1"
    // InternalSQLParser.g:12969:1: rule__OrderByColumnFull__Group__1 : rule__OrderByColumnFull__Group__1__Impl ;
    public final void rule__OrderByColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12973:1: ( rule__OrderByColumnFull__Group__1__Impl )
            // InternalSQLParser.g:12974:2: rule__OrderByColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1"


    // $ANTLR start "rule__OrderByColumnFull__Group__1__Impl"
    // InternalSQLParser.g:12980:1: rule__OrderByColumnFull__Group__1__Impl : ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) ;
    public final void rule__OrderByColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:12984:1: ( ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) )
            // InternalSQLParser.g:12985:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            {
            // InternalSQLParser.g:12985:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            // InternalSQLParser.g:12986:2: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }
            // InternalSQLParser.g:12987:2: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==DESC||LA126_0==ASC) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSQLParser.g:12987:3: rule__OrderByColumnFull__DirectionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__DirectionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__0"
    // InternalSQLParser.g:12996:1: rule__GroupByColumns__Group__0 : rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 ;
    public final void rule__GroupByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13000:1: ( rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 )
            // InternalSQLParser.g:13001:2: rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__GroupByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0"


    // $ANTLR start "rule__GroupByColumns__Group__0__Impl"
    // InternalSQLParser.g:13008:1: rule__GroupByColumns__Group__0__Impl : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13012:1: ( ( ruleGroupByColumnFull ) )
            // InternalSQLParser.g:13013:1: ( ruleGroupByColumnFull )
            {
            // InternalSQLParser.g:13013:1: ( ruleGroupByColumnFull )
            // InternalSQLParser.g:13014:2: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__1"
    // InternalSQLParser.g:13023:1: rule__GroupByColumns__Group__1 : rule__GroupByColumns__Group__1__Impl ;
    public final void rule__GroupByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13027:1: ( rule__GroupByColumns__Group__1__Impl )
            // InternalSQLParser.g:13028:2: rule__GroupByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1"


    // $ANTLR start "rule__GroupByColumns__Group__1__Impl"
    // InternalSQLParser.g:13034:1: rule__GroupByColumns__Group__1__Impl : ( ( rule__GroupByColumns__Group_1__0 )? ) ;
    public final void rule__GroupByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13038:1: ( ( ( rule__GroupByColumns__Group_1__0 )? ) )
            // InternalSQLParser.g:13039:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            {
            // InternalSQLParser.g:13039:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            // InternalSQLParser.g:13040:2: ( rule__GroupByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:13041:2: ( rule__GroupByColumns__Group_1__0 )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==Comma) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalSQLParser.g:13041:3: rule__GroupByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__0"
    // InternalSQLParser.g:13050:1: rule__GroupByColumns__Group_1__0 : rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 ;
    public final void rule__GroupByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13054:1: ( rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 )
            // InternalSQLParser.g:13055:2: rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__GroupByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1__0__Impl"
    // InternalSQLParser.g:13062:1: rule__GroupByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__GroupByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13066:1: ( ( () ) )
            // InternalSQLParser.g:13067:1: ( () )
            {
            // InternalSQLParser.g:13067:1: ( () )
            // InternalSQLParser.g:13068:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:13069:2: ()
            // InternalSQLParser.g:13069:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__1"
    // InternalSQLParser.g:13077:1: rule__GroupByColumns__Group_1__1 : rule__GroupByColumns__Group_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13081:1: ( rule__GroupByColumns__Group_1__1__Impl )
            // InternalSQLParser.g:13082:2: rule__GroupByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1__1__Impl"
    // InternalSQLParser.g:13088:1: rule__GroupByColumns__Group_1__1__Impl : ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__GroupByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13092:1: ( ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:13093:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:13093:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            // InternalSQLParser.g:13094:2: ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:13094:2: ( ( rule__GroupByColumns__Group_1_1__0 ) )
            // InternalSQLParser.g:13095:3: ( rule__GroupByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13096:3: ( rule__GroupByColumns__Group_1_1__0 )
            // InternalSQLParser.g:13096:4: rule__GroupByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__GroupByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:13099:2: ( ( rule__GroupByColumns__Group_1_1__0 )* )
            // InternalSQLParser.g:13100:3: ( rule__GroupByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:13101:3: ( rule__GroupByColumns__Group_1_1__0 )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==Comma) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // InternalSQLParser.g:13101:4: rule__GroupByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__GroupByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0"
    // InternalSQLParser.g:13111:1: rule__GroupByColumns__Group_1_1__0 : rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 ;
    public final void rule__GroupByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13115:1: ( rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 )
            // InternalSQLParser.g:13116:2: rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_43);
            rule__GroupByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0__Impl"
    // InternalSQLParser.g:13123:1: rule__GroupByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__GroupByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13127:1: ( ( Comma ) )
            // InternalSQLParser.g:13128:1: ( Comma )
            {
            // InternalSQLParser.g:13128:1: ( Comma )
            // InternalSQLParser.g:13129:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1"
    // InternalSQLParser.g:13138:1: rule__GroupByColumns__Group_1_1__1 : rule__GroupByColumns__Group_1_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13142:1: ( rule__GroupByColumns__Group_1_1__1__Impl )
            // InternalSQLParser.g:13143:2: rule__GroupByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1__Impl"
    // InternalSQLParser.g:13149:1: rule__GroupByColumns__Group_1_1__1__Impl : ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__GroupByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13153:1: ( ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:13154:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:13154:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:13155:2: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:13156:2: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:13156:3: rule__GroupByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__FullExpression__Group__0"
    // InternalSQLParser.g:13165:1: rule__FullExpression__Group__0 : rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 ;
    public final void rule__FullExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13169:1: ( rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 )
            // InternalSQLParser.g:13170:2: rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__FullExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0"


    // $ANTLR start "rule__FullExpression__Group__0__Impl"
    // InternalSQLParser.g:13177:1: rule__FullExpression__Group__0__Impl : ( ruleExpressionFragment ) ;
    public final void rule__FullExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13181:1: ( ( ruleExpressionFragment ) )
            // InternalSQLParser.g:13182:1: ( ruleExpressionFragment )
            {
            // InternalSQLParser.g:13182:1: ( ruleExpressionFragment )
            // InternalSQLParser.g:13183:2: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0__Impl"


    // $ANTLR start "rule__FullExpression__Group__1"
    // InternalSQLParser.g:13192:1: rule__FullExpression__Group__1 : rule__FullExpression__Group__1__Impl ;
    public final void rule__FullExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13196:1: ( rule__FullExpression__Group__1__Impl )
            // InternalSQLParser.g:13197:2: rule__FullExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1"


    // $ANTLR start "rule__FullExpression__Group__1__Impl"
    // InternalSQLParser.g:13203:1: rule__FullExpression__Group__1__Impl : ( ( rule__FullExpression__Group_1__0 )? ) ;
    public final void rule__FullExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13207:1: ( ( ( rule__FullExpression__Group_1__0 )? ) )
            // InternalSQLParser.g:13208:1: ( ( rule__FullExpression__Group_1__0 )? )
            {
            // InternalSQLParser.g:13208:1: ( ( rule__FullExpression__Group_1__0 )? )
            // InternalSQLParser.g:13209:2: ( rule__FullExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:13210:2: ( rule__FullExpression__Group_1__0 )?
            int alt129=2;
            alt129 = dfa129.predict(input);
            switch (alt129) {
                case 1 :
                    // InternalSQLParser.g:13210:3: rule__FullExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FullExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__0"
    // InternalSQLParser.g:13219:1: rule__FullExpression__Group_1__0 : rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 ;
    public final void rule__FullExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13223:1: ( rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 )
            // InternalSQLParser.g:13224:2: rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1
            {
            pushFollow(FOLLOW_65);
            rule__FullExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0"


    // $ANTLR start "rule__FullExpression__Group_1__0__Impl"
    // InternalSQLParser.g:13231:1: rule__FullExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__FullExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13235:1: ( ( () ) )
            // InternalSQLParser.g:13236:1: ( () )
            {
            // InternalSQLParser.g:13236:1: ( () )
            // InternalSQLParser.g:13237:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:13238:2: ()
            // InternalSQLParser.g:13238:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__1"
    // InternalSQLParser.g:13246:1: rule__FullExpression__Group_1__1 : rule__FullExpression__Group_1__1__Impl ;
    public final void rule__FullExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13250:1: ( rule__FullExpression__Group_1__1__Impl )
            // InternalSQLParser.g:13251:2: rule__FullExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1"


    // $ANTLR start "rule__FullExpression__Group_1__1__Impl"
    // InternalSQLParser.g:13257:1: rule__FullExpression__Group_1__1__Impl : ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__FullExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13261:1: ( ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) )
            // InternalSQLParser.g:13262:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            {
            // InternalSQLParser.g:13262:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            // InternalSQLParser.g:13263:2: ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            {
            // InternalSQLParser.g:13263:2: ( ( rule__FullExpression__EntriesAssignment_1_1 ) )
            // InternalSQLParser.g:13264:3: ( rule__FullExpression__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:13265:3: ( rule__FullExpression__EntriesAssignment_1_1 )
            // InternalSQLParser.g:13265:4: rule__FullExpression__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_66);
            rule__FullExpression__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSQLParser.g:13268:2: ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            // InternalSQLParser.g:13269:3: ( rule__FullExpression__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:13270:3: ( rule__FullExpression__EntriesAssignment_1_1 )*
            loop130:
            do {
                int alt130=2;
                alt130 = dfa130.predict(input);
                switch (alt130) {
            	case 1 :
            	    // InternalSQLParser.g:13270:4: rule__FullExpression__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_66);
            	    rule__FullExpression__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0"
    // InternalSQLParser.g:13280:1: rule__ExpressionFragmentSecond__Group_0__0 : rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 ;
    public final void rule__ExpressionFragmentSecond__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13284:1: ( rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 )
            // InternalSQLParser.g:13285:2: rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1
            {
            pushFollow(FOLLOW_41);
            rule__ExpressionFragmentSecond__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0__Impl"
    // InternalSQLParser.g:13292:1: rule__ExpressionFragmentSecond__Group_0__0__Impl : ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13296:1: ( ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) )
            // InternalSQLParser.g:13297:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            {
            // InternalSQLParser.g:13297:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            // InternalSQLParser.g:13298:2: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }
            // InternalSQLParser.g:13299:2: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            // InternalSQLParser.g:13299:3: rule__ExpressionFragmentSecond__CAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1"
    // InternalSQLParser.g:13307:1: rule__ExpressionFragmentSecond__Group_0__1 : rule__ExpressionFragmentSecond__Group_0__1__Impl ;
    public final void rule__ExpressionFragmentSecond__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13311:1: ( rule__ExpressionFragmentSecond__Group_0__1__Impl )
            // InternalSQLParser.g:13312:2: rule__ExpressionFragmentSecond__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1__Impl"
    // InternalSQLParser.g:13318:1: rule__ExpressionFragmentSecond__Group_0__1__Impl : ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13322:1: ( ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) )
            // InternalSQLParser.g:13323:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            {
            // InternalSQLParser.g:13323:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            // InternalSQLParser.g:13324:2: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }
            // InternalSQLParser.g:13325:2: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            // InternalSQLParser.g:13325:3: rule__ExpressionFragmentSecond__EfragAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__EfragAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__0"
    // InternalSQLParser.g:13334:1: rule__ExpressionGroup__Group__0 : rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 ;
    public final void rule__ExpressionGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13338:1: ( rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 )
            // InternalSQLParser.g:13339:2: rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__ExpressionGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0"


    // $ANTLR start "rule__ExpressionGroup__Group__0__Impl"
    // InternalSQLParser.g:13346:1: rule__ExpressionGroup__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13350:1: ( ( () ) )
            // InternalSQLParser.g:13351:1: ( () )
            {
            // InternalSQLParser.g:13351:1: ( () )
            // InternalSQLParser.g:13352:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }
            // InternalSQLParser.g:13353:2: ()
            // InternalSQLParser.g:13353:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__1"
    // InternalSQLParser.g:13361:1: rule__ExpressionGroup__Group__1 : rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 ;
    public final void rule__ExpressionGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13365:1: ( rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 )
            // InternalSQLParser.g:13366:2: rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2
            {
            pushFollow(FOLLOW_67);
            rule__ExpressionGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1"


    // $ANTLR start "rule__ExpressionGroup__Group__1__Impl"
    // InternalSQLParser.g:13373:1: rule__ExpressionGroup__Group__1__Impl : ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) ;
    public final void rule__ExpressionGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13377:1: ( ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) )
            // InternalSQLParser.g:13378:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            {
            // InternalSQLParser.g:13378:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            // InternalSQLParser.g:13379:2: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }
            // InternalSQLParser.g:13380:2: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==NOT_1||LA131_0==NOT) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSQLParser.g:13380:3: rule__ExpressionGroup__IsnotAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionGroup__IsnotAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__2"
    // InternalSQLParser.g:13388:1: rule__ExpressionGroup__Group__2 : rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 ;
    public final void rule__ExpressionGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13392:1: ( rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 )
            // InternalSQLParser.g:13393:2: rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3
            {
            pushFollow(FOLLOW_41);
            rule__ExpressionGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2"


    // $ANTLR start "rule__ExpressionGroup__Group__2__Impl"
    // InternalSQLParser.g:13400:1: rule__ExpressionGroup__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__ExpressionGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13404:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:13405:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:13405:1: ( LeftParenthesis )
            // InternalSQLParser.g:13406:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__3"
    // InternalSQLParser.g:13415:1: rule__ExpressionGroup__Group__3 : rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 ;
    public final void rule__ExpressionGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13419:1: ( rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 )
            // InternalSQLParser.g:13420:2: rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__ExpressionGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3"


    // $ANTLR start "rule__ExpressionGroup__Group__3__Impl"
    // InternalSQLParser.g:13427:1: rule__ExpressionGroup__Group__3__Impl : ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) ;
    public final void rule__ExpressionGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13431:1: ( ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) )
            // InternalSQLParser.g:13432:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            {
            // InternalSQLParser.g:13432:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            // InternalSQLParser.g:13433:2: ( rule__ExpressionGroup__ExprAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }
            // InternalSQLParser.g:13434:2: ( rule__ExpressionGroup__ExprAssignment_3 )
            // InternalSQLParser.g:13434:3: rule__ExpressionGroup__ExprAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__ExprAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__4"
    // InternalSQLParser.g:13442:1: rule__ExpressionGroup__Group__4 : rule__ExpressionGroup__Group__4__Impl ;
    public final void rule__ExpressionGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13446:1: ( rule__ExpressionGroup__Group__4__Impl )
            // InternalSQLParser.g:13447:2: rule__ExpressionGroup__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4"


    // $ANTLR start "rule__ExpressionGroup__Group__4__Impl"
    // InternalSQLParser.g:13453:1: rule__ExpressionGroup__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__ExpressionGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13457:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:13458:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:13458:1: ( RightParenthesis )
            // InternalSQLParser.g:13459:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__0"
    // InternalSQLParser.g:13469:1: rule__XExpression__Group__0 : rule__XExpression__Group__0__Impl rule__XExpression__Group__1 ;
    public final void rule__XExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13473:1: ( rule__XExpression__Group__0__Impl rule__XExpression__Group__1 )
            // InternalSQLParser.g:13474:2: rule__XExpression__Group__0__Impl rule__XExpression__Group__1
            {
            pushFollow(FOLLOW_68);
            rule__XExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0"


    // $ANTLR start "rule__XExpression__Group__0__Impl"
    // InternalSQLParser.g:13481:1: rule__XExpression__Group__0__Impl : ( X ) ;
    public final void rule__XExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13485:1: ( ( X ) )
            // InternalSQLParser.g:13486:1: ( X )
            {
            // InternalSQLParser.g:13486:1: ( X )
            // InternalSQLParser.g:13487:2: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0__Impl"


    // $ANTLR start "rule__XExpression__Group__1"
    // InternalSQLParser.g:13496:1: rule__XExpression__Group__1 : rule__XExpression__Group__1__Impl rule__XExpression__Group__2 ;
    public final void rule__XExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13500:1: ( rule__XExpression__Group__1__Impl rule__XExpression__Group__2 )
            // InternalSQLParser.g:13501:2: rule__XExpression__Group__1__Impl rule__XExpression__Group__2
            {
            pushFollow(FOLLOW_68);
            rule__XExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1"


    // $ANTLR start "rule__XExpression__Group__1__Impl"
    // InternalSQLParser.g:13508:1: rule__XExpression__Group__1__Impl : ( () ) ;
    public final void rule__XExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13512:1: ( ( () ) )
            // InternalSQLParser.g:13513:1: ( () )
            {
            // InternalSQLParser.g:13513:1: ( () )
            // InternalSQLParser.g:13514:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }
            // InternalSQLParser.g:13515:2: ()
            // InternalSQLParser.g:13515:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1__Impl"


    // $ANTLR start "rule__XExpression__Group__2"
    // InternalSQLParser.g:13523:1: rule__XExpression__Group__2 : rule__XExpression__Group__2__Impl rule__XExpression__Group__3 ;
    public final void rule__XExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13527:1: ( rule__XExpression__Group__2__Impl rule__XExpression__Group__3 )
            // InternalSQLParser.g:13528:2: rule__XExpression__Group__2__Impl rule__XExpression__Group__3
            {
            pushFollow(FOLLOW_12);
            rule__XExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2"


    // $ANTLR start "rule__XExpression__Group__2__Impl"
    // InternalSQLParser.g:13535:1: rule__XExpression__Group__2__Impl : ( ( rule__XExpression__XfAssignment_2 ) ) ;
    public final void rule__XExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13539:1: ( ( ( rule__XExpression__XfAssignment_2 ) ) )
            // InternalSQLParser.g:13540:1: ( ( rule__XExpression__XfAssignment_2 ) )
            {
            // InternalSQLParser.g:13540:1: ( ( rule__XExpression__XfAssignment_2 ) )
            // InternalSQLParser.g:13541:2: ( rule__XExpression__XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }
            // InternalSQLParser.g:13542:2: ( rule__XExpression__XfAssignment_2 )
            // InternalSQLParser.g:13542:3: rule__XExpression__XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2__Impl"


    // $ANTLR start "rule__XExpression__Group__3"
    // InternalSQLParser.g:13550:1: rule__XExpression__Group__3 : rule__XExpression__Group__3__Impl rule__XExpression__Group__4 ;
    public final void rule__XExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13554:1: ( rule__XExpression__Group__3__Impl rule__XExpression__Group__4 )
            // InternalSQLParser.g:13555:2: rule__XExpression__Group__3__Impl rule__XExpression__Group__4
            {
            pushFollow(FOLLOW_69);
            rule__XExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3"


    // $ANTLR start "rule__XExpression__Group__3__Impl"
    // InternalSQLParser.g:13562:1: rule__XExpression__Group__3__Impl : ( Comma ) ;
    public final void rule__XExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13566:1: ( ( Comma ) )
            // InternalSQLParser.g:13567:1: ( Comma )
            {
            // InternalSQLParser.g:13567:1: ( Comma )
            // InternalSQLParser.g:13568:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3__Impl"


    // $ANTLR start "rule__XExpression__Group__4"
    // InternalSQLParser.g:13577:1: rule__XExpression__Group__4 : rule__XExpression__Group__4__Impl rule__XExpression__Group__5 ;
    public final void rule__XExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13581:1: ( rule__XExpression__Group__4__Impl rule__XExpression__Group__5 )
            // InternalSQLParser.g:13582:2: rule__XExpression__Group__4__Impl rule__XExpression__Group__5
            {
            pushFollow(FOLLOW_70);
            rule__XExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4"


    // $ANTLR start "rule__XExpression__Group__4__Impl"
    // InternalSQLParser.g:13589:1: rule__XExpression__Group__4__Impl : ( ( rule__XExpression__ColAssignment_4 ) ) ;
    public final void rule__XExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13593:1: ( ( ( rule__XExpression__ColAssignment_4 ) ) )
            // InternalSQLParser.g:13594:1: ( ( rule__XExpression__ColAssignment_4 ) )
            {
            // InternalSQLParser.g:13594:1: ( ( rule__XExpression__ColAssignment_4 ) )
            // InternalSQLParser.g:13595:2: ( rule__XExpression__ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }
            // InternalSQLParser.g:13596:2: ( rule__XExpression__ColAssignment_4 )
            // InternalSQLParser.g:13596:3: rule__XExpression__ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__5"
    // InternalSQLParser.g:13604:1: rule__XExpression__Group__5 : rule__XExpression__Group__5__Impl rule__XExpression__Group__6 ;
    public final void rule__XExpression__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13608:1: ( rule__XExpression__Group__5__Impl rule__XExpression__Group__6 )
            // InternalSQLParser.g:13609:2: rule__XExpression__Group__5__Impl rule__XExpression__Group__6
            {
            pushFollow(FOLLOW_70);
            rule__XExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5"


    // $ANTLR start "rule__XExpression__Group__5__Impl"
    // InternalSQLParser.g:13616:1: rule__XExpression__Group__5__Impl : ( ( rule__XExpression__Group_5__0 )? ) ;
    public final void rule__XExpression__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13620:1: ( ( ( rule__XExpression__Group_5__0 )? ) )
            // InternalSQLParser.g:13621:1: ( ( rule__XExpression__Group_5__0 )? )
            {
            // InternalSQLParser.g:13621:1: ( ( rule__XExpression__Group_5__0 )? )
            // InternalSQLParser.g:13622:2: ( rule__XExpression__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }
            // InternalSQLParser.g:13623:2: ( rule__XExpression__Group_5__0 )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==Comma) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalSQLParser.g:13623:3: rule__XExpression__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5__Impl"


    // $ANTLR start "rule__XExpression__Group__6"
    // InternalSQLParser.g:13631:1: rule__XExpression__Group__6 : rule__XExpression__Group__6__Impl ;
    public final void rule__XExpression__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13635:1: ( rule__XExpression__Group__6__Impl )
            // InternalSQLParser.g:13636:2: rule__XExpression__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6"


    // $ANTLR start "rule__XExpression__Group__6__Impl"
    // InternalSQLParser.g:13642:1: rule__XExpression__Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13646:1: ( ( RightCurlyBracket ) )
            // InternalSQLParser.g:13647:1: ( RightCurlyBracket )
            {
            // InternalSQLParser.g:13647:1: ( RightCurlyBracket )
            // InternalSQLParser.g:13648:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6__Impl"


    // $ANTLR start "rule__XExpression__Group_5__0"
    // InternalSQLParser.g:13658:1: rule__XExpression__Group_5__0 : rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 ;
    public final void rule__XExpression__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13662:1: ( rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 )
            // InternalSQLParser.g:13663:2: rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1
            {
            pushFollow(FOLLOW_18);
            rule__XExpression__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0"


    // $ANTLR start "rule__XExpression__Group_5__0__Impl"
    // InternalSQLParser.g:13670:1: rule__XExpression__Group_5__0__Impl : ( Comma ) ;
    public final void rule__XExpression__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13674:1: ( ( Comma ) )
            // InternalSQLParser.g:13675:1: ( Comma )
            {
            // InternalSQLParser.g:13675:1: ( Comma )
            // InternalSQLParser.g:13676:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0__Impl"


    // $ANTLR start "rule__XExpression__Group_5__1"
    // InternalSQLParser.g:13685:1: rule__XExpression__Group_5__1 : rule__XExpression__Group_5__1__Impl ;
    public final void rule__XExpression__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13689:1: ( rule__XExpression__Group_5__1__Impl )
            // InternalSQLParser.g:13690:2: rule__XExpression__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1"


    // $ANTLR start "rule__XExpression__Group_5__1__Impl"
    // InternalSQLParser.g:13696:1: rule__XExpression__Group_5__1__Impl : ( ( rule__XExpression__PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13700:1: ( ( ( rule__XExpression__PrmAssignment_5_1 ) ) )
            // InternalSQLParser.g:13701:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            {
            // InternalSQLParser.g:13701:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            // InternalSQLParser.g:13702:2: ( rule__XExpression__PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }
            // InternalSQLParser.g:13703:2: ( rule__XExpression__PrmAssignment_5_1 )
            // InternalSQLParser.g:13703:3: rule__XExpression__PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1__Impl"


    // $ANTLR start "rule__XExpression___Group__0"
    // InternalSQLParser.g:13712:1: rule__XExpression___Group__0 : rule__XExpression___Group__0__Impl rule__XExpression___Group__1 ;
    public final void rule__XExpression___Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13716:1: ( rule__XExpression___Group__0__Impl rule__XExpression___Group__1 )
            // InternalSQLParser.g:13717:2: rule__XExpression___Group__0__Impl rule__XExpression___Group__1
            {
            pushFollow(FOLLOW_68);
            rule__XExpression___Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0"


    // $ANTLR start "rule__XExpression___Group__0__Impl"
    // InternalSQLParser.g:13724:1: rule__XExpression___Group__0__Impl : ( X ) ;
    public final void rule__XExpression___Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13728:1: ( ( X ) )
            // InternalSQLParser.g:13729:1: ( X )
            {
            // InternalSQLParser.g:13729:1: ( X )
            // InternalSQLParser.g:13730:2: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0__Impl"


    // $ANTLR start "rule__XExpression___Group__1"
    // InternalSQLParser.g:13739:1: rule__XExpression___Group__1 : rule__XExpression___Group__1__Impl rule__XExpression___Group__2 ;
    public final void rule__XExpression___Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13743:1: ( rule__XExpression___Group__1__Impl rule__XExpression___Group__2 )
            // InternalSQLParser.g:13744:2: rule__XExpression___Group__1__Impl rule__XExpression___Group__2
            {
            pushFollow(FOLLOW_68);
            rule__XExpression___Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1"


    // $ANTLR start "rule__XExpression___Group__1__Impl"
    // InternalSQLParser.g:13751:1: rule__XExpression___Group__1__Impl : ( () ) ;
    public final void rule__XExpression___Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13755:1: ( ( () ) )
            // InternalSQLParser.g:13756:1: ( () )
            {
            // InternalSQLParser.g:13756:1: ( () )
            // InternalSQLParser.g:13757:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }
            // InternalSQLParser.g:13758:2: ()
            // InternalSQLParser.g:13758:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1__Impl"


    // $ANTLR start "rule__XExpression___Group__2"
    // InternalSQLParser.g:13766:1: rule__XExpression___Group__2 : rule__XExpression___Group__2__Impl rule__XExpression___Group__3 ;
    public final void rule__XExpression___Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13770:1: ( rule__XExpression___Group__2__Impl rule__XExpression___Group__3 )
            // InternalSQLParser.g:13771:2: rule__XExpression___Group__2__Impl rule__XExpression___Group__3
            {
            pushFollow(FOLLOW_71);
            rule__XExpression___Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2"


    // $ANTLR start "rule__XExpression___Group__2__Impl"
    // InternalSQLParser.g:13778:1: rule__XExpression___Group__2__Impl : ( ( rule__XExpression___XfAssignment_2 ) ) ;
    public final void rule__XExpression___Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13782:1: ( ( ( rule__XExpression___XfAssignment_2 ) ) )
            // InternalSQLParser.g:13783:1: ( ( rule__XExpression___XfAssignment_2 ) )
            {
            // InternalSQLParser.g:13783:1: ( ( rule__XExpression___XfAssignment_2 ) )
            // InternalSQLParser.g:13784:2: ( rule__XExpression___XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }
            // InternalSQLParser.g:13785:2: ( rule__XExpression___XfAssignment_2 )
            // InternalSQLParser.g:13785:3: rule__XExpression___XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2__Impl"


    // $ANTLR start "rule__XExpression___Group__3"
    // InternalSQLParser.g:13793:1: rule__XExpression___Group__3 : rule__XExpression___Group__3__Impl rule__XExpression___Group__4 ;
    public final void rule__XExpression___Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13797:1: ( rule__XExpression___Group__3__Impl rule__XExpression___Group__4 )
            // InternalSQLParser.g:13798:2: rule__XExpression___Group__3__Impl rule__XExpression___Group__4
            {
            pushFollow(FOLLOW_69);
            rule__XExpression___Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3"


    // $ANTLR start "rule__XExpression___Group__3__Impl"
    // InternalSQLParser.g:13805:1: rule__XExpression___Group__3__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13809:1: ( ( VerticalLine ) )
            // InternalSQLParser.g:13810:1: ( VerticalLine )
            {
            // InternalSQLParser.g:13810:1: ( VerticalLine )
            // InternalSQLParser.g:13811:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3__Impl"


    // $ANTLR start "rule__XExpression___Group__4"
    // InternalSQLParser.g:13820:1: rule__XExpression___Group__4 : rule__XExpression___Group__4__Impl rule__XExpression___Group__5 ;
    public final void rule__XExpression___Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13824:1: ( rule__XExpression___Group__4__Impl rule__XExpression___Group__5 )
            // InternalSQLParser.g:13825:2: rule__XExpression___Group__4__Impl rule__XExpression___Group__5
            {
            pushFollow(FOLLOW_72);
            rule__XExpression___Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4"


    // $ANTLR start "rule__XExpression___Group__4__Impl"
    // InternalSQLParser.g:13832:1: rule__XExpression___Group__4__Impl : ( ( rule__XExpression___ColAssignment_4 ) ) ;
    public final void rule__XExpression___Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13836:1: ( ( ( rule__XExpression___ColAssignment_4 ) ) )
            // InternalSQLParser.g:13837:1: ( ( rule__XExpression___ColAssignment_4 ) )
            {
            // InternalSQLParser.g:13837:1: ( ( rule__XExpression___ColAssignment_4 ) )
            // InternalSQLParser.g:13838:2: ( rule__XExpression___ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }
            // InternalSQLParser.g:13839:2: ( rule__XExpression___ColAssignment_4 )
            // InternalSQLParser.g:13839:3: rule__XExpression___ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4__Impl"


    // $ANTLR start "rule__XExpression___Group__5"
    // InternalSQLParser.g:13847:1: rule__XExpression___Group__5 : rule__XExpression___Group__5__Impl rule__XExpression___Group__6 ;
    public final void rule__XExpression___Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13851:1: ( rule__XExpression___Group__5__Impl rule__XExpression___Group__6 )
            // InternalSQLParser.g:13852:2: rule__XExpression___Group__5__Impl rule__XExpression___Group__6
            {
            pushFollow(FOLLOW_72);
            rule__XExpression___Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5"


    // $ANTLR start "rule__XExpression___Group__5__Impl"
    // InternalSQLParser.g:13859:1: rule__XExpression___Group__5__Impl : ( ( rule__XExpression___Group_5__0 )? ) ;
    public final void rule__XExpression___Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13863:1: ( ( ( rule__XExpression___Group_5__0 )? ) )
            // InternalSQLParser.g:13864:1: ( ( rule__XExpression___Group_5__0 )? )
            {
            // InternalSQLParser.g:13864:1: ( ( rule__XExpression___Group_5__0 )? )
            // InternalSQLParser.g:13865:2: ( rule__XExpression___Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup_5()); 
            }
            // InternalSQLParser.g:13866:2: ( rule__XExpression___Group_5__0 )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==VerticalLine) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalSQLParser.g:13866:3: rule__XExpression___Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression___Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5__Impl"


    // $ANTLR start "rule__XExpression___Group__6"
    // InternalSQLParser.g:13874:1: rule__XExpression___Group__6 : rule__XExpression___Group__6__Impl ;
    public final void rule__XExpression___Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13878:1: ( rule__XExpression___Group__6__Impl )
            // InternalSQLParser.g:13879:2: rule__XExpression___Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6"


    // $ANTLR start "rule__XExpression___Group__6__Impl"
    // InternalSQLParser.g:13885:1: rule__XExpression___Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression___Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13889:1: ( ( RightCurlyBracket ) )
            // InternalSQLParser.g:13890:1: ( RightCurlyBracket )
            {
            // InternalSQLParser.g:13890:1: ( RightCurlyBracket )
            // InternalSQLParser.g:13891:2: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6__Impl"


    // $ANTLR start "rule__XExpression___Group_5__0"
    // InternalSQLParser.g:13901:1: rule__XExpression___Group_5__0 : rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 ;
    public final void rule__XExpression___Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13905:1: ( rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 )
            // InternalSQLParser.g:13906:2: rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1
            {
            pushFollow(FOLLOW_18);
            rule__XExpression___Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0"


    // $ANTLR start "rule__XExpression___Group_5__0__Impl"
    // InternalSQLParser.g:13913:1: rule__XExpression___Group_5__0__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13917:1: ( ( VerticalLine ) )
            // InternalSQLParser.g:13918:1: ( VerticalLine )
            {
            // InternalSQLParser.g:13918:1: ( VerticalLine )
            // InternalSQLParser.g:13919:2: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0__Impl"


    // $ANTLR start "rule__XExpression___Group_5__1"
    // InternalSQLParser.g:13928:1: rule__XExpression___Group_5__1 : rule__XExpression___Group_5__1__Impl ;
    public final void rule__XExpression___Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13932:1: ( rule__XExpression___Group_5__1__Impl )
            // InternalSQLParser.g:13933:2: rule__XExpression___Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1"


    // $ANTLR start "rule__XExpression___Group_5__1__Impl"
    // InternalSQLParser.g:13939:1: rule__XExpression___Group_5__1__Impl : ( ( rule__XExpression___PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression___Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13943:1: ( ( ( rule__XExpression___PrmAssignment_5_1 ) ) )
            // InternalSQLParser.g:13944:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            {
            // InternalSQLParser.g:13944:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            // InternalSQLParser.g:13945:2: ( rule__XExpression___PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }
            // InternalSQLParser.g:13946:2: ( rule__XExpression___PrmAssignment_5_1 )
            // InternalSQLParser.g:13946:3: rule__XExpression___PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__0"
    // InternalSQLParser.g:13955:1: rule__XExpressionParams__Group__0 : rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 ;
    public final void rule__XExpressionParams__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13959:1: ( rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 )
            // InternalSQLParser.g:13960:2: rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__XExpressionParams__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0"


    // $ANTLR start "rule__XExpressionParams__Group__0__Impl"
    // InternalSQLParser.g:13967:1: rule__XExpressionParams__Group__0__Impl : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13971:1: ( ( ruleJRParameter ) )
            // InternalSQLParser.g:13972:1: ( ruleJRParameter )
            {
            // InternalSQLParser.g:13972:1: ( ruleJRParameter )
            // InternalSQLParser.g:13973:2: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__1"
    // InternalSQLParser.g:13982:1: rule__XExpressionParams__Group__1 : rule__XExpressionParams__Group__1__Impl ;
    public final void rule__XExpressionParams__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13986:1: ( rule__XExpressionParams__Group__1__Impl )
            // InternalSQLParser.g:13987:2: rule__XExpressionParams__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1"


    // $ANTLR start "rule__XExpressionParams__Group__1__Impl"
    // InternalSQLParser.g:13993:1: rule__XExpressionParams__Group__1__Impl : ( ( rule__XExpressionParams__Group_1__0 )? ) ;
    public final void rule__XExpressionParams__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:13997:1: ( ( ( rule__XExpressionParams__Group_1__0 )? ) )
            // InternalSQLParser.g:13998:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            {
            // InternalSQLParser.g:13998:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            // InternalSQLParser.g:13999:2: ( rule__XExpressionParams__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:14000:2: ( rule__XExpressionParams__Group_1__0 )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==Comma) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSQLParser.g:14000:3: rule__XExpressionParams__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpressionParams__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__0"
    // InternalSQLParser.g:14009:1: rule__XExpressionParams__Group_1__0 : rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 ;
    public final void rule__XExpressionParams__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14013:1: ( rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 )
            // InternalSQLParser.g:14014:2: rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__XExpressionParams__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1__0__Impl"
    // InternalSQLParser.g:14021:1: rule__XExpressionParams__Group_1__0__Impl : ( () ) ;
    public final void rule__XExpressionParams__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14025:1: ( ( () ) )
            // InternalSQLParser.g:14026:1: ( () )
            {
            // InternalSQLParser.g:14026:1: ( () )
            // InternalSQLParser.g:14027:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:14028:2: ()
            // InternalSQLParser.g:14028:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__1"
    // InternalSQLParser.g:14036:1: rule__XExpressionParams__Group_1__1 : rule__XExpressionParams__Group_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14040:1: ( rule__XExpressionParams__Group_1__1__Impl )
            // InternalSQLParser.g:14041:2: rule__XExpressionParams__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1__1__Impl"
    // InternalSQLParser.g:14047:1: rule__XExpressionParams__Group_1__1__Impl : ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) ;
    public final void rule__XExpressionParams__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14051:1: ( ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:14052:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:14052:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            // InternalSQLParser.g:14053:2: ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:14053:2: ( ( rule__XExpressionParams__Group_1_1__0 ) )
            // InternalSQLParser.g:14054:3: ( rule__XExpressionParams__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14055:3: ( rule__XExpressionParams__Group_1_1__0 )
            // InternalSQLParser.g:14055:4: rule__XExpressionParams__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__XExpressionParams__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:14058:2: ( ( rule__XExpressionParams__Group_1_1__0 )* )
            // InternalSQLParser.g:14059:3: ( rule__XExpressionParams__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:14060:3: ( rule__XExpressionParams__Group_1_1__0 )*
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==Comma) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // InternalSQLParser.g:14060:4: rule__XExpressionParams__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__XExpressionParams__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0"
    // InternalSQLParser.g:14070:1: rule__XExpressionParams__Group_1_1__0 : rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 ;
    public final void rule__XExpressionParams__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14074:1: ( rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 )
            // InternalSQLParser.g:14075:2: rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1
            {
            pushFollow(FOLLOW_18);
            rule__XExpressionParams__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0__Impl"
    // InternalSQLParser.g:14082:1: rule__XExpressionParams__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__XExpressionParams__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14086:1: ( ( Comma ) )
            // InternalSQLParser.g:14087:1: ( Comma )
            {
            // InternalSQLParser.g:14087:1: ( Comma )
            // InternalSQLParser.g:14088:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1"
    // InternalSQLParser.g:14097:1: rule__XExpressionParams__Group_1_1__1 : rule__XExpressionParams__Group_1_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14101:1: ( rule__XExpressionParams__Group_1_1__1__Impl )
            // InternalSQLParser.g:14102:2: rule__XExpressionParams__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1__Impl"
    // InternalSQLParser.g:14108:1: rule__XExpressionParams__Group_1_1__1__Impl : ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__XExpressionParams__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14112:1: ( ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:14113:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:14113:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:14114:2: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:14115:2: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:14115:3: rule__XExpressionParams__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1__Impl"


    // $ANTLR start "rule__Expression__Group__0"
    // InternalSQLParser.g:14124:1: rule__Expression__Group__0 : rule__Expression__Group__0__Impl rule__Expression__Group__1 ;
    public final void rule__Expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14128:1: ( rule__Expression__Group__0__Impl rule__Expression__Group__1 )
            // InternalSQLParser.g:14129:2: rule__Expression__Group__0__Impl rule__Expression__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__Expression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0"


    // $ANTLR start "rule__Expression__Group__0__Impl"
    // InternalSQLParser.g:14136:1: rule__Expression__Group__0__Impl : ( ( rule__Expression__Op1Assignment_0 ) ) ;
    public final void rule__Expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14140:1: ( ( ( rule__Expression__Op1Assignment_0 ) ) )
            // InternalSQLParser.g:14141:1: ( ( rule__Expression__Op1Assignment_0 ) )
            {
            // InternalSQLParser.g:14141:1: ( ( rule__Expression__Op1Assignment_0 ) )
            // InternalSQLParser.g:14142:2: ( rule__Expression__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }
            // InternalSQLParser.g:14143:2: ( rule__Expression__Op1Assignment_0 )
            // InternalSQLParser.g:14143:3: rule__Expression__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0__Impl"


    // $ANTLR start "rule__Expression__Group__1"
    // InternalSQLParser.g:14151:1: rule__Expression__Group__1 : rule__Expression__Group__1__Impl ;
    public final void rule__Expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14155:1: ( rule__Expression__Group__1__Impl )
            // InternalSQLParser.g:14156:2: rule__Expression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1"


    // $ANTLR start "rule__Expression__Group__1__Impl"
    // InternalSQLParser.g:14162:1: rule__Expression__Group__1__Impl : ( ( rule__Expression__Alternatives_1 ) ) ;
    public final void rule__Expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14166:1: ( ( ( rule__Expression__Alternatives_1 ) ) )
            // InternalSQLParser.g:14167:1: ( ( rule__Expression__Alternatives_1 ) )
            {
            // InternalSQLParser.g:14167:1: ( ( rule__Expression__Alternatives_1 ) )
            // InternalSQLParser.g:14168:2: ( rule__Expression__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:14169:2: ( rule__Expression__Alternatives_1 )
            // InternalSQLParser.g:14169:3: rule__Expression__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__0"
    // InternalSQLParser.g:14178:1: rule__IsNullValue__Group__0 : rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 ;
    public final void rule__IsNullValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14182:1: ( rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 )
            // InternalSQLParser.g:14183:2: rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__IsNullValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0"


    // $ANTLR start "rule__IsNullValue__Group__0__Impl"
    // InternalSQLParser.g:14190:1: rule__IsNullValue__Group__0__Impl : ( IS ) ;
    public final void rule__IsNullValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14194:1: ( ( IS ) )
            // InternalSQLParser.g:14195:1: ( IS )
            {
            // InternalSQLParser.g:14195:1: ( IS )
            // InternalSQLParser.g:14196:2: IS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }
            match(input,IS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0__Impl"


    // $ANTLR start "rule__IsNullValue__Group__1"
    // InternalSQLParser.g:14205:1: rule__IsNullValue__Group__1 : rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 ;
    public final void rule__IsNullValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14209:1: ( rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 )
            // InternalSQLParser.g:14210:2: rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2
            {
            pushFollow(FOLLOW_23);
            rule__IsNullValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1"


    // $ANTLR start "rule__IsNullValue__Group__1__Impl"
    // InternalSQLParser.g:14217:1: rule__IsNullValue__Group__1__Impl : ( ( NOT )? ) ;
    public final void rule__IsNullValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14221:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:14222:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:14222:1: ( ( NOT )? )
            // InternalSQLParser.g:14223:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }
            // InternalSQLParser.g:14224:2: ( NOT )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==NOT) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSQLParser.g:14224:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__2"
    // InternalSQLParser.g:14232:1: rule__IsNullValue__Group__2 : rule__IsNullValue__Group__2__Impl ;
    public final void rule__IsNullValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14236:1: ( rule__IsNullValue__Group__2__Impl )
            // InternalSQLParser.g:14237:2: rule__IsNullValue__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2"


    // $ANTLR start "rule__IsNullValue__Group__2__Impl"
    // InternalSQLParser.g:14243:1: rule__IsNullValue__Group__2__Impl : ( NULL ) ;
    public final void rule__IsNullValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14247:1: ( ( NULL ) )
            // InternalSQLParser.g:14248:1: ( NULL )
            {
            // InternalSQLParser.g:14248:1: ( NULL )
            // InternalSQLParser.g:14249:2: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalSQLParser.g:14259:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14263:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalSQLParser.g:14264:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__Comparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalSQLParser.g:14271:1: rule__Comparison__Group__0__Impl : ( ( rule__Comparison__OperatorAssignment_0 ) ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14275:1: ( ( ( rule__Comparison__OperatorAssignment_0 ) ) )
            // InternalSQLParser.g:14276:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            {
            // InternalSQLParser.g:14276:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            // InternalSQLParser.g:14277:2: ( rule__Comparison__OperatorAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }
            // InternalSQLParser.g:14278:2: ( rule__Comparison__OperatorAssignment_0 )
            // InternalSQLParser.g:14278:3: rule__Comparison__OperatorAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalSQLParser.g:14286:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl rule__Comparison__Group__2 ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14290:1: ( rule__Comparison__Group__1__Impl rule__Comparison__Group__2 )
            // InternalSQLParser.g:14291:2: rule__Comparison__Group__1__Impl rule__Comparison__Group__2
            {
            pushFollow(FOLLOW_74);
            rule__Comparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalSQLParser.g:14298:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__SubOperatorAssignment_1 )? ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14302:1: ( ( ( rule__Comparison__SubOperatorAssignment_1 )? ) )
            // InternalSQLParser.g:14303:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            {
            // InternalSQLParser.g:14303:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            // InternalSQLParser.g:14304:2: ( rule__Comparison__SubOperatorAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }
            // InternalSQLParser.g:14305:2: ( rule__Comparison__SubOperatorAssignment_1 )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==SOME||LA137_0==ALL||LA137_0==ANY) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSQLParser.g:14305:3: rule__Comparison__SubOperatorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Comparison__SubOperatorAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group__2"
    // InternalSQLParser.g:14313:1: rule__Comparison__Group__2 : rule__Comparison__Group__2__Impl ;
    public final void rule__Comparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14317:1: ( rule__Comparison__Group__2__Impl )
            // InternalSQLParser.g:14318:2: rule__Comparison__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2"


    // $ANTLR start "rule__Comparison__Group__2__Impl"
    // InternalSQLParser.g:14324:1: rule__Comparison__Group__2__Impl : ( ( rule__Comparison__Op2Assignment_2 ) ) ;
    public final void rule__Comparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14328:1: ( ( ( rule__Comparison__Op2Assignment_2 ) ) )
            // InternalSQLParser.g:14329:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            {
            // InternalSQLParser.g:14329:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            // InternalSQLParser.g:14330:2: ( rule__Comparison__Op2Assignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }
            // InternalSQLParser.g:14331:2: ( rule__Comparison__Op2Assignment_2 )
            // InternalSQLParser.g:14331:3: rule__Comparison__Op2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Op2Assignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2__Impl"


    // $ANTLR start "rule__Like__Group__0"
    // InternalSQLParser.g:14340:1: rule__Like__Group__0 : rule__Like__Group__0__Impl rule__Like__Group__1 ;
    public final void rule__Like__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14344:1: ( rule__Like__Group__0__Impl rule__Like__Group__1 )
            // InternalSQLParser.g:14345:2: rule__Like__Group__0__Impl rule__Like__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__Like__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Like__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0"


    // $ANTLR start "rule__Like__Group__0__Impl"
    // InternalSQLParser.g:14352:1: rule__Like__Group__0__Impl : ( ( rule__Like__OpLikeAssignment_0 ) ) ;
    public final void rule__Like__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14356:1: ( ( ( rule__Like__OpLikeAssignment_0 ) ) )
            // InternalSQLParser.g:14357:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            {
            // InternalSQLParser.g:14357:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            // InternalSQLParser.g:14358:2: ( rule__Like__OpLikeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }
            // InternalSQLParser.g:14359:2: ( rule__Like__OpLikeAssignment_0 )
            // InternalSQLParser.g:14359:3: rule__Like__OpLikeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Like__OpLikeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0__Impl"


    // $ANTLR start "rule__Like__Group__1"
    // InternalSQLParser.g:14367:1: rule__Like__Group__1 : rule__Like__Group__1__Impl ;
    public final void rule__Like__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14371:1: ( rule__Like__Group__1__Impl )
            // InternalSQLParser.g:14372:2: rule__Like__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1"


    // $ANTLR start "rule__Like__Group__1__Impl"
    // InternalSQLParser.g:14378:1: rule__Like__Group__1__Impl : ( ( rule__Like__Op2Assignment_1 ) ) ;
    public final void rule__Like__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14382:1: ( ( ( rule__Like__Op2Assignment_1 ) ) )
            // InternalSQLParser.g:14383:1: ( ( rule__Like__Op2Assignment_1 ) )
            {
            // InternalSQLParser.g:14383:1: ( ( rule__Like__Op2Assignment_1 ) )
            // InternalSQLParser.g:14384:2: ( rule__Like__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }
            // InternalSQLParser.g:14385:2: ( rule__Like__Op2Assignment_1 )
            // InternalSQLParser.g:14385:3: rule__Like__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Like__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1__Impl"


    // $ANTLR start "rule__LikeValue__Group__0"
    // InternalSQLParser.g:14394:1: rule__LikeValue__Group__0 : rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 ;
    public final void rule__LikeValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14398:1: ( rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 )
            // InternalSQLParser.g:14399:2: rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1
            {
            pushFollow(FOLLOW_76);
            rule__LikeValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0"


    // $ANTLR start "rule__LikeValue__Group__0__Impl"
    // InternalSQLParser.g:14406:1: rule__LikeValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__LikeValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14410:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:14411:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:14411:1: ( ( NOT )? )
            // InternalSQLParser.g:14412:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:14413:2: ( NOT )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==NOT) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSQLParser.g:14413:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0__Impl"


    // $ANTLR start "rule__LikeValue__Group__1"
    // InternalSQLParser.g:14421:1: rule__LikeValue__Group__1 : rule__LikeValue__Group__1__Impl ;
    public final void rule__LikeValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14425:1: ( rule__LikeValue__Group__1__Impl )
            // InternalSQLParser.g:14426:2: rule__LikeValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1"


    // $ANTLR start "rule__LikeValue__Group__1__Impl"
    // InternalSQLParser.g:14432:1: rule__LikeValue__Group__1__Impl : ( LIKE ) ;
    public final void rule__LikeValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14436:1: ( ( LIKE ) )
            // InternalSQLParser.g:14437:1: ( LIKE )
            {
            // InternalSQLParser.g:14437:1: ( LIKE )
            // InternalSQLParser.g:14438:2: LIKE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }
            match(input,LIKE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__0"
    // InternalSQLParser.g:14448:1: rule__Between__Group__0 : rule__Between__Group__0__Impl rule__Between__Group__1 ;
    public final void rule__Between__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14452:1: ( rule__Between__Group__0__Impl rule__Between__Group__1 )
            // InternalSQLParser.g:14453:2: rule__Between__Group__0__Impl rule__Between__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__Between__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0"


    // $ANTLR start "rule__Between__Group__0__Impl"
    // InternalSQLParser.g:14460:1: rule__Between__Group__0__Impl : ( ( rule__Between__OpBetweenAssignment_0 ) ) ;
    public final void rule__Between__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14464:1: ( ( ( rule__Between__OpBetweenAssignment_0 ) ) )
            // InternalSQLParser.g:14465:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            {
            // InternalSQLParser.g:14465:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            // InternalSQLParser.g:14466:2: ( rule__Between__OpBetweenAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }
            // InternalSQLParser.g:14467:2: ( rule__Between__OpBetweenAssignment_0 )
            // InternalSQLParser.g:14467:3: rule__Between__OpBetweenAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Between__OpBetweenAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0__Impl"


    // $ANTLR start "rule__Between__Group__1"
    // InternalSQLParser.g:14475:1: rule__Between__Group__1 : rule__Between__Group__1__Impl rule__Between__Group__2 ;
    public final void rule__Between__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14479:1: ( rule__Between__Group__1__Impl rule__Between__Group__2 )
            // InternalSQLParser.g:14480:2: rule__Between__Group__1__Impl rule__Between__Group__2
            {
            pushFollow(FOLLOW_77);
            rule__Between__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1"


    // $ANTLR start "rule__Between__Group__1__Impl"
    // InternalSQLParser.g:14487:1: rule__Between__Group__1__Impl : ( ( rule__Between__Op2Assignment_1 ) ) ;
    public final void rule__Between__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14491:1: ( ( ( rule__Between__Op2Assignment_1 ) ) )
            // InternalSQLParser.g:14492:1: ( ( rule__Between__Op2Assignment_1 ) )
            {
            // InternalSQLParser.g:14492:1: ( ( rule__Between__Op2Assignment_1 ) )
            // InternalSQLParser.g:14493:2: ( rule__Between__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }
            // InternalSQLParser.g:14494:2: ( rule__Between__Op2Assignment_1 )
            // InternalSQLParser.g:14494:3: rule__Between__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__2"
    // InternalSQLParser.g:14502:1: rule__Between__Group__2 : rule__Between__Group__2__Impl rule__Between__Group__3 ;
    public final void rule__Between__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14506:1: ( rule__Between__Group__2__Impl rule__Between__Group__3 )
            // InternalSQLParser.g:14507:2: rule__Between__Group__2__Impl rule__Between__Group__3
            {
            pushFollow(FOLLOW_69);
            rule__Between__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2"


    // $ANTLR start "rule__Between__Group__2__Impl"
    // InternalSQLParser.g:14514:1: rule__Between__Group__2__Impl : ( AND ) ;
    public final void rule__Between__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14518:1: ( ( AND ) )
            // InternalSQLParser.g:14519:1: ( AND )
            {
            // InternalSQLParser.g:14519:1: ( AND )
            // InternalSQLParser.g:14520:2: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2__Impl"


    // $ANTLR start "rule__Between__Group__3"
    // InternalSQLParser.g:14529:1: rule__Between__Group__3 : rule__Between__Group__3__Impl ;
    public final void rule__Between__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14533:1: ( rule__Between__Group__3__Impl )
            // InternalSQLParser.g:14534:2: rule__Between__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3"


    // $ANTLR start "rule__Between__Group__3__Impl"
    // InternalSQLParser.g:14540:1: rule__Between__Group__3__Impl : ( ( rule__Between__Op3Assignment_3 ) ) ;
    public final void rule__Between__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14544:1: ( ( ( rule__Between__Op3Assignment_3 ) ) )
            // InternalSQLParser.g:14545:1: ( ( rule__Between__Op3Assignment_3 ) )
            {
            // InternalSQLParser.g:14545:1: ( ( rule__Between__Op3Assignment_3 ) )
            // InternalSQLParser.g:14546:2: ( rule__Between__Op3Assignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }
            // InternalSQLParser.g:14547:2: ( rule__Between__Op3Assignment_3 )
            // InternalSQLParser.g:14547:3: rule__Between__Op3Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op3Assignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3__Impl"


    // $ANTLR start "rule__BetweenValue__Group__0"
    // InternalSQLParser.g:14556:1: rule__BetweenValue__Group__0 : rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 ;
    public final void rule__BetweenValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14560:1: ( rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 )
            // InternalSQLParser.g:14561:2: rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__BetweenValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0"


    // $ANTLR start "rule__BetweenValue__Group__0__Impl"
    // InternalSQLParser.g:14568:1: rule__BetweenValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__BetweenValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14572:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:14573:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:14573:1: ( ( NOT )? )
            // InternalSQLParser.g:14574:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:14575:2: ( NOT )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==NOT) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSQLParser.g:14575:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0__Impl"


    // $ANTLR start "rule__BetweenValue__Group__1"
    // InternalSQLParser.g:14583:1: rule__BetweenValue__Group__1 : rule__BetweenValue__Group__1__Impl ;
    public final void rule__BetweenValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14587:1: ( rule__BetweenValue__Group__1__Impl )
            // InternalSQLParser.g:14588:2: rule__BetweenValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1"


    // $ANTLR start "rule__BetweenValue__Group__1__Impl"
    // InternalSQLParser.g:14594:1: rule__BetweenValue__Group__1__Impl : ( BETWEEN ) ;
    public final void rule__BetweenValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14598:1: ( ( BETWEEN ) )
            // InternalSQLParser.g:14599:1: ( BETWEEN )
            {
            // InternalSQLParser.g:14599:1: ( BETWEEN )
            // InternalSQLParser.g:14600:2: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__0"
    // InternalSQLParser.g:14610:1: rule__InOperator__Group__0 : rule__InOperator__Group__0__Impl rule__InOperator__Group__1 ;
    public final void rule__InOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14614:1: ( rule__InOperator__Group__0__Impl rule__InOperator__Group__1 )
            // InternalSQLParser.g:14615:2: rule__InOperator__Group__0__Impl rule__InOperator__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__InOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0"


    // $ANTLR start "rule__InOperator__Group__0__Impl"
    // InternalSQLParser.g:14622:1: rule__InOperator__Group__0__Impl : ( () ) ;
    public final void rule__InOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14626:1: ( ( () ) )
            // InternalSQLParser.g:14627:1: ( () )
            {
            // InternalSQLParser.g:14627:1: ( () )
            // InternalSQLParser.g:14628:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }
            // InternalSQLParser.g:14629:2: ()
            // InternalSQLParser.g:14629:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0__Impl"


    // $ANTLR start "rule__InOperator__Group__1"
    // InternalSQLParser.g:14637:1: rule__InOperator__Group__1 : rule__InOperator__Group__1__Impl rule__InOperator__Group__2 ;
    public final void rule__InOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14641:1: ( rule__InOperator__Group__1__Impl rule__InOperator__Group__2 )
            // InternalSQLParser.g:14642:2: rule__InOperator__Group__1__Impl rule__InOperator__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__InOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1"


    // $ANTLR start "rule__InOperator__Group__1__Impl"
    // InternalSQLParser.g:14649:1: rule__InOperator__Group__1__Impl : ( ( rule__InOperator__OpAssignment_1 ) ) ;
    public final void rule__InOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14653:1: ( ( ( rule__InOperator__OpAssignment_1 ) ) )
            // InternalSQLParser.g:14654:1: ( ( rule__InOperator__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:14654:1: ( ( rule__InOperator__OpAssignment_1 ) )
            // InternalSQLParser.g:14655:2: ( rule__InOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:14656:2: ( rule__InOperator__OpAssignment_1 )
            // InternalSQLParser.g:14656:3: rule__InOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__2"
    // InternalSQLParser.g:14664:1: rule__InOperator__Group__2 : rule__InOperator__Group__2__Impl ;
    public final void rule__InOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14668:1: ( rule__InOperator__Group__2__Impl )
            // InternalSQLParser.g:14669:2: rule__InOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2"


    // $ANTLR start "rule__InOperator__Group__2__Impl"
    // InternalSQLParser.g:14675:1: rule__InOperator__Group__2__Impl : ( ( rule__InOperator__Alternatives_2 ) ) ;
    public final void rule__InOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14679:1: ( ( ( rule__InOperator__Alternatives_2 ) ) )
            // InternalSQLParser.g:14680:1: ( ( rule__InOperator__Alternatives_2 ) )
            {
            // InternalSQLParser.g:14680:1: ( ( rule__InOperator__Alternatives_2 ) )
            // InternalSQLParser.g:14681:2: ( rule__InOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:14682:2: ( rule__InOperator__Alternatives_2 )
            // InternalSQLParser.g:14682:3: rule__InOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2__Impl"


    // $ANTLR start "rule__InValue__Group__0"
    // InternalSQLParser.g:14691:1: rule__InValue__Group__0 : rule__InValue__Group__0__Impl rule__InValue__Group__1 ;
    public final void rule__InValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14695:1: ( rule__InValue__Group__0__Impl rule__InValue__Group__1 )
            // InternalSQLParser.g:14696:2: rule__InValue__Group__0__Impl rule__InValue__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__InValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0"


    // $ANTLR start "rule__InValue__Group__0__Impl"
    // InternalSQLParser.g:14703:1: rule__InValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__InValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14707:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:14708:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:14708:1: ( ( NOT )? )
            // InternalSQLParser.g:14709:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:14710:2: ( NOT )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==NOT) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalSQLParser.g:14710:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0__Impl"


    // $ANTLR start "rule__InValue__Group__1"
    // InternalSQLParser.g:14718:1: rule__InValue__Group__1 : rule__InValue__Group__1__Impl ;
    public final void rule__InValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14722:1: ( rule__InValue__Group__1__Impl )
            // InternalSQLParser.g:14723:2: rule__InValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1"


    // $ANTLR start "rule__InValue__Group__1__Impl"
    // InternalSQLParser.g:14729:1: rule__InValue__Group__1__Impl : ( IN ) ;
    public final void rule__InValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14733:1: ( ( IN ) )
            // InternalSQLParser.g:14734:1: ( IN )
            {
            // InternalSQLParser.g:14734:1: ( IN )
            // InternalSQLParser.g:14735:2: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__0"
    // InternalSQLParser.g:14745:1: rule__ExistsOperator__Group__0 : rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 ;
    public final void rule__ExistsOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14749:1: ( rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 )
            // InternalSQLParser.g:14750:2: rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__ExistsOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0"


    // $ANTLR start "rule__ExistsOperator__Group__0__Impl"
    // InternalSQLParser.g:14757:1: rule__ExistsOperator__Group__0__Impl : ( () ) ;
    public final void rule__ExistsOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14761:1: ( ( () ) )
            // InternalSQLParser.g:14762:1: ( () )
            {
            // InternalSQLParser.g:14762:1: ( () )
            // InternalSQLParser.g:14763:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }
            // InternalSQLParser.g:14764:2: ()
            // InternalSQLParser.g:14764:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__1"
    // InternalSQLParser.g:14772:1: rule__ExistsOperator__Group__1 : rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 ;
    public final void rule__ExistsOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14776:1: ( rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 )
            // InternalSQLParser.g:14777:2: rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__ExistsOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1"


    // $ANTLR start "rule__ExistsOperator__Group__1__Impl"
    // InternalSQLParser.g:14784:1: rule__ExistsOperator__Group__1__Impl : ( ( rule__ExistsOperator__OpAssignment_1 ) ) ;
    public final void rule__ExistsOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14788:1: ( ( ( rule__ExistsOperator__OpAssignment_1 ) ) )
            // InternalSQLParser.g:14789:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:14789:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            // InternalSQLParser.g:14790:2: ( rule__ExistsOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:14791:2: ( rule__ExistsOperator__OpAssignment_1 )
            // InternalSQLParser.g:14791:3: rule__ExistsOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__2"
    // InternalSQLParser.g:14799:1: rule__ExistsOperator__Group__2 : rule__ExistsOperator__Group__2__Impl ;
    public final void rule__ExistsOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14803:1: ( rule__ExistsOperator__Group__2__Impl )
            // InternalSQLParser.g:14804:2: rule__ExistsOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2"


    // $ANTLR start "rule__ExistsOperator__Group__2__Impl"
    // InternalSQLParser.g:14810:1: rule__ExistsOperator__Group__2__Impl : ( ( rule__ExistsOperator__Alternatives_2 ) ) ;
    public final void rule__ExistsOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14814:1: ( ( ( rule__ExistsOperator__Alternatives_2 ) ) )
            // InternalSQLParser.g:14815:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            {
            // InternalSQLParser.g:14815:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            // InternalSQLParser.g:14816:2: ( rule__ExistsOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:14817:2: ( rule__ExistsOperator__Alternatives_2 )
            // InternalSQLParser.g:14817:3: rule__ExistsOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2__Impl"


    // $ANTLR start "rule__ExistsValue__Group__0"
    // InternalSQLParser.g:14826:1: rule__ExistsValue__Group__0 : rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 ;
    public final void rule__ExistsValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14830:1: ( rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 )
            // InternalSQLParser.g:14831:2: rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__ExistsValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0"


    // $ANTLR start "rule__ExistsValue__Group__0__Impl"
    // InternalSQLParser.g:14838:1: rule__ExistsValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__ExistsValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14842:1: ( ( ( NOT )? ) )
            // InternalSQLParser.g:14843:1: ( ( NOT )? )
            {
            // InternalSQLParser.g:14843:1: ( ( NOT )? )
            // InternalSQLParser.g:14844:2: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }
            // InternalSQLParser.g:14845:2: ( NOT )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==NOT) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalSQLParser.g:14845:3: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0__Impl"


    // $ANTLR start "rule__ExistsValue__Group__1"
    // InternalSQLParser.g:14853:1: rule__ExistsValue__Group__1 : rule__ExistsValue__Group__1__Impl ;
    public final void rule__ExistsValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14857:1: ( rule__ExistsValue__Group__1__Impl )
            // InternalSQLParser.g:14858:2: rule__ExistsValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1"


    // $ANTLR start "rule__ExistsValue__Group__1__Impl"
    // InternalSQLParser.g:14864:1: rule__ExistsValue__Group__1__Impl : ( EXISTS ) ;
    public final void rule__ExistsValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14868:1: ( ( EXISTS ) )
            // InternalSQLParser.g:14869:1: ( EXISTS )
            {
            // InternalSQLParser.g:14869:1: ( EXISTS )
            // InternalSQLParser.g:14870:2: EXISTS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }
            match(input,EXISTS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__0"
    // InternalSQLParser.g:14880:1: rule__OperandListGroup__Group__0 : rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 ;
    public final void rule__OperandListGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14884:1: ( rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 )
            // InternalSQLParser.g:14885:2: rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__OperandListGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0"


    // $ANTLR start "rule__OperandListGroup__Group__0__Impl"
    // InternalSQLParser.g:14892:1: rule__OperandListGroup__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandListGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14896:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:14897:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:14897:1: ( LeftParenthesis )
            // InternalSQLParser.g:14898:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__1"
    // InternalSQLParser.g:14907:1: rule__OperandListGroup__Group__1 : rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 ;
    public final void rule__OperandListGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14911:1: ( rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 )
            // InternalSQLParser.g:14912:2: rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__OperandListGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1"


    // $ANTLR start "rule__OperandListGroup__Group__1__Impl"
    // InternalSQLParser.g:14919:1: rule__OperandListGroup__Group__1__Impl : ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) ;
    public final void rule__OperandListGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14923:1: ( ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) )
            // InternalSQLParser.g:14924:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            {
            // InternalSQLParser.g:14924:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            // InternalSQLParser.g:14925:2: ( rule__OperandListGroup__OpGroupAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }
            // InternalSQLParser.g:14926:2: ( rule__OperandListGroup__OpGroupAssignment_1 )
            // InternalSQLParser.g:14926:3: rule__OperandListGroup__OpGroupAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__OpGroupAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__2"
    // InternalSQLParser.g:14934:1: rule__OperandListGroup__Group__2 : rule__OperandListGroup__Group__2__Impl ;
    public final void rule__OperandListGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14938:1: ( rule__OperandListGroup__Group__2__Impl )
            // InternalSQLParser.g:14939:2: rule__OperandListGroup__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2"


    // $ANTLR start "rule__OperandListGroup__Group__2__Impl"
    // InternalSQLParser.g:14945:1: rule__OperandListGroup__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandListGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14949:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:14950:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:14950:1: ( RightParenthesis )
            // InternalSQLParser.g:14951:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2__Impl"


    // $ANTLR start "rule__OperandList__Group__0"
    // InternalSQLParser.g:14961:1: rule__OperandList__Group__0 : rule__OperandList__Group__0__Impl rule__OperandList__Group__1 ;
    public final void rule__OperandList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14965:1: ( rule__OperandList__Group__0__Impl rule__OperandList__Group__1 )
            // InternalSQLParser.g:14966:2: rule__OperandList__Group__0__Impl rule__OperandList__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__OperandList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0"


    // $ANTLR start "rule__OperandList__Group__0__Impl"
    // InternalSQLParser.g:14973:1: rule__OperandList__Group__0__Impl : ( ruleScalarOperand ) ;
    public final void rule__OperandList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14977:1: ( ( ruleScalarOperand ) )
            // InternalSQLParser.g:14978:1: ( ruleScalarOperand )
            {
            // InternalSQLParser.g:14978:1: ( ruleScalarOperand )
            // InternalSQLParser.g:14979:2: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0__Impl"


    // $ANTLR start "rule__OperandList__Group__1"
    // InternalSQLParser.g:14988:1: rule__OperandList__Group__1 : rule__OperandList__Group__1__Impl ;
    public final void rule__OperandList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:14992:1: ( rule__OperandList__Group__1__Impl )
            // InternalSQLParser.g:14993:2: rule__OperandList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1"


    // $ANTLR start "rule__OperandList__Group__1__Impl"
    // InternalSQLParser.g:14999:1: rule__OperandList__Group__1__Impl : ( ( rule__OperandList__Group_1__0 )? ) ;
    public final void rule__OperandList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15003:1: ( ( ( rule__OperandList__Group_1__0 )? ) )
            // InternalSQLParser.g:15004:1: ( ( rule__OperandList__Group_1__0 )? )
            {
            // InternalSQLParser.g:15004:1: ( ( rule__OperandList__Group_1__0 )? )
            // InternalSQLParser.g:15005:2: ( rule__OperandList__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:15006:2: ( rule__OperandList__Group_1__0 )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==Comma) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalSQLParser.g:15006:3: rule__OperandList__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandList__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1__0"
    // InternalSQLParser.g:15015:1: rule__OperandList__Group_1__0 : rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 ;
    public final void rule__OperandList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15019:1: ( rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 )
            // InternalSQLParser.g:15020:2: rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__OperandList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0"


    // $ANTLR start "rule__OperandList__Group_1__0__Impl"
    // InternalSQLParser.g:15027:1: rule__OperandList__Group_1__0__Impl : ( () ) ;
    public final void rule__OperandList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15031:1: ( ( () ) )
            // InternalSQLParser.g:15032:1: ( () )
            {
            // InternalSQLParser.g:15032:1: ( () )
            // InternalSQLParser.g:15033:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:15034:2: ()
            // InternalSQLParser.g:15034:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1__1"
    // InternalSQLParser.g:15042:1: rule__OperandList__Group_1__1 : rule__OperandList__Group_1__1__Impl ;
    public final void rule__OperandList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15046:1: ( rule__OperandList__Group_1__1__Impl )
            // InternalSQLParser.g:15047:2: rule__OperandList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1"


    // $ANTLR start "rule__OperandList__Group_1__1__Impl"
    // InternalSQLParser.g:15053:1: rule__OperandList__Group_1__1__Impl : ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) ;
    public final void rule__OperandList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15057:1: ( ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:15058:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:15058:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            // InternalSQLParser.g:15059:2: ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:15059:2: ( ( rule__OperandList__Group_1_1__0 ) )
            // InternalSQLParser.g:15060:3: ( rule__OperandList__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:15061:3: ( rule__OperandList__Group_1_1__0 )
            // InternalSQLParser.g:15061:4: rule__OperandList__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__OperandList__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:15064:2: ( ( rule__OperandList__Group_1_1__0 )* )
            // InternalSQLParser.g:15065:3: ( rule__OperandList__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:15066:3: ( rule__OperandList__Group_1_1__0 )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==Comma) ) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    // InternalSQLParser.g:15066:4: rule__OperandList__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__OperandList__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__0"
    // InternalSQLParser.g:15076:1: rule__OperandList__Group_1_1__0 : rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 ;
    public final void rule__OperandList__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15080:1: ( rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 )
            // InternalSQLParser.g:15081:2: rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1
            {
            pushFollow(FOLLOW_80);
            rule__OperandList__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0"


    // $ANTLR start "rule__OperandList__Group_1_1__0__Impl"
    // InternalSQLParser.g:15088:1: rule__OperandList__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OperandList__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15092:1: ( ( Comma ) )
            // InternalSQLParser.g:15093:1: ( Comma )
            {
            // InternalSQLParser.g:15093:1: ( Comma )
            // InternalSQLParser.g:15094:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__1"
    // InternalSQLParser.g:15103:1: rule__OperandList__Group_1_1__1 : rule__OperandList__Group_1_1__1__Impl ;
    public final void rule__OperandList__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15107:1: ( rule__OperandList__Group_1_1__1__Impl )
            // InternalSQLParser.g:15108:2: rule__OperandList__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1"


    // $ANTLR start "rule__OperandList__Group_1_1__1__Impl"
    // InternalSQLParser.g:15114:1: rule__OperandList__Group_1_1__1__Impl : ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OperandList__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15118:1: ( ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:15119:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:15119:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:15120:2: ( rule__OperandList__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:15121:2: ( rule__OperandList__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:15121:3: rule__OperandList__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__0"
    // InternalSQLParser.g:15130:1: rule__OperandGroup__Group_1__0 : rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 ;
    public final void rule__OperandGroup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15134:1: ( rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 )
            // InternalSQLParser.g:15135:2: rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1
            {
            pushFollow(FOLLOW_69);
            rule__OperandGroup__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0"


    // $ANTLR start "rule__OperandGroup__Group_1__0__Impl"
    // InternalSQLParser.g:15142:1: rule__OperandGroup__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandGroup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15146:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:15147:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:15147:1: ( LeftParenthesis )
            // InternalSQLParser.g:15148:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__1"
    // InternalSQLParser.g:15157:1: rule__OperandGroup__Group_1__1 : rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 ;
    public final void rule__OperandGroup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15161:1: ( rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 )
            // InternalSQLParser.g:15162:2: rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2
            {
            pushFollow(FOLLOW_11);
            rule__OperandGroup__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1"


    // $ANTLR start "rule__OperandGroup__Group_1__1__Impl"
    // InternalSQLParser.g:15169:1: rule__OperandGroup__Group_1__1__Impl : ( ruleOperand ) ;
    public final void rule__OperandGroup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15173:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:15174:1: ( ruleOperand )
            {
            // InternalSQLParser.g:15174:1: ( ruleOperand )
            // InternalSQLParser.g:15175:2: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__2"
    // InternalSQLParser.g:15184:1: rule__OperandGroup__Group_1__2 : rule__OperandGroup__Group_1__2__Impl ;
    public final void rule__OperandGroup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15188:1: ( rule__OperandGroup__Group_1__2__Impl )
            // InternalSQLParser.g:15189:2: rule__OperandGroup__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2"


    // $ANTLR start "rule__OperandGroup__Group_1__2__Impl"
    // InternalSQLParser.g:15195:1: rule__OperandGroup__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandGroup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15199:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:15200:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:15200:1: ( RightParenthesis )
            // InternalSQLParser.g:15201:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2__Impl"


    // $ANTLR start "rule__Operand__Group__0"
    // InternalSQLParser.g:15211:1: rule__Operand__Group__0 : rule__Operand__Group__0__Impl rule__Operand__Group__1 ;
    public final void rule__Operand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15215:1: ( rule__Operand__Group__0__Impl rule__Operand__Group__1 )
            // InternalSQLParser.g:15216:2: rule__Operand__Group__0__Impl rule__Operand__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__Operand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0"


    // $ANTLR start "rule__Operand__Group__0__Impl"
    // InternalSQLParser.g:15223:1: rule__Operand__Group__0__Impl : ( ( rule__Operand__Op1Assignment_0 ) ) ;
    public final void rule__Operand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15227:1: ( ( ( rule__Operand__Op1Assignment_0 ) ) )
            // InternalSQLParser.g:15228:1: ( ( rule__Operand__Op1Assignment_0 ) )
            {
            // InternalSQLParser.g:15228:1: ( ( rule__Operand__Op1Assignment_0 ) )
            // InternalSQLParser.g:15229:2: ( rule__Operand__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }
            // InternalSQLParser.g:15230:2: ( rule__Operand__Op1Assignment_0 )
            // InternalSQLParser.g:15230:3: rule__Operand__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0__Impl"


    // $ANTLR start "rule__Operand__Group__1"
    // InternalSQLParser.g:15238:1: rule__Operand__Group__1 : rule__Operand__Group__1__Impl ;
    public final void rule__Operand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15242:1: ( rule__Operand__Group__1__Impl )
            // InternalSQLParser.g:15243:2: rule__Operand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1"


    // $ANTLR start "rule__Operand__Group__1__Impl"
    // InternalSQLParser.g:15249:1: rule__Operand__Group__1__Impl : ( ( rule__Operand__Group_1__0 )* ) ;
    public final void rule__Operand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15253:1: ( ( ( rule__Operand__Group_1__0 )* ) )
            // InternalSQLParser.g:15254:1: ( ( rule__Operand__Group_1__0 )* )
            {
            // InternalSQLParser.g:15254:1: ( ( rule__Operand__Group_1__0 )* )
            // InternalSQLParser.g:15255:2: ( rule__Operand__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:15256:2: ( rule__Operand__Group_1__0 )*
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==RULE_STAR) ) {
                    int LA144_2 = input.LA(2);

                    if ( (LA144_2==LeftParenthesis) ) {
                        int LA144_4 = input.LA(3);

                        if ( (LA144_4==SELECT) ) {
                            alt144=1;
                        }


                    }
                    else if ( (LA144_2==EXTRACT||LA144_2==CAST||LA144_2==CASE||(LA144_2>=RULE_JRPARAM && LA144_2<=RULE_JRNPARAM)||(LA144_2>=RULE_UNSIGNED && LA144_2<=RULE_SIGNED_DOUBLE)||(LA144_2>=RULE_STRING_ && LA144_2<=RULE_ID)) ) {
                        alt144=1;
                    }


                }
                else if ( (LA144_0==VerticalLineVerticalLine||LA144_0==PlusSign||LA144_0==HyphenMinus||LA144_0==Solidus) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    // InternalSQLParser.g:15256:3: rule__Operand__Group_1__0
            	    {
            	    pushFollow(FOLLOW_82);
            	    rule__Operand__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1__Impl"


    // $ANTLR start "rule__Operand__Group_1__0"
    // InternalSQLParser.g:15265:1: rule__Operand__Group_1__0 : rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 ;
    public final void rule__Operand__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15269:1: ( rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 )
            // InternalSQLParser.g:15270:2: rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1
            {
            pushFollow(FOLLOW_69);
            rule__Operand__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0"


    // $ANTLR start "rule__Operand__Group_1__0__Impl"
    // InternalSQLParser.g:15277:1: rule__Operand__Group_1__0__Impl : ( ( rule__Operand__Alternatives_1_0 ) ) ;
    public final void rule__Operand__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15281:1: ( ( ( rule__Operand__Alternatives_1_0 ) ) )
            // InternalSQLParser.g:15282:1: ( ( rule__Operand__Alternatives_1_0 ) )
            {
            // InternalSQLParser.g:15282:1: ( ( rule__Operand__Alternatives_1_0 ) )
            // InternalSQLParser.g:15283:2: ( rule__Operand__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }
            // InternalSQLParser.g:15284:2: ( rule__Operand__Alternatives_1_0 )
            // InternalSQLParser.g:15284:3: rule__Operand__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1__1"
    // InternalSQLParser.g:15292:1: rule__Operand__Group_1__1 : rule__Operand__Group_1__1__Impl ;
    public final void rule__Operand__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15296:1: ( rule__Operand__Group_1__1__Impl )
            // InternalSQLParser.g:15297:2: rule__Operand__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1"


    // $ANTLR start "rule__Operand__Group_1__1__Impl"
    // InternalSQLParser.g:15303:1: rule__Operand__Group_1__1__Impl : ( ( rule__Operand__RightAssignment_1_1 ) ) ;
    public final void rule__Operand__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15307:1: ( ( ( rule__Operand__RightAssignment_1_1 ) ) )
            // InternalSQLParser.g:15308:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            {
            // InternalSQLParser.g:15308:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            // InternalSQLParser.g:15309:2: ( rule__Operand__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }
            // InternalSQLParser.g:15310:2: ( rule__Operand__RightAssignment_1_1 )
            // InternalSQLParser.g:15310:3: rule__Operand__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Operand__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__0"
    // InternalSQLParser.g:15319:1: rule__Operand__Group_1_0_0__0 : rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 ;
    public final void rule__Operand__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15323:1: ( rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 )
            // InternalSQLParser.g:15324:2: rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1
            {
            pushFollow(FOLLOW_83);
            rule__Operand__Group_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0"


    // $ANTLR start "rule__Operand__Group_1_0_0__0__Impl"
    // InternalSQLParser.g:15331:1: rule__Operand__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15335:1: ( ( () ) )
            // InternalSQLParser.g:15336:1: ( () )
            {
            // InternalSQLParser.g:15336:1: ( () )
            // InternalSQLParser.g:15337:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }
            // InternalSQLParser.g:15338:2: ()
            // InternalSQLParser.g:15338:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__1"
    // InternalSQLParser.g:15346:1: rule__Operand__Group_1_0_0__1 : rule__Operand__Group_1_0_0__1__Impl ;
    public final void rule__Operand__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15350:1: ( rule__Operand__Group_1_0_0__1__Impl )
            // InternalSQLParser.g:15351:2: rule__Operand__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1"


    // $ANTLR start "rule__Operand__Group_1_0_0__1__Impl"
    // InternalSQLParser.g:15357:1: rule__Operand__Group_1_0_0__1__Impl : ( PlusSign ) ;
    public final void rule__Operand__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15361:1: ( ( PlusSign ) )
            // InternalSQLParser.g:15362:1: ( PlusSign )
            {
            // InternalSQLParser.g:15362:1: ( PlusSign )
            // InternalSQLParser.g:15363:2: PlusSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }
            match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__0"
    // InternalSQLParser.g:15373:1: rule__Operand__Group_1_0_1__0 : rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 ;
    public final void rule__Operand__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15377:1: ( rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 )
            // InternalSQLParser.g:15378:2: rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1
            {
            pushFollow(FOLLOW_84);
            rule__Operand__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0"


    // $ANTLR start "rule__Operand__Group_1_0_1__0__Impl"
    // InternalSQLParser.g:15385:1: rule__Operand__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15389:1: ( ( () ) )
            // InternalSQLParser.g:15390:1: ( () )
            {
            // InternalSQLParser.g:15390:1: ( () )
            // InternalSQLParser.g:15391:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }
            // InternalSQLParser.g:15392:2: ()
            // InternalSQLParser.g:15392:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__1"
    // InternalSQLParser.g:15400:1: rule__Operand__Group_1_0_1__1 : rule__Operand__Group_1_0_1__1__Impl ;
    public final void rule__Operand__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15404:1: ( rule__Operand__Group_1_0_1__1__Impl )
            // InternalSQLParser.g:15405:2: rule__Operand__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1"


    // $ANTLR start "rule__Operand__Group_1_0_1__1__Impl"
    // InternalSQLParser.g:15411:1: rule__Operand__Group_1_0_1__1__Impl : ( HyphenMinus ) ;
    public final void rule__Operand__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15415:1: ( ( HyphenMinus ) )
            // InternalSQLParser.g:15416:1: ( HyphenMinus )
            {
            // InternalSQLParser.g:15416:1: ( HyphenMinus )
            // InternalSQLParser.g:15417:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__0"
    // InternalSQLParser.g:15427:1: rule__Operand__Group_1_0_2__0 : rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 ;
    public final void rule__Operand__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15431:1: ( rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 )
            // InternalSQLParser.g:15432:2: rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1
            {
            pushFollow(FOLLOW_85);
            rule__Operand__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0"


    // $ANTLR start "rule__Operand__Group_1_0_2__0__Impl"
    // InternalSQLParser.g:15439:1: rule__Operand__Group_1_0_2__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15443:1: ( ( () ) )
            // InternalSQLParser.g:15444:1: ( () )
            {
            // InternalSQLParser.g:15444:1: ( () )
            // InternalSQLParser.g:15445:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }
            // InternalSQLParser.g:15446:2: ()
            // InternalSQLParser.g:15446:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__1"
    // InternalSQLParser.g:15454:1: rule__Operand__Group_1_0_2__1 : rule__Operand__Group_1_0_2__1__Impl ;
    public final void rule__Operand__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15458:1: ( rule__Operand__Group_1_0_2__1__Impl )
            // InternalSQLParser.g:15459:2: rule__Operand__Group_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1"


    // $ANTLR start "rule__Operand__Group_1_0_2__1__Impl"
    // InternalSQLParser.g:15465:1: rule__Operand__Group_1_0_2__1__Impl : ( VerticalLineVerticalLine ) ;
    public final void rule__Operand__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15469:1: ( ( VerticalLineVerticalLine ) )
            // InternalSQLParser.g:15470:1: ( VerticalLineVerticalLine )
            {
            // InternalSQLParser.g:15470:1: ( VerticalLineVerticalLine )
            // InternalSQLParser.g:15471:2: VerticalLineVerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }
            match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__0"
    // InternalSQLParser.g:15481:1: rule__Operand__Group_1_0_3__0 : rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 ;
    public final void rule__Operand__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15485:1: ( rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 )
            // InternalSQLParser.g:15486:2: rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1
            {
            pushFollow(FOLLOW_63);
            rule__Operand__Group_1_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0"


    // $ANTLR start "rule__Operand__Group_1_0_3__0__Impl"
    // InternalSQLParser.g:15493:1: rule__Operand__Group_1_0_3__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15497:1: ( ( () ) )
            // InternalSQLParser.g:15498:1: ( () )
            {
            // InternalSQLParser.g:15498:1: ( () )
            // InternalSQLParser.g:15499:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }
            // InternalSQLParser.g:15500:2: ()
            // InternalSQLParser.g:15500:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__1"
    // InternalSQLParser.g:15508:1: rule__Operand__Group_1_0_3__1 : rule__Operand__Group_1_0_3__1__Impl ;
    public final void rule__Operand__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15512:1: ( rule__Operand__Group_1_0_3__1__Impl )
            // InternalSQLParser.g:15513:2: rule__Operand__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1"


    // $ANTLR start "rule__Operand__Group_1_0_3__1__Impl"
    // InternalSQLParser.g:15519:1: rule__Operand__Group_1_0_3__1__Impl : ( RULE_STAR ) ;
    public final void rule__Operand__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15523:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:15524:1: ( RULE_STAR )
            {
            // InternalSQLParser.g:15524:1: ( RULE_STAR )
            // InternalSQLParser.g:15525:2: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__0"
    // InternalSQLParser.g:15535:1: rule__Operand__Group_1_0_4__0 : rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 ;
    public final void rule__Operand__Group_1_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15539:1: ( rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 )
            // InternalSQLParser.g:15540:2: rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1
            {
            pushFollow(FOLLOW_81);
            rule__Operand__Group_1_0_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0"


    // $ANTLR start "rule__Operand__Group_1_0_4__0__Impl"
    // InternalSQLParser.g:15547:1: rule__Operand__Group_1_0_4__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15551:1: ( ( () ) )
            // InternalSQLParser.g:15552:1: ( () )
            {
            // InternalSQLParser.g:15552:1: ( () )
            // InternalSQLParser.g:15553:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }
            // InternalSQLParser.g:15554:2: ()
            // InternalSQLParser.g:15554:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__1"
    // InternalSQLParser.g:15562:1: rule__Operand__Group_1_0_4__1 : rule__Operand__Group_1_0_4__1__Impl ;
    public final void rule__Operand__Group_1_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15566:1: ( rule__Operand__Group_1_0_4__1__Impl )
            // InternalSQLParser.g:15567:2: rule__Operand__Group_1_0_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1"


    // $ANTLR start "rule__Operand__Group_1_0_4__1__Impl"
    // InternalSQLParser.g:15573:1: rule__Operand__Group_1_0_4__1__Impl : ( Solidus ) ;
    public final void rule__Operand__Group_1_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15577:1: ( ( Solidus ) )
            // InternalSQLParser.g:15578:1: ( Solidus )
            {
            // InternalSQLParser.g:15578:1: ( Solidus )
            // InternalSQLParser.g:15579:2: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__0"
    // InternalSQLParser.g:15589:1: rule__OperandFunction__Group__0 : rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 ;
    public final void rule__OperandFunction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15593:1: ( rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 )
            // InternalSQLParser.g:15594:2: rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__OperandFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0"


    // $ANTLR start "rule__OperandFunction__Group__0__Impl"
    // InternalSQLParser.g:15601:1: rule__OperandFunction__Group__0__Impl : ( () ) ;
    public final void rule__OperandFunction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15605:1: ( ( () ) )
            // InternalSQLParser.g:15606:1: ( () )
            {
            // InternalSQLParser.g:15606:1: ( () )
            // InternalSQLParser.g:15607:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }
            // InternalSQLParser.g:15608:2: ()
            // InternalSQLParser.g:15608:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0__Impl"


    // $ANTLR start "rule__OperandFunction__Group__1"
    // InternalSQLParser.g:15616:1: rule__OperandFunction__Group__1 : rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 ;
    public final void rule__OperandFunction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15620:1: ( rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 )
            // InternalSQLParser.g:15621:2: rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2
            {
            pushFollow(FOLLOW_86);
            rule__OperandFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1"


    // $ANTLR start "rule__OperandFunction__Group__1__Impl"
    // InternalSQLParser.g:15628:1: rule__OperandFunction__Group__1__Impl : ( ( rule__OperandFunction__FnameAssignment_1 ) ) ;
    public final void rule__OperandFunction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15632:1: ( ( ( rule__OperandFunction__FnameAssignment_1 ) ) )
            // InternalSQLParser.g:15633:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            {
            // InternalSQLParser.g:15633:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            // InternalSQLParser.g:15634:2: ( rule__OperandFunction__FnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }
            // InternalSQLParser.g:15635:2: ( rule__OperandFunction__FnameAssignment_1 )
            // InternalSQLParser.g:15635:3: rule__OperandFunction__FnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__FnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__2"
    // InternalSQLParser.g:15643:1: rule__OperandFunction__Group__2 : rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 ;
    public final void rule__OperandFunction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15647:1: ( rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 )
            // InternalSQLParser.g:15648:2: rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3
            {
            pushFollow(FOLLOW_86);
            rule__OperandFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2"


    // $ANTLR start "rule__OperandFunction__Group__2__Impl"
    // InternalSQLParser.g:15655:1: rule__OperandFunction__Group__2__Impl : ( ( rule__OperandFunction__Alternatives_2 )? ) ;
    public final void rule__OperandFunction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15659:1: ( ( ( rule__OperandFunction__Alternatives_2 )? ) )
            // InternalSQLParser.g:15660:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            {
            // InternalSQLParser.g:15660:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            // InternalSQLParser.g:15661:2: ( rule__OperandFunction__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:15662:2: ( rule__OperandFunction__Alternatives_2 )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==DISTINCT||LA145_0==EXTRACT||LA145_0==CAST||LA145_0==CASE||LA145_0==ALL||LA145_0==LeftParenthesis||(LA145_0>=RULE_JRPARAM && LA145_0<=RULE_SIGNED_DOUBLE)||(LA145_0>=RULE_STRING_ && LA145_0<=RULE_ID)) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalSQLParser.g:15662:3: rule__OperandFunction__Alternatives_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2__Impl"


    // $ANTLR start "rule__OperandFunction__Group__3"
    // InternalSQLParser.g:15670:1: rule__OperandFunction__Group__3 : rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 ;
    public final void rule__OperandFunction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15674:1: ( rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 )
            // InternalSQLParser.g:15675:2: rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4
            {
            pushFollow(FOLLOW_87);
            rule__OperandFunction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3"


    // $ANTLR start "rule__OperandFunction__Group__3__Impl"
    // InternalSQLParser.g:15682:1: rule__OperandFunction__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__OperandFunction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15686:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:15687:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:15687:1: ( RightParenthesis )
            // InternalSQLParser.g:15688:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3__Impl"


    // $ANTLR start "rule__OperandFunction__Group__4"
    // InternalSQLParser.g:15697:1: rule__OperandFunction__Group__4 : rule__OperandFunction__Group__4__Impl ;
    public final void rule__OperandFunction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15701:1: ( rule__OperandFunction__Group__4__Impl )
            // InternalSQLParser.g:15702:2: rule__OperandFunction__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4"


    // $ANTLR start "rule__OperandFunction__Group__4__Impl"
    // InternalSQLParser.g:15708:1: rule__OperandFunction__Group__4__Impl : ( ( rule__OperandFunction__FanAssignment_4 )? ) ;
    public final void rule__OperandFunction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15712:1: ( ( ( rule__OperandFunction__FanAssignment_4 )? ) )
            // InternalSQLParser.g:15713:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            {
            // InternalSQLParser.g:15713:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            // InternalSQLParser.g:15714:2: ( rule__OperandFunction__FanAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }
            // InternalSQLParser.g:15715:2: ( rule__OperandFunction__FanAssignment_4 )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==OVER) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalSQLParser.g:15715:3: rule__OperandFunction__FanAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__FanAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__0"
    // InternalSQLParser.g:15724:1: rule__FunctionExtract__Group__0 : rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 ;
    public final void rule__FunctionExtract__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15728:1: ( rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 )
            // InternalSQLParser.g:15729:2: rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FunctionExtract__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0"


    // $ANTLR start "rule__FunctionExtract__Group__0__Impl"
    // InternalSQLParser.g:15736:1: rule__FunctionExtract__Group__0__Impl : ( EXTRACT ) ;
    public final void rule__FunctionExtract__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15740:1: ( ( EXTRACT ) )
            // InternalSQLParser.g:15741:1: ( EXTRACT )
            {
            // InternalSQLParser.g:15741:1: ( EXTRACT )
            // InternalSQLParser.g:15742:2: EXTRACT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }
            match(input,EXTRACT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__1"
    // InternalSQLParser.g:15751:1: rule__FunctionExtract__Group__1 : rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 ;
    public final void rule__FunctionExtract__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15755:1: ( rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 )
            // InternalSQLParser.g:15756:2: rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2
            {
            pushFollow(FOLLOW_88);
            rule__FunctionExtract__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1"


    // $ANTLR start "rule__FunctionExtract__Group__1__Impl"
    // InternalSQLParser.g:15763:1: rule__FunctionExtract__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionExtract__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15767:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:15768:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:15768:1: ( LeftParenthesis )
            // InternalSQLParser.g:15769:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__2"
    // InternalSQLParser.g:15778:1: rule__FunctionExtract__Group__2 : rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 ;
    public final void rule__FunctionExtract__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15782:1: ( rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 )
            // InternalSQLParser.g:15783:2: rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3
            {
            pushFollow(FOLLOW_36);
            rule__FunctionExtract__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2"


    // $ANTLR start "rule__FunctionExtract__Group__2__Impl"
    // InternalSQLParser.g:15790:1: rule__FunctionExtract__Group__2__Impl : ( ( rule__FunctionExtract__VAssignment_2 ) ) ;
    public final void rule__FunctionExtract__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15794:1: ( ( ( rule__FunctionExtract__VAssignment_2 ) ) )
            // InternalSQLParser.g:15795:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            {
            // InternalSQLParser.g:15795:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            // InternalSQLParser.g:15796:2: ( rule__FunctionExtract__VAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }
            // InternalSQLParser.g:15797:2: ( rule__FunctionExtract__VAssignment_2 )
            // InternalSQLParser.g:15797:3: rule__FunctionExtract__VAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__VAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__3"
    // InternalSQLParser.g:15805:1: rule__FunctionExtract__Group__3 : rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 ;
    public final void rule__FunctionExtract__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15809:1: ( rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 )
            // InternalSQLParser.g:15810:2: rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4
            {
            pushFollow(FOLLOW_69);
            rule__FunctionExtract__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3"


    // $ANTLR start "rule__FunctionExtract__Group__3__Impl"
    // InternalSQLParser.g:15817:1: rule__FunctionExtract__Group__3__Impl : ( FROM ) ;
    public final void rule__FunctionExtract__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15821:1: ( ( FROM ) )
            // InternalSQLParser.g:15822:1: ( FROM )
            {
            // InternalSQLParser.g:15822:1: ( FROM )
            // InternalSQLParser.g:15823:2: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__4"
    // InternalSQLParser.g:15832:1: rule__FunctionExtract__Group__4 : rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 ;
    public final void rule__FunctionExtract__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15836:1: ( rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 )
            // InternalSQLParser.g:15837:2: rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5
            {
            pushFollow(FOLLOW_11);
            rule__FunctionExtract__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4"


    // $ANTLR start "rule__FunctionExtract__Group__4__Impl"
    // InternalSQLParser.g:15844:1: rule__FunctionExtract__Group__4__Impl : ( ( rule__FunctionExtract__OperandAssignment_4 ) ) ;
    public final void rule__FunctionExtract__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15848:1: ( ( ( rule__FunctionExtract__OperandAssignment_4 ) ) )
            // InternalSQLParser.g:15849:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            {
            // InternalSQLParser.g:15849:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            // InternalSQLParser.g:15850:2: ( rule__FunctionExtract__OperandAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }
            // InternalSQLParser.g:15851:2: ( rule__FunctionExtract__OperandAssignment_4 )
            // InternalSQLParser.g:15851:3: rule__FunctionExtract__OperandAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__OperandAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__5"
    // InternalSQLParser.g:15859:1: rule__FunctionExtract__Group__5 : rule__FunctionExtract__Group__5__Impl ;
    public final void rule__FunctionExtract__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15863:1: ( rule__FunctionExtract__Group__5__Impl )
            // InternalSQLParser.g:15864:2: rule__FunctionExtract__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5"


    // $ANTLR start "rule__FunctionExtract__Group__5__Impl"
    // InternalSQLParser.g:15870:1: rule__FunctionExtract__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionExtract__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15874:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:15875:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:15875:1: ( RightParenthesis )
            // InternalSQLParser.g:15876:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__0"
    // InternalSQLParser.g:15886:1: rule__FunctionAnalytical__Group__0 : rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 ;
    public final void rule__FunctionAnalytical__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15890:1: ( rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 )
            // InternalSQLParser.g:15891:2: rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FunctionAnalytical__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0"


    // $ANTLR start "rule__FunctionAnalytical__Group__0__Impl"
    // InternalSQLParser.g:15898:1: rule__FunctionAnalytical__Group__0__Impl : ( OVER ) ;
    public final void rule__FunctionAnalytical__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15902:1: ( ( OVER ) )
            // InternalSQLParser.g:15903:1: ( OVER )
            {
            // InternalSQLParser.g:15903:1: ( OVER )
            // InternalSQLParser.g:15904:2: OVER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }
            match(input,OVER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__1"
    // InternalSQLParser.g:15913:1: rule__FunctionAnalytical__Group__1 : rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 ;
    public final void rule__FunctionAnalytical__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15917:1: ( rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 )
            // InternalSQLParser.g:15918:2: rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2
            {
            pushFollow(FOLLOW_89);
            rule__FunctionAnalytical__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1"


    // $ANTLR start "rule__FunctionAnalytical__Group__1__Impl"
    // InternalSQLParser.g:15925:1: rule__FunctionAnalytical__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15929:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:15930:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:15930:1: ( LeftParenthesis )
            // InternalSQLParser.g:15931:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__2"
    // InternalSQLParser.g:15940:1: rule__FunctionAnalytical__Group__2 : rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 ;
    public final void rule__FunctionAnalytical__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15944:1: ( rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 )
            // InternalSQLParser.g:15945:2: rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__FunctionAnalytical__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2"


    // $ANTLR start "rule__FunctionAnalytical__Group__2__Impl"
    // InternalSQLParser.g:15952:1: rule__FunctionAnalytical__Group__2__Impl : ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) ;
    public final void rule__FunctionAnalytical__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15956:1: ( ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) )
            // InternalSQLParser.g:15957:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            {
            // InternalSQLParser.g:15957:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            // InternalSQLParser.g:15958:2: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }
            // InternalSQLParser.g:15959:2: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            // InternalSQLParser.g:15959:3: rule__FunctionAnalytical__AnClauseAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__AnClauseAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__3"
    // InternalSQLParser.g:15967:1: rule__FunctionAnalytical__Group__3 : rule__FunctionAnalytical__Group__3__Impl ;
    public final void rule__FunctionAnalytical__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15971:1: ( rule__FunctionAnalytical__Group__3__Impl )
            // InternalSQLParser.g:15972:2: rule__FunctionAnalytical__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3"


    // $ANTLR start "rule__FunctionAnalytical__Group__3__Impl"
    // InternalSQLParser.g:15978:1: rule__FunctionAnalytical__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15982:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:15983:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:15983:1: ( RightParenthesis )
            // InternalSQLParser.g:15984:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__0"
    // InternalSQLParser.g:15994:1: rule__AnalyticClause__Group__0 : rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 ;
    public final void rule__AnalyticClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:15998:1: ( rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 )
            // InternalSQLParser.g:15999:2: rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1
            {
            pushFollow(FOLLOW_89);
            rule__AnalyticClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0"


    // $ANTLR start "rule__AnalyticClause__Group__0__Impl"
    // InternalSQLParser.g:16006:1: rule__AnalyticClause__Group__0__Impl : ( () ) ;
    public final void rule__AnalyticClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16010:1: ( ( () ) )
            // InternalSQLParser.g:16011:1: ( () )
            {
            // InternalSQLParser.g:16011:1: ( () )
            // InternalSQLParser.g:16012:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }
            // InternalSQLParser.g:16013:2: ()
            // InternalSQLParser.g:16013:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__1"
    // InternalSQLParser.g:16021:1: rule__AnalyticClause__Group__1 : rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 ;
    public final void rule__AnalyticClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16025:1: ( rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 )
            // InternalSQLParser.g:16026:2: rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2
            {
            pushFollow(FOLLOW_89);
            rule__AnalyticClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1"


    // $ANTLR start "rule__AnalyticClause__Group__1__Impl"
    // InternalSQLParser.g:16033:1: rule__AnalyticClause__Group__1__Impl : ( ( rule__AnalyticClause__AbcAssignment_1 )? ) ;
    public final void rule__AnalyticClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16037:1: ( ( ( rule__AnalyticClause__AbcAssignment_1 )? ) )
            // InternalSQLParser.g:16038:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            {
            // InternalSQLParser.g:16038:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            // InternalSQLParser.g:16039:2: ( rule__AnalyticClause__AbcAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }
            // InternalSQLParser.g:16040:2: ( rule__AnalyticClause__AbcAssignment_1 )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==PARTITION) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalSQLParser.g:16040:3: rule__AnalyticClause__AbcAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__AbcAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__2"
    // InternalSQLParser.g:16048:1: rule__AnalyticClause__Group__2 : rule__AnalyticClause__Group__2__Impl ;
    public final void rule__AnalyticClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16052:1: ( rule__AnalyticClause__Group__2__Impl )
            // InternalSQLParser.g:16053:2: rule__AnalyticClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2"


    // $ANTLR start "rule__AnalyticClause__Group__2__Impl"
    // InternalSQLParser.g:16059:1: rule__AnalyticClause__Group__2__Impl : ( ( rule__AnalyticClause__Group_2__0 )? ) ;
    public final void rule__AnalyticClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16063:1: ( ( ( rule__AnalyticClause__Group_2__0 )? ) )
            // InternalSQLParser.g:16064:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            {
            // InternalSQLParser.g:16064:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            // InternalSQLParser.g:16065:2: ( rule__AnalyticClause__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:16066:2: ( rule__AnalyticClause__Group_2__0 )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==ORDER) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSQLParser.g:16066:3: rule__AnalyticClause__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__0"
    // InternalSQLParser.g:16075:1: rule__AnalyticClause__Group_2__0 : rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 ;
    public final void rule__AnalyticClause__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16079:1: ( rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 )
            // InternalSQLParser.g:16080:2: rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1
            {
            pushFollow(FOLLOW_90);
            rule__AnalyticClause__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0"


    // $ANTLR start "rule__AnalyticClause__Group_2__0__Impl"
    // InternalSQLParser.g:16087:1: rule__AnalyticClause__Group_2__0__Impl : ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) ;
    public final void rule__AnalyticClause__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16091:1: ( ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) )
            // InternalSQLParser.g:16092:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            {
            // InternalSQLParser.g:16092:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            // InternalSQLParser.g:16093:2: ( rule__AnalyticClause__ObcAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }
            // InternalSQLParser.g:16094:2: ( rule__AnalyticClause__ObcAssignment_2_0 )
            // InternalSQLParser.g:16094:3: rule__AnalyticClause__ObcAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__ObcAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__1"
    // InternalSQLParser.g:16102:1: rule__AnalyticClause__Group_2__1 : rule__AnalyticClause__Group_2__1__Impl ;
    public final void rule__AnalyticClause__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16106:1: ( rule__AnalyticClause__Group_2__1__Impl )
            // InternalSQLParser.g:16107:2: rule__AnalyticClause__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1"


    // $ANTLR start "rule__AnalyticClause__Group_2__1__Impl"
    // InternalSQLParser.g:16113:1: rule__AnalyticClause__Group_2__1__Impl : ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) ;
    public final void rule__AnalyticClause__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16117:1: ( ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) )
            // InternalSQLParser.g:16118:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            {
            // InternalSQLParser.g:16118:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            // InternalSQLParser.g:16119:2: ( rule__AnalyticClause__WincAssignment_2_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }
            // InternalSQLParser.g:16120:2: ( rule__AnalyticClause__WincAssignment_2_1 )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==RANGE||LA149_0==ROWS) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSQLParser.g:16120:3: rule__AnalyticClause__WincAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__WincAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1__Impl"


    // $ANTLR start "rule__WindowingClause__Group__0"
    // InternalSQLParser.g:16129:1: rule__WindowingClause__Group__0 : rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 ;
    public final void rule__WindowingClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16133:1: ( rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 )
            // InternalSQLParser.g:16134:2: rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1
            {
            pushFollow(FOLLOW_91);
            rule__WindowingClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0"


    // $ANTLR start "rule__WindowingClause__Group__0__Impl"
    // InternalSQLParser.g:16141:1: rule__WindowingClause__Group__0__Impl : ( ( rule__WindowingClause__Alternatives_0 ) ) ;
    public final void rule__WindowingClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16145:1: ( ( ( rule__WindowingClause__Alternatives_0 ) ) )
            // InternalSQLParser.g:16146:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            {
            // InternalSQLParser.g:16146:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            // InternalSQLParser.g:16147:2: ( rule__WindowingClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:16148:2: ( rule__WindowingClause__Alternatives_0 )
            // InternalSQLParser.g:16148:3: rule__WindowingClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0__Impl"


    // $ANTLR start "rule__WindowingClause__Group__1"
    // InternalSQLParser.g:16156:1: rule__WindowingClause__Group__1 : rule__WindowingClause__Group__1__Impl ;
    public final void rule__WindowingClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16160:1: ( rule__WindowingClause__Group__1__Impl )
            // InternalSQLParser.g:16161:2: rule__WindowingClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1"


    // $ANTLR start "rule__WindowingClause__Group__1__Impl"
    // InternalSQLParser.g:16167:1: rule__WindowingClause__Group__1__Impl : ( ( rule__WindowingClause__Alternatives_1 ) ) ;
    public final void rule__WindowingClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16171:1: ( ( ( rule__WindowingClause__Alternatives_1 ) ) )
            // InternalSQLParser.g:16172:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            {
            // InternalSQLParser.g:16172:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            // InternalSQLParser.g:16173:2: ( rule__WindowingClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:16174:2: ( rule__WindowingClause__Alternatives_1 )
            // InternalSQLParser.g:16174:3: rule__WindowingClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0"
    // InternalSQLParser.g:16183:1: rule__WindowingClauseBetween__Group__0 : rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 ;
    public final void rule__WindowingClauseBetween__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16187:1: ( rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 )
            // InternalSQLParser.g:16188:2: rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1
            {
            pushFollow(FOLLOW_91);
            rule__WindowingClauseBetween__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0__Impl"
    // InternalSQLParser.g:16195:1: rule__WindowingClauseBetween__Group__0__Impl : ( BETWEEN ) ;
    public final void rule__WindowingClauseBetween__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16199:1: ( ( BETWEEN ) )
            // InternalSQLParser.g:16200:1: ( BETWEEN )
            {
            // InternalSQLParser.g:16200:1: ( BETWEEN )
            // InternalSQLParser.g:16201:2: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1"
    // InternalSQLParser.g:16210:1: rule__WindowingClauseBetween__Group__1 : rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 ;
    public final void rule__WindowingClauseBetween__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16214:1: ( rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 )
            // InternalSQLParser.g:16215:2: rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2
            {
            pushFollow(FOLLOW_77);
            rule__WindowingClauseBetween__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1__Impl"
    // InternalSQLParser.g:16222:1: rule__WindowingClauseBetween__Group__1__Impl : ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) ;
    public final void rule__WindowingClauseBetween__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16226:1: ( ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) )
            // InternalSQLParser.g:16227:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            {
            // InternalSQLParser.g:16227:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            // InternalSQLParser.g:16228:2: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }
            // InternalSQLParser.g:16229:2: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            // InternalSQLParser.g:16229:3: rule__WindowingClauseBetween__WcoPAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoPAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2"
    // InternalSQLParser.g:16237:1: rule__WindowingClauseBetween__Group__2 : rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 ;
    public final void rule__WindowingClauseBetween__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16241:1: ( rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 )
            // InternalSQLParser.g:16242:2: rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3
            {
            pushFollow(FOLLOW_91);
            rule__WindowingClauseBetween__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2__Impl"
    // InternalSQLParser.g:16249:1: rule__WindowingClauseBetween__Group__2__Impl : ( AND ) ;
    public final void rule__WindowingClauseBetween__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16253:1: ( ( AND ) )
            // InternalSQLParser.g:16254:1: ( AND )
            {
            // InternalSQLParser.g:16254:1: ( AND )
            // InternalSQLParser.g:16255:2: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3"
    // InternalSQLParser.g:16264:1: rule__WindowingClauseBetween__Group__3 : rule__WindowingClauseBetween__Group__3__Impl ;
    public final void rule__WindowingClauseBetween__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16268:1: ( rule__WindowingClauseBetween__Group__3__Impl )
            // InternalSQLParser.g:16269:2: rule__WindowingClauseBetween__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3__Impl"
    // InternalSQLParser.g:16275:1: rule__WindowingClauseBetween__Group__3__Impl : ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) ;
    public final void rule__WindowingClauseBetween__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16279:1: ( ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) )
            // InternalSQLParser.g:16280:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            {
            // InternalSQLParser.g:16280:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            // InternalSQLParser.g:16281:2: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }
            // InternalSQLParser.g:16282:2: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            // InternalSQLParser.g:16282:3: rule__WindowingClauseBetween__WcoFAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoFAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0"
    // InternalSQLParser.g:16291:1: rule__WindowingClauseOperandFollowing__Group__0 : rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16295:1: ( rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 )
            // InternalSQLParser.g:16296:2: rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1
            {
            pushFollow(FOLLOW_91);
            rule__WindowingClauseOperandFollowing__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0__Impl"
    // InternalSQLParser.g:16303:1: rule__WindowingClauseOperandFollowing__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16307:1: ( ( () ) )
            // InternalSQLParser.g:16308:1: ( () )
            {
            // InternalSQLParser.g:16308:1: ( () )
            // InternalSQLParser.g:16309:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }
            // InternalSQLParser.g:16310:2: ()
            // InternalSQLParser.g:16310:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1"
    // InternalSQLParser.g:16318:1: rule__WindowingClauseOperandFollowing__Group__1 : rule__WindowingClauseOperandFollowing__Group__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16322:1: ( rule__WindowingClauseOperandFollowing__Group__1__Impl )
            // InternalSQLParser.g:16323:2: rule__WindowingClauseOperandFollowing__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1__Impl"
    // InternalSQLParser.g:16329:1: rule__WindowingClauseOperandFollowing__Group__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16333:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) )
            // InternalSQLParser.g:16334:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            {
            // InternalSQLParser.g:16334:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            // InternalSQLParser.g:16335:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:16336:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            // InternalSQLParser.g:16336:3: rule__WindowingClauseOperandFollowing__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0"
    // InternalSQLParser.g:16345:1: rule__WindowingClauseOperandFollowing__Group_1_0__0 : rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16349:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 )
            // InternalSQLParser.g:16350:2: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1
            {
            pushFollow(FOLLOW_92);
            rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"
    // InternalSQLParser.g:16357:1: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16361:1: ( ( UNBOUNDED ) )
            // InternalSQLParser.g:16362:1: ( UNBOUNDED )
            {
            // InternalSQLParser.g:16362:1: ( UNBOUNDED )
            // InternalSQLParser.g:16363:2: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1"
    // InternalSQLParser.g:16372:1: rule__WindowingClauseOperandFollowing__Group_1_0__1 : rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16376:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl )
            // InternalSQLParser.g:16377:2: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"
    // InternalSQLParser.g:16383:1: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl : ( KW_FOLLOWING ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16387:1: ( ( KW_FOLLOWING ) )
            // InternalSQLParser.g:16388:1: ( KW_FOLLOWING )
            {
            // InternalSQLParser.g:16388:1: ( KW_FOLLOWING )
            // InternalSQLParser.g:16389:2: KW_FOLLOWING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }
            match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0"
    // InternalSQLParser.g:16399:1: rule__WindowingClauseOperandFollowing__Group_1_1__0 : rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16403:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 )
            // InternalSQLParser.g:16404:2: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1
            {
            pushFollow(FOLLOW_93);
            rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"
    // InternalSQLParser.g:16411:1: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16415:1: ( ( CURRENT ) )
            // InternalSQLParser.g:16416:1: ( CURRENT )
            {
            // InternalSQLParser.g:16416:1: ( CURRENT )
            // InternalSQLParser.g:16417:2: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1"
    // InternalSQLParser.g:16426:1: rule__WindowingClauseOperandFollowing__Group_1_1__1 : rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16430:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl )
            // InternalSQLParser.g:16431:2: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"
    // InternalSQLParser.g:16437:1: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16441:1: ( ( ROW ) )
            // InternalSQLParser.g:16442:1: ( ROW )
            {
            // InternalSQLParser.g:16442:1: ( ROW )
            // InternalSQLParser.g:16443:2: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0"
    // InternalSQLParser.g:16453:1: rule__WindowingClauseOperandFollowing__Group_1_2__0 : rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16457:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 )
            // InternalSQLParser.g:16458:2: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1
            {
            pushFollow(FOLLOW_94);
            rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"
    // InternalSQLParser.g:16465:1: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16469:1: ( ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) )
            // InternalSQLParser.g:16470:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            {
            // InternalSQLParser.g:16470:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            // InternalSQLParser.g:16471:2: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }
            // InternalSQLParser.g:16472:2: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            // InternalSQLParser.g:16472:3: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1"
    // InternalSQLParser.g:16480:1: rule__WindowingClauseOperandFollowing__Group_1_2__1 : rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16484:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl )
            // InternalSQLParser.g:16485:2: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"
    // InternalSQLParser.g:16491:1: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16495:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) )
            // InternalSQLParser.g:16496:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            {
            // InternalSQLParser.g:16496:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            // InternalSQLParser.g:16497:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSQLParser.g:16498:2: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            // InternalSQLParser.g:16498:3: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0"
    // InternalSQLParser.g:16507:1: rule__WindowingClauseOperandPreceding__Group__0 : rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16511:1: ( rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 )
            // InternalSQLParser.g:16512:2: rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1
            {
            pushFollow(FOLLOW_91);
            rule__WindowingClauseOperandPreceding__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0__Impl"
    // InternalSQLParser.g:16519:1: rule__WindowingClauseOperandPreceding__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16523:1: ( ( () ) )
            // InternalSQLParser.g:16524:1: ( () )
            {
            // InternalSQLParser.g:16524:1: ( () )
            // InternalSQLParser.g:16525:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }
            // InternalSQLParser.g:16526:2: ()
            // InternalSQLParser.g:16526:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1"
    // InternalSQLParser.g:16534:1: rule__WindowingClauseOperandPreceding__Group__1 : rule__WindowingClauseOperandPreceding__Group__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16538:1: ( rule__WindowingClauseOperandPreceding__Group__1__Impl )
            // InternalSQLParser.g:16539:2: rule__WindowingClauseOperandPreceding__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1__Impl"
    // InternalSQLParser.g:16545:1: rule__WindowingClauseOperandPreceding__Group__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16549:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) )
            // InternalSQLParser.g:16550:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            {
            // InternalSQLParser.g:16550:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            // InternalSQLParser.g:16551:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:16552:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            // InternalSQLParser.g:16552:3: rule__WindowingClauseOperandPreceding__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0"
    // InternalSQLParser.g:16561:1: rule__WindowingClauseOperandPreceding__Group_1_0__0 : rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16565:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 )
            // InternalSQLParser.g:16566:2: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1
            {
            pushFollow(FOLLOW_95);
            rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"
    // InternalSQLParser.g:16573:1: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16577:1: ( ( UNBOUNDED ) )
            // InternalSQLParser.g:16578:1: ( UNBOUNDED )
            {
            // InternalSQLParser.g:16578:1: ( UNBOUNDED )
            // InternalSQLParser.g:16579:2: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1"
    // InternalSQLParser.g:16588:1: rule__WindowingClauseOperandPreceding__Group_1_0__1 : rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16592:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl )
            // InternalSQLParser.g:16593:2: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"
    // InternalSQLParser.g:16599:1: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl : ( PRECEDING ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16603:1: ( ( PRECEDING ) )
            // InternalSQLParser.g:16604:1: ( PRECEDING )
            {
            // InternalSQLParser.g:16604:1: ( PRECEDING )
            // InternalSQLParser.g:16605:2: PRECEDING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }
            match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0"
    // InternalSQLParser.g:16615:1: rule__WindowingClauseOperandPreceding__Group_1_1__0 : rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16619:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 )
            // InternalSQLParser.g:16620:2: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1
            {
            pushFollow(FOLLOW_93);
            rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"
    // InternalSQLParser.g:16627:1: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16631:1: ( ( CURRENT ) )
            // InternalSQLParser.g:16632:1: ( CURRENT )
            {
            // InternalSQLParser.g:16632:1: ( CURRENT )
            // InternalSQLParser.g:16633:2: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1"
    // InternalSQLParser.g:16642:1: rule__WindowingClauseOperandPreceding__Group_1_1__1 : rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16646:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl )
            // InternalSQLParser.g:16647:2: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"
    // InternalSQLParser.g:16653:1: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16657:1: ( ( ROW ) )
            // InternalSQLParser.g:16658:1: ( ROW )
            {
            // InternalSQLParser.g:16658:1: ( ROW )
            // InternalSQLParser.g:16659:2: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0"
    // InternalSQLParser.g:16669:1: rule__WindowingClauseOperandPreceding__Group_1_2__0 : rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16673:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 )
            // InternalSQLParser.g:16674:2: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1
            {
            pushFollow(FOLLOW_94);
            rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"
    // InternalSQLParser.g:16681:1: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16685:1: ( ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) )
            // InternalSQLParser.g:16686:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            {
            // InternalSQLParser.g:16686:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            // InternalSQLParser.g:16687:2: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }
            // InternalSQLParser.g:16688:2: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            // InternalSQLParser.g:16688:3: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1"
    // InternalSQLParser.g:16696:1: rule__WindowingClauseOperandPreceding__Group_1_2__1 : rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16700:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl )
            // InternalSQLParser.g:16701:2: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"
    // InternalSQLParser.g:16707:1: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16711:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) )
            // InternalSQLParser.g:16712:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            {
            // InternalSQLParser.g:16712:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            // InternalSQLParser.g:16713:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSQLParser.g:16714:2: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            // InternalSQLParser.g:16714:3: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group__0"
    // InternalSQLParser.g:16723:1: rule__OrderByClause__Group__0 : rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 ;
    public final void rule__OrderByClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16727:1: ( rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 )
            // InternalSQLParser.g:16728:2: rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1
            {
            pushFollow(FOLLOW_91);
            rule__OrderByClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0"


    // $ANTLR start "rule__OrderByClause__Group__0__Impl"
    // InternalSQLParser.g:16735:1: rule__OrderByClause__Group__0__Impl : ( ( rule__OrderByClause__Alternatives_0 ) ) ;
    public final void rule__OrderByClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16739:1: ( ( ( rule__OrderByClause__Alternatives_0 ) ) )
            // InternalSQLParser.g:16740:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            {
            // InternalSQLParser.g:16740:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            // InternalSQLParser.g:16741:2: ( rule__OrderByClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:16742:2: ( rule__OrderByClause__Alternatives_0 )
            // InternalSQLParser.g:16742:3: rule__OrderByClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group__1"
    // InternalSQLParser.g:16750:1: rule__OrderByClause__Group__1 : rule__OrderByClause__Group__1__Impl ;
    public final void rule__OrderByClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16754:1: ( rule__OrderByClause__Group__1__Impl )
            // InternalSQLParser.g:16755:2: rule__OrderByClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1"


    // $ANTLR start "rule__OrderByClause__Group__1__Impl"
    // InternalSQLParser.g:16761:1: rule__OrderByClause__Group__1__Impl : ( ( rule__OrderByClause__ArgsAssignment_1 ) ) ;
    public final void rule__OrderByClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16765:1: ( ( ( rule__OrderByClause__ArgsAssignment_1 ) ) )
            // InternalSQLParser.g:16766:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            {
            // InternalSQLParser.g:16766:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            // InternalSQLParser.g:16767:2: ( rule__OrderByClause__ArgsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }
            // InternalSQLParser.g:16768:2: ( rule__OrderByClause__ArgsAssignment_1 )
            // InternalSQLParser.g:16768:3: rule__OrderByClause__ArgsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__ArgsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0"
    // InternalSQLParser.g:16777:1: rule__OrderByClause__Group_0_0__0 : rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 ;
    public final void rule__OrderByClause__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16781:1: ( rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 )
            // InternalSQLParser.g:16782:2: rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1
            {
            pushFollow(FOLLOW_42);
            rule__OrderByClause__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0__Impl"
    // InternalSQLParser.g:16789:1: rule__OrderByClause__Group_0_0__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16793:1: ( ( ORDER ) )
            // InternalSQLParser.g:16794:1: ( ORDER )
            {
            // InternalSQLParser.g:16794:1: ( ORDER )
            // InternalSQLParser.g:16795:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1"
    // InternalSQLParser.g:16804:1: rule__OrderByClause__Group_0_0__1 : rule__OrderByClause__Group_0_0__1__Impl ;
    public final void rule__OrderByClause__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16808:1: ( rule__OrderByClause__Group_0_0__1__Impl )
            // InternalSQLParser.g:16809:2: rule__OrderByClause__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1__Impl"
    // InternalSQLParser.g:16815:1: rule__OrderByClause__Group_0_0__1__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16819:1: ( ( BY ) )
            // InternalSQLParser.g:16820:1: ( BY )
            {
            // InternalSQLParser.g:16820:1: ( BY )
            // InternalSQLParser.g:16821:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0"
    // InternalSQLParser.g:16831:1: rule__OrderByClause__Group_0_1__0 : rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 ;
    public final void rule__OrderByClause__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16835:1: ( rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 )
            // InternalSQLParser.g:16836:2: rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1
            {
            pushFollow(FOLLOW_96);
            rule__OrderByClause__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0__Impl"
    // InternalSQLParser.g:16843:1: rule__OrderByClause__Group_0_1__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16847:1: ( ( ORDER ) )
            // InternalSQLParser.g:16848:1: ( ORDER )
            {
            // InternalSQLParser.g:16848:1: ( ORDER )
            // InternalSQLParser.g:16849:2: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1"
    // InternalSQLParser.g:16858:1: rule__OrderByClause__Group_0_1__1 : rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 ;
    public final void rule__OrderByClause__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16862:1: ( rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 )
            // InternalSQLParser.g:16863:2: rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2
            {
            pushFollow(FOLLOW_42);
            rule__OrderByClause__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1__Impl"
    // InternalSQLParser.g:16870:1: rule__OrderByClause__Group_0_1__1__Impl : ( SIBLINGS ) ;
    public final void rule__OrderByClause__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16874:1: ( ( SIBLINGS ) )
            // InternalSQLParser.g:16875:1: ( SIBLINGS )
            {
            // InternalSQLParser.g:16875:1: ( SIBLINGS )
            // InternalSQLParser.g:16876:2: SIBLINGS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }
            match(input,SIBLINGS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2"
    // InternalSQLParser.g:16885:1: rule__OrderByClause__Group_0_1__2 : rule__OrderByClause__Group_0_1__2__Impl ;
    public final void rule__OrderByClause__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16889:1: ( rule__OrderByClause__Group_0_1__2__Impl )
            // InternalSQLParser.g:16890:2: rule__OrderByClause__Group_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2__Impl"
    // InternalSQLParser.g:16896:1: rule__OrderByClause__Group_0_1__2__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16900:1: ( ( BY ) )
            // InternalSQLParser.g:16901:1: ( BY )
            {
            // InternalSQLParser.g:16901:1: ( BY )
            // InternalSQLParser.g:16902:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0"
    // InternalSQLParser.g:16912:1: rule__OrderByClauseArgs__Group__0 : rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 ;
    public final void rule__OrderByClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16916:1: ( rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 )
            // InternalSQLParser.g:16917:2: rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__OrderByClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0__Impl"
    // InternalSQLParser.g:16924:1: rule__OrderByClauseArgs__Group__0__Impl : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16928:1: ( ( ruleOrderByClauseArg ) )
            // InternalSQLParser.g:16929:1: ( ruleOrderByClauseArg )
            {
            // InternalSQLParser.g:16929:1: ( ruleOrderByClauseArg )
            // InternalSQLParser.g:16930:2: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1"
    // InternalSQLParser.g:16939:1: rule__OrderByClauseArgs__Group__1 : rule__OrderByClauseArgs__Group__1__Impl ;
    public final void rule__OrderByClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16943:1: ( rule__OrderByClauseArgs__Group__1__Impl )
            // InternalSQLParser.g:16944:2: rule__OrderByClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1__Impl"
    // InternalSQLParser.g:16950:1: rule__OrderByClauseArgs__Group__1__Impl : ( ( rule__OrderByClauseArgs__Group_1__0 )? ) ;
    public final void rule__OrderByClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16954:1: ( ( ( rule__OrderByClauseArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:16955:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:16955:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            // InternalSQLParser.g:16956:2: ( rule__OrderByClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:16957:2: ( rule__OrderByClauseArgs__Group_1__0 )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==Comma) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalSQLParser.g:16957:3: rule__OrderByClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0"
    // InternalSQLParser.g:16966:1: rule__OrderByClauseArgs__Group_1__0 : rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16970:1: ( rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 )
            // InternalSQLParser.g:16971:2: rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__OrderByClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0__Impl"
    // InternalSQLParser.g:16978:1: rule__OrderByClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16982:1: ( ( () ) )
            // InternalSQLParser.g:16983:1: ( () )
            {
            // InternalSQLParser.g:16983:1: ( () )
            // InternalSQLParser.g:16984:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:16985:2: ()
            // InternalSQLParser.g:16985:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1"
    // InternalSQLParser.g:16993:1: rule__OrderByClauseArgs__Group_1__1 : rule__OrderByClauseArgs__Group_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:16997:1: ( rule__OrderByClauseArgs__Group_1__1__Impl )
            // InternalSQLParser.g:16998:2: rule__OrderByClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1__Impl"
    // InternalSQLParser.g:17004:1: rule__OrderByClauseArgs__Group_1__1__Impl : ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17008:1: ( ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:17009:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:17009:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:17010:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:17010:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:17011:3: ( rule__OrderByClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:17012:3: ( rule__OrderByClauseArgs__Group_1_1__0 )
            // InternalSQLParser.g:17012:4: rule__OrderByClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__OrderByClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:17015:2: ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:17016:3: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:17017:3: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==Comma) ) {
                    alt151=1;
                }


                switch (alt151) {
            	case 1 :
            	    // InternalSQLParser.g:17017:4: rule__OrderByClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__OrderByClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0"
    // InternalSQLParser.g:17027:1: rule__OrderByClauseArgs__Group_1_1__0 : rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17031:1: ( rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 )
            // InternalSQLParser.g:17032:2: rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_91);
            rule__OrderByClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:17039:1: rule__OrderByClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17043:1: ( ( Comma ) )
            // InternalSQLParser.g:17044:1: ( Comma )
            {
            // InternalSQLParser.g:17044:1: ( Comma )
            // InternalSQLParser.g:17045:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1"
    // InternalSQLParser.g:17054:1: rule__OrderByClauseArgs__Group_1_1__1 : rule__OrderByClauseArgs__Group_1_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17058:1: ( rule__OrderByClauseArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:17059:2: rule__OrderByClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:17065:1: rule__OrderByClauseArgs__Group_1_1__1__Impl : ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17069:1: ( ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:17070:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:17070:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:17071:2: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:17072:2: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:17072:3: rule__OrderByClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__0"
    // InternalSQLParser.g:17081:1: rule__OrderByClauseArg__Group__0 : rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 ;
    public final void rule__OrderByClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17085:1: ( rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 )
            // InternalSQLParser.g:17086:2: rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1
            {
            pushFollow(FOLLOW_97);
            rule__OrderByClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0"


    // $ANTLR start "rule__OrderByClauseArg__Group__0__Impl"
    // InternalSQLParser.g:17093:1: rule__OrderByClauseArg__Group__0__Impl : ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) ;
    public final void rule__OrderByClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17097:1: ( ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) )
            // InternalSQLParser.g:17098:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            {
            // InternalSQLParser.g:17098:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            // InternalSQLParser.g:17099:2: ( rule__OrderByClauseArg__ColAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }
            // InternalSQLParser.g:17100:2: ( rule__OrderByClauseArg__ColAssignment_0 )
            // InternalSQLParser.g:17100:3: rule__OrderByClauseArg__ColAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__ColAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__1"
    // InternalSQLParser.g:17108:1: rule__OrderByClauseArg__Group__1 : rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 ;
    public final void rule__OrderByClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17112:1: ( rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 )
            // InternalSQLParser.g:17113:2: rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2
            {
            pushFollow(FOLLOW_97);
            rule__OrderByClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1"


    // $ANTLR start "rule__OrderByClauseArg__Group__1__Impl"
    // InternalSQLParser.g:17120:1: rule__OrderByClauseArg__Group__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_1 )? ) ;
    public final void rule__OrderByClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17124:1: ( ( ( rule__OrderByClauseArg__Alternatives_1 )? ) )
            // InternalSQLParser.g:17125:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            {
            // InternalSQLParser.g:17125:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            // InternalSQLParser.g:17126:2: ( rule__OrderByClauseArg__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:17127:2: ( rule__OrderByClauseArg__Alternatives_1 )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==DESC||LA152_0==ASC) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalSQLParser.g:17127:3: rule__OrderByClauseArg__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__2"
    // InternalSQLParser.g:17135:1: rule__OrderByClauseArg__Group__2 : rule__OrderByClauseArg__Group__2__Impl ;
    public final void rule__OrderByClauseArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17139:1: ( rule__OrderByClauseArg__Group__2__Impl )
            // InternalSQLParser.g:17140:2: rule__OrderByClauseArg__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2"


    // $ANTLR start "rule__OrderByClauseArg__Group__2__Impl"
    // InternalSQLParser.g:17146:1: rule__OrderByClauseArg__Group__2__Impl : ( ( rule__OrderByClauseArg__Group_2__0 )? ) ;
    public final void rule__OrderByClauseArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17150:1: ( ( ( rule__OrderByClauseArg__Group_2__0 )? ) )
            // InternalSQLParser.g:17151:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            {
            // InternalSQLParser.g:17151:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            // InternalSQLParser.g:17152:2: ( rule__OrderByClauseArg__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }
            // InternalSQLParser.g:17153:2: ( rule__OrderByClauseArg__Group_2__0 )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==NULLS) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalSQLParser.g:17153:3: rule__OrderByClauseArg__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0"
    // InternalSQLParser.g:17162:1: rule__OrderByClauseArg__Group_2__0 : rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 ;
    public final void rule__OrderByClauseArg__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17166:1: ( rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 )
            // InternalSQLParser.g:17167:2: rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1
            {
            pushFollow(FOLLOW_98);
            rule__OrderByClauseArg__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0__Impl"
    // InternalSQLParser.g:17174:1: rule__OrderByClauseArg__Group_2__0__Impl : ( NULLS ) ;
    public final void rule__OrderByClauseArg__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17178:1: ( ( NULLS ) )
            // InternalSQLParser.g:17179:1: ( NULLS )
            {
            // InternalSQLParser.g:17179:1: ( NULLS )
            // InternalSQLParser.g:17180:2: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1"
    // InternalSQLParser.g:17189:1: rule__OrderByClauseArg__Group_2__1 : rule__OrderByClauseArg__Group_2__1__Impl ;
    public final void rule__OrderByClauseArg__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17193:1: ( rule__OrderByClauseArg__Group_2__1__Impl )
            // InternalSQLParser.g:17194:2: rule__OrderByClauseArg__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1__Impl"
    // InternalSQLParser.g:17200:1: rule__OrderByClauseArg__Group_2__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) ;
    public final void rule__OrderByClauseArg__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17204:1: ( ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) )
            // InternalSQLParser.g:17205:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            {
            // InternalSQLParser.g:17205:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            // InternalSQLParser.g:17206:2: ( rule__OrderByClauseArg__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }
            // InternalSQLParser.g:17207:2: ( rule__OrderByClauseArg__Alternatives_2_1 )
            // InternalSQLParser.g:17207:3: rule__OrderByClauseArg__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__0"
    // InternalSQLParser.g:17216:1: rule__QueryPartitionClause__Group__0 : rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 ;
    public final void rule__QueryPartitionClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17220:1: ( rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 )
            // InternalSQLParser.g:17221:2: rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__QueryPartitionClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0"


    // $ANTLR start "rule__QueryPartitionClause__Group__0__Impl"
    // InternalSQLParser.g:17228:1: rule__QueryPartitionClause__Group__0__Impl : ( PARTITION ) ;
    public final void rule__QueryPartitionClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17232:1: ( ( PARTITION ) )
            // InternalSQLParser.g:17233:1: ( PARTITION )
            {
            // InternalSQLParser.g:17233:1: ( PARTITION )
            // InternalSQLParser.g:17234:2: PARTITION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }
            match(input,PARTITION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__1"
    // InternalSQLParser.g:17243:1: rule__QueryPartitionClause__Group__1 : rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 ;
    public final void rule__QueryPartitionClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17247:1: ( rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 )
            // InternalSQLParser.g:17248:2: rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2
            {
            pushFollow(FOLLOW_91);
            rule__QueryPartitionClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1"


    // $ANTLR start "rule__QueryPartitionClause__Group__1__Impl"
    // InternalSQLParser.g:17255:1: rule__QueryPartitionClause__Group__1__Impl : ( BY ) ;
    public final void rule__QueryPartitionClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17259:1: ( ( BY ) )
            // InternalSQLParser.g:17260:1: ( BY )
            {
            // InternalSQLParser.g:17260:1: ( BY )
            // InternalSQLParser.g:17261:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__2"
    // InternalSQLParser.g:17270:1: rule__QueryPartitionClause__Group__2 : rule__QueryPartitionClause__Group__2__Impl ;
    public final void rule__QueryPartitionClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17274:1: ( rule__QueryPartitionClause__Group__2__Impl )
            // InternalSQLParser.g:17275:2: rule__QueryPartitionClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2"


    // $ANTLR start "rule__QueryPartitionClause__Group__2__Impl"
    // InternalSQLParser.g:17281:1: rule__QueryPartitionClause__Group__2__Impl : ( ( rule__QueryPartitionClause__Alternatives_2 ) ) ;
    public final void rule__QueryPartitionClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17285:1: ( ( ( rule__QueryPartitionClause__Alternatives_2 ) ) )
            // InternalSQLParser.g:17286:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            {
            // InternalSQLParser.g:17286:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            // InternalSQLParser.g:17287:2: ( rule__QueryPartitionClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }
            // InternalSQLParser.g:17288:2: ( rule__QueryPartitionClause__Alternatives_2 )
            // InternalSQLParser.g:17288:3: rule__QueryPartitionClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0"
    // InternalSQLParser.g:17297:1: rule__QueryPartitionClause__Group_2_1__0 : rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 ;
    public final void rule__QueryPartitionClause__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17301:1: ( rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 )
            // InternalSQLParser.g:17302:2: rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1
            {
            pushFollow(FOLLOW_91);
            rule__QueryPartitionClause__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0__Impl"
    // InternalSQLParser.g:17309:1: rule__QueryPartitionClause__Group_2_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17313:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:17314:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:17314:1: ( LeftParenthesis )
            // InternalSQLParser.g:17315:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1"
    // InternalSQLParser.g:17324:1: rule__QueryPartitionClause__Group_2_1__1 : rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 ;
    public final void rule__QueryPartitionClause__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17328:1: ( rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 )
            // InternalSQLParser.g:17329:2: rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2
            {
            pushFollow(FOLLOW_11);
            rule__QueryPartitionClause__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1__Impl"
    // InternalSQLParser.g:17336:1: rule__QueryPartitionClause__Group_2_1__1__Impl : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17340:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSQLParser.g:17341:1: ( ruleAnalyticExprArgs )
            {
            // InternalSQLParser.g:17341:1: ( ruleAnalyticExprArgs )
            // InternalSQLParser.g:17342:2: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2"
    // InternalSQLParser.g:17351:1: rule__QueryPartitionClause__Group_2_1__2 : rule__QueryPartitionClause__Group_2_1__2__Impl ;
    public final void rule__QueryPartitionClause__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17355:1: ( rule__QueryPartitionClause__Group_2_1__2__Impl )
            // InternalSQLParser.g:17356:2: rule__QueryPartitionClause__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2__Impl"
    // InternalSQLParser.g:17362:1: rule__QueryPartitionClause__Group_2_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17366:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:17367:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:17367:1: ( RightParenthesis )
            // InternalSQLParser.g:17368:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0"
    // InternalSQLParser.g:17378:1: rule__AnalyticExprArgs__Group__0 : rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 ;
    public final void rule__AnalyticExprArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17382:1: ( rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 )
            // InternalSQLParser.g:17383:2: rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__AnalyticExprArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0__Impl"
    // InternalSQLParser.g:17390:1: rule__AnalyticExprArgs__Group__0__Impl : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17394:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:17395:1: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:17395:1: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:17396:2: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1"
    // InternalSQLParser.g:17405:1: rule__AnalyticExprArgs__Group__1 : rule__AnalyticExprArgs__Group__1__Impl ;
    public final void rule__AnalyticExprArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17409:1: ( rule__AnalyticExprArgs__Group__1__Impl )
            // InternalSQLParser.g:17410:2: rule__AnalyticExprArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1__Impl"
    // InternalSQLParser.g:17416:1: rule__AnalyticExprArgs__Group__1__Impl : ( ( rule__AnalyticExprArgs__Group_1__0 )? ) ;
    public final void rule__AnalyticExprArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17420:1: ( ( ( rule__AnalyticExprArgs__Group_1__0 )? ) )
            // InternalSQLParser.g:17421:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            {
            // InternalSQLParser.g:17421:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            // InternalSQLParser.g:17422:2: ( rule__AnalyticExprArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:17423:2: ( rule__AnalyticExprArgs__Group_1__0 )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==Comma) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalSQLParser.g:17423:3: rule__AnalyticExprArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0"
    // InternalSQLParser.g:17432:1: rule__AnalyticExprArgs__Group_1__0 : rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17436:1: ( rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 )
            // InternalSQLParser.g:17437:2: rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__AnalyticExprArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0__Impl"
    // InternalSQLParser.g:17444:1: rule__AnalyticExprArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__AnalyticExprArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17448:1: ( ( () ) )
            // InternalSQLParser.g:17449:1: ( () )
            {
            // InternalSQLParser.g:17449:1: ( () )
            // InternalSQLParser.g:17450:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:17451:2: ()
            // InternalSQLParser.g:17451:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1"
    // InternalSQLParser.g:17459:1: rule__AnalyticExprArgs__Group_1__1 : rule__AnalyticExprArgs__Group_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17463:1: ( rule__AnalyticExprArgs__Group_1__1__Impl )
            // InternalSQLParser.g:17464:2: rule__AnalyticExprArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1__Impl"
    // InternalSQLParser.g:17470:1: rule__AnalyticExprArgs__Group_1__1__Impl : ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) ;
    public final void rule__AnalyticExprArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17474:1: ( ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:17475:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:17475:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            // InternalSQLParser.g:17476:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:17476:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) )
            // InternalSQLParser.g:17477:3: ( rule__AnalyticExprArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:17478:3: ( rule__AnalyticExprArgs__Group_1_1__0 )
            // InternalSQLParser.g:17478:4: rule__AnalyticExprArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__AnalyticExprArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:17481:2: ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            // InternalSQLParser.g:17482:3: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:17483:3: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==Comma) ) {
                    alt155=1;
                }


                switch (alt155) {
            	case 1 :
            	    // InternalSQLParser.g:17483:4: rule__AnalyticExprArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__AnalyticExprArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0"
    // InternalSQLParser.g:17493:1: rule__AnalyticExprArgs__Group_1_1__0 : rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17497:1: ( rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 )
            // InternalSQLParser.g:17498:2: rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_91);
            rule__AnalyticExprArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0__Impl"
    // InternalSQLParser.g:17505:1: rule__AnalyticExprArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17509:1: ( ( Comma ) )
            // InternalSQLParser.g:17510:1: ( Comma )
            {
            // InternalSQLParser.g:17510:1: ( Comma )
            // InternalSQLParser.g:17511:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1"
    // InternalSQLParser.g:17520:1: rule__AnalyticExprArgs__Group_1_1__1 : rule__AnalyticExprArgs__Group_1_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17524:1: ( rule__AnalyticExprArgs__Group_1_1__1__Impl )
            // InternalSQLParser.g:17525:2: rule__AnalyticExprArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1__Impl"
    // InternalSQLParser.g:17531:1: rule__AnalyticExprArgs__Group_1_1__1__Impl : ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17535:1: ( ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:17536:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:17536:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:17537:2: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:17538:2: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:17538:3: rule__AnalyticExprArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__0"
    // InternalSQLParser.g:17547:1: rule__AnalyticExprArg__Group__0 : rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 ;
    public final void rule__AnalyticExprArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17551:1: ( rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 )
            // InternalSQLParser.g:17552:2: rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__AnalyticExprArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0"


    // $ANTLR start "rule__AnalyticExprArg__Group__0__Impl"
    // InternalSQLParser.g:17559:1: rule__AnalyticExprArg__Group__0__Impl : ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) ;
    public final void rule__AnalyticExprArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17563:1: ( ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) )
            // InternalSQLParser.g:17564:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            {
            // InternalSQLParser.g:17564:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            // InternalSQLParser.g:17565:2: ( rule__AnalyticExprArg__CeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }
            // InternalSQLParser.g:17566:2: ( rule__AnalyticExprArg__CeAssignment_0 )
            // InternalSQLParser.g:17566:3: rule__AnalyticExprArg__CeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__CeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__1"
    // InternalSQLParser.g:17574:1: rule__AnalyticExprArg__Group__1 : rule__AnalyticExprArg__Group__1__Impl ;
    public final void rule__AnalyticExprArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17578:1: ( rule__AnalyticExprArg__Group__1__Impl )
            // InternalSQLParser.g:17579:2: rule__AnalyticExprArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1"


    // $ANTLR start "rule__AnalyticExprArg__Group__1__Impl"
    // InternalSQLParser.g:17585:1: rule__AnalyticExprArg__Group__1__Impl : ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) ;
    public final void rule__AnalyticExprArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17589:1: ( ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) )
            // InternalSQLParser.g:17590:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            {
            // InternalSQLParser.g:17590:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            // InternalSQLParser.g:17591:2: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }
            // InternalSQLParser.g:17592:2: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( ((LA156_0>=RULE_STRING && LA156_0<=RULE_ID)) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalSQLParser.g:17592:3: rule__AnalyticExprArg__ColAliasAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArg__ColAliasAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__0"
    // InternalSQLParser.g:17601:1: rule__OpFunctionArg__Group__0 : rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 ;
    public final void rule__OpFunctionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17605:1: ( rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 )
            // InternalSQLParser.g:17606:2: rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__OpFunctionArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0"


    // $ANTLR start "rule__OpFunctionArg__Group__0__Impl"
    // InternalSQLParser.g:17613:1: rule__OpFunctionArg__Group__0__Impl : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17617:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSQLParser.g:17618:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSQLParser.g:17618:1: ( ruleOpFunctionArgOperand )
            // InternalSQLParser.g:17619:2: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__1"
    // InternalSQLParser.g:17628:1: rule__OpFunctionArg__Group__1 : rule__OpFunctionArg__Group__1__Impl ;
    public final void rule__OpFunctionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17632:1: ( rule__OpFunctionArg__Group__1__Impl )
            // InternalSQLParser.g:17633:2: rule__OpFunctionArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1"


    // $ANTLR start "rule__OpFunctionArg__Group__1__Impl"
    // InternalSQLParser.g:17639:1: rule__OpFunctionArg__Group__1__Impl : ( ( rule__OpFunctionArg__Group_1__0 )? ) ;
    public final void rule__OpFunctionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17643:1: ( ( ( rule__OpFunctionArg__Group_1__0 )? ) )
            // InternalSQLParser.g:17644:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            {
            // InternalSQLParser.g:17644:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            // InternalSQLParser.g:17645:2: ( rule__OpFunctionArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:17646:2: ( rule__OpFunctionArg__Group_1__0 )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==Comma) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalSQLParser.g:17646:3: rule__OpFunctionArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0"
    // InternalSQLParser.g:17655:1: rule__OpFunctionArg__Group_1__0 : rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 ;
    public final void rule__OpFunctionArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17659:1: ( rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 )
            // InternalSQLParser.g:17660:2: rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1
            {
            pushFollow(FOLLOW_12);
            rule__OpFunctionArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0__Impl"
    // InternalSQLParser.g:17667:1: rule__OpFunctionArg__Group_1__0__Impl : ( () ) ;
    public final void rule__OpFunctionArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17671:1: ( ( () ) )
            // InternalSQLParser.g:17672:1: ( () )
            {
            // InternalSQLParser.g:17672:1: ( () )
            // InternalSQLParser.g:17673:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:17674:2: ()
            // InternalSQLParser.g:17674:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1"
    // InternalSQLParser.g:17682:1: rule__OpFunctionArg__Group_1__1 : rule__OpFunctionArg__Group_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17686:1: ( rule__OpFunctionArg__Group_1__1__Impl )
            // InternalSQLParser.g:17687:2: rule__OpFunctionArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1__Impl"
    // InternalSQLParser.g:17693:1: rule__OpFunctionArg__Group_1__1__Impl : ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) ;
    public final void rule__OpFunctionArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17697:1: ( ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) )
            // InternalSQLParser.g:17698:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            {
            // InternalSQLParser.g:17698:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            // InternalSQLParser.g:17699:2: ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            {
            // InternalSQLParser.g:17699:2: ( ( rule__OpFunctionArg__Group_1_1__0 ) )
            // InternalSQLParser.g:17700:3: ( rule__OpFunctionArg__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:17701:3: ( rule__OpFunctionArg__Group_1_1__0 )
            // InternalSQLParser.g:17701:4: rule__OpFunctionArg__Group_1_1__0
            {
            pushFollow(FOLLOW_13);
            rule__OpFunctionArg__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }

            // InternalSQLParser.g:17704:2: ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            // InternalSQLParser.g:17705:3: ( rule__OpFunctionArg__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSQLParser.g:17706:3: ( rule__OpFunctionArg__Group_1_1__0 )*
            loop158:
            do {
                int alt158=2;
                int LA158_0 = input.LA(1);

                if ( (LA158_0==Comma) ) {
                    alt158=1;
                }


                switch (alt158) {
            	case 1 :
            	    // InternalSQLParser.g:17706:4: rule__OpFunctionArg__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__OpFunctionArg__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop158;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0"
    // InternalSQLParser.g:17716:1: rule__OpFunctionArg__Group_1_1__0 : rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 ;
    public final void rule__OpFunctionArg__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17720:1: ( rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 )
            // InternalSQLParser.g:17721:2: rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1
            {
            pushFollow(FOLLOW_99);
            rule__OpFunctionArg__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0__Impl"
    // InternalSQLParser.g:17728:1: rule__OpFunctionArg__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionArg__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17732:1: ( ( Comma ) )
            // InternalSQLParser.g:17733:1: ( Comma )
            {
            // InternalSQLParser.g:17733:1: ( Comma )
            // InternalSQLParser.g:17734:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1"
    // InternalSQLParser.g:17743:1: rule__OpFunctionArg__Group_1_1__1 : rule__OpFunctionArg__Group_1_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17747:1: ( rule__OpFunctionArg__Group_1_1__1__Impl )
            // InternalSQLParser.g:17748:2: rule__OpFunctionArg__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1__Impl"
    // InternalSQLParser.g:17754:1: rule__OpFunctionArg__Group_1_1__1__Impl : ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OpFunctionArg__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17758:1: ( ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) )
            // InternalSQLParser.g:17759:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            {
            // InternalSQLParser.g:17759:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            // InternalSQLParser.g:17760:2: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSQLParser.g:17761:2: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            // InternalSQLParser.g:17761:3: rule__OpFunctionArg__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__0"
    // InternalSQLParser.g:17770:1: rule__OpFunctionCast__Group__0 : rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 ;
    public final void rule__OpFunctionCast__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17774:1: ( rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 )
            // InternalSQLParser.g:17775:2: rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__OpFunctionCast__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0"


    // $ANTLR start "rule__OpFunctionCast__Group__0__Impl"
    // InternalSQLParser.g:17782:1: rule__OpFunctionCast__Group__0__Impl : ( CAST ) ;
    public final void rule__OpFunctionCast__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17786:1: ( ( CAST ) )
            // InternalSQLParser.g:17787:1: ( CAST )
            {
            // InternalSQLParser.g:17787:1: ( CAST )
            // InternalSQLParser.g:17788:2: CAST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }
            match(input,CAST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__1"
    // InternalSQLParser.g:17797:1: rule__OpFunctionCast__Group__1 : rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 ;
    public final void rule__OpFunctionCast__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17801:1: ( rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 )
            // InternalSQLParser.g:17802:2: rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2
            {
            pushFollow(FOLLOW_62);
            rule__OpFunctionCast__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1"


    // $ANTLR start "rule__OpFunctionCast__Group__1__Impl"
    // InternalSQLParser.g:17809:1: rule__OpFunctionCast__Group__1__Impl : ( ( rule__OpFunctionCast__OpAssignment_1 ) ) ;
    public final void rule__OpFunctionCast__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17813:1: ( ( ( rule__OpFunctionCast__OpAssignment_1 ) ) )
            // InternalSQLParser.g:17814:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            {
            // InternalSQLParser.g:17814:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            // InternalSQLParser.g:17815:2: ( rule__OpFunctionCast__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }
            // InternalSQLParser.g:17816:2: ( rule__OpFunctionCast__OpAssignment_1 )
            // InternalSQLParser.g:17816:3: rule__OpFunctionCast__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__2"
    // InternalSQLParser.g:17824:1: rule__OpFunctionCast__Group__2 : rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 ;
    public final void rule__OpFunctionCast__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17828:1: ( rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 )
            // InternalSQLParser.g:17829:2: rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__OpFunctionCast__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2"


    // $ANTLR start "rule__OpFunctionCast__Group__2__Impl"
    // InternalSQLParser.g:17836:1: rule__OpFunctionCast__Group__2__Impl : ( AS ) ;
    public final void rule__OpFunctionCast__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17840:1: ( ( AS ) )
            // InternalSQLParser.g:17841:1: ( AS )
            {
            // InternalSQLParser.g:17841:1: ( AS )
            // InternalSQLParser.g:17842:2: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__3"
    // InternalSQLParser.g:17851:1: rule__OpFunctionCast__Group__3 : rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 ;
    public final void rule__OpFunctionCast__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17855:1: ( rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 )
            // InternalSQLParser.g:17856:2: rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4
            {
            pushFollow(FOLLOW_100);
            rule__OpFunctionCast__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3"


    // $ANTLR start "rule__OpFunctionCast__Group__3__Impl"
    // InternalSQLParser.g:17863:1: rule__OpFunctionCast__Group__3__Impl : ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) ;
    public final void rule__OpFunctionCast__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17867:1: ( ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) )
            // InternalSQLParser.g:17868:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            {
            // InternalSQLParser.g:17868:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            // InternalSQLParser.g:17869:2: ( rule__OpFunctionCast__TypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }
            // InternalSQLParser.g:17870:2: ( rule__OpFunctionCast__TypeAssignment_3 )
            // InternalSQLParser.g:17870:3: rule__OpFunctionCast__TypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__TypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__4"
    // InternalSQLParser.g:17878:1: rule__OpFunctionCast__Group__4 : rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 ;
    public final void rule__OpFunctionCast__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17882:1: ( rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 )
            // InternalSQLParser.g:17883:2: rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5
            {
            pushFollow(FOLLOW_100);
            rule__OpFunctionCast__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4"


    // $ANTLR start "rule__OpFunctionCast__Group__4__Impl"
    // InternalSQLParser.g:17890:1: rule__OpFunctionCast__Group__4__Impl : ( ( rule__OpFunctionCast__Group_4__0 )? ) ;
    public final void rule__OpFunctionCast__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17894:1: ( ( ( rule__OpFunctionCast__Group_4__0 )? ) )
            // InternalSQLParser.g:17895:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            {
            // InternalSQLParser.g:17895:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            // InternalSQLParser.g:17896:2: ( rule__OpFunctionCast__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }
            // InternalSQLParser.g:17897:2: ( rule__OpFunctionCast__Group_4__0 )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==LeftParenthesis) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalSQLParser.g:17897:3: rule__OpFunctionCast__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__5"
    // InternalSQLParser.g:17905:1: rule__OpFunctionCast__Group__5 : rule__OpFunctionCast__Group__5__Impl ;
    public final void rule__OpFunctionCast__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17909:1: ( rule__OpFunctionCast__Group__5__Impl )
            // InternalSQLParser.g:17910:2: rule__OpFunctionCast__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5"


    // $ANTLR start "rule__OpFunctionCast__Group__5__Impl"
    // InternalSQLParser.g:17916:1: rule__OpFunctionCast__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17920:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:17921:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:17921:1: ( RightParenthesis )
            // InternalSQLParser.g:17922:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0"
    // InternalSQLParser.g:17932:1: rule__OpFunctionCast__Group_4__0 : rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 ;
    public final void rule__OpFunctionCast__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17936:1: ( rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 )
            // InternalSQLParser.g:17937:2: rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1
            {
            pushFollow(FOLLOW_31);
            rule__OpFunctionCast__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0__Impl"
    // InternalSQLParser.g:17944:1: rule__OpFunctionCast__Group_4__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17948:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:17949:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:17949:1: ( LeftParenthesis )
            // InternalSQLParser.g:17950:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1"
    // InternalSQLParser.g:17959:1: rule__OpFunctionCast__Group_4__1 : rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 ;
    public final void rule__OpFunctionCast__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17963:1: ( rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 )
            // InternalSQLParser.g:17964:2: rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2
            {
            pushFollow(FOLLOW_101);
            rule__OpFunctionCast__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1__Impl"
    // InternalSQLParser.g:17971:1: rule__OpFunctionCast__Group_4__1__Impl : ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17975:1: ( ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) )
            // InternalSQLParser.g:17976:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            {
            // InternalSQLParser.g:17976:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            // InternalSQLParser.g:17977:2: ( rule__OpFunctionCast__PAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }
            // InternalSQLParser.g:17978:2: ( rule__OpFunctionCast__PAssignment_4_1 )
            // InternalSQLParser.g:17978:3: rule__OpFunctionCast__PAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__PAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2"
    // InternalSQLParser.g:17986:1: rule__OpFunctionCast__Group_4__2 : rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 ;
    public final void rule__OpFunctionCast__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:17990:1: ( rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 )
            // InternalSQLParser.g:17991:2: rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3
            {
            pushFollow(FOLLOW_101);
            rule__OpFunctionCast__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2__Impl"
    // InternalSQLParser.g:17998:1: rule__OpFunctionCast__Group_4__2__Impl : ( ( rule__OpFunctionCast__Group_4_2__0 )? ) ;
    public final void rule__OpFunctionCast__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18002:1: ( ( ( rule__OpFunctionCast__Group_4_2__0 )? ) )
            // InternalSQLParser.g:18003:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            {
            // InternalSQLParser.g:18003:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            // InternalSQLParser.g:18004:2: ( rule__OpFunctionCast__Group_4_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }
            // InternalSQLParser.g:18005:2: ( rule__OpFunctionCast__Group_4_2__0 )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==Comma) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // InternalSQLParser.g:18005:3: rule__OpFunctionCast__Group_4_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3"
    // InternalSQLParser.g:18013:1: rule__OpFunctionCast__Group_4__3 : rule__OpFunctionCast__Group_4__3__Impl ;
    public final void rule__OpFunctionCast__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18017:1: ( rule__OpFunctionCast__Group_4__3__Impl )
            // InternalSQLParser.g:18018:2: rule__OpFunctionCast__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3__Impl"
    // InternalSQLParser.g:18024:1: rule__OpFunctionCast__Group_4__3__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18028:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:18029:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:18029:1: ( RightParenthesis )
            // InternalSQLParser.g:18030:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0"
    // InternalSQLParser.g:18040:1: rule__OpFunctionCast__Group_4_2__0 : rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 ;
    public final void rule__OpFunctionCast__Group_4_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18044:1: ( rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 )
            // InternalSQLParser.g:18045:2: rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1
            {
            pushFollow(FOLLOW_31);
            rule__OpFunctionCast__Group_4_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0__Impl"
    // InternalSQLParser.g:18052:1: rule__OpFunctionCast__Group_4_2__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionCast__Group_4_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18056:1: ( ( Comma ) )
            // InternalSQLParser.g:18057:1: ( Comma )
            {
            // InternalSQLParser.g:18057:1: ( Comma )
            // InternalSQLParser.g:18058:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1"
    // InternalSQLParser.g:18067:1: rule__OpFunctionCast__Group_4_2__1 : rule__OpFunctionCast__Group_4_2__1__Impl ;
    public final void rule__OpFunctionCast__Group_4_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18071:1: ( rule__OpFunctionCast__Group_4_2__1__Impl )
            // InternalSQLParser.g:18072:2: rule__OpFunctionCast__Group_4_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1__Impl"
    // InternalSQLParser.g:18078:1: rule__OpFunctionCast__Group_4_2__1__Impl : ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18082:1: ( ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) )
            // InternalSQLParser.g:18083:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            {
            // InternalSQLParser.g:18083:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            // InternalSQLParser.g:18084:2: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }
            // InternalSQLParser.g:18085:2: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            // InternalSQLParser.g:18085:3: rule__OpFunctionCast__P2Assignment_4_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__P2Assignment_4_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0"
    // InternalSQLParser.g:18094:1: rule__OpFunctionArgAgregate__Group__0 : rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 ;
    public final void rule__OpFunctionArgAgregate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18098:1: ( rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 )
            // InternalSQLParser.g:18099:2: rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__OpFunctionArgAgregate__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0__Impl"
    // InternalSQLParser.g:18106:1: rule__OpFunctionArgAgregate__Group__0__Impl : ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) ;
    public final void rule__OpFunctionArgAgregate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18110:1: ( ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) )
            // InternalSQLParser.g:18111:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            {
            // InternalSQLParser.g:18111:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            // InternalSQLParser.g:18112:2: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }
            // InternalSQLParser.g:18113:2: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            // InternalSQLParser.g:18113:3: rule__OpFunctionArgAgregate__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1"
    // InternalSQLParser.g:18121:1: rule__OpFunctionArgAgregate__Group__1 : rule__OpFunctionArgAgregate__Group__1__Impl ;
    public final void rule__OpFunctionArgAgregate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18125:1: ( rule__OpFunctionArgAgregate__Group__1__Impl )
            // InternalSQLParser.g:18126:2: rule__OpFunctionArgAgregate__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1__Impl"
    // InternalSQLParser.g:18132:1: rule__OpFunctionArgAgregate__Group__1__Impl : ( ruleOperand ) ;
    public final void rule__OpFunctionArgAgregate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18136:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:18137:1: ( ruleOperand )
            {
            // InternalSQLParser.g:18137:1: ( ruleOperand )
            // InternalSQLParser.g:18138:2: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__0"
    // InternalSQLParser.g:18148:1: rule__ColumnOperand__Group__0 : rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 ;
    public final void rule__ColumnOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18152:1: ( rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 )
            // InternalSQLParser.g:18153:2: rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1
            {
            pushFollow(FOLLOW_102);
            rule__ColumnOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0"


    // $ANTLR start "rule__ColumnOperand__Group__0__Impl"
    // InternalSQLParser.g:18160:1: rule__ColumnOperand__Group__0__Impl : ( ( rule__ColumnOperand__CfullAssignment_0 ) ) ;
    public final void rule__ColumnOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18164:1: ( ( ( rule__ColumnOperand__CfullAssignment_0 ) ) )
            // InternalSQLParser.g:18165:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            {
            // InternalSQLParser.g:18165:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            // InternalSQLParser.g:18166:2: ( rule__ColumnOperand__CfullAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }
            // InternalSQLParser.g:18167:2: ( rule__ColumnOperand__CfullAssignment_0 )
            // InternalSQLParser.g:18167:3: rule__ColumnOperand__CfullAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__CfullAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__1"
    // InternalSQLParser.g:18175:1: rule__ColumnOperand__Group__1 : rule__ColumnOperand__Group__1__Impl ;
    public final void rule__ColumnOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18179:1: ( rule__ColumnOperand__Group__1__Impl )
            // InternalSQLParser.g:18180:2: rule__ColumnOperand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1"


    // $ANTLR start "rule__ColumnOperand__Group__1__Impl"
    // InternalSQLParser.g:18186:1: rule__ColumnOperand__Group__1__Impl : ( ( rule__ColumnOperand__OraAssignment_1 )? ) ;
    public final void rule__ColumnOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18190:1: ( ( ( rule__ColumnOperand__OraAssignment_1 )? ) )
            // InternalSQLParser.g:18191:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            {
            // InternalSQLParser.g:18191:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            // InternalSQLParser.g:18192:2: ( rule__ColumnOperand__OraAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }
            // InternalSQLParser.g:18193:2: ( rule__ColumnOperand__OraAssignment_1 )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==LeftParenthesisPlusSignRightParenthesis) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalSQLParser.g:18193:3: rule__ColumnOperand__OraAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOperand__OraAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__0"
    // InternalSQLParser.g:18202:1: rule__SubQueryOperand__Group__0 : rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 ;
    public final void rule__SubQueryOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18206:1: ( rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 )
            // InternalSQLParser.g:18207:2: rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__SubQueryOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0"


    // $ANTLR start "rule__SubQueryOperand__Group__0__Impl"
    // InternalSQLParser.g:18214:1: rule__SubQueryOperand__Group__0__Impl : ( () ) ;
    public final void rule__SubQueryOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18218:1: ( ( () ) )
            // InternalSQLParser.g:18219:1: ( () )
            {
            // InternalSQLParser.g:18219:1: ( () )
            // InternalSQLParser.g:18220:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }
            // InternalSQLParser.g:18221:2: ()
            // InternalSQLParser.g:18221:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__1"
    // InternalSQLParser.g:18229:1: rule__SubQueryOperand__Group__1 : rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 ;
    public final void rule__SubQueryOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18233:1: ( rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 )
            // InternalSQLParser.g:18234:2: rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__SubQueryOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1"


    // $ANTLR start "rule__SubQueryOperand__Group__1__Impl"
    // InternalSQLParser.g:18241:1: rule__SubQueryOperand__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__SubQueryOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18245:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:18246:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:18246:1: ( LeftParenthesis )
            // InternalSQLParser.g:18247:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__2"
    // InternalSQLParser.g:18256:1: rule__SubQueryOperand__Group__2 : rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 ;
    public final void rule__SubQueryOperand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18260:1: ( rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 )
            // InternalSQLParser.g:18261:2: rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__SubQueryOperand__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2"


    // $ANTLR start "rule__SubQueryOperand__Group__2__Impl"
    // InternalSQLParser.g:18268:1: rule__SubQueryOperand__Group__2__Impl : ( ( rule__SubQueryOperand__SelAssignment_2 ) ) ;
    public final void rule__SubQueryOperand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18272:1: ( ( ( rule__SubQueryOperand__SelAssignment_2 ) ) )
            // InternalSQLParser.g:18273:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            {
            // InternalSQLParser.g:18273:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            // InternalSQLParser.g:18274:2: ( rule__SubQueryOperand__SelAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }
            // InternalSQLParser.g:18275:2: ( rule__SubQueryOperand__SelAssignment_2 )
            // InternalSQLParser.g:18275:3: rule__SubQueryOperand__SelAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__SelAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__3"
    // InternalSQLParser.g:18283:1: rule__SubQueryOperand__Group__3 : rule__SubQueryOperand__Group__3__Impl ;
    public final void rule__SubQueryOperand__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18287:1: ( rule__SubQueryOperand__Group__3__Impl )
            // InternalSQLParser.g:18288:2: rule__SubQueryOperand__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3"


    // $ANTLR start "rule__SubQueryOperand__Group__3__Impl"
    // InternalSQLParser.g:18294:1: rule__SubQueryOperand__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__SubQueryOperand__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18298:1: ( ( RightParenthesis ) )
            // InternalSQLParser.g:18299:1: ( RightParenthesis )
            {
            // InternalSQLParser.g:18299:1: ( RightParenthesis )
            // InternalSQLParser.g:18300:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3__Impl"


    // $ANTLR start "rule__SQLCASE__Group__0"
    // InternalSQLParser.g:18310:1: rule__SQLCASE__Group__0 : rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 ;
    public final void rule__SQLCASE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18314:1: ( rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 )
            // InternalSQLParser.g:18315:2: rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1
            {
            pushFollow(FOLLOW_103);
            rule__SQLCASE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0"


    // $ANTLR start "rule__SQLCASE__Group__0__Impl"
    // InternalSQLParser.g:18322:1: rule__SQLCASE__Group__0__Impl : ( CASE ) ;
    public final void rule__SQLCASE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18326:1: ( ( CASE ) )
            // InternalSQLParser.g:18327:1: ( CASE )
            {
            // InternalSQLParser.g:18327:1: ( CASE )
            // InternalSQLParser.g:18328:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0__Impl"


    // $ANTLR start "rule__SQLCASE__Group__1"
    // InternalSQLParser.g:18337:1: rule__SQLCASE__Group__1 : rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 ;
    public final void rule__SQLCASE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18341:1: ( rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 )
            // InternalSQLParser.g:18342:2: rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2
            {
            pushFollow(FOLLOW_103);
            rule__SQLCASE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1"


    // $ANTLR start "rule__SQLCASE__Group__1__Impl"
    // InternalSQLParser.g:18349:1: rule__SQLCASE__Group__1__Impl : ( ( rule__SQLCASE__Alternatives_1 )? ) ;
    public final void rule__SQLCASE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18353:1: ( ( ( rule__SQLCASE__Alternatives_1 )? ) )
            // InternalSQLParser.g:18354:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            {
            // InternalSQLParser.g:18354:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            // InternalSQLParser.g:18355:2: ( rule__SQLCASE__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:18356:2: ( rule__SQLCASE__Alternatives_1 )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==EXTRACT||LA162_0==EXISTS||LA162_0==CAST||LA162_0==CASE||LA162_0==NOT_1||LA162_0==NOT||LA162_0==X||LA162_0==IN||LA162_0==LeftParenthesis||(LA162_0>=RULE_JRPARAM && LA162_0<=RULE_JRNPARAM)||(LA162_0>=RULE_UNSIGNED && LA162_0<=RULE_SIGNED_DOUBLE)||(LA162_0>=RULE_STRING_ && LA162_0<=RULE_ID)) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalSQLParser.g:18356:3: rule__SQLCASE__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1__Impl"


    // $ANTLR start "rule__SQLCASE__Group__2"
    // InternalSQLParser.g:18364:1: rule__SQLCASE__Group__2 : rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 ;
    public final void rule__SQLCASE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18368:1: ( rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 )
            // InternalSQLParser.g:18369:2: rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3
            {
            pushFollow(FOLLOW_104);
            rule__SQLCASE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2"


    // $ANTLR start "rule__SQLCASE__Group__2__Impl"
    // InternalSQLParser.g:18376:1: rule__SQLCASE__Group__2__Impl : ( ( rule__SQLCASE__WhenAssignment_2 ) ) ;
    public final void rule__SQLCASE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18380:1: ( ( ( rule__SQLCASE__WhenAssignment_2 ) ) )
            // InternalSQLParser.g:18381:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            {
            // InternalSQLParser.g:18381:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            // InternalSQLParser.g:18382:2: ( rule__SQLCASE__WhenAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }
            // InternalSQLParser.g:18383:2: ( rule__SQLCASE__WhenAssignment_2 )
            // InternalSQLParser.g:18383:3: rule__SQLCASE__WhenAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__WhenAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2__Impl"


    // $ANTLR start "rule__SQLCASE__Group__3"
    // InternalSQLParser.g:18391:1: rule__SQLCASE__Group__3 : rule__SQLCASE__Group__3__Impl ;
    public final void rule__SQLCASE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18395:1: ( rule__SQLCASE__Group__3__Impl )
            // InternalSQLParser.g:18396:2: rule__SQLCASE__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3"


    // $ANTLR start "rule__SQLCASE__Group__3__Impl"
    // InternalSQLParser.g:18402:1: rule__SQLCASE__Group__3__Impl : ( END ) ;
    public final void rule__SQLCASE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18406:1: ( ( END ) )
            // InternalSQLParser.g:18407:1: ( END )
            {
            // InternalSQLParser.g:18407:1: ( END )
            // InternalSQLParser.g:18408:2: END
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }
            match(input,END,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__0"
    // InternalSQLParser.g:18418:1: rule__SQLCaseWhens__Group__0 : rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 ;
    public final void rule__SQLCaseWhens__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18422:1: ( rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 )
            // InternalSQLParser.g:18423:2: rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1
            {
            pushFollow(FOLLOW_103);
            rule__SQLCaseWhens__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0"


    // $ANTLR start "rule__SQLCaseWhens__Group__0__Impl"
    // InternalSQLParser.g:18430:1: rule__SQLCaseWhens__Group__0__Impl : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18434:1: ( ( ruleSqlCaseWhen ) )
            // InternalSQLParser.g:18435:1: ( ruleSqlCaseWhen )
            {
            // InternalSQLParser.g:18435:1: ( ruleSqlCaseWhen )
            // InternalSQLParser.g:18436:2: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__1"
    // InternalSQLParser.g:18445:1: rule__SQLCaseWhens__Group__1 : rule__SQLCaseWhens__Group__1__Impl ;
    public final void rule__SQLCaseWhens__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18449:1: ( rule__SQLCaseWhens__Group__1__Impl )
            // InternalSQLParser.g:18450:2: rule__SQLCaseWhens__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1"


    // $ANTLR start "rule__SQLCaseWhens__Group__1__Impl"
    // InternalSQLParser.g:18456:1: rule__SQLCaseWhens__Group__1__Impl : ( ( rule__SQLCaseWhens__Group_1__0 )? ) ;
    public final void rule__SQLCaseWhens__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18460:1: ( ( ( rule__SQLCaseWhens__Group_1__0 )? ) )
            // InternalSQLParser.g:18461:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            {
            // InternalSQLParser.g:18461:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            // InternalSQLParser.g:18462:2: ( rule__SQLCaseWhens__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }
            // InternalSQLParser.g:18463:2: ( rule__SQLCaseWhens__Group_1__0 )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==WHEN) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalSQLParser.g:18463:3: rule__SQLCaseWhens__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCaseWhens__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0"
    // InternalSQLParser.g:18472:1: rule__SQLCaseWhens__Group_1__0 : rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 ;
    public final void rule__SQLCaseWhens__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18476:1: ( rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 )
            // InternalSQLParser.g:18477:2: rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1
            {
            pushFollow(FOLLOW_103);
            rule__SQLCaseWhens__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0__Impl"
    // InternalSQLParser.g:18484:1: rule__SQLCaseWhens__Group_1__0__Impl : ( () ) ;
    public final void rule__SQLCaseWhens__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18488:1: ( ( () ) )
            // InternalSQLParser.g:18489:1: ( () )
            {
            // InternalSQLParser.g:18489:1: ( () )
            // InternalSQLParser.g:18490:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }
            // InternalSQLParser.g:18491:2: ()
            // InternalSQLParser.g:18491:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1"
    // InternalSQLParser.g:18499:1: rule__SQLCaseWhens__Group_1__1 : rule__SQLCaseWhens__Group_1__1__Impl ;
    public final void rule__SQLCaseWhens__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18503:1: ( rule__SQLCaseWhens__Group_1__1__Impl )
            // InternalSQLParser.g:18504:2: rule__SQLCaseWhens__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1__Impl"
    // InternalSQLParser.g:18510:1: rule__SQLCaseWhens__Group_1__1__Impl : ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__SQLCaseWhens__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18514:1: ( ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) )
            // InternalSQLParser.g:18515:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            {
            // InternalSQLParser.g:18515:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            // InternalSQLParser.g:18516:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            {
            // InternalSQLParser.g:18516:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) )
            // InternalSQLParser.g:18517:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:18518:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            // InternalSQLParser.g:18518:4: rule__SQLCaseWhens__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_105);
            rule__SQLCaseWhens__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSQLParser.g:18521:2: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            // InternalSQLParser.g:18522:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSQLParser.g:18523:3: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==WHEN) ) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalSQLParser.g:18523:4: rule__SQLCaseWhens__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_105);
            	    rule__SQLCaseWhens__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__0"
    // InternalSQLParser.g:18533:1: rule__SqlCaseWhen__Group__0 : rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 ;
    public final void rule__SqlCaseWhen__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18537:1: ( rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 )
            // InternalSQLParser.g:18538:2: rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__SqlCaseWhen__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0"


    // $ANTLR start "rule__SqlCaseWhen__Group__0__Impl"
    // InternalSQLParser.g:18545:1: rule__SqlCaseWhen__Group__0__Impl : ( WHEN ) ;
    public final void rule__SqlCaseWhen__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18549:1: ( ( WHEN ) )
            // InternalSQLParser.g:18550:1: ( WHEN )
            {
            // InternalSQLParser.g:18550:1: ( WHEN )
            // InternalSQLParser.g:18551:2: WHEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }
            match(input,WHEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__1"
    // InternalSQLParser.g:18560:1: rule__SqlCaseWhen__Group__1 : rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 ;
    public final void rule__SqlCaseWhen__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18564:1: ( rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 )
            // InternalSQLParser.g:18565:2: rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2
            {
            pushFollow(FOLLOW_106);
            rule__SqlCaseWhen__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1"


    // $ANTLR start "rule__SqlCaseWhen__Group__1__Impl"
    // InternalSQLParser.g:18572:1: rule__SqlCaseWhen__Group__1__Impl : ( ( rule__SqlCaseWhen__Alternatives_1 ) ) ;
    public final void rule__SqlCaseWhen__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18576:1: ( ( ( rule__SqlCaseWhen__Alternatives_1 ) ) )
            // InternalSQLParser.g:18577:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            {
            // InternalSQLParser.g:18577:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            // InternalSQLParser.g:18578:2: ( rule__SqlCaseWhen__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:18579:2: ( rule__SqlCaseWhen__Alternatives_1 )
            // InternalSQLParser.g:18579:3: rule__SqlCaseWhen__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__2"
    // InternalSQLParser.g:18587:1: rule__SqlCaseWhen__Group__2 : rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 ;
    public final void rule__SqlCaseWhen__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18591:1: ( rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 )
            // InternalSQLParser.g:18592:2: rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3
            {
            pushFollow(FOLLOW_69);
            rule__SqlCaseWhen__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2"


    // $ANTLR start "rule__SqlCaseWhen__Group__2__Impl"
    // InternalSQLParser.g:18599:1: rule__SqlCaseWhen__Group__2__Impl : ( THEN ) ;
    public final void rule__SqlCaseWhen__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18603:1: ( ( THEN ) )
            // InternalSQLParser.g:18604:1: ( THEN )
            {
            // InternalSQLParser.g:18604:1: ( THEN )
            // InternalSQLParser.g:18605:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__3"
    // InternalSQLParser.g:18614:1: rule__SqlCaseWhen__Group__3 : rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 ;
    public final void rule__SqlCaseWhen__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18618:1: ( rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 )
            // InternalSQLParser.g:18619:2: rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4
            {
            pushFollow(FOLLOW_107);
            rule__SqlCaseWhen__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3"


    // $ANTLR start "rule__SqlCaseWhen__Group__3__Impl"
    // InternalSQLParser.g:18626:1: rule__SqlCaseWhen__Group__3__Impl : ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) ;
    public final void rule__SqlCaseWhen__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18630:1: ( ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) )
            // InternalSQLParser.g:18631:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            {
            // InternalSQLParser.g:18631:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            // InternalSQLParser.g:18632:2: ( rule__SqlCaseWhen__TexpAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }
            // InternalSQLParser.g:18633:2: ( rule__SqlCaseWhen__TexpAssignment_3 )
            // InternalSQLParser.g:18633:3: rule__SqlCaseWhen__TexpAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__TexpAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__4"
    // InternalSQLParser.g:18641:1: rule__SqlCaseWhen__Group__4 : rule__SqlCaseWhen__Group__4__Impl ;
    public final void rule__SqlCaseWhen__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18645:1: ( rule__SqlCaseWhen__Group__4__Impl )
            // InternalSQLParser.g:18646:2: rule__SqlCaseWhen__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4"


    // $ANTLR start "rule__SqlCaseWhen__Group__4__Impl"
    // InternalSQLParser.g:18652:1: rule__SqlCaseWhen__Group__4__Impl : ( ( rule__SqlCaseWhen__Group_4__0 )? ) ;
    public final void rule__SqlCaseWhen__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18656:1: ( ( ( rule__SqlCaseWhen__Group_4__0 )? ) )
            // InternalSQLParser.g:18657:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            {
            // InternalSQLParser.g:18657:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            // InternalSQLParser.g:18658:2: ( rule__SqlCaseWhen__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }
            // InternalSQLParser.g:18659:2: ( rule__SqlCaseWhen__Group_4__0 )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==ELSE) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalSQLParser.g:18659:3: rule__SqlCaseWhen__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0"
    // InternalSQLParser.g:18668:1: rule__SqlCaseWhen__Group_4__0 : rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 ;
    public final void rule__SqlCaseWhen__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18672:1: ( rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 )
            // InternalSQLParser.g:18673:2: rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1
            {
            pushFollow(FOLLOW_69);
            rule__SqlCaseWhen__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0__Impl"
    // InternalSQLParser.g:18680:1: rule__SqlCaseWhen__Group_4__0__Impl : ( ELSE ) ;
    public final void rule__SqlCaseWhen__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18684:1: ( ( ELSE ) )
            // InternalSQLParser.g:18685:1: ( ELSE )
            {
            // InternalSQLParser.g:18685:1: ( ELSE )
            // InternalSQLParser.g:18686:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1"
    // InternalSQLParser.g:18695:1: rule__SqlCaseWhen__Group_4__1 : rule__SqlCaseWhen__Group_4__1__Impl ;
    public final void rule__SqlCaseWhen__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18699:1: ( rule__SqlCaseWhen__Group_4__1__Impl )
            // InternalSQLParser.g:18700:2: rule__SqlCaseWhen__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1__Impl"
    // InternalSQLParser.g:18706:1: rule__SqlCaseWhen__Group_4__1__Impl : ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) ;
    public final void rule__SqlCaseWhen__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18710:1: ( ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) )
            // InternalSQLParser.g:18711:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            {
            // InternalSQLParser.g:18711:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            // InternalSQLParser.g:18712:2: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }
            // InternalSQLParser.g:18713:2: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            // InternalSQLParser.g:18713:3: rule__SqlCaseWhen__EexpAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__EexpAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1__Impl"


    // $ANTLR start "rule__JoinType__Group__0"
    // InternalSQLParser.g:18722:1: rule__JoinType__Group__0 : rule__JoinType__Group__0__Impl rule__JoinType__Group__1 ;
    public final void rule__JoinType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18726:1: ( rule__JoinType__Group__0__Impl rule__JoinType__Group__1 )
            // InternalSQLParser.g:18727:2: rule__JoinType__Group__0__Impl rule__JoinType__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__JoinType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0"


    // $ANTLR start "rule__JoinType__Group__0__Impl"
    // InternalSQLParser.g:18734:1: rule__JoinType__Group__0__Impl : ( ( NATURAL )? ) ;
    public final void rule__JoinType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18738:1: ( ( ( NATURAL )? ) )
            // InternalSQLParser.g:18739:1: ( ( NATURAL )? )
            {
            // InternalSQLParser.g:18739:1: ( ( NATURAL )? )
            // InternalSQLParser.g:18740:2: ( NATURAL )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }
            // InternalSQLParser.g:18741:2: ( NATURAL )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==NATURAL) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalSQLParser.g:18741:3: NATURAL
                    {
                    match(input,NATURAL,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0__Impl"


    // $ANTLR start "rule__JoinType__Group__1"
    // InternalSQLParser.g:18749:1: rule__JoinType__Group__1 : rule__JoinType__Group__1__Impl rule__JoinType__Group__2 ;
    public final void rule__JoinType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18753:1: ( rule__JoinType__Group__1__Impl rule__JoinType__Group__2 )
            // InternalSQLParser.g:18754:2: rule__JoinType__Group__1__Impl rule__JoinType__Group__2
            {
            pushFollow(FOLLOW_49);
            rule__JoinType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1"


    // $ANTLR start "rule__JoinType__Group__1__Impl"
    // InternalSQLParser.g:18761:1: rule__JoinType__Group__1__Impl : ( ( rule__JoinType__Alternatives_1 )? ) ;
    public final void rule__JoinType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18765:1: ( ( ( rule__JoinType__Alternatives_1 )? ) )
            // InternalSQLParser.g:18766:1: ( ( rule__JoinType__Alternatives_1 )? )
            {
            // InternalSQLParser.g:18766:1: ( ( rule__JoinType__Alternatives_1 )? )
            // InternalSQLParser.g:18767:2: ( rule__JoinType__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }
            // InternalSQLParser.g:18768:2: ( rule__JoinType__Alternatives_1 )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==STRAIGHT_JOIN||LA167_0==CROSS||LA167_0==INNER||LA167_0==RIGHT||LA167_0==FULL||LA167_0==LEFT) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalSQLParser.g:18768:3: rule__JoinType__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1__Impl"


    // $ANTLR start "rule__JoinType__Group__2"
    // InternalSQLParser.g:18776:1: rule__JoinType__Group__2 : rule__JoinType__Group__2__Impl ;
    public final void rule__JoinType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18780:1: ( rule__JoinType__Group__2__Impl )
            // InternalSQLParser.g:18781:2: rule__JoinType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2"


    // $ANTLR start "rule__JoinType__Group__2__Impl"
    // InternalSQLParser.g:18787:1: rule__JoinType__Group__2__Impl : ( JOIN ) ;
    public final void rule__JoinType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18791:1: ( ( JOIN ) )
            // InternalSQLParser.g:18792:1: ( JOIN )
            {
            // InternalSQLParser.g:18792:1: ( JOIN )
            // InternalSQLParser.g:18793:2: JOIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }
            match(input,JOIN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__0"
    // InternalSQLParser.g:18803:1: rule__JoinType__Group_1_1__0 : rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 ;
    public final void rule__JoinType__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18807:1: ( rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 )
            // InternalSQLParser.g:18808:2: rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1
            {
            pushFollow(FOLLOW_108);
            rule__JoinType__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0"


    // $ANTLR start "rule__JoinType__Group_1_1__0__Impl"
    // InternalSQLParser.g:18815:1: rule__JoinType__Group_1_1__0__Impl : ( ( rule__JoinType__Alternatives_1_1_0 ) ) ;
    public final void rule__JoinType__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18819:1: ( ( ( rule__JoinType__Alternatives_1_1_0 ) ) )
            // InternalSQLParser.g:18820:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            {
            // InternalSQLParser.g:18820:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            // InternalSQLParser.g:18821:2: ( rule__JoinType__Alternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }
            // InternalSQLParser.g:18822:2: ( rule__JoinType__Alternatives_1_1_0 )
            // InternalSQLParser.g:18822:3: rule__JoinType__Alternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Alternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__1"
    // InternalSQLParser.g:18830:1: rule__JoinType__Group_1_1__1 : rule__JoinType__Group_1_1__1__Impl ;
    public final void rule__JoinType__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18834:1: ( rule__JoinType__Group_1_1__1__Impl )
            // InternalSQLParser.g:18835:2: rule__JoinType__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1"


    // $ANTLR start "rule__JoinType__Group_1_1__1__Impl"
    // InternalSQLParser.g:18841:1: rule__JoinType__Group_1_1__1__Impl : ( ( OUTER )? ) ;
    public final void rule__JoinType__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18845:1: ( ( ( OUTER )? ) )
            // InternalSQLParser.g:18846:1: ( ( OUTER )? )
            {
            // InternalSQLParser.g:18846:1: ( ( OUTER )? )
            // InternalSQLParser.g:18847:2: ( OUTER )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }
            // InternalSQLParser.g:18848:2: ( OUTER )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==OUTER) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalSQLParser.g:18848:3: OUTER
                    {
                    match(input,OUTER,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1__Impl"


    // $ANTLR start "rule__SignedLiteral__Group_1__0"
    // InternalSQLParser.g:18857:1: rule__SignedLiteral__Group_1__0 : rule__SignedLiteral__Group_1__0__Impl rule__SignedLiteral__Group_1__1 ;
    public final void rule__SignedLiteral__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18861:1: ( rule__SignedLiteral__Group_1__0__Impl rule__SignedLiteral__Group_1__1 )
            // InternalSQLParser.g:18862:2: rule__SignedLiteral__Group_1__0__Impl rule__SignedLiteral__Group_1__1
            {
            pushFollow(FOLLOW_22);
            rule__SignedLiteral__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_1__0"


    // $ANTLR start "rule__SignedLiteral__Group_1__0__Impl"
    // InternalSQLParser.g:18869:1: rule__SignedLiteral__Group_1__0__Impl : ( PlusSign ) ;
    public final void rule__SignedLiteral__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18873:1: ( ( PlusSign ) )
            // InternalSQLParser.g:18874:1: ( PlusSign )
            {
            // InternalSQLParser.g:18874:1: ( PlusSign )
            // InternalSQLParser.g:18875:2: PlusSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getPlusSignKeyword_1_0()); 
            }
            match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getPlusSignKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_1__0__Impl"


    // $ANTLR start "rule__SignedLiteral__Group_1__1"
    // InternalSQLParser.g:18884:1: rule__SignedLiteral__Group_1__1 : rule__SignedLiteral__Group_1__1__Impl ;
    public final void rule__SignedLiteral__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18888:1: ( rule__SignedLiteral__Group_1__1__Impl )
            // InternalSQLParser.g:18889:2: rule__SignedLiteral__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_1__1"


    // $ANTLR start "rule__SignedLiteral__Group_1__1__Impl"
    // InternalSQLParser.g:18895:1: rule__SignedLiteral__Group_1__1__Impl : ( ruleNumLiteral ) ;
    public final void rule__SignedLiteral__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18899:1: ( ( ruleNumLiteral ) )
            // InternalSQLParser.g:18900:1: ( ruleNumLiteral )
            {
            // InternalSQLParser.g:18900:1: ( ruleNumLiteral )
            // InternalSQLParser.g:18901:2: ruleNumLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getNumLiteralParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getNumLiteralParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_1__1__Impl"


    // $ANTLR start "rule__SignedLiteral__Group_2__0"
    // InternalSQLParser.g:18911:1: rule__SignedLiteral__Group_2__0 : rule__SignedLiteral__Group_2__0__Impl rule__SignedLiteral__Group_2__1 ;
    public final void rule__SignedLiteral__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18915:1: ( rule__SignedLiteral__Group_2__0__Impl rule__SignedLiteral__Group_2__1 )
            // InternalSQLParser.g:18916:2: rule__SignedLiteral__Group_2__0__Impl rule__SignedLiteral__Group_2__1
            {
            pushFollow(FOLLOW_22);
            rule__SignedLiteral__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_2__0"


    // $ANTLR start "rule__SignedLiteral__Group_2__0__Impl"
    // InternalSQLParser.g:18923:1: rule__SignedLiteral__Group_2__0__Impl : ( HyphenMinus ) ;
    public final void rule__SignedLiteral__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18927:1: ( ( HyphenMinus ) )
            // InternalSQLParser.g:18928:1: ( HyphenMinus )
            {
            // InternalSQLParser.g:18928:1: ( HyphenMinus )
            // InternalSQLParser.g:18929:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getHyphenMinusKeyword_2_0()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getHyphenMinusKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_2__0__Impl"


    // $ANTLR start "rule__SignedLiteral__Group_2__1"
    // InternalSQLParser.g:18938:1: rule__SignedLiteral__Group_2__1 : rule__SignedLiteral__Group_2__1__Impl ;
    public final void rule__SignedLiteral__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18942:1: ( rule__SignedLiteral__Group_2__1__Impl )
            // InternalSQLParser.g:18943:2: rule__SignedLiteral__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SignedLiteral__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_2__1"


    // $ANTLR start "rule__SignedLiteral__Group_2__1__Impl"
    // InternalSQLParser.g:18949:1: rule__SignedLiteral__Group_2__1__Impl : ( ruleNumLiteral ) ;
    public final void rule__SignedLiteral__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18953:1: ( ( ruleNumLiteral ) )
            // InternalSQLParser.g:18954:1: ( ruleNumLiteral )
            {
            // InternalSQLParser.g:18954:1: ( ruleNumLiteral )
            // InternalSQLParser.g:18955:2: ruleNumLiteral
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSignedLiteralAccess().getNumLiteralParserRuleCall_2_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSignedLiteralAccess().getNumLiteralParserRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SignedLiteral__Group_2__1__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_0__0"
    // InternalSQLParser.g:18965:1: rule__TemporalLiteral__Group_0__0 : rule__TemporalLiteral__Group_0__0__Impl rule__TemporalLiteral__Group_0__1 ;
    public final void rule__TemporalLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18969:1: ( rule__TemporalLiteral__Group_0__0__Impl rule__TemporalLiteral__Group_0__1 )
            // InternalSQLParser.g:18970:2: rule__TemporalLiteral__Group_0__0__Impl rule__TemporalLiteral__Group_0__1
            {
            pushFollow(FOLLOW_25);
            rule__TemporalLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_0__0"


    // $ANTLR start "rule__TemporalLiteral__Group_0__0__Impl"
    // InternalSQLParser.g:18977:1: rule__TemporalLiteral__Group_0__0__Impl : ( DATE ) ;
    public final void rule__TemporalLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18981:1: ( ( DATE ) )
            // InternalSQLParser.g:18982:1: ( DATE )
            {
            // InternalSQLParser.g:18982:1: ( DATE )
            // InternalSQLParser.g:18983:2: DATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getDATEKeyword_0_0()); 
            }
            match(input,DATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getDATEKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_0__1"
    // InternalSQLParser.g:18992:1: rule__TemporalLiteral__Group_0__1 : rule__TemporalLiteral__Group_0__1__Impl ;
    public final void rule__TemporalLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:18996:1: ( rule__TemporalLiteral__Group_0__1__Impl )
            // InternalSQLParser.g:18997:2: rule__TemporalLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_0__1"


    // $ANTLR start "rule__TemporalLiteral__Group_0__1__Impl"
    // InternalSQLParser.g:19003:1: rule__TemporalLiteral__Group_0__1__Impl : ( RULE_STRING_ ) ;
    public final void rule__TemporalLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19007:1: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:19008:1: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:19008:1: ( RULE_STRING_ )
            // InternalSQLParser.g:19009:2: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_0_1()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_1__0"
    // InternalSQLParser.g:19019:1: rule__TemporalLiteral__Group_1__0 : rule__TemporalLiteral__Group_1__0__Impl rule__TemporalLiteral__Group_1__1 ;
    public final void rule__TemporalLiteral__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19023:1: ( rule__TemporalLiteral__Group_1__0__Impl rule__TemporalLiteral__Group_1__1 )
            // InternalSQLParser.g:19024:2: rule__TemporalLiteral__Group_1__0__Impl rule__TemporalLiteral__Group_1__1
            {
            pushFollow(FOLLOW_25);
            rule__TemporalLiteral__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_1__0"


    // $ANTLR start "rule__TemporalLiteral__Group_1__0__Impl"
    // InternalSQLParser.g:19031:1: rule__TemporalLiteral__Group_1__0__Impl : ( TIME ) ;
    public final void rule__TemporalLiteral__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19035:1: ( ( TIME ) )
            // InternalSQLParser.g:19036:1: ( TIME )
            {
            // InternalSQLParser.g:19036:1: ( TIME )
            // InternalSQLParser.g:19037:2: TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getTIMEKeyword_1_0()); 
            }
            match(input,TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getTIMEKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_1__0__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_1__1"
    // InternalSQLParser.g:19046:1: rule__TemporalLiteral__Group_1__1 : rule__TemporalLiteral__Group_1__1__Impl ;
    public final void rule__TemporalLiteral__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19050:1: ( rule__TemporalLiteral__Group_1__1__Impl )
            // InternalSQLParser.g:19051:2: rule__TemporalLiteral__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_1__1"


    // $ANTLR start "rule__TemporalLiteral__Group_1__1__Impl"
    // InternalSQLParser.g:19057:1: rule__TemporalLiteral__Group_1__1__Impl : ( RULE_STRING_ ) ;
    public final void rule__TemporalLiteral__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19061:1: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:19062:1: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:19062:1: ( RULE_STRING_ )
            // InternalSQLParser.g:19063:2: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_1_1()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_1__1__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_2__0"
    // InternalSQLParser.g:19073:1: rule__TemporalLiteral__Group_2__0 : rule__TemporalLiteral__Group_2__0__Impl rule__TemporalLiteral__Group_2__1 ;
    public final void rule__TemporalLiteral__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19077:1: ( rule__TemporalLiteral__Group_2__0__Impl rule__TemporalLiteral__Group_2__1 )
            // InternalSQLParser.g:19078:2: rule__TemporalLiteral__Group_2__0__Impl rule__TemporalLiteral__Group_2__1
            {
            pushFollow(FOLLOW_25);
            rule__TemporalLiteral__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_2__0"


    // $ANTLR start "rule__TemporalLiteral__Group_2__0__Impl"
    // InternalSQLParser.g:19085:1: rule__TemporalLiteral__Group_2__0__Impl : ( TIMESTAMP ) ;
    public final void rule__TemporalLiteral__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19089:1: ( ( TIMESTAMP ) )
            // InternalSQLParser.g:19090:1: ( TIMESTAMP )
            {
            // InternalSQLParser.g:19090:1: ( TIMESTAMP )
            // InternalSQLParser.g:19091:2: TIMESTAMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getTIMESTAMPKeyword_2_0()); 
            }
            match(input,TIMESTAMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getTIMESTAMPKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_2__0__Impl"


    // $ANTLR start "rule__TemporalLiteral__Group_2__1"
    // InternalSQLParser.g:19100:1: rule__TemporalLiteral__Group_2__1 : rule__TemporalLiteral__Group_2__1__Impl ;
    public final void rule__TemporalLiteral__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19104:1: ( rule__TemporalLiteral__Group_2__1__Impl )
            // InternalSQLParser.g:19105:2: rule__TemporalLiteral__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TemporalLiteral__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_2__1"


    // $ANTLR start "rule__TemporalLiteral__Group_2__1__Impl"
    // InternalSQLParser.g:19111:1: rule__TemporalLiteral__Group_2__1__Impl : ( RULE_STRING_ ) ;
    public final void rule__TemporalLiteral__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19115:1: ( ( RULE_STRING_ ) )
            // InternalSQLParser.g:19116:1: ( RULE_STRING_ )
            {
            // InternalSQLParser.g:19116:1: ( RULE_STRING_ )
            // InternalSQLParser.g:19117:2: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_2_1()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTemporalLiteralAccess().getSTRING_TerminalRuleCall_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TemporalLiteral__Group_2__1__Impl"


    // $ANTLR start "rule__FNAME__Group__0"
    // InternalSQLParser.g:19127:1: rule__FNAME__Group__0 : rule__FNAME__Group__0__Impl rule__FNAME__Group__1 ;
    public final void rule__FNAME__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19131:1: ( rule__FNAME__Group__0__Impl rule__FNAME__Group__1 )
            // InternalSQLParser.g:19132:2: rule__FNAME__Group__0__Impl rule__FNAME__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__FNAME__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0"


    // $ANTLR start "rule__FNAME__Group__0__Impl"
    // InternalSQLParser.g:19139:1: rule__FNAME__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FNAME__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19143:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:19144:1: ( RULE_ID )
            {
            // InternalSQLParser.g:19144:1: ( RULE_ID )
            // InternalSQLParser.g:19145:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0__Impl"


    // $ANTLR start "rule__FNAME__Group__1"
    // InternalSQLParser.g:19154:1: rule__FNAME__Group__1 : rule__FNAME__Group__1__Impl ;
    public final void rule__FNAME__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19158:1: ( rule__FNAME__Group__1__Impl )
            // InternalSQLParser.g:19159:2: rule__FNAME__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1"


    // $ANTLR start "rule__FNAME__Group__1__Impl"
    // InternalSQLParser.g:19165:1: rule__FNAME__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FNAME__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19169:1: ( ( LeftParenthesis ) )
            // InternalSQLParser.g:19170:1: ( LeftParenthesis )
            {
            // InternalSQLParser.g:19170:1: ( LeftParenthesis )
            // InternalSQLParser.g:19171:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1__Impl"


    // $ANTLR start "rule__Model__SimpleStatementAssignment"
    // InternalSQLParser.g:19181:1: rule__Model__SimpleStatementAssignment : ( ruleSimpleStatement ) ;
    public final void rule__Model__SimpleStatementAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19185:1: ( ( ruleSimpleStatement ) )
            // InternalSQLParser.g:19186:2: ( ruleSimpleStatement )
            {
            // InternalSQLParser.g:19186:2: ( ruleSimpleStatement )
            // InternalSQLParser.g:19187:3: ruleSimpleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getSimpleStatementSimpleStatementParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSimpleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getSimpleStatementSimpleStatementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__SimpleStatementAssignment"


    // $ANTLR start "rule__SimpleStatement__SelectAssignment_0"
    // InternalSQLParser.g:19196:1: rule__SimpleStatement__SelectAssignment_0 : ( ruleSelectStatement ) ;
    public final void rule__SimpleStatement__SelectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19200:1: ( ( ruleSelectStatement ) )
            // InternalSQLParser.g:19201:2: ( ruleSelectStatement )
            {
            // InternalSQLParser.g:19201:2: ( ruleSelectStatement )
            // InternalSQLParser.g:19202:3: ruleSelectStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementAccess().getSelectSelectStatementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementAccess().getSelectSelectStatementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStatement__SelectAssignment_0"


    // $ANTLR start "rule__SimpleStatement__InsertAssignment_1"
    // InternalSQLParser.g:19211:1: rule__SimpleStatement__InsertAssignment_1 : ( ruleInsertStatement ) ;
    public final void rule__SimpleStatement__InsertAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19215:1: ( ( ruleInsertStatement ) )
            // InternalSQLParser.g:19216:2: ( ruleInsertStatement )
            {
            // InternalSQLParser.g:19216:2: ( ruleInsertStatement )
            // InternalSQLParser.g:19217:3: ruleInsertStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementAccess().getInsertInsertStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInsertStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementAccess().getInsertInsertStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStatement__InsertAssignment_1"


    // $ANTLR start "rule__SimpleStatement__CreateAssignment_2"
    // InternalSQLParser.g:19226:1: rule__SimpleStatement__CreateAssignment_2 : ( ruleCreateStatement ) ;
    public final void rule__SimpleStatement__CreateAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19230:1: ( ( ruleCreateStatement ) )
            // InternalSQLParser.g:19231:2: ( ruleCreateStatement )
            {
            // InternalSQLParser.g:19231:2: ( ruleCreateStatement )
            // InternalSQLParser.g:19232:3: ruleCreateStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSimpleStatementAccess().getCreateCreateStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCreateStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSimpleStatementAccess().getCreateCreateStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SimpleStatement__CreateAssignment_2"


    // $ANTLR start "rule__SelectStatement__WqAssignment_1"
    // InternalSQLParser.g:19241:1: rule__SelectStatement__WqAssignment_1 : ( ruleWithQuery ) ;
    public final void rule__SelectStatement__WqAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19245:1: ( ( ruleWithQuery ) )
            // InternalSQLParser.g:19246:2: ( ruleWithQuery )
            {
            // InternalSQLParser.g:19246:2: ( ruleWithQuery )
            // InternalSQLParser.g:19247:3: ruleWithQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getWqWithQueryParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getWqWithQueryParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__WqAssignment_1"


    // $ANTLR start "rule__SelectStatement__QueryAssignment_2"
    // InternalSQLParser.g:19256:1: rule__SelectStatement__QueryAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__SelectStatement__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19260:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:19261:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:19261:2: ( ruleSelectQuery )
            // InternalSQLParser.g:19262:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectStatementAccess().getQuerySelectQueryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectStatementAccess().getQuerySelectQueryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectStatement__QueryAssignment_2"


    // $ANTLR start "rule__InsertStatement__TblAssignment_2"
    // InternalSQLParser.g:19271:1: rule__InsertStatement__TblAssignment_2 : ( ruleTables ) ;
    public final void rule__InsertStatement__TblAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19275:1: ( ( ruleTables ) )
            // InternalSQLParser.g:19276:2: ( ruleTables )
            {
            // InternalSQLParser.g:19276:2: ( ruleTables )
            // InternalSQLParser.g:19277:3: ruleTables
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getTblTablesParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getTblTablesParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__TblAssignment_2"


    // $ANTLR start "rule__InsertStatement__ColsAssignment_3"
    // InternalSQLParser.g:19286:1: rule__InsertStatement__ColsAssignment_3 : ( ruleColumns ) ;
    public final void rule__InsertStatement__ColsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19290:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:19291:2: ( ruleColumns )
            {
            // InternalSQLParser.g:19291:2: ( ruleColumns )
            // InternalSQLParser.g:19292:3: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getColsColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getColsColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__ColsAssignment_3"


    // $ANTLR start "rule__InsertStatement__ValsAssignment_4"
    // InternalSQLParser.g:19301:1: rule__InsertStatement__ValsAssignment_4 : ( ruleValues ) ;
    public final void rule__InsertStatement__ValsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19305:1: ( ( ruleValues ) )
            // InternalSQLParser.g:19306:2: ( ruleValues )
            {
            // InternalSQLParser.g:19306:2: ( ruleValues )
            // InternalSQLParser.g:19307:3: ruleValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInsertStatementAccess().getValsValuesParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInsertStatementAccess().getValsValuesParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InsertStatement__ValsAssignment_4"


    // $ANTLR start "rule__CreateStatement__Create_tblAssignment_1"
    // InternalSQLParser.g:19316:1: rule__CreateStatement__Create_tblAssignment_1 : ( ruleCreateTable ) ;
    public final void rule__CreateStatement__Create_tblAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19320:1: ( ( ruleCreateTable ) )
            // InternalSQLParser.g:19321:2: ( ruleCreateTable )
            {
            // InternalSQLParser.g:19321:2: ( ruleCreateTable )
            // InternalSQLParser.g:19322:3: ruleCreateTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateStatementAccess().getCreate_tblCreateTableParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCreateTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateStatementAccess().getCreate_tblCreateTableParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateStatement__Create_tblAssignment_1"


    // $ANTLR start "rule__CreateTable__TableNameAssignment_1"
    // InternalSQLParser.g:19331:1: rule__CreateTable__TableNameAssignment_1 : ( ruleTableOrAlias ) ;
    public final void rule__CreateTable__TableNameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19335:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:19336:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:19336:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:19337:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTableNameTableOrAliasParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTableNameTableOrAliasParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__TableNameAssignment_1"


    // $ANTLR start "rule__CreateTable__TableElementListAssignment_3"
    // InternalSQLParser.g:19346:1: rule__CreateTable__TableElementListAssignment_3 : ( ruleTableElementList ) ;
    public final void rule__CreateTable__TableElementListAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19350:1: ( ( ruleTableElementList ) )
            // InternalSQLParser.g:19351:2: ( ruleTableElementList )
            {
            // InternalSQLParser.g:19351:2: ( ruleTableElementList )
            // InternalSQLParser.g:19352:3: ruleTableElementList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCreateTableAccess().getTableElementListTableElementListParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableElementList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCreateTableAccess().getTableElementListTableElementListParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CreateTable__TableElementListAssignment_3"


    // $ANTLR start "rule__TableElementList__TableElementAssignment_0"
    // InternalSQLParser.g:19361:1: rule__TableElementList__TableElementAssignment_0 : ( ruleTableElement ) ;
    public final void rule__TableElementList__TableElementAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19365:1: ( ( ruleTableElement ) )
            // InternalSQLParser.g:19366:2: ( ruleTableElement )
            {
            // InternalSQLParser.g:19366:2: ( ruleTableElement )
            // InternalSQLParser.g:19367:3: ruleTableElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getTableElementTableElementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getTableElementTableElementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__TableElementAssignment_0"


    // $ANTLR start "rule__TableElementList__TableElementAssignment_1_1"
    // InternalSQLParser.g:19376:1: rule__TableElementList__TableElementAssignment_1_1 : ( ruleTableElement ) ;
    public final void rule__TableElementList__TableElementAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19380:1: ( ( ruleTableElement ) )
            // InternalSQLParser.g:19381:2: ( ruleTableElement )
            {
            // InternalSQLParser.g:19381:2: ( ruleTableElement )
            // InternalSQLParser.g:19382:3: ruleTableElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementListAccess().getTableElementTableElementParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementListAccess().getTableElementTableElementParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElementList__TableElementAssignment_1_1"


    // $ANTLR start "rule__TableElement__ColumnDefinitionAssignment_0"
    // InternalSQLParser.g:19391:1: rule__TableElement__ColumnDefinitionAssignment_0 : ( ruleColumnDefinition ) ;
    public final void rule__TableElement__ColumnDefinitionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19395:1: ( ( ruleColumnDefinition ) )
            // InternalSQLParser.g:19396:2: ( ruleColumnDefinition )
            {
            // InternalSQLParser.g:19396:2: ( ruleColumnDefinition )
            // InternalSQLParser.g:19397:3: ruleColumnDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementAccess().getColumnDefinitionColumnDefinitionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementAccess().getColumnDefinitionColumnDefinitionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElement__ColumnDefinitionAssignment_0"


    // $ANTLR start "rule__TableElement__TableConstraintDefAssignment_1"
    // InternalSQLParser.g:19406:1: rule__TableElement__TableConstraintDefAssignment_1 : ( ruleTableConstraintDef ) ;
    public final void rule__TableElement__TableConstraintDefAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19410:1: ( ( ruleTableConstraintDef ) )
            // InternalSQLParser.g:19411:2: ( ruleTableConstraintDef )
            {
            // InternalSQLParser.g:19411:2: ( ruleTableConstraintDef )
            // InternalSQLParser.g:19412:3: ruleTableConstraintDef
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableElementAccess().getTableConstraintDefTableConstraintDefParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableConstraintDef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableElementAccess().getTableConstraintDefTableConstraintDefParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableElement__TableConstraintDefAssignment_1"


    // $ANTLR start "rule__ColumnDefinition__ColumnNameAssignment_0"
    // InternalSQLParser.g:19421:1: rule__ColumnDefinition__ColumnNameAssignment_0 : ( ruleColumnName ) ;
    public final void rule__ColumnDefinition__ColumnNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19425:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:19426:2: ( ruleColumnName )
            {
            // InternalSQLParser.g:19426:2: ( ruleColumnName )
            // InternalSQLParser.g:19427:3: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getColumnNameColumnNameParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getColumnNameColumnNameParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__ColumnNameAssignment_0"


    // $ANTLR start "rule__ColumnDefinition__FieldDefinitionAssignment_1"
    // InternalSQLParser.g:19436:1: rule__ColumnDefinition__FieldDefinitionAssignment_1 : ( ruleFieldDefinition ) ;
    public final void rule__ColumnDefinition__FieldDefinitionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19440:1: ( ( ruleFieldDefinition ) )
            // InternalSQLParser.g:19441:2: ( ruleFieldDefinition )
            {
            // InternalSQLParser.g:19441:2: ( ruleFieldDefinition )
            // InternalSQLParser.g:19442:3: ruleFieldDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnDefinitionAccess().getFieldDefinitionFieldDefinitionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFieldDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnDefinitionAccess().getFieldDefinitionFieldDefinitionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnDefinition__FieldDefinitionAssignment_1"


    // $ANTLR start "rule__TableConstraintDef__ColumnNameListAssignment_0_3"
    // InternalSQLParser.g:19451:1: rule__TableConstraintDef__ColumnNameListAssignment_0_3 : ( ruleColumnNameList ) ;
    public final void rule__TableConstraintDef__ColumnNameListAssignment_0_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19455:1: ( ( ruleColumnNameList ) )
            // InternalSQLParser.g:19456:2: ( ruleColumnNameList )
            {
            // InternalSQLParser.g:19456:2: ( ruleColumnNameList )
            // InternalSQLParser.g:19457:3: ruleColumnNameList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getColumnNameListColumnNameListParserRuleCall_0_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnNameList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getColumnNameListColumnNameListParserRuleCall_0_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__ColumnNameListAssignment_0_3"


    // $ANTLR start "rule__TableConstraintDef__ColumnNameListAssignment_1_3"
    // InternalSQLParser.g:19466:1: rule__TableConstraintDef__ColumnNameListAssignment_1_3 : ( ruleColumnNameList ) ;
    public final void rule__TableConstraintDef__ColumnNameListAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19470:1: ( ( ruleColumnNameList ) )
            // InternalSQLParser.g:19471:2: ( ruleColumnNameList )
            {
            // InternalSQLParser.g:19471:2: ( ruleColumnNameList )
            // InternalSQLParser.g:19472:3: ruleColumnNameList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getColumnNameListColumnNameListParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnNameList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getColumnNameListColumnNameListParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__ColumnNameListAssignment_1_3"


    // $ANTLR start "rule__TableConstraintDef__TableNameAssignment_1_6"
    // InternalSQLParser.g:19481:1: rule__TableConstraintDef__TableNameAssignment_1_6 : ( ruleTableName ) ;
    public final void rule__TableConstraintDef__TableNameAssignment_1_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19485:1: ( ( ruleTableName ) )
            // InternalSQLParser.g:19486:2: ( ruleTableName )
            {
            // InternalSQLParser.g:19486:2: ( ruleTableName )
            // InternalSQLParser.g:19487:3: ruleTableName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getTableNameTableNameParserRuleCall_1_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getTableNameTableNameParserRuleCall_1_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__TableNameAssignment_1_6"


    // $ANTLR start "rule__TableConstraintDef__RefColumnNameListAssignment_1_8"
    // InternalSQLParser.g:19496:1: rule__TableConstraintDef__RefColumnNameListAssignment_1_8 : ( ruleColumnNameList ) ;
    public final void rule__TableConstraintDef__RefColumnNameListAssignment_1_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19500:1: ( ( ruleColumnNameList ) )
            // InternalSQLParser.g:19501:2: ( ruleColumnNameList )
            {
            // InternalSQLParser.g:19501:2: ( ruleColumnNameList )
            // InternalSQLParser.g:19502:3: ruleColumnNameList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableConstraintDefAccess().getRefColumnNameListColumnNameListParserRuleCall_1_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnNameList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableConstraintDefAccess().getRefColumnNameListColumnNameListParserRuleCall_1_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableConstraintDef__RefColumnNameListAssignment_1_8"


    // $ANTLR start "rule__ColumnNameList__ColumnNameAssignment_0"
    // InternalSQLParser.g:19511:1: rule__ColumnNameList__ColumnNameAssignment_0 : ( ruleColumnName ) ;
    public final void rule__ColumnNameList__ColumnNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19515:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:19516:2: ( ruleColumnName )
            {
            // InternalSQLParser.g:19516:2: ( ruleColumnName )
            // InternalSQLParser.g:19517:3: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getColumnNameColumnNameParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getColumnNameColumnNameParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__ColumnNameAssignment_0"


    // $ANTLR start "rule__ColumnNameList__ColumnNameAssignment_1_1"
    // InternalSQLParser.g:19526:1: rule__ColumnNameList__ColumnNameAssignment_1_1 : ( ruleColumnName ) ;
    public final void rule__ColumnNameList__ColumnNameAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19530:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:19531:2: ( ruleColumnName )
            {
            // InternalSQLParser.g:19531:2: ( ruleColumnName )
            // InternalSQLParser.g:19532:3: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameListAccess().getColumnNameColumnNameParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameListAccess().getColumnNameColumnNameParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnNameList__ColumnNameAssignment_1_1"


    // $ANTLR start "rule__WithQuery__WAssignment_0"
    // InternalSQLParser.g:19541:1: rule__WithQuery__WAssignment_0 : ( ( WITH ) ) ;
    public final void rule__WithQuery__WAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19545:1: ( ( ( WITH ) ) )
            // InternalSQLParser.g:19546:2: ( ( WITH ) )
            {
            // InternalSQLParser.g:19546:2: ( ( WITH ) )
            // InternalSQLParser.g:19547:3: ( WITH )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            // InternalSQLParser.g:19548:3: ( WITH )
            // InternalSQLParser.g:19549:4: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WAssignment_0"


    // $ANTLR start "rule__WithQuery__WnameAssignment_1"
    // InternalSQLParser.g:19560:1: rule__WithQuery__WnameAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__WnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19564:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:19565:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:19565:2: ( ruleDbObjectName )
            // InternalSQLParser.g:19566:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WnameAssignment_1"


    // $ANTLR start "rule__WithQuery__WithColsAssignment_2"
    // InternalSQLParser.g:19575:1: rule__WithQuery__WithColsAssignment_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__WithColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19579:1: ( ( ruleWithColumns ) )
            // InternalSQLParser.g:19580:2: ( ruleWithColumns )
            {
            // InternalSQLParser.g:19580:2: ( ruleWithColumns )
            // InternalSQLParser.g:19581:3: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WithColsAssignment_2"


    // $ANTLR start "rule__WithQuery__QueryAssignment_5"
    // InternalSQLParser.g:19590:1: rule__WithQuery__QueryAssignment_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__QueryAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19594:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:19595:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:19595:2: ( ruleSelectQuery )
            // InternalSQLParser.g:19596:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__QueryAssignment_5"


    // $ANTLR start "rule__WithQuery__AdditionalWnameAssignment_7_1"
    // InternalSQLParser.g:19605:1: rule__WithQuery__AdditionalWnameAssignment_7_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__AdditionalWnameAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19609:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:19610:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:19610:2: ( ruleDbObjectName )
            // InternalSQLParser.g:19611:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWnameAssignment_7_1"


    // $ANTLR start "rule__WithQuery__AdditionalWithColsAssignment_7_2"
    // InternalSQLParser.g:19620:1: rule__WithQuery__AdditionalWithColsAssignment_7_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__AdditionalWithColsAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19624:1: ( ( ruleWithColumns ) )
            // InternalSQLParser.g:19625:2: ( ruleWithColumns )
            {
            // InternalSQLParser.g:19625:2: ( ruleWithColumns )
            // InternalSQLParser.g:19626:3: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWithColsAssignment_7_2"


    // $ANTLR start "rule__WithQuery__AdditionalQueriesAssignment_7_5"
    // InternalSQLParser.g:19635:1: rule__WithQuery__AdditionalQueriesAssignment_7_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__AdditionalQueriesAssignment_7_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19639:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:19640:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:19640:2: ( ruleSelectQuery )
            // InternalSQLParser.g:19641:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalQueriesAssignment_7_5"


    // $ANTLR start "rule__FetchFirst__FetchFirstAssignment_0"
    // InternalSQLParser.g:19650:1: rule__FetchFirst__FetchFirstAssignment_0 : ( ruleUnsignedValue ) ;
    public final void rule__FetchFirst__FetchFirstAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19654:1: ( ( ruleUnsignedValue ) )
            // InternalSQLParser.g:19655:2: ( ruleUnsignedValue )
            {
            // InternalSQLParser.g:19655:2: ( ruleUnsignedValue )
            // InternalSQLParser.g:19656:3: ruleUnsignedValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__FetchFirstAssignment_0"


    // $ANTLR start "rule__FetchFirst__RowAssignment_1"
    // InternalSQLParser.g:19665:1: rule__FetchFirst__RowAssignment_1 : ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) ;
    public final void rule__FetchFirst__RowAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19669:1: ( ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) )
            // InternalSQLParser.g:19670:2: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:19670:2: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            // InternalSQLParser.g:19671:3: ( rule__FetchFirst__RowAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }
            // InternalSQLParser.g:19672:3: ( rule__FetchFirst__RowAlternatives_1_0 )
            // InternalSQLParser.g:19672:4: rule__FetchFirst__RowAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAssignment_1"


    // $ANTLR start "rule__Offset__OffsetAssignment"
    // InternalSQLParser.g:19680:1: rule__Offset__OffsetAssignment : ( RULE_INT ) ;
    public final void rule__Offset__OffsetAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19684:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:19685:2: ( RULE_INT )
            {
            // InternalSQLParser.g:19685:2: ( RULE_INT )
            // InternalSQLParser.g:19686:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__OffsetAssignment"


    // $ANTLR start "rule__Limit__L1Assignment_1_0"
    // InternalSQLParser.g:19695:1: rule__Limit__L1Assignment_1_0 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L1Assignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19699:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:19700:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:19700:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:19701:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L1Assignment_1_0"


    // $ANTLR start "rule__Limit__L2Assignment_1_1_1"
    // InternalSQLParser.g:19710:1: rule__Limit__L2Assignment_1_1_1 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L2Assignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19714:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:19715:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:19715:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:19716:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L2Assignment_1_1_1"


    // $ANTLR start "rule__SelectQuery__OpAssignment_1"
    // InternalSQLParser.g:19725:1: rule__SelectQuery__OpAssignment_1 : ( ruleSelectSubSet ) ;
    public final void rule__SelectQuery__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19729:1: ( ( ruleSelectSubSet ) )
            // InternalSQLParser.g:19730:2: ( ruleSelectSubSet )
            {
            // InternalSQLParser.g:19730:2: ( ruleSelectSubSet )
            // InternalSQLParser.g:19731:3: ruleSelectSubSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__OpAssignment_1"


    // $ANTLR start "rule__SelectSubSet__OpAssignment_0"
    // InternalSQLParser.g:19740:1: rule__SelectSubSet__OpAssignment_0 : ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) ;
    public final void rule__SelectSubSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19744:1: ( ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) )
            // InternalSQLParser.g:19745:2: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            {
            // InternalSQLParser.g:19745:2: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            // InternalSQLParser.g:19746:3: ( rule__SelectSubSet__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }
            // InternalSQLParser.g:19747:3: ( rule__SelectSubSet__OpAlternatives_0_0 )
            // InternalSQLParser.g:19747:4: rule__SelectSubSet__OpAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAssignment_0"


    // $ANTLR start "rule__SelectSubSet__AllAssignment_1"
    // InternalSQLParser.g:19755:1: rule__SelectSubSet__AllAssignment_1 : ( ( ALL ) ) ;
    public final void rule__SelectSubSet__AllAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19759:1: ( ( ( ALL ) ) )
            // InternalSQLParser.g:19760:2: ( ( ALL ) )
            {
            // InternalSQLParser.g:19760:2: ( ( ALL ) )
            // InternalSQLParser.g:19761:3: ( ALL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            // InternalSQLParser.g:19762:3: ( ALL )
            // InternalSQLParser.g:19763:4: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__AllAssignment_1"


    // $ANTLR start "rule__SelectSubSet__QueryAssignment_2"
    // InternalSQLParser.g:19774:1: rule__SelectSubSet__QueryAssignment_2 : ( ruleSelect ) ;
    public final void rule__SelectSubSet__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19778:1: ( ( ruleSelect ) )
            // InternalSQLParser.g:19779:2: ( ruleSelect )
            {
            // InternalSQLParser.g:19779:2: ( ruleSelect )
            // InternalSQLParser.g:19780:3: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__QueryAssignment_2"


    // $ANTLR start "rule__Select__SelectAssignment_0"
    // InternalSQLParser.g:19789:1: rule__Select__SelectAssignment_0 : ( ( SELECT ) ) ;
    public final void rule__Select__SelectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19793:1: ( ( ( SELECT ) ) )
            // InternalSQLParser.g:19794:2: ( ( SELECT ) )
            {
            // InternalSQLParser.g:19794:2: ( ( SELECT ) )
            // InternalSQLParser.g:19795:3: ( SELECT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            // InternalSQLParser.g:19796:3: ( SELECT )
            // InternalSQLParser.g:19797:4: SELECT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            match(input,SELECT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__SelectAssignment_0"


    // $ANTLR start "rule__Select__ColsAssignment_3"
    // InternalSQLParser.g:19808:1: rule__Select__ColsAssignment_3 : ( ruleColumns ) ;
    public final void rule__Select__ColsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19812:1: ( ( ruleColumns ) )
            // InternalSQLParser.g:19813:2: ( ruleColumns )
            {
            // InternalSQLParser.g:19813:2: ( ruleColumns )
            // InternalSQLParser.g:19814:3: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__ColsAssignment_3"


    // $ANTLR start "rule__Select__TblAssignment_5"
    // InternalSQLParser.g:19823:1: rule__Select__TblAssignment_5 : ( ruleTables ) ;
    public final void rule__Select__TblAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19827:1: ( ( ruleTables ) )
            // InternalSQLParser.g:19828:2: ( ruleTables )
            {
            // InternalSQLParser.g:19828:2: ( ruleTables )
            // InternalSQLParser.g:19829:3: ruleTables
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__TblAssignment_5"


    // $ANTLR start "rule__Select__WhereExpressionAssignment_6_1"
    // InternalSQLParser.g:19838:1: rule__Select__WhereExpressionAssignment_6_1 : ( ruleFullExpression ) ;
    public final void rule__Select__WhereExpressionAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19842:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:19843:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:19843:2: ( ruleFullExpression )
            // InternalSQLParser.g:19844:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__WhereExpressionAssignment_6_1"


    // $ANTLR start "rule__Select__GroupByEntryAssignment_7_2"
    // InternalSQLParser.g:19853:1: rule__Select__GroupByEntryAssignment_7_2 : ( ruleGroupByColumns ) ;
    public final void rule__Select__GroupByEntryAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19857:1: ( ( ruleGroupByColumns ) )
            // InternalSQLParser.g:19858:2: ( ruleGroupByColumns )
            {
            // InternalSQLParser.g:19858:2: ( ruleGroupByColumns )
            // InternalSQLParser.g:19859:3: ruleGroupByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__GroupByEntryAssignment_7_2"


    // $ANTLR start "rule__Select__HavingEntryAssignment_8_1"
    // InternalSQLParser.g:19868:1: rule__Select__HavingEntryAssignment_8_1 : ( ruleFullExpression ) ;
    public final void rule__Select__HavingEntryAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19872:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:19873:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:19873:2: ( ruleFullExpression )
            // InternalSQLParser.g:19874:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__HavingEntryAssignment_8_1"


    // $ANTLR start "rule__Select__OrderByEntryAssignment_9_2"
    // InternalSQLParser.g:19883:1: rule__Select__OrderByEntryAssignment_9_2 : ( ruleOrderByColumns ) ;
    public final void rule__Select__OrderByEntryAssignment_9_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19887:1: ( ( ruleOrderByColumns ) )
            // InternalSQLParser.g:19888:2: ( ruleOrderByColumns )
            {
            // InternalSQLParser.g:19888:2: ( ruleOrderByColumns )
            // InternalSQLParser.g:19889:3: ruleOrderByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OrderByEntryAssignment_9_2"


    // $ANTLR start "rule__Select__LimAssignment_10_1"
    // InternalSQLParser.g:19898:1: rule__Select__LimAssignment_10_1 : ( ruleLimit ) ;
    public final void rule__Select__LimAssignment_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19902:1: ( ( ruleLimit ) )
            // InternalSQLParser.g:19903:2: ( ruleLimit )
            {
            // InternalSQLParser.g:19903:2: ( ruleLimit )
            // InternalSQLParser.g:19904:3: ruleLimit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__LimAssignment_10_1"


    // $ANTLR start "rule__Select__OffsetAssignment_11_1"
    // InternalSQLParser.g:19913:1: rule__Select__OffsetAssignment_11_1 : ( ruleOffset ) ;
    public final void rule__Select__OffsetAssignment_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19917:1: ( ( ruleOffset ) )
            // InternalSQLParser.g:19918:2: ( ruleOffset )
            {
            // InternalSQLParser.g:19918:2: ( ruleOffset )
            // InternalSQLParser.g:19919:3: ruleOffset
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OffsetAssignment_11_1"


    // $ANTLR start "rule__Select__FetchFirstAssignment_12_2"
    // InternalSQLParser.g:19928:1: rule__Select__FetchFirstAssignment_12_2 : ( ruleFetchFirst ) ;
    public final void rule__Select__FetchFirstAssignment_12_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19932:1: ( ( ruleFetchFirst ) )
            // InternalSQLParser.g:19933:2: ( ruleFetchFirst )
            {
            // InternalSQLParser.g:19933:2: ( ruleFetchFirst )
            // InternalSQLParser.g:19934:3: ruleFetchFirst
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__FetchFirstAssignment_12_2"


    // $ANTLR start "rule__Columns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:19943:1: rule__Columns__EntriesAssignment_1_1_1 : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19947:1: ( ( ruleColumnOrAlias ) )
            // InternalSQLParser.g:19948:2: ( ruleColumnOrAlias )
            {
            // InternalSQLParser.g:19948:2: ( ruleColumnOrAlias )
            // InternalSQLParser.g:19949:3: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnOrAlias__CeAssignment_0_0"
    // InternalSQLParser.g:19958:1: rule__ColumnOrAlias__CeAssignment_0_0 : ( ruleOperandGroup ) ;
    public final void rule__ColumnOrAlias__CeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19962:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:19963:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:19963:2: ( ruleOperandGroup )
            // InternalSQLParser.g:19964:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__CeAssignment_0_0"


    // $ANTLR start "rule__ColumnOrAlias__AliasAssignment_0_1"
    // InternalSQLParser.g:19973:1: rule__ColumnOrAlias__AliasAssignment_0_1 : ( ( AS ) ) ;
    public final void rule__ColumnOrAlias__AliasAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19977:1: ( ( ( AS ) ) )
            // InternalSQLParser.g:19978:2: ( ( AS ) )
            {
            // InternalSQLParser.g:19978:2: ( ( AS ) )
            // InternalSQLParser.g:19979:3: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            // InternalSQLParser.g:19980:3: ( AS )
            // InternalSQLParser.g:19981:4: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AliasAssignment_0_1"


    // $ANTLR start "rule__ColumnOrAlias__ColAliasAssignment_0_2"
    // InternalSQLParser.g:19992:1: rule__ColumnOrAlias__ColAliasAssignment_0_2 : ( ruleDbObjectName ) ;
    public final void rule__ColumnOrAlias__ColAliasAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:19996:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:19997:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:19997:2: ( ruleDbObjectName )
            // InternalSQLParser.g:19998:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__ColAliasAssignment_0_2"


    // $ANTLR start "rule__ColumnOrAlias__AllColsAssignment_1"
    // InternalSQLParser.g:20007:1: rule__ColumnOrAlias__AllColsAssignment_1 : ( RULE_STAR ) ;
    public final void rule__ColumnOrAlias__AllColsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20011:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:20012:2: ( RULE_STAR )
            {
            // InternalSQLParser.g:20012:2: ( RULE_STAR )
            // InternalSQLParser.g:20013:3: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AllColsAssignment_1"


    // $ANTLR start "rule__ColumnOrAlias__DbAllColsAssignment_2"
    // InternalSQLParser.g:20022:1: rule__ColumnOrAlias__DbAllColsAssignment_2 : ( ruleDbObjectNameAll ) ;
    public final void rule__ColumnOrAlias__DbAllColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20026:1: ( ( ruleDbObjectNameAll ) )
            // InternalSQLParser.g:20027:2: ( ruleDbObjectNameAll )
            {
            // InternalSQLParser.g:20027:2: ( ruleDbObjectNameAll )
            // InternalSQLParser.g:20028:3: ruleDbObjectNameAll
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__DbAllColsAssignment_2"


    // $ANTLR start "rule__ColumnFull__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20037:1: rule__ColumnFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20041:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:20042:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:20042:2: ( ruleDbObjectName )
            // InternalSQLParser.g:20043:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Tables__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20052:1: rule__Tables__EntriesAssignment_1_1_1 : ( ruleFromTable ) ;
    public final void rule__Tables__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20056:1: ( ( ruleFromTable ) )
            // InternalSQLParser.g:20057:2: ( ruleFromTable )
            {
            // InternalSQLParser.g:20057:2: ( ruleFromTable )
            // InternalSQLParser.g:20058:3: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__FromTable__TableAssignment_0"
    // InternalSQLParser.g:20067:1: rule__FromTable__TableAssignment_0 : ( ruleTableOrAlias ) ;
    public final void rule__FromTable__TableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20071:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:20072:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:20072:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:20073:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__TableAssignment_0"


    // $ANTLR start "rule__FromTable__FjoinAssignment_1"
    // InternalSQLParser.g:20082:1: rule__FromTable__FjoinAssignment_1 : ( ruleFromTableJoin ) ;
    public final void rule__FromTable__FjoinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20086:1: ( ( ruleFromTableJoin ) )
            // InternalSQLParser.g:20087:2: ( ruleFromTableJoin )
            {
            // InternalSQLParser.g:20087:2: ( ruleFromTableJoin )
            // InternalSQLParser.g:20088:3: ruleFromTableJoin
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__FjoinAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinAssignment_0"
    // InternalSQLParser.g:20097:1: rule__FromTableJoin__JoinAssignment_0 : ( ruleJoinType ) ;
    public final void rule__FromTableJoin__JoinAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20101:1: ( ( ruleJoinType ) )
            // InternalSQLParser.g:20102:2: ( ruleJoinType )
            {
            // InternalSQLParser.g:20102:2: ( ruleJoinType )
            // InternalSQLParser.g:20103:3: ruleJoinType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinAssignment_0"


    // $ANTLR start "rule__FromTableJoin__OnTableAssignment_1"
    // InternalSQLParser.g:20112:1: rule__FromTableJoin__OnTableAssignment_1 : ( ruleTableOrAlias ) ;
    public final void rule__FromTableJoin__OnTableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20116:1: ( ( ruleTableOrAlias ) )
            // InternalSQLParser.g:20117:2: ( ruleTableOrAlias )
            {
            // InternalSQLParser.g:20117:2: ( ruleTableOrAlias )
            // InternalSQLParser.g:20118:3: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__OnTableAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinExprAssignment_2_0_1"
    // InternalSQLParser.g:20127:1: rule__FromTableJoin__JoinExprAssignment_2_0_1 : ( ruleFullExpression ) ;
    public final void rule__FromTableJoin__JoinExprAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20131:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:20132:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:20132:2: ( ruleFullExpression )
            // InternalSQLParser.g:20133:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinExprAssignment_2_0_1"


    // $ANTLR start "rule__FromTableJoin__JoinCondAssignment_2_1"
    // InternalSQLParser.g:20142:1: rule__FromTableJoin__JoinCondAssignment_2_1 : ( ruleJoinCondition ) ;
    public final void rule__FromTableJoin__JoinCondAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20146:1: ( ( ruleJoinCondition ) )
            // InternalSQLParser.g:20147:2: ( ruleJoinCondition )
            {
            // InternalSQLParser.g:20147:2: ( ruleJoinCondition )
            // InternalSQLParser.g:20148:3: ruleJoinCondition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinCondAssignment_2_1"


    // $ANTLR start "rule__JoinCondition__UseColsAssignment_2"
    // InternalSQLParser.g:20157:1: rule__JoinCondition__UseColsAssignment_2 : ( ruleUsingCols ) ;
    public final void rule__JoinCondition__UseColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20161:1: ( ( ruleUsingCols ) )
            // InternalSQLParser.g:20162:2: ( ruleUsingCols )
            {
            // InternalSQLParser.g:20162:2: ( ruleUsingCols )
            // InternalSQLParser.g:20163:3: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__UseColsAssignment_2"


    // $ANTLR start "rule__UsingCols__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20172:1: rule__UsingCols__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20176:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:20177:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:20177:2: ( ruleDbObjectName )
            // InternalSQLParser.g:20178:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableOrAlias__TfullAssignment_0_0"
    // InternalSQLParser.g:20187:1: rule__TableOrAlias__TfullAssignment_0_0 : ( ruleTableFull ) ;
    public final void rule__TableOrAlias__TfullAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20191:1: ( ( ruleTableFull ) )
            // InternalSQLParser.g:20192:2: ( ruleTableFull )
            {
            // InternalSQLParser.g:20192:2: ( ruleTableFull )
            // InternalSQLParser.g:20193:3: ruleTableFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TfullAssignment_0_0"


    // $ANTLR start "rule__TableOrAlias__SqAssignment_0_1"
    // InternalSQLParser.g:20202:1: rule__TableOrAlias__SqAssignment_0_1 : ( ruleSubQueryOperand ) ;
    public final void rule__TableOrAlias__SqAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20206:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:20207:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:20207:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:20208:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__SqAssignment_0_1"


    // $ANTLR start "rule__TableOrAlias__ValuesAssignment_0_2"
    // InternalSQLParser.g:20217:1: rule__TableOrAlias__ValuesAssignment_0_2 : ( ruleFromValues ) ;
    public final void rule__TableOrAlias__ValuesAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20221:1: ( ( ruleFromValues ) )
            // InternalSQLParser.g:20222:2: ( ruleFromValues )
            {
            // InternalSQLParser.g:20222:2: ( ruleFromValues )
            // InternalSQLParser.g:20223:3: ruleFromValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__ValuesAssignment_0_2"


    // $ANTLR start "rule__TableOrAlias__PivotAssignment_1_0"
    // InternalSQLParser.g:20232:1: rule__TableOrAlias__PivotAssignment_1_0 : ( rulePivotTable ) ;
    public final void rule__TableOrAlias__PivotAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20236:1: ( ( rulePivotTable ) )
            // InternalSQLParser.g:20237:2: ( rulePivotTable )
            {
            // InternalSQLParser.g:20237:2: ( rulePivotTable )
            // InternalSQLParser.g:20238:3: rulePivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__PivotAssignment_1_0"


    // $ANTLR start "rule__TableOrAlias__UnpivotAssignment_1_1"
    // InternalSQLParser.g:20247:1: rule__TableOrAlias__UnpivotAssignment_1_1 : ( ruleUnpivotTable ) ;
    public final void rule__TableOrAlias__UnpivotAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20251:1: ( ( ruleUnpivotTable ) )
            // InternalSQLParser.g:20252:2: ( ruleUnpivotTable )
            {
            // InternalSQLParser.g:20252:2: ( ruleUnpivotTable )
            // InternalSQLParser.g:20253:3: ruleUnpivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__UnpivotAssignment_1_1"


    // $ANTLR start "rule__TableOrAlias__AliasAssignment_2"
    // InternalSQLParser.g:20262:1: rule__TableOrAlias__AliasAssignment_2 : ( ( AS ) ) ;
    public final void rule__TableOrAlias__AliasAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20266:1: ( ( ( AS ) ) )
            // InternalSQLParser.g:20267:2: ( ( AS ) )
            {
            // InternalSQLParser.g:20267:2: ( ( AS ) )
            // InternalSQLParser.g:20268:3: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            // InternalSQLParser.g:20269:3: ( AS )
            // InternalSQLParser.g:20270:4: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__AliasAssignment_2"


    // $ANTLR start "rule__TableOrAlias__TblAliasAssignment_3"
    // InternalSQLParser.g:20281:1: rule__TableOrAlias__TblAliasAssignment_3 : ( ruleDbObjectName ) ;
    public final void rule__TableOrAlias__TblAliasAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20285:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:20286:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:20286:2: ( ruleDbObjectName )
            // InternalSQLParser.g:20287:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TblAliasAssignment_3"


    // $ANTLR start "rule__FromValues__ValuesAssignment_0"
    // InternalSQLParser.g:20296:1: rule__FromValues__ValuesAssignment_0 : ( ruleValues ) ;
    public final void rule__FromValues__ValuesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20300:1: ( ( ruleValues ) )
            // InternalSQLParser.g:20301:2: ( ruleValues )
            {
            // InternalSQLParser.g:20301:2: ( ruleValues )
            // InternalSQLParser.g:20302:3: ruleValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__ValuesAssignment_0"


    // $ANTLR start "rule__FromValues__CAssignment_1"
    // InternalSQLParser.g:20311:1: rule__FromValues__CAssignment_1 : ( ruleFromValuesColumns ) ;
    public final void rule__FromValues__CAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20315:1: ( ( ruleFromValuesColumns ) )
            // InternalSQLParser.g:20316:2: ( ruleFromValuesColumns )
            {
            // InternalSQLParser.g:20316:2: ( ruleFromValuesColumns )
            // InternalSQLParser.g:20317:3: ruleFromValuesColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__CAssignment_1"


    // $ANTLR start "rule__FromValuesColumns__FvColsAssignment_2"
    // InternalSQLParser.g:20326:1: rule__FromValuesColumns__FvColsAssignment_2 : ( ruleFromValuesColumnNames ) ;
    public final void rule__FromValuesColumns__FvColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20330:1: ( ( ruleFromValuesColumnNames ) )
            // InternalSQLParser.g:20331:2: ( ruleFromValuesColumnNames )
            {
            // InternalSQLParser.g:20331:2: ( ruleFromValuesColumnNames )
            // InternalSQLParser.g:20332:3: ruleFromValuesColumnNames
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__FvColsAssignment_2"


    // $ANTLR start "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20341:1: rule__FromValuesColumnNames__EntriesAssignment_1_1_1 : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20345:1: ( ( ruleColumnName ) )
            // InternalSQLParser.g:20346:2: ( ruleColumnName )
            {
            // InternalSQLParser.g:20346:2: ( ruleColumnName )
            // InternalSQLParser.g:20347:3: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnName__ColNameAssignment"
    // InternalSQLParser.g:20356:1: rule__ColumnName__ColNameAssignment : ( RULE_STRING ) ;
    public final void rule__ColumnName__ColNameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20360:1: ( ( RULE_STRING ) )
            // InternalSQLParser.g:20361:2: ( RULE_STRING )
            {
            // InternalSQLParser.g:20361:2: ( RULE_STRING )
            // InternalSQLParser.g:20362:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnName__ColNameAssignment"


    // $ANTLR start "rule__Values__RowsAssignment_2"
    // InternalSQLParser.g:20371:1: rule__Values__RowsAssignment_2 : ( ruleRows ) ;
    public final void rule__Values__RowsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20375:1: ( ( ruleRows ) )
            // InternalSQLParser.g:20376:2: ( ruleRows )
            {
            // InternalSQLParser.g:20376:2: ( ruleRows )
            // InternalSQLParser.g:20377:3: ruleRows
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__RowsAssignment_2"


    // $ANTLR start "rule__Rows__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20386:1: rule__Rows__EntriesAssignment_1_1_1 : ( ruleRow ) ;
    public final void rule__Rows__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20390:1: ( ( ruleRow ) )
            // InternalSQLParser.g:20391:2: ( ruleRow )
            {
            // InternalSQLParser.g:20391:2: ( ruleRow )
            // InternalSQLParser.g:20392:3: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Row__RowValuesAssignment_1"
    // InternalSQLParser.g:20401:1: rule__Row__RowValuesAssignment_1 : ( ruleRowValues ) ;
    public final void rule__Row__RowValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20405:1: ( ( ruleRowValues ) )
            // InternalSQLParser.g:20406:2: ( ruleRowValues )
            {
            // InternalSQLParser.g:20406:2: ( ruleRowValues )
            // InternalSQLParser.g:20407:3: ruleRowValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__RowValuesAssignment_1"


    // $ANTLR start "rule__RowValues__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20416:1: rule__RowValues__EntriesAssignment_1_1_1 : ( ruleRowValue ) ;
    public final void rule__RowValues__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20420:1: ( ( ruleRowValue ) )
            // InternalSQLParser.g:20421:2: ( ruleRowValue )
            {
            // InternalSQLParser.g:20421:2: ( ruleRowValue )
            // InternalSQLParser.g:20422:3: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__RowValue__NullAssignment_1"
    // InternalSQLParser.g:20431:1: rule__RowValue__NullAssignment_1 : ( ( NULL ) ) ;
    public final void rule__RowValue__NullAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20435:1: ( ( ( NULL ) ) )
            // InternalSQLParser.g:20436:2: ( ( NULL ) )
            {
            // InternalSQLParser.g:20436:2: ( ( NULL ) )
            // InternalSQLParser.g:20437:3: ( NULL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            // InternalSQLParser.g:20438:3: ( NULL )
            // InternalSQLParser.g:20439:4: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__NullAssignment_1"


    // $ANTLR start "rule__PivotTable__PfunAssignment_3"
    // InternalSQLParser.g:20450:1: rule__PivotTable__PfunAssignment_3 : ( rulePivotFunctions ) ;
    public final void rule__PivotTable__PfunAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20454:1: ( ( rulePivotFunctions ) )
            // InternalSQLParser.g:20455:2: ( rulePivotFunctions )
            {
            // InternalSQLParser.g:20455:2: ( rulePivotFunctions )
            // InternalSQLParser.g:20456:3: rulePivotFunctions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PfunAssignment_3"


    // $ANTLR start "rule__PivotTable__PforAssignment_4"
    // InternalSQLParser.g:20465:1: rule__PivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__PivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20469:1: ( ( rulePivotForClause ) )
            // InternalSQLParser.g:20470:2: ( rulePivotForClause )
            {
            // InternalSQLParser.g:20470:2: ( rulePivotForClause )
            // InternalSQLParser.g:20471:3: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PforAssignment_4"


    // $ANTLR start "rule__PivotTable__PinAssignment_5"
    // InternalSQLParser.g:20480:1: rule__PivotTable__PinAssignment_5 : ( rulePivotInClause ) ;
    public final void rule__PivotTable__PinAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20484:1: ( ( rulePivotInClause ) )
            // InternalSQLParser.g:20485:2: ( rulePivotInClause )
            {
            // InternalSQLParser.g:20485:2: ( rulePivotInClause )
            // InternalSQLParser.g:20486:3: rulePivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PinAssignment_5"


    // $ANTLR start "rule__PivotFunctions__AbcAssignment"
    // InternalSQLParser.g:20495:1: rule__PivotFunctions__AbcAssignment : ( RULE_ID ) ;
    public final void rule__PivotFunctions__AbcAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20499:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:20500:2: ( RULE_ID )
            {
            // InternalSQLParser.g:20500:2: ( RULE_ID )
            // InternalSQLParser.g:20501:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotFunctions__AbcAssignment"


    // $ANTLR start "rule__PivotInClause__SqAssignment_2_0"
    // InternalSQLParser.g:20510:1: rule__PivotInClause__SqAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__PivotInClause__SqAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20514:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:20515:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:20515:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:20516:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__SqAssignment_2_0"


    // $ANTLR start "rule__PivotInClause__ArgsAssignment_2_1"
    // InternalSQLParser.g:20525:1: rule__PivotInClause__ArgsAssignment_2_1 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__PivotInClause__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20529:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSQLParser.g:20530:2: ( ruleUnpivotInClauseArgs )
            {
            // InternalSQLParser.g:20530:2: ( ruleUnpivotInClauseArgs )
            // InternalSQLParser.g:20531:3: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__ArgsAssignment_2_1"


    // $ANTLR start "rule__PivotInClause__PinanyAssignment_2_2"
    // InternalSQLParser.g:20540:1: rule__PivotInClause__PinanyAssignment_2_2 : ( rulePivotInClauseAny ) ;
    public final void rule__PivotInClause__PinanyAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20544:1: ( ( rulePivotInClauseAny ) )
            // InternalSQLParser.g:20545:2: ( rulePivotInClauseAny )
            {
            // InternalSQLParser.g:20545:2: ( rulePivotInClauseAny )
            // InternalSQLParser.g:20546:3: rulePivotInClauseAny
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__PinanyAssignment_2_2"


    // $ANTLR start "rule__UnpivotTable__PcolsAssignment_3"
    // InternalSQLParser.g:20555:1: rule__UnpivotTable__PcolsAssignment_3 : ( rulePivotColumns ) ;
    public final void rule__UnpivotTable__PcolsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20559:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:20560:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:20560:2: ( rulePivotColumns )
            // InternalSQLParser.g:20561:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PcolsAssignment_3"


    // $ANTLR start "rule__UnpivotTable__PforAssignment_4"
    // InternalSQLParser.g:20570:1: rule__UnpivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__UnpivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20574:1: ( ( rulePivotForClause ) )
            // InternalSQLParser.g:20575:2: ( rulePivotForClause )
            {
            // InternalSQLParser.g:20575:2: ( rulePivotForClause )
            // InternalSQLParser.g:20576:3: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PforAssignment_4"


    // $ANTLR start "rule__UnpivotTable__InopAssignment_5"
    // InternalSQLParser.g:20585:1: rule__UnpivotTable__InopAssignment_5 : ( ruleUnpivotInClause ) ;
    public final void rule__UnpivotTable__InopAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20589:1: ( ( ruleUnpivotInClause ) )
            // InternalSQLParser.g:20590:2: ( ruleUnpivotInClause )
            {
            // InternalSQLParser.g:20590:2: ( ruleUnpivotInClause )
            // InternalSQLParser.g:20591:3: ruleUnpivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__InopAssignment_5"


    // $ANTLR start "rule__UnpivotInClause__OpAssignment_1"
    // InternalSQLParser.g:20600:1: rule__UnpivotInClause__OpAssignment_1 : ( ( IN ) ) ;
    public final void rule__UnpivotInClause__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20604:1: ( ( ( IN ) ) )
            // InternalSQLParser.g:20605:2: ( ( IN ) )
            {
            // InternalSQLParser.g:20605:2: ( ( IN ) )
            // InternalSQLParser.g:20606:3: ( IN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            // InternalSQLParser.g:20607:3: ( IN )
            // InternalSQLParser.g:20608:4: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__OpAssignment_1"


    // $ANTLR start "rule__UnpivotInClause__ArgsAssignment_3"
    // InternalSQLParser.g:20619:1: rule__UnpivotInClause__ArgsAssignment_3 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__UnpivotInClause__ArgsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20623:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSQLParser.g:20624:2: ( ruleUnpivotInClauseArgs )
            {
            // InternalSQLParser.g:20624:2: ( ruleUnpivotInClauseArgs )
            // InternalSQLParser.g:20625:3: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__ArgsAssignment_3"


    // $ANTLR start "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20634:1: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20638:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSQLParser.g:20639:2: ( ruleUnpivotInClauseArg )
            {
            // InternalSQLParser.g:20639:2: ( ruleUnpivotInClauseArg )
            // InternalSQLParser.g:20640:3: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__UnpivotInClauseArg__PcolsAssignment_0"
    // InternalSQLParser.g:20649:1: rule__UnpivotInClauseArg__PcolsAssignment_0 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__PcolsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20653:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:20654:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:20654:2: ( rulePivotColumns )
            // InternalSQLParser.g:20655:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__PcolsAssignment_0"


    // $ANTLR start "rule__UnpivotInClauseArg__CfulsAssignment_1_1"
    // InternalSQLParser.g:20664:1: rule__UnpivotInClauseArg__CfulsAssignment_1_1 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__CfulsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20668:1: ( ( rulePivotColumns ) )
            // InternalSQLParser.g:20669:2: ( rulePivotColumns )
            {
            // InternalSQLParser.g:20669:2: ( rulePivotColumns )
            // InternalSQLParser.g:20670:3: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__CfulsAssignment_1_1"


    // $ANTLR start "rule__PivotCols__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20679:1: rule__PivotCols__EntriesAssignment_1_1_1 : ( rulePivotCol ) ;
    public final void rule__PivotCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20683:1: ( ( rulePivotCol ) )
            // InternalSQLParser.g:20684:2: ( rulePivotCol )
            {
            // InternalSQLParser.g:20684:2: ( rulePivotCol )
            // InternalSQLParser.g:20685:3: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__PivotCol__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20694:1: rule__PivotCol__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20698:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:20699:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:20699:2: ( ruleDbObjectName )
            // InternalSQLParser.g:20700:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableFull__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20709:1: rule__TableFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__TableFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20713:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:20714:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:20714:2: ( ruleDbObjectName )
            // InternalSQLParser.g:20715:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__DbObjectNameAll__DbnameAssignment_0"
    // InternalSQLParser.g:20724:1: rule__DbObjectNameAll__DbnameAssignment_0 : ( ruleDBID ) ;
    public final void rule__DbObjectNameAll__DbnameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20728:1: ( ( ruleDBID ) )
            // InternalSQLParser.g:20729:2: ( ruleDBID )
            {
            // InternalSQLParser.g:20729:2: ( ruleDBID )
            // InternalSQLParser.g:20730:3: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__DbnameAssignment_0"


    // $ANTLR start "rule__DbObjectName__DbnameAssignment"
    // InternalSQLParser.g:20739:1: rule__DbObjectName__DbnameAssignment : ( ruleDBID ) ;
    public final void rule__DbObjectName__DbnameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20743:1: ( ( ruleDBID ) )
            // InternalSQLParser.g:20744:2: ( ruleDBID )
            {
            // InternalSQLParser.g:20744:2: ( ruleDBID )
            // InternalSQLParser.g:20745:3: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectName__DbnameAssignment"


    // $ANTLR start "rule__OrderByColumns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20754:1: rule__OrderByColumns__EntriesAssignment_1_1_1 : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20758:1: ( ( ruleOrderByColumnFull ) )
            // InternalSQLParser.g:20759:2: ( ruleOrderByColumnFull )
            {
            // InternalSQLParser.g:20759:2: ( ruleOrderByColumnFull )
            // InternalSQLParser.g:20760:3: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderAssignment_0_0"
    // InternalSQLParser.g:20769:1: rule__OrderByColumnFull__ColOrderAssignment_0_0 : ( ruleColumnFull ) ;
    public final void rule__OrderByColumnFull__ColOrderAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20773:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:20774:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:20774:2: ( ruleColumnFull )
            // InternalSQLParser.g:20775:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderAssignment_0_0"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"
    // InternalSQLParser.g:20784:1: rule__OrderByColumnFull__ColOrderIntAssignment_0_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OrderByColumnFull__ColOrderIntAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20788:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:20789:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:20789:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:20790:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAssignment_1"
    // InternalSQLParser.g:20799:1: rule__OrderByColumnFull__DirectionAssignment_1 : ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) ;
    public final void rule__OrderByColumnFull__DirectionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20803:1: ( ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) )
            // InternalSQLParser.g:20804:2: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:20804:2: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            // InternalSQLParser.g:20805:3: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }
            // InternalSQLParser.g:20806:3: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            // InternalSQLParser.g:20806:4: rule__OrderByColumnFull__DirectionAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__DirectionAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAssignment_1"


    // $ANTLR start "rule__GroupByColumns__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:20814:1: rule__GroupByColumns__EntriesAssignment_1_1_1 : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20818:1: ( ( ruleGroupByColumnFull ) )
            // InternalSQLParser.g:20819:2: ( ruleGroupByColumnFull )
            {
            // InternalSQLParser.g:20819:2: ( ruleGroupByColumnFull )
            // InternalSQLParser.g:20820:3: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__GroupByColumnFull__ColGrByAssignment_0"
    // InternalSQLParser.g:20829:1: rule__GroupByColumnFull__ColGrByAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__GroupByColumnFull__ColGrByAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20833:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:20834:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:20834:2: ( ruleColumnFull )
            // InternalSQLParser.g:20835:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__ColGrByAssignment_0"


    // $ANTLR start "rule__GroupByColumnFull__GbFunctionAssignment_1"
    // InternalSQLParser.g:20844:1: rule__GroupByColumnFull__GbFunctionAssignment_1 : ( ruleOperandFunction ) ;
    public final void rule__GroupByColumnFull__GbFunctionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20848:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:20849:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:20849:2: ( ruleOperandFunction )
            // InternalSQLParser.g:20850:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GbFunctionAssignment_1"


    // $ANTLR start "rule__GroupByColumnFull__GrByIntAssignment_2"
    // InternalSQLParser.g:20859:1: rule__GroupByColumnFull__GrByIntAssignment_2 : ( RULE_UNSIGNED ) ;
    public final void rule__GroupByColumnFull__GrByIntAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20863:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:20864:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:20864:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:20865:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GrByIntAssignment_2"


    // $ANTLR start "rule__FullExpression__EntriesAssignment_1_1"
    // InternalSQLParser.g:20874:1: rule__FullExpression__EntriesAssignment_1_1 : ( ruleExpressionFragmentSecond ) ;
    public final void rule__FullExpression__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20878:1: ( ( ruleExpressionFragmentSecond ) )
            // InternalSQLParser.g:20879:2: ( ruleExpressionFragmentSecond )
            {
            // InternalSQLParser.g:20879:2: ( ruleExpressionFragmentSecond )
            // InternalSQLParser.g:20880:3: ruleExpressionFragmentSecond
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__EntriesAssignment_1_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAssignment_0_0"
    // InternalSQLParser.g:20889:1: rule__ExpressionFragmentSecond__CAssignment_0_0 : ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__CAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20893:1: ( ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) )
            // InternalSQLParser.g:20894:2: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            {
            // InternalSQLParser.g:20894:2: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            // InternalSQLParser.g:20895:3: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }
            // InternalSQLParser.g:20896:3: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            // InternalSQLParser.g:20896:4: rule__ExpressionFragmentSecond__CAlternatives_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAlternatives_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAssignment_0_0"


    // $ANTLR start "rule__ExpressionFragmentSecond__EfragAssignment_0_1"
    // InternalSQLParser.g:20904:1: rule__ExpressionFragmentSecond__EfragAssignment_0_1 : ( ruleExpressionFragment ) ;
    public final void rule__ExpressionFragmentSecond__EfragAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20908:1: ( ( ruleExpressionFragment ) )
            // InternalSQLParser.g:20909:2: ( ruleExpressionFragment )
            {
            // InternalSQLParser.g:20909:2: ( ruleExpressionFragment )
            // InternalSQLParser.g:20910:3: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__EfragAssignment_0_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__NotPrmAssignment_1"
    // InternalSQLParser.g:20919:1: rule__ExpressionFragmentSecond__NotPrmAssignment_1 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragmentSecond__NotPrmAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20923:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:20924:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:20924:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:20925:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__NotPrmAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__ExpgroupAssignment_0"
    // InternalSQLParser.g:20934:1: rule__ExpressionFragment__ExpgroupAssignment_0 : ( ruleExpressionGroup ) ;
    public final void rule__ExpressionFragment__ExpgroupAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20938:1: ( ( ruleExpressionGroup ) )
            // InternalSQLParser.g:20939:2: ( ruleExpressionGroup )
            {
            // InternalSQLParser.g:20939:2: ( ruleExpressionGroup )
            // InternalSQLParser.g:20940:3: ruleExpressionGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpgroupAssignment_0"


    // $ANTLR start "rule__ExpressionFragment__ExpAssignment_1"
    // InternalSQLParser.g:20949:1: rule__ExpressionFragment__ExpAssignment_1 : ( ruleExpression ) ;
    public final void rule__ExpressionFragment__ExpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20953:1: ( ( ruleExpression ) )
            // InternalSQLParser.g:20954:2: ( ruleExpression )
            {
            // InternalSQLParser.g:20954:2: ( ruleExpression )
            // InternalSQLParser.g:20955:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__XexpAssignment_2"
    // InternalSQLParser.g:20964:1: rule__ExpressionFragment__XexpAssignment_2 : ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) ;
    public final void rule__ExpressionFragment__XexpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20968:1: ( ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) )
            // InternalSQLParser.g:20969:2: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            {
            // InternalSQLParser.g:20969:2: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            // InternalSQLParser.g:20970:3: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }
            // InternalSQLParser.g:20971:3: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            // InternalSQLParser.g:20971:4: rule__ExpressionFragment__XexpAlternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__XexpAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAssignment_2"


    // $ANTLR start "rule__ExpressionFragment__NotPrmAssignment_3"
    // InternalSQLParser.g:20979:1: rule__ExpressionFragment__NotPrmAssignment_3 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragment__NotPrmAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20983:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:20984:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:20984:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:20985:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__NotPrmAssignment_3"


    // $ANTLR start "rule__ExpressionFragment__InAssignment_4"
    // InternalSQLParser.g:20994:1: rule__ExpressionFragment__InAssignment_4 : ( ruleInOperator ) ;
    public final void rule__ExpressionFragment__InAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:20998:1: ( ( ruleInOperator ) )
            // InternalSQLParser.g:20999:2: ( ruleInOperator )
            {
            // InternalSQLParser.g:20999:2: ( ruleInOperator )
            // InternalSQLParser.g:21000:3: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__InAssignment_4"


    // $ANTLR start "rule__ExpressionFragment__ExistsAssignment_5"
    // InternalSQLParser.g:21009:1: rule__ExpressionFragment__ExistsAssignment_5 : ( ruleExistsOperator ) ;
    public final void rule__ExpressionFragment__ExistsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21013:1: ( ( ruleExistsOperator ) )
            // InternalSQLParser.g:21014:2: ( ruleExistsOperator )
            {
            // InternalSQLParser.g:21014:2: ( ruleExistsOperator )
            // InternalSQLParser.g:21015:3: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExistsAssignment_5"


    // $ANTLR start "rule__ExpressionGroup__IsnotAssignment_1"
    // InternalSQLParser.g:21024:1: rule__ExpressionGroup__IsnotAssignment_1 : ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) ;
    public final void rule__ExpressionGroup__IsnotAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21028:1: ( ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) )
            // InternalSQLParser.g:21029:2: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:21029:2: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            // InternalSQLParser.g:21030:3: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }
            // InternalSQLParser.g:21031:3: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            // InternalSQLParser.g:21031:4: rule__ExpressionGroup__IsnotAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__IsnotAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAssignment_1"


    // $ANTLR start "rule__ExpressionGroup__ExprAssignment_3"
    // InternalSQLParser.g:21039:1: rule__ExpressionGroup__ExprAssignment_3 : ( ruleFullExpression ) ;
    public final void rule__ExpressionGroup__ExprAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21043:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:21044:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:21044:2: ( ruleFullExpression )
            // InternalSQLParser.g:21045:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__ExprAssignment_3"


    // $ANTLR start "rule__XExpression__XfAssignment_2"
    // InternalSQLParser.g:21054:1: rule__XExpression__XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression__XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21058:1: ( ( ruleXFunction ) )
            // InternalSQLParser.g:21059:2: ( ruleXFunction )
            {
            // InternalSQLParser.g:21059:2: ( ruleXFunction )
            // InternalSQLParser.g:21060:3: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__XfAssignment_2"


    // $ANTLR start "rule__XExpression__ColAssignment_4"
    // InternalSQLParser.g:21069:1: rule__XExpression__ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression__ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21073:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21074:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21074:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21075:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__ColAssignment_4"


    // $ANTLR start "rule__XExpression__PrmAssignment_5_1"
    // InternalSQLParser.g:21084:1: rule__XExpression__PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression__PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21088:1: ( ( ruleXExpressionParams ) )
            // InternalSQLParser.g:21089:2: ( ruleXExpressionParams )
            {
            // InternalSQLParser.g:21089:2: ( ruleXExpressionParams )
            // InternalSQLParser.g:21090:3: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__PrmAssignment_5_1"


    // $ANTLR start "rule__XExpression___XfAssignment_2"
    // InternalSQLParser.g:21099:1: rule__XExpression___XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression___XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21103:1: ( ( ruleXFunction ) )
            // InternalSQLParser.g:21104:2: ( ruleXFunction )
            {
            // InternalSQLParser.g:21104:2: ( ruleXFunction )
            // InternalSQLParser.g:21105:3: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___XfAssignment_2"


    // $ANTLR start "rule__XExpression___ColAssignment_4"
    // InternalSQLParser.g:21114:1: rule__XExpression___ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression___ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21118:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21119:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21119:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21120:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___ColAssignment_4"


    // $ANTLR start "rule__XExpression___PrmAssignment_5_1"
    // InternalSQLParser.g:21129:1: rule__XExpression___PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression___PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21133:1: ( ( ruleXExpressionParams ) )
            // InternalSQLParser.g:21134:2: ( ruleXExpressionParams )
            {
            // InternalSQLParser.g:21134:2: ( ruleXExpressionParams )
            // InternalSQLParser.g:21135:3: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___PrmAssignment_5_1"


    // $ANTLR start "rule__XExpressionParams__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21144:1: rule__XExpressionParams__EntriesAssignment_1_1_1 : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21148:1: ( ( ruleJRParameter ) )
            // InternalSQLParser.g:21149:2: ( ruleJRParameter )
            {
            // InternalSQLParser.g:21149:2: ( ruleJRParameter )
            // InternalSQLParser.g:21150:3: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__JRParameter__JrprmAssignment"
    // InternalSQLParser.g:21159:1: rule__JRParameter__JrprmAssignment : ( RULE_ID ) ;
    public final void rule__JRParameter__JrprmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21163:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:21164:2: ( RULE_ID )
            {
            // InternalSQLParser.g:21164:2: ( RULE_ID )
            // InternalSQLParser.g:21165:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JRParameter__JrprmAssignment"


    // $ANTLR start "rule__Expression__Op1Assignment_0"
    // InternalSQLParser.g:21174:1: rule__Expression__Op1Assignment_0 : ( ruleOperand ) ;
    public final void rule__Expression__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21178:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:21179:2: ( ruleOperand )
            {
            // InternalSQLParser.g:21179:2: ( ruleOperand )
            // InternalSQLParser.g:21180:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Op1Assignment_0"


    // $ANTLR start "rule__Expression__IsnullAssignment_1_0"
    // InternalSQLParser.g:21189:1: rule__Expression__IsnullAssignment_1_0 : ( ruleIsNullValue ) ;
    public final void rule__Expression__IsnullAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21193:1: ( ( ruleIsNullValue ) )
            // InternalSQLParser.g:21194:2: ( ruleIsNullValue )
            {
            // InternalSQLParser.g:21194:2: ( ruleIsNullValue )
            // InternalSQLParser.g:21195:3: ruleIsNullValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__IsnullAssignment_1_0"


    // $ANTLR start "rule__Expression__InAssignment_1_1"
    // InternalSQLParser.g:21204:1: rule__Expression__InAssignment_1_1 : ( ruleInOperator ) ;
    public final void rule__Expression__InAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21208:1: ( ( ruleInOperator ) )
            // InternalSQLParser.g:21209:2: ( ruleInOperator )
            {
            // InternalSQLParser.g:21209:2: ( ruleInOperator )
            // InternalSQLParser.g:21210:3: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__InAssignment_1_1"


    // $ANTLR start "rule__Expression__ExistsAssignment_1_2"
    // InternalSQLParser.g:21219:1: rule__Expression__ExistsAssignment_1_2 : ( ruleExistsOperator ) ;
    public final void rule__Expression__ExistsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21223:1: ( ( ruleExistsOperator ) )
            // InternalSQLParser.g:21224:2: ( ruleExistsOperator )
            {
            // InternalSQLParser.g:21224:2: ( ruleExistsOperator )
            // InternalSQLParser.g:21225:3: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExistsAssignment_1_2"


    // $ANTLR start "rule__Expression__BetweenAssignment_1_3"
    // InternalSQLParser.g:21234:1: rule__Expression__BetweenAssignment_1_3 : ( ruleBetween ) ;
    public final void rule__Expression__BetweenAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21238:1: ( ( ruleBetween ) )
            // InternalSQLParser.g:21239:2: ( ruleBetween )
            {
            // InternalSQLParser.g:21239:2: ( ruleBetween )
            // InternalSQLParser.g:21240:3: ruleBetween
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__BetweenAssignment_1_3"


    // $ANTLR start "rule__Expression__LikeAssignment_1_4"
    // InternalSQLParser.g:21249:1: rule__Expression__LikeAssignment_1_4 : ( ruleLike ) ;
    public final void rule__Expression__LikeAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21253:1: ( ( ruleLike ) )
            // InternalSQLParser.g:21254:2: ( ruleLike )
            {
            // InternalSQLParser.g:21254:2: ( ruleLike )
            // InternalSQLParser.g:21255:3: ruleLike
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__LikeAssignment_1_4"


    // $ANTLR start "rule__Expression__CompAssignment_1_5"
    // InternalSQLParser.g:21264:1: rule__Expression__CompAssignment_1_5 : ( ruleComparison ) ;
    public final void rule__Expression__CompAssignment_1_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21268:1: ( ( ruleComparison ) )
            // InternalSQLParser.g:21269:2: ( ruleComparison )
            {
            // InternalSQLParser.g:21269:2: ( ruleComparison )
            // InternalSQLParser.g:21270:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__CompAssignment_1_5"


    // $ANTLR start "rule__Comparison__OperatorAssignment_0"
    // InternalSQLParser.g:21279:1: rule__Comparison__OperatorAssignment_0 : ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) ;
    public final void rule__Comparison__OperatorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21283:1: ( ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) )
            // InternalSQLParser.g:21284:2: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            {
            // InternalSQLParser.g:21284:2: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            // InternalSQLParser.g:21285:3: ( rule__Comparison__OperatorAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }
            // InternalSQLParser.g:21286:3: ( rule__Comparison__OperatorAlternatives_0_0 )
            // InternalSQLParser.g:21286:4: rule__Comparison__OperatorAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAssignment_0"


    // $ANTLR start "rule__Comparison__SubOperatorAssignment_1"
    // InternalSQLParser.g:21294:1: rule__Comparison__SubOperatorAssignment_1 : ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) ;
    public final void rule__Comparison__SubOperatorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21298:1: ( ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) )
            // InternalSQLParser.g:21299:2: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            {
            // InternalSQLParser.g:21299:2: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            // InternalSQLParser.g:21300:3: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }
            // InternalSQLParser.g:21301:3: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            // InternalSQLParser.g:21301:4: rule__Comparison__SubOperatorAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__SubOperatorAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAssignment_1"


    // $ANTLR start "rule__Comparison__Op2Assignment_2"
    // InternalSQLParser.g:21309:1: rule__Comparison__Op2Assignment_2 : ( ruleOperand ) ;
    public final void rule__Comparison__Op2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21313:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:21314:2: ( ruleOperand )
            {
            // InternalSQLParser.g:21314:2: ( ruleOperand )
            // InternalSQLParser.g:21315:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Op2Assignment_2"


    // $ANTLR start "rule__Like__OpLikeAssignment_0"
    // InternalSQLParser.g:21324:1: rule__Like__OpLikeAssignment_0 : ( ruleLikeValue ) ;
    public final void rule__Like__OpLikeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21328:1: ( ( ruleLikeValue ) )
            // InternalSQLParser.g:21329:2: ( ruleLikeValue )
            {
            // InternalSQLParser.g:21329:2: ( ruleLikeValue )
            // InternalSQLParser.g:21330:3: ruleLikeValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__OpLikeAssignment_0"


    // $ANTLR start "rule__Like__Op2Assignment_1"
    // InternalSQLParser.g:21339:1: rule__Like__Op2Assignment_1 : ( ruleLikeOperand ) ;
    public final void rule__Like__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21343:1: ( ( ruleLikeOperand ) )
            // InternalSQLParser.g:21344:2: ( ruleLikeOperand )
            {
            // InternalSQLParser.g:21344:2: ( ruleLikeOperand )
            // InternalSQLParser.g:21345:3: ruleLikeOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Op2Assignment_1"


    // $ANTLR start "rule__LikeOperand__Op2Assignment_0"
    // InternalSQLParser.g:21354:1: rule__LikeOperand__Op2Assignment_0 : ( ruleStringOperand ) ;
    public final void rule__LikeOperand__Op2Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21358:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:21359:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:21359:2: ( ruleStringOperand )
            // InternalSQLParser.g:21360:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Op2Assignment_0"


    // $ANTLR start "rule__LikeOperand__Fop2Assignment_1"
    // InternalSQLParser.g:21369:1: rule__LikeOperand__Fop2Assignment_1 : ( ruleOperandFunction ) ;
    public final void rule__LikeOperand__Fop2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21373:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:21374:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:21374:2: ( ruleOperandFunction )
            // InternalSQLParser.g:21375:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Fop2Assignment_1"


    // $ANTLR start "rule__LikeOperand__FcastAssignment_2"
    // InternalSQLParser.g:21384:1: rule__LikeOperand__FcastAssignment_2 : ( ruleOpFunctionCast ) ;
    public final void rule__LikeOperand__FcastAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21388:1: ( ( ruleOpFunctionCast ) )
            // InternalSQLParser.g:21389:2: ( ruleOpFunctionCast )
            {
            // InternalSQLParser.g:21389:2: ( ruleOpFunctionCast )
            // InternalSQLParser.g:21390:3: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FcastAssignment_2"


    // $ANTLR start "rule__LikeOperand__FparamAssignment_3"
    // InternalSQLParser.g:21399:1: rule__LikeOperand__FparamAssignment_3 : ( ruleParameterOperand ) ;
    public final void rule__LikeOperand__FparamAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21403:1: ( ( ruleParameterOperand ) )
            // InternalSQLParser.g:21404:2: ( ruleParameterOperand )
            {
            // InternalSQLParser.g:21404:2: ( ruleParameterOperand )
            // InternalSQLParser.g:21405:3: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FparamAssignment_3"


    // $ANTLR start "rule__Between__OpBetweenAssignment_0"
    // InternalSQLParser.g:21414:1: rule__Between__OpBetweenAssignment_0 : ( ruleBetweenValue ) ;
    public final void rule__Between__OpBetweenAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21418:1: ( ( ruleBetweenValue ) )
            // InternalSQLParser.g:21419:2: ( ruleBetweenValue )
            {
            // InternalSQLParser.g:21419:2: ( ruleBetweenValue )
            // InternalSQLParser.g:21420:3: ruleBetweenValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__OpBetweenAssignment_0"


    // $ANTLR start "rule__Between__Op2Assignment_1"
    // InternalSQLParser.g:21429:1: rule__Between__Op2Assignment_1 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21433:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21434:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21434:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21435:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op2Assignment_1"


    // $ANTLR start "rule__Between__Op3Assignment_3"
    // InternalSQLParser.g:21444:1: rule__Between__Op3Assignment_3 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op3Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21448:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21449:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21449:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21450:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op3Assignment_3"


    // $ANTLR start "rule__InOperator__OpAssignment_1"
    // InternalSQLParser.g:21459:1: rule__InOperator__OpAssignment_1 : ( ruleInValue ) ;
    public final void rule__InOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21463:1: ( ( ruleInValue ) )
            // InternalSQLParser.g:21464:2: ( ruleInValue )
            {
            // InternalSQLParser.g:21464:2: ( ruleInValue )
            // InternalSQLParser.g:21465:3: ruleInValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpAssignment_1"


    // $ANTLR start "rule__InOperator__SubqueryAssignment_2_0"
    // InternalSQLParser.g:21474:1: rule__InOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__InOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21478:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:21479:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:21479:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:21480:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__InOperator__OpListAssignment_2_1"
    // InternalSQLParser.g:21489:1: rule__InOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__InOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21493:1: ( ( ruleOperandListGroup ) )
            // InternalSQLParser.g:21494:2: ( ruleOperandListGroup )
            {
            // InternalSQLParser.g:21494:2: ( ruleOperandListGroup )
            // InternalSQLParser.g:21495:3: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__ExistsOperator__OpAssignment_1"
    // InternalSQLParser.g:21504:1: rule__ExistsOperator__OpAssignment_1 : ( ruleExistsValue ) ;
    public final void rule__ExistsOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21508:1: ( ( ruleExistsValue ) )
            // InternalSQLParser.g:21509:2: ( ruleExistsValue )
            {
            // InternalSQLParser.g:21509:2: ( ruleExistsValue )
            // InternalSQLParser.g:21510:3: ruleExistsValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpAssignment_1"


    // $ANTLR start "rule__ExistsOperator__SubqueryAssignment_2_0"
    // InternalSQLParser.g:21519:1: rule__ExistsOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__ExistsOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21523:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:21524:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:21524:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:21525:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__ExistsOperator__OpListAssignment_2_1"
    // InternalSQLParser.g:21534:1: rule__ExistsOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__ExistsOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21538:1: ( ( ruleOperandListGroup ) )
            // InternalSQLParser.g:21539:2: ( ruleOperandListGroup )
            {
            // InternalSQLParser.g:21539:2: ( ruleOperandListGroup )
            // InternalSQLParser.g:21540:3: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__OperandListGroup__OpGroupAssignment_1"
    // InternalSQLParser.g:21549:1: rule__OperandListGroup__OpGroupAssignment_1 : ( ruleOperandList ) ;
    public final void rule__OperandListGroup__OpGroupAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21553:1: ( ( ruleOperandList ) )
            // InternalSQLParser.g:21554:2: ( ruleOperandList )
            {
            // InternalSQLParser.g:21554:2: ( ruleOperandList )
            // InternalSQLParser.g:21555:3: ruleOperandList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__OpGroupAssignment_1"


    // $ANTLR start "rule__OperandList__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21564:1: rule__OperandList__EntriesAssignment_1_1_1 : ( ruleScalarOperand ) ;
    public final void rule__OperandList__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21568:1: ( ( ruleScalarOperand ) )
            // InternalSQLParser.g:21569:2: ( ruleScalarOperand )
            {
            // InternalSQLParser.g:21569:2: ( ruleScalarOperand )
            // InternalSQLParser.g:21570:3: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Operand__Op1Assignment_0"
    // InternalSQLParser.g:21579:1: rule__Operand__Op1Assignment_0 : ( ruleOperandFragment ) ;
    public final void rule__Operand__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21583:1: ( ( ruleOperandFragment ) )
            // InternalSQLParser.g:21584:2: ( ruleOperandFragment )
            {
            // InternalSQLParser.g:21584:2: ( ruleOperandFragment )
            // InternalSQLParser.g:21585:3: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Op1Assignment_0"


    // $ANTLR start "rule__Operand__RightAssignment_1_1"
    // InternalSQLParser.g:21594:1: rule__Operand__RightAssignment_1_1 : ( ruleOperandFragment ) ;
    public final void rule__Operand__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21598:1: ( ( ruleOperandFragment ) )
            // InternalSQLParser.g:21599:2: ( ruleOperandFragment )
            {
            // InternalSQLParser.g:21599:2: ( ruleOperandFragment )
            // InternalSQLParser.g:21600:3: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__RightAssignment_1_1"


    // $ANTLR start "rule__OperandFragment__ColumnAssignment_0"
    // InternalSQLParser.g:21609:1: rule__OperandFragment__ColumnAssignment_0 : ( ruleColumnOperand ) ;
    public final void rule__OperandFragment__ColumnAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21613:1: ( ( ruleColumnOperand ) )
            // InternalSQLParser.g:21614:2: ( ruleColumnOperand )
            {
            // InternalSQLParser.g:21614:2: ( ruleColumnOperand )
            // InternalSQLParser.g:21615:3: ruleColumnOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__ColumnAssignment_0"


    // $ANTLR start "rule__OperandFragment__XopAssignment_1"
    // InternalSQLParser.g:21624:1: rule__OperandFragment__XopAssignment_1 : ( ruleXOperandFragment ) ;
    public final void rule__OperandFragment__XopAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21628:1: ( ( ruleXOperandFragment ) )
            // InternalSQLParser.g:21629:2: ( ruleXOperandFragment )
            {
            // InternalSQLParser.g:21629:2: ( ruleXOperandFragment )
            // InternalSQLParser.g:21630:3: ruleXOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__XopAssignment_1"


    // $ANTLR start "rule__OperandFragment__SubqAssignment_2"
    // InternalSQLParser.g:21639:1: rule__OperandFragment__SubqAssignment_2 : ( ruleSubQueryOperand ) ;
    public final void rule__OperandFragment__SubqAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21643:1: ( ( ruleSubQueryOperand ) )
            // InternalSQLParser.g:21644:2: ( ruleSubQueryOperand )
            {
            // InternalSQLParser.g:21644:2: ( ruleSubQueryOperand )
            // InternalSQLParser.g:21645:3: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SubqAssignment_2"


    // $ANTLR start "rule__OperandFragment__FcastAssignment_3"
    // InternalSQLParser.g:21654:1: rule__OperandFragment__FcastAssignment_3 : ( ruleOpFunctionCast ) ;
    public final void rule__OperandFragment__FcastAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21658:1: ( ( ruleOpFunctionCast ) )
            // InternalSQLParser.g:21659:2: ( ruleOpFunctionCast )
            {
            // InternalSQLParser.g:21659:2: ( ruleOpFunctionCast )
            // InternalSQLParser.g:21660:3: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FcastAssignment_3"


    // $ANTLR start "rule__OperandFragment__FextAssignment_4"
    // InternalSQLParser.g:21669:1: rule__OperandFragment__FextAssignment_4 : ( ruleFunctionExtract ) ;
    public final void rule__OperandFragment__FextAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21673:1: ( ( ruleFunctionExtract ) )
            // InternalSQLParser.g:21674:2: ( ruleFunctionExtract )
            {
            // InternalSQLParser.g:21674:2: ( ruleFunctionExtract )
            // InternalSQLParser.g:21675:3: ruleFunctionExtract
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FextAssignment_4"


    // $ANTLR start "rule__OperandFragment__FuncAssignment_5"
    // InternalSQLParser.g:21684:1: rule__OperandFragment__FuncAssignment_5 : ( ruleOperandFunction ) ;
    public final void rule__OperandFragment__FuncAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21688:1: ( ( ruleOperandFunction ) )
            // InternalSQLParser.g:21689:2: ( ruleOperandFunction )
            {
            // InternalSQLParser.g:21689:2: ( ruleOperandFunction )
            // InternalSQLParser.g:21690:3: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FuncAssignment_5"


    // $ANTLR start "rule__OperandFragment__SqlcaseAssignment_6"
    // InternalSQLParser.g:21699:1: rule__OperandFragment__SqlcaseAssignment_6 : ( ruleSQLCASE ) ;
    public final void rule__OperandFragment__SqlcaseAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21703:1: ( ( ruleSQLCASE ) )
            // InternalSQLParser.g:21704:2: ( ruleSQLCASE )
            {
            // InternalSQLParser.g:21704:2: ( ruleSQLCASE )
            // InternalSQLParser.g:21705:3: ruleSQLCASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SqlcaseAssignment_6"


    // $ANTLR start "rule__OperandFunction__FnameAssignment_1"
    // InternalSQLParser.g:21714:1: rule__OperandFunction__FnameAssignment_1 : ( ruleFNAME ) ;
    public final void rule__OperandFunction__FnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21718:1: ( ( ruleFNAME ) )
            // InternalSQLParser.g:21719:2: ( ruleFNAME )
            {
            // InternalSQLParser.g:21719:2: ( ruleFNAME )
            // InternalSQLParser.g:21720:3: ruleFNAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FnameAssignment_1"


    // $ANTLR start "rule__OperandFunction__StarAssignment_2_0"
    // InternalSQLParser.g:21729:1: rule__OperandFunction__StarAssignment_2_0 : ( RULE_STAR ) ;
    public final void rule__OperandFunction__StarAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21733:1: ( ( RULE_STAR ) )
            // InternalSQLParser.g:21734:2: ( RULE_STAR )
            {
            // InternalSQLParser.g:21734:2: ( RULE_STAR )
            // InternalSQLParser.g:21735:3: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__StarAssignment_2_0"


    // $ANTLR start "rule__OperandFunction__ArgsAssignment_2_1"
    // InternalSQLParser.g:21744:1: rule__OperandFunction__ArgsAssignment_2_1 : ( ruleOpFunctionArg ) ;
    public final void rule__OperandFunction__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21748:1: ( ( ruleOpFunctionArg ) )
            // InternalSQLParser.g:21749:2: ( ruleOpFunctionArg )
            {
            // InternalSQLParser.g:21749:2: ( ruleOpFunctionArg )
            // InternalSQLParser.g:21750:3: ruleOpFunctionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__ArgsAssignment_2_1"


    // $ANTLR start "rule__OperandFunction__FanAssignment_4"
    // InternalSQLParser.g:21759:1: rule__OperandFunction__FanAssignment_4 : ( ruleFunctionAnalytical ) ;
    public final void rule__OperandFunction__FanAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21763:1: ( ( ruleFunctionAnalytical ) )
            // InternalSQLParser.g:21764:2: ( ruleFunctionAnalytical )
            {
            // InternalSQLParser.g:21764:2: ( ruleFunctionAnalytical )
            // InternalSQLParser.g:21765:3: ruleFunctionAnalytical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FanAssignment_4"


    // $ANTLR start "rule__FunctionExtract__VAssignment_2"
    // InternalSQLParser.g:21774:1: rule__FunctionExtract__VAssignment_2 : ( ruleEXTRACT_VALUES ) ;
    public final void rule__FunctionExtract__VAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21778:1: ( ( ruleEXTRACT_VALUES ) )
            // InternalSQLParser.g:21779:2: ( ruleEXTRACT_VALUES )
            {
            // InternalSQLParser.g:21779:2: ( ruleEXTRACT_VALUES )
            // InternalSQLParser.g:21780:3: ruleEXTRACT_VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEXTRACT_VALUES();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__VAssignment_2"


    // $ANTLR start "rule__FunctionExtract__OperandAssignment_4"
    // InternalSQLParser.g:21789:1: rule__FunctionExtract__OperandAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__FunctionExtract__OperandAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21793:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:21794:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:21794:2: ( ruleOperandGroup )
            // InternalSQLParser.g:21795:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__OperandAssignment_4"


    // $ANTLR start "rule__FunctionAnalytical__AnClauseAssignment_2"
    // InternalSQLParser.g:21804:1: rule__FunctionAnalytical__AnClauseAssignment_2 : ( ruleAnalyticClause ) ;
    public final void rule__FunctionAnalytical__AnClauseAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21808:1: ( ( ruleAnalyticClause ) )
            // InternalSQLParser.g:21809:2: ( ruleAnalyticClause )
            {
            // InternalSQLParser.g:21809:2: ( ruleAnalyticClause )
            // InternalSQLParser.g:21810:3: ruleAnalyticClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__AnClauseAssignment_2"


    // $ANTLR start "rule__AnalyticClause__AbcAssignment_1"
    // InternalSQLParser.g:21819:1: rule__AnalyticClause__AbcAssignment_1 : ( ruleQueryPartitionClause ) ;
    public final void rule__AnalyticClause__AbcAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21823:1: ( ( ruleQueryPartitionClause ) )
            // InternalSQLParser.g:21824:2: ( ruleQueryPartitionClause )
            {
            // InternalSQLParser.g:21824:2: ( ruleQueryPartitionClause )
            // InternalSQLParser.g:21825:3: ruleQueryPartitionClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__AbcAssignment_1"


    // $ANTLR start "rule__AnalyticClause__ObcAssignment_2_0"
    // InternalSQLParser.g:21834:1: rule__AnalyticClause__ObcAssignment_2_0 : ( ruleOrderByClause ) ;
    public final void rule__AnalyticClause__ObcAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21838:1: ( ( ruleOrderByClause ) )
            // InternalSQLParser.g:21839:2: ( ruleOrderByClause )
            {
            // InternalSQLParser.g:21839:2: ( ruleOrderByClause )
            // InternalSQLParser.g:21840:3: ruleOrderByClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__ObcAssignment_2_0"


    // $ANTLR start "rule__AnalyticClause__WincAssignment_2_1"
    // InternalSQLParser.g:21849:1: rule__AnalyticClause__WincAssignment_2_1 : ( ruleWindowingClause ) ;
    public final void rule__AnalyticClause__WincAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21853:1: ( ( ruleWindowingClause ) )
            // InternalSQLParser.g:21854:2: ( ruleWindowingClause )
            {
            // InternalSQLParser.g:21854:2: ( ruleWindowingClause )
            // InternalSQLParser.g:21855:3: ruleWindowingClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__WincAssignment_2_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoPAssignment_1"
    // InternalSQLParser.g:21864:1: rule__WindowingClauseBetween__WcoPAssignment_1 : ( ruleWindowingClauseOperandPreceding ) ;
    public final void rule__WindowingClauseBetween__WcoPAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21868:1: ( ( ruleWindowingClauseOperandPreceding ) )
            // InternalSQLParser.g:21869:2: ( ruleWindowingClauseOperandPreceding )
            {
            // InternalSQLParser.g:21869:2: ( ruleWindowingClauseOperandPreceding )
            // InternalSQLParser.g:21870:3: ruleWindowingClauseOperandPreceding
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoPAssignment_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoFAssignment_3"
    // InternalSQLParser.g:21879:1: rule__WindowingClauseBetween__WcoFAssignment_3 : ( ruleWindowingClauseOperandFollowing ) ;
    public final void rule__WindowingClauseBetween__WcoFAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21883:1: ( ( ruleWindowingClauseOperandFollowing ) )
            // InternalSQLParser.g:21884:2: ( ruleWindowingClauseOperandFollowing )
            {
            // InternalSQLParser.g:21884:2: ( ruleWindowingClauseOperandFollowing )
            // InternalSQLParser.g:21885:3: ruleWindowingClauseOperandFollowing
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoFAssignment_3"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"
    // InternalSQLParser.g:21894:1: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21898:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:21899:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:21899:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:21900:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"
    // InternalSQLParser.g:21909:1: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21913:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:21914:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:21914:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:21915:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"


    // $ANTLR start "rule__OrderByClause__ArgsAssignment_1"
    // InternalSQLParser.g:21924:1: rule__OrderByClause__ArgsAssignment_1 : ( ruleOrderByClauseArgs ) ;
    public final void rule__OrderByClause__ArgsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21928:1: ( ( ruleOrderByClauseArgs ) )
            // InternalSQLParser.g:21929:2: ( ruleOrderByClauseArgs )
            {
            // InternalSQLParser.g:21929:2: ( ruleOrderByClauseArgs )
            // InternalSQLParser.g:21930:3: ruleOrderByClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__ArgsAssignment_1"


    // $ANTLR start "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21939:1: rule__OrderByClauseArgs__EntriesAssignment_1_1_1 : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21943:1: ( ( ruleOrderByClauseArg ) )
            // InternalSQLParser.g:21944:2: ( ruleOrderByClauseArg )
            {
            // InternalSQLParser.g:21944:2: ( ruleOrderByClauseArg )
            // InternalSQLParser.g:21945:3: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByClauseArg__ColAssignment_0"
    // InternalSQLParser.g:21954:1: rule__OrderByClauseArg__ColAssignment_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__OrderByClauseArg__ColAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21958:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:21959:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:21959:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:21960:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__ColAssignment_0"


    // $ANTLR start "rule__QueryPartitionClause__ArgsAssignment_2_0"
    // InternalSQLParser.g:21969:1: rule__QueryPartitionClause__ArgsAssignment_2_0 : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__ArgsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21973:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSQLParser.g:21974:2: ( ruleAnalyticExprArgs )
            {
            // InternalSQLParser.g:21974:2: ( ruleAnalyticExprArgs )
            // InternalSQLParser.g:21975:3: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__ArgsAssignment_2_0"


    // $ANTLR start "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:21984:1: rule__AnalyticExprArgs__EntriesAssignment_1_1_1 : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:21988:1: ( ( ruleAnalyticExprArg ) )
            // InternalSQLParser.g:21989:2: ( ruleAnalyticExprArg )
            {
            // InternalSQLParser.g:21989:2: ( ruleAnalyticExprArg )
            // InternalSQLParser.g:21990:3: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__AnalyticExprArg__CeAssignment_0"
    // InternalSQLParser.g:21999:1: rule__AnalyticExprArg__CeAssignment_0 : ( ruleOperand ) ;
    public final void rule__AnalyticExprArg__CeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22003:1: ( ( ruleOperand ) )
            // InternalSQLParser.g:22004:2: ( ruleOperand )
            {
            // InternalSQLParser.g:22004:2: ( ruleOperand )
            // InternalSQLParser.g:22005:3: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__CeAssignment_0"


    // $ANTLR start "rule__AnalyticExprArg__ColAliasAssignment_1"
    // InternalSQLParser.g:22014:1: rule__AnalyticExprArg__ColAliasAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__AnalyticExprArg__ColAliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22018:1: ( ( ruleDbObjectName ) )
            // InternalSQLParser.g:22019:2: ( ruleDbObjectName )
            {
            // InternalSQLParser.g:22019:2: ( ruleDbObjectName )
            // InternalSQLParser.g:22020:3: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__ColAliasAssignment_1"


    // $ANTLR start "rule__OpFunctionArg__EntriesAssignment_1_1_1"
    // InternalSQLParser.g:22029:1: rule__OpFunctionArg__EntriesAssignment_1_1_1 : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22033:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSQLParser.g:22034:2: ( ruleOpFunctionArgOperand )
            {
            // InternalSQLParser.g:22034:2: ( ruleOpFunctionArgOperand )
            // InternalSQLParser.g:22035:3: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAssignment"
    // InternalSQLParser.g:22044:1: rule__OpFunctionArgOperand__OpAssignment : ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) ;
    public final void rule__OpFunctionArgOperand__OpAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22048:1: ( ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) )
            // InternalSQLParser.g:22049:2: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            {
            // InternalSQLParser.g:22049:2: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            // InternalSQLParser.g:22050:3: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }
            // InternalSQLParser.g:22051:3: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            // InternalSQLParser.g:22051:4: rule__OpFunctionArgOperand__OpAlternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAlternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAssignment"


    // $ANTLR start "rule__OpFunctionCast__OpAssignment_1"
    // InternalSQLParser.g:22059:1: rule__OpFunctionCast__OpAssignment_1 : ( ruleOperandGroup ) ;
    public final void rule__OpFunctionCast__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22063:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:22064:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:22064:2: ( ruleOperandGroup )
            // InternalSQLParser.g:22065:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__OpAssignment_1"


    // $ANTLR start "rule__OpFunctionCast__TypeAssignment_3"
    // InternalSQLParser.g:22074:1: rule__OpFunctionCast__TypeAssignment_3 : ( RULE_ID ) ;
    public final void rule__OpFunctionCast__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22078:1: ( ( RULE_ID ) )
            // InternalSQLParser.g:22079:2: ( RULE_ID )
            {
            // InternalSQLParser.g:22079:2: ( RULE_ID )
            // InternalSQLParser.g:22080:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__TypeAssignment_3"


    // $ANTLR start "rule__OpFunctionCast__PAssignment_4_1"
    // InternalSQLParser.g:22089:1: rule__OpFunctionCast__PAssignment_4_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__PAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22093:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:22094:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:22094:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:22095:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__PAssignment_4_1"


    // $ANTLR start "rule__OpFunctionCast__P2Assignment_4_2_1"
    // InternalSQLParser.g:22104:1: rule__OpFunctionCast__P2Assignment_4_2_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__P2Assignment_4_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22108:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:22109:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:22109:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:22110:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__P2Assignment_4_2_1"


    // $ANTLR start "rule__XOperandFragment__ParamAssignment_0"
    // InternalSQLParser.g:22119:1: rule__XOperandFragment__ParamAssignment_0 : ( ruleParameterOperand ) ;
    public final void rule__XOperandFragment__ParamAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22123:1: ( ( ruleParameterOperand ) )
            // InternalSQLParser.g:22124:2: ( ruleParameterOperand )
            {
            // InternalSQLParser.g:22124:2: ( ruleParameterOperand )
            // InternalSQLParser.g:22125:3: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ParamAssignment_0"


    // $ANTLR start "rule__XOperandFragment__EparamAssignment_1"
    // InternalSQLParser.g:22134:1: rule__XOperandFragment__EparamAssignment_1 : ( ruleExclamationParameterOperand ) ;
    public final void rule__XOperandFragment__EparamAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22138:1: ( ( ruleExclamationParameterOperand ) )
            // InternalSQLParser.g:22139:2: ( ruleExclamationParameterOperand )
            {
            // InternalSQLParser.g:22139:2: ( ruleExclamationParameterOperand )
            // InternalSQLParser.g:22140:3: ruleExclamationParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__EparamAssignment_1"


    // $ANTLR start "rule__XOperandFragment__ScalarAssignment_2"
    // InternalSQLParser.g:22149:1: rule__XOperandFragment__ScalarAssignment_2 : ( ruleScalarNumberOperand ) ;
    public final void rule__XOperandFragment__ScalarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22153:1: ( ( ruleScalarNumberOperand ) )
            // InternalSQLParser.g:22154:2: ( ruleScalarNumberOperand )
            {
            // InternalSQLParser.g:22154:2: ( ruleScalarNumberOperand )
            // InternalSQLParser.g:22155:3: ruleScalarNumberOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ScalarAssignment_2"


    // $ANTLR start "rule__ParameterOperand__PrmAssignment"
    // InternalSQLParser.g:22164:1: rule__ParameterOperand__PrmAssignment : ( RULE_JRPARAM ) ;
    public final void rule__ParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22168:1: ( ( RULE_JRPARAM ) )
            // InternalSQLParser.g:22169:2: ( RULE_JRPARAM )
            {
            // InternalSQLParser.g:22169:2: ( RULE_JRPARAM )
            // InternalSQLParser.g:22170:3: RULE_JRPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ExclamationParameterOperand__PrmAssignment"
    // InternalSQLParser.g:22179:1: rule__ExclamationParameterOperand__PrmAssignment : ( RULE_JRNPARAM ) ;
    public final void rule__ExclamationParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22183:1: ( ( RULE_JRNPARAM ) )
            // InternalSQLParser.g:22184:2: ( RULE_JRNPARAM )
            {
            // InternalSQLParser.g:22184:2: ( RULE_JRNPARAM )
            // InternalSQLParser.g:22185:3: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclamationParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ColumnOperand__CfullAssignment_0"
    // InternalSQLParser.g:22194:1: rule__ColumnOperand__CfullAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__ColumnOperand__CfullAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22198:1: ( ( ruleColumnFull ) )
            // InternalSQLParser.g:22199:2: ( ruleColumnFull )
            {
            // InternalSQLParser.g:22199:2: ( ruleColumnFull )
            // InternalSQLParser.g:22200:3: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__CfullAssignment_0"


    // $ANTLR start "rule__ColumnOperand__OraAssignment_1"
    // InternalSQLParser.g:22209:1: rule__ColumnOperand__OraAssignment_1 : ( ( LeftParenthesisPlusSignRightParenthesis ) ) ;
    public final void rule__ColumnOperand__OraAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22213:1: ( ( ( LeftParenthesisPlusSignRightParenthesis ) ) )
            // InternalSQLParser.g:22214:2: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            {
            // InternalSQLParser.g:22214:2: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            // InternalSQLParser.g:22215:3: ( LeftParenthesisPlusSignRightParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            // InternalSQLParser.g:22216:3: ( LeftParenthesisPlusSignRightParenthesis )
            // InternalSQLParser.g:22217:4: LeftParenthesisPlusSignRightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesisPlusSignRightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__OraAssignment_1"


    // $ANTLR start "rule__SubQueryOperand__SelAssignment_2"
    // InternalSQLParser.g:22228:1: rule__SubQueryOperand__SelAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__SubQueryOperand__SelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22232:1: ( ( ruleSelectQuery ) )
            // InternalSQLParser.g:22233:2: ( ruleSelectQuery )
            {
            // InternalSQLParser.g:22233:2: ( ruleSelectQuery )
            // InternalSQLParser.g:22234:3: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__SelAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SostrAssignment_0"
    // InternalSQLParser.g:22243:1: rule__ScalarOperand__SostrAssignment_0 : ( ruleStringOperand ) ;
    public final void rule__ScalarOperand__SostrAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22247:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:22248:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:22248:2: ( ruleStringOperand )
            // InternalSQLParser.g:22249:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SostrAssignment_0"


    // $ANTLR start "rule__ScalarOperand__SodblAssignment_1"
    // InternalSQLParser.g:22258:1: rule__ScalarOperand__SodblAssignment_1 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarOperand__SodblAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22262:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSQLParser.g:22263:2: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSQLParser.g:22263:2: ( RULE_SIGNED_DOUBLE )
            // InternalSQLParser.g:22264:3: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodblAssignment_1"


    // $ANTLR start "rule__ScalarOperand__SodateAssignment_2"
    // InternalSQLParser.g:22273:1: rule__ScalarOperand__SodateAssignment_2 : ( RULE_DATE ) ;
    public final void rule__ScalarOperand__SodateAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22277:1: ( ( RULE_DATE ) )
            // InternalSQLParser.g:22278:2: ( RULE_DATE )
            {
            // InternalSQLParser.g:22278:2: ( RULE_DATE )
            // InternalSQLParser.g:22279:3: RULE_DATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }
            match(input,RULE_DATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodateAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SotimeAssignment_3"
    // InternalSQLParser.g:22288:1: rule__ScalarOperand__SotimeAssignment_3 : ( RULE_TIME ) ;
    public final void rule__ScalarOperand__SotimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22292:1: ( ( RULE_TIME ) )
            // InternalSQLParser.g:22293:2: ( RULE_TIME )
            {
            // InternalSQLParser.g:22293:2: ( RULE_TIME )
            // InternalSQLParser.g:22294:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SotimeAssignment_3"


    // $ANTLR start "rule__ScalarOperand__SodtAssignment_4"
    // InternalSQLParser.g:22303:1: rule__ScalarOperand__SodtAssignment_4 : ( RULE_TIMESTAMP ) ;
    public final void rule__ScalarOperand__SodtAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22307:1: ( ( RULE_TIMESTAMP ) )
            // InternalSQLParser.g:22308:2: ( RULE_TIMESTAMP )
            {
            // InternalSQLParser.g:22308:2: ( RULE_TIMESTAMP )
            // InternalSQLParser.g:22309:3: RULE_TIMESTAMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }
            match(input,RULE_TIMESTAMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodtAssignment_4"


    // $ANTLR start "rule__ScalarNumberOperand__SoUIntAssignment_0"
    // InternalSQLParser.g:22318:1: rule__ScalarNumberOperand__SoUIntAssignment_0 : ( RULE_UNSIGNED ) ;
    public final void rule__ScalarNumberOperand__SoUIntAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22322:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:22323:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:22323:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:22324:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SoUIntAssignment_0"


    // $ANTLR start "rule__ScalarNumberOperand__SointAssignment_1"
    // InternalSQLParser.g:22333:1: rule__ScalarNumberOperand__SointAssignment_1 : ( RULE_INT ) ;
    public final void rule__ScalarNumberOperand__SointAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22337:1: ( ( RULE_INT ) )
            // InternalSQLParser.g:22338:2: ( RULE_INT )
            {
            // InternalSQLParser.g:22338:2: ( RULE_INT )
            // InternalSQLParser.g:22339:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SointAssignment_1"


    // $ANTLR start "rule__ScalarNumberOperand__SodblAssignment_2"
    // InternalSQLParser.g:22348:1: rule__ScalarNumberOperand__SodblAssignment_2 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarNumberOperand__SodblAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22352:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSQLParser.g:22353:2: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSQLParser.g:22353:2: ( RULE_SIGNED_DOUBLE )
            // InternalSQLParser.g:22354:3: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SodblAssignment_2"


    // $ANTLR start "rule__ScalarNumberOperand__SostrAssignment_3"
    // InternalSQLParser.g:22363:1: rule__ScalarNumberOperand__SostrAssignment_3 : ( ruleStringOperand ) ;
    public final void rule__ScalarNumberOperand__SostrAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22367:1: ( ( ruleStringOperand ) )
            // InternalSQLParser.g:22368:2: ( ruleStringOperand )
            {
            // InternalSQLParser.g:22368:2: ( ruleStringOperand )
            // InternalSQLParser.g:22369:3: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SostrAssignment_3"


    // $ANTLR start "rule__SQLCASE__WopAssignment_1_0"
    // InternalSQLParser.g:22378:1: rule__SQLCASE__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SQLCASE__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22382:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:22383:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:22383:2: ( ruleOperandGroup )
            // InternalSQLParser.g:22384:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WopAssignment_1_0"


    // $ANTLR start "rule__SQLCASE__ExprAssignment_1_1"
    // InternalSQLParser.g:22393:1: rule__SQLCASE__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SQLCASE__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22397:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:22398:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:22398:2: ( ruleFullExpression )
            // InternalSQLParser.g:22399:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__ExprAssignment_1_1"


    // $ANTLR start "rule__SQLCASE__WhenAssignment_2"
    // InternalSQLParser.g:22408:1: rule__SQLCASE__WhenAssignment_2 : ( ruleSQLCaseWhens ) ;
    public final void rule__SQLCASE__WhenAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22412:1: ( ( ruleSQLCaseWhens ) )
            // InternalSQLParser.g:22413:2: ( ruleSQLCaseWhens )
            {
            // InternalSQLParser.g:22413:2: ( ruleSQLCaseWhens )
            // InternalSQLParser.g:22414:3: ruleSQLCaseWhens
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WhenAssignment_2"


    // $ANTLR start "rule__SQLCaseWhens__EntriesAssignment_1_1"
    // InternalSQLParser.g:22423:1: rule__SQLCaseWhens__EntriesAssignment_1_1 : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22427:1: ( ( ruleSqlCaseWhen ) )
            // InternalSQLParser.g:22428:2: ( ruleSqlCaseWhen )
            {
            // InternalSQLParser.g:22428:2: ( ruleSqlCaseWhen )
            // InternalSQLParser.g:22429:3: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__EntriesAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__WopAssignment_1_0"
    // InternalSQLParser.g:22438:1: rule__SqlCaseWhen__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22442:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:22443:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:22443:2: ( ruleOperandGroup )
            // InternalSQLParser.g:22444:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__WopAssignment_1_0"


    // $ANTLR start "rule__SqlCaseWhen__ExprAssignment_1_1"
    // InternalSQLParser.g:22453:1: rule__SqlCaseWhen__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SqlCaseWhen__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22457:1: ( ( ruleFullExpression ) )
            // InternalSQLParser.g:22458:2: ( ruleFullExpression )
            {
            // InternalSQLParser.g:22458:2: ( ruleFullExpression )
            // InternalSQLParser.g:22459:3: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__ExprAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__TexpAssignment_3"
    // InternalSQLParser.g:22468:1: rule__SqlCaseWhen__TexpAssignment_3 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__TexpAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22472:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:22473:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:22473:2: ( ruleOperandGroup )
            // InternalSQLParser.g:22474:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__TexpAssignment_3"


    // $ANTLR start "rule__SqlCaseWhen__EexpAssignment_4_1"
    // InternalSQLParser.g:22483:1: rule__SqlCaseWhen__EexpAssignment_4_1 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__EexpAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22487:1: ( ( ruleOperandGroup ) )
            // InternalSQLParser.g:22488:2: ( ruleOperandGroup )
            {
            // InternalSQLParser.g:22488:2: ( ruleOperandGroup )
            // InternalSQLParser.g:22489:3: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__EexpAssignment_4_1"


    // $ANTLR start "rule__UnsignedValue__IntegerAssignment"
    // InternalSQLParser.g:22498:1: rule__UnsignedValue__IntegerAssignment : ( RULE_UNSIGNED ) ;
    public final void rule__UnsignedValue__IntegerAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSQLParser.g:22502:1: ( ( RULE_UNSIGNED ) )
            // InternalSQLParser.g:22503:2: ( RULE_UNSIGNED )
            {
            // InternalSQLParser.g:22503:2: ( RULE_UNSIGNED )
            // InternalSQLParser.g:22504:3: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnsignedValue__IntegerAssignment"

    // $ANTLR start synpred90_InternalSQLParser
    public final void synpred90_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:4658:2: ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) )
        // InternalSQLParser.g:4658:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
        {
        // InternalSQLParser.g:4658:2: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
        // InternalSQLParser.g:4659:3: ( rule__OperandFragment__ColumnAssignment_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
        }
        // InternalSQLParser.g:4660:3: ( rule__OperandFragment__ColumnAssignment_0 )
        // InternalSQLParser.g:4660:4: rule__OperandFragment__ColumnAssignment_0
        {
        pushFollow(FOLLOW_2);
        rule__OperandFragment__ColumnAssignment_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred90_InternalSQLParser

    // $ANTLR start synpred95_InternalSQLParser
    public final void synpred95_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:4688:2: ( ( ( rule__OperandFragment__FuncAssignment_5 ) ) )
        // InternalSQLParser.g:4688:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
        {
        // InternalSQLParser.g:4688:2: ( ( rule__OperandFragment__FuncAssignment_5 ) )
        // InternalSQLParser.g:4689:3: ( rule__OperandFragment__FuncAssignment_5 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
        }
        // InternalSQLParser.g:4690:3: ( rule__OperandFragment__FuncAssignment_5 )
        // InternalSQLParser.g:4690:4: rule__OperandFragment__FuncAssignment_5
        {
        pushFollow(FOLLOW_2);
        rule__OperandFragment__FuncAssignment_5();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred95_InternalSQLParser

    // $ANTLR start synpred120_InternalSQLParser
    public final void synpred120_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:5093:2: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) )
        // InternalSQLParser.g:5093:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        {
        // InternalSQLParser.g:5093:2: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        // InternalSQLParser.g:5094:3: ( rule__SQLCASE__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
        }
        // InternalSQLParser.g:5095:3: ( rule__SQLCASE__WopAssignment_1_0 )
        // InternalSQLParser.g:5095:4: rule__SQLCASE__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SQLCASE__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred120_InternalSQLParser

    // $ANTLR start synpred121_InternalSQLParser
    public final void synpred121_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:5114:2: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) )
        // InternalSQLParser.g:5114:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        {
        // InternalSQLParser.g:5114:2: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        // InternalSQLParser.g:5115:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
        }
        // InternalSQLParser.g:5116:3: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        // InternalSQLParser.g:5116:4: rule__SqlCaseWhen__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SqlCaseWhen__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred121_InternalSQLParser

    // $ANTLR start synpred206_InternalSQLParser
    public final void synpred206_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:10042:3: ( rule__TableOrAlias__TblAliasAssignment_3 )
        // InternalSQLParser.g:10042:3: rule__TableOrAlias__TblAliasAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__TableOrAlias__TblAliasAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred206_InternalSQLParser

    // $ANTLR start synpred207_InternalSQLParser
    public final void synpred207_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:10096:3: ( rule__FromValues__CAssignment_1 )
        // InternalSQLParser.g:10096:3: rule__FromValues__CAssignment_1
        {
        pushFollow(FOLLOW_2);
        rule__FromValues__CAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred207_InternalSQLParser

    // $ANTLR start synpred231_InternalSQLParser
    public final void synpred231_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:13210:3: ( rule__FullExpression__Group_1__0 )
        // InternalSQLParser.g:13210:3: rule__FullExpression__Group_1__0
        {
        pushFollow(FOLLOW_2);
        rule__FullExpression__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred231_InternalSQLParser

    // $ANTLR start synpred232_InternalSQLParser
    public final void synpred232_InternalSQLParser_fragment() throws RecognitionException {   
        // InternalSQLParser.g:13270:4: ( rule__FullExpression__EntriesAssignment_1_1 )
        // InternalSQLParser.g:13270:4: rule__FullExpression__EntriesAssignment_1_1
        {
        pushFollow(FOLLOW_2);
        rule__FullExpression__EntriesAssignment_1_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred232_InternalSQLParser

    // Delegated rules

    public final boolean synpred120_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_InternalSQLParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_InternalSQLParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA27 dfa27 = new DFA27(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA130 dfa130 = new DFA130(this);
    static final String dfa_1s = "\14\uffff";
    static final String dfa_2s = "\5\uffff\1\12\6\uffff";
    static final String dfa_3s = "\1\56\1\76\1\uffff\1\56\1\uffff\1\12\3\uffff\1\56\1\uffff\1\104";
    static final String dfa_4s = "\1\u00b7\1\u009e\1\uffff\1\u00b7\1\uffff\1\u00b7\3\uffff\1\u00b7\1\uffff\1\107";
    static final String dfa_5s = "\2\uffff\1\1\1\uffff\1\2\1\uffff\1\3\1\5\1\6\1\uffff\1\4\1\uffff";
    static final String dfa_6s = "\14\uffff}>";
    static final String[] dfa_7s = {
            "\1\4\17\uffff\1\10\14\uffff\1\4\30\uffff\1\4\14\uffff\1\2\32\uffff\1\1\5\uffff\1\6\5\uffff\1\7\5\uffff\1\3\13\uffff\1\4\1\5\1\uffff\3\4\4\uffff\4\4",
            "\1\10\131\uffff\1\7\5\uffff\1\2",
            "",
            "\1\2\17\uffff\1\2\5\uffff\1\4\6\uffff\1\2\30\uffff\1\2\14\uffff\1\2\32\uffff\1\2\5\uffff\1\2\5\uffff\1\2\5\uffff\1\2\13\uffff\2\2\1\uffff\3\2\4\uffff\4\2",
            "",
            "\1\12\11\uffff\1\12\23\uffff\1\4\5\uffff\1\12\2\uffff\1\12\13\uffff\1\12\1\4\1\12\2\uffff\1\12\10\uffff\2\12\1\uffff\1\12\2\uffff\4\12\3\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\3\uffff\1\12\5\uffff\1\12\2\uffff\1\12\1\uffff\1\12\1\4\10\uffff\1\12\4\uffff\1\12\4\uffff\1\12\10\uffff\1\4\4\uffff\1\4\1\uffff\3\4\2\uffff\2\4\1\uffff\1\12\2\4\2\12\1\4\1\12\1\4\1\uffff\4\4\2\uffff\2\12\1\11\3\12\4\uffff\4\12",
            "",
            "",
            "",
            "\1\4\34\uffff\1\4\30\uffff\1\4\71\uffff\1\13\2\uffff\1\12\10\uffff\2\4\1\uffff\3\4\4\uffff\4\4",
            "",
            "\1\4\2\uffff\1\12"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "4302:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );";
        }
    }
    static final String dfa_8s = "\20\uffff";
    static final String dfa_9s = "\1\u0092\1\22\14\u00a1\2\uffff";
    static final String dfa_10s = "\1\u0092\1\u0090\14\u00a8\2\uffff";
    static final String dfa_11s = "\16\uffff\1\1\1\2";
    static final String dfa_12s = "\20\uffff}>";
    static final String[] dfa_13s = {
            "\1\1",
            "\1\13\10\uffff\1\15\1\5\1\14\1\10\7\uffff\1\12\1\11\40\uffff\1\4\1\7\1\3\26\uffff\1\6\56\uffff\1\2",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "\1\16\6\uffff\1\17",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "4347:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );";
        }
    }
    static final String dfa_14s = "\17\uffff";
    static final String dfa_15s = "\1\56\1\0\15\uffff";
    static final String dfa_16s = "\1\u00b7\1\0\15\uffff";
    static final String dfa_17s = "\2\uffff\1\1\1\uffff\1\2\5\uffff\1\3\1\4\1\5\1\7\1\6";
    static final String dfa_18s = "\1\uffff\1\0\15\uffff}>";
    static final String[] dfa_19s = {
            "\1\14\34\uffff\1\13\30\uffff\1\15\71\uffff\1\12\13\uffff\2\4\1\uffff\3\4\4\uffff\1\4\2\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4653:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA38_1 = input.LA(1);

                         
                        int index38_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalSQLParser()) ) {s = 2;}

                        else if ( (synpred95_InternalSQLParser()) ) {s = 14;}

                         
                        input.seek(index38_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 38, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\24\uffff";
    static final String dfa_21s = "\1\56\15\0\6\uffff";
    static final String dfa_22s = "\1\u00b7\15\0\6\uffff";
    static final String dfa_23s = "\16\uffff\1\2\4\uffff\1\1";
    static final String dfa_24s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\uffff}>";
    static final String[] dfa_25s = {
            "\1\14\17\uffff\1\16\14\uffff\1\13\30\uffff\1\15\14\uffff\1\16\32\uffff\1\16\5\uffff\1\16\5\uffff\1\16\5\uffff\1\12\13\uffff\1\4\1\5\1\uffff\1\6\1\7\1\10\4\uffff\1\11\1\3\1\2\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "5088:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_1 = input.LA(1);

                         
                        int index55_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA55_2 = input.LA(1);

                         
                        int index55_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA55_3 = input.LA(1);

                         
                        int index55_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA55_4 = input.LA(1);

                         
                        int index55_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA55_5 = input.LA(1);

                         
                        int index55_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA55_6 = input.LA(1);

                         
                        int index55_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA55_7 = input.LA(1);

                         
                        int index55_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA55_8 = input.LA(1);

                         
                        int index55_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA55_9 = input.LA(1);

                         
                        int index55_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA55_10 = input.LA(1);

                         
                        int index55_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA55_11 = input.LA(1);

                         
                        int index55_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA55_12 = input.LA(1);

                         
                        int index55_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA55_13 = input.LA(1);

                         
                        int index55_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index55_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "5109:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_1 = input.LA(1);

                         
                        int index56_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA56_2 = input.LA(1);

                         
                        int index56_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA56_3 = input.LA(1);

                         
                        int index56_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA56_4 = input.LA(1);

                         
                        int index56_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA56_5 = input.LA(1);

                         
                        int index56_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA56_6 = input.LA(1);

                         
                        int index56_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA56_7 = input.LA(1);

                         
                        int index56_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA56_8 = input.LA(1);

                         
                        int index56_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA56_9 = input.LA(1);

                         
                        int index56_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA56_10 = input.LA(1);

                         
                        int index56_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA56_11 = input.LA(1);

                         
                        int index56_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA56_12 = input.LA(1);

                         
                        int index56_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA56_13 = input.LA(1);

                         
                        int index56_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalSQLParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index56_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\50\uffff";
    static final String dfa_27s = "\1\4\47\uffff";
    static final String dfa_28s = "\1\12\3\0\44\uffff";
    static final String dfa_29s = "\1\u00b7\3\0\44\uffff";
    static final String dfa_30s = "\4\uffff\1\2\42\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\1\1\1\2\44\uffff}>";
    static final String[] dfa_32s = {
            "\1\4\11\uffff\1\4\31\uffff\1\4\2\uffff\1\4\13\uffff\1\4\1\uffff\1\4\2\uffff\1\4\10\uffff\2\4\1\uffff\1\4\2\uffff\4\4\3\uffff\1\4\3\uffff\1\4\1\uffff\3\4\3\uffff\1\4\5\uffff\1\4\2\uffff\1\4\1\uffff\1\4\52\uffff\1\4\3\uffff\2\4\1\uffff\1\4\10\uffff\6\4\4\uffff\1\4\1\3\1\2\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "10042:2: ( rule__TableOrAlias__TblAliasAssignment_3 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_1 = input.LA(1);

                         
                        int index104_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_InternalSQLParser()) ) {s = 39;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA104_2 = input.LA(1);

                         
                        int index104_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_InternalSQLParser()) ) {s = 39;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA104_3 = input.LA(1);

                         
                        int index104_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_InternalSQLParser()) ) {s = 39;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index104_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\53\uffff";
    static final String dfa_34s = "\1\2\52\uffff";
    static final String dfa_35s = "\1\12\1\0\51\uffff";
    static final String dfa_36s = "\1\u00b7\1\0\51\uffff";
    static final String dfa_37s = "\2\uffff\1\2\47\uffff\1\1";
    static final String dfa_38s = "\1\uffff\1\0\51\uffff}>";
    static final String[] dfa_39s = {
            "\1\2\11\uffff\1\2\31\uffff\1\2\2\uffff\1\2\5\uffff\1\2\5\uffff\1\2\1\uffff\1\2\2\uffff\1\2\10\uffff\2\2\1\uffff\1\2\2\uffff\4\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\3\2\3\uffff\1\2\5\uffff\1\2\2\uffff\1\2\1\uffff\1\2\46\uffff\1\2\3\uffff\1\2\3\uffff\2\2\1\uffff\1\2\10\uffff\6\2\4\uffff\3\2\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "10096:2: ( rule__FromValues__CAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA105_1 = input.LA(1);

                         
                        int index105_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred207_InternalSQLParser()) ) {s = 42;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index105_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 105, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\51\uffff";
    static final String dfa_41s = "\1\4\50\uffff";
    static final String dfa_42s = "\1\12\2\uffff\1\0\45\uffff";
    static final String dfa_43s = "\1\u00b7\2\uffff\1\0\45\uffff";
    static final String dfa_44s = "\1\uffff\1\1\2\uffff\1\2\44\uffff";
    static final String dfa_45s = "\3\uffff\1\0\45\uffff}>";
    static final String[] dfa_46s = {
            "\1\4\11\uffff\1\4\31\uffff\1\4\2\uffff\1\4\13\uffff\1\4\1\uffff\1\4\2\uffff\1\4\10\uffff\2\4\1\uffff\1\4\2\uffff\4\4\3\uffff\1\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\3\uffff\1\4\5\uffff\1\4\2\uffff\1\4\1\uffff\1\4\11\uffff\1\4\4\uffff\1\4\4\uffff\1\1\27\uffff\1\1\2\uffff\2\4\1\uffff\1\4\10\uffff\1\4\1\3\4\4\4\uffff\4\4",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = dfa_40;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "13210:2: ( rule__FullExpression__Group_1__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA129_3 = input.LA(1);

                         
                        int index129_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred231_InternalSQLParser()) ) {s = 1;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index129_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 129, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_47s = "\1\1\50\uffff";
    static final String dfa_48s = "\1\12\21\uffff\1\0\26\uffff";
    static final String dfa_49s = "\1\u00b7\21\uffff\1\0\26\uffff";
    static final String dfa_50s = "\1\uffff\1\2\45\uffff\1\1\1\uffff";
    static final String dfa_51s = "\22\uffff\1\0\26\uffff}>";
    static final String[] dfa_52s = {
            "\1\1\11\uffff\1\1\31\uffff\1\1\2\uffff\1\1\13\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\2\1\1\uffff\1\1\2\uffff\4\1\3\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\3\uffff\1\1\5\uffff\1\1\2\uffff\1\1\1\uffff\1\1\11\uffff\1\1\4\uffff\1\1\4\uffff\1\47\27\uffff\1\47\2\uffff\2\1\1\uffff\1\1\10\uffff\1\1\1\22\4\1\4\uffff\4\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_40;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "()* loopback of 13270:3: ( rule__FullExpression__EntriesAssignment_1_1 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA130_18 = input.LA(1);

                         
                        int index130_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred232_InternalSQLParser()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index130_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 130, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000003000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000010L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00E0000040000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000400000000000L,0x0000001000000800L,0x00F0FC0040000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0010800000000000L,0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x1744080885200000L,0x0920006C00010000L,0x0000000000000440L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0010120000000100L,0x0004000000000040L,0x0000000000001000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0010120000000102L,0x0004000000000040L,0x0000000000001000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000003000000000L,0x0000000000000020L,0x0000000040000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000001000000L,0x1804004000402000L,0x0010400500000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00E0000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040400000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x2000000000100000L,0x0000000040100000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x2000000000100002L,0x0000000040100000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000010L,0x0000000000000004L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000400200000000L,0x0000001000000800L,0x00F0FC0040004000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x8000000000000000L,0x00000001010A4004L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000C00000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0008000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x4000400000000000L,0x0002001000000800L,0x00F0EC0041041000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00E0200000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000200000000004L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00E0000000400000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0002000000000400L,0x0000A40010041000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0002000000000402L,0x0000A40010041000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0080000000000000L,0x0000000004000000L,0x00E0000000400000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L,0x0010EC0000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040008000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00E0000040000010L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0001200000000000L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080008000008L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000080008000008L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L,0x0000000040001000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x000000C078040000L,0x0000000200000700L,0x0000000000010000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000400000000000L,0x0000001000000800L,0x00F0EC0040000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000020200000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000030000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x4000410000000000L,0x0003001000000800L,0x00F0ECE0533E1000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000400000000000L,0x0080001000000800L,0x00F0EC0040000014L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L,0x0090EC0000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000010000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001001000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0017EC0000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000101520000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000101520000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000400200000000L,0x0000001000000800L,0x00F0FC00C0000004L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x002000010002FAF0L,0x200008000020000AL,0x0000000000000081L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000400000L,0x0000000001000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0040000008000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000450002000000L,0x0000001000000800L,0x00F0EC0040000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000880000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0000008000800000L,0x0000000000000020L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000000L,0x0000400000008000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000400200000000L,0x0000001000000800L,0x00F0FC0040000004L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000C0000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000280000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x4000400000000000L,0x4002001000000800L,0x00F0EC0041041000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x4000400000000002L,0x4002001000000800L,0x00F0EC0041041000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});

}